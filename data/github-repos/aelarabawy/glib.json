{"_default": {"1": {"aelarabawy": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/26feeeb40ccf24fe90521046c0b9b694fafe50e0", "message": "Merge branch 'master' of https://github.com/aelarabawy/glib"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/21947a3c42c1267715efd930183e38c177bd1b41", "message": "Create README.md"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/5d7303bcee4534e0f97c2c3f5a0c1dd659457b04", "message": "Initial commit"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "desrt": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/5aba9ca837205f8eddec138326430af9d2fd6b11", "message": "gmain: fix poll record comparison\n\nWe intend to keep the list of poll records sorted by (integer) file\ndescriptor, but due to a typo we are actually keeping it sorted by\npointer address of the GPollFD.\n\nFix that.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=11059"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/c476f7cd264ca3c69c002c4bcc1563b17cd976b2", "message": "gsignal: add a clarification to the docs\n\nAs evidenced by a mistake that I made recently, this documentation could\nuse a little bit of clarification."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/8ff5668a458344da22d30491e3ce726d861b3619", "message": "GSettings: delay backend subscription\n\nGSettings objects begin watching for changes as soon as they are created\nin order that they can emit the \"changed\" signal.\n\nIn the case of dconf, if we want to be able to emit the changed signal,\nwe need to go on the bus and add some match rules.  This requires\ncreating the dconf helper thread and also requires initialising GDBus\n(which creates another thread).\n\nSome users of GSettings are never interested in the \"changed\" signal.\nOne of these users is the glib-networking code that gets run every time\na new network connection is created.\n\nSome users are reporting that they are annoyed that simply establishing\na network connection would spawn two extra threads and create a D-Bus\nconnection.\n\nIn order to avoid doing unnecessary work for these simple uses, delay\nthe subscription until we know that we will actually need to do it.\n\nWe do this in a simple way, using a simple argument: in order for the\nuser to care that a value changed then they must have:\n\n 1) watched for a change signal; and then\n 2) actually read a value\n\nIf the user didn't actually read a value then they cannot possibly be\ninterested in if the value changed or not (since they never knew the old\nvalue to begin with and therefore would be unable to observe that it\never changed, since they have nothing to compare the new value with).\n\nThis really is a behaviour change, however, and it does impact at least\none user: the 'monitor' functionality of the GSettings commandline tool,\nwhich is interested in reporting changes without ever having known the\noriginal values.  We add a workaround to the commandline tool in order\nto ensure that it continues to function properly.\n\nIt's also possible to argue that it is completely valid to have read a\nvalue and _then_ established a change signal connection under the\n(correct) assumption that it would not have been possible to miss a\nchange signal by virtue of not having returned to the mainloop.\nAlthough this argument is true, this pattern is extremely non-idiomatic,\nand the problem is easily avoided by doing things in the usual order.\n\nWe never really talked about change notification in the overview\ndocumentation for GSettings, so it seems like now is a good time to add\nsome discussion, including the new rules for when one can expect change\nsignals to be emitted.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=733791"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/b768d0e4eaf15934067557cfee6b8beebca5df42", "message": "Add tests for {read,write}_all_async()\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=737451"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/223b5f757fe07cdec2879315965297a31edc3478", "message": "docs: explain inconsistency of _{read,write}_all()\n\nThese functions are inconsistent with our normal conventions in that\nthey set an output variable to a specified value, even in the case that\nan error is thrown.\n\nDocument very clearly that this should be considered exceptional.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=737451"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/c8d10470939847069b1a346d4c44f2adde3469f6", "message": "Add g_output_stream_write_all_async()\n\nSimilar to the previous patch, this commit contains a minor violation of\nnormal API conventions.  See the explanation in the previous commit\nmessage.\n\nHeavily based on a patch from Ignacio Casal Quinteiro.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=737451"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/76b890d0f104b6ee48a057fc58f1c6b495fdf2f2", "message": "Add g_input_stream_read_all_async()\n\nAdd an asynchronous version of _read_all().\n\nThis API is not fully consistent with the normal expectations of a\nnon-asynchronous version.  Consistency between the sync and async version is\nprobably more important.\n\nThe API will still bind correctly, but access to all functionality will\nnot be available: specifically, in the case of an error, higher level\nlanguages will be unable to determine how many bytes were successfully\nread before the error.  Most users will probably not want to use this\ninformation anyway, so this is OK -- and if they do need the\ninformation, then they can just write the loop for themselves.\n\nHeavily based on a patch from Ignacio Casal Quinteiro.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=737451"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/f4af8d1d007edcfa5949315be563b3aa8792f250", "message": "GApplication: ignore --help if not handling args\n\nIf the user didn't register any arguments for parsing, also ignore\n--help.  This fixes a regression in meld.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=737869"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/817f82da6c92d8a2ef0e0582037fd2bbd248798c", "message": "GOption: stop calling getopt()\n\nWe called getopt() to try to find out of the platform on which we are\nrunning defaults to strict POSIX-style argument handling (ie: flags\nfollowing the first filename are considered as further filenames rather\nthan flags).\n\nThis is the default case on BSDs, for example.  It is also the case on\nGNU systems with the POSIXLY_CORRECT environment variable set.\n\nUnfortunately many of our tools rely on being able to accept commandline\narguments in the non-strict ordering and the code for making these calls\nis spread widely (for example in Makefile fragments invoking some of our\nbuild tools).\n\nFor this reason we need to revert the getopt() check and only enable\nstrict POSIX mode in the case that the application explicitly opts into\nit using the _set_strict_posix() API.\n\nThis also fixs a failure to build on Windows due to missing getopt().\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=723160"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/e9b7c702404929c415320545905dcf008c9cd666", "message": "GHashTable: small docs fix\n\nWe use g_hash_table_unref() here, not g_object_unref()."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/ae52ab3d1170a393b0b734e9b9b37c3f107a7c03", "message": "GOption: add strict posix mode\n\nAdd a \"posixly correct\" mode to GOption to stop parsing arguments as\nsoon as the first non-option argument is encountered.\n\nWe determine the default value on the basis of duplicating the behaviour\nof the system getopt() implementation (which we directly check the\nbehaviour of at runtime).  On GNU systems this allows the user to modify\nour behaviour using POSIXLY_CORRECT.\n\nThe user can change the value by g_option_context_set_strict_posix(),\nwhich might be useful for some usecases of GOptionContext (as mentioned\nin the doc string of this new function).\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=723160"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/682bca095068d2823a129bebae42bb4f27f3e118", "message": "Add version macros for 2.44"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/26a240fd1004c76500c6be104364a3a12bf9a279", "message": "GLib 2.42.0"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/dceff8fc2c354b994793d8792455bee7ed195169", "message": "gmain: improve g_source_set_name thread safety\n\nStep up thread safety on g_source_set_name() to the same standard as all\nother GSource functions: after we are attached to a main context, this\nfunction should be threadsafe.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=736683"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/1cbdbef77209fe82239bd10f062425491cf256ae", "message": "gsource: clarify restrictions on non-existant IDs\n\nDocument that one must not use the \"by id\" source APIs with non-existent\nIDs.  The real justification behind this restriction is that the reuse\nof source ids makes it unsafe to call these functions unless you're\nabsolutely sure that the source exists and it belongs to you.  If you\ncall one of these functions on a source that may already have been\nremoved then you run the risk of finding someone else's source (with\nyour reused id).\n\nThis also bails us out of a slightly tricky situation with respect to\nthe threadsafety of g_main_context_find_source_by_id().  The fact that\nthis function doesn't return a reference implies that its return value\ncannot be safely accessed unless we already know for sure that a\nreference is being held elsewhere (by example, by the main context\nitself if we know that the source has not been removed).  The function\nitself, however, performs an access to the value, which could result in\na crash.\n\nIf we mandate that it is only valid to call this function on\nknown-to-exist source IDs then we dodge this problem.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=736683"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/3b8bc8bacf1fe31cda44fb5293711e87989388ea", "message": "GDesktopAppInfo: avoid inotify on missing dirs\n\nSome desktop file directories, like /usr/local/share/applications may be\nmissing on some systems.\n\nWhen we try to inotify on these directories, this will result in a\nevery-4-seconds poll being setup which is quite bad.\n\nThis is an issue that should be fixed in inotify itself but the problem\nis much larger there.  For now, we can work around it in GDesktopAppInfo\nby refusing to monitor missing directories.\n\nWe may get some spurious notifications of changes in the case that\n/usr/local/share or /usr/local/share/applications is created without\nactually adding desktop files, but spurious changes can already be\nreported in other cases, so that's OK.  We won't get (user-visible)\nnotification for a simple case of a completely unrelated file being\ncreated (however we cannot avoid the wakeup in this case due to how\ninotify works).  That's probably pretty theoretical, though, since files\nin /usr don't change much and for the home directory we're likely to\nhave at least ~/.config and ~/.local existing.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=736350"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/2f55c66c64d77de9fa7d5524468d424071aecc44", "message": "apps test: add new \"monitor\" subcommand\n\nWaits until something modifies a desktop directory, then exits.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=736350"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/08efbda7333cf1d349719e699bbcbb63b8ef09e4", "message": "GDesktopAppInfo: fix default app logic\n\nWe use \"tweaks\" structures to track how a particular directory impacts\nthe list of added, removed and default applications.  We maintain this\nset of tweaks for each directory, in a hash table, keyed by unaliased\nmime type name, in order to facilitate fast lookups.\n\nA typo in the logic for creating and maintaining the uniqueness of these\nstructures was causing the default app to be selected incorrectly from\ntime to time.  Fix that."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/e15ba53cdab91587721a38efa4eeea9acf871860", "message": "configure.ac: fix typo in last patch\n\n20e709d8b92e28d162c78b147afe4040e3a48b85 fixed some issues in\nconfigure.ac but also introduced a typo.  Fix that."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/2268628565e4fb098252e782e58709d6b525b48a", "message": "gdbus: Properly fix encoding of double arrays\n\nIt turns out that this bug actually would (sometimes) impact any sort of\nfixed-sized array with an alignment requirement of 8 due to incorrectly\ncounting the alignment inserted between the (aligned 4) array length and\nthe actual data.\n\nFix this properly and remove the exception for doubles.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=732754"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/5d0e295fb858cce1cba3f45019a844521b735777", "message": "GDBusMessage: add some G_UNLIKELY on error paths\n\nMore for documentation than anything else..."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/ecf1359191b2f796a7d63288652dd1a93525417d", "message": "GMutex (linux): detect and report some errors\n\nDetect the following two errors:\n\n - attempting to unlock a mutex that is not locked\n\n - attempting to clear a mutex that was not initialised or was\n   initialised but is still locked\n\nBoth of these are fatal errors.  We avoid using g_error() here because\ndoing so would involve calls back into the GMutex code, and if things\nare going off the rails then we want to avoid that.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=731986"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/49b59e5ac4428a6a99a85d699c3662f96efc4e9d", "message": "GLib: implement GMutex natively on Linux\n\nIf we have futex(2) then we can implement GMutex natively and gain a\nsubstantial performance increase (vs. using pthreads).\n\nThis also avoids the need to allocate an extra structure in memory when\nusing GMutex or GCond: we can use the structure directly.\n\nThe main reason for the increase in performance is that our\nimplementation can be made more simple: we don't need to support the\narray of options on pthread_mutex_t (which includes the possibility, for\nexample, of being recursive).\n\nThe result is a ~30% improvement in uncontended cases and a much larger\nincrease (3 to 4 times) in contended cases for a simple testcase.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=731986"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/5463c8cedbdf9ea2829f83c53876f21b34f57250", "message": "GDBusMessage: fast-path decoding of fixed arrays\n\nInstead of creating a separate GVariant for each of the 'y's in an 'ay',\nuse g_variant_new_fixed_array().\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=732754"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/958da1e9dc82fbb91862501226b8928faf2f9558", "message": "GDBusMessage: fast-path encoding of fixed arrays\n\nInstead of handling each item separately, handle the array as a whole.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=732754"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/d108ada4b98cb50fb1517f55c4f09acdaf3de471", "message": "GDBusMessage: simplify byteswapping\n\nRemove some duplication by simplifying our byteswap checks.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=732754"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/58250555224ffcd22be24b1da9025564090cdba0", "message": "gapplication tests: test resource base path\n\nRun some cases to make sure resource base path is behaving as we expect\nit to.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=722092"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/cea9de93c8838099661f5b54462f9c4b6410bfc9", "message": "GApplication: add a \"resource base path\"\n\nWe don't use this for anything inside of GApplication yet, but Gtk is\nabout to start using it to find various bits of the application (such as\nits menus, icons, etc.).\n\nBy default, we form the base path from the application ID to end up with\nthe familiar /org/example/app style.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=722092"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/42e04f4effe2a8759392f1485b5f4df85aefe48e", "message": "GActionEntry: one more docs fix\n\nHyperlink \"GVariant text format\"."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/c78037773b574b6f15915c23299eb7a2ff3c1900", "message": "GActionEntry: improve documentation\n\nDocument that giving %NULL for the activate handler is supported since\nGLib 2.40.  We documented this on GSimpleAction itself (where the\ndefault handler functionality is implemented) but expecting the user to\ndig that up is asking a bit much.\n\nAlso, add some more explicit documentation about the conditions under\nwhich each field is expected to be filled in.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=732429"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/000737612852d76fd1b85b42363901ec6ab12bd9", "message": "giochannel: avoid setting uninitialised length\n\nOur internal call to g_io_channel_read_line_backend() may return\nG_IO_STATUS_ERROR, in which case two things will be true:\n\n - the GError will have been set (if appropriate)\n\n - the &got_length return value may not have been set\n\nSince it's our convention to leave 'out' parameters untouched in\nexception cases, this is perfectly fine.  Unfortunately,\ng_io_channel_read_line(), in wrapping this internal function, always\npromotes the length parameter, even in the case of error.\n\nStop doing that in order to avoid overwriting the callers's variable\nwith junk in the error case.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=731339"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/dce88768dc9bedaa46eb310a1f64562ea1247b68", "message": "all: remove use of 'register' keyword\n\nWe should have done this a decade ago...\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=730293"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/66779064368742f04eb0e45346a3b4fb53a8d6ca", "message": "GObject: tweak property deprecation warnings\n\nDon't emit property deprecation warnings for construct properties that\nare being set to their default value during construction, but _do_ emit\nthem in all cases when the property was explicitly given to\ng_object_new().\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=732184"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/4d327bdcb0fe94901c6d207afa90477a52f88df2", "message": "GTimeZone: remove some dead code\n\nRemove code that parsed out and stored the unused isstd and isgmt\nfields."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/59c9291f5f12492bab5bb303af41a38b930be97b", "message": "Revert \"gsettings: remove long-deprecated \"schema\" property\"\n\nThis reverts commit cf9b162e0d0defaff2ad5c85aeaf7af0899ad22f.\n\nIt turns out that there are still a very large number of users of this\nAPI.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=732102"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/d0e706178584d2251b11f71321cdbfee5af04847", "message": "GObject: warn on use of deprecated properties\n\nBy default G_PARAM_DEPRECATED means absolutely nothing.  We only emit a\nwarning if G_ENABLE_DIAGNOSTIC is set to '1' and then, only on sets.\n\nTurn the logic on its head: emit the warning by default, unless\nG_ENABLE_DIAGNOSTIC is set to 0.  In order to avoid a torrent of output, only\nemit a warning once per property name.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=732184"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/f727c820b823178285d90b3f033f7d2a4d3cdf9f", "message": "gvariant tests: workaround libc/compiler \"issue\"\n\nmemcmp() is declared by glibc as follows:\n\n  /* Compare N bytes of S1 and S2.  */\n  extern int memcmp (const void *__s1, const void *__s2, size_t __n)\n       __THROW __attribute_pure__ __nonnull ((1, 2));\n\ndespite the fact that it is valid to call it with a null pointer if the\nsize is zero.\n\ngcc 4.9.0 contains a new optimisation that sees that we pass a pointer\nto this function and concludes that it certainly must not be null,\nremoving a later check and thereby causing a crash.\n\nWe protect the invocation of memcmp() with a condition to prevent gcc\nfrom making this false assumption (arguably under wrong advice from\nglibc)."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/cf9b162e0d0defaff2ad5c85aeaf7af0899ad22f", "message": "gsettings: remove long-deprecated \"schema\" property\n\nThis property has been deprecated for three years after only having\nexisted for one.  We've wanted to reuse the name for all that time, so\nlet's try to actually remove it now and see if we can get away with it.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=732102"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/f2ceb74e91e05e9556622bc2cde7ab57cbc30ea3", "message": "gsettings test: stop testing long-deprecated API\n\nWe want to try taking this away now...\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=732102"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/9362a1b2d987125a8aa0723b916d29aaaece329a", "message": "configure.ac: fix check for futex and eventfd\n\nWe were using AC_LANG_PROGRAM to build a program to test for our ability\nto call syscall (__NR_futex, ...);.  This macro adds \"main () { ... }\"\naround the provided code segment automatically.  The provided code\nsegment provided its own main() function, however.\n\nThe result looked something like:\n\nint main (void) {\n  int main (void) {\n    ...\n  }\n}\n\nwhich worked on GCC, but not on clang.\n\nLet's fix that.  Let's fix the same mistake copied over for eventfd()\ndetection while we're at it."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/bef557e55d8ab89b324ff2099b2621254aeb3929", "message": "gatomic: disable GCC extension atomics for clang\n\nclang defines the macro that we use to test for GCC's extension support\nfor C11 atomics, but doesn't define the extension in the same way.\nCheck for clang and disable the macros again if we find it.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=731513"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/fcdd25a96eb33c389f381cacce42e6d4f2912c5c", "message": "gparam: change value of G_PARAM_EXPLICIT_NOTIFY\n\nGParamSpec has a possibility of user-introduced flags, and we didn't\nrespect that with the addition of _EXPLICIT_NOTIFY.\n\nChange the documentation for the maximum number of user flags to 10,\njust to pick a somewhat random number.  The documentation here was never\ncorrect anyway -- it previously claimed that as many as 38 flags were\npossible.\n\nMeanwhile, move G_PARAM_EXPLICIT_NOTIFY next to _DEPRECATED in order to\navoid conflicts with low-numbered user flags (which are in use by at\nleast evolution-data-server).\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=731341"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/545b44444b365a4e3ba98ec71fab4f12293a229c", "message": "gtype: remove interface-after-init exceptions\n\nA year ago, we tried to remove support for adding interfaces on\nalready-initialised types.  There were problems with the C++ and C#\nbindings at the time, so we added exceptions to give them a bit more\ntime to catch up.\n\nIt's already one cycle after when these exceptions were planned to be\nremoved, so let's take them out now.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=697229"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/f2f66bfe45f41d18e7437341e5ebf4c70d815958", "message": "docs: warn about installing properties after init\n\nLeave ourselves a little wiggle room: if people install properties after\ninitialisation then we reserve the right to handle that in a way that\nmay not be threadsafe.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=698614"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/85e9455f68c6cc6093a1ede1c5f15587bba08b51", "message": "Revert \"GObject: prevent installing properties after init\"\n\nThis reverts commit ddb0ce14215cd62c7a2497d6cf9f2ea63c40ebb5.\n\nConflicts:\n\tgobject/gobject.c\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=698614"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/db0e43d25a5316f3a6f2f31712a0b8359e247a20", "message": "gatomic: use GCC C11-style atomics, if available\n\nGCC does not yet support ISO C11 atomic operations, but it has\ncompatible versions available as an extension.  Use these for load and\nstore if they are available in order to avoid emitting a hard fence\ninstruction (since in many cases, we do not need it -- on x86, for\nexample).\n\nFor now we use the fully seqentially-consistent memory model, since\nthese APIs are documented rather explicitly: \"This call acts as a full\ncompiler and hardware memory barrier\".\n\nIn the future we can consider introducing new APIs for the more relaxed\nmemory models, if they are available (or fall back to stricter ones\notherwise).\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=730807"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/875eeb2ca1d32fc0fdd70518f7d6f4dc8de1a287", "message": "gatomic: whitespace fixes\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=730807"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/aa0e8735c14ebb3cbfa38d441a6a05bb978e23b2", "message": "gatomic: fix typo in deprecation attribute\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=730807"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/d558e87c65517e3646f3b8ebc8f11448e25ccbf2", "message": "gtype: guard uses of new fundamental type check\n\ng_type_is_fundamentally_a (see bug 730984) is a new API/ABI and is\nmarked with a version macro.  We should therefore avoid its\nunconditional use from G_IS_OBJECT() and G_IS_PARAM_SPEC() which are\nAPIs that have been around for a long time.\n\nThis prevents deprecation warnings from being emitted when these\nfunctions are used with an older GLIB_VERSION_MAX_ALLOWED and also\nprevents linking to the new ABI in that case (so that it's possible to\nuse the resulting binary with an older version of GLib).\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=731335"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/0208861a13afc30964fb4f409525fa1cdb544cf4", "message": "test: add test for explicit-notify properties\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=731200"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/bbdb2345fc7e5a57cb7af90ab0bf8ced437ada24", "message": "gobject: add 'explicit notify' GParamSpec flag\n\nAdd a flag to prevent the automatic emission of the \"notify\" signal\nduring g_object_set_property().\n\nIf this flag is set then the class must explicitly emit the notify\nfor themselves.  This is already standard practice on most classes, but\nwe cannot simply remove the existing behaviour because there are surely\nmany cases where it is needed.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=731200"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "xclaesse": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/71944b1bfd2cff57e889b806d001458dce6fa2b5", "message": "gstrfuncs: Add g_strv_contains()\n\nIncludes unit tests.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=685880"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "danwinship": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/e784a4ba326e939b74578f417202833d3231c7ac", "message": "gio/tests: add a socket-listener test\n\nAdd a GSocketListener test program. Currently the only test is a\nregression test for bug 712570 (based on a standalone bug reproducer\nprovided by Ross Lagerwall)."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/7f5c862e166a6f288d8d0ec2622685316f64b87c", "message": "GTlsClientConnection: loosen the semantics of \"use-ssl3\"\n\nIf SSL 3.0 has been disabled (at the host, application, or library\nlevel), then the \"use-ssl3\" property becomes a \"fail-immediately\"\nproperty.\n\nDespite the name, the point of the property wasn't really specifically\nto use SSL 3.0; it was to allow fallback when talking to broken\nservers that do SSL/TLS negotiation incorrectly and break when they\nsee unexpectedly-high version numbers. So if we can't fall back to SSL\n3.0, then the \"use-ssl3\" property should fall back to TLS 1.0 instead\n(since there are hosts that will reject a TLS 1.2 handshake, but\naccept a TLS 1.0 one).\n\nglib-networking is being updated to implement that behavior, so update\nthe documentation here.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=738633"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/7103484017ff000d01ed94567539d37fa09b32b2", "message": "gnetworking.h.in: move \"#undef interface\"\n\nThe win32 headers do:\n\n  #define interface struct\n\nwhich is just evil and breaks other code that assumes it can use\n\"interface\" as a variable name. gnetworking.h was supposed to be doing\n\"#undef interface\" after including the win headers, but it did it too\nsoon, resulting in it getting redefined by a later include. Fix this.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=738551"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/982d0e11d702ff49f69cb90cb65dd71ebd3df54d", "message": "GTlsCertificate: fix loading of bad certificate chains\n\ng_tls_certificate_new_from_file() was only loading the complete chain\nif it was fully valid, but we only meant to be validating that it\nformed an actual chain (since the caller may be planning to ignore\nother errors).\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=729739"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/b3e3ed73864143e732c4d65441eaec086a3ab83e", "message": "gmain: don't pass the same fd to g_poll() multiple times\n\nIf a given fd is being polled by multiple sources, we used to pass it\nmultiple times to g_poll(), which is technically illegal (and not\nsupported by the select()-based fallback implementation of poll() in\ngpoll.c), and also made it more likely that we'd exceed the maximum\nnumber of pollfds.\n\nFix it to merge together \"duplicate\" GPollFDs. The easiest way to do\nthis involves re-sorting context->poll_records into fd order rather\nthan priority order. This means we now have to walk the entire pollrec\nlist for every g_main_context_query() and g_main_context_poll(),\nrather than only walking the list up to the current max_priority.\nHowever, this will only have a noticeable effect if you have tons of\nGPollFDs, and we're already too slow in that case anyway because of\nother O(n) operations that happen too often. So this shouldn't change\nmuch (and the new poll API will eventually let us be cleverer).\n\nRemove some win32-specific code which did the same thing (but was\nO(n^2)).\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=11059"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/0501bf26b924cdaccf9c1c38522f267b7a520ef4", "message": "gio/tests/tls-certificates: fix\n\nda053e34 broke the tls-certificates test by requiring the backend to\nimplement g_tls_certificate_verify() (which the test TLS backend\ndidn't). Add a trivial implementation to make the test pass again;\nwe'll need something more complicated when we add tests that are\nsupposed to get errors."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/b88fdf0b0f7e6acf109745322e27fe7869e5267e", "message": "docs: hyphenate \"High-level\" and \"Low-level\""}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/015db2d2af3d5a3f31909c7ffb5307e5141d8fbd", "message": "gio/tests/socket: add some missing g_assert_no_error()s"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/634b69219979c084837c59874e5b2aec01a1d3e4", "message": "gsocket: Set SO_NOSIGPIPE on sockets on Darwin\n\nThis is a best-effort approach to preventing SIGPIPE emissions on Darwin\nand iOS, where they continue to be intercepted by the Xcode debugger\neven if SIG_IGN prevents them crashing the program.\n\nThis is similar to the existing code which sets MSG_NOSIGNAL on all\nsend() calls. MSG_NOSIGNAL doesn't exist on Darwin though.\n\nBased on a patch from Philip Withnall.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=728730"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/7b34e07ac4576b75bcf932fd8dfeca23242ea1b1", "message": "gsocket: move set_fd_nonblocking() into g_socket_constructed()"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/be0b921115c319186c678a054958f405b8c90a2b", "message": "Fix up failure-to-see-expected-message logging\n\nWhen GLib had been told to expect message X, but then actually saw\nmessage Y, it would log the \"did not see expected message\" error with\nmessage Y's log level and domain, which makes no sense. Change it to\nlog with domain \"GLib\" and G_LOG_LEVEL_CRITICAL instead.\n\nAlso, include the expected domain in the error message, so that if\nthat's the reason why the expectation didn't match, you can tell that\nfrom the error message.\n\nUpdate glib/tests/testing.c for these changes; for all other test\nprograms in GLib and elsewhere, this change should not break any\nexisting tests, it should only improve the output on failure.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=727974"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/f8d42cefbddf4930e40d6866e7002e556186763e", "message": "gtask: fix leak in example code"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rosslagerwall": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/9a6e01ea5bde908e2bcce4dc66d89483e84fd837", "message": "gio: Prevent hang when finalizing GThreadedSocketService\n\nIf all users of a GThreadedSocketService release their references to the\nservice while a connection thread is running, the thread function will\nrelease the last reference to the service which causes the finalize to\ndeadlock waiting for all threads to finish (because it's called from the\nthread function).\n\nTo fix this, don't wait for all threads to finish in the service's\nfinalize method.  Since the threads hold a reference to the service,\nfinalize should only be called when all threads are finished running (or\nhave unrefed the service and are about to finish).\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=712570"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/0728e62be8bf247f9d097822efd26312367ff133", "message": "doc: Clarify documentation regarding g_file_replace and etags\n\nClarify that with g_file_replace, a non-NULL etag is only checked if the\nfile already exists.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=736286"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/226c292b6ab95014648e9fc0a082bb6c26eeccc8", "message": "gio: Prevent hang writing to a large GMemoryBuffer\n\nFix a hang due to overflow by using unsigned numbers and explicitly\nchecking if the number overflows to zero.  This also fixes the previous\nlogic which assigned an int which may be negative to an unsigned number\nresulting in sign extension and strange results.\n\nUse gsize rather than int to allow for large buffers on 64 bit machines.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=727988"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/5a6f13d16f38ea0a6c9d48332b7e3932b7f3b7d4", "message": "gio: Prevent hang writing to a large GMemoryOutputStream\n\nFix a hang due to overflow by using unsigned numbers and explicitly\nchecking if the number overflows to zero.  This also fixes the previous\nlogic which assigned an int which may be negative to an unsigned number\nresulting in sign extension and strange results.\n\nUse gsize rather than int to allow for large streams on 64 bit machines.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=727988"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "magcius": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/91802bbf2bfd336aec640c9412f955b1df8f80ae", "message": "gparam: Make the documentation clearer for CONSTRUCT_ONLY properties\n\nIt's not that the properly will only be set on construction, it's that\nit *can* only be set upon construction."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/5a0a85e444f5f7d18e4d20fc0340afb58f732e5f", "message": "gdesktopappinfo: Fix copy/paste typo from e24e89b\n\nCommit e24e89b accidentally ironically introduced a typo when replacing\nthe code with symbolic contents. Specifically, \"Added Associations\" was\nreplaced with \"Default Applications\" when reading defaults.list, giving\na warning about the file containing a \"Default Applications\" group.\n\nIf this was intended, it should have not been lumped in with a cleanup."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/38a061422532b3d7b8bce0988f3767806ac28f8f", "message": "GApplication:handle-local-options: document return value\n\nThe return value for this signal was documented in the prose, but not\nproperly in a Returns: stanza.  Fix that."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/8061694c496094015bfd3959cbece7ab158ef6ef", "message": "goption: Add G_OPTION_FLAG_NONE\n\nThis is helpful to better document code, as G_OPTION_FLAG_NONE is more\nreadable than 0."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/84ec6b4d78928d4b51d64f17b4bde56314e75b1b", "message": "g_application_add_main_option: fix type signature\n\nThe flags argument is a GOptionFlags so use that type instead of 'int'."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/4482977238ae80f64c2fe318d1500f4662c73980", "message": "Fix some introspection warnings"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "drawoc": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/89e663107ecefd6db7ea24d2ffdf935020222947", "message": "gio: Implement g_win32_app_info_launch_uris for windows."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/90f0eb101f108ee4096b5b3ef2d570ce588abb64", "message": "gio: Implement g_app_info_get_default_for_uri_scheme for windows."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fanc999": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/f6bbd19beb41aeb52426ba96b3c39c1b09f6bc17", "message": "GSettings Registry Backend: Init cache_lock Earlier\n\nIn commit 8ff5668, we are subscribing the GSettings backend later, but this\nmeant that we need to initialize cache_lock earlier, as we might try to\nuse that lock before a change notification is issued to subscribe the\nbackend, which would then cause an access violation if we are trying to\nread GSettings values, as that lock is used to access the Windows Registry.\n\nInitialize cache_lock once we initialize the GSettings Registry backend,\nand delete it upon finalize, so that g_settings_read_from_backend() can\nproceed normally, even if the GSettings backend is not yet subscribed.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=740413"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/012c9dcd820f9679784181568f97c0e1e6b5e37f", "message": "gnetworking.h.win32: Move \"#undef interface\"\n\nThis is a follow-up commit due to the fix in gnetworking.h.in in commit\n7103484 (gnetworking.h.in: move \"#undef interface\")."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/d2f3e1190719d655a0f75a6a08ed6185ea558032", "message": "MSVC Builds: Update \"Installation\"\n\nThis updates the glib-install.[props|vsprops] so that the headers to\n\"install\" for the build are kept up-to-date.  Note that this has been\ngenerated by a script, so that this hopefully means that the header\n\"installation\" can be maintained along with the autotools files for most\nuses, to simplify maintenance."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/52b5a06dea63c9489e76862f16895b08118aa63f", "message": "Visual C++ Builds: Update README.txt's\n\nUpdate notes about usage of PCRE and for people attempting to build GLib\non a Chinese, Japanese or Korean locale."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/3d89041220a2a783b5706763b35778f9154c0883", "message": "MSVC Builds: Generate glib-mkenums If Possible\n\nAs glib-mkenums would likely be used in the building of the other\ncomponents of the stack, such as Cogl, Clutter and\ngsettings-desktop-schemas, generate that using a Python script (if Python\ncan be found) and \"install\" it."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/98d37f203e1f60f45a761f3be74a5e6864f5d9d6", "message": "MSVC 2012/2013 Support: Update Property Sheet Creation\n\nBe a bit more careful when copying and updating the property sheets, so that\nwe don't accidently change fields with '10' in them that are actually not\nindicating the Visual Studio version."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/72de983469ce1db81134ed3b5e2af77b56170bf3", "message": "valgrind.h: Disable Valgrind features on x64 Visual C++ Builds\n\n...so that builds of GLib on x64 Visual C++ can be restored, as the build\nfails in line 449 of valgrind.h as it only supports MinGW/GCC for x64\nWindows and simply will not build otherwise.  Make the x64 Visual C++\nbuilds compile again by defining NVALGRIND when GLib is being built for\nWindows on x64 Visual C++.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=732465"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/91b9aef0c9988fcab6adb7be3af46953c1c558c9", "message": "MSVC 2010+ Projects: Update \"Installation\" Process\n\nCurrently, due to the way that Visual Studio 2010+ projects are handled,\nthe \"install\" project does not re-build upon changes to the sources, as it\ndoes not believe that its dependencies have changed, although the changed\nsources are automatically recompiled.  This means that if a part or more\nof the solution does not build, or if the sources need some other fixes\nor enhancements, the up-to-date build is not copied automatically, which\ncan be misleading.\n\nImprove on the situation by forcing the \"install\" project to trigger its\nrebuild, so that the updated binaries can be copied.  This does trigger an\nMSBuild warning, but having that warning is way better than not having an\nup-to-date build, especially during testing and development."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/6eb55b9a33b3b025859e1a08e11c89719d542d41", "message": "Support Building Using Visual Studio 2013\n\nLike the Visual Studio 2012 project files, the Visual Studio 2013 files are\nlargely the same as the Visual Studio 2010 project files, so support\nVisual Studio 2013 by updating the autotools scripts that is used for\nVisual Studio 2012.  This means that project files for Visual Studio 2012\nand Visual Studio 2013 can be maintained by simply maintaining the Visual\nStudio 2010 project files, adding minimal maintenance overhead."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aruiz": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/6c080721fc1879d8c92176fe630e00122110ea2e", "message": "glib: Improve documentation for g_strfreev()\n\nFixes #740309."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "amigadave": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/61cecd5a68743542baf685b47e8a4a5f4a98d205", "message": "docs: Add missing opening parenthesis\n\nhttps://mail.gnome.org/archives/gnome-web-list/2014-November/msg00003.html"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/03b510fde17b130dd7273cee6a65e2d54ff85fff", "message": "gfile: Fix memory leak in g_file_move()\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=729703"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/c4fc3aa5258bee806d19fa587355f0daa093e097", "message": "valgrind.h: Update to latest upstream version\n\nAvoid crashes in g_type_free_instance() on mingw64.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=730198"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "IMFTC": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/1edd463137067ccb7533f3a1e072dc516bb32d86", "message": "docs: Update GParamFlags docs.\n\nRemove reference to G_PARAM_READWRITE from GParamFlags' description,\nsince commit 6c395244a5db added G_PARAM_READWRITE to GParamFlags.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=726037"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "swilmet": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/20f6cc2a10ba26860e7a6d27c100deadb5497772", "message": "Simplify code that uses g_queue_insert_before() and insert_after()\n\ng_queue_insert_before() and g_queue_insert_after() now accept a NULL\nsibling.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=736620"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/8a90f5e9f6da778743aaec365ee4ceb62b717130", "message": "GQueue: accept a NULL sibling for insert_before() and insert_after()\n\nIt simplifies a little bit some code that inserts data relative to a\nGList location, that might be NULL for the tail of the queue. A NULL\nsibling is probably less useful for insert_after(), so it's more for\nconsistency with insert_before().\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=736620"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/cb2c6eef0a5a044b39f8c92360e3e01375e23d10", "message": "gslist: indentation fix"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/66ef10eec9f4acae19335373fe7cbbebed5ceb60", "message": "docs: syntax highlighting for the code examples\n\nIn the sections Concepts, Tools and Tutorial.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=736914"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/dfaaf37338533b2412800c61b342b296fff7c6cf", "message": "Update URLs library.gnome.org -> developer.gnome.org"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/25990eb2b6da94e1d03631eab8a952ef84cb9986", "message": "docs: various small fixes\n\nFor the GPtrArray example, several variables declared on the same line\nis harder to read and to work with (to move, remove or comment a single\nvariable declaration)."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/97f34bacce1fa59c6b3ee05bdbc2ab96a8ad9a4e", "message": "doc: small improvement and fixes\n\n- Add an example to g_strsplit(), like it is done for g_strsplit_set().\n\n- GTK-Doc generates a list if a \"1.\" is at the beginning of a line.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=732704"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/48c7d041e2d046462156056d297f609465fce6ab", "message": "doc: improve doc of g_input_stream_read()\n\nI recently needed to nul-terminate the returned buffer, and I wasn't\nsure if g_input_stream_read() does that or not. I've checked\nglocalfileinputstream.c, which calls read(2) which doesn't nul-terminate\nthe buffer. So I assume it's the same behavior for all GInputStream\nsubclasses.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=732704"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/b0c7221c559693baf0735d6562940e0eec0a798c", "message": "doc: improve doc of g_subprocess_wait()\n\nWhen using this API, I wasn't sure what the cancellable does. I think\nit's generally desirable to kill the subprocess if the wait operation is\ncancelled, since in this case the application is no longer interested by\nthe subprocess.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=732704"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/ffe286e647ce9ba9bb8e1631ba3cf0194038f438", "message": "doc: improve doc of g_file_equal()\n\nA critical message is printed when a parameter of g_file_equal() is not\na GFile. When we read the documentation before this commit, we can think\nthat passing NULL or another type than GFile is allowed, but it is not\nthe case.\n\nAnother option is to allow NULL parameters. But for consistency with\ne.g. g_str_equal(), it's probably better to keep the code as is.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=732357"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/82352ab8e7bc0d499a1e1a805ba4c5f896d3ba8c", "message": "doc: various improvements\n\n- g_subprocess_launcher_spawn() and spawnv(): there is no other way\n  AFAIK to create a GSubprocess from a launcher. So these\n  functions are not \"convenience helper\".\n\n- annotate optional arguments for g_shell_parse_argv().\n\n- other trivial fix\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=732357"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "owtaylor": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/66fc112c742f56f85fc34b458325e87df4cd78d0", "message": "GDBusInterfaceVTable: clarify memory handling for the method() virtual function\n\nThere are two consistent interpretations that could be taken for memory\nhandling of the 'invocation' parameter passed to the method_call() virtual\nfunction of GDBusInterfaceVTable\n\n - A reference is passed (transfer full) to the method_call() virtual function,\n   and that reference is then passed (transfer full) to the return_value/error\n   functions on GDBusMethodInvocation.\n - An internal reference is retained from the point where method_call() is called\n   until the return_value/error function is called.\n\nSince the return_value/error functions were already marked (transfer full),\nwe use the first interpretation, annotate the invocation parameter of\nmethod call as (transfer full) and describe this in the documentation, along\nwith the idea that you are always supposed to call one of the return_value/error\nfunctions.\n\nSee bug 738122 for the leak this caused in GJS.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=738259"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/011bf876e75c93c6b3fb9dd24d9458d881d4b36b", "message": "Add simple instance count facility\n\nAdd GOBJECT_DEBUG=instance-count which enables internal accounting\nof the number of instances of each GType, and g_type_get_instance_count()\nto retrieve the result.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=354457"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/d0083f7e2dd621c6b78496bdb6ecf5d580c5e110", "message": "Revert \"gatomic: statically assert that our assumptions hold\"\n\nThis reverts commit 7269d75321b9d2a967a59fb35f243397f577eb41.\n\nAdding G_STATIC_ASSERT() into a header file caused compilation\nproblems with at least one app (Anjuta). Reverting to keep\nGNOME continuous testing running.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=730932"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "epienbroek": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/92d67358986c3be48ccbd4135b53ea591f15ea86", "message": "Guard g_inet_address_mask_equal against invalid input\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=733338"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/9f69534030f963183ac5398889630a641a71409b", "message": "Prevent an invalid @CARBON_LIBS@ from appearing in the .pc files\n\nFixes static linking when using the glib pkgconfig file.\nRegression was introduced in commit 8d037c6 (bz #668152)\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=731657"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mcatanzaro": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/aabc3a41c36f89363884b2a61dd9b038e5b5c214", "message": "Fix another ancient docs typo"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/4454b815367831a71b1ae00b0182b5b389a78df2", "message": "Fix typo"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/02c6e908d7a1ea85ba4fdc39e2c4f8d45d8be739", "message": "Fix typo"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/29c48f623fdcf516d6123ee9544087e1f512ed53", "message": "Fix typo"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/c3842d1969feace4bfb12919be730e75e53877d9", "message": "Fix old wiki links"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/753e6ef7d78374072141bbf8fc0f3f3d7e1b57db", "message": "docs: fix typos"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/d552a1f125eac718b988cdae654e36645c685343", "message": "docs: fix a broken sentence"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/39d70301c58b0e79f90fc2729eecc10ba5c3caf9", "message": "trivial: docs: add some missing commas"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "benzea": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/18745ff674896c931379d097b18d74678044668e", "message": "Allow hash table destroy notifiers to remove other entries\n\nWith this patch it is fine to call g_hash_table_lookup and\ng_hash_table_remove from destroy notification functions. Before\nthis could lead to an infinitie loop if g_hash_table_remove_all\nwas used.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=695082"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ebassi": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/cb042bf5b5750a31f93b122b49f5a90975a5ed6a", "message": "docs: Add missing get_type() reference to gio.types\n\nGSubprocessLauncher is a GObject, so we need to tell gtk-doc to inspect\nit.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=738675"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/f948a7148340012a20286dfb94912be73c32c1f6", "message": "gtype: Remove unused header\n\nGType does not use GBSearchArray any more."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/24ab95582b03ec947fc512cb85545fe87026baf1", "message": "docs: Replace <function> XML tag with back ticks\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=731050"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/a0c3fdfae0af260bd90adbb4f784afc21dbb9b24", "message": "docs: Replace <structname> tags with back ticks\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=731050"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bfaf": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/aa401aef878eb0dc02e0c4523cadceaa714ac012", "message": "Updated Bulgarian translation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bgilbert": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/0bfea5e7728bf7bc9e25da3c828b60c6fc9c776f", "message": "Fix g_cond_timed_wait() timeout with !CLOCK_MONOTONIC\n\ng_get_monotonic_time() and g_get_real_time() now always use different\nclocks, so we cannot avoid correcting for their offset.  Fixes failure\nto time out on Mac OS X.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=738197"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aleksander0m": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/549e7b0de62b9f31825f0c24f41cfa7eaad97360", "message": "garray: initialize allocated size in g_byte_array_new_take()\n\nInternal allocation size (array->alloc) was being kept to 0 when a new\nGByteArray was created from an already existing heap-allocated buffer.\n\nAmong other things, this was making g_byte_array_set_size() fully clear all\nthe buffer contents (not just the newly allocated memory) when\nG_DEBUG=gc-friendly was being used...\n\n  if (G_UNLIKELY (g_mem_gc_friendly))\n    memset (array->data + array->alloc, 0, want_alloc - array->alloc);\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=738170"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aconchillo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/da053e345b4729a8a166eca54da257ae9accc7b1", "message": "tlscertificate: add support for certificate chains\n\nThis patch changes the behavior of the following functions:\n\n   g_tls_certificate_new_from_pem\n   g_tls_certificate_new_from_file\n   g_tls_certificate_new_from_files\n\nIf more than one certificate is found it will try to load the chain.\n\nIt is assumed that the chain will be in the right order (top-level\ncertificate will be the last one in the file). If the chain cannot be\nverified, the first certificate in the file will be returned as before.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=729739"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MiloCasagrande": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/6cd13d34fe9db74dd1d6a144630262ab6306a95f", "message": "Updated Italian translation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hadess": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/e24e89bc0777044b41f180dbf3891f852b4a749e", "message": "gdesktopappinfo: Use symbolic names in the code\n\nWe have #defines for the key file groups, so use them to avoid typos.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=736273"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/88b284c07051ccf5a7561d04236d83c8bb61993a", "message": "GDateTime: Add guards to g_date_time_new()\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=728401"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lantw44": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/45344f362256d725e8e8b5d334b5062853554115", "message": "GCredentials: Fix ABI break when adding NetBSD support\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=728256"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hiberis": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/e1b84e3296c1ab0cba29ce2114505ae9f5002cae", "message": "Include <stdint.h> in glib/valgrind.h\n\nThis ensures the uintptr_t type is defined on mingw-w64.\n\nFixes compile error:\n\nmake[4]: Entering directory\n`/home/abuild/rpmbuild/BUILD/glib-2.42.0/gobject'\n  CC       libgobject_2_0_la-gtype.lo\nIn file included from gtype.c:24:0:\n../glib/valgrind.h: In function 'VALGRIND_PRINTF':\n../glib/valgrind.h:5601:4: error: unknown type name 'uintptr_t'\n    uintptr_t _qzz_res;\n    ^\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=737143"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tonghuix": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/f550be0c6ab978ded5c9e94d98858a26b2682dca", "message": "update zh_CN translation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "askhl": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/a2d4a612c67951a0c9090b4225ccd1774af414df", "message": "Updated Danish translation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "smcv": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/7db1baf59078c667ac1ae43f839b2b1866e65a87", "message": "GVariant: say that serialized form needs an out-of-band length\n\nThis confused me for a while, because it isn't the same as D-Bus.\nLike GVariant, the D-Bus serialization needs an out-of-band\nendianness and type indicator, but unlike GVariant, serialized\nD-Bus objects encapsulate their own length (often by starting with\na byte-count). This does come at some redundancy cost, so I can see\nwhy the more efficient GVariant format does this the way it does;\nbut it's a difference between D-Bus and GVariant that seems worth\ncalling out.\n\nIt's also relevant for the designers of file or message-framing\nformats: with D-Bus serialization it would be feasible to say \"the file\nstarts with a little-endian D-Bus variant, followed by...\",\nbut in GVariant you wouldn't be able to deserialize the variant\nunless you either assume that it extends to end-of-file, or have\nan explicit length.\n\nBug: https://bugzilla.gnome.org/show_bug.cgi?id=736975\nReviewed-by: Ryan Lortie"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/9060a85193a0e15f67568ea6cac3a082fbcab30f", "message": "glib-init: statically assert that we have 8-bit bytes\n\nconfigure.ac assumes this.\n\nBug: https://bugzilla.gnome.org/show_bug.cgi?id=730932"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/7269d75321b9d2a967a59fb35f243397f577eb41", "message": "gatomic: statically assert that our assumptions hold\n\nThis code assumes that int is exactly 4 bytes, and that pointers\nare either 4 or 8 bytes, on platforms with __ATOMIC_SEQ_CST.\nIn practice this is going to be true.\n\nBug: https://bugzilla.gnome.org/show_bug.cgi?id=730932"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mirosnik1": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/4fb9421528777e80beeae1e85eafb46e44f5b408", "message": "Updated Serbian translation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sshedmake": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/5486481fab3fc149aa41a440cfe63bcfa8567926", "message": "Updated Marathi Translations"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sdroege": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/bb6a77afa328f16568a41b26de75f255dcfc9daf", "message": "grand: Only use rand_s() when targetting Visual Studio >= 2005\n\nIt did not exist before. Fall back to the current time plus\nprocess id on older targets. This makes GLib work again on\nWindows XP.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=736458"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/bebfd422af0a2fef422489d04f3b1d87bebd8b92", "message": "gutils: Don't use issetugid() on Android\n\nAndroid had it in older versions but the new 64 bit ABI does not\nhave it anymore, and some versions of the 32 bit ABI neither.\n\nhttps://code.google.com/p/android-developer-preview/issues/detail?id=168\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=736351"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "urmatej": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/27405ae878ebabb4361d38ed22be11b6891fd866", "message": "Updated Slovenian translation"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/5053054c629c3ead90ec3c6fa1fc0fa642476d46", "message": "Updated Slovenian translation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "shankarprasad": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/fdc5b8f7443ccc0778c8163f47370be1ff65d86d", "message": "Updated Kannada translation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "urbalazs": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/0c5ed58342917d79ff3f6811e6b9a9a6d6a4b675", "message": "Updated Hungarian translation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ymyasoedov": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/9ac7d51a8086dece5994da4899fb07b223bd2ff7", "message": "Updated Russian translation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pbor": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/8df2cca08a5c06286303b39a34121c7e6925bf15", "message": "Fix minor mem leak in test case"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/5bb62d077b7882a105ac2468f4d152bc5e557d7d", "message": "GThreadPool: expand g_thread_pool_new docs"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "frandieguez": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/09979125d816ac726641c93cb735f73ece35cbf5", "message": "Updated Galician translations"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/451f732e4f80523a14628375a981566c2d6b0bb8", "message": "Updated Galician translations"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "prlw1": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/e763d93456881cb45a28a4c5c566d53128633aaa", "message": "GCredentials: credentials messages are not correctly supported on NetBSD\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=735819"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/369c8bd566ba76d0c87a92cdb6a1c8abe2599c61", "message": "GUnixMounts: Improve efficiency in polling case\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=583330"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/4f775b7b7ff38581b110ce1664451381ca3d88b6", "message": "GUnixMounts: Fall back to polling on systems without mtab\n\nThis is necessary for many of the BSD family at least.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=583330"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/afce39c228eacfecb45bd9de0f58e7ca767e36ed", "message": "gcredentials: add NetBSD support\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=728256"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/ab9f63fadd8f769b2b2ae7c32a8cce42fac01451", "message": "gmessages: make g_assert_warning compiler friendly\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=720708"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "atriwidada": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/7dd3397820f5dcbcd523432aadf5897b58f6eeb8", "message": "Updated Indonesian translation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "piotrdrag": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/0ba39c1c7a447930009935101e97ada0cc93cb5c", "message": "Updated Polish translation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "changwoo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/5fe65ec2719ef842ccb4389d5ed0744965c21220", "message": "Updated Korean translation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "claudep": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/62f0d6143a3ae9203638e5650ab2f6656222d7ce", "message": "Updated French translation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nazgul77": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/d4298e5ed12afbc4966d3ec61a34eb5f31431729", "message": "Updated German translation"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/01fec1f0d58c344eacae265440938eb7759b21db", "message": "Updated German translation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "yoseforb": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/0a37264fd1953845cc386bb4ff207294e691fee8", "message": "Updated Hebrew translation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thom311": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/35eaf037bdfca985abf5d349e7355f1d2ed9c77b", "message": "gmacros.h: add G_GNUC_*_IGNORE_DEPRECATIONS macros for clang\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=734126\n\nSigned-off-by: Thomas Haller <thaller@redhat.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Marv-CZ": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/607d5a785891729889f1606e8d38edcc7332dfa1", "message": "Updated Czech translation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pesder": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/c74af7369fb32791973e94bcd3c5f45ddd3f5d0b", "message": "Updated Traditional Chinese translation(Hong Kong and Taiwan)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jonasdn": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/bf9c8625048d2adc5cbc5893fa27e7e9a3a9ba3e", "message": "GApplication: Add g_application_add_main_option\n\nThis function adds a single main option entry to be handeled by\nGApplication. The option entry has it arg_data field set to NULL\nand will be added to the applications packed_options.\n\nThe rationale for this is that bindings will be able to add\ncommand line options even when they can't use the un-boxed struct\nGOptionEntry.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=727455"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nilamdyuti": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/d964c7d6863758fca1e2e5ed18553d0cd76ea3bc", "message": "Updated Assamese translation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ricotz": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/e0e52b60ea4c65d1f3660ff6b8c547c82665036b", "message": "docs: Fix broken gtk-doc formatting"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/4c8480e6fa9e7e0971bc800fee8a5f0aba67dd9a", "message": "docs: Add index for 2.42 api"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/46df528adf7ce75be4bbdd3f97349670cb24a018", "message": "glib: Fix make dist"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "carlesfg": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/96af008bdfe53be2ea4ef719b8c8f2121c76a504", "message": "[l10n] Updated Catalan (Valencian) translation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gforcada": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/7585cc49c7d8e016da99d9686af1ebdbe061b989", "message": "[l10n] Updated Catalan translation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bilboed": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/3e2735f4680b9f46548e7d039b0241cd24aee162", "message": "gtype: Fast-path for g_type_is_a\n\nDo I really need to explain why ?\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=732085"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/c5c3c320a2eb32aa9bde5d412ce5bee0fc215ead", "message": "gvalue: New g_value_init_from_instance\n\nUsed for the commonly used case (in signal emission) where we\ninitialize and set a GValue for an instance\n\nIncludes a fast-path for GObject\n\nOverall makes it 6 times faster than the previous combination\nof g_value_init + g_value_set_instance\n\nMakes signal emission around 10% faster\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=731950"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "LRN": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/3c6efd4d5077862adc918c651ab7c49dc133d643", "message": "Make sure compiled resources only have / as dirsep\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=725511"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/14f2376c8a06f0936d734ec6a7e0e836072acf65", "message": "Change W32 console detection to look at the window, not stdout\n\nCheck for console window being attached to the process, not for stdout\nbeing redirected into a console window.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=733960"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/4f734873006729d18551c215d9dcf22392dbeaf3", "message": "Fix tests to compile again - add missing headers to W32, call  correct process-id-getting function\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=725513"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/7e0cb48dee9a8ecd87d403b7941ad3209eee658c", "message": "Silence a controversial warning in win_iconv\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=711547"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/42ddcc6ff22c66f1ded9d7a3879df39988531878", "message": "Silence some uncontroversial warnings\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=711547"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/40650e33239994237917322d4cfecc34e4cc4394", "message": "Fix printf-tests on W32 by ifdefing the expected output\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=725515"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/6680ff1ee93127b247f8ca32958620ec7db6af48", "message": "Save errno and pass it along to make sure gettext does not change it\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=725514"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/905a8e655c4f50f655cbd90455b26a37b977c563", "message": "Ensure critial sections are released before returning\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=734035"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dooteo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/10504edfaae764c8d32213d40db0438a8d392207", "message": "Updated Basque language"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nacho": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/786590fe93682c9b28136ccf65d870b23dd807f7", "message": "win32: improve the package installation dir lookup\n\nAs an example, the core of gedit is in a private library\nplaced in %INSTALLDIR%/lib/gedit/libgedit.dll\n\nBefore this patch we would get %INSTALLDIR%/lib/gedit as the\ninstallation package dir, while what we actually want is to get\n%INSTALLDIR%\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=733934"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/641864bcba5cc85c0a5ab3a62b3781ca90271acb", "message": "socketservice: minor cleanup"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/24d614357a1ab42af8a55db189a8ac05f67c013d", "message": "gspawn-win32: do not rely on __argc and __argv global vars.\n\nSince we are getting passed Unicode values these global vars\nmight not have the correct value. Instead always get the wide arguments\nand convert them to utf8 to use them.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=733146"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ovitters": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/ad4f7846569980c54c29aac55ace01b20ba9b3d2", "message": "doap category core"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alexlarsson": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/b1dd594a22e3499caafdeccd7fa223a032b9e177", "message": "Remove atomics from g_clear_object/g_clear_pointer\n\nPractically no caller of these functions require atomic behaviour,\nbut the atomics are much slower than normal operations, which makes\nit desirable to get rid of them. We have not done this before because\nthat would be a break of the ABI.\n\nHowever, I recently looked into this and it seems that even if the\natomics *are* used for g_clear_* it is not ever safe to use this.  The\natomics protects two threads that are racing to free a global/shared\nobject from freeing the object twice. However, any *user* of the global\nobject have no protection from the object being freed while in use,\nbecause there is no paired operation the reads and refs the object\nas an atomic unit (nor can such an operation be implemented using\npurely atomic ops).\n\nSo, since nothing could safely have used the atomic aspects of these\nfunctions I consider it acceptable to just remove it.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=733969"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/2266f6b743a5a4e4d560238ebd085bf0e1ad8934", "message": "tests/gobject/performance: Clean up and add refcount performance test"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aurisc4": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/d36f4ec593e877b2f077df116f47fb6b0c08a5f8", "message": "Updated Lithuanian translation"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/46ca06228486ce725bf202d3abb0a55a22250ba2", "message": "Updated Lithuanian translation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cgwalters": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/7009e317d84f661ec63b85edb436d3a2727be488", "message": "gtlsinteraction: Hoist precondition before allocation\n\nWe're using a precondition in the middle of the function, and if we\nhit it, we leak the closure.\n\nLet's allocate the closure per path; this allows us to allocate it\nbefore path-specific preconditions, and better avoids a pointless\nmalloc/free pair in the unhandled case.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=733576"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/91821974e1e9e71fb5f2c623f68c0c9e2a6a59a9", "message": "gcredentials: Add assertion to pacify static analysis\n\nThis should always be true.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=733576"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/8ebd287fe6ae7aee11038679d086a880c13845a2", "message": "gkeyfilesettingsbackend: Add assertion for known-true condition\n\nWe know the group exists since we enumerated it.  Should silence a\nstatic analysis warning.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=733576"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/7ea4bf3f309232d85b7b60f6ac6295e679a22ed8", "message": "glocalfileinfo: Suppress static analysis return value warning\n\nJust ignore the return value, since we're checking contents != NULL.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=733576"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/5fe71c7c5c44b429eebba028cca6ecdc1356b50c", "message": "gsettingsschema: Suppress return value check\n\nWe're intentionally ignoring the value here.  Pacifies static\nanalysis.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=733576"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/acdcf5cd50ccbf76fb4d74dbef4e768d5980e46e", "message": "gapplicationimpl-dbus: Fix leak of fd list object\n\nSpotted by static analysis.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=733576"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/3fb44c4c713847059aac22c4c71074e14d11aceb", "message": "gsettingsschema: Close directory\n\nSpotted by static analysis.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=733576"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/e55a953642a9e402f4363f9fa347b6061dd78990", "message": "gthreadedresolver: Unref unexpected address\n\nI don't believe any real app would hit this, but we do leak\nif it occurs.\n\nSpotted by static analysis.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=733576"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/49a5d0f6f2aed99cd78f25655f137f4448e47d92", "message": "gfileutils: Add missing g_free() in error path\n\nDiscovered by static analysis.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=733576"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/feec280b7c5c7b9198e34b10b4f5764c9c3c4505", "message": "gfile: Initialize variable to pacify static analysis\n\nNot a real bug, but will quiet the analysis.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=733576"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/09498e52bbc71496cd1b99ad5c8781783a864881", "message": "gparam: Remove unnecessary conditionals around preconditions\n\nThese cause a static analyzer to think we're trying to actually handle\nthem being NULL, which is not the case.  They both must not be NULL,\nperiod.\n\nNo idea why the code was like this originally.\n\nReviewed by mclasen on IRC."}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/f7d7e5ab2f3f9421f9df5d76487f37d4bdc78088", "message": "gbookmarkfile: Cleaner error handling code to pacify static analysis\n\nA static analyzer flagged the g_file_get_contents() call as not\nchecking its return value.  While the code here is actually correct,\nit's verbose at best.\n\nI think the \"goto out + cleanup\" code style is substantially cleaner,\nless error prone, and easier to read.  It also will pacify the static\nanalyzer.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=731584"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stefwalter": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/627b49b39039d43a784fa9890f473d1ca8d52417", "message": "gio: Fix regression encoding an array of doubles\n\nTake the simple slow path in this case. Encoding a double\ntakes special precautions as you can see in append_value_to_blob()\nand friends.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=732754"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/b6c1d696a98b7fc4e691e8acc9f88b7bc8d57e9d", "message": "gio: Add regression test for double array encoding\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=732754"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "enrico-br": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/ccf5959bf490e1124f66e971c9491c07ff86812f", "message": "Updated Brazilian Portuguese translation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gergelypolonkai": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/d67813045dfd6336a6e109c4818990c3fb117ade", "message": "Fix typos in gbytes_hash and g_time_zone_find_interval docs\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=733084"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jjardon": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/60fe7b46d2a500bd6a5cd47105dc3172acf9c7a9", "message": "docs: Use \"Returns:\" instead \"Return:\""}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tp-m": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/636cd00c213995ffecd302369515bc3b36257589", "message": "GCond (linux): fix g_cond_wait_until() return value on timeout\n\nIt should return FALSE on timeout (and only on timeout), and\nTRUE otherwise.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=731986"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/94e13c71c5b722b4d236cc6b4c2a8d6a843aeadd", "message": "gio/tests/socket: fix minor memleak"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/256305dea5ce0a7c4512b4842b0703c025853e1c", "message": "gthread: use inline keyword for _get_impl() functions\n\nGive compiler a hint that these should be inlined,\nwhich doesn't seem to happen by default with -O2.\nYields 5% speedup in artificial benchmarks, and\n1% speedup in a real-world test case doing a lot\nof mutex locking and unlocking.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=730807"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tristanvb": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/e608ec7b2e47d29fa189fca6e97f484f41c115a4", "message": "Added missing \"Since:\" annotations for g_input_stream_read_bytes() APIs."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kwm81": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/1b3deb5f56a6d73fadb4303a02bf52a67bdefaf5", "message": "Change gio/data-to-c.pl to /usr/bin/env perl.\n\nOn FreeBSD perl gets installed in /usr/local, And a compat symlink in\n/usr/bin. However this symlink might go away in the future.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=724986"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mkhu": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/baef9d18116d55196f00847e0b96c317bab2238b", "message": "gobject: move _g_type_debug_flags from gtype.h to gtype-private.h\n\n_g_type_debug_flags is used internally to suport GOBJECT_DEBUG\nenvironment variable. it should never be exposed to the outside.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=729914"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mzabaluev": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/9f5afe3966d31ef6f1e880d950206a0325e6c777", "message": "glib/tests/mainloop: Acquire the context while asserting its state\n\nThe iteration methods presume that the context is acquired.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=699132"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/c0e8f8a8dbd0dc2c92cd7b7b450d624585570d05", "message": "A simple test for polling on a file-like descriptor\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=699132"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pelzflorian": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/f18811f2dcca8e49f001d86541bfd05deb7290a9", "message": "docs: Fix formatting of g_alloca documentation.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=729825"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dmacks": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/cc38cb359fc4966cbd7616cac0bf867a31762235", "message": "Convert multiple #if/#endif to single #if/#elif/#endif\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=731424"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/b413f7a285f597e4bcbb8866fcb22bea661fcdcd", "message": "gnextstepsettingsbackend: Use same token for function-call and its availability\n\nAvailability of the g_nextstep_settings_backend_get_type() prototype\nis controlled by HAVE_COCOA in gsettingsbackendinternal.h and the\nactual implemenation by OS_COCOA in Makefile.am. Therefore, the\ngiomodule.c call to that function should also be protected by a COCOA\ntoken rather than an CARBON token (cocoa and carbon are independent\nautoconf tests).\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=731425"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/93d0c632326064f3e72f0e88e3dc971bdfc74af0", "message": "assert-msg-test: Explicitly quit gdb session to avoid zombie\n\ngdb is run in batch mode, and can leave leave the program being\nexecuted/debugged running when the batchfile is finished. Explicitly\n\"quit\"ing the subprocess prevents it from leaving the stray subprocess\nwhen gdb finishes.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=731366"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pwithnall": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/d80adeaa960ddfa13837900d0391f9bd9c239f78", "message": "gtestdbus: Don\u2019t close stdout for dbus-daemon\n\nThe stdout FD passed to dbus-daemon is propagated to all its child\nprocesses, such as service activated processes. If we close the FD after\nreading the bus address from the daemon, any child process which\nsubsequently writes to stdout (e.g. for logging) will get a SIGPIPE and\nexplode.\n\nInstead of closing the stdout FD immediately after dbus-daemon has\nspawned, keep it open until the daemon is killed.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=732019"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/0950369899ac04ebe0357d0b1ba834c4dab39219", "message": "gclosure: Remove an unused alloca() and assignment\n\nCoverity issue: #1159511\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=732005"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/afea86a7ef4f73a6fffd2155f2ddf411bb6fd8c6", "message": "goption: Remove an unused assignment\n\nCoverity issue: #1159514\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=732005"}, {"url": "https://api.github.com/repos/aelarabawy/glib/commits/6b8ae8f21b909102b4279900e90cb294cf542188", "message": "gwakeup: Clarify buffer sizing in g_wakeup_signal()\n\nThe code in g_wakeup_signal() is currently correct: it writes a 64-bit\ncounter increment value if the FD is an eventfd, and writes an arbitrary\n8-bit value if using a normal pipe.\n\nHowever, the reasoning behind these buffer sizes is not clear, and the\nmismatch between the allocated buffer size and the length passed to\nwrite() in the pipe case could be mistaken for a bug.\n\nCoverity issue: #1159490\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=732002"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zeenix": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aelarabawy/glib/commits/eb6da409fa904d99ec6c62718f366e3a70033881", "message": "docs: Correct param to interface's default_init()\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=731979"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}}}}