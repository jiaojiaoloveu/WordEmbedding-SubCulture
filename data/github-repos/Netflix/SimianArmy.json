{"_default": {"1": {"arpansolanki": {"issues": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/312", "title": "Upgrade AWS SDK to latest version", "body": "Is it possible to update the AWS SDK to latest version? I tried to upgrade the aws-java-sdk from 1.11.28 to 1.11.106 but got a lot of client deprecation warnings\r\n\r\nHere are few examples\r\n\r\nC:\\Users\\user\\Documents\\simian-army\\src\\main\\java\\com\\netflix\\simianarmy\\basic\\BasicChaosMonkeyContext.java:64: warning: [deprecation] AmazonSimpleEmailS\r\nerviceClient(ClientConfiguration) in AmazonSimpleEmailServiceClient has been deprecated\r\n\r\nC:\\Users\\user\\Documents\\simian-army\\src\\main\\java\\com\\netflix\\simianarmy\\client\\aws\\AWSClient.java:798: warning: [deprecation] setEndpoint(String) in AmazonS3Client has been deprecated\r\n            client.setEndpoint(\"s3-\" + region + \".amazonaws.com\");\r\n\r\nThanks.", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "timstorer": {"issues": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/311", "title": "Config simianarmy.chaos.ASG.maxTerminationsPerDay not respected when using LocalDB", "body": "When using LocalDBRecorder, we found that the config simianarmy.chaos.ASG.maxTerminationsPerDay was not being respected. This is because the groupName field was not being compared for matches, so getPreviousTerminationCount in BasicChaosMonkey always returned 0 terminations for the ASG.\r\n\r\nThis is fixed by PR https://github.com/Netflix/SimianArmy/pull/309.", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/309", "title": "Fix querying LocalDB: consider all event fields when matching events", "body": "When using LocalDBRecorder, we found that the config simianarmy.chaos.ASG.maxTerminationsPerDay was not being respected.  This is because the groupName field was not being compared for matches, so getPreviousTerminationCount in BasicChaosMonkey always returned 0 terminations for the ASG.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "truongvinhtien": {"issues": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/310", "title": "Make Janitor Monkey ignore Stopped Instances/Resources", "body": "Hi,\r\nI am new to SimianArmy, and my company required me to set the Janitor Monkey to shutting down the resources instead of terminating them so they can keep the data. I just merely edited some pieces of code in the AWSClient.java and InstanceJanitor.java so that it can stop the instance, and somehow it worked.\r\nIn the AWSClient.java:\r\n```java \r\n@Override\r\n    public void terminateInstance(String instanceId) {\r\n        Validate.notEmpty(instanceId);\r\n        LOGGER.info(String.format(\"Stopping instance %s in region %s.\", instanceId, region));\r\n        try {\r\n            ec2Client().stopInstances(new StopInstancesRequest(Arrays.asList(instanceId)));\r\n        } catch (AmazonServiceException e) {\r\n            if (e.getErrorCode().equals(\"InvalidInstanceID.NotFound\")) {\r\n                throw new NotFoundException(\"AWS instance \" + instanceId + \" not found\", e);\r\n            }\r\n            throw e;\r\n        }\r\n    }   \r\n```\r\nIn the InstanceJanitor.java\r\n```java\r\n@Override\r\n    protected void cleanup(Resource resource) {\r\n        LOGGER.info(String.format(\"Stopping instance %s\", resource.getId()));\r\n        awsClient.terminateInstance(resource.getId());\r\n    }\r\n```\r\nI wonder if there is any proper way to apply this method for all the resource types. Moreover, when I ran the Janitor Monkey again it also remarked the stopped instances for cleaning up. Can I implement the JM to ignore the stopped/inactive resources?\r\n\r\nMany thanks.", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jamesalford": {"issues": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/308", "title": "Cannot set up janitor monkey without simpleDB", "body": "I have adjusted the config in \"_client.properties_\" to have the setting as follows\r\n\r\n```\r\n# Uncomment to use a version of Monkey recorder that does not rely on AWS SDB\r\nsimianarmy.client.recorder.class=com.netflix.simianarmy.basic.LocalDbRecorder\r\n```\r\n\r\nI am getting the following error which looks like the code is still using AmazonSimpleDB and not local recorder:\r\n`2017-12-06 14:50:32.645 - ERROR BasicJanitorMonkey - [BasicJanitorMonkey.java:137] Got an exception while LAUNCH_CONFIG janitor was cleaning for region eu-west-1\r\ncom.amazonaws.services.simpledb.model.NoSuchDomainException: The specified domain does not exist. (Service: AmazonSimpleDB; Status Code: 400; Error Code: NoSuchDomain; Request ID: xxxxxxxxxxxxx)\r\n\tat com.amazonaws.http.AmazonHttpClient.handleErrorResponse(AmazonHttpClient.java:1386)\r\n\tat com.amazonaws.http.AmazonHttpClient.executeOneRequest(AmazonHttpClient.java:939)\r\n\tat com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:714)\r\n\tat com.amazonaws.http.AmazonHttpClient.doExecute(AmazonHttpClient.java:465)\r\n\tat com.amazonaws.http.AmazonHttpClient.executeWithTimer(AmazonHttpClient.java:427)\r\n\tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:376)\r\n\tat com.amazonaws.services.simpledb.AmazonSimpleDBClient.doInvoke(AmazonSimpleDBClient.java:1058)\r\n\tat com.amazonaws.services.simpledb.AmazonSimpleDBClient.invoke(AmazonSimpleDBClient.java:1028)\r\n\tat com.amazonaws.services.simpledb.AmazonSimpleDBClient.select(AmazonSimpleDBClient.java:977)\r\n\tat com.netflix.simianarmy.aws.janitor.SimpleDBJanitorResourceTracker.querySimpleDBItems(SimpleDBJanitorResourceTracker.java:209)\r\n\tat com.netflix.simianarmy.aws.janitor.SimpleDBJanitorResourceTracker.getResources(SimpleDBJanitorResourceTracker.java:108)\r\n\tat com.netflix.simianarmy.janitor.AbstractJanitor.getTrackedMarkedResources(AbstractJanitor.java:290)\r\n\tat com.netflix.simianarmy.janitor.AbstractJanitor.cleanupResources(AbstractJanitor.java:303)\r\n\tat com.netflix.simianarmy.basic.janitor.BasicJanitorMonkey.doMonkeyBusiness(BasicJanitorMonkey.java:134)\r\n\tat com.netflix.simianarmy.Monkey.run(Monkey.java:134)\r\n\tat com.netflix.simianarmy.Monkey$1.run(Monkey.java:155)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)`", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "brettswift": {"issues": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/306", "title": "Question:  Multiple Accounts", "body": "Nothing has popped up in the code or docs here about how these monkeys work with multiple accounts?  They would be child accounts.   \r\n\r\nHas this been planned or is it supported and I'm just not seeing how it works?  If it does I would assume the account in the config files would be the root billing account.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "msavlani": {"issues": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/305", "title": "Getting error :  \"Error making SSH connection to instance\" on vshpere infrasturuture", "body": "Hi,\r\n\r\nI have defined below properties in my client.properties\r\n\r\nsimianarmy.chaos.ssh.user=root\r\nsimianarmy.chaos.ssh.key=~/.ssh/id_rsa\r\n\r\nBut i am still getting below error \r\n\r\n WARN  ChaosInstance - [ChaosInstance.java:105] Error making SSH connection to instance\r\njava.lang.NullPointerException\r\n        at com.netflix.simianarmy.client.aws.AWSClient.getJcloudsComputeService(AWSClient.java:863)\r\n        at com.netflix.simianarmy.client.aws.AWSClient.connectSsh(AWSClient.java:885)\r\n        at com.netflix.simianarmy.chaos.ChaosInstance.connectSsh(ChaosInstance.java:125)\r\n        at com.netflix.simianarmy.chaos.ChaosInstance.canConnectSsh(ChaosInstance.java:101)\r\n        at com.netflix.simianarmy.chaos.ScriptChaosType.canApply(ScriptChaosType.java:60)\r\n        at com.netflix.simianarmy.basic.chaos.BasicChaosMonkey.pickChaosType(BasicChaosMonkey.java:141)\r\n        at com.netflix.simianarmy.basic.chaos.BasicChaosMonkey.doMonkeyBusiness(BasicChaosMonkey.java:121)\r\n        at com.netflix.simianarmy.Monkey.run(Monkey.java:134)\r\n        at com.netflix.simianarmy.Monkey$1.run(Monkey.java:155)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)\r\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)\r\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at java.lang.Thread.run(Thread.java:745)\r\n\r\nWhy does it go to AWSClient.java when i am using vshpere infrastrucure ?\r\n\r\nThanks,\r\nManish Sawlani\r\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ivanilves": {"issues": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/301", "title": "Any way to view Janitor reports apart from Email?", "body": "Hey guys, first, thank you for the SimianArmy, especially for Janitor Monkey! :heart: \r\n\r\nI've just set it up and it works! It gives me lists of unused resources, which is pretty truthful.\r\n\r\n**However, the only way I was able to get the information from Janitor is email.\r\nIs there any other way to get information from Janitor? Any CLI or REST API?**\r\nBasically I need the same information I'm receiving in email, but in interactive form. :grimacing: \r\n\r\nI've tried `GET /simianarmy/api/v1/janitor` and all I get is:\r\n```\r\n[\r\n  - {\r\n      JanitorMonkeyStatus: \"OnLikeDonkeyKong\"\r\n  }\r\n]\r\n```\r\n\r\nI have also tried `GET /simianarmy/api/v1/chaos`, and it returns `[]`, but this is not related to Janitor Monkey AFAIK, it's about Chaos Monkey, which I do not use now (I'm just cutting costs at this stage).\r\n\r\nThank you!", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/301/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SaketKum": {"issues": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/296", "title": "Network latency and Network loss not working ", "body": "Getting following error :\r\n2017-02-24 18:43:45.951 - INFO  ScriptChaosType - [ScriptChaosType.java:73] Running script for NetworkLatency on instance i-XXXX\r\n2017-02-24 18:44:14.185 - WARN  ScriptChaosType - [ScriptChaosType.java:89] Got non-zero output from running script: {output=/tmp/networklatency.sh: line 5: tc: command not found\r\n, error=, exitStatus=127}\r\n\r\n2017-02-24 18:30:30.057 - INFO  ScriptChaosType - [ScriptChaosType.java:73] Running script for NetworkLoss on instance i-XXXX\r\n2017-02-24 18:30:57.182 - WARN  ScriptChaosType - [ScriptChaosType.java:89] Got non-zero output from running script: {output=/tmp/networkloss.sh: line 6: tc: command not found\r\n, error=, exitStatus=127}\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ParasDPain": {"issues": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/292", "title": "Add Cloud Formation Cleanup Support to Janitor", "body": "I wanted to use Janitor Monkey to cleanup Cloud Formation stacks (effectively, cleaning all associated resources within the stack). Basic requirement is for it to remove stacks that are missing tags or have been unused for X days.\r\n\r\nI was unable to find any discussion on supporting this feature so have created a new issue. Are there any plans for supporting this in the near future?\r\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kumarRaj": {"issues": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/291", "title": "Port to DynamoDB from SimpleDB", "body": "Looking at the way amazon is trying its best to hide SimpleDB from the console IAM and everywhere else, shouldn't we think of porting to DynamoDB.\r\n\r\nFor some reading https://forums.aws.amazon.com/thread.jspa?threadID=96141&tstart=0\r\n\r\nAlso it seems like the future of simple db is not very clear. For me to find the policy of Create SimpleDB by itself was a difficult task.", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/291/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "VinnieGogniti": {"issues": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/287", "title": "Unable to execute BlockAllNetworkTraffic (non-ssh) case from chaos monkey", "body": "Seeing the following error when tried executing a non-ssh case - BlockAllNetworkTraffic, by chaos monkey. \r\nIt appears that it can't detect the VPC, in which the target instances are running and being thrown a **No default VPC for this user** error.\r\n\r\nINFO  BasicChaosInstanceSelector - [BasicChaosInstanceSelector.java:65] Randomly selecting 2 from 50 instances, excluding null\r\nINFO  AWSClient - [AWSClient.java:460] Getting EC2 instances for 1 ids in region us-west-2.\r\nINFO  AWSClient - [AWSClient.java:475] Got 1 EC2 instances in region us-west-2.\r\nINFO  AWSClient - [AWSClient.java:460] Getting EC2 instances for 1 ids in region us-west-2.\r\nINFO  AWSClient - [AWSClient.java:475] Got 1 EC2 instances in region us-west-2.\r\nINFO  AWSClient - [AWSClient.java:460] Getting EC2 instances for 1 ids in region us-west-2.\r\nINFO  AWSClient - [AWSClient.java:475] Got 1 EC2 instances in region us-west-2.\r\nINFO  AWSClient - [AWSClient.java:804] Getting EC2 security groups for 2 names in region us-west-2.\r\nERROR BasicChaosMonkey - [BasicChaosMonkey.java:201] failed to terminate instance i-0296xxxx\r\ncom.amazonaws.services.ec2.model.AmazonEC2Exception: **No default VPC for this user** (Service: AmazonEC2; Status Code: 400; Error Code: VPCIdNotSpecified;\r\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/285", "title": "Unable to perform SSH cases - HTTP 401 being returned from a wrong region", "body": "Hello Everyone,\r\n\r\nI've been stuck with this issue for a week now. I've looked around all the threads related to this issue and apparently it's an open issue and there is no definitive solution yet.\r\n\r\nThe issue is - even though I have the region to use (in my client config) is \"us-west-2\", my SSH cases are failing with a HTTP 401 at a wrong region. \r\nI scanned through the entire code and replaced all the \"us-east-1\" references to \"us-west-2\", but still I'm unable to get around this issue. I believe the code as got to be making an AWS SDK call to fetch the current region via API and somehow getting \"us-east-1\" retuned and overrides my config.\r\nThis has absolutely baffled me for days now.\r\n\r\nPlease, anyone who had resolved this earlier or can think of a better solution, help me resolve this. Following is the error log. Thank you!\r\n\r\n\r\n2016-12-13 05:24:05.356 - INFO  BasicChaosInstanceSelector - [BasicChaosInstanceSelector.java:65] Randomly selecting 2 from 2 instances, excluding null\r\n2016-12-13 05:24:07.084 - WARN  ChaosInstance - [ChaosInstance.java:105] Error making SSH connection to instance\r\norg.jclouds.rest.AuthorizationException: POST https://ec2.us-east-1.amazonaws.com/ HTTP/1.1 -> HTTP/1.1 401 Unauthorized\r\n.\r\n.\r\n.\r\n.\r\n2016-12-13 05:24:07.089 - WARN  ScriptChaosType - [ScriptChaosType.java:61] Strategy disabled because SSH credentials failed\r\n2016-12-13 05:24:07.089 - WARN  BasicChaosMonkey - [BasicChaosMonkey.java:124] No chaos type was applicable to the instance: i-009863xxxxxx\r\n2016-12-13 05:24:07.205 - WARN  ChaosInstance - [ChaosInstance.java:105] Error making SSH connection to instance\r\norg.jclouds.rest.AuthorizationException: POST https://ec2.us-east-1.amazonaws.com/ HTTP/1.1 -> HTTP/1.1 401 Unauthorized\r\n\tat org.jclouds.aws.handlers.ParseAWSErrorFromXmlContent.refineException(ParseAWSErrorFromXmlContent.java:122)", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/285/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ebukoski": {"issues": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/283", "title": "ELB cleanup causing AWS rate exceeded exception", "body": "The Janitor Monkey ELB cleanup feature is encountering rate limit exceptions when running in AWS.\r\n\r\nA quick solution could be to add a sleep when deleting ELBs.  This will slow down Janitor but speed isn't that important during ELB cleanups.  Of larger concern is impacting ELB API calls for the entire organization.\r\n\r\n```\r\n2016-11-15 18:59:46,650 ERROR [com.netflix.simianarmy.janitor.AbstractJanitor] Failed to clean up the resource obiwan-cseqa-frontend of type ELB.\r\ncom.amazonaws.services.elasticloadbalancing.model.AmazonElasticLoadBalancingException: Rate exceeded (Service: AmazonElasticLoadBalancing; Status Code: 400; Error Code: Throttling; Request ID: ad215c19-ab65-11e6-8f94-d765cc723562)\r\n        at com.amazonaws.http.AmazonHttpClient.handleErrorResponse(AmazonHttpClient.java:1386)\r\n        at com.amazonaws.http.AmazonHttpClient.executeOneRequest(AmazonHttpClient.java:939)\r\n        at com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:714)\r\n        at com.amazonaws.http.AmazonHttpClient.doExecute(AmazonHttpClient.java:465)\r\n        at com.amazonaws.http.AmazonHttpClient.executeWithTimer(AmazonHttpClient.java:427)\r\n        at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:376)\r\n        at com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingClient.doInvoke(AmazonElasticLoadBalancingClient.java:2172)\r\n        at com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingClient.invoke(AmazonElasticLoadBalancingClient.java:2142)\r\n        at com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingClient.deleteLoadBalancer(AmazonElasticLoadBalancingClient.java:996)\r\n        at com.netflix.simianarmy.client.aws.AWSClient.deleteElasticLoadBalancer(AWSClient.java:576)\r\n        at com.netflix.simianarmy.aws.janitor.ELBJanitor.cleanup(ELBJanitor.java:58)\r\n        at com.netflix.simianarmy.janitor.AbstractJanitor.cleanupResources(AbstractJanitor.java:336)\r\n        at com.netflix.simianarmy.basic.janitor.BasicJanitorMonkey.doMonkeyBusiness(BasicJanitorMonkey.java:135)\r\n        at com.netflix.simianarmy.nf.janitor.NFJanitorMonkey.doMonkeyBusiness(NFJanitorMonkey.java:79)\r\n        at com.netflix.simianarmy.Monkey.run(Monkey.java:134)\r\n        at com.netflix.simianarmy.nf.janitor.NFJanitorMonkey.run(NFJanitorMonkey.java:65)\r\n        at com.netflix.simianarmy.Monkey$1.run(Monkey.java:155)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)\r\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)\r\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at java.lang.Thread.run(Thread.java:745)\r\n```", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/273", "title": "Add Elastic Load Balancer Cleanup Support to Janitor", "body": "Add Elastic Load Balancer (ELB) Cleanup support to Janitor.  Janitor will identify, mark, and clean ELBs that are unused.  \n\nThis would involve creating multiple new classes:\n- ELBJanitor.java\n- EddaELBJanitorCrawler.java\n- EmptyELBRule.java\n\nSo far the rule we are considering for this cleanup is:\n1. EmptyELBRule: Mark and clean any ELBs with no attached instances.  A possible additional condition is to mark/clean ELBs with no instances attached for X days with X a configurable value.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/de8321359bc44a1bf3c669ed7e97926993c6f9e6", "message": "Merge pull request #282 from iixlabs/develop\n\nfix the wrong argument for query events from RDS"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/d446da3443a912a62487a0efbdbd9b0afe349a3b", "message": "Merge pull request #281 from ebukoski/master\n\nUpdate README.md (License Badge)"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/33834484954da686f78e1fa993ce97a346a02543", "message": "Update README.md"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/0256e8ae6a06eb9c4f37a35fe2bf53c019cd6d3d", "message": "Merge pull request #280 from ebukoski/master\n\nFix an edge case where notificationTime is sometimes 0"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/bd819f674c7546fd6d81bcbaf28441ae8233d249", "message": "Fix an edge case where notificationTime is sometimes 0.  When this happens treat it like null."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/0eb73927ceef536c530c6caba76def7ae76bbf41", "message": "Merge pull request #276 from ebukoski/master\n\nAdd Elastic Load Balancer Cleanup Support to Janitor"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/4693ca789669925ad6b7c501feee35aea5f3e580", "message": "Merge pull request #278 from lorin/point-new-chaos-monkey\n\nPoint to latest version of Chaos Monkey"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/5b682ace0786c5df9296c8a15ed5d6ebfab3baea", "message": "Add support for AWS Route53 DNS deletes"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/067feaff1f480f7029e4ef8897fa136a49c5237a", "message": "Add Elastic Load Balancer Cleanup Support to Janitor"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/86243839adffc610cfdc62bdec7ef2c7b3652eed", "message": "Merge pull request #272 from ebukoski/master\n\nChanges for Netflix environment compatibility"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/164ae81a832a14aafd3343227f74954bbf85b008", "message": "Add region to janitor RDS operations.  Add file headers to clear some warnings."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/e786031fc2da9fdbf85e771bd739ba2da1973a4b", "message": "Changes for Netflix environment compatibility: AWS client to 1.11.9, set force delete instances=true when deleting ASGs, don't set MediaType on JanitorMonkeyResource"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/a5fe5625b3a0bccbac3ab1032446b23f7ac3860f", "message": "Merge pull request #269 from ebukoski/master\n\nAdd support for exclusion rules to JanitorRuleEngine"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/caf3d6bb9171ed0bccda37bffe4e0e0a0e8c2f56", "message": "Merge branch 'master' of github.com:ebukoski/SimianArmy"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/7495884a33e717f66cb2a4347fcda846d320a2f6", "message": "Add support for exclusion rules to JanitorRuleEngine.  Add a new TagExclusionRule which excludes resources from being marked if they have a specified tag."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/b05e618e6b38c3458517ebb45778ce674df893e7", "message": "Merge pull request #268 from ebukoski/master\n\nAdd option to use RDS for resource tracking"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/20186507015bbc9036513f4d80b51dedbc02e07d", "message": "Merge pull request #2 from Netflix/master\n\nMerge from main"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/2b71a151c9f1538ff084fc07585a514e9be66397", "message": "Merge changes since RDS PR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/f608730de8380208c0dbf77842723e113764f33c", "message": "Add HikariCP, fix bug with missing field"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/0866a9a49734d8165a0244fce36b29d8665d78ba", "message": "Merge pull request #266 from AutoScout24/bavarian-holidays\n\nAdd possibility to load custom calendar, add bavarian holidays."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/4d5b3de93a2737a302725d96881dd1fe3fabf631", "message": "tidy up imports, remove weird character in comments"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/92297f719188fbb785f65f08ca68e903694f2935", "message": "Fix issue with dates and RDSJanitorResourceTracker"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/c3121f016874e0811ddc92ef11bc4f3ff2b9ad06", "message": "Add output to fields persisted by RDSJanitorResourceTracker"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/cd3428d1afa8f1666c747df6de7bc1774f556c40", "message": "bug fixes"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/a21ec60b4f7d24ce82e7233a4a1f5d7ce0440d1b", "message": "Merge pull request #261 from tmack8001/content-type\n\nupdating Resources to have application/json content-type"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/8fc9bd95ee72279ccc19fc775249c3fc02627136", "message": "Merge branch 'master' of github.com:ebukoski/SimianArmy\n\nConflicts:\n\tsrc/main/java/com/netflix/simianarmy/aws/conformity/RDSConformityClusterTracker.java\n\tsrc/main/java/com/netflix/simianarmy/aws/janitor/RDSJanitorResourceTracker.java\n\tsrc/test/java/com/netflix/simianarmy/aws/conformity/TestRDSConformityClusterTracker.java\n\tsrc/test/java/com/netflix/simianarmy/aws/janitor/TestRDSJanitorResourceTracker.java"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/402346553755e0d920ba5714e19f7a360fe0b6c8", "message": "Add option to use RDS for resource tracking instead of SimpleDB."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/6a61b6e16102abc392c14a1fc7ac584e9f98b9dd", "message": "Add option to use RDS for resource tracking instead of SimpleDB."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/6a76cb12fe19cee557953b56c481d3409104e1a3", "message": "Merge pull request #1 from Netflix/master\n\nUpdate from master"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/2d263a73caabb6681e777d289366f0606f771a41", "message": "Merge pull request #257 from Ten48BASE/master\n\nMake Conformity Monkey Notify Based on owner tag value"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/af839cb284f496fb33480cb0994daa922ef5577a", "message": "Merge pull request #256 from Ten48BASE/master\n\nRedo: Adding feature to specify resource types for untaggedResource Rule"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/1aaaa6d9e4177449e1be28f512ccf54e8629ee03", "message": "Merge pull request #255 from mlafeldt/stop-conformity-monkey\n\nStop Conformity Monkey on destroy"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/5cdf80588e2cc77445a7c5c1d3d2cb443649dc78", "message": "Merge pull request #254 from mlafeldt/failec2\n\nUse correct strategy name in default properties"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/b609eeb70ce1e424b76fca0ebb18dc1e8d243800", "message": "Merge pull request #253 from mlafeldt/rest-event-id\n\nREST API: Add event ID to list of chaos events"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/79f5263660c9174635c1a2303f2ed9f73dfea496", "message": "Merge pull request #251 from AutoScout24/emails-with-hash\n\nEmail validation regex now accepts emails with hash in alias (before-\u2026"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/06a2af5739a57b9f6f6bedfbc5639225f6328891", "message": "Merge pull request #249 from AutoScout24/fix-logging-dependency\n\nRemove duplicated logging dependency resulting in not working logging\u2026"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/4e2426d79a7482075ce3af3f23c89ce9274786b6", "message": "Merge pull request #248 from AutoScout24/fix-dependency-version-conflict\n\nFix dependency version conflict"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/697fc366db3137202e2861ad8f36ca1819b55198", "message": "Merge pull request #245 from ebukoski/master\n\nDisable cloudbees jenkins builds, using travis instead"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/cf2450550f5b682a82432383c5442b04f01414eb", "message": "Disable cloudbees jenkins builds, using travis instead"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/00ddf40e4ca9ceddc6560c640d1bdc724ccb3c5e", "message": "Merge pull request #244 from ervansetiawan/upgrade-eureka\n\nReplace the deprecated Eureka's DiscoveryManager"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/d4dc34e081da2de0f47ff8562bc559e180051f69", "message": "Merge pull request #243 from ebukoski/master\n\nFix javadoc errors"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/dea8413fe6be8e0433de99ea8fc70d36282d867d", "message": "Fix javadoc errors"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/4fcf5b33130d101d7fad7af57bd427125e85cbca", "message": "Merge pull request #242 from ebukoski/master\n\nFix javadoc errors"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/7b085fcab4eb054ef7bdac9f610059a54d007b59", "message": "Fix javadoc errors"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/630929aa96511d0b61fab9e4f8c759a7a191d9d6", "message": "Merge pull request #241 from gezerk/master\n\nSet jdk version to 8."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/c93b35005539f9d9b957fb42a9a2f8ab6d9672a4", "message": "Merge pull request #239 from ebukoski/master\n\nUpdate Eureka client to 1.4.1 from 1.1.22"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/599c69e13b7fdb9f98daa8bbbf72077ac0e9552c", "message": "Merge pull request #240 from rspieldenner/travis\n\nUpdates for travis and moving to nebula.netflixoss 3.2.3"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/0d7260a158cdbfe0be08e81a08e0a5127d9f0dde", "message": "Set source and target compatibility to Java 1.7.   Because of the newer Eureka client, SimianArmy must now be compiled with Java 8 but will retain source and target compatibility with Java 7."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/b869decd9e07397eebd2a7c6a8d7267ee9665bd6", "message": "Update Eureka client to 1.4.1 from 1.22"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/4513debee1f8152fad19fb1fb32fc3bd5c774083", "message": "Merge pull request #235 from ebukoski/master\n\nUpdate tests for AWS 17 characters resources"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/346528c77a003ea9a139e6d4336258ad88cc6840", "message": "Update tests for AWS 17 character instance IDs, volume IDs, and snapshot IDs"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/6347c9c6fe4c31ba3ec97896a61c73a525f064ca", "message": "Merge pull request #233 from Ten48BASE/master\n\nAdding AWS region detection."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/6c6adffd526c45eeb747d2d41700dd36cea9a194", "message": "Merge pull request #232 from Ten48BASE/master\n\nFixing error in building of the termination reason string."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/298d455fe7496fcf0b69a2d0f29cd58e0568b9bf", "message": "Merge pull request #231 from rmurphy-stelligent/ses-proxy-support\n\nAdds proxy support to SES and some tests"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/0617247d74eb112bb8ddf42d490ffcc6442e4148", "message": "Merge pull request #230 from ebukoski/master\n\nAdd a prepareToRun() method to Janitor Monkey"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/d340ebc283df37e3a5ab8ef7df1b382402752a25", "message": "Add a prepareToRun() method to Janitor Monkey so that the internal resource lists can be reset between Monkey runs."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/50ec0024d7ef07d56c797701cb35eab8698e394b", "message": "Merge pull request #227 from ebukoski/master\n\nNoGeneratedAMIRule: Add a property to override owner email"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/f8c743ead97ce4990be08f3aac3e7938459706b0", "message": "NoGeneratedAMIRule: Add a property to override owner email"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/2469f4098da212bf29c5c6236ff9ed15d150b676", "message": "Merge pull request #226 from ebukoski/master\n\nRender a simple HTML response for opting in/out of Janitor resources \u2026"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/11cfa2e55d9ccb89a08be27d9c33fe2a77251f2d", "message": "Render a simple HTML response for opting in/out of Janitor resources when using the HTTP GET interface"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/8848082e45466141ef816f3be4c43b967aacbbd6", "message": "Merge pull request #225 from ebukoski/master\n\nFix parenthesis in wrong place"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/aa7f32ce32943cb6dbe7b9fc543a6c5bc0efe786", "message": "Fix parenthesis in wrong place"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/86e0ce4ca90b0a66c2f2e8578ff97070062e14a7", "message": "Merge pull request #224 from ebukoski/master\n\nBasicCalendar: isMonkeyTime=false should execute normally"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/7ccc312c037084f55b660be1be67ce1a706b8f66", "message": "BasicCalendar: isMonkeyTime=false should execute normal MonkeyCalendar logic."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/2b16f6636b5c96ba29bd16807b22028d4217ddec", "message": "Merge pull request #223 from ebukoski/master\n\nAdd a URL target to add events through HTTP GET; more Calendar logging"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/dde65ef7db167ce54ccb9f52f3bc99950ae859e7", "message": "BasicJanitorMonkey: add servo metrics for monkeyErrors and monkeyRunning.  Add try-catch in janitor loop so one janitor failure doesn't stop the whole monkey run.  AbstractJanitor: add checkedResourcesCount as a servo metric.  Fix wrong resource passed into addFieldsandTagsToEvent() method."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/1f0ed656dc8f362073ee93433601ac9f95e8bf74", "message": "Add URL target to allow adding events with a GET call"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/1e5de1c665b7f2e5e91fee61feb81cde573315ff", "message": "MonkeyCalendar: new constructor and better logging.  Add a constructor to pass in configuration along with open/close/timezone.  More logging in isMonkeyTime so it clearer why Monkey is taking time off."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/cd68af367e5af77f35fc6d368020baa5fe91eece", "message": "Merge pull request #222 from ebukoski/master\n\nJanitor Monkey recorder changes"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/706e443b6f0e735eabf61b469bbb1e1047cb735d", "message": "Janitor Monkey recorder changes: add additional resource fields and resource tags to Janitor Monkey cleaning events.  Change processing order to generate event after cleanup instead of before."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/13705cb78f73f207f4218806078d27fc473a5cda", "message": "Merge pull request #220 from ebukoski/master\n\nEddaInstanceJanitorCrawler: breakup edda queries for image ids"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/e93a6a6001422d4d13440ce3c6f358ef678a3209", "message": "EddaInstanceJanitorCrawler: breakup edda queries for image ids into batches to avoid hitting query string limits"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/95a88031768793a8e518bdf8010871782c692696", "message": "Merge pull request #218 from ebukoski/master\n\nChange janitor metrics from counter to gauge.  Use resource arrays to\u2026"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/cce0ed06b8d768bc55c76589a6a04578af7c9e7a", "message": "Change janitor metrics from counter to gauge.  Use resource arrays to track marks, cleans, etc. instead of using separate counter"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/1cb9805044b11ae0b6e158f2eeecdafec2a14350", "message": "Merge pull request #217 from dx-pbuckley/dev-minor-comment-nitpick\n\nsince will number -> since should be number"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/01d745b17a3ef26745601080fe407e8b548b718b", "message": "Merge pull request #216 from ebukoski/master\n\nJanitor getters for metrics should be public"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/e0ac2120af4734007ce21eb0e777619fa94348a7", "message": "Return long instead of AtomicLong"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/0cca5312971b75eed5e788efee50c9f3ad215289", "message": "Janitor getters for metrics should be public"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/4a7b70b4b4b2a8d7c7b3400cb8a5f1b3571c3e00", "message": "Merge pull request #215 from ebukoski/master\n\nAdd Servo dependency.  Add JMX/Servo metrics monitoring for monkey ru\u2026"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/992a449ecadafed014df7d663985435ac757670a", "message": "Add Servo dependency.  Add JMX/Servo metrics monitoring for monkey runs, marked resources, unmarked resources, cleaned resources, and failed to clean resources."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/c211731e1400aafd5bd4783ff7374ae4f722b437", "message": "Merge pull request #213 from dx-pbuckley/dev-get-janitor-route\n\nadd GET route v1/api/janitor for ELB healthcheck"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/09cb41ee0b4d8b8b8ecc546e63dbcabb2c37139e", "message": "Merge pull request #212 from dx-pbuckley/dev-key-owner\n\nreplace hardcoded \"owner\" with property"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/ae4ed80b17a9cb71486b0048a998332c99bda580", "message": "fix publishing error with core jar"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/5426b754cba55a0eaba3000821d32886699af894", "message": "Merge pull request #211 from ebukoski/master\n\nFix NPE with Edda ASG Janitor crawler"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/5b976881760fe6f78d268108e51071a849d9398a", "message": "Fix NPE with Edda ASG Janitor crawler"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/f9d58f3395073bf0287c3b6dd8946385c16e17fd", "message": "publish jars"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/580bb6abc38ba5521dd947fba89c9fcba274c9fb", "message": "Merge pull request #210 from ebukoski/master\n\npublish jars also"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/47668bcc7431b3194f7bc78097b48f9a4158a1ac", "message": "publish jars also"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/3ece75cb89569aff7b21f35195e4b006ba0f2c52", "message": "Merge pull request #208 from ebukoski/master\n\nSet gradle version to 2.2.1 for compatibility with Nebula NetflixOSS"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/878f6b502e161b773f2d734c9333fb083db3a861", "message": "Set gradle version to 2.2.1 for compatibility with Nebula NetflixOSS"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/3beaf9118cb0202eb03635223a60a9bdea5a5af1", "message": "Merge pull request #205 from ebukoski/master\n\nFix warnings, add SimpleDB max retry"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/d5bddfda5d9695d47a20d4d53fd28cb598ab3a5f", "message": "Merge pull request #204 from dx-pbuckley/dev-fix-my-bad-double-copyrights\n\nremove duplicate copyright notices"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/70abc6c10bcab1a825c6f3f853934e9362e4b8bf", "message": "Fix warnings with gradle license plug-in"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/9fa545d8a3a1af990590e88de9558e6290060d89", "message": "Merge branch 'master' of github.com:ebukoski/SimianArmy"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/3076285d2f3f6a85d80c83aaf2e5ecf665b977da", "message": "Correct javadoc warnings"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/517c6c9c33bc9cbed40c443b6831c9f01183ffa6", "message": "Merge pull request #1 from Netflix/master\n\nupdate"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/623067f15d603e4a6027cc8fb2be35c8124738d2", "message": "Merge pull request #203 from dx-pbuckley/dev-add-missing-headers\n\nthese files were missing copyright headers"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/4f22e38f02d2ae785e1d418e4708b95ec94e9cc3", "message": "Set retry for SimpleDB. Minor logging change."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/b28ed7a2b022babc320d80a773bb72623f93a2dc", "message": "Fix race condition when running unit tests on Windows.\nWithout this fix, unit tests occassionally fail on Windows."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/bb01310bd7ec0b3d3f7dff873ced068b0d8d5ea5", "message": "Default simianarmy.janitor.rule.untaggedRule.enabled = false for safety"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/345ad9513aafff397050d613fa87ad06ddffe99d", "message": "Merge pull request #195 from koendc/untagged\n\nNew rule: UntaggedRule"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/82773f09968724c7d724e1f567c7107ae75fe627", "message": "Merge pull request #202 from ebukoski/master\n\nOverride SES client region with an optional property and a SimpleDB fix"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/22e0577897b91318193a925b920c5365c5bbe424", "message": "Override SES client region with an optional property and a SimpleDB fix for dashes in name.\n\nAddresses PR #177 and PR #142."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/71520735ad3a4abdd1b1774e953e20219a96a32c", "message": "Manual merge PR #191.\n\nCloses PR #191."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/1146b1996cc4f41f48895a3878ef78843ee8ec70", "message": "Merge pull request #201 from adm-github/email_regex_fix\n\nEmail regex fix"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/a788e711896e0f49a90304f9b84418422acbff15", "message": "Merge pull request #185 from gnethercutt/opsworks_parentage\n\nOpsWorks-aware Janitor monkey"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/82cb011a94d33e5a06e4ceec64aacc31a4ef0231", "message": "Fix compile error after merge PR #174"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/13eb82b123a51dc562f2e22a4204ec238f030729", "message": "Manual merge of PR #174\nCloses #174"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/6e1c739725a9049a1efcf188c569c3bf3b6b9249", "message": "Merge pull request #140 from gnethercutt/cloudformation_asg_termination_naming\n\nRecord the suffix-stripped version of termination events by the CloudFor..."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/c39c19bc6b9231601f6bc7358e638a99adf37e0d", "message": "Merge pull request #149 from ImmobilienScout24/fix/log_safe_props_only\n\nonly log properties that are safe to log"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/b9e7b1f474d4be79f47cf7a73c286bcba6a94f18", "message": "Merge pull request #151 from socrata-platform/proxy-support\n\nAdd optional proxy configuration to client.properties"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/7c05ddc621b54f57ce5543212a7b3e5240ecc337", "message": "Merge pull request #193 from tusharm/calendar-text-fix\n\nFix test - use calendar with correct timezones"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/comments/17114832", "body": "Can you include a test case for this?\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/comments/17114832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/64120013", "body": "I'm not following the logic for this test: an awsMock was created and setup but never used.  \n\nIt appears this test just looks to see if the owner tags are present in the test list rather then testing if the AWSClusterCrawler is behaving as expected.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/64120013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "abhi1881": {"issues": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/277", "title": "Chaos Monkey on Pivotal Cloud", "body": "Hello,\n\nCan I run chaos monkey service on Pivotal Cloud? If yes, is there any document to refer.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/277/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pwhitham": {"issues": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/275", "title": "Receiving 401 API access error to wrong region when using Chaos Monkey with instance roles and sts service.", "body": "I am currently running Chaos Monkey on an ubuntu 16 node in the us-west-2 region which has an instance role with inline policies attached to this instance. When I execute ssh'd based chaos monkey types they fail because they are accessing the us-east-1 region and not the expected us-west-2. Shutdown instance type is not affected by this issue.\n\nThe following line is in my client.properties file\nsimianarmy.client.aws.region = us-west-2\n\nHowever, when I modify the client.properties to contain an explicit AWS access key/secret this issue does not occur and it accesses the appropriate region. \n\n`\n2016-09-12 14:40:20.339 - WARN  ChaosInstance - [ChaosInstance.java:105] Error making SSH connection to instance\norg.jclouds.rest.AuthorizationException: POST **https://ec2.us-east-1.amazonaws.com/ HTTP/1.1** -> HTTP/1.1 401 Unauthorized\n    at org.jclouds.aws.handlers.ParseAWSErrorFromXmlContent.refineException(ParseAWSErrorFromXmlContent.java:122)\n    at org.jclouds.aws.handlers.ParseAWSErrorFromXmlContent.handleError(ParseAWSErrorFromXmlContent.java:89)\n    at org.jclouds.http.handlers.DelegatingErrorHandler.handleError(DelegatingErrorHandler.java:65)\n    at org.jclouds.http.internal.BaseHttpCommandExecutorService.shouldContinue(BaseHttpCommandExecutorService.java:132)\n    at org.jclouds.http.internal.BaseHttpCommandExecutorService.invoke(BaseHttpCommandExecutorService.java:101)\n    at org.jclouds.rest.internal.InvokeHttpMethod.invoke(InvokeHttpMethod.java:90)\n    at org.jclouds.rest.internal.InvokeHttpMethod.apply(InvokeHttpMethod.java:73)\n    at org.jclouds.rest.internal.InvokeHttpMethod.apply(InvokeHttpMethod.java:44)\n    at org.jclouds.reflect.FunctionalReflection$FunctionalInvocationHandler.handleInvocation(FunctionalReflection.java:117)\n    at com.google.common.reflect.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:87)\n    at com.sun.proxy.$Proxy169.describeRegions(Unknown Source)\n    at org.jclouds.ec2.suppliers.DescribeRegionsForRegionURIs.get(DescribeRegionsForRegionURIs.java:50)\n    at org.jclouds.ec2.suppliers.DescribeRegionsForRegionURIs.get(DescribeRegionsForRegionURIs.java:38)\n    at org.jclouds.rest.suppliers.MemoizedRetryOnTimeOutButNotOnAuthorizationExceptionSupplier$SetAndThrowAuthorizationExceptionSupplierBackedLoader.load(MemoizedRetryOnTimeOutButNotOnAuthorizationExceptionSupplier.java:73)\n    at org.jclouds.rest.suppliers.MemoizedRetryOnTimeOutButNotOnAuthorizationExceptionSupplier$SetAndThrowAuthorizationExceptionSupplierBackedLoader.load(MemoizedRetryOnTimeOutButNotOnAuthorizationExceptionSupplier.java:57)\n    at com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3527)\n    at com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2319)\n    at com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2282)\n    at com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2197)\n    at com.google.common.cache.LocalCache.get(LocalCache.java:3937)\n    at com.google.common.cache.LocalCache.getOrLoad(LocalCache.java:3941)\n    at com.google.common.cache.LocalCache$LocalLoadingCache.get(LocalCache.java:4824)\n    at org.jclouds.rest.suppliers.MemoizedRetryOnTimeOutButNotOnAuthorizationExceptionSupplier.get(MemoizedRetryOnTimeOutButNotOnAuthorizationExceptionSupplier.java:119)\n    at org.jclouds.location.suppliers.derived.RegionIdsFromRegionIdToURIKeySet.get(RegionIdsFromRegionIdToURIKeySet.java:45)\n    at org.jclouds.location.suppliers.derived.RegionIdsFromRegionIdToURIKeySet.get(RegionIdsFromRegionIdToURIKeySet.java:33)\n    at com.google.common.base.Suppliers$SupplierComposition.get(Suppliers.java:67)\n    at org.jclouds.rest.suppliers.MemoizedRetryOnTimeOutButNotOnAuthorizationExceptionSupplier$SetAndThrowAuthorizationExceptionSupplierBackedLoader.load(MemoizedRetryOnTimeOutButNotOnAuthorizationExceptionSupplier.java:73)\n    at org.jclouds.rest.suppliers.MemoizedRetryOnTimeOutButNotOnAuthorizationExceptionSupplier$SetAndThrowAuthorizationExceptionSupplierBackedLoader.load(MemoizedRetryOnTimeOutButNotOnAuthorizationExceptionSupplier.java:57)\n    at com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3527)\n    at com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2319)\n    at com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2282)\n    at com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2197)\n    at com.google.common.cache.LocalCache.get(LocalCache.java:3937)\n    at com.google.common.cache.LocalCache.getOrLoad(LocalCache.java:3941)\n    at com.google.common.cache.LocalCache$LocalLoadingCache.get(LocalCache.java:4824)\n    at org.jclouds.rest.suppliers.MemoizedRetryOnTimeOutButNotOnAuthorizationExceptionSupplier.get(MemoizedRetryOnTimeOutButNotOnAuthorizationExceptionSupplier.java:119)\n    at org.jclouds.aws.ec2.compute.strategy.AWSEC2ListNodesStrategy.pollRunningInstances(AWSEC2ListNodesStrategy.java:65)\n    at org.jclouds.ec2.compute.strategy.EC2ListNodesStrategy.listDetailsOnNodesMatching(EC2ListNodesStrategy.java:107)\n    at org.jclouds.ec2.compute.strategy.EC2ListNodesStrategy.listNodes(EC2ListNodesStrategy.java:86)\n    at org.jclouds.ec2.compute.strategy.EC2ListNodesStrategy.listNodes(EC2ListNodesStrategy.java:58)\n    at org.jclouds.compute.internal.BaseComputeService.listNodes(BaseComputeService.java:335)\n    at com.netflix.simianarmy.client.aws.AWSClient.getJcloudsNode(AWSClient.java:857)\n    at com.netflix.simianarmy.client.aws.AWSClient.connectSsh(AWSClient.java:837)\n    at com.netflix.simianarmy.chaos.ChaosInstance.connectSsh(ChaosInstance.java:123)\n    at com.netflix.simianarmy.chaos.ChaosInstance.canConnectSsh(ChaosInstance.java:101)\n    at com.netflix.simianarmy.chaos.ScriptChaosType.canApply(ScriptChaosType.java:55)\n    at com.netflix.simianarmy.chaos.FillDiskChaosType.canApply(FillDiskChaosType.java:52)\n    at com.netflix.simianarmy.basic.chaos.BasicChaosMonkey.pickChaosType(BasicChaosMonkey.java:143)\n    at com.netflix.simianarmy.basic.chaos.BasicChaosMonkey.doMonkeyBusiness(BasicChaosMonkey.java:123)\n    at com.netflix.simianarmy.Monkey.run(Monkey.java:134)\n    at com.netflix.simianarmy.Monkey$1.run(Monkey.java:155)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n    at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: org.jclouds.http.HttpResponseException: request: POST https://ec2.us-east-1.amazonaws.com/ HTTP/1.1  [Action=DescribeRegions] failed with response: HTTP/1.1 401 Unauthorized\n    at org.jclouds.aws.handlers.ParseAWSErrorFromXmlContent.handleError(ParseAWSErrorFromXmlContent.java:63)\n    ... 56 more\n`\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "yufengJ": {"issues": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/274", "title": "BasicChaosMonkey.doMonkeyBusiness() method exit without finishing its job", "body": "Hi all,\n\nI've observed that during BasicChaosMonkey.doMonkeyBusiness(), the method suddenly returned without finishing rest of it's happy-path. There's no exception nor error messages. \n\nThe jettyRun output is as follow:\n\n```\n2016-09-08 16:31:16.328 - INFO  BasicChaosInstanceSelector - [BasicChaosInstanceSelector.java:65] Randomly selecting 1 from 3 instances, excluding null\n2016-09-08 16:31:16.563 - INFO  Monkey - [Monkey.java:138] Reporting what I did...\n```\n\nI've set up the debugger to trace this. The code end up into org.jclouds.ContextBuilde. \nThe stack dump is:\n\n```\n\"pool-1-thread-1@9515\" prio=5 tid=0x1d nid=NA runnable\n  java.lang.Thread.State: RUNNABLE\n    at org.jclouds.ContextBuilder.buildView(ContextBuilder.java:588)\n    at com.netflix.simianarmy.client.aws.AWSClient.getJcloudsComputeService(AWSClient.java:818)\n    - locked <0x2989> (a com.netflix.simianarmy.client.aws.AWSClient)\n    at com.netflix.simianarmy.client.aws.AWSClient.connectSsh(AWSClient.java:834)\n    at com.netflix.simianarmy.chaos.ChaosInstance.connectSsh(ChaosInstance.java:123)\n    at com.netflix.simianarmy.chaos.ChaosInstance.canConnectSsh(ChaosInstance.java:101)\n    at com.netflix.simianarmy.chaos.ScriptChaosType.canApply(ScriptChaosType.java:60)\n    at com.netflix.simianarmy.basic.chaos.BasicChaosMonkey.pickChaosType(BasicChaosMonkey.java:141)\n    at com.netflix.simianarmy.basic.chaos.BasicChaosMonkey.doMonkeyBusiness(BasicChaosMonkey.java:121)\n    at com.netflix.simianarmy.Monkey.run(Monkey.java:134)\n    at com.netflix.simianarmy.Monkey$1.run(Monkey.java:155)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n    at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n```\n\nI've observed the issue on master branch and tag v2.5.1. \nTag v2.5.0 is fine though and I was using it well. So i am suspecting it's because some dependency changes in between that is causing this. However a diff between build.gradle of different tags shows me that jcloud is not upgraded during these two tags. So i am confused as where to go next.\n\n```\n$ diff master_branch/build.gradle tag_v2.5.0/build.gradle\n1,6d0\n< buildscript {\n<     repositories {\n<         jcenter()\n<     }\n< }\n<\n8c2\n<     id 'nebula.netflixoss' version '3.2.3'\n\n---\n>     id 'nebula.netflixoss' version '2.2.9'\n18c12\n< repositories {\n\n---\n> repositories {\n26,28d19\n< sourceCompatibility = 1.7\n< targetCompatibility = 1.7\n<\n36c27,28\n<     compile 'com.sun.jersey:jersey-servlet:1.19'\n\n---\n>     compile 'com.sun.jersey:jersey-core:1.11'\n>     compile 'com.sun.jersey:jersey-servlet:1.11'\n40c32,34\n<     compile 'com.netflix.eureka:eureka-client:1.4.1'\n\n---\n>     compile('com.netflix.eureka:eureka-client:1.1.22') {\n>         exclude group: 'com.sun.jersey', module: 'jersey-bundle'\n>     }\n49a44\n>     compile 'ch.qos.logback:logback-classic:1.0.13'\n51,52d45\n<     compile 'org.springframework:spring-jdbc:4.2.5.RELEASE'\n<     compile 'com.zaxxer:HikariCP:2.4.7'\n```\n\nI might dig deeper into this. Has anyone got this issue before?\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Kenovo": {"issues": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/265", "title": "Chaos Monkey on Openstack ?", "body": "Hi all,\nCan i run chaos monkey on a microservice architecture runing on openstack ? there is any stating guides or tutorials to how to do this ?\n\nThank you\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "priya23": {"issues": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/262", "title": "Reg:Custom Rules in Janitor monkey", "body": "Hi ,\nI was going through janitor monkey and according to my understanding it checked the if the resource has not launched for more than 2 days and mark it for termination but what if i want to add custom rule saying if average cpu utilization of resource is less than 50% delete it.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ghost": {"issues": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/259", "title": "AWSClient ComputeServiceContext problem", "body": "Hello,\n\nWhen trying to run chaos that need ssh connection with AWS instances i found a problem when trying to get ComputeServiceContext with jcloud. After some debugging i found that the problem was related to versions of the google guice jar.\n\nThis tests fails with the bellow exception:\n\n```\n@Test\n    public void testGetJcloudsComputeService() {\n\n        String username = \"xxx\";\n        String password = \"xxx\";\n        ComputeServiceContext jcloudsContext = ContextBuilder.newBuilder(\"aws-ec2\").credentials(username, password)\n                .modules(ImmutableSet.<Module>of(new SLF4JLoggingModule(), new JschSshClientModule()))\n                .buildView(ComputeServiceContext.class);\n\n        Assert.assertNotNull(jcloudsContext);\n\n    }\n```\n\n```\njava.lang.NoClassDefFoundError: com/google/inject/internal/util/$Preconditions\nat org.nnsoft.guice.rocoto.configuration.ConfigurationModule.configure(ConfigurationModule.java:64)\n    at com.google.inject.AbstractModule.configure(AbstractModule.java:62)\n    at com.google.inject.spi.Elements$RecordingBinder.install(Elements.java:340)\n    at com.google.inject.spi.Elements.getElements(Elements.java:110)\n    at com.google.inject.spi.Elements.getElements(Elements.java:101)\n    at org.nnsoft.guice.rocoto.Rocoto.expandVariables(Rocoto.java:52)\n    at org.nnsoft.guice.rocoto.Rocoto.expandVariables(Rocoto.java:47)\n    at org.jclouds.config.BindPropertiesToExpandedValues.configure(BindPropertiesToExpandedValues.java:45)\n    at com.google.inject.AbstractModule.configure(AbstractModule.java:62)\n    at com.google.inject.spi.Elements$RecordingBinder.install(Elements.java:340)\n    at com.google.inject.spi.Elements.getElements(Elements.java:110)\n    at com.google.inject.internal.InjectorShell$Builder.build(InjectorShell.java:138)\n    at com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:104)\n    at com.google.inject.Guice.createInjector(Guice.java:96)\n    at com.google.inject.Guice.createInjector(Guice.java:84)\n    at org.jclouds.ContextBuilder.expandProperties(ContextBuilder.java:382)\n    at org.jclouds.ContextBuilder.buildInjector(ContextBuilder.java:317)\n    at org.jclouds.ContextBuilder.buildView(ContextBuilder.java:608)\n    at org.jclouds.ContextBuilder.buildView(ContextBuilder.java:588)\n    at com.netflix.simianarmy.client.aws.TestAWSClient.testGetJcloudsComputeService(TestAWSClient.java:136)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)\n    at org.testng.internal.Invoker.invokeMethod(Invoker.java:691)\n    at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:883)\n    at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1208)\n    at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)\n    at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)\n    at org.testng.TestRunner.privateRun(TestRunner.java:758)\n    at org.testng.TestRunner.run(TestRunner.java:613)\n    at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)\n    at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)\n    at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)\n    at org.testng.SuiteRunner.run(SuiteRunner.java:240)\n    at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)\n    at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:87)\n    at org.testng.TestNG.runSuitesSequentially(TestNG.java:1137)\n    at org.testng.TestNG.runSuitesLocally(TestNG.java:1062)\n    at org.testng.TestNG.run(TestNG.java:974)\n    at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:74)\n    at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:121)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)\nCaused by: java.lang.ClassNotFoundException: com.google.inject.internal.util.$Preconditions\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:381)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:424)\n    at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n    ... 48 more\n```\n\nThe dependency com.netflix.eureka:eureka-client:1.4.1 forces google guice 4.0 jar to be imported, and in 4.0 the package com/google/inject/internal/util/$Preconditions does not exists.\n\nExcluding the google.com.inject dependency from eureka in the gradle.build solves the problem and make ssh available to chaos in AWS instances:\n\n```\ncompile ('com.netflix.eureka:eureka-client:1.4.1') {\n        exclude group: 'com.google.inject'\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jantman": {"issues": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/237", "title": "Janitor Monkey Email Tags", "body": "Janitor Monkey's emails just include instance IDs, which are relatively opaque and are too easily overlooked by users.\n\nIt would be much more useful if the Janitor Monkey notification emails included a list of all tags and their values for each instance, or a configurable list of tags.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/237/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "slevental": {"issues": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/229", "title": "Docker support ", "body": "I wan't to adapt simian army to be able to with docker based infrastructure, so following that have few questions:\n- are there any plans of adding docker suppor: making simianarmy be able to connect and test docker containers? \n- any concerns or pitfalls you might see with this idea.\n- Is this something that might be interesting to anyone else, so I can do PR?\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/229/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "harish143us": {"issues": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/199", "title": "Choas Monkey Setup", "body": "When I access http://localhost/:8080/simianarmy/api/v1/chaos, the URL gives me []\n\nI have setup eveything right as per my knowledge. I have a question. \n\n To get a termination you can restart a few times, it should take on average 6 tries. If a termination happens another one will not happen again today for that group. To guarantee that a termination happens, you can set the probability to \"6.0\" (ie 600% which will make sure it kills an instance on the first run).\n\nI dont understand what is this and what to be restarted. after running the Monkey. Till now I have 2 instance running 1. Choas Setup and 2. ASG (target Monkey). Any help here would be much appreciated. \n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kuntal1684": {"issues": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/194", "title": "jettyRun execution stops at 75% with AmazonHttpClient - [AmazonHttpClient.java:448] Unable to execute HTTP request: connect timed out java.net.SocketTimeoutException: connect timed out", "body": "Unable to execute jettyRun successfully due to below mentioned error:\n\n> Building 75% > :jettyRun > Starting\n> INFO  AmazonHttpClient - [AmazonHttpClient.java:448] Unable to execute HTTP request: connect timed out\n> java.net.SocketTimeoutException: connect timed out\n\nINFO  c.n.s.basic.BasicMonkeyServer - Adding Janitor Monkey.\nunavailable\njava.lang.NullPointerException\n        at com.netflix.simianarmy.MonkeyRunner.replaceMonkey(MonkeyRunner.java:140)\n        at com.netflix.simianarmy.basic.BasicMonkeyServer.addMonkeysToRun(BasicMonkeyServer.java:57)\n        at com.netflix.simianarmy.basic.BasicMonkeyServer.init(BasicMonkeyServer.java:78)\n        at javax.servlet.GenericServlet.init(GenericServlet.java:241)\n        at org.mortbay.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:440)\n        at org.mortbay.jetty.servlet.ServletHolder.doStart(ServletHolder.java:263)\n        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)\n        at org.mortbay.jetty.servlet.ServletHandler.initialize(ServletHandler.java:685)\n        at org.mortbay.jetty.servlet.Context.startContext(Context.java:140)\n        at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1272)\n        at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:517)\n        at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:489)\n        at org.gradle.api.plugins.jetty.internal.JettyPluginWebAppContext.doStart(JettyPluginWebAppContext.java:112)\n        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)\n        at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)\n        at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)\n        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)\n        at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)\n        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)\n        at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)\n        at org.mortbay.jetty.Server.doStart(Server.java:224)\n\nSimianArmy build was successful.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "shafi-codez": {"issues": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/181", "title": "CPU Burn Issue", "body": "below is my property set \n\nsimianarmy.chaos.burnmoney = false\n\nsimianarmy.chaos.ssh.user=<keyname>\nsimianarmy.chaos.ssh.key=<absolute pafth of key>\n\nNote this key works with manuall SSH via CMD line\n\nAm getting below exception\n\n2015-04-02 12:00:19.523 - WARN  ChaosInstance - [ChaosInstance.java:105] Error making SSH connection to instance\ncom.google.inject.CreationException: Guice creation errors:\n\n1) org.jclouds.rest.config.SyncToAsyncHttpApiProvider<org.jclouds.rest.HttpClient, A> cannot be used as a key; It is not fully specified.\n\n2) org.jclouds.rest.config.SyncToAsyncHttpApiProvider<org.jclouds.ec2.EC2Client, A> cannot be used as a key; It is not fully specified.\n\n3) org.jclouds.rest.RestContext<org.jclouds.ec2.EC2Client, A> cannot be used as a key; It is not fully specified.\n\n4) No implementation for org.jclouds.rest.HttpClient was bound.\n  at org.jclouds.rest.config.BinderUtils.bindHttpApiProvider(BinderUtils.java:109)\n\n5) No implementation for org.jclouds.ec2.EC2Client was bound.\n  at org.jclouds.rest.config.BinderUtils.bindHttpApiProvider(BinderUtils.java:109)\n\n5 errors\n        at com.google.inject.internal.Errors.throwCreationExceptionIfErrorsExist(Errors.java:435)\n        at com.google.inject.internal.InternalInjectorCreator.initializeStatically(InternalInjectorCreator.java:154)\n        at com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:106)\n        at com.google.inject.Guice.createInjector(Guice.java:95)\n        at org.jclouds.ContextBuilder.buildInjector(ContextBuilder.java:407)\n        at org.jclouds.ContextBuilder.buildInjector(ContextBuilder.java:331)\n        at org.jclouds.ContextBuilder.buildView(ContextBuilder.java:622)\n        at org.jclouds.ContextBuilder.buildView(ContextBuilder.java:602)\n        at com.netflix.simianarmy.client.aws.AWSClient.getJcloudsComputeService(AWSClient.java:728)\n        at com.netflix.simianarmy.client.aws.AWSClient.connectSsh(AWSClient.java:746)\n        at com.netflix.simianarmy.chaos.ChaosInstance.connectSsh(ChaosInstance.java:123)\n        at com.netflix.simianarmy.chaos.ChaosInstance.canConnectSsh(ChaosInstance.java:101)\n        at com.netflix.simianarmy.chaos.ScriptChaosType.canApply(ScriptChaosType.java:61)\n        at com.netflix.simianarmy.basic.chaos.BasicChaosMonkey.pickChaosType(BasicChaosMonkey.java:141)\n        at com.netflix.simianarmy.basic.chaos.BasicChaosMonkey.doMonkeyBusiness(BasicChaosMonkey.java:121)\n        at com.netflix.simianarmy.Monkey.run(Monkey.java:134)\n        at com.netflix.simianarmy.Monkey$1.run(Monkey.java:155)\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n        at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:304)\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:178)\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n        at java.lang.Thread.run(Thread.java:745)\n2015-04-02 12:00:19.539 - WARN  ScriptChaosType - [ScriptChaosType.java:62] Strategy disabled because SSH credentials failed\n2015-04-02 12:00:19.539 - WARN  ScriptChaosType - [ScriptChaosType.java:62] Strategy disabled because SSH credentials failed\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Ashac": {"issues": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/180", "title": "Difficulty in performing chaos monkey burn CPU strategy", "body": "I am using Netflix Simian Army tool. I am trying to perform Chaos monkey Burn CPU strategy but i am not able to perform. I am performing burn CPU on ubuntu AWS EC2 instance. what could be the reason.The output is given below\n\nThese are the lines which i have mentioned in chaos properties configuration file simianarmy.chaos.ssh.user= ubuntu\n\nsimianarmy.chaos.ssh.key = D:\\Intern.pem\n\nsimianarmy.chaos.burncpu.enabled = true\n\n 2015-04-01 23:14:00.911 - INFO  MonkeyRunner - [MonkeyRunner.java:56] Starting CHAOS Monkey\n 2015-04-01 23:14:01.943 - INFO  Monkey - [Monkey.java:132] CHAOS Monkey Running ...\n 2015-04-01 23:14:01.951 - INFO  MonkeyRunner - [MonkeyRunner.java:56] Starting VOLUME_TAGGING Monkey\n 2015-04-01 23:14:01.964 - INFO  AWSClient - [AWSClient.java:266] Getting all auto-scaling groups in region ap-northeast-1.\n 2015-04-01 23:14:02.185 - INFO  Monkey - [Monkey.java:132] VOLUME_TAGGING Monkey Running ...\n 2015-04-01 23:14:02.185 - INFO  VolumeTaggingMonkey - [VolumeTaggingMonkey.java:138] Volume tagging monkey is not enabled. You can set simianarmy.volumeTagging.enabled to true to enable it.\n 2015-04-01 23:14:02.185 - INFO  Monkey - [Monkey.java:138] Reporting what I did...\n\n 2015-04-01 23:14:02.211 - INFO  MonkeyRunner - [MonkeyRunner.java:56] Starting JANITOR Monkey\n 2015-04-01 23:14:02.412 - INFO  Monkey - [Monkey.java:132] JANITOR Monkey Running ...\n 2015-04-01 23:14:02.415 - INFO  BasicJanitorMonkey - [BasicJanitorMonkey.java:218] JanitorMonkey disabled, set simianarmy.janitor.enabled=true\n 2015-04-01 23:14:02.415 - INFO  Monkey - [Monkey.java:138] Reporting what I did...\n\n 2015-04-01 23:14:02.440 - INFO  MonkeyRunner - [MonkeyRunner.java:56] Starting CONFORMITY Monkey\n 2015-04-01 23:14:02.643 - INFO  Monkey - [Monkey.java:132] CONFORMITY Monkey Running ...\n 2015-04-01 23:14:02.644 - INFO  BasicConformityMonkey - [BasicConformityMonkey.java:244] Conformity Monkey is disabled, set simianarmy.conformity.enabled=true\n 2015-04-01 23:14:02.651 - INFO  Monkey - [Monkey.java:138] Reporting what I did...\n\n2015-04-01 23:14:03.291 - INFO  AWSClient - [AWSClient.java:287] Got 1 auto-scaling groups in region ap-northeast-1.\n2015-04-01 23:14:05.039 - INFO  BasicChaosMonkey - [BasicChaosMonkey.java:276] Group monkey [type ASG] enabled [prob 6.0]\n2015-04-01 23:14:05.051 - INFO  BasicChaosInstanceSelector - [BasicChaosInstanceSelector.java:83] Group monkey [type ASG] has disabled probability: 0.0\n2015-04-01 23:14:05.051 - INFO  BasicChaosInstanceSelector - [BasicChaosInstanceSelector.java:65] Randomly selecting 1 from 1 instances, excluding null\n  2015-04-01 23:14:16.862 - INFO  Monkey - [Monkey.java:138] Reporting what I  did...\n\nAfter this line i am not getting anything\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/180/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jeyrschabu": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/95ceab2ca15c1600feffb4e90e58c3c4f64a610f", "message": "Merge pull request #303 from GeorgeSJWang/master\n\nsynchronize with double-checked locking in AWSClient"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/f4047650f2b654bb9ef33f2408212915e410e835", "message": "Merge pull request #304 from jeyrschabu/dryrunjanitors\n\nAdding support for a dry run functionality when in Leashed Mode"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/344f211ef94b78e91f6a070fa92e3c55b9c77cbc", "message": "Adding support for a dry run functionality when in Leashed Mode\n\n- Added an interface to a `DryRunnalble` Janitor\n- Allowing Janitor in Leashed Mode to mark resources\n- Marking a resource in Leashed mode doesn't generate an event\n- A dry run cleanup should not actually cleanup the resource\n- Added additional logging"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/ed86b3e8b9dbb20333033ca287802e30051201da", "message": "Merge pull request #298 from jeyrschabu/master\n\nAdding a resourceId to the event fields"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/89f794971348d8a5a757e8e3931d7f3378b60c5a", "message": "Adding a resourceId to the event fields"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/9d8c43a08bd9e5b4dc23a8c961b0a5eaf14bb671", "message": "Merge pull request #297 from robfletcher/master\n\nEnsure all resource fields are added to opt in/out events"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/dedfa28726e1825b18d29b4e8836886fda0710be", "message": "Merge pull request #295 from jeyrschabu/update_asg_verbage_termination_reason\n\nUpdating termination description/reason for suspended ASG"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/e9de6d19b04463a8536dcb3daddc05d81d9a538a", "message": "Updating termination description/reason for suspended ASG\n\n- Updated verbiage on ASG termination reason"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/5bbbc5e035a8c1aba9eadf8e7d11ee60e60f746d", "message": "Merge pull request #294 from jeyrschabu/record_event_after_resource_saved\n\nSaving resource before creating event"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/c04df86675ce795c91e6845df1efe9263b2b9c27", "message": "Saving resource before creating event"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "GeorgeSJWang": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/5c4501bbd44ab8b4d03dc5e53beed711bbaab0e9", "message": "synchronize with double-checked locking"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "robfletcher": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/e2d95e581a8bd75faae81f166daa4297add747c5", "message": "Merge pull request #299 from robfletcher/master\n\nflip Travis to trusty rather than Docker"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/9bcc50ccb36849316cbad09287d6bef93ba7c80d", "message": "flip Travis to trusty rather than Docker"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/673479265536f5ccf178f9d6311962ee6709ef0d", "message": "Ensure all resource fields are added to opt in/out events"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/50c424332ef2c1058fce7c3f5703d751e147a51e", "message": "Merge pull request #286 from robfletcher/master\n\nPrevent bad reads from Edda marking ELBs as failing cross-zone balancing"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/04c73cc804e5e78205f0227ec7db81a3f07d639f", "message": "Prevent bad reads from Edda marking ELBs as failing cross-zone balancing"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "robzienert": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/107bf2024e257f5a10f8180bb2cfa01221dc37d5", "message": "Merge pull request #284 from robzienert/sleep-elb-janitor\n\nSleep ELB janitor after each cleanup"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/4444852ebad0ababe3c50a8dc656a8241519de64", "message": "Sleep ELB janitor after each cleanup"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "DaveXiong": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/fa5a6de40284167c27bfe011079f2906ea0c7a02", "message": "fix the wrong argument for query events from RDS"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lorin": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/d9131f4ce5912becaa6144ae6ec631214c0b0f1d", "message": "Point to latest version of Chaos Monkey"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/9a2fcf46a986d7cd03f402275dcd7e6ca2ad1a00", "message": "Merge pull request #236 from atlassian/ASGTagFiltering\n\nApply the ASG Tag filtering on ASGCrawler"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/e604bc634069a808aff0e9331dc2b5932f15cb64", "message": "Merge pull request #228 from jeffggardner/master\n\nAdded the ability to fine-tune the probability on a per-ASG basis."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "algra": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/5ea5989e1eddbc86e76fdd7d91ea521405be0ca7", "message": "Add bavarian holidays"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/e77ee8c9b5895fc0c3ec05cfb57f90d591cdf32a", "message": "Add possibility to configure custom calendar class"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tmack8001": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/700a81b4cbcc02c570270dbc586e8d6673ee17b9", "message": "updating JanitorMonkeyResource to have application/json content-type"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/ff26700aec61b1e56e42d7097b4c6bbbd7ed9a74", "message": "updating ChaosMonkeyResource to have application/json content-type"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jkschneider": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/6869a54fc33a3e9d0e5b69bc8cba082a80e11c77", "message": "Updated Bintray API key"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mlafeldt": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/2320febc0da12da7f529a987b226ab1cb44122a2", "message": "Consistent naming"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/9be209d27b3df5d93169e5387d1705d6b352b954", "message": "Stop Conformity Monkey on destroy"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/727215625cd2532146d5af436033b42ddf6517b1", "message": "Fix test to compare against actual fields"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/4480a0ce47a72ce7f53dd3df6191661f3dab5b9a", "message": "Use correct strategy name in default properties\n\n\"failapi\" was renamed to \"failec2\" in 3c62917960fd74cba88d0a8977ef3e7d208004a2"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/ce6c86362418aefb14d4ee19cbf2ca9daa4379fb", "message": "REST API: Add event ID to list of chaos events\n\nIn order to get the IDs of terminated EC2 instances after the fact.\n\nWith this change, both `POST` and `GET` will return the same JSON fields\nfor each event. For some reason, `eventID` (the EC2 instance ID) was\nmissing when retrieving events via the REST API."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ervansetiawan": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/3f452ea1a0d910766ffbe95aaaf78dc4115d889f", "message": "use EurekaModule and DI as recommended in Eureka 1.4.1"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/d37e46977b584275c2e0ba33098a443edb03d0ee", "message": "use EurekaModule and DI as recommended in Eureka 1.4.1"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/d86d9ce4346fb27d19bc3d33e04fb3312968e733", "message": "use EurekaModule and DI as recommended in Eureka 1.4.1"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gezerk": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/b2a1f4f8a2578a7ce39df6db8a372590a165f8df", "message": "Set jdk version to 8."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rspieldenner": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/a0f8218f41daea7cc711423c61ac1888919b4229", "message": "Updates for travis and moving to nebula.netflixoss 3.2.3"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/491cdbc939069db8da2d1b019075320b7edd97fb", "message": "Remove unneeded properties"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/2dc17b1658867d66d98d9e9581f125f11124320c", "message": "Build upgrade to new netflixoss"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ssharifnabavi": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/9b49c9f5fca889b3ed20eb4f7fb7c872d9d63e02", "message": "Apply the ASG Tag filtering on ASGCrawler"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rmurphy-stelligent": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/6691c5c52eed0e4f0ee946a16f932b1a39ea093e", "message": "Added the awsClientConfig to the SES instantiation to ensure proxy configurations are used"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/df95a7a4b168650a26a6e37f7d071b57398f0a65", "message": "Added some tests to verify proxy configurations"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/ac116980f52088f118d0c9f1913a72e3a2bf486c", "message": "Corrected a miss-spelling of a clas property"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aspyker": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/6feadee0522f371ab9a85613d25ed9953c33362a", "message": "adding OSSMETADATA for NetflixOSS tracking"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gorzell": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/e5bd3ef8e9017d970675e6d2f447efb46ae709a7", "message": "Merge pull request #198 from tusharm/aws-sdk-upgrade\n\nUpgraded AWS SDK to 1.10.5.1"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/1ebd3e6d3c64f3041b3ea209fd803805d0832271", "message": "Merge pull request #187 from hlta/master\n\nUpdate jclouds to 1.9.0 to use ssh-agent feature"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/a499d802739f0b6b18453783165453497ef8ba54", "message": "Merge pull request #183 from pebo/update-pr170\n\nUpdated pr170"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/54b964c14c5e840bd72a0e1e49e310f2a6db8ee7", "message": "Merge pull request #148 from ImmobilienScout24/fix/use_https_for_gradle\n\nswitch gradle download to https"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/7074991", "body": "Your first comment is my main concern, I am less worried about trying to run one monkey that hits all regions.  Mostly I want to avoid forcing people to have to store all of the data in 1 SDB table that has to be in US East.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/7074991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/27686618", "body": "Why the switch to jcenter?\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/27686618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}]}, "gnethercutt": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/5f94e558bedaf31f2a3d56f9f04689033ee04273", "message": "Optionally consider membership in an OpsWorks stack when evaluating the orphaned instance rule for termination"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/297c7fd64d856498e3ee0e357a4454e6c6f2c990", "message": "Merge branch 'master' into cloudformation_asg_termination_naming"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/dc201fb270b84954087a95285cb6351d87406507", "message": "Conversion to the noSuffixInstance group name now happens in terminateInstance, so remove it from sendTerminationNotification. Otherwise, we perform the conversion twice."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/1b47aa82120a8990e2667c504ad83a29dd74bc63", "message": "Make terminateInstance() protected to support overriding by the subclass(es)"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/bc964a4147189ce0fa3a15f049d46e9565a2a583", "message": "Record the suffix-stripped version of termination events by the CloudFormationChaosMonkey to correctly respect maxTerminationsPerDay"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58918322", "body": "The CloudFormationChaosMonkey overrides isMaxTerminationCountExceeded() to use the suffix-stripped version of the ASG name when evaluating targets in doMonkeyBusiness().  The termination events serialized into SDB do **not** have their groupName stripped of their CloudFormation suffix.  This led to isMaxTerminationCountExceeded() always evaluating to **false**, and thus, multiple terminations for a single ASG each day.\n\nThe most straightforward (and consistent) fix seems to be overriding terminateInstance() as well.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58918322/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58945832", "body": "Not sure why the cobertura report isn't getting generated.  Looks like the target is being skipped, but I don't think that is related to my changes.\n\n`:generateCoberturaReport UP-TO-DATE`\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58945832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "pebo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/3b8944caed76407e1e59e16739ba89c57cba9436", "message": "Added cobertura plugin"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/c8c587ac2559733395f7508160ebdaf176bd7f15", "message": "Switched back to mavenCentral and update netflixoss to 2.2.9"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/b9c5464051f87325f14d2c00c1f148dd9facbc27", "message": "Merge remote-tracking branch 'denner/netflixossbuild' into fix-pr170\n\nConflicts:\n\tgradle/wrapper/gradle-wrapper.properties"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "boldfield": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/ae063008080dbe2860f7e77f70cbdf4405155b88", "message": "Fixing comment"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/3da304595120188a22cfadfd4459639eeb548de7", "message": "Adding proxy connection support for AWSClient(s)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mriehl": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/24b39bcf67d04ee301489555977b604e548697a0", "message": "only log properties that are safe to log\n\nCurrently the context logs all key/value pairs from the configuration.\nThis also includes the AWS secret key. Writing the AWS secret key to the\nlog file makes the log file security-critical, something we would like\nto avoid."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "coryb": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/f7b8d89df12c26ffeb9d0e000f2a2cfc998210e7", "message": "Merge pull request #147 from radonsky/remove_dynamic_versions\n\nDynamic versions in the build.gradle file replaced by specific versions"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/a152d42dc67f683e70e4973f38a866f43822ae25", "message": "Merge pull request #145 from radonsky/fix_httpclient_config\n\nFix httpclient config"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/011d467e280bbd2e312ac81ac69dfb0d02df918d", "message": "Merge pull request #138 from radonsky/add_cross_zone_lb_conformity_rule\n\nAdd cross-zone load balancing conformity rule"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/18b6f2ff10a9874a1e3482356cadee834e999c11", "message": "remove sourceCompatibility requirement"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/fb16b7f928d26444cb358723f50eabfc568308c4", "message": "Merge pull request #110 from radonsky/fix_build_issues_caused_by_deps\n\nFix build issues caused by deps"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/3bd143fc9fb46f8278926867bffbec3ed639153a", "message": "Merge pull request #111 from radonsky/update_gradle_wrapper\n\nupdated gradle wrapper to 1.9"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/371de26cc3e9f73f5018ca2126b86c895580f02b", "message": "Merge pull request #106 from radonsky/improve_basicscheduler_unit_test\n\nBasicScheduler unit tests improved"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/7dbed65aed843fd71570f1923c2e3be242d8f014", "message": "Merge pull request #105 from radonsky/merge_latest_gradle_template\n\nMerged latest changes from \u2018Netflix/gradle-template\u2019 single-project branch"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/ec22edb1ea57182addc308e3f3790d7dff4a94a6", "message": "Merge pull request #104 from radonsky/fix_enumerated_types\n\nFix enumerated types"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/7e99cdf9b8d7e8aa8a7fae9c40658a0c4df53f37", "message": "Merge pull request #103 from radonsky/Optional_summary_email_notifications\n\nAdded a configuration parameter that allows summary emails to be turned off"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/d78ad0ab6e603747f556b9390a7d56d7b2a8cda0", "message": "Merge pull request #100 from Yelp/yejun_append_domain\n\nappend email domain for janitor notifier"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/2ff61d850f17c5504d91a13cd9ed2b85a4c4504c", "message": "Merge pull request #97 from jhowarth/janitor_fix\n\nDecouple edda and unusedImageRule checks for Janitor Monkey"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/73763ba8fdf25ce42012035ac3853bf75f7979da", "message": "update deps, use latest.release for mapdb and jclouds-all does not seem to actually be required"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/fb84f7a598acbbef8a588b606dc146046971974c", "message": "Merge pull request #102 from Yelp/yejun_dst_change_test_fix\n\nfix test failure when daylight saving time to normal time"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/7fb5f419ee362e4bb6fb024d25991fb648149031", "message": "Merge pull request #101 from Yelp/yejun_fallback_instance_to_ami\n\nFallback instance to ami"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/714b6366e40292aa92d2a3aa415499c0a9f96598", "message": "Merge pull request #98 from jhowarth/empty_scanner_fix\n\nHandle empty response content in MonkeyRestClient."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/16ca9d3983c2503d2d255ae0e9219f66aa377bd0", "message": "Merge pull request #99 from coryb/codiverse-addCFtoConf\n\nfix merge for #80"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/991a9dbae5052cee2a8bc04bb9acb98acef8c88d", "message": "fix merge for PR #80"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/8e5d42205b5733bf0b1b7f658bdbf3e209ecff7f", "message": "Merge pull request #93 from justinsb/more_chaos_types\n\nMore chaos types"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/7015083", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/7015083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/7053351", "body": "I can set the org.slf4j dep as runtime, it wasn't clear to me where that should go since I didnt want to force all slf4j users to include the log4j dep.\n\nI think the javax.servlet dep has to remain providedCompile since I believe it is only shipped with jetty/tomcat etc.  Changing it to runtime causes the compile to fail.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/7053351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/7378260", "body": "Good suggestions.  I will look into moving the BasicChaosCrawler into the aws package and abstracting the AWS specific exceptions in BasicChaosMonkey.  \n\nTo make it work with other technologies I think you just need to implement the ChaosCrawler and CloudClient interfaces, then create a BasicContext that use instances of your implementation.\n\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/7378260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/7663088", "body": "I assume you are talking about the magic number 2.2250738585072012e-308 causing the jvm to hang?  This logic is used to read doubles out of a config file, so for someone to exploit they would need write access to the config and the ability to restart the jvm.  There don't seem to be many viable alternatives to parseDouble, so the easiest fix is probably to just skip parsing any string containing this sequence \"22250738585072012\" (after removing any period).\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/7663088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/7663110", "body": "I am not sure why you think the object does not have equals implemented.  It is a String, which definitely has equals().\n\nFor me 73 is:\nif (pair.getKey().equals(\"since\")) {\n\npair is defined above on line 69 as: for (Map.Entry&lt;String, List&lt;String&gt;&gt; pair : uriInfo.getQueryParameters().entrySet()) {\n\nso pair.getKey() has to be a String.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/7663110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/7775372", "body": "when you get a chance could you update the wiki for the new options:\nhttps://github.com/Netflix/SimianArmy/wiki/Configuration\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/7775372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/7937612", "body": "Looks good, thank you!\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/7937612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/7956787", "body": "Looks good.  Please update the Config wiki when you get a chance: https://github.com/Netflix/SimianArmy/wiki/Configuration\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/7956787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/9186658", "body": "Thanks Ryan!\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/9186658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/10302182", "body": "Hi Ingmar,  I will try to get this reviewed this week.  It is a lot of code :)\n\nThanks\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/10302182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/10341539", "body": "Hey, I noticed that github says \"This pull request cannot be automatically merged.\"  I think you need to merge in \"upstream\" changes that we have made to the main repo.  Michael on the team here has made some change, added some configuration options and cleaned up the code a bit.  Hopefully the merge will not be hard.  To merge in upstream changes I think this is what is required:\n\n git remote add upstream https://github.com/Netflix/SimianArmy.git \n git fetch upstream\n git merge upstream/master\n _fix conflicts_\n git commit\n git push\n\nmore details here:\nhttps://help.github.com/articles/fork-a-repo\n\nThanks\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/10341539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/10864769", "body": "Hi Ingmar,\n\nSorry for the delay, I have not had a lot of time lately and there was a holiday here to slow things down further.\n\nOverall the patch looks really good.\n\nThere are some very minor issues.\n- The gradle build now gives:\n  \n  Missing header in: src/main/java/com/netflix/simianarmy/client/vsphere/VSphereServiceConnection.java \n  Missing header in: src/main/java/com/netflix/simianarmy/client/vsphere/VSphereClient.java \n  Missing header in: src/main/java/com/netflix/simianarmy/client/vsphere/VSphereGroups.java\n  Missing header in: src/main/java/com/netflix/simianarmy/client/vsphere/VSphereContext.java\n  Missing header in: src/main/java/com/netflix/simianarmy/client/vsphere/TerminationStrategy.java\n  Missing header in: src/main/java/com/netflix/simianarmy/client/vsphere/PropertyBasedTerminationStrategy.java\n  Missing header in: src/test/java/com/netflix/simianarmy/client/vsphere/TestPropertyBasedTerminationStrategy.java\n  Missing header in: src/test/java/com/netflix/simianarmy/client/vsphere/TestVSphereServiceConnection.java\n  Missing header in: src/test/java/com/netflix/simianarmy/client/vsphere/TestVSphereGroups.java\n  Missing header in: src/test/java/com/netflix/simianarmy/client/vsphere/TestVSphereContext.java\n  Missing header in: src/test/java/com/netflix/simianarmy/client/vsphere/TestVSpehereClient.java\n\nIt is complaining about the license header location.  The gradle plugin is a bit dumb so it does not see your license header when you place it after the import statements.  To fix this please move the license header to the top of the files.\n- Please revert the src/main/resources/simianarmy.properties changes. I think you changed these values for testing, but I prefer to leave the defaults as they were.  Generally when I need to change the properties file for testing I run \"git update-index --assume-unchanged <file>\" to make git ignore my local changes so they don't get pushed upstream.\n- client.properties  - The client properties makes sense, but I guess I dont like the \"client.\" property prefix, it seems a bit too generic.  I would suggest making all the properties \"simianarmy.client.....\"  Also since you refactored the aws code, I  suggest changing the \"simianarmy.aws....\" properties to \n  \"simianarmy.client.aws...\" and move those defaults from simianarmy.properties to client.properties.  I assume you didn't make that change to preserve backwards compatibility, but I think it makes sense to make that change.\n\nOtherwise, it looks great.\n\nThanks!\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/10864769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/10980631", "body": "Looks good.  Thanks!\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/10980631/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/11390398", "body": "It is all merged in now.  I think the license plugin has a bug in that it seems to require the exact Copyright line to match.  I gave up and just disabled the license plugin for now.\n\nThanks!\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/11390398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/11773908", "body": "Thanks for setting this up, looks good.\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/11773908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/14316438", "body": "Hey.  The patch seems good for now.  I think as some point in the future we could get rid off all the Edda specialization and instead create an AwsClient subclass that uses Edda instead of AWS as the data source.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/14316438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/15930421", "body": "The current monkey implementation uses SimpleDB.  It is used by default only as an implementation to the MonkeyRecorder class (which just records chaos/janitor events).  Feel free to re-implement MonkeyRecorder with whatever backend best suits your need, and we would love to accept alternatives contributed back to the project.\n\nI am going to close this Issue, if you have specific issues with SimpleDB feel free to open a new issue.  If you have general questions you can also try the google group: http://groups.google.com/group/simianarmy-users\n\nThanks!\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/15930421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/18990370", "body": "Hi Dip,\n\nMy suggestion would be to create a CloudFormationChaosMonkey that extends BasicChaosMonkey and override isGroupEnabled to ignore the random suffix on the ASG name.  We would also need to change BasicMonkeyServer.getChaosMonkeyClass to be configurable (ie use simianarmy.client.chaos.class property to specify new monkey class at startup.\n\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/18990370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22129194", "body": "Sorry I lost track of this one, I thought it was already merged. Thanks!\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22129194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22306046", "body": "Hi,\n\nHaving the Simian Army operate against multiple account would defiantly be something we be interested in accepting as a pull request.  At Netflix wouldn't need the functionality so at this point it is unlikely something we would contribute ourselves, but I think it would be a great benefit to the open-source community and we would love to have it as part of the project.\n\nAs for the AWS client issues, I agree it is an issue.  We know cleanup needs to happen in this area, but we have not had time to look into it yet.  Honestly  it will be a while before we would have a chance to look into it, so if this is something that you feel like tackling that would be super awesome.\n\nThanks!\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22306046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22363756", "body": "Hey, \nLets try something like:\ncompile 'com.amazonaws:aws-java-sdk:latest.release'\n\nThat will get you 1.5.3 to work with, but allow for companies to have a bit of flexibility with private repos to manage the dep.\n\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22363756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22796670", "body": "Looks good, thanks.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22796670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24430876", "body": "tests are failing:\nhttps://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/54/console\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24430876/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25054387", "body": "Hi Justin, \n\nThanks for the contributions.  The changes look interesting.  Sorry it has taken so long for me to look at this.  The pull requests are sort of a mess with the cumulative changes mixed in and basically too hard for me to find the meaningful content.  I think it would make more sense to merge all the various chaos type changes into one large pull request.\n\nAlso I don't think I saw any unit tests provided?  Perhaps I just missed them, but getting some tests added would really be appreciated.\n\nThanks\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25054387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25055474", "body": "Hi, thanks for the pull request, it is a good idea.  Sorry for the delay.\n\nI think the SimplerDBRecorder name is clever, but I would rather it be more obvious, something like LocalDBRecorder maybe?  And I think the config settings prefix should be something like simianarmy.recorder.localdb.... and moved to the simianarmy.properties.\n\nThe simianarmy.client.recorder.class in the client.properties is good, but I would rather the default stay with SDB for now.  I would leave a comment to switch to your implementation, but explicitly set the default value to com.netflix.simianarmy.aws.SimpleDBRecorder.  The advantage of SDB over your SimplerDB is obviously that it has off-host storage, and if you are running chaos monkey in the cloud it will terminate itself periodically thereby losing all the events stored on local storage. \n\nThanks!\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25055474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25060455", "body": "Hey, it looks like pull request #93 is comprehensive of all the requests right?  I think I will just review that more with more detail and add comments if I seen anything I think needs changing.  \n\nFor the unit tests I was going to point you to our coverage reports, but the reports seem broken at the moment:\nhttps://netflixoss.ci.cloudbees.com/job/SimianArmy-master/cobertura\n\nI will try to get the coverage reports working again then that should highlight any chunks that need additional testing.\n\nThanks,\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25060455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25111828", "body": "Hey Chris, thanks for the patch.  I cant accept the patch unfortunately because you have released it with GPLv3 license which is incompatible with the Apache 2.0 license.  If you want to re-release it under the Apache 2.0 license I would be glad to accept the pull request. https://github.com/Netflix/SimianArmy/blob/master/LICENSE\n\nThanks\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25111828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25202411", "body": "Thanks for the pull request!\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25202411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25209420", "body": "Yeah, please just continue updating this PR (#93), I want to commit it all at once. I think we can close the others PRs.\n\nThanks\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25209420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25936109", "body": "Sorry for the delay again.  Thanks for all the work Justin, the changes look good.  Will merge now.\n\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25936109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25936238", "body": "this PR is obsolete by #93\nclosing.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25936238/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25936288", "body": "Looks good, sorry for the delay.\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25936288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25936683", "body": "Looks good, thanks for the patch!\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25936683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25938314", "body": "Sorry if I am missing something.  It doesn't look like this patch does really decouple Edda from unusedImageRule.  If simianarmy.janitor.edda.enabled property is false then we will still throw the RuntimeException(\"Image Janitor only works when Edda is enabled.\").  Perhaps this patch is for the case where Edda is enabled but simianarmy.janitor.rule.unusedImageRule.enabled is false?  The net result of that would be an ImageJanitor without any rules which does not seem useful.\n\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25938314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/28241991", "body": "Looks good, thanks!  Sorry for the delay, I have been away on vacation.\n\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/28241991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/28242090", "body": "Looks good, thanks!\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/28242090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29320201", "body": "Sorry for the delay, finally processing the backlog.  Merging now. Thanks!\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29320201/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29326686", "body": "Thanks for the patch!\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29326686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29688845", "body": "Looks good, thanks Marek!\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29688845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6615351", "body": "This should probably be:\n\n``` java\nif( chaosType.isEnabled() && chaosType.canApply(cloudClient, instanceId)) { \n   ...\n}\n```\n\notherwise we will see warnings like \"Not an AWSClient, can't use security groups\" even when the type is disabled.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6615351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6615649", "body": "This chaos type will only work if the instance is in vpc.  It seems like we should check to see if the instanceId has a vpcId associated with it, otherwise return false.  I am not sure how expensive it will be to call describeInstances(instanceId) on this, perhaps not too bad.  \n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6615649/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6616039", "body": "you could probably factor out the ssh connection logic from apply(...) and use it here, then immediately disconnect.  Because all the script chaos types would need this logic, it seems like we would need to cache the check results per instances so we dont have to connect to the instance once for each script chaos type\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6616039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6616664", "body": "this only burns io on the root disk, what about the ephemeral disks or ebs mounts.  perhaps randomly pick from any mountpoint:\n\n``` bash\ntmp=$(mktemp)\ndf -hl -x tmpfs | awk '/\\//{print $6}' > $tmp\nmount=$(sed -n $((RANDOM%$(wc -l < $tmp)+1))p $tmp)\nrm $tmp\n```\n\nthen the dd can b on of=$mount/burn\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6616664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6616736", "body": "there is more than one region for s3 as well:\n\n``` bash\necho \"127.0.0.1 s3.amazonaws.com\" >> /etc/hosts\necho \"127.0.0.1 s3-us-west-2.amazonaws.com\" >> /etc/hosts\necho \"127.0.0.1 s3-us-west-1.amazonaws.com\" >> /etc/hosts\necho \"127.0.0.1 s3-eu-west-1.amazonaws.com\" >> /etc/hosts\necho \"127.0.0.1 s3-ap-southeast-1.amazonaws.com\" >> /etc/hosts\necho \"127.0.0.1 s3-ap-southeast-2.amazonaws.com\" >> /etc/hosts\necho \"127.0.0.1 s3-ap-northeast-1.amazonaws.com\" >> /etc/hosts\necho \"127.0.0.1 s3-sa-east-1.amazonaws.com\" >> /etc/hosts\n```\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6616736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6616846", "body": "similar to burnio it might be interesting to randomize which mount is filled up.\n\nYou can also get a better guess than 65g with:\n\n``` bash\nnohup dd if=/dev/urandom of=/burn bs=1M count=$(df -ml /burn  | awk '/\\//{print $2}') iflag=fullblock &\n```\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6616846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6616984", "body": "I think I would recommend all the new types to be default false, so that when people upgrade they will not be surprised by these changes.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6616984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6617293", "body": "Yeah, good point about the EBS charges.  Would be nice if we could tell the difference between ebs volumes and the ephemeral disks.  However for ebs root volumes wouldnt your current script still increase charges?\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6617293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6617315", "body": "Useful document: http://docs.aws.amazon.com/general/latest/gr/rande.html\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6617315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6617359", "body": "I suppose to minimize charges we could limit these tests to 30m or 1hr. So if they go unnoticed it wont end up costing too much.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6617359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/7935241", "body": "please comment out this line, we don't want to accidentally start spamming the people at bar.com. The code should work with a missing property or null value, so I think just leaving it commented out in the properties file will give users the idea.\n\nThanks\n-Cory\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/7935241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "radonsky": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/25da04e7053b78d9c96ae6f76cebbb60a18720cf", "message": "Dynamic versions in the build.gradle file replaced by specific versions"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/5c04896b3360b060b31fd2e347381770758473e3", "message": "Changed httpclient and httpcode dependencies to 4.3+"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/35a3b5b2a45c8378c99fe7f41bdb8bd755bf9ccc", "message": "Removes deprecated configuration classes for HttpClient library"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/0de29366587fdfedcca2c61f0e93f086e0e3cfb1", "message": "Merge branch 'master' into add_cross_zone_lb_conformity_rule\n\n* master:\n  The original condition should be returned in addition to the new one since unit-test will otherwise fail: the reason for that is that the unit-test checks two things: 1. selected instances 2. terminated\n  maxTerminationsPerDay was checked only once for the group before the iteration over the instances while ee should check if maxTerminationsPerDay was exceeded before trying to terminate *any* instance."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/ad8b8d5aab6cd65ebed67b729aea004ba581715f", "message": "Added a new CrossZoneLoadBalancing conformity rule and a test"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/1f1a4ce712e9326a7dcb3f3ce02246303dbeb447", "message": "Merge pull request #133 from radonsky/master\n\nUpgrade gradle to 1.12"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/4ac9a55fc3bd7d356035446c206a75d02d36f8fa", "message": "Merge branch 'fix_cobertura'\n\n* fix_cobertura:\n  Fixed cobertura reports"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/248b176c180b9765436a7b39755a4e8a1552d357", "message": "Merge pull request #134 from radonsky/fix_cobertura\n\nFixed cobertura reports"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/4a563db4549d2e5c87dd94788608063dc7230d2c", "message": "Fixed cobertura reports"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/38df4d147c71acde9b33b5b6c2a7d0bbac5f45dc", "message": "Upgrade gradle to 1.12"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/d3723cfce9d33d3ad3e1d5cfb4682940e1a8610d", "message": "Minor comment cleanup"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/524ff4224a68231c3fbce4180394d1e7aa06d314", "message": "Merge pull request #117 from mgeis/checkstyle-cleanup\n\ncleaning up some checkstyle violations"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/133f43fe31f11579b1d33e59c112de128c4d021e", "message": "Merge pull request #113 from coryb/master\n\nLooks good. Merging in..."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/ac32f63c0809dc44bda707c4f1d3c7872ee2f6f4", "message": "Merge branch 'master' of https://github.com/Netflix/SimianArmy into fix_build_issues_caused_by_deps\n\n# Via Marek Radonsky (1) and coryb (1)\n* 'master' of https://github.com/Netflix/SimianArmy:\n  updated gradle wrapper to 1.9"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/cba9e6d41d3373aa39a1a67b4e4b79871ca1f2f5", "message": "updated gradle wrapper to 1.9"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/6135cce80eb79f0075f792df9a6b3eb9e40722d1", "message": "Added deletion on exit in tempDbFile method"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/e16db70e3bb62eab2ec9e3853874ad383fc827e3", "message": "Fixes an error caused by JodaTime\u2019s DateMidnight deprecation"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/019a8efe00360e16ebaa676c988743ce6041e264", "message": "Fixes #109 - a new way of creating a temp file in LocalDbRecorder"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/9a716937dc5c1e5d7b3f2d204528986bc26280bc", "message": "Merge pull request #107 from Yelp/yejun_fix_image_cleanup\n\nfix image cleanup"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/ea7d292ba58c8916018e47bb49727942acf7b339", "message": "fixed a PMD warning"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/4c6f702410d0c0f3a5d78dd557da1cd17483219f", "message": "BasicScheduler unit tests improved"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/585fa0ae2020924bed22f22ae5ca0f0c2fe09786", "message": "Merged latest changes from \u2018Netflix/gradle-template\u2019 single-project branch"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/0703c20dc6f70ca0c592df7000eb157cb328a66f", "message": "checkstyle cleanup"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/58ff8a2fc38d2ec6bc060918ab894d3e910753df", "message": "fixed unit tests"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/2ff94b745555322333fce7e8e155e5caf15a0fe7", "message": "improved error reporting from the valueToEnum method"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/4982375ff509d4b0cccc8e929128ea87d52ecef1", "message": "Changed JanitorCrawler\u2019s resourceTypes() method to restrict the resulting EnumSet to contain ResourceTypes only"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/d9f3d255cbf2609a7ee5d16b5ac81b41714e4461", "message": "Added comments"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/f7e34929d394ebf15970905911c742390e91a424", "message": "All uses of raw Enum types replaced by marker interfaces"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/2cf411c6129f98657fc700f5b5fa57981d7b1797", "message": "Added a configuration parameter that allows summary emails to be turned off"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29839457", "body": "@yyejun Thanks for your fix!\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29839457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/31147317", "body": "Hi Mitchell,\n\nThe Janitor Monkey will clean up volumes only if they're tagged with \"detachTime\" tag. The tagging is done by the Volume Tagging Monkey, which periodically adds the tag to the volume. Please make sure that your Volume Tagging Monkey is running. (Did you set the \"simianarmy.volumeTagging.enabled\" property?)\n\nI hope this helps,\nMarek\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/31147317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/31782031", "body": "Thanks for reporting this. The latest version of MapDB removed the Utils class, so the code needs to create a temp file some other way. I'm going to submit a pull request fixing this shortly.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/31782031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/31789267", "body": "CloudBees Jenkins job seems to have problems with its .m2 cache and that is failing the builds.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/31789267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/31882811", "body": "Ok, so it didn't work. Never mind...\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/31882811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/36067358", "body": "I've reviewed this pull request and it looks good. Thanks for your contribution Matt.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/36067358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/10059495", "body": "Please remove this unused @param\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/10059495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "alfasin": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/774200296938a03f4621226449eb10082934ac6a", "message": "Merge pull request #136 from Netflix/fix-maxKills-chaos-bug\n\nThe original condition should be returned in addition to the new one sin..."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/4a948c14879d7205c8f733447665d77e441d8bb4", "message": "The original condition should be returned in addition to the new one since unit-test will otherwise fail:\nthe reason for that is that the unit-test checks two things:\n1. selected instances\n2. terminated\n\nand no instance should be selected if we reached the max.\nThough the previous fix ensures that we won\u2019t kill the chosen instance - according to the unit-test we should not even choose it (strict approach)."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/122e07467df0437a27931700a571de7def784abe", "message": "maxTerminationsPerDay was checked only once for the group before the iteration over the instances while ee should check if maxTerminationsPerDay was exceeded before trying to terminate *any* instance."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/dfef846e1cdda7cea66941851443a60e2b4a95bd", "message": "Merge pull request #135 from Netflix/fix-maxKills-chaos-bug\n\nmaxTerminationsPerDay was checked only once for the group before the ite..."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/6a3cfb8848baa5a2b3a01ad26d796b4e7bd6d2b7", "message": "Making the code more resilient: if the configuration is messed up (empty string or spaces) or simply doesn\u2019t exist, return the default value (and log the error)"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/c27884621d93d12bdb00def8e9e7829ce527abe0", "message": "The suspicion is that the combination of the latest Java 7 patch doesn\u2019t play along with the old gradle-cobertura plugin (it works fine with Java 6). Updating cobertura to a newer version fixes the build issues."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/553e15873a7659a2696663f162941177f436c331", "message": "upgrade vijava to latest to solve the following bug:\nVim 3.0 through 7.x before 7.2.010 does not properly escape characters, which allows user-assisted attackers to (1) execute arbitrary shell commands by entering a K keystroke on a line that contains a \";\" (semicolon) followed by a command, or execute arbitrary Ex commands by entering an argument after a (2) \"Ctrl-]\" (control close-square-bracket) or (3) \"g]\" (g close-square-bracket) keystroke sequence, a different issue than CVE-2008-2712."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/2aca16272a2a9648616291fbcecedf5072cde65c", "message": "Merge pull request #128 from Netflix/fix-volume-attachment-bug\n\nWe don\u2019t want JM to crash over an empty attachment."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/27a4b2902028aa7657dfb3ebbc904ea06fcaf0e2", "message": "We don\u2019t want JM to crash over an empty attachment."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/4bbfe0d7ce7844c660a1dd79d8c8b90bc17c59a9", "message": "We don\u2019t want JM to crash over an empty attachment."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/e1862b564c18432fe878e08adf86ea5c9cce8dfb", "message": "Merge pull request #119 from mgeis/dst-cutover-bug\n\nFixing DST cutover bug in test cases"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35648619", "body": "Can you provide more details as to why did you re-open the issue ?\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35648619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/37262902", "body": "Looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/37262902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/39287213", "body": "Good question!\nI can only guess that Archaius was developed in parallel to the Simian Army\nand hence wasn't ready for use back then.\n\nOn Thu, Mar 27, 2014 at 12:22 PM, dstengle notifications@github.com wrote:\n\n> Is there some reason the monkeys aren't using archaius instead of\n> java.util.Properties?\n> \n> We now have to come up with some alternate method to configure\n> per-environment rather than doing it just like every other app we have set\n> up.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/Netflix/SimianArmy/issues/123\n> .\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/39287213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/44053837", "body": "Fixed condition...\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/44053837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/56752271", "body": "These are the only two options I would come up with myself!\nAssuming role sounds like a better approach because it will require only a\nsingle deploy - which is easier to maintain.\n\nOn Tue, Sep 16, 2014 at 6:44 AM, tomcart notifications@github.com wrote:\n\n> Hi, we're looking at how best to set up chaos monkey to run across many\n> AWS accounts. Do you have a suggested pattern for this at the moment? Our\n> immediate thought were to either\n> - provide chaos monkey with a list of accounts and have it assume a\n>   role with temporary credentials in each of those accounts (where the\n>   accounts allow it to).\n> - run a chaos monkey install in every account we maintain\n> \n> Of these my immediate preference is for the first, as we already run a\n> fair number of accounts and that will leave us running many independent\n> monkeys, but i'm interested in anyones thoughts on whether this has been\n> done or proposed in the past.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/Netflix/SimianArmy/issues/137.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/56752271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58305877", "body": "Hi YiFeng\n\nFirst, thanks for your contribution!\n\nDon't mean to be nitpicking but please:\n1. declare the class members at the top of the class (see class:\nVSphereGroup for example)\n2. change names like parrent --> parent (unless you meant something else)\nand groupNme --> groupName (nobody will hold an extra keystroke against\nyou)\n3. add some more documentation to your code - it's not alway trivial to\nfollow the logic (see: describeVirtualMachines(String absolutePath) for\nexample).  More documentation is required in the configuration files as\nwell: what is \"<vgName>\" ?\n4. add unit-tests and try to cover at least 70% of the new code + code that\nhas changed.\n\nAll in all the code looks good - please add the minor improvement specified\nabove and I'll merge it.\n\nThanks again,\nNir\n\nOn Sun, Oct 5, 2014 at 5:41 AM, CloudBees pull request builder plugin <\nnotifications@github.com> wrote:\n\n> SimianArmy-pull-requests #146\n> https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/146/\n> SUCCESS\n> This pull request looks good\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/Netflix/SimianArmy/pull/139#issuecomment-57934815.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58305877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/18563476", "body": "Looks like all this logic can be replaced with:\n\n```\nif (privateKey == null) {\n       privateKey = config.getStrOrElse(\"simianarmy.chaos.ssh.password\", null);\n}\nif (privateKey != null) {\n       this.sshCredentials = LoginCredentials.builder().user(sshUser).privateKey(privateKey).build();\n}\n```\n\nor am I missing a case ?\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/18563476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "abasiri": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/0100228e3e1c85d9490d735f89077cb01418e1a3", "message": "Merge pull request #129 from manheim/addEc2Dependency\n\nPZ add org.jclouds.api:ec2:1.6.0 dependency to fix chaos type issue"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/2a698e7922d203405a38f0aed3e6f01d3d113e87", "message": "Merge pull request #122 from mgeis/quiet-dst-check\n\ncommenting out part of test that verifies DST cutover"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/1b471af885f8bc5d9bc6972b6434d8b287a6f32a", "message": "Update version"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/02350ede33b8e23be5cbbbd44c0589b6e59cc808", "message": "Merge pull request #125 from abasiri/improvement/refactor-basic-chaos-monkey-configuration-read\n\nRefactor reading of chaos monkey properties and defaults values"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/30d446b48b7b67c01e1e91dba2342bb59e135b45", "message": "Refactor reading of chaos monkey properties and defaults values\n\nRefactoring out the reading of 'enabled', 'maxTerminationsPerDay', and 'probability' into a separate method. The method also handles reading the default values from the group level if one doesn't exist at the named group level. The reason for the refactor is to override the way defaults are read internally at netflix."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/43653c0b2503534661b8f7bbd797ce37cb2a7526", "message": "Merge pull request #121 from mgeis/probability-bug\n\nProbability bug"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/1bd6ed20f297c4084d59843c30649b0005b1f3ca", "message": "Merge pull request #118 from radonsky/minor_comment_cleanup\n\nMinor comment cleanup"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/37890249", "body": "Thanks @mgeis , Merging.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/37890249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/39417159", "body": "Thanks cloud bees! merging.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/39417159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/39650474", "body": "@benjchristensen do you have the chaos monkey transparent version?\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/39650474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/46038074", "body": "closing request. Please re-open if licensing changes.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/46038074/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "peterzhao": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/0863785965ef13ccd2176a4debece2aed14a5a83", "message": "PZ add org.jclouds.api:ec2:1.6.0 dependency to fix chaos type issue: key [ec2] not found org.jclouds.ContextBuilder.newBuilder"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "benjchristensen": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/6a8b799af24cd638cd7110965ca8504e18cd6b24", "message": "Merge pull request #124 from Netflix/assets\n\nSimian Army Logos"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/be41727b2a2ae0dc96694b19ca988a2ec9d73793", "message": "Simian Army Logos\n\nMaking available on Github as per discussion with @rmeshenberg"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/39614315", "body": "Merging since no one else has.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/39614315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/40242607", "body": "No I don't, sorry. I was just the messenger in gathering and committing these, but I was not involved in creating them.\n\nI generated my own poor quality transparent one for a presentation I just gave, but not one good enough to post here (I just used Keynote to do it).\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/40242607/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "yyejun": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/e50c3c784cc5f8e1cbaebfca7613b33d7708999d", "message": "fix image cleanup"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/087be04691e6c31eb35410dcef900e6abf24ba03", "message": "comment out default domain bar.com"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/99771975a0282d18f5775653f872249f4cbed4fd", "message": "fix test failure when daylight saving time to normal time"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/e16699c0cd7e875920bd9ed277c174b954967623", "message": "fix spell"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/9730ef461d33a9dba2c01bd857dfffbaaad64ab4", "message": "fallback instance email fetch to ami"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/0d18c86188db917bec80e5ed73e1b163876dc194", "message": "append email domain for janitor notifier"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "justinsb": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/de561f8115075da7ef4dc0200df1ec044c8db876", "message": "PMD fixes"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/cd291752d39eb3a9a050b6d0d0f9e13b81310a96", "message": "Checkstyle fixes"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/449ef176386c075e4197885be2bb8962fdcfdf57", "message": "Support burnmoney option, so users must opt-in to activities which will definitely cost money"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/66c112a8d3328f9b84ea94de2b420e28135bd435", "message": "Remove todos from unit tests"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/bae857f317761e991b44a61ffa154ddc0209d828", "message": "Add notes on the activities which can cost money and where we maybe want to randomize the target."}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/bca81a9a96d77883a85f0cfe82645543f37e5329", "message": "Refactor security group changing code into CloudClient, so we can mock it out for tests"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/a6a991a22a15c4f3966187d791c7a996b355a82c", "message": "Fix DetachVolumes test"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/d07ca401ca0d1b3a34a2f8537769d52927df960a", "message": "Add tests for all chaos monkey types"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/2a967120cd64825c79a767ef34ca128763bc7f9f", "message": "Checkstyle etc fixes"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/990f342f437cf75d2b0dba3f152206b0ecdbbbf1", "message": "Each tested chaos monkey script must now include the name of the monkey\n\nFor testing purposes, but probably a good idea anyway"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/d4374ed0efa5e500d8be517e20c9090dcd2c705c", "message": "Work around broken TestNG classloader"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/28c418a7191e6ae4241245f506c8325368507235", "message": "Include the full exception when the chaos monkey fails"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/1d6ef8b487adafefc70d6fb1b2e32c3b27132446", "message": "Move SshClient to CloudClient, to enable mocking"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/0f201fe9722eecd9e0bbafb51c0ff7dca500acf4", "message": "Include the chaos type in the notification emails, use that for the first test"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/1e9eab8469d28935034ee8cdbea95f8cce10e740", "message": "Skip invalid regions for SimpleDB auto-create, to speed up unit test"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/commits/263198739208061bb8502b43e0739210273f50ed", "message": "Checkstyle fixes"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24434443", "body": "Note this is a derived branch from my other pull request, #86 \n\nProbably best to merge that one first ... then this patch will be much more manageable!\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24434443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24434646", "body": "Sorry for failures... while developing the actual plugins I was adding functionality into the base classes.\n\nI've got two new plugins now (one active pull request #87 , one that needs a bit more testing), so I think this \"refactor for pluggability\" PR should be OK now.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24434646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25054750", "body": "No worries Cory!  The Pull requests are more or less cumulative, as most of them build on the previous ones.  I definitely agree they don't make any sense if read out of order!  I think the order should be the numerical order in Github.\n\nIf I look at this PR #86 in this view: https://github.com/Netflix/SimianArmy/pull/86/files\n\nIt seems fairly straightforward (though I'm obviously biased!); this PR is setting up the infrastructure for allowing the chaos type to be pluggable, pulling the shutdown instance strategy into its own class.\n\nThere are a lot of commits that github is collapsing though; let me know if you'd like me to rebase (or do some other git magic!).\n\nI'll look at adding unit tests.  Do you have any suggestions for what would be a good unit tests to add here and on the others PRs?  I've mostly been relying on the existing test suite along with manual testing (it's tricky to do a lot of this without real EC2 instances)...\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25054750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25061479", "body": "Coverage reports would be great to work from.\n\n#93 should be everything, so if you want to see the final picture then by all means jump in there!  I tried to keep them as individual steps in case you wanted to go in small chunks, but (as you can see) I think it made the Git history a lot messier.  If you go into my repo I think it's easier to compare the individual branches that back each pull request, if you want to do that.\n\nWhatever review style works for you, works for me :-)\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25061479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25207649", "body": "100% agree with all the suggestions so far!  I think it is OK to run even expensive checks when picking a strategy, because at that stage we've already decided we're killing an instance and have even chosen the instance to kill.  I don't know how rapidly chaos monkey kills instances at Netflix (I'd guess Netflix is the biggest user), but I'd be surprised if it is more than a few hundred an hour, so I think it's OK to take a few extra seconds here...\n\nIn general, when I'm making these fixes, do you want me to introduce them at the relevant stage in the sequence of pull requests, or should we just work from this \"all-in-one\" PR?  (I guess I'm asking if you'd prefer to abandon the step-by-steps PRs and just merge it as one big merge?)\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25207649/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25269923", "body": "I'm working through the comments.  Probably best to ignore until Monday at least :-)\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25269923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25413157", "body": "I think this is ready for review/consideration again.  I implemented all the suggestions, exception the randomized volume on filldisk & burnio (for now); I'm not really sure whether randomization belongs in a script or \"chaos-monkey-side\".  I did implement the 'burnmoney' option though, so users must opt-in by setting burnmoney=true, otherwise we won't run filldisk or burnio if the root volume is on EBS.  I added a summary of our discussion to the code as a pair of (long) enhancement notes in each of the strategy classes.\n\nThere's also a unit test (TestChaosMonkeyArmy) which should test each of the strategies, which helps with the test coverage.  (I'm not sure Cobertura is calculating the % coverage correctly, even locally, but the coverage is definitely better!).  In order to support the tests, I had to move some functions into CloudClient; I also added the ChaosType to the email notifier and use that in the tests to detect which ChaosType was selected.  It's also nice to have the ChaosType in the emails, I think!\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25413157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6617020", "body": "Agreed 100% - I had intended that; I think this change snuck in from when I was testing...\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6617020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6617026", "body": "Yes agreed.  Much nicer than the way I was doing it (relying on canApply checking cleanly)\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6617026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6617036", "body": "Will do - this only gets called when the instance has been chosen for termination, so anything that isn't outrageously expensive should be OK.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6617036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6617069", "body": "Nice idea ... I'll have a play with this.  The one downside is that we don't want instances opting out of the chaos monkey simply by blocking SSH :-)  Maybe I'l just log with relatively high severity if the SSH key is configured but we can't log in via SSH.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6617069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6617103", "body": "Good script-fu :-)  I can add that change.  EBS activity will cost money though, which is something I wanted to avoid...\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6617103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6617125", "body": "Guess who just learned there's more than one S3 endpoint!  I'll fix this.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6617125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6617145", "body": "Cool.... yes, if it's OK to do things that cost money, then I can't assume 65 Gig should be enough.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6617145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6618405", "body": "Good point on ebs root volumes.  I could add another configuration flag so that we won't apply the burnio strategy if the root disk is on EBS.   This would probably have to be done chaos-monkey side, but it would be a nice justification for going with a separate class for each script-based monkey (along with Javadocs, consistency etc) \n\nI might call the option \"burnMoney\" :-)\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/6618405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "kwizzn": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/307", "title": "Allows overriding the SimpleDB region", "body": "Not every AWS region supports SimpleDB, e.g. eu-central-1. The result is that `SimpleDBRecorder`, `SimpleDBConformityClusterTracker` and `SimpleDBJanitorResourceTracker` fail with HTTP errors while connecting to SimpleDB.\r\n\r\nThis PR adds support for an override configuration that can be enabled when using these regions.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "savagegus": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/293", "title": "Fixes #237 Janitor Monkey Email Tags", "body": "I took the approach of displaying the resource, link to the aws console, and termination reason (which will list missing tags). It's not pretty but renders fine in gmail and is quite a bit more usable.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rosswilson": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/288", "title": "Correcting FillDisk comment about file size", "body": "Just a minor comment fix: `65536MB` is `64GB`, not `65GB`.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "michaelnflx": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/7775568", "body": "The wiki is updated.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/7775568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/11986680", "body": "Cory is OOO till the end of this month. I can take a look at it when I get time later this week or early next week.\n\nThanks,\nMichael\n\nFrom: Michael Neale <notifications@github.com<mailto:notifications@github.com>>\nReply-To: Netflix/SimianArmy <reply@reply.github.com<mailto:reply@reply.github.com>>\nDate: Monday, January 7, 2013 6:33 PM\nTo: Netflix/SimianArmy <SimianArmy@noreply.github.com<mailto:SimianArmy@noreply.github.com>>\nSubject: Re: [SimianArmy] build status indicator (#22)\n\nCory - if you get a chance - are you able to login to buildhive.cloudbees.com and enable the repo for SimianArmy - you can then use the build status URL referring to your (more up todate) repo - better than mine.\n\n(I ran the gradle \"test\" goal in the buildhive config page). If you need help - let me know, I can tweak the settings once you have enabled your repo.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Netflix/SimianArmy/pull/22#issuecomment-11981974.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/11986680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/12111853", "body": "Hi DrGranit,\n\nI think the change is pretty good. My comments are about that we can remove those deprecated methods. We are still at the early stage of this project so removing these methods should not cause many backward-compatibility issues.\n\nAlso, please add Javadoc comments to the constructor of AWSClient to explain how the credentials are obtained there.\n\nAnd please also add comments in client.properties to explain that if no AWS credentials are set there, how the monkeys will obtain the credentials at runtime.\n\nThanks for contributing!\nMichael\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/12111853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/12153420", "body": "Hi DrGranit,\n\nLooks great! Please update the wiki with an example. Let me know if you don't have permissions for the wiki.\n\nThanks,\nMichael\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/12153420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17408160", "body": "Hi Nick,\n\nIt is not a test failure, it is the output of a test. It is a little\nconfusing and probably we should turn off the output of this test.\n\nThanks,\nMichael\n\nOn Fri, May 3, 2013 at 5:36 AM, nicktgr15 notifications@github.com wrote:\n\n> Hi,\n> \n> I followed the quickstart guide and managed to build SimianArmy war\n> without problems. However when I'm trying to run simianarmy in tomcat6 I\n> get the following error in catalina.out.\n> \n> LF4J: Failed to load class \"org.slf4j.impl.StaticLoggerBinder\".\n> SLF4J: Defaulting to no-operation (NOP) logger implementation\n> SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further\n> details.\n> \n> So, I can't get any logs. If I manually add slf4j-log4j12-1.6.0.jar in the\n> lib folder of the webapp then it's ok but I'd like to be there in the first\n> place.\n> \n> I tried to modify build.gradle in order to include slf4j-log4j12-1.6.0.jar\n> as a compile dependency but then one of the tests is failing (although the\n> war file seems to be generated)\n> \n> This is the error that I get when I build with slf4j as a compile\n> dependency:\n> \n> :pmdTest\n> :test\n> SLF4J: This version of SLF4J requires log4j version 1.2.12 or later. See\n> also http://www.slf4j.org/codes.html#log4j_version\n> ERROR cleanupResources, Failed to clean up the resource 11.\n> java.lang.RuntimeException: Magic number of id.\n> at\n> com.netflix.simianarmy.janitor.TestAbstractJanitor.cleanup(TestAbstractJanitor.java:80)\n> at\n> com.netflix.simianarmy.janitor.AbstractJanitor.cleanupResources(AbstractJanitor.java:292)\n> at\n> com.netflix.simianarmy.janitor.TestAbstractJanitor.testJanitorWithCleanupFailure(TestAbstractJanitor.java:222)\n> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n> at\n> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n> at\n> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n> at java.lang.reflect.Method.invoke(Method.java:597)\n> at\n> org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)\n> at org.testng.internal.Invoker.invokeMethod(Invoker.java:691)\n> at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:883)\n> at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1208)\n> at\n> org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)\n> at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)\n> at org.testng.TestRunner.privateRun(TestRunner.java:758)\n> at org.testng.TestRunner.run(TestRunner.java:613)\n> at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)\n> at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)\n> at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)\n> at org.testng.SuiteRunner.run(SuiteRunner.java:240)\n> at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)\n> at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:87)\n> at org.testng.TestNG.runSuitesSequentially(TestNG.java:1137)\n> at org.testng.TestNG.runSuitesLocally(TestNG.java:1062)\n> at org.testng.TestNG.run(TestNG.java:974)\n> at\n> org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:105)\n> at\n> org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:58)\n> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n> at\n> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n> at\n> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n> at java.lang.reflect.Method.invoke(Method.java:597)\n> at\n> org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\n> at\n> org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n> at\n> org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)\n> at\n> org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)\n> at $Proxy2.stop(Unknown Source)\n> at\n> org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:113)\n> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n> at\n> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n> at\n> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n> at java.lang.reflect.Method.invoke(Method.java:597)\n> at\n> org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\n> at\n> org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n> at\n> org.gradle.messaging.remote.internal.TypeCastDispatch.dispatch(TypeCastDispatch.java:30)\n> at\n> org.gradle.messaging.remote.internal.WorkerProtocol.handleIncoming(WorkerProtocol.java:53)\n> at\n> org.gradle.messaging.remote.internal.WorkerProtocol.handleIncoming(WorkerProtocol.java:31)\n> at\n> org.gradle.messaging.remote.internal.ProtocolStack$ProtocolStage.handleIncoming(ProtocolStack.java:167)\n> at\n> org.gradle.messaging.remote.internal.ProtocolStack$BottomStage.handleIncoming(ProtocolStack.java:277)\n> at\n> org.gradle.messaging.remote.internal.ProtocolStack$BottomConnection$1.run(ProtocolStack.java:299)\n> at\n> org.gradle.messaging.remote.internal.ProtocolStack$ExecuteRunnable.dispatch(ProtocolStack.java:120)\n> at\n> org.gradle.messaging.remote.internal.ProtocolStack$ExecuteRunnable.dispatch(ProtocolStack.java:116)\n> at\n> org.gradle.messaging.dispatch.AsyncDispatch.dispatchMessages(AsyncDispatch.java:132)\n> at\n> org.gradle.messaging.dispatch.AsyncDispatch.access$000(AsyncDispatch.java:33)\n> at org.gradle.messaging.dispatch.AsyncDispatch$1.run(AsyncDispatch.java:72)\n> at\n> org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:66)\n> at\n> java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n> at\n> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n> at java.lang.Thread.run(Thread.java:662)\n> \n> Thanks,\n> Nick\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/Netflix/SimianArmy/issues/50\n> .\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17408160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17580329", "body": "Hi Nick,\n\nThe slf4j-log4j12-1.6.0.jar file should be included in the .war file. It is\nnot there because we have a providedCompile for the file in build.gradle to\nfilter it out. I have removed the line and you can sync to the latest\nchange now.\n\nPlease let me know if  you have any further questions.\n\nThanks,\nMichael\n\nOn Fri, May 3, 2013 at 5:36 AM, nicktgr15 notifications@github.com wrote:\n\n> Hi,\n> \n> I followed the quickstart guide and managed to build SimianArmy war\n> without problems. However when I'm trying to run simianarmy in tomcat6 I\n> get the following error in catalina.out.\n> \n> LF4J: Failed to load class \"org.slf4j.impl.StaticLoggerBinder\".\n> SLF4J: Defaulting to no-operation (NOP) logger implementation\n> SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further\n> details.\n> \n> So, I can't get any logs. If I manually add slf4j-log4j12-1.6.0.jar in the\n> lib folder of the webapp then it's ok but I'd like to be there in the first\n> place.\n> \n> I tried to modify build.gradle in order to include slf4j-log4j12-1.6.0.jar\n> as a compile dependency but then one of the tests is failing (although the\n> war file seems to be generated)\n> \n> This is the error that I get when I build with slf4j as a compile\n> dependency:\n> \n> :pmdTest\n> :test\n> SLF4J: This version of SLF4J requires log4j version 1.2.12 or later. See\n> also http://www.slf4j.org/codes.html#log4j_version\n> ERROR cleanupResources, Failed to clean up the resource 11.\n> java.lang.RuntimeException: Magic number of id.\n> at\n> com.netflix.simianarmy.janitor.TestAbstractJanitor.cleanup(TestAbstractJanitor.java:80)\n> at\n> com.netflix.simianarmy.janitor.AbstractJanitor.cleanupResources(AbstractJanitor.java:292)\n> at\n> com.netflix.simianarmy.janitor.TestAbstractJanitor.testJanitorWithCleanupFailure(TestAbstractJanitor.java:222)\n> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n> at\n> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n> at\n> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n> at java.lang.reflect.Method.invoke(Method.java:597)\n> at\n> org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)\n> at org.testng.internal.Invoker.invokeMethod(Invoker.java:691)\n> at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:883)\n> at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1208)\n> at\n> org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)\n> at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)\n> at org.testng.TestRunner.privateRun(TestRunner.java:758)\n> at org.testng.TestRunner.run(TestRunner.java:613)\n> at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)\n> at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)\n> at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)\n> at org.testng.SuiteRunner.run(SuiteRunner.java:240)\n> at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)\n> at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:87)\n> at org.testng.TestNG.runSuitesSequentially(TestNG.java:1137)\n> at org.testng.TestNG.runSuitesLocally(TestNG.java:1062)\n> at org.testng.TestNG.run(TestNG.java:974)\n> at\n> org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:105)\n> at\n> org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:58)\n> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n> at\n> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n> at\n> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n> at java.lang.reflect.Method.invoke(Method.java:597)\n> at\n> org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\n> at\n> org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n> at\n> org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)\n> at\n> org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)\n> at $Proxy2.stop(Unknown Source)\n> at\n> org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:113)\n> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n> at\n> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n> at\n> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n> at java.lang.reflect.Method.invoke(Method.java:597)\n> at\n> org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\n> at\n> org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n> at\n> org.gradle.messaging.remote.internal.TypeCastDispatch.dispatch(TypeCastDispatch.java:30)\n> at\n> org.gradle.messaging.remote.internal.WorkerProtocol.handleIncoming(WorkerProtocol.java:53)\n> at\n> org.gradle.messaging.remote.internal.WorkerProtocol.handleIncoming(WorkerProtocol.java:31)\n> at\n> org.gradle.messaging.remote.internal.ProtocolStack$ProtocolStage.handleIncoming(ProtocolStack.java:167)\n> at\n> org.gradle.messaging.remote.internal.ProtocolStack$BottomStage.handleIncoming(ProtocolStack.java:277)\n> at\n> org.gradle.messaging.remote.internal.ProtocolStack$BottomConnection$1.run(ProtocolStack.java:299)\n> at\n> org.gradle.messaging.remote.internal.ProtocolStack$ExecuteRunnable.dispatch(ProtocolStack.java:120)\n> at\n> org.gradle.messaging.remote.internal.ProtocolStack$ExecuteRunnable.dispatch(ProtocolStack.java:116)\n> at\n> org.gradle.messaging.dispatch.AsyncDispatch.dispatchMessages(AsyncDispatch.java:132)\n> at\n> org.gradle.messaging.dispatch.AsyncDispatch.access$000(AsyncDispatch.java:33)\n> at org.gradle.messaging.dispatch.AsyncDispatch$1.run(AsyncDispatch.java:72)\n> at\n> org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:66)\n> at\n> java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n> at\n> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n> at java.lang.Thread.run(Thread.java:662)\n> \n> Thanks,\n> Nick\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/Netflix/SimianArmy/issues/50\n> .\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17580329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17638611", "body": "Hi Mitchell,\n\nDo you see any logging by AWSEmailNotifier::sendEmail() show up in the log?\nWhen an email is sent, you should see logging like 'Email to foo@bar.com,\nresult id is 1234567, subject is XXX' in the log. Missing the notification\ncould be caused by that AWS rejects to send email from your source account\nfor some reason.\n\nYou can also try to change the log level to DEBUG to see more logging\ninformation.\n\nPlease let me know if you find anything or have further questions.\n\nThanks,\nMichael\n\nOn Wed, May 8, 2013 at 3:14 PM, mcacker notifications@github.com wrote:\n\n> Hi, i'm successfully running Chaos monkey and terminating instances. I'm\n> not, however, receiving email notifications. I've set myself, and my group\n> up as authenticated AWS email recipients, and modified chaos.properties\n> with those emails.\n> \n> I don't see anything in the documentation, and after perusing the code,\n> it's not obvious what is missing.\n> \n> thanks, Mitchell\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/Netflix/SimianArmy/issues/53\n> .\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17638611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17733857", "body": "Hi Mitchell,\n\nSeems it was missing. I just fixed it and submitted the change. Can you\nplease merge the latest and give a try?\n\nThanks,\nMichael\n\nOn Fri, May 10, 2013 at 10:06 AM, mcacker notifications@github.com wrote:\n\n> I had not set the requisite .notifier.enabled = true properties. Now that\n> I have done that I am running into the following error:\n> \n> 2013-05-10 14:05:14.878 - ERROR Monkey$1 - [Monkey.java:157] CHAOS Monkey\n> Error:\n> java.lang.RuntimeException: failed to terminate instance i-faaafea2\n> at\n> com.netflix.simianarmy.basic.chaos.BasicChaosMonkey.handleTerminationError(BasicChaosMonkey.java:159)\n> at\n> com.netflix.simianarmy.basic.chaos.BasicChaosMonkey.terminateInstance(BasicChaosMonkey.java:305)\n> at\n> com.netflix.simianarmy.basic.chaos.BasicChaosMonkey.doMonkeyBusiness(BasicChaosMonkey.java:105)\n> at com.netflix.simianarmy.Monkey.run(Monkey.java:134)\n> at com.netflix.simianarmy.Monkey$1.run(Monkey.java:155)\n> at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)\n> at\n> java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317)\n> at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150)\n> at\n> java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98)\n> at\n> java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:180)\n> at\n> java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:204)\n> at\n> java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n> at\n> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n> at java.lang.Thread.run(Thread.java:662)\n> Caused by: java.lang.RuntimeException: Chaos email notifier is not set.\n> \n> How do you set the email notifier?\n> \n> thanks, Mitchell\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/Netflix/SimianArmy/issues/53#issuecomment-17732223\n> .\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17733857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17745288", "body": "Not for now. But it can be easily supported. The BasicChaosEmailNotifier\nconstructor can take a list of CC emails so it would be not difficult to\ncreate a new configuration property for a list of cc emails and initialize\nthe notifier in BasicChaosMonkeyContext with them. For the owner email,\ncurrently it only allow one single email address, though.\n\nThanks,\nMichael\n\nOn Fri, May 10, 2013 at 2:01 PM, mcacker notifications@github.com wrote:\n\n> BTW, can the notification email be a list of email addresses?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/Netflix/SimianArmy/issues/53#issuecomment-17744311\n> .\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17745288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17791464", "body": "Looks good. There are some other places using SDB table name in queries. I will fix them later.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17791464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/18853028", "body": "Hi,\n\nDid you use gradlew to build? Can it reproduce on a different instance?\n\nThanks,\nMichael\n\nOn Mon, Jun 3, 2013 at 12:26 AM, eltopo71 notifications@github.com wrote:\n\n> Trying to build the army just now but the build script stumbles on this\n> pesky error that comes up while building \"findbugs\". This breaks the build\n> and leads to high CPU and MEM utilization. I have captured the error\n> \n> ## message here:\n> \n> 06:49:34.469 [DEBUG] [system.out] [DEBUG]\n> [org.gradle.process.internal.child.AtionExecutionWorker tarting Gradle\n> Worker 1.\n> 06:49:34.477 [DEBUG] [system.out] 06:49:34.477 [DEBUG]\n> [org.gradle.api.plugins.uality.internal.findbugs.FindBugsWorkerServer\n> xecuting findbugs worker.\n> 06:49:34.502 [DEBUG] [system.out] 06:49:34.501 [DEBUG]\n> [org.gradle.messaging.reote.internal.Router] Received route available.\n> Message: [ConsumerAvailable id: 4ef27df-d6ca-4a87-b878-34462ca228fb,\n> displayName: message server, channel:\n> org.radle.api.plugins.quality.internal.findbugs.FindBugsWorkerClientProtocol]\n> Scanning archives (139 / 169)out] 06:49:41.423 [QUIET] [system.out]\n> Scanning archives (169 / 169)\n> 2 analysis passes to perform.out] 06:49:42.208 [QUIET] [system.out]\n> Pass 1: Analyzing classes (38 / 348) - 10% completeET] [system.out] lPass\n> 1: Analyzing classes (77 / 348) - 22% complete nPass 1: Analyzing classes\n> (116 / 348) - 33% complete cPass 1: Analyzing classes (194 / 348) - 55%\n> complete 3Pass 1: Analyzing classes (232 / 348) - 66% complete iPass 1:\n> Analyzing classes (271 / 348) - 77% complete lPass 1: Analyzing classes\n> (319 / 348) - 88% complete 0Pass 1: Analyzing classes (348 / 348) - 100%\n> complete\n> 06:51:51.733 [DEBUG] [org.gradle.process.internal.DefaultExecHandle]\n> Changing state to: FAILED\n> 06:51:51.733 [INFO] [org.gradle.process.internal.DefaultExecHandle]\n> Process 'Gradle Worker 1' finished with exit value 137 (state: FAILED)\n> \n> I had the software build and run fine early last week so this could be\n> related to the latest commits.\n> \n> My setup is: Amazon Linux 64-bit on a micro instance.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/Netflix/SimianArmy/issues/60\n> .\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/18853028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/18855709", "body": "Hi,\n\nI am not sure if Simian Army can build on micro instances now. Did you\nsuccessfully build Simian Army on a micro instance before? Even yes, as we\nrecently added a new monkey (conformity monkey), more classes probably can\ncause build to fail as more memory may be required.\n\nThanks,\nMichael\n\nOn Mon, Jun 3, 2013 at 10:04 AM, eltopo71 notifications@github.com wrote:\n\n> Yes I am building using gradlew, following the quick start instructions. I\n> just tried it today on a Ubuntu amazon instance and got the same issue.\n> \n> On Mon, Jun 3, 2013 at 12:25 PM, Michael Fu notifications@github.comwrote:\n> \n> > Hi,\n> > \n> > Did you use gradlew to build? Can it reproduce on a different instance?\n> > \n> > Thanks,\n> > Michael\n> > \n> > On Mon, Jun 3, 2013 at 12:26 AM, eltopo71 notifications@github.com\n> > wrote:\n> > \n> > > Trying to build the army just now but the build script stumbles on\n> > > this\n> > > pesky error that comes up while building \"findbugs\". This breaks the\n> > > build\n> > > and leads to high CPU and MEM utilization. I have captured the error\n> > > \n> > > ## message here:\n> > > \n> > > 06:49:34.469 [DEBUG] [system.out] [DEBUG]\n> > > [org.gradle.process.internal.child.AtionExecutionWorker tarting Gradle\n> > > Worker 1.\n> > > 06:49:34.477 [DEBUG] [system.out] 06:49:34.477 [DEBUG]\n> > > [org.gradle.api.plugins.uality.internal.findbugs.FindBugsWorkerServer\n> > > xecuting findbugs worker.\n> > > 06:49:34.502 [DEBUG] [system.out] 06:49:34.501 [DEBUG]\n> > > [org.gradle.messaging.reote.internal.Router] Received route available.\n> > > Message: [ConsumerAvailable id: 4ef27df-d6ca-4a87-b878-34462ca228fb,\n> > > displayName: message server, channel:\n> > \n> > org.radle.api.plugins.quality.internal.findbugs.FindBugsWorkerClientProtocol]\n> > \n> > > Scanning archives (139 / 169)out] 06:49:41.423 [QUIET] [system.out]\n> > > Scanning archives (169 / 169)\n> > > 2 analysis passes to perform.out] 06:49:42.208 [QUIET] [system.out]\n> > > Pass 1: Analyzing classes (38 / 348) - 10% completeET] [system.out]\n> > > lPass\n> > > 1: Analyzing classes (77 / 348) - 22% complete nPass 1: Analyzing\n> > > classes\n> > > (116 / 348) - 33% complete cPass 1: Analyzing classes (194 / 348) -\n> > > 55%\n> > > complete 3Pass 1: Analyzing classes (232 / 348) - 66% complete iPass\n> > > 1:\n> > > Analyzing classes (271 / 348) - 77% complete lPass 1: Analyzing\n> > > classes\n> > > (319 / 348) - 88% complete 0Pass 1: Analyzing classes (348 / 348) -\n> > > 100%\n> > > complete\n> > > 06:51:51.733 [DEBUG] [org.gradle.process.internal.DefaultExecHandle]\n> > > Changing state to: FAILED\n> > > 06:51:51.733 [INFO] [org.gradle.process.internal.DefaultExecHandle]\n> > > Process 'Gradle Worker 1' finished with exit value 137 (state: FAILED)\n> > > \n> > > I had the software build and run fine early last week so this could be\n> > > related to the latest commits.\n> > > \n> > > My setup is: Amazon Linux 64-bit on a micro instance.\n> > > \n> > > \u2014\n> > > Reply to this email directly or view it on GitHub<\n> > > https://github.com/Netflix/SimianArmy/issues/60>\n> > > .\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/Netflix/SimianArmy/issues/60#issuecomment-18853028>\n> > .\n> \n> ## \n> \n> \u201cIf I was racing now, I would not only have more money, but I would also\n> have more ears\u2026\u201d - Niki Lauda\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/Netflix/SimianArmy/issues/60#issuecomment-18855463\n> .\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/18855709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19025147", "body": "Well, I guess you must have some message in the log like 'Not time for\nJanitor Monkey'. Janitor Monkey runs only at 11am by default and only on\nbusiness days. You can uncomment the line below in janitor.properties to\nlet it run at any hour.\n\nsimianarmy.calendar.isMonkeyTime = true\n\nLet me know if you still see issues.\n\nThanks,\nMichael\n\nOn Wed, Jun 5, 2013 at 10:00 PM, eltopo71 notifications@github.com wrote:\n\n> Hi, I finally got the proper credentials and everything seems to be\n> working, except for one thing -- while I get a lot of \"Conformity monkey\n> execution summary\" emails I don't get any notifications from the other\n> monkeys. In particular I've been waiting for a janitor monkey report\n> notifications but it has so far failed to come. I've gone through logs and\n> there doesn't seem to be an exception anywhere that I know of except for\n> the log4j \"multiple bindings\" one, and I just confirmed that my config\n> files have the other monkeys enabled.\n> \n> Again this is on Amazon Linux (small instance). Any idea what could be\n> going on?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/Netflix/SimianArmy/issues/63\n> .\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19025147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19374188", "body": "The changes look pretty good. Thanks for the contribution!\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19374188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19401598", "body": "Looks good.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19401598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19403003", "body": "The Simian Army code comes with a gradle wrapper so you can use it to\nbuild. I am not sure what caused your error. But you can try to follow the\nquick start manual to run\n\n./gradlew clean build\n\nLet me know if you still see errors.\n\nThanks,\nMichael\n\nOn Thu, Jun 13, 2013 at 12:49 AM, akshaypatel122826 <\nnotifications@github.com> wrote:\n\n> Hi,\n> \n> We are working on one of simian army POC project and we have taken source\n> code from netflix.\n> We have setup enviroment in our local machine and try to build using\n> gradle.\n> We have added version of gradle-wrapper is 1.6. We are executing the\n> gradle build command then it goes for downloading file on\n> \n> http://dist.codehaus.org/gradle/gradle-0.9-rc-3-bin.zip url and then it\n> gives below error.\n> \n> A problem occurred evaluating script.\n> Cause: No signature of method:\n> org.gradle.api.internal.initialization.DefaultScr\n> iptHandler.maven() is applicable for argument types:\n> (buildscript_gradle_8e14430\n> 1b5a9a410ba0da9dfa59bd03b$_run_closure1_closure3) values:\n> [buildscript_gradle_8e\n> 144301b5a9a410ba0da9dfa59bd03b$_run_closure1_closure3@159d510]\n> Possible solutions: wait(), any(), every(), wait(long),\n> any(groovy.lang.Closure)\n> , grep(java.lang.Object)\n> \n> Please help us in building code using gradle.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/Netflix/SimianArmy/issues/65\n> .\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19403003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19506755", "body": "How did you fix your last build error? Did you use the gradle wrapper from\nNextflix simian army project? Or you downloaded or created your own gradle\nwrapper?\n\nThanks,\nMichael\n\nOn Fri, Jun 14, 2013 at 3:51 AM, akshaypatel122826 <notifications@github.com\n\n> wrote:\n> \n> Hi,\n> \n> we have resolved above metioned error. Now we are facing below error while\n> doing build.\n> Kinldy help in below issue.\n> \n>    -\n> \n>    What went wrong:\n> \n>    A problem occurred evaluating script.\n> \n> ```\n> Could not find property 'commitNewVersion' on root project\n> ```\n> \n>    'simianarmy'.\n> \n> ```\n> -\n> ```\n> \n>    Try:\n>    Run with --info or --debug option to get more log output.\n> \n> Exception:\n> \n> Exception is:\n> org.gradle.api.GradleScriptException: A problem occurred evaluating script.\n> at\n> org.gradle.groovy.scripts.internal.DefaultScriptRunnerFactory$ScriptRunnerImpl.run(DefaultScriptRunnerFactory.java:54)\n> at\n> org.gradle.configuration.DefaultScriptPluginFactory$ScriptPluginImpl.apply(DefaultScriptPluginFactory.java:127)\n> at\n> org.gradle.api.internal.plugins.DefaultObjectConfigurationAction.applyScript(DefaultObjectConfigurationAction.java:82)\n> at\n> org.gradle.api.internal.plugins.DefaultObjectConfigurationAction.access$000(DefaultObjectConfigurationAction.java:32)\n> at\n> org.gradle.api.internal.plugins.DefaultObjectConfigurationAction$1.run(DefaultObjectConfigurationAction.java:54)\n> at\n> org.gradle.api.internal.plugins.DefaultObjectConfigurationAction.execute(DefaultObjectConfigurationAction.java:114)\n> at\n> org.gradle.api.internal.project.AbstractProject.apply(AbstractProject.java:840)\n> at org.gradle.api.Project$apply.call(Unknown Source)\n> at\n> org.gradle.api.internal.project.ProjectScript.apply(ProjectScript.groovy:34)\n> at org.gradle.api.Script$apply.callCurrent(Unknown Source)\n> at\n> build_5fo6ghv947lob49oe2q90ddn8o.run(E:\\SimianArmy-master\\build.gradle:19)\n> at\n> org.gradle.groovy.scripts.internal.DefaultScriptRunnerFactory$ScriptRunnerImpl.run(DefaultScriptRunnerFactory.java:52)\n> at\n> org.gradle.configuration.DefaultScriptPluginFactory$ScriptPluginImpl.apply(DefaultScriptPluginFactory.java:127)\n> at\n> org.gradle.configuration.BuildScriptProcessor.evaluate(BuildScriptProcessor.java:38)\n> at\n> org.gradle.configuration.LifecycleProjectEvaluator.evaluate(LifecycleProjectEvaluator.java:43)\n> at\n> org.gradle.api.internal.project.AbstractProject.evaluate(AbstractProject.java:462)\n> at\n> org.gradle.api.internal.project.AbstractProject.evaluate(AbstractProject.java:74)\n> at\n> org.gradle.configuration.ProjectEvaluationConfigurer.execute(ProjectEvaluationConfigurer.java:23)\n> at\n> org.gradle.configuration.ProjectEvaluationConfigurer.execute(ProjectEvaluationConfigurer.java:21)\n> at\n> org.gradle.configuration.DefaultBuildConfigurer$1.execute(DefaultBuildConfigurer.java:38)\n> at\n> org.gradle.configuration.DefaultBuildConfigurer$1.execute(DefaultBuildConfigurer.java:35)\n> at\n> org.gradle.api.internal.project.AbstractProject.configure(AbstractProject.java:438)\n> at\n> org.gradle.api.internal.project.AbstractProject.allprojects(AbstractProject.java:433)\n> at\n> org.gradle.configuration.DefaultBuildConfigurer.configure(DefaultBuildConfigurer.java:35)\n> at\n> org.gradle.initialization.DefaultGradleLauncher.doBuildStages(DefaultGradleLauncher.java:139)\n> at\n> org.gradle.initialization.DefaultGradleLauncher.doBuild(DefaultGradleLauncher.java:110)\n> at\n> org.gradle.initialization.DefaultGradleLauncher.run(DefaultGradleLauncher.java:78)\n> at org.gradle.launcher.cli.RunBuildAction.execute(RunBuildAction.java:42)\n> at org.gradle.launcher.cli.RunBuildAction.execute(RunBuildAction.java:28)\n> at\n> org.gradle.launcher.cli.CommandLineActionFactory$ParseAndBuildAction.execute(CommandLineActionFactory.java:201)\n> at\n> org.gradle.launcher.cli.CommandLineActionFactory$ParseAndBuildAction.execute(CommandLineActionFactory.java:174)\n> at\n> org.gradle.launcher.cli.CommandLineActionFactory$WithLogging.execute(CommandLineActionFactory.java:170)\n> at\n> org.gradle.launcher.cli.CommandLineActionFactory$WithLogging.execute(CommandLineActionFactory.java:139)\n> at\n> org.gradle.launcher.exec.ExceptionReportingAction.execute(ExceptionReportingAction.java:31)\n> at\n> org.gradle.launcher.exec.ExceptionReportingAction.execute(ExceptionReportingAction.java:20)\n> at org.gradle.launcher.Main.doAction(Main.java:48)\n> at org.gradle.launcher.exec.EntryPoint.run(EntryPoint.java:45)\n> at org.gradle.launcher.Main.main(Main.java:39)\n> at org.gradle.launcher.ProcessBootstrap.runNoExit(ProcessBootstrap.java:50)\n> at org.gradle.launcher.ProcessBootstrap.run(ProcessBootstrap.java:32)\n> at org.gradle.launcher.GradleMain.main(GradleMain.java:24)\n> Caused by: groovy.lang.MissingPropertyException: Could not find property\n> 'commitNewVersion' on root project 'simianarmy'.\n> at\n> org.gradle.api.internal.AbstractDynamicObject.propertyMissingException(AbstractDynamicObject.java:43)\n> at\n> org.gradle.api.internal.AbstractDynamicObject.getProperty(AbstractDynamicObject.java:35)\n> at\n> org.gradle.api.internal.CompositeDynamicObject.getProperty(CompositeDynamicObject.java:60)\n> at\n> org.gradle.api.internal.project.DefaultProject_Decorated.getProperty(Unknown\n> Source)\n> at\n> org.gradle.groovy.scripts.BasicScript.propertyMissing(BasicScript.groovy:60)\n> at\n> release_62r3428qi4gqfpr2848dvktg2l.run(E:\\SimianArmy-master\\gradle\\release.gradle:7)\n> at\n> org.gradle.groovy.scripts.internal.DefaultScriptRunnerFactory$ScriptRunnerImpl.run(DefaultScriptRunnerFactory.java:52)\n> ... 40 more\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/Netflix/SimianArmy/issues/65#issuecomment-19450785\n> .\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19506755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20391759", "body": "Looks good. Thanks, Carl.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20391759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20529305", "body": "Looks good.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20529305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20616504", "body": "Hi Dip,\n\nI was about to check in the unit tests for conformity rules today.\nConformity rules are pretty simple, for you to start, you can just look at\nthe unit tests for Janitor Monkey rules , it will be pretty similar.\n\nThanks,\nMichael\n\nOn Mon, Jul 8, 2013 at 8:49 AM, Dipesh Patel notifications@github.comwrote:\n\n> Hi\n> \n> I'm in the process of writing my own conformity rule which I may possibly\n> patch back. However I've noticed that there doesn't appear to be any unit\n> testing in this area. Just curious as to how I would go about testing the\n> rule and if there was a framework for it.\n> \n> Thanks\n> \n> Dip\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/Netflix/SimianArmy/issues/71\n> .\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20616504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20619980", "body": "Hi Dip,\n\nI've checked in a sample unit test TestSameZonesInElbAndAsg. You can look\nat it and create unit tests for your rules in the similar way.\n\nPlease let me know if you have any questions.\n\nThanks,\nMichael\n\nOn Mon, Jul 8, 2013 at 9:40 AM, Dipesh Patel notifications@github.comwrote:\n\n> Ah cool thanks for the heads up I'll take a look at Janitor Monkey and\n> keep an eye out for the upcoming patches.\n> \n> Dip\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/Netflix/SimianArmy/issues/71#issuecomment-20618665\n> .\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20619980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20620929", "body": "Sorry about my late reply. I was OOO recently. I have added some comments there.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20620929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/21080552", "body": "Looks good.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/21080552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/21080920", "body": "Generally looks good, a small typo.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/21080920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/21286152", "body": "Looks good. Thanks.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/21286152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/2608578", "body": "You can remove this method.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/2608578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/2608588", "body": "You can remove this method\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/2608588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/2608646", "body": "Remove the duplicate 'credentials'\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/2608646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/2608668", "body": "Remove this constructor\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/2608668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/2608678", "body": "Remove this method.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/2608678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/2608705", "body": "Please add comments to describe how the credentials are obtained.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/2608705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/5069853", "body": "Can you change '!= null' to StringUtils.notBlank()? This way we can prevent that accidentally setting the global email to empty string stops emails to be sent.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/5069853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/5069877", "body": "Please add a log before returning the global email to indicate that the owner email is from the global property.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/5069877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/5070014", "body": "I don't think this is the a correct logic. If a global email is set then, termination email is going to be sent no matter it is enabled or not. I think we should first check whether termination email is enabled and then try to call getOwnerEmail to send the notification.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/5070014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/5231023", "body": "autoScalingGroups should be soloInstances\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/5231023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "IngmarKrusch": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/10334453", "body": "Hi Cory\n\ncool, looking forward to it.\n\nYep, lot of UnitTests and functional code. I tried to limit the changeset, but introducing a new client turned out to be no small feat :)\n\nAgain, if you have any questions, don't hesitate to ask!\n\nBest\nIngmar\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/10334453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/10521426", "body": "Oh, I see. Sorry about that, will work on it some more and provide a clean pull request.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/10521426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/11378712", "body": "Hi\n\nI incorporated all your suggestions. The new feature from upstream is still not implemented (selecting ASG by name) but I will add it later.\nRegarding the license header, I fixed the location but it also checks that the copyright is by netflix which is in this case, erm, maybe you can fix the check? :)\n\nBest\nIngmar\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/11378712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "quidryan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/10341729", "body": "I might suggest git rebase upstream/master instead of git merge upstream/master to get a clean pull request.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/10341729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "michaelneale": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/11981974", "body": "Cory - if you get a chance - are you able to login to buildhive.cloudbees.com and enable the repo for SimianArmy - you can then use the build status URL referring to your (more up todate) repo - better than mine. \n\n(I ran the gradle \"test\" goal in the buildhive config page). If you need help - let me know, I can tweak the settings once you have enabled your repo.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/11981974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "adriancole": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/12054990", "body": "sorry, can you explain?  It appears they are still taking enrollments http://aws.amazon.com/simpledb/\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/12054990/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Mezzle": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/12058143", "body": "For some reason, I have it in my head that DynamoDB replaced SimpleDB?\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/12058143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ahmetb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/12058232", "body": "Haha. Long live simpleDB. :thumbsup: \n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/12058232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/comments/2195447", "body": "Typo!\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/comments/2195447/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/comments/2195481", "body": "Both of the constructor bodies are almost identical, why not call one from another?\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/comments/2195481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/comments/2195529", "body": "This is NOT right if the framework really runs this way. (see [Frequency on Wikipedia](http://en.wikipedia.org/wiki/Frequency)). If frequency is 2 then it means the monkey should run **twice every hour**.\n\nWhat you are talking about is called period (`T`), which means the time interval between runs is 2 hours. \n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/comments/2195529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/comments/2195769", "body": "All these **OrElse** statements can be written in one line:\n\n`return props.getProperty(property_key, default)`. Your null check is redundant. \n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/comments/2195769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/comments/2195824", "body": "I noticed three typos in this line.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/comments/2195824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "DrGranit": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/12139700", "body": "Hello Michael,\n\nI made the changes as discussed, thanks for taking the time to look through this. I would update the Wiki, perhaps with an example policy and a mention of the ability to use instance roles, once the pull is completed.\n\nkind regards\nDrGranit\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/12139700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jiminoc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/14145632", "body": "AWS internally no longer \"supports\" SimpleDB but won't shut it down anytime soon. So don't expect any features or lots of support but it should still work for a bit longer\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/14145632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "cloudbees-pull-request-builder": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/15748498", "body": "[SimianArmy-pull-requests #3](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/3/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/15748498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/15809703", "body": "[SimianArmy-pull-requests #4](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/4/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/15809703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/16142485", "body": "[SimianArmy-pull-requests #5](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/5/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/16142485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/16248127", "body": "[SimianArmy-pull-requests #7](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/7/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/16248127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/16268922", "body": "[SimianArmy-pull-requests #8](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/8/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/16268922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/16320871", "body": "[SimianArmy-pull-requests #9](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/9/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/16320871/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/16399594", "body": "[SimianArmy-pull-requests #10](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/10/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/16399594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/16418414", "body": "[SimianArmy-pull-requests #11](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/11/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/16418414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17046783", "body": "[SimianArmy-pull-requests #12](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/12/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17046783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17124757", "body": "[SimianArmy-pull-requests #13](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/13/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17124757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17580357", "body": "[SimianArmy-pull-requests #14](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/14/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17580357/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17658543", "body": "[SimianArmy-pull-requests #15](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/15/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17658543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17734327", "body": "[SimianArmy-pull-requests #16](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/16/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17734327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17779639", "body": "[SimianArmy-pull-requests #17](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/17/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17779639/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/18623394", "body": "[SimianArmy-pull-requests #18](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/18/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/18623394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/18641527", "body": "[SimianArmy-pull-requests #19](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/19/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/18641527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/18924098", "body": "[SimianArmy-pull-requests #20](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/20/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/18924098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19259736", "body": "[SimianArmy-pull-requests #21](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/21/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19259736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19270985", "body": "[SimianArmy-pull-requests #22](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/22/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19270985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19325810", "body": "[SimianArmy-pull-requests #23](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/23/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19325810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19333011", "body": "[SimianArmy-pull-requests #24](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/24/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19333011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19374925", "body": "[SimianArmy-pull-requests #25](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/25/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19374925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19396206", "body": "[SimianArmy-pull-requests #26](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/26/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19396206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20037806", "body": "[SimianArmy-pull-requests #27](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/27/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20037806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20370075", "body": "[SimianArmy-pull-requests #28](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/28/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20370075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20526210", "body": "[SimianArmy-pull-requests #29](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/29/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20526210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20620493", "body": "[SimianArmy-pull-requests #30](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/30/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20620493/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20738690", "body": "[SimianArmy-pull-requests #31](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/31/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20738690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20829701", "body": "[SimianArmy-pull-requests #32](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/32/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20829701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20870304", "body": "[SimianArmy-pull-requests #33](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/33/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20870304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/21153677", "body": "[SimianArmy-pull-requests #34](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/34/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/21153677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/21678027", "body": "[SimianArmy-pull-requests #35](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/35/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/21678027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22316107", "body": "[SimianArmy-pull-requests #36](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/36/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22316107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22379868", "body": "[SimianArmy-pull-requests #37](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/37/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22379868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22464495", "body": "[SimianArmy-pull-requests #38](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/38/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22464495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22491094", "body": "[SimianArmy-pull-requests #39](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/39/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22491094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22869478", "body": "[SimianArmy-pull-requests #40](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/40/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22869478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24412507", "body": "[SimianArmy-pull-requests #41](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/41/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24412507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24413203", "body": "[SimianArmy-pull-requests #42](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/42/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24413203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24413848", "body": "[SimianArmy-pull-requests #43](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/43/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24413848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24414990", "body": "[SimianArmy-pull-requests #44](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/44/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24414990/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24416381", "body": "[SimianArmy-pull-requests #45](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/45/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24416381/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24417110", "body": "[SimianArmy-pull-requests #46](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/46/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24417110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24417423", "body": "[SimianArmy-pull-requests #47](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/47/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24417423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24418471", "body": "[SimianArmy-pull-requests #48](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/48/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24418471/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24419521", "body": "[SimianArmy-pull-requests #49](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/49/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24419521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24419814", "body": "[SimianArmy-pull-requests #50](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/50/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24419814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24421223", "body": "[SimianArmy-pull-requests #51](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/51/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24421223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24421827", "body": "[SimianArmy-pull-requests #52](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/52/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24421827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24429490", "body": "[SimianArmy-pull-requests #53](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/53/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24429490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24430174", "body": "[SimianArmy-pull-requests #54](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/54/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24430174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24432962", "body": "[SimianArmy-pull-requests #55](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/55/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24432962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24433542", "body": "[SimianArmy-pull-requests #56](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/56/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24433542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24434431", "body": "[SimianArmy-pull-requests #57](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/57/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24434431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24434455", "body": "[SimianArmy-pull-requests #58](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/58/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24434455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24434540", "body": "[SimianArmy-pull-requests #59](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/59/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24434540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24434761", "body": "[SimianArmy-pull-requests #60](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/60/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24434761/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24435007", "body": "[SimianArmy-pull-requests #61](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/61/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24435007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24436188", "body": "[SimianArmy-pull-requests #62](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/62/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24436188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24436304", "body": "[SimianArmy-pull-requests #63](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/63/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24436304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24436384", "body": "[SimianArmy-pull-requests #64](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/64/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24436384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24436480", "body": "[SimianArmy-pull-requests #65](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/65/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24436480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24436634", "body": "[SimianArmy-pull-requests #66](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/66/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24436634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24436917", "body": "[SimianArmy-pull-requests #67](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/67/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24436917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24444675", "body": "[SimianArmy-pull-requests #68](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/68/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24444675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24459841", "body": "[SimianArmy-pull-requests #69](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/69/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24459841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24460006", "body": "[SimianArmy-pull-requests #70](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/70/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24460006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24481612", "body": "[SimianArmy-pull-requests #71](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/71/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24481612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24488362", "body": "[SimianArmy-pull-requests #72](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/72/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24488362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24490900", "body": "[SimianArmy-pull-requests #73](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/73/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24490900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24545093", "body": "[SimianArmy-pull-requests #74](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/74/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24545093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24546484", "body": "[SimianArmy-pull-requests #75](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/75/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24546484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24547181", "body": "[SimianArmy-pull-requests #76](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/76/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24547181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24548856", "body": "[SimianArmy-pull-requests #77](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/77/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24548856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24552123", "body": "[SimianArmy-pull-requests #78](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/78/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24552123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24641188", "body": "[SimianArmy-pull-requests #79](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/79/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24641188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24662417", "body": "[SimianArmy-pull-requests #80](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/80/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/24662417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25120125", "body": "[SimianArmy-pull-requests #81](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/81/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25120125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25269850", "body": "[SimianArmy-pull-requests #82](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/82/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25269850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25278474", "body": "[SimianArmy-pull-requests #83](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/83/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25278474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25280677", "body": "[SimianArmy-pull-requests #84](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/84/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25280677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25281196", "body": "[SimianArmy-pull-requests #85](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/85/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25281196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25370414", "body": "[SimianArmy-pull-requests #86](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/86/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25370414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25375230", "body": "[SimianArmy-pull-requests #87](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/87/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25375230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25384057", "body": "[SimianArmy-pull-requests #88](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/88/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25384057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25408622", "body": "[SimianArmy-pull-requests #89](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/89/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25408622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25410762", "body": "[SimianArmy-pull-requests #90](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/90/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25410762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25411637", "body": "[SimianArmy-pull-requests #91](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/91/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25411637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25412955", "body": "[SimianArmy-pull-requests #92](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/92/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25412955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25937151", "body": "[SimianArmy-pull-requests #93](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/93/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25937151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/26631443", "body": "[SimianArmy-pull-requests #94](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/94/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/26631443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/26632168", "body": "[SimianArmy-pull-requests #95](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/95/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/26632168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/27446931", "body": "[SimianArmy-pull-requests #96](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/96/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/27446931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29322832", "body": "[SimianArmy-pull-requests #97](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/97/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29322832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29424665", "body": "[SimianArmy-pull-requests #98](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/98/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29424665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29427430", "body": "[SimianArmy-pull-requests #99](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/99/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29427430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29675830", "body": "[SimianArmy-pull-requests #100](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/100/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29675830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29762871", "body": "[SimianArmy-pull-requests #101](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/101/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29762871/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29764088", "body": "[SimianArmy-pull-requests #102](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/102/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29764088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29773544", "body": "[SimianArmy-pull-requests #103](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/103/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29773544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29784722", "body": "[SimianArmy-pull-requests #104](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/104/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29784722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29837927", "body": "[SimianArmy-pull-requests #105](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/105/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29837927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/31783442", "body": "[SimianArmy-pull-requests #106](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/106/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/31783442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/31784567", "body": "[SimianArmy-pull-requests #107](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/107/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/31784567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/31785173", "body": "[SimianArmy-pull-requests #108](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/108/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/31785173/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/31785864", "body": "[SimianArmy-pull-requests #109](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/109/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/31785864/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/31792818", "body": "[SimianArmy-pull-requests #110](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/110/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/31792818/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/31793738", "body": "[SimianArmy-pull-requests #111](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/111/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/31793738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/31882727", "body": "[SimianArmy-pull-requests #112](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/112/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/31882727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/32209019", "body": "[SimianArmy-pull-requests #113](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/113/) ABORTED\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/32209019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/32211100", "body": "[SimianArmy-pull-requests #114](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/114/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/32211100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35036767", "body": "[SimianArmy-pull-requests #115](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/115/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35036767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35046326", "body": "[SimianArmy-pull-requests #116](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/116/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35046326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35047267", "body": "[SimianArmy-pull-requests #117](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/117/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35047267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35048789", "body": "[SimianArmy-pull-requests #118](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/118/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35048789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35050277", "body": "[SimianArmy-pull-requests #119](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/119/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35050277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35050792", "body": "[SimianArmy-pull-requests #120](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/120/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35050792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35051199", "body": "[SimianArmy-pull-requests #121](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/121/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35051199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/36061726", "body": "[SimianArmy-pull-requests #122](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/122/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/36061726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/36069129", "body": "[SimianArmy-pull-requests #123](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/123/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/36069129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/36077457", "body": "[SimianArmy-pull-requests #124](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/124/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/36077457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/36963564", "body": "[SimianArmy-pull-requests #125](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/125/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/36963564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/36964022", "body": "[SimianArmy-pull-requests #126](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/126/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/36964022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/37251109", "body": "[SimianArmy-pull-requests #127](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/127/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/37251109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/37252325", "body": "[SimianArmy-pull-requests #128](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/128/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/37252325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/37881259", "body": "[SimianArmy-pull-requests #129](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/129/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/37881259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/38749038", "body": "[SimianArmy-pull-requests #130](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/130/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/38749038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/39385145", "body": "[SimianArmy-pull-requests #131](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/131/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/39385145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/39417105", "body": "[SimianArmy-pull-requests #132](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/132/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/39417105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/42621203", "body": "[SimianArmy-pull-requests #133](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/133/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/42621203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/44055099", "body": "[SimianArmy-pull-requests #134](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/134/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/44055099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/46035459", "body": "[SimianArmy-pull-requests #135](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/135/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/46035459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/53617013", "body": "[SimianArmy-pull-requests #138](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/138/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/53617013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/53623421", "body": "[SimianArmy-pull-requests #139](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/139/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/53623421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/53635049", "body": "[SimianArmy-pull-requests #140](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/140/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/53635049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/53637431", "body": "[SimianArmy-pull-requests #141](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/141/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/53637431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/53639601", "body": "[SimianArmy-pull-requests #142](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/142/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/53639601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/53900523", "body": "[SimianArmy-pull-requests #143](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/143/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/53900523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/53929425", "body": "[SimianArmy-pull-requests #144](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/144/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/53929425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/57396664", "body": "[SimianArmy-pull-requests #145](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/145/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/57396664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/57934815", "body": "[SimianArmy-pull-requests #146](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/146/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/57934815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58733879", "body": "[SimianArmy-pull-requests #147](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/147/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58733879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58734792", "body": "[SimianArmy-pull-requests #148](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/148/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58734792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58735722", "body": "[SimianArmy-pull-requests #149](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/149/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58735722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58744007", "body": "[SimianArmy-pull-requests #150](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/150/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58744007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58917094", "body": "[SimianArmy-pull-requests #151](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/151/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58917094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58918988", "body": "[SimianArmy-pull-requests #152](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/152/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58918988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58934621", "body": "[SimianArmy-pull-requests #153](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/153/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58934621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/59119133", "body": "[SimianArmy-pull-requests #154](https://netflixoss.ci.cloudbees.com/job/SimianArmy-pull-requests/154/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/59119133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "nicktgr15": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17535374", "body": "Hi Michael,\nThanks for the reply. So, do you think that it is ok to keep slf4j-log4j12-1.6.0.jar as a compile dependency? (if I don't have it as a compile dependency then it's not available in the lib folder of the web app and I don't get any logging information).\n\nIt would be nice if you were turning off the output for this particular test because it's a little bit confusing.\nThanks\nNick\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17535374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17594195", "body": "Hi Michael, \nYes it's in the lib folder now but I still get that error during build. I will just ignore it for now since as you say it's not a problem and .war file seems to be generated without issues.\nThanks!\nNick\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17594195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17657840", "body": "Hello,\nIt looks like the problem we had with tomcat was related to the load-on-startup parameter used in web.xml.Because it's up to the servlet container (Jetty or Tomcat) which order it loads servlets that have the same <load-on-startup/> value, we noticed the following variation on loading:\n\nJetty: 1. Monkey Server, 2. jersey-servlet\nTomcat: 1. jersey-servlet , 2. Monkey Server\n\nSo we explicitly set a larger number for jersey-servlet to ensure same load order in Tomcat as in Jetty. For details on load order, see snippet from servlet 2.5 specification at the bottom of this post.\n\n### Fixed web.xml\n\n```\n<web-app version=\"2.5\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee \">\n    <servlet>\n        <servlet-name>Monkey Server</servlet-name>\n        <servlet-class>com.netflix.simianarmy.basic.BasicMonkeyServer</servlet-class>\n        <load-on-startup>1</load-on-startup>\n    </servlet>\n    <servlet>\n      <servlet-name>jersey-servlet</servlet-name>\n      <servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class>\n      <init-param>\n        <param-name>com.sun.jersey.config.property.packages</param-name>\n        <param-value>com.netflix.simianarmy.resources</param-value>\n      </init-param>\n      <load-on-startup>2</load-on-startup>\n    </servlet>\n    <servlet-mapping>\n      <servlet-name>jersey-servlet</servlet-name>\n      <url-pattern>/api/*</url-pattern>\n    </servlet-mapping>\n</web-app>\n```\n\n### Servlet 2.5 Specification snippet\n\n```\n<xsd:element name=\"load-on-startup\"\ntype=\"javaee:load-on-startupType\"\nminOccurs=\"0\">\n<xsd:annotation>\n<xsd:documentation>\nThe load-on-startup element indicates that this\nservlet should be loaded (instantiated and have\nits init() called) on the startup of the web\napplication. The optional contents of these\nelement must be an integer indicating the order in\nwhich the servlet should be loaded. If the value\nis a negative integer, or the element is not\npresent, the container is free to load the servlet\nwhenever it chooses. If the value is a positive\ninteger or 0, the container must load and\ninitialize the servlet as the application is\ndeployed. ***The container must guarantee that\nservlets marked with lower integers are loaded\nbefore servlets marked with higher integers. The\ncontainer may choose the order of loading of\nservlets with the same load-on-start-up value.***\n</xsd:documentation>\n</xsd:annotation>\n```\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17657840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17658245", "body": "Hi,\nI've raised a pull request with the above fix.\nThanks\nNick\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17658245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20037318", "body": "We'll follow this up with an update to the wiki to cover the email notification property items, both for owner emails and the global option.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20037318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "mcacker": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17732223", "body": "I had not set the requisite .notifier.enabled = true properties.  Now that I have done that I am running into the following error:\n\n2013-05-10 14:05:14.878 - ERROR Monkey$1 - [Monkey.java:157] CHAOS Monkey Error:\njava.lang.RuntimeException: failed to terminate instance i-faaafea2\n        at com.netflix.simianarmy.basic.chaos.BasicChaosMonkey.handleTerminationError(BasicChaosMonkey.java:159)\n        at com.netflix.simianarmy.basic.chaos.BasicChaosMonkey.terminateInstance(BasicChaosMonkey.java:305)\n        at com.netflix.simianarmy.basic.chaos.BasicChaosMonkey.doMonkeyBusiness(BasicChaosMonkey.java:105)\n        at com.netflix.simianarmy.Monkey.run(Monkey.java:134)\n        at com.netflix.simianarmy.Monkey$1.run(Monkey.java:155)\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)\n        at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317)\n        at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150)\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98)\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:180)\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:204)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n        at java.lang.Thread.run(Thread.java:662)\nCaused by: java.lang.RuntimeException: Chaos email notifier is not set.\n\nHow do you set the email notifier?\n\nthanks, Mitchell\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17732223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17743158", "body": "Great, thanks it worked.  It committed suicide!\n\n\"Instance i-664e193e of ASG simianarmy_dev-c0norcal-d0dev-h0net-p0pgilab is being terminated by Chaos monkey. \"\n\nThank you for the rapid turnaround.\n\nMitchell\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17743158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17744311", "body": "BTW, can the notification email be a list of email addresses?\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/17744311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/33160253", "body": "Ok, did this, it is all working correctly now\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/33160253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "endwall": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/18662829", "body": "glad to see this new monkey.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/18662829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "eltopo71": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/18855463", "body": "Yes I am building using gradlew, following the quick start instructions. I\njust tried it today on a Ubuntu amazon instance and got the same issue.\n\nOn Mon, Jun 3, 2013 at 12:25 PM, Michael Fu notifications@github.comwrote:\n\n> Hi,\n> \n> Did you use gradlew to build? Can it reproduce on a different instance?\n> \n> Thanks,\n> Michael\n> \n> On Mon, Jun 3, 2013 at 12:26 AM, eltopo71 notifications@github.com\n> wrote:\n> \n> > Trying to build the army just now but the build script stumbles on this\n> > pesky error that comes up while building \"findbugs\". This breaks the\n> > build\n> > and leads to high CPU and MEM utilization. I have captured the error\n> > \n> > ## message here:\n> > \n> > 06:49:34.469 [DEBUG] [system.out] [DEBUG]\n> > [org.gradle.process.internal.child.AtionExecutionWorker tarting Gradle\n> > Worker 1.\n> > 06:49:34.477 [DEBUG] [system.out] 06:49:34.477 [DEBUG]\n> > [org.gradle.api.plugins.uality.internal.findbugs.FindBugsWorkerServer\n> > xecuting findbugs worker.\n> > 06:49:34.502 [DEBUG] [system.out] 06:49:34.501 [DEBUG]\n> > [org.gradle.messaging.reote.internal.Router] Received route available.\n> > Message: [ConsumerAvailable id: 4ef27df-d6ca-4a87-b878-34462ca228fb,\n> > displayName: message server, channel:\n> > \n> > org.radle.api.plugins.quality.internal.findbugs.FindBugsWorkerClientProtocol]\n> > \n> > Scanning archives (139 / 169)out] 06:49:41.423 [QUIET] [system.out]\n> > Scanning archives (169 / 169)\n> > 2 analysis passes to perform.out] 06:49:42.208 [QUIET] [system.out]\n> > Pass 1: Analyzing classes (38 / 348) - 10% completeET] [system.out]\n> > lPass\n> > 1: Analyzing classes (77 / 348) - 22% complete nPass 1: Analyzing\n> > classes\n> > (116 / 348) - 33% complete cPass 1: Analyzing classes (194 / 348) - 55%\n> > complete 3Pass 1: Analyzing classes (232 / 348) - 66% complete iPass 1:\n> > Analyzing classes (271 / 348) - 77% complete lPass 1: Analyzing classes\n> > (319 / 348) - 88% complete 0Pass 1: Analyzing classes (348 / 348) - 100%\n> > complete\n> > 06:51:51.733 [DEBUG] [org.gradle.process.internal.DefaultExecHandle]\n> > Changing state to: FAILED\n> > 06:51:51.733 [INFO] [org.gradle.process.internal.DefaultExecHandle]\n> > Process 'Gradle Worker 1' finished with exit value 137 (state: FAILED)\n> > \n> > I had the software build and run fine early last week so this could be\n> > related to the latest commits.\n> > \n> > My setup is: Amazon Linux 64-bit on a micro instance.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/Netflix/SimianArmy/issues/60>\n> > .\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/Netflix/SimianArmy/issues/60#issuecomment-18853028\n> .\n\n## \n\n\u201cIf I was racing now, I would not only have more money, but I would also\nhave more ears\u2026\u201d - Niki Lauda\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/18855463/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/18859696", "body": "I had it working on a different micro instance last week, although that may\nhave been before the latest additions were in.\n\nOn Mon, Jun 3, 2013 at 1:08 PM, Michael Fu notifications@github.com wrote:\n\n> Hi,\n> \n> I am not sure if Simian Army can build on micro instances now. Did you\n> successfully build Simian Army on a micro instance before? Even yes, as we\n> recently added a new monkey (conformity monkey), more classes probably can\n> cause build to fail as more memory may be required.\n> \n> Thanks,\n> Michael\n> \n> On Mon, Jun 3, 2013 at 10:04 AM, eltopo71 notifications@github.com\n> wrote:\n> \n> > Yes I am building using gradlew, following the quick start instructions.\n> > I\n> > just tried it today on a Ubuntu amazon instance and got the same issue.\n> > \n> > On Mon, Jun 3, 2013 at 12:25 PM, Michael Fu notifications@github.comwrote:\n> > \n> > > Hi,\n> > > \n> > > Did you use gradlew to build? Can it reproduce on a different\n> > > instance?\n> > > \n> > > Thanks,\n> > > Michael\n> > > \n> > > On Mon, Jun 3, 2013 at 12:26 AM, eltopo71 notifications@github.com\n> > > wrote:\n> > > \n> > > > Trying to build the army just now but the build script stumbles on\n> > > > this\n> > > > pesky error that comes up while building \"findbugs\". This breaks the\n> > > > build\n> > > > and leads to high CPU and MEM utilization. I have captured the error\n> > > > \n> > > > ## message here:\n> > > > \n> > > > 06:49:34.469 [DEBUG] [system.out] [DEBUG]\n> > > > [org.gradle.process.internal.child.AtionExecutionWorker tarting\n> > > > Gradle\n> > > > Worker 1.\n> > > > 06:49:34.477 [DEBUG] [system.out] 06:49:34.477 [DEBUG]\n> > > > \n> > > > [org.gradle.api.plugins.uality.internal.findbugs.FindBugsWorkerServer\n> > > > xecuting findbugs worker.\n> > > > 06:49:34.502 [DEBUG] [system.out] 06:49:34.501 [DEBUG]\n> > > > [org.gradle.messaging.reote.internal.Router] Received route\n> > > > available.\n> > > > Message: [ConsumerAvailable id: 4ef27df-d6ca-4a87-b878-34462ca228fb,\n> > > > displayName: message server, channel:\n> > \n> > org.radle.api.plugins.quality.internal.findbugs.FindBugsWorkerClientProtocol]\n> > \n> > > > Scanning archives (139 / 169)out] 06:49:41.423 [QUIET] [system.out]\n> > > > Scanning archives (169 / 169)\n> > > > 2 analysis passes to perform.out] 06:49:42.208 [QUIET] [system.out]\n> > > > Pass 1: Analyzing classes (38 / 348) - 10% completeET] [system.out]\n> > > > lPass\n> > > > 1: Analyzing classes (77 / 348) - 22% complete nPass 1: Analyzing\n> > > > classes\n> > > > (116 / 348) - 33% complete cPass 1: Analyzing classes (194 / 348) -\n> > > > 55%\n> > > > complete 3Pass 1: Analyzing classes (232 / 348) - 66% complete iPass\n> > > > 1:\n> > > > Analyzing classes (271 / 348) - 77% complete lPass 1: Analyzing\n> > > > classes\n> > > > (319 / 348) - 88% complete 0Pass 1: Analyzing classes (348 / 348) -\n> > > > 100%\n> > > > complete\n> > > > 06:51:51.733 [DEBUG] [org.gradle.process.internal.DefaultExecHandle]\n> > > > Changing state to: FAILED\n> > > > 06:51:51.733 [INFO] [org.gradle.process.internal.DefaultExecHandle]\n> > > > Process 'Gradle Worker 1' finished with exit value 137 (state:\n> > > > FAILED)\n> > > > \n> > > > I had the software build and run fine early last week so this could\n> > > > be\n> > > > related to the latest commits.\n> > > > \n> > > > My setup is: Amazon Linux 64-bit on a micro instance.\n> > > > \n> > > > \u2014\n> > > > Reply to this email directly or view it on GitHub<\n> > > > https://github.com/Netflix/SimianArmy/issues/60>\n> > > > .\n> > > \n> > > \u2014\n> > > Reply to this email directly or view it on GitHub<\n> > > https://github.com/Netflix/SimianArmy/issues/60#issuecomment-18853028>\n> > > .\n> > \n> > ## \n> > \n> > \u201cIf I was racing now, I would not only have more money, but I would also\n> > have more ears\u2026\u201d - Niki Lauda\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/Netflix/SimianArmy/issues/60#issuecomment-18855463>\n> > .\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/Netflix/SimianArmy/issues/60#issuecomment-18855709\n> .\n\n## \n\n\u201cIf I was racing now, I would not only have more money, but I would also\nhave more ears\u2026\u201d - Niki Lauda\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/18859696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/18859868", "body": "I'll try again on a small instance.\n\nOn Mon, Jun 3, 2013 at 2:10 PM, Tony Emond clevershark@gmail.com wrote:\n\n> I had it working on a different micro instance last week, although that\n> may have been before the latest additions were in.\n> \n> On Mon, Jun 3, 2013 at 1:08 PM, Michael Fu notifications@github.comwrote:\n> \n> > Hi,\n> > \n> > I am not sure if Simian Army can build on micro instances now. Did you\n> > successfully build Simian Army on a micro instance before? Even yes, as\n> > we\n> > recently added a new monkey (conformity monkey), more classes probably\n> > can\n> > cause build to fail as more memory may be required.\n> > \n> > Thanks,\n> > Michael\n> > \n> > On Mon, Jun 3, 2013 at 10:04 AM, eltopo71 notifications@github.com\n> > wrote:\n> > \n> > > Yes I am building using gradlew, following the quick start\n> > > instructions. I\n> > > just tried it today on a Ubuntu amazon instance and got the same issue.\n> > > \n> > > On Mon, Jun 3, 2013 at 12:25 PM, Michael Fu notifications@github.comwrote:\n> > > \n> > > > Hi,\n> > > > \n> > > > Did you use gradlew to build? Can it reproduce on a different\n> > > > instance?\n> > > > \n> > > > Thanks,\n> > > > Michael\n> > > > \n> > > > On Mon, Jun 3, 2013 at 12:26 AM, eltopo71 notifications@github.com\n> > > > wrote:\n> > > > \n> > > > > Trying to build the army just now but the build script stumbles on\n> > > > > this\n> > > > > pesky error that comes up while building \"findbugs\". This breaks\n> > > > > the\n> > > > > build\n> > > > > and leads to high CPU and MEM utilization. I have captured the\n> > > > > error\n> > > > > \n> > > > > ## message here:\n> > > > > \n> > > > > 06:49:34.469 [DEBUG] [system.out] [DEBUG]\n> > > > > [org.gradle.process.internal.child.AtionExecutionWorker tarting\n> > > > > Gradle\n> > > > > Worker 1.\n> > > > > 06:49:34.477 [DEBUG] [system.out] 06:49:34.477 [DEBUG]\n> > > > > \n> > > > > [org.gradle.api.plugins.uality.internal.findbugs.FindBugsWorkerServer\n> > > > > xecuting findbugs worker.\n> > > > > 06:49:34.502 [DEBUG] [system.out] 06:49:34.501 [DEBUG]\n> > > > > [org.gradle.messaging.reote.internal.Router] Received route\n> > > > > available.\n> > > > > Message: [ConsumerAvailable id:\n> > > > > 4ef27df-d6ca-4a87-b878-34462ca228fb,\n> > > > > displayName: message server, channel:\n> > > \n> > > org.radle.api.plugins.quality.internal.findbugs.FindBugsWorkerClientProtocol]\n> > > \n> > > > > Scanning archives (139 / 169)out] 06:49:41.423 [QUIET] [system.out]\n> > > > > Scanning archives (169 / 169)\n> > > > > 2 analysis passes to perform.out] 06:49:42.208 [QUIET] [system.out]\n> > > > > Pass 1: Analyzing classes (38 / 348) - 10% completeET] [system.out]\n> > > > > lPass\n> > > > > 1: Analyzing classes (77 / 348) - 22% complete nPass 1: Analyzing\n> > > > > classes\n> > > > > (116 / 348) - 33% complete cPass 1: Analyzing classes (194 / 348) -\n> > > > > 55%\n> > > > > complete 3Pass 1: Analyzing classes (232 / 348) - 66% complete\n> > > > > iPass\n> > > > > 1:\n> > > > > Analyzing classes (271 / 348) - 77% complete lPass 1: Analyzing\n> > > > > classes\n> > > > > (319 / 348) - 88% complete 0Pass 1: Analyzing classes (348 / 348) -\n> > > > > 100%\n> > > > > complete\n> > > > > 06:51:51.733 [DEBUG]\n> > > > > [org.gradle.process.internal.DefaultExecHandle]\n> > > > > Changing state to: FAILED\n> > > > > 06:51:51.733 [INFO] [org.gradle.process.internal.DefaultExecHandle]\n> > > > > Process 'Gradle Worker 1' finished with exit value 137 (state:\n> > > > > FAILED)\n> > > > > \n> > > > > I had the software build and run fine early last week so this could\n> > > > > be\n> > > > > related to the latest commits.\n> > > > > \n> > > > > My setup is: Amazon Linux 64-bit on a micro instance.\n> > > > > \n> > > > > \u2014\n> > > > > Reply to this email directly or view it on GitHub<\n> > > > > https://github.com/Netflix/SimianArmy/issues/60>\n> > > > > .\n> > > > \n> > > > \u2014\n> > > > Reply to this email directly or view it on GitHub<\n> > > > https://github.com/Netflix/SimianArmy/issues/60#issuecomment-18853028>\n> > > > .\n> > > \n> > > ## \n> > > \n> > > \u201cIf I was racing now, I would not only have more money, but I would\n> > > also\n> > > have more ears\u2026\u201d - Niki Lauda\n> > > \n> > > \u2014\n> > > Reply to this email directly or view it on GitHub<\n> > > https://github.com/Netflix/SimianArmy/issues/60#issuecomment-18855463>\n> > > .\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHubhttps://github.com/Netflix/SimianArmy/issues/60#issuecomment-18855709\n> > .\n> \n> ## \n> \n> \u201cIf I was racing now, I would not only have more money, but I would also\n> have more ears\u2026\u201d - Niki Lauda\n\n## \n\n\u201cIf I was racing now, I would not only have more money, but I would also\nhave more ears\u2026\u201d - Niki Lauda\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/18859868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/18890192", "body": "I can confirm that simianarmy builds and launches correctly on a small instance. \n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/18890192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19025220", "body": "Oh I see. Thanks.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19025220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dipthegeezer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19046354", "body": "Cool, I'll have a go at making the changes and submit a patch back.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19046354/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19259313", "body": "Added a pull request. If there are any issues let me know and I'll fix asap.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19259313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20618665", "body": "Ah cool thanks for the heads up I'll take a look at Janitor Monkey and keep an eye out for the upcoming patches.\n\nDip\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20618665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20625612", "body": "Cool, thanks Michael. I understand how to do it now, a new Rule  may well be forthcoming\n\nThanks\n\nDip\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20625612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20877307", "body": "Hi also\n\nWe've noticed these warnings too which are probably the result of java 7 being a bit more stricter. Just bringing it to your attention. :D\n\n```\n/src/main/java/com/netflix/simianarmy/MonkeyRecorder.java:53: warning: [rawtypes] found raw type: Enum\n        Enum monkeyType();\n```\n\nDip\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20877307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/21253440", "body": "Hi Michael\n\nThanks for the feedback, we've made the changes as requested. Yeah a typo on my part :$\n\nDip\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/21253440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "akshaypatel122826": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19450785", "body": "Hi,\n\nwe have resolved above metioned error. Now we are facing below error while doing build.\nKinldy help in below issue.\n- What went wrong:\n  A problem occurred evaluating script.\n  \n  > Could not find property 'commitNewVersion' on root project 'simianarmy'.\n- Try:\n  Run with --info or --debug option to get more log output.\n\nException:\n\nException is:\norg.gradle.api.GradleScriptException: A problem occurred evaluating script.\n    at org.gradle.groovy.scripts.internal.DefaultScriptRunnerFactory$ScriptRunnerImpl.run(DefaultScriptRunnerFactory.java:54)\n    at org.gradle.configuration.DefaultScriptPluginFactory$ScriptPluginImpl.apply(DefaultScriptPluginFactory.java:127)\n    at org.gradle.api.internal.plugins.DefaultObjectConfigurationAction.applyScript(DefaultObjectConfigurationAction.java:82)\n    at org.gradle.api.internal.plugins.DefaultObjectConfigurationAction.access$000(DefaultObjectConfigurationAction.java:32)\n    at org.gradle.api.internal.plugins.DefaultObjectConfigurationAction$1.run(DefaultObjectConfigurationAction.java:54)\n    at org.gradle.api.internal.plugins.DefaultObjectConfigurationAction.execute(DefaultObjectConfigurationAction.java:114)\n    at org.gradle.api.internal.project.AbstractProject.apply(AbstractProject.java:840)\n    at org.gradle.api.Project$apply.call(Unknown Source)\n    at org.gradle.api.internal.project.ProjectScript.apply(ProjectScript.groovy:34)\n    at org.gradle.api.Script$apply.callCurrent(Unknown Source)\n    at build_5fo6ghv947lob49oe2q90ddn8o.run(E:\\SimianArmy-master\\build.gradle:19)\n    at org.gradle.groovy.scripts.internal.DefaultScriptRunnerFactory$ScriptRunnerImpl.run(DefaultScriptRunnerFactory.java:52)\n    at org.gradle.configuration.DefaultScriptPluginFactory$ScriptPluginImpl.apply(DefaultScriptPluginFactory.java:127)\n    at org.gradle.configuration.BuildScriptProcessor.evaluate(BuildScriptProcessor.java:38)\n    at org.gradle.configuration.LifecycleProjectEvaluator.evaluate(LifecycleProjectEvaluator.java:43)\n    at org.gradle.api.internal.project.AbstractProject.evaluate(AbstractProject.java:462)\n    at org.gradle.api.internal.project.AbstractProject.evaluate(AbstractProject.java:74)\n    at org.gradle.configuration.ProjectEvaluationConfigurer.execute(ProjectEvaluationConfigurer.java:23)\n    at org.gradle.configuration.ProjectEvaluationConfigurer.execute(ProjectEvaluationConfigurer.java:21)\n    at org.gradle.configuration.DefaultBuildConfigurer$1.execute(DefaultBuildConfigurer.java:38)\n    at org.gradle.configuration.DefaultBuildConfigurer$1.execute(DefaultBuildConfigurer.java:35)\n    at org.gradle.api.internal.project.AbstractProject.configure(AbstractProject.java:438)\n    at org.gradle.api.internal.project.AbstractProject.allprojects(AbstractProject.java:433)\n    at org.gradle.configuration.DefaultBuildConfigurer.configure(DefaultBuildConfigurer.java:35)\n    at org.gradle.initialization.DefaultGradleLauncher.doBuildStages(DefaultGradleLauncher.java:139)\n    at org.gradle.initialization.DefaultGradleLauncher.doBuild(DefaultGradleLauncher.java:110)\n    at org.gradle.initialization.DefaultGradleLauncher.run(DefaultGradleLauncher.java:78)\n    at org.gradle.launcher.cli.RunBuildAction.execute(RunBuildAction.java:42)\n    at org.gradle.launcher.cli.RunBuildAction.execute(RunBuildAction.java:28)\n    at org.gradle.launcher.cli.CommandLineActionFactory$ParseAndBuildAction.execute(CommandLineActionFactory.java:201)\n    at org.gradle.launcher.cli.CommandLineActionFactory$ParseAndBuildAction.execute(CommandLineActionFactory.java:174)\n    at org.gradle.launcher.cli.CommandLineActionFactory$WithLogging.execute(CommandLineActionFactory.java:170)\n    at org.gradle.launcher.cli.CommandLineActionFactory$WithLogging.execute(CommandLineActionFactory.java:139)\n    at org.gradle.launcher.exec.ExceptionReportingAction.execute(ExceptionReportingAction.java:31)\n    at org.gradle.launcher.exec.ExceptionReportingAction.execute(ExceptionReportingAction.java:20)\n    at org.gradle.launcher.Main.doAction(Main.java:48)\n    at org.gradle.launcher.exec.EntryPoint.run(EntryPoint.java:45)\n    at org.gradle.launcher.Main.main(Main.java:39)\n    at org.gradle.launcher.ProcessBootstrap.runNoExit(ProcessBootstrap.java:50)\n    at org.gradle.launcher.ProcessBootstrap.run(ProcessBootstrap.java:32)\n    at org.gradle.launcher.GradleMain.main(GradleMain.java:24)\nCaused by: groovy.lang.MissingPropertyException: Could not find property 'commitNewVersion' on root project 'simianarmy'.\n    at org.gradle.api.internal.AbstractDynamicObject.propertyMissingException(AbstractDynamicObject.java:43)\n    at org.gradle.api.internal.AbstractDynamicObject.getProperty(AbstractDynamicObject.java:35)\n    at org.gradle.api.internal.CompositeDynamicObject.getProperty(CompositeDynamicObject.java:60)\n    at org.gradle.api.internal.project.DefaultProject_Decorated.getProperty(Unknown Source)\n    at org.gradle.groovy.scripts.BasicScript.propertyMissing(BasicScript.groovy:60)\n    at release_62r3428qi4gqfpr2848dvktg2l.run(E:\\SimianArmy-master\\gradle\\release.gradle:7)\n    at org.gradle.groovy.scripts.internal.DefaultScriptRunnerFactory$ScriptRunnerImpl.run(DefaultScriptRunnerFactory.java:52)\n    ... 40 more\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19450785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "aoqfonseca": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19693428", "body": "I think this problem is our java version. Try to upgrade your java version or try to put -source param to set code compiling to be 1.6\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19693428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "croess": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19803025", "body": "Thanks for your answer. I have already tried it with serveral Java versions including the newest. How can i set \"-source param\" to be 1.6 withe the gradlew build command?\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/19803025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "elegantmush": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20830684", "body": "Hello,\nApologies for the most recent pull request. I work with nicktgr15 who is away on holiday at the moment. I'm trying to address the issues raised by michaelnflx. A few small points left before all the issues raised are addressed. Will comment to let you know when we're done and its ready for review.\nThanks,\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20830684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20873303", "body": "Hello,\n\nThanks to _michaelnflx_ for the feedback on _nicktgr15_ 's original commits for this pull request. We believe we've addressed the issues you've raised by:\n- adding an extra boolean property for whether global email notifications are enabled\n- separating the flows for global and group-specific termination notifications\n- adding logging to indicate whether it's a global or group-specific notification email\n- changing the check for email address from null-check to StringUtils.isBlank()\n\nHope this addresses the issues.\n\nThanks,\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/20873303/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "joesondow": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22089026", "body": "Looks good to me. \n\n@coryb Okay for me to merge this? Nothing here but spelling corrections in comments.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22089026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dmourati": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22159078", "body": "Awesome, thanks.  I wanted to start with something simple.  I've got some other changes that are potentially more interesting.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22159078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "codiverse": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22378785", "body": "Have a version together, but the credentials expire for the long lived sdb clients.\n\nThinking to alter those to be created on demand like the other clients so they all match, but will experiment with creating a credentials provider such as your example from https://gist.github.com/coryb/5688327 - there is already some code for passing in a credentials provider so this could be the neatest and least intrusive solution.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22378785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22379491", "body": "Sounds like a good idea, altered now.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/22379491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "aaborschenko": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/23335968", "body": "Guys, how do I define email notifier?\nIs there any doc about that?\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/23335968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "huxoll": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25119304", "body": "Hi,\n\nThat makes sense; I committed changes with those suggestions.\n\nCheers,\n-John\n\nOn Tue, Sep 24, 2013 at 8:07 PM, coryb - notifications@github.com <\ngithub.huxoll.17cf489050.notifications#github.com@ob.0sg.net> wrote:\n\n> Hi, thanks for the pull request, it is a good idea. Sorry for the delay.\n> \n> I think the SimplerDBRecorder name is clever, but I would rather it be\n> more obvious, something like LocalDBRecorder maybe? And I think the config\n> settings prefix should be something like simianarmy.recorder.localdb....\n> and moved to the simianarmy.properties.\n> \n> The simianarmy.client.recorder.class in the client.properties is good, but\n> I would rather the default stay with SDB for now. I would leave a comment\n> to switch to your implementation, but explicitly set the default value to\n> com.netflix.simianarmy.aws.SimpleDBRecorder. The advantage of SDB over your\n> SimplerDB is obviously that it has off-host storage, and if you are running\n> chaos monkey in the cloud it will terminate itself periodically thereby\n> losing all the events stored on local storage.\n> \n> Thanks!\n> -Cory\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/Netflix/SimianArmy/pull/95#issuecomment-25055474\n> .\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/25119304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jhowarth": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/26360144", "body": "@coryb \n\nMaybe I used the wrong term here.  When I went to use the Janitor Monkey, I enabled edda by setting `simianarmy.janitor.edda.enabled` to true, but when I ran the army, it complained `Image Janitor only works when Edda is enabled.`.  I had to go read through the source code to figure out what was going on.  This is more of a pull request to solve that problem.\n\nPerhaps there would be a better way to solve this and make sure Janitor Monkey is not started up with no rules.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/26360144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "pquery": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29206340", "body": "I'm running into the same type of issues on a VMware Ubuntu LTS 12.04 \n\nI've tried openjdk 6 / 7, then took all of those out of Oracle 1.7.0_45 and I'm still getting the bootstrap warning and a compile error \n\n./gradlew build --stacktrace  \n:compileJava\nwarning: [options] bootstrap class path not set in conjunction with -source 1.6\nerror: warnings found and -Werror specified\n1 error\n1 warning\n\nFAILURE: Build failed with an exception.\n- What went wrong:\n  Execution failed for task ':compileJava'.\n  \n  > Compilation failed; see the compiler error output for details.\n- Try:\n  Run with --info or --debug option to get more log output.\n- Exception is:\n  org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':compileJava'.\n  at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:68)\n  at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:46)\n  at org.gradle.api.internal.tasks.execution.PostExecutionAnalysisTaskExecuter.execute(PostExecutionAnalysisTaskExecuter.java:34)\n  at org.gradle.api.internal.changedetection.CacheLockHandlingTaskExecuter$1.run(CacheLockHandlingTaskExecuter.java:34)\n  at org.gradle.cache.internal.DefaultCacheAccess$2.create(DefaultCacheAccess.java:200)\n  at org.gradle.cache.internal.DefaultCacheAccess.longRunningOperation(DefaultCacheAccess.java:172)\n  at org.gradle.cache.internal.DefaultCacheAccess.longRunningOperation(DefaultCacheAccess.java:198)\n  at org.gradle.cache.internal.DefaultPersistentDirectoryStore.longRunningOperation(DefaultPersistentDirectoryStore.java:137)\n  at org.gradle.api.internal.changedetection.DefaultTaskArtifactStateCacheAccess.longRunningOperation(DefaultTaskArtifactStateCacheAccess.java:83)\n  at org.gradle.api.internal.changedetection.CacheLockHandlingTaskExecuter.execute(CacheLockHandlingTaskExecuter.java:32)\n  at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:55)\n  at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:57)\n  at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:41)\n  at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:51)\n  at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:52)\n  at org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:42)\n  at org.gradle.api.internal.AbstractTask.executeWithoutThrowingTaskFailure(AbstractTask.java:247)\n  at org.gradle.execution.DefaultTaskGraphExecuter.executeTask(DefaultTaskGraphExecuter.java:192)\n  at org.gradle.execution.DefaultTaskGraphExecuter.doExecute(DefaultTaskGraphExecuter.java:177)\n  at org.gradle.execution.DefaultTaskGraphExecuter.execute(DefaultTaskGraphExecuter.java:83)\n  at org.gradle.execution.SelectedTaskExecutionAction.execute(SelectedTaskExecutionAction.java:36)\n  at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:61)\n  at org.gradle.execution.DefaultBuildExecuter.access$200(DefaultBuildExecuter.java:23)\n  at org.gradle.execution.DefaultBuildExecuter$2.proceed(DefaultBuildExecuter.java:67)\n  at org.gradle.api.internal.changedetection.TaskCacheLockHandlingBuildExecuter$1.run(TaskCacheLockHandlingBuildExecuter.java:31)\n  at org.gradle.cache.internal.DefaultCacheAccess$1.create(DefaultCacheAccess.java:111)\n  at org.gradle.cache.internal.DefaultCacheAccess.useCache(DefaultCacheAccess.java:126)\n  at org.gradle.cache.internal.DefaultCacheAccess.useCache(DefaultCacheAccess.java:109)\n  at org.gradle.cache.internal.DefaultPersistentDirectoryStore.useCache(DefaultPersistentDirectoryStore.java:129)\n  at org.gradle.api.internal.changedetection.DefaultTaskArtifactStateCacheAccess.useCache(DefaultTaskArtifactStateCacheAccess.java:79)\n  at org.gradle.api.internal.changedetection.TaskCacheLockHandlingBuildExecuter.execute(TaskCacheLockHandlingBuildExecuter.java:29)\n  at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:61)\n  at org.gradle.execution.DefaultBuildExecuter.access$200(DefaultBuildExecuter.java:23)\n  at org.gradle.execution.DefaultBuildExecuter$2.proceed(DefaultBuildExecuter.java:67)\n  at org.gradle.execution.DryRunBuildExecutionAction.execute(DryRunBuildExecutionAction.java:32)\n  at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:61)\n  at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:54)\n  at org.gradle.initialization.DefaultGradleLauncher.doBuildStages(DefaultGradleLauncher.java:155)\n  at org.gradle.initialization.DefaultGradleLauncher.doBuild(DefaultGradleLauncher.java:110)\n  at org.gradle.initialization.DefaultGradleLauncher.run(DefaultGradleLauncher.java:78)\n  at org.gradle.launcher.cli.ExecuteBuildAction.run(ExecuteBuildAction.java:38)\n  at org.gradle.launcher.exec.InProcessGradleLauncherActionExecuter.execute(InProcessGradleLauncherActionExecuter.java:39)\n  at org.gradle.launcher.exec.InProcessGradleLauncherActionExecuter.execute(InProcessGradleLauncherActionExecuter.java:25)\n  at org.gradle.launcher.cli.RunBuildAction.run(RunBuildAction.java:50)\n  at org.gradle.launcher.cli.ActionAdapter.execute(ActionAdapter.java:30)\n  at org.gradle.launcher.cli.ActionAdapter.execute(ActionAdapter.java:22)\n  at org.gradle.launcher.cli.CommandLineActionFactory$ParseAndBuildAction.execute(CommandLineActionFactory.java:200)\n  at org.gradle.launcher.cli.CommandLineActionFactory$ParseAndBuildAction.execute(CommandLineActionFactory.java:173)\n  at org.gradle.launcher.cli.CommandLineActionFactory$WithLogging.execute(CommandLineActionFactory.java:169)\n  at org.gradle.launcher.cli.CommandLineActionFactory$WithLogging.execute(CommandLineActionFactory.java:138)\n  at org.gradle.launcher.cli.ExceptionReportingAction.execute(ExceptionReportingAction.java:33)\n  at org.gradle.launcher.cli.ExceptionReportingAction.execute(ExceptionReportingAction.java:22)\n  at org.gradle.launcher.Main.doAction(Main.java:48)\n  at org.gradle.launcher.bootstrap.EntryPoint.run(EntryPoint.java:45)\n  at org.gradle.launcher.Main.main(Main.java:39)\n  at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:50)\n  at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:32)\n  at org.gradle.launcher.GradleMain.main(GradleMain.java:26)\n  at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:33)\n  at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:130)\n  at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:47)\n  Caused by: org.gradle.api.internal.tasks.compile.CompilationFailedException: Compilation failed; see the compiler error output for details.\n  at org.gradle.api.internal.tasks.compile.jdk6.Jdk6JavaCompiler.execute(Jdk6JavaCompiler.java:42)\n  at org.gradle.api.internal.tasks.compile.jdk6.Jdk6JavaCompiler.execute(Jdk6JavaCompiler.java:33)\n  at org.gradle.api.internal.tasks.compile.NormalizingJavaCompiler.delegateAndHandleErrors(NormalizingJavaCompiler.java:95)\n  at org.gradle.api.internal.tasks.compile.NormalizingJavaCompiler.execute(NormalizingJavaCompiler.java:48)\n  at org.gradle.api.internal.tasks.compile.NormalizingJavaCompiler.execute(NormalizingJavaCompiler.java:34)\n  at org.gradle.api.internal.tasks.compile.DelegatingJavaCompiler.execute(DelegatingJavaCompiler.java:29)\n  at org.gradle.api.internal.tasks.compile.DelegatingJavaCompiler.execute(DelegatingJavaCompiler.java:20)\n  at org.gradle.api.internal.tasks.compile.IncrementalJavaCompilerSupport.execute(IncrementalJavaCompilerSupport.java:33)\n  at org.gradle.api.internal.tasks.compile.IncrementalJavaCompilerSupport.execute(IncrementalJavaCompilerSupport.java:23)\n  at org.gradle.api.tasks.compile.Compile.compile(Compile.java:60)\n  at org.gradle.api.internal.BeanDynamicObject$MetaClassAdapter.invokeMethod(BeanDynamicObject.java:196)\n  at org.gradle.api.internal.BeanDynamicObject.invokeMethod(BeanDynamicObject.java:102)\n  at org.gradle.api.internal.CompositeDynamicObject.invokeMethod(CompositeDynamicObject.java:99)\n  at org.gradle.api.tasks.compile.Compile_Decorated.invokeMethod(Unknown Source)\n  at org.gradle.util.ReflectionUtil.invoke(ReflectionUtil.groovy:23)\n  at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$4.execute(AnnotationProcessingTaskFactory.java:150)\n  at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$4.execute(AnnotationProcessingTaskFactory.java:145)\n  at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:472)\n  at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:461)\n  at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:60)\n  ... 60 more\n\nBUILD FAILED\n\nTotal time: 20.43 secs\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/29206340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mgeis": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35035796", "body": "somebody please kill this PR.  I was trying to do the reverse, which was to pull latest Netflix into my fork.  Sorry.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35035796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35047931", "body": "This looks like a Hudson CI failure rather than a failure caused by the commit.  I get a successful build when I run \"gradle clean build\".  Stack trace from Hudson console output suggests that the build never even started.\n\nWaiting to see if another build will kick off.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35047931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/37250712", "body": "In the last commit, I created a TestUtils class, removed a lot of the copy/paste utility code peppered through the test classes, and simplified the logic of the termination date checking.\n\nTook Nir's advice to just check to see if the termination was within a day of what we expect it to be.  The DST cutover only bumps it by an hour, but as you see from the earlier commit, checking those bounds adds more code and logic to the test case.\n\nI additionally wrote a unit test where the date is fixed and the test time crosses a known DST cutover boundary, to verify that the cutover occurs and that the new test logic works correctly for both instances.  The other tests look like unit tests but are not \"pure\" unit tests as they do not mock the system time, and rely heavily on calls to the system to get the current time to populate rules, resource detach/create dates, etc.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/37250712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/37906234", "body": "Can close now, as Pull request #121  was merged.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/37906234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "investorguide-hao": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35418278", "body": "Im facing a similar error. Im using the gradle wrapper that comes with simian army and it just stuck here: \n\n:test FAILED\nFAILURE: Build failed with an exception.\n- What went wrong:\n  Execution failed for task ':test'.\n  > There were failing tests. See the report at: file:///root/SimianArmy/build/reports/tests/index.html\n- Try:\n  Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.\n  BUILD FAILED\n\nit's wired that in index.html, it says 0 tests, 0 failures ...\n\nif I do --debug, event logger is here:\n\n18:19:16.575 [DEBUG] [TestEventLogger] Gradle Worker 1 FAILED\n18:19:16.577 [DEBUG] [TestEventLogger]     org.gradle.api.internal.tasks.testing.TestSuiteExecutionException: Could not complete execution for test process 'Gradle Worker 1'.\n18:19:16.583 [DEBUG] [TestEventLogger]         at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:60)\n18:19:16.583 [DEBUG] [TestEventLogger]         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n18:19:16.584 [DEBUG] [TestEventLogger]         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n18:19:16.584 [DEBUG] [TestEventLogger]         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n18:19:16.585 [DEBUG] [TestEventLogger]         at java.lang.reflect.Method.invoke(Method.java:606)\n18:19:16.585 [DEBUG] [TestEventLogger]         at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\n18:19:16.585 [DEBUG] [TestEventLogger]         at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n18:19:16.586 [DEBUG] [TestEventLogger]         at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)\n18:19:16.586 [DEBUG] [TestEventLogger]         at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)\n18:19:16.587 [DEBUG] [TestEventLogger]         at com.sun.proxy.$Proxy2.stop(Unknown Source)\n18:19:16.587 [DEBUG] [TestEventLogger]         at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:113)\n18:19:16.588 [DEBUG] [TestEventLogger]         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n18:19:16.588 [DEBUG] [TestEventLogger]         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n18:19:16.588 [DEBUG] [TestEventLogger]         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n18:19:16.589 [DEBUG] [TestEventLogger]         at java.lang.reflect.Method.invoke(Method.java:606)\n18:19:16.589 [DEBUG] [TestEventLogger]         at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\n18:19:16.589 [DEBUG] [TestEventLogger]         at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n18:19:16.590 [DEBUG] [TestEventLogger]         at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:355)\n18:19:16.590 [DEBUG] [TestEventLogger]         at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:66)\n18:19:16.628 [DEBUG] [TestEventLogger]         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n18:19:16.628 [DEBUG] [TestEventLogger]         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n18:19:16.628 [DEBUG] [TestEventLogger]         at java.lang.Thread.run(Thread.java:744)\n18:19:16.629 [DEBUG] [TestEventLogger]\n18:19:16.629 [DEBUG] [TestEventLogger]         Caused by:\n18:19:16.629 [DEBUG] [TestEventLogger]         java.lang.VerifyError: Expecting a stackmap frame at branch target 55\n18:19:16.630 [DEBUG] [TestEventLogger]         Exception Details:\n18:19:16.630 [DEBUG] [TestEventLogger]           Location:\n18:19:16.631 [DEBUG] [TestEventLogger]             com/netflix/simianarmy/aws/conformity/rule/SameZonesInElbAndAsg.haveSameZones(Ljava/util/List;Ljava/util/List;)Z @25: ifnull\n18:19:16.631 [DEBUG] [TestEventLogger]           Reason:\n18:19:16.631 [DEBUG] [TestEventLogger]             Expected stackmap frame at this location.\n\nI run out of ideas...\n\nGreat thanks,\nHao\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35418278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35424073", "body": "well, dont know the error but it succeed after I purged java7 and use java6.\nOne more thing is I run build on ubuntu account but not root this time!\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35424073/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35649739", "body": "I am all good here related to the build, I will close it. But a follow-up question, if I want janitor to terminate idle ec2 instances by their ids or cpu utilization, can I do that? Comparing to cloudwatch, which way do you prefer, I certainly want to setup one alarm to monitor all instances, but as far as I know, it's not possible..\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/35649739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "matschaffer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/39289229", "body": "Looks like @quidryan and @coryb were in on it toward the beginning. Any reason not to use Archaius here? \n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/39289229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dziemid": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/40695834", "body": "+1, the other test that fails due to timezone is ./src/test/java/com/netflix/simianarmy/basic/TestBasicCalendar.java (Fails in our timezone)\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/40695834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "benkantor": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/42313623", "body": "misread the documentation\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/42313623/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "tomcart": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/56800622", "body": "Great, Its on our backlog to sort so hopefully we'll be have something to share soonish.\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/56800622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ramonskie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/57160394", "body": "is this every going to be merged?\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/57160394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "DanielXiao": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58313152", "body": "Hi, Nir\n\nI really appreciate your careful review. Sorry for my the spelling mistake on the variable names. I will change code according to above 4 comments.  \n\nThanks a lot!\nDaniel\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58313152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58736232", "body": "Hi, Nir\n\nI recorded a demo of my patch and posted it to http://youtu.be/AnSrpk_thDE. Hope you don't mind it. \nI just renamed the package name of VSphereChaosCrawler.java on IntelliJ IDEA and below error happens in the jenkins build. I checked that the class name and file name are the same and it works well in my local environment. Could you please take a look it and give me some hints? \n\nclass VSphereChaosCrawler is public, should be declared in a file named VSphereChaosCrawler.java\npublic class VSphereChaosCrawler implements ChaosCrawler {\n       ^\n1 error\n FAILED\n\nFAILURE: Build failed with an exception.\n\nThanks again\nYifeng\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58736232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58744278", "body": "Hi, Nir\n\nI have fixed all the problems you pointed above. Please feel free to give your comments .\n\nThanks.\nYifeng\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/issues/comments/58744278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/18564979", "body": "The logic is to use password instead of private key to build ssh credential When user doesn't specify simianarmy.chaos.ssh.key.  Do you mean LoginCredentials.builder().user(sshUser).password(privateKey).build()?  Because simianarmy.chaos.ssh.password is password so we can only build LoginCredentials like this LoginCredentials.builder().user(sshUser).password(privateKey).build().\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/18564979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "milindcq": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/comments/17113275", "body": "This fix hangs on following string input.\n\n\"ba1311ca84f8c8f8ba17b6c55b9a7a81797b4c0b70cb17079e5921505c2a6591\"\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/comments/17113275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Netflix/SimianArmy/comments/17124247", "body": "We have some of these long strings as user ids in our system and I've noticed that it hangs on such strings. Not sure if problem with regex pattern or Java regex library itself.\n\n`public class RegTest {\n\n```\nprivate static final String EMAIL_PATTERN =\n        \"^[_A-Za-z0-9-\\\\+\\\\.]+(.[_A-Za-z0-9-]+)*@\"\n                + \"[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$\";\n\npublic static void main(String[] args) {\n\n    Pattern emailPattern = Pattern.compile(EMAIL_PATTERN);\n    String email = \"ba1311ca84f8c8f8ba17b6c55b9a7a81797b4c0b70cb17079e5921505c2a6591\";\n\n    if (!emailPattern.matcher(email).matches()) {\n        System.out.print(String.format(\"Invalid email address: %s\", email));\n    }   \n}\n```\n\n}`\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/comments/17124247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "adm-github": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/37135279", "body": "this is the case that this PR addresses and that fails if tested on master:\nGradle suite > Gradle test > com.netflix.simianarmy.basic.chaos.TestBasicChaosEmailNotifier.testValidEmailAddresses FAILED\n    java.lang.AssertionError at TestBasicChaosEmailNotifier.java:101\n", "reactions": {"url": "https://api.github.com/repos/Netflix/SimianArmy/pulls/comments/37135279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}}}