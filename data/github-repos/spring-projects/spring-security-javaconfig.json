{"_default": {"1": {"singhjagjeet": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/140", "title": "When I change the password for a user, how would next client session use new password", "body": "I have added code to update a user password using spring security. However the next client session still uses the older password.\nIs there a way to force the client to use new password?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/72916877", "body": "Thanks Anuj for the response. \n- I am not using any db caching. I am using InMemoryUserDetailsManager. Here is the code:\n\n<code>\n@Configuration\n@EnableWebSecurity\n@ComponentScan(\"com.test\")\npublic class MySecurityConfig extends WebSecurityConfigurerAdapter{\n\n```\n@Autowired\nprivate MyAuthService myAuthService;\n@Autowired\nprivate PasswordEncoder passwordEncoder;\n@Autowired\npublic void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\n    auth\n        .userDetailsService(userDetailsManager())\n            .passwordEncoder(passwordEncoder);\n}\n\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n    http\n        .sessionManagement()\n        .sessionCreationPolicy(SessionCreationPolicy.STATELESS)\n        .and()\n        .csrf().disable()\n        .authorizeRequests()\n            .antMatchers(\"/config/**\").access(\"hasRole('ROLE_ADMIN')\")\n            .and()\n        .httpBasic();\n}\n\n@Bean\n@Autowired\npublic InMemoryUserDetailsManager userDetailsManager() {\n    final Properties props = new Properties();\n    props.put(myAuthService.getUserName(),\n        myAuthService.getPassword()+\",ROLE_ADMIN,enabled\");\n    InMemoryUserDetailsManager inMemoryUserDetailsManager = new InMemoryUserDetailsManager(props);\n    return inMemoryUserDetailsManager;\n}\n```\n\n}\n</code>\n- I don't think that I'm using any rememberMe token. How do I invalidate session token?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/72916877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/73160193", "body": "Thanks again Anuj. I tried SecurityContextHolder.clearContext(); and it did not help. I even tried request.getSession().invalidate(); and this did not help either.\nI think, Maybe it is not the session that I need to invalidate (since my config already states the session policy as SessionCreationPolicy.STATELESS.  \n\nBTW, I tried to code per \n<link>\nhttp://docs.spring.io/spring-security/site/docs/3.2.5.RELEASE/reference/htmlsingle/#servletapi-start-runnable \n</link>\nBut the code does not compile.\nAny other suggestion guys? Any other taker(s)?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/73160193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rwinch": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/133", "title": "Verify OAuth Server Namespace", "body": "", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/82", "title": "OAuth2ServerConfigurator should support protecting multiple resource ids", "body": "This would be nice, but we will need to coordinate w/ Security OAuth since we cannot yet support multiple resource ids with a single <http>\n\nWhen we do this we should automatically add the mapping for the resource id to the <http>\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/82/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/48", "title": "CAS Sample", "body": "", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/48/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/e37299c50f9e950dc68be3b4e87bf7350eb1426f", "message": "Update README.md"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/d2949f7efc9265c23691af963eae31b426dd6fc7", "message": "SEC-2204: Fix Spring Social Sample"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/f9df4275acb47226fc9f43193e21b7efb227fdc4", "message": "Update httpclient dependencies to allow Spring Social to work"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/24a1a45afcbff70bc1d07738a9f09fbd9a56c733", "message": "samples-method.md use correct attribute name for user element"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/dcb59690f32e24d785928fb742d97c5f1a7e41ec", "message": "Updated to reflect that code is maintained in Security codebase"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/2261e6507e9b2608cd6d44e5880216d6c22bc2d6", "message": "Update spring-security-javaconfig test dependencies"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/c88aa67dc34c9dfda4eaab01fd516d0354b6b0d3", "message": "Polish XML fixes"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/5ac7930a9d3aaa21e0ed7a93fcb62398dfbb6f6a", "message": "Fix sample XML equivalents"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/9e642472daa970599f2d64d24e6dfaa90290d23d", "message": "#137 WebSecurityConfigurerAdapter no longer uses getClass() for logger\n\nPreviously it was difficult to change log levels due to CGLIB proxying of\nthe class which impacted the logger name."}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/d3dd017619a284dc6eaa1a1eb771aa8eddc86365", "message": "#138 WebInvocationPrivilegeEvaluator has default value\n\nPreviously the WebInvocationPrivilegeEvaluator did not default properly due\nto an ordering issue. Now the lookup of the FilterSecurityInterceptor is\ndelayed within WebSecurityConfigurerAdapter to ensure this is properly\nset."}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/bf649c1ced6fd755de1981688d90113e066ade41", "message": "#138 Tests for WebSecurityExpressionHandler bean existing"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/4431cb8bcd2527739d8c6fc952ddf892299942b2", "message": "Polishing"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/e22611241c85c61aff6c53d4221e86533de1ec5d", "message": "AbstractConfiguredBuilder allows multi SecurityConfigurers of same Class\n\nThis is necessary so that AuthenticationManagerBuilder can multiple\nAuthenticationProvider's of the same type."}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/1e1415bda46a798e8242697787a43921d7645d3f", "message": "adjust coverage for spring-security-oauth2-javaconfig"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/799a191144b95f2f566f4784b53fbad48af0913c", "message": "ObjectPostProcessor type checking tests"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/3c6eecb6231c59d42206ec2d080bfc0ae7183366", "message": "HttpBuilder->HttpSecurityBuilder"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/57906e49d4bccd99758be64b8e9e77b3c8d40453", "message": "#108 Allow override of WebSecurityConfiguration beans"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/386021dcf0c043559cd822de2626a71085a3f7cc", "message": "#134 pom cleanup"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/298411e296990afa4a4647432f80bf25c16ad77b", "message": "#136 Update oauth group id"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/6cbf2b7479b485c0cba5c48879a6146f2110275e", "message": "Polish"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/91a670a47dcc5e6f8ff68862d0f7cc667de082e8", "message": "HttpConfiguration->HttpSecurity"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/aac67d0634a2e5c4215a210546e09049f7ee2ab8", "message": "Polish Method naming conventions"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/df197d8d56c8c91d627f5dc7673b8b6afe197a6e", "message": "Polish naming conventions"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/dc679dd9284263d3bc3e9f4c9bbc797865872ff3", "message": "Polish\n\nJavadoc, generic params, and naming of classes"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/f81375e01d4097b85b69fa4472a69ae25b84dfe0", "message": "Polishing"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/208e2a795b9325f070abc9c36b224efb04985b2f", "message": "OAuth2 JC tests"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/8c5d3d040eee528a11af9d07938a724c07819dc5", "message": "Sonar cleanup"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/fc28615e443e37dc5fda40b2705bf6880d191046", "message": "Remove unnecessary code from Hello World SecurityConfig"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/d987c2a0b4b41601355307cc297f5188838c926b", "message": "Polish AbstractSecurityWebApplicationInitializer"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/7b99e321544dc997a8bb9ad4b500f648b5ffe95e", "message": "InMemoryClientDetailsServiceBuilder->InMemoryClientDetailsServiceConfigurer"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/a856a466fedd972dae13887859b5f59bc890a9c2", "message": "Polish and more tests"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/8afee95424d425933b6bd96e9b364e351fdc2c65", "message": "#130 Package names include .configurers .builders and .configuration"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/ac81af29705f03f06953df00750f2cdc7a337ea5", "message": "Polish authentication method names"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/cbc03075565b24174c553e33fa39dbb552987d4f", "message": "CompositeObjectPostProcessor"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/72f953ab86aac3a8355edf5bc33ffe7d4b4d7651", "message": "#117 Default Ldap with in Memory LDAP"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/a982e609a284eb2cd16fab913dc9afefe1056483", "message": "AbstractConfiguredSecurityBuilder has postProcess method"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/a2d31f397697c8a9fb230be8633d6769594fe78e", "message": "set ObjectPostProcessor on Configurer"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/1bd38a6cc838af3023dab369fcf5a85c3defdccf", "message": "Namespace*Tests polish"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/8e81876f22ff9ca45404b028329cdda3a8ee0bf5", "message": "SecurityBuilderPostProcessor->ObjectPostProcessor"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/a8abdfb1bb8f1cf470d1f8becb4e2db381bc2252", "message": "#132 Ensure Authentication*Events are fired only once"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/b2d86af8396ad24f7b18da1de76091d2b7e5033b", "message": "Provide better errors when SecurityBuilderPostProcessor is not found"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/6e4b74bda91f80cb61ec4f343fbd7e3a468efae8", "message": "Move AutowireBeanFactoryPostProcessor and use in EnableGlobalMethodSecurity"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/abc2e6d9acda63938c19bdd75ae6d3eb274ae52f", "message": "Polish tests"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/96520f4c321d07a98ea2cfcc674aeffd1a217080", "message": "Verify events published for AuthenticationManagerBuilder"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/ed2eeb11c247901947da7e94d35ac05e07f48d63", "message": "LifecycleManager->SecurityBuilderPostProcessor"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/ea632af00f974396885b665cd480099f2dcc8401", "message": "#132 AuthenticationManagerBuilder supports AuthenticationEventPublisher"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/e0a56b4d15b7d357b8bc60a368e145ccb25ca02c", "message": "Post Process ProviderManager"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/b45f39a220f5db906d33ac37fac7be154fbbd598", "message": "Polish NamespacePasswordEncoderTests"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/cca2935aaa6f64ad4c3c733bf6a72c220727ec78", "message": "Namespace JdbcUserService"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/dc657e5ef43c703f8ef4363d28b4810d963bcfaf", "message": "Start NamespaceJdbcUserServiceTests"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/80718a2738f304c6544ae398907470fa34b781f7", "message": "NamespaceAuthenticationProviderTests"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/c6ea1ae1ac1523ec272398caff0c83cb383c8cef", "message": "authentication-manager@erase-credentials"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/820760ffb5162d938ea4d29ceeece512026f3ac8", "message": "Polish Namespace*Tests"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/6576643f78b17a390c85c080ea91f8bbad5b89d1", "message": "Polish format HttpConfiguration javadoc"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/a95e259be7f08c55099a5f5751f5d316bff3bbf8", "message": "AbstractSecurityWebApplicationInitializer allows adding HttpSessionEventPublisher"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/ade743e0af135097bde236f3f0d7ee17a5f3d883", "message": "#128 Concurrency control is hierarchical"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/c27ebe8cfe67d7879fe2426f20e1192c27534872", "message": "Polish Namespace*Tests"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/987d97e7d7718193e83232a585596cfcb70ba1ab", "message": "Disable publish of only sample modules"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/98a8fe53e6ea480f6c26fab80d39e5992bd12f20", "message": "Polish NamespaceHttpFirewallTests"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/21bfa53dcba21e3df52a39aac23bcdbc8e96bb30", "message": "NamespaceHttpBasicTests polish"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/26e610845fa48db594b7e28157f3f8066e1c7e2f", "message": "re-enable artifactoryPublish for all modules"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/6b0f63fe879220ca979c4d657685f0c265c29717", "message": "Polishing of tests"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/b27b149bd3031967d5f684c15d2e621e33c63b0c", "message": "AbstractSecurityWebApplicationInitializer support child context"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/36d72d185911790aaaa50a884d96e9d5cf02be33", "message": "Polish on Namespace*Tests"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/e9e10d793f5c8fdbc7d448f72165d76387f77848", "message": "Disable publishing of unecessary artifacts"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/6959415bdd1dff9ef3be9df5c62b6d71e109f48e", "message": "#54 Fix EnableWebSecurity on parent classes"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/44aeaa2d287d62c21290f3ec283b98721384ca42", "message": "#54 Create debug equivalent"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/8476ac487843367a7ddd64dbff37837d28b49473", "message": "#125 Fix Yahoo OpenID"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/506e2944baa5a91a263257f52d1452f2eff4a969", "message": "Remove contextSource.afterPropertiesSet()"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/c3bfd93870bfb8081941402830c86df3fa6f6929", "message": "Update gradlew to have memory settings to support sonar"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/0c202101327ba8e343b753db1331e8c60b2aa95d", "message": "Update build.gradle dist project"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/3d4770cdbda0ec732e5f48b4a85ec9a7ee3eb58d", "message": "#119 Create ProviderManagerBuilder interface to remove class tangles"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/697cfdaf2773e658235cf1de71c2a543bd0ad4cd", "message": "#119 Add HttpBuilder interface to remove tangles"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/ba54973645c866c1f377874d49cefd659285c05f", "message": "#119 move provisioning to authentication"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/85d49df298872995e64234306bed44cfbe4703a9", "message": "#119 Remove AuthenticationManagerBuilder#ldapAuthenticationProvider()\n\nThis removes package tangling between authentication and\nauthentication.ldap"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/746f3262b1f479cf5c87aa346b81d65552dd8cdd", "message": "*Configurator*->*Configurer*"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/1a5410bf03617b1fafd2f1b988981b999e2f0a4f", "message": "Organize imports"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/16b38af873bdd251286bb51a56817068938e7b24", "message": "Polish sonar"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/bed2bdd9f0ebf92ba422ef98eabbe34b752022ed", "message": "Move LifecycleManager"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/91565dc3ae5d70d4e4eb341e4efc50038ce0b46d", "message": "Add sonar-runner"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/58cc62cc13717c51a8d085986880938a6c83804f", "message": "Remove InMemoryAuthenticationRegistry"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/e1383774c3ff350452fd0e6cd231cd23bb94fb3b", "message": "Remove source from rootProject for sonar preparation\n\nSee http://forums.gradle.org/gradle/topics/how_to_apply_sonar_runner_to_multi_project_hierarchies_with_code_in_the_root_project"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/a4e2e2eb22f7851f12f79aa34485f88cabda23bb", "message": "ignore .pmd and .checkstyle"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/0ec033dac36c25dbc9fac63384f3d66f6a2afd86", "message": "exceptionHandling().requestCache(RequestCache)->requestCache().requestCache(RequestCache)"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/9692a3886c0d9c595d3904512ac169a6bbbc460d", "message": "PMD cleanup"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/41603f35f62d08f1272f99ff7a779b54dbf44c34", "message": "Polish AbstractConfiguredSecurityBuilder"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/ecc8aac471b2aaf2ff6823e90344d659bba5af57", "message": "Gradle 1.6"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/ac759e3633f94865a02280c9359ae21c0e67ee23", "message": "Remove unused isBuildAllowed from AbstractSecurityBuilder"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/927e545866fe0b58cbdd89ecb174513e0f5630df", "message": "Polish authentication.*Repository removal"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/ea384597b03d71ce5b28565543019044ae862b45", "message": "clean imports on FormLoginConfiguratorTests"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/3b9d887fc5f49e0c4b5f3679dcffa4b45b97a97b", "message": "Correct quickstart to not mention /resources/**"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/5b4f0447855387bba75720cc5544755bf2dd63b8", "message": "#90 Remove the authentication *Registry\n\nThe Registry interface was around to limit the methods available when\nusing registerAuthentication, but the methods available cause no more\nconfusion that the configure(HttpConfiguration) methods. The additional\ncomplexity of maintaining the interfaces was not worth the minor benefits."}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/2788ad76582cfce16204629dfdab4fb2870d8331", "message": "InMemoryUserDetailsManagerSecurityBuilder -> InMemoryUserDetailsManagerConfigurator"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/dd77e33c080fd770d07a61dd6f8af06edb07988c", "message": "#124 DefaultLoginPageGeneratingFilter support logout success"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/e43c69a7eaeaa347d4db69642e204fd3a431ad64", "message": "#76 FormLogin ignores failureUrl if explcit AuthenticationFailureHandler"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/333840d0e84e2a9e65f04c2991db7ebbe49df743", "message": "#98 Add AbstractAuthenticationFilterConfigurator"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/72921c2b9faf5f95adb09851b5dc15ec2dc76f98", "message": "#102 Ensure that SessionManagement does not override SecurityContextRepository"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/e0fb5c08de5422c6ebdb0fdb4cbb11c781326a71", "message": "SecurityContextConfigurator correct securityContextRepository method name"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/32849428b0bb77416f2194b1cdac5788415a885e", "message": "Remove permitAll for resources of default configure(Httpconfiguration)"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/c1ef6d317f830b249d72e307d597bc191ecbae9e", "message": "breakup README.md"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/177e2f7327d040ce8d9caac3460c2132bd814223", "message": "Polish helloworld sample"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/69aa1fe7898c8e009e7846e4f9021e4ce32af1a4", "message": "Add AbstractSecurityWebApplicationInitializer"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/cba7c8d31a68e175f59bcee01873d2bee3fac130", "message": "Make Hello Security Experience better"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/712a147075460ae52028cc3b305c8f61445062d9", "message": "#115 Allow apply(configurator) in init"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/5b51d33ce758658c9eefe25d24cdef372fbc3a33", "message": "Format AbstractConfigureredBuilderTests"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/1e1d69eb4df6fe5ae8e100280b4a1cc2966e8165", "message": "#110 Ensure SessionManagement doesn't override RequestCache"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/654497ec58661a25e3b32f5d12f969352f74cc9d", "message": "#100 specific AuthenticationEntryPoint prevents default login page"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/0dd2e31a0feb43819ca6c1dd3a00ab161d44d73a", "message": "#120 move http@entry-point-ref\n\nHttpConfiguration.authenticationEntryPoint to\nHttpConfiguration.exceptionHandling().authenticationEntryPoint()"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/3713417a53096dab8605973f2ffac120625965fe", "message": "Fix UrlAuthorizations.hasAny*"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/85547ef3bdc6539456b4e714a3d9febbb0789333", "message": "#78 AccessDecisionManager is now AfirmativeBased to match HttpConfigurationBuilder"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/87115e61da2986ad4a94c60678a0fb4d0671bb1a", "message": "Format ExpressionUrlAuthorizationTests"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/0cfccd8a885cbe9297ede2cfa5d020c3ff996262", "message": "format NamespaceHttpTests"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/ad5cb801c870b74b82c07ff776af772fcac10bff", "message": "#73 FormLogin uses PortMapper"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/7eade2de89c6aae9efcb5bd67ad4fd009e93cf50", "message": "Removed unused Test Config"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/49336d97b7826041f086988a9be7a60b88732309", "message": "#2 Refine PermitAll support"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/b5d2eceab9756b7a831f4fcb7dff3b65b9115481", "message": "#21 Authentication uses LifecycleManager"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/c0a182cd00de830a6bcca6736b23aa726105f7e3", "message": "#21 fix openid"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/d2b4216c5ec14d90a25fd55a7ec6b0efbca8980c", "message": "#21 x509 LifecycleManager"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/c83f9228b873b0a6d95b2ca4ab39606cdd7292b3", "message": "#21 sessionManagement LifecycleManager"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/c745bf97ecad38358c952cd6098fc1e5ccdd4602", "message": "#21 servletApi LifecycleManager"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/b5c3b089f0c92ae5dcafa1c386115da359412e78", "message": "#21 securityContext() LifecycleManager"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/29a409943851c085a38f38df5738db1c61d80eeb", "message": "#21 requestCache LifecycleManager"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/811d5bc9c3cb46caadb2920a96a4fca3ea96fc94", "message": "#21 rememberMe LifecycleManager"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/de834bc43d77315358785c7e7269a90e32169f84", "message": "RememberMeConfigurator does not require LogoutConfigurator"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/8db9f71b7ab8f80147d77041b54cc595c81c0e46", "message": "#21 openidLogin LifecycleManager"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/31f915db332d69ee7dedfaf520d8d126eca6aa9b", "message": "#21 logout LifecycleManager"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/601cef1801eec38213a225e742edf7398abcc9a7", "message": "#21 jee uses LifecycleManager"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/14f09a18628435be4786e03d85179d26f22a1bc0", "message": "#21 httpBasic LifecycleManager"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/8c08d8980c098651fafc3a9dd01f36ac9e17ab91", "message": "#21 exceptionHandling LifecycleManager"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/359355a4ee34c8416d68d23a0d7d920985b4ff8c", "message": "#21 DefaultLoginPageConfigurator Lifecycle"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/049beeda27f926c7a84a3d2e35702b1656918bd5", "message": "#21 ChannelSecurityConfigurator lifecycle"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/c5bbd2d4b3e988dfcc46175809991fd86c7b0b55", "message": "ChannelSecurityFilterConfigurator->ChannelSecurityConfigurator"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/0ce6e02e006108b00a3c3d56dea7c92b72c00e4b", "message": "#21 Introduce LifecycleManager and add to FormLoginConfigurator"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/8dfdd21551496aa186fbdcd53fae8c8c5b3d55a7", "message": "Polishing FormLoginConfiguratorTests"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/d84e7829c16abd28901353f1aa6ab998e4a04d1e", "message": "Format FormLoginConfiguratorTests"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/bd47de55bb2bec24438952ecead7b56266170a76", "message": "FormLoginSecurityFilterConfiguratorTests -> FormLoginConfiguratorTests"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/eec7e91e1a58b36be3d91b28d3b1db8f99c70d32", "message": "#114 RememberMeConfigurator error message for null UserDetailsService"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/71686d0164133f4ead5f3b71a2b293c0a2743c95", "message": "WebSecurityConfigurerAdapter no longer automatically exports Beans\n\nThis is necessary to avoid exporting null AuthenticationManager and\nnull UserDetailsService in some instances. It also allows the removal of\ncode that looks up a bean but excludes the look up of the bean by a\nparticular name."}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/1f391a6c3eb87c9fb320dad1f2b5bb3fcbd7bd2b", "message": "#113 Add DaoAuthenticationRegistry"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/510b875a0e77c83df374686b626e3aa0059082af", "message": "start refactor interface hierarchy"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/ce1257ec0a7e8bbed545ca8e9d98f14fa0d49815", "message": "Add BaseRequestMatcherRegistry.anyRequest()"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/08c6a28aed22c0f8794de683a1a70625b786c0c0", "message": "#92 UserDetailsBuilder supports GrantedAuthority type"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/ca250bd4567d4baaa1d7535f9cb7c4b119d929e8", "message": "#91 UserDetailsBuilder supports all attributes"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/0a4571b94dfd926c397d95f597884581af1f4958", "message": "AuthenticationRegistry parameterize userDetailsService method"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/be78c248c23d4ca6d1c38f4197754d1979c71e81", "message": "#111 Move securityContextRepsitory to SecurityContextConfigurator"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/dd99b0ed34ccb7d49975ed456c99fa759c932e78", "message": "Add SecurityConfiguratorAdapter.getBuilder()"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/6bdbc1db41770a2710bc59858215d54110f6dd63", "message": "#109 mappableRoles(String.../Set<String>) override prev invocations"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/3b2e5426088014c601476601a06b0bd66cafffa5", "message": "#103 enableUrlRewriting -> enableSessionUrlRewriting\n\nThe name enableUrlRewriting is not very precise since URLs are still\nrewritten. The option only removes session ids from URLs that are\nrewritten."}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/ae83ec76d97b078da83a8f99dae276690848f264", "message": "#101 annotation.web.*Configurator default constructor and final"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/0f5a9c688137143edf0dc0b4dcc0741407298f33", "message": "#93 Make RequestMatchers private"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/3ee49f7833474b96e1dc800d32b18d5828c4b789", "message": "javadoc x509"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/505171b3aaccdfc5059c769aa6f307c6cf3a4d6a", "message": "Remove MediatypeRequestMatcher"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/2606c014599bb890ce272d499d14f90b37630e96", "message": "create -docs and -dist"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/25fb390d6640a5ebd264f4538bce0e96e370a7e4", "message": "minor javadoc cleanup"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/9b2072debb848c59bfc9f8d7d1a3074fbe07eb61", "message": "Polish WebSecurityConfigurerAdapter"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/65209c9ffa5a911569d962ae240482f4700667d6", "message": "polish EnableWebSecurity imports"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/8d9cf99add5585d8c0fc20b47918f7f90c4ee9c6", "message": "finish HttpConfiguration javadoc"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/36854dc72b7009a07b1a42a2635228fb3dc76039", "message": "#112 Added FAQ entry for NoSuchBeanDefinitionExceptionBeanNotFoundException"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/4d4fdd5d58433c5f10ae51830d5deb7dbf1ab7e4", "message": "Update Spring Version"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/2eaebb5da721ed0a550f1e74185d191b36337ea3", "message": "#112 Fix scoping of UserDetailsManagerConfigurator"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/109e2bce05c8d005e52910176dd1afedcc444f09", "message": "polish NamespacePasswordEncoderTests"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/22be2329eb08dc58a8cd4971d09a833cfc7b929b", "message": "Format README headers of samples"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/5408abf79cb0bf73b99e854634ff7efa81ff541e", "message": "#113 Add password-encoder@ref sample tests"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/2e8a9dbf19142777731f95261ccfe58ae984662a", "message": "Make XML Namespace samples more apparent"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/d574f15e35d3fea692b7442469beba0e9413ad37", "message": "Format README"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/cd577d585b988299926e2ccd5a0ee1ea1d044b08", "message": "Add link to Sample Tests in README"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/4125f21a4a6dc60539eb48eee2f47af2542846ef", "message": "Verify Sample exposes UserDetailsService"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/0fbc1c3c5b302e6707ccd54b73a56115924006d0", "message": "README SpringSecurityFilterChainBuilder -> WebSecurityConfiguration"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/50b42ea3365e44ce8cc98dc582e60c5f1dc2161f", "message": "Format SampleWebSecurityConfigurererAdapterTests"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/0bbd2c4bf9a3596c190c38d0f460bd8f4cae77a3", "message": "start javadoc HttpConfiguration"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/cf1863a67501162270f31e143d241a6df2ccc631", "message": "Add example login.jsp to javadoc"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/17e42ce556f5752d23373631dfdedf1383ff139c", "message": "javadoc WebSecurityConfigurer"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/b72d98d45be66cfd1f3065377f22f481ea938702", "message": "BaseRequestMatcherRegistry javadoc now uses Maps"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/70eca4aa4100b4b345fd1e69988c57b1c822e045", "message": "Specify that WebSecurityBuilder ignoring() is addative"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/808b0f60da1de067dbc745edb7bee1498b450691", "message": "javadoc WebSecurityConfiguration"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/1bc4cac7450a2fb750a2bf04b1f4788d33307e89", "message": "#106 WebSecurityConfigurer does not reference HttpConfiguration"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/114fe74f6e82f31118118141fb916f08bdbf00da", "message": "Invoke filterChainProxy.afterPropertiesSet()"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/6cc0ef47efbda278d6bfa510b74f94936d9dd0d1", "message": "javadoc WebSecurityBuilder"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/32aed903eabf0c635aab08f3e1c70250c56b6763", "message": "SpringSecurityFilterChainBuilder -> WebSecurityBuilder"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/8323b5259a82c295989a0ec089f822b37684bbcf", "message": "WebSecurityConfiguration is no longer a builder"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/23d58ab32962c1a3cc40b90bc160464b28083045", "message": "#104 HttpConfiguration addFilter support for OpenID and CAS\n\nWe also add better error messages for Filters that are not supported."}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/c521d8f587c39200fa3700b9b437ac19c3b51778", "message": "Polish UrlAuthorizations"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/83d5a085cd87d1eded357d44843290953d664d80", "message": "Fix Assert import"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/336774dfc5767b0880bae496b45eb8dd4d452f4a", "message": "Polish SessionManagementConfigurator"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/2353f9bc417e7df913d72bdb6f93ed3f58bf5cc5", "message": "SessionCreationPolicy javadoc"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/b303874821f2fc68fc6ecfd13c423e5157f9b709", "message": "ServletApiConfigurator javadoc"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/2c4686be5a2292c8de9d1e4f501b4b8ae6ccec32", "message": "javadoc SecurityContextConfigurator"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/6eeacf080136d86e00373fe08e006530c696ba58", "message": "Polish ExceptionHandlingConfigurator"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/8ffc04a9ed479a204b6913a4ae8facba088cfff8", "message": "Javadoc RequestCacheConfigurator"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/289c0696561817810bb2eaab813f581804a6c31c", "message": "RequestCacheConfigurator allows configuring RequestCache"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/4b4966b9ab5adf4b9cf9296211ed2664ac579334", "message": "javadoc RememberMeConfigurator"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/360ab64c9cad2b07265b2c1153fb59ca2fc55cff", "message": "PortMapper and PermitAllSupport javadoc"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/9659a9bef1b6506c4d6edab8fd69feb40fca07e3", "message": "OpenIDLoginConfigurator javadoc"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/2858db4708eca71bbe2976de3a536f3d916bd5f2", "message": "Polish FormLoginConfigurator javadoc"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/d7a26e5c8e68df96117da472ec88f02624f2e2af", "message": "Polish LogoutConfigurator"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/1a3260c81f8b07c344aaf71af725051f519361d7", "message": "Polish HttpBasicConfigurator"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/bf62279d00d9539cfeb45fcfb2105eb3dadc9558", "message": "Polish JeeConfigurator"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/5164fa80fc2d80c99a90714e0d1800a330c3299b", "message": "javadoc HttpBasicConfigurator"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/fd3e0b67d1e6bba7b7cb2bb5e52e24e5166b1139", "message": "javadoc FormLoginConfigurator"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/604183d9fc691b2319d165ed51b4a10f293b65b1", "message": "#61 Support DefaultLoginPageGeneratingFilter"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/2a352345886b53dc618d7148d41d7069c2f06c25", "message": "Polish FilterComparator"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/890d33251ef9f56c5a388a62e037eb5206ad33a8", "message": "More Javadoc and polish of ExpressionUrlAuthorizations"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/fcdc4034c1c56a5a74437df0fce83c21be1a8114", "message": "start javadoc for annotation.web.*"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/5f525951c63fd71ab1b64334d6a6c1600ef2e7fd", "message": "Polish RequestMatchers"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/c22955ba0eeb3b371f5762c4a78e76bfe9cba950", "message": "Polish Javadoc annotation.provisioning.*"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/a5948e7029af4f441304e8f7fc48327389374d30", "message": "Polish javadoc for config.annotation.method.*"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/6988841a763bd600e7021b86b36e23e1bf406f97", "message": "Polish DaoAuthenticationConfigurator javadoc"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/59f217fe36d035738d7f31cc9d8a324703f4e581", "message": "Update Copyrights"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/b9dfca304cfece0f82b22325f87911827dce4de9", "message": "#89 Allow UserDetailsServiceConfigurator to configure the DaoAuthenticationProvider"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/69d6f856916db19c286a2ad09c4c86db347f212b", "message": "Remove unused constructors from HttpConfiguration"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/249b4381a5cd3eb6234be39fa5f4986e205354e9", "message": "fix AuthenticationManagerBuilder javadoc"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/2507438d0962d9d6105a18bb139dba815327a5c2", "message": "Test that custom UserDetailsService is defaulted for RememberMeServices"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/94b66f29e07515ec7e4b36030ab923dd2cdae913", "message": "Polish AuthenticationRegistry"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/c3349521f6c337cc39450255adc15388217a1e68", "message": "Remove parentAuthenticationManager from AuthenticationRegistry"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/fd45c3fa377592f9eadad6f9f4d7e5ae21c99b86", "message": "Rename AuthenticationBuilder to AuthenticationManagerBuilder"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/d1dc8786228be4c5d4a3ed0a2fc5e1901c54d24b", "message": "Polish remaining javadoc for security.config.annotation.*"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/bfadb6b0f3abc647ed710af5de79329cc3ae02e3", "message": "Polish config for AbstractConfiguredSecurityBuilder"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/56eecfa137b4ac7338065a649f827832e2b1a945", "message": "Remove half example from AbstractConfiguredSecurityBuilder"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/06f9f725bba1a5c6d974155d9b29ace987e4a9fd", "message": "Fix SecurityConfiguratorAdapter erro message"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/27d70fe32f870250c4851876508e0db16a3dd855", "message": "Polishing"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/f90453bb25817cac6da743dcf7cc109e06c35510", "message": "OAuth2ServerConfigurator allows customization of HttpBasic"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/6119ecdc66831b5622a5cf2e5ec4603119cf47cd", "message": "remove disable from AbstractConfigurator"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/015578913043e31f663f9d0e850c29c1bbfbeb6e", "message": "#84 SessionManagementConfigurator stateless will setup the RequestCache to be NullRequestCache"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/293a4e42c45ad45eea77c44cc468019d8637e968", "message": "fix SampleWebSecurityConfigurerAdapter ignoring"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/d19199c7b1c460a419abf453a461a823831c38c8", "message": "remove applyDefaults"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/393fd49cfacac2a6f6f9ab38f8e82421d728ba6b", "message": "Remove applyDefaults from OAuth Config"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/8253a3d2afb13fd0dea2cda10062d23485dc87ec", "message": "Remove ingoredRequests & performConfigure from WebSecurityConfigurerAdapter"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/92dd3a4d375852f2ebff843dc8eeb3cd4ef86579", "message": "Rename Configurators consistently"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/a83a488f224b75c1231714e98a26fb84ef5b4f62", "message": "Rename ClientDetailsServiceBuilder to InMemoryClientDetailsServiceBuilder"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/c69af86ad3715546f20968c1a375cc40296b4836", "message": "Move ClientDetailsServiceBuilder to oauth2 config project"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/788660e6d079688dec39f6b35994ceeef6ea7305", "message": "move oauth configuration to better package"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/372dde4ba8c8cf9e84063f6af3a6ffa13dccc1bf", "message": "Add @Override consistently and remove unused imports"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/4886a98c364a74b0b13f983162f4b2c2d6ca33e8", "message": "#72 remove WebSecurityConfigurerAdapter.authorizeUrls"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/90ae3df1e6472cfc05e8fe4ae809472ac6ccf9e9", "message": "OAuth2ServerConfigurator adds oauthWebExpressionHandler"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/4d6791427f8b5e109072d7e940e7ff9e8f45da52", "message": "#81 OAuth2ServerConfigurator allows to configure resource id"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/7d75becdd6cfc771fa21beb8ca9049042300f870", "message": "Simplify OAuth2ServerConfig by removing demo code"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/c4e06943f70215f0bfa9d8e291fbcf787d0274d5", "message": "Created spring-security-oauth2-javaconfig"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/940a1d6c1a4e7decd07da3a7078f4b40c1a5c778", "message": "Introduce OAuth2ServerConfigurator"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/98d9ac4c2eec812ba8729156ad90f87488752027", "message": "OAuth uses HttpConfiguration.requestMatchers()"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/a670bb96456bb85f9669976a7a2ebea5a219ad1c", "message": "Add HttpConfigurator$RequestMatcherRegistry"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/9c6d626c3f73bb97b1ab8a37ab0ee162cd155d07", "message": "OAuthServerConfigurator to OAuthServerConfiguration"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/f4fda6eafd4eeabacb7335617c9872da59954cc6", "message": "Single HTTP for OAuth Sample"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/28aa5a36ef1d6dffe4e291a986ec5bba089ad722", "message": "Cleaned up use of HttpConfigurator in WebSecurityConfigurerAdapter"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/2fcb015adc58e440f31af65c1ee66f8667398095", "message": "sparklr now uses javaconfig"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/1c21235bb627a5e59c5d32287c3cea739e18854e", "message": "AbstractConfiguredBuilder refactored to ensure init and configured are called"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/976d2d8463d03d62664d22cc47a897cf778d323d", "message": "#59 Verify Order is unique on WebSecurityConfigurators"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/4e5d3eee76983f6e07c244c2af0da7192f96d4ee", "message": "Fix sorting of WebSecurityConfigurators"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/ec7f23bb5d203410c482daccf896409e4c4bcaa0", "message": "#52 Concreate to Concrete"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/c1210c7560ed56b62a2f102a11d76d4db096b005", "message": "#52 Fixed WebSecurityConfigurerAdapater spelling"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/da71faa39c29baaebabb1dd1b5a8fc5332e5e6a0", "message": "#65 additional tests for openid"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/23f5103963fe90b0df175df8458f75003aedcbbf", "message": "#65 openid support and sample"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/132ee219f68f63cef495d858b2417574884cbc71", "message": "Use Spring's StringUtils"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/688080b54f7e3282443dc7961e44d781e9086c4c", "message": "#68 x509 support and sample"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/878251509ba798e2bed22500bfab97ea21ea1836", "message": "#72 Consistent *Configurator names"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/67819b0d23e6a27356a6e9ccaeb0f8ff0082b0eb", "message": "#66 port-mappings support for requires-channel"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/9d3cf4dd2e38f734bbef05e09cf4c0e08406440a", "message": "#67 request-cache support"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/a1b1018f8121fe30bd505533318c94234a266c32", "message": "#69 - finish remember-me support\n\nWe use a single configurator and do not support DataSource to ensure\nwe do not get classloading issues by adding an optional dependency to the\nmethod signatures of the RememberMeConfigurator"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/e3605dc6888e6d3eb5436f66451b785de5f4a89f", "message": "remember-me two configurators"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/5d24352049a8e8979a10577dfb08ced47331ab5d", "message": "NamespaceLogoutTests -> NamespaceHttpLogoutTests for consistency"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/b588912a092640f1ccfa122afb1800ca3343370e", "message": "#64 BeanIds.AUTHENTICATION_MANAGER is now a composed bean"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/a6a832da55a638afc6b3b5f964e4a8808eaafd0b", "message": "#63 Support AuthenticationManager only in HttpConfiguration's AuthenticationRegistry"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/fd368380a14e8767dae7c0cb66fd09cb4db9831f", "message": "http/jee and preauth sample"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/f087beadc9e8a9e7b29b49ed2c1ddfb40b69590c", "message": "form-login test comments"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/2a6d37877a483fbd8fbd302e115fcedb98e03a44", "message": "Added more expressions for URL security"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/ee2af2b45a908d3ee5cf8be6c60b4d086209328b", "message": "http@request-matcher-ref / ant / regex"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/858ce980e13c8a79feb01671028a5a292de3026b", "message": "http@once-per-request=false"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/0ba3ef2785613017fc30340c7297fc5cafaa6239", "message": "Remove DataSource and BaseLdapPathContextSource from methods on AuthenticationRegistry so works when not on classpath"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/21b12404620a399ac906a7d3214f617e8c2b049b", "message": "Tighten generic restrictions for UserDetailsBuilder"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/77d5b2a10e21dbc372377707c2bbd0376e7453b9", "message": "fix typo"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/82ab72746e85c4d1f269404169dfa32556a5a44d", "message": "Change to use 1.5 compatability"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/1afebe86c06be59a250de6444b52ba156b369567", "message": "#36 Method Security uses AuthenticationRegistry"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/ce61eebf0d38495a962c03fdefb26d2399a6cbd5", "message": "#57 Introduce AuthenticationRegistry"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/f8b51baefc510576384ad2718f3eedd6c71947d0", "message": "switch AuthenticationManager authenticationManager to void registerAuthentication\n\nSwitch WebSecurityConfigurerAdpater to now use void method for\nAuthenticationManager since AuthenticationManager is optional (it can be\nAutowired)."}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/e1d4134cf09a4d15c831ddec45ba9d2ab2d230bc", "message": "#53 - Default WebSecurityConfigurerAdapter to autowire AuthenticationManager\n\nUsers can now allow the AuthenticationManager of a\nWebSecurityConfigurerAdapter to autowire the AuthenticationManager"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/6bc7ad27a44f3b0c8e79924da1609094b643380f", "message": "@Bean AuthenticationManager/UserDetailsService to WebSecurityConfigurerAdapter\n\nThis simplifies things so that the WebSecurityConfigurer does not need\nthe getAuthenticationManager() or getUserDetailsService() methods. The fact\nthat the Adapter exposes them as a @Bean is an implementation detail since\nit is technically a choice (i.e. not necessary to build springSecurityFilterChain)."}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/da04a6c71a9d5000267f73b129a676a6dc871eef", "message": "correct spelling of verifyConfigurators"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/17a2a3e202adae655dd860fa20213287f5e81205", "message": "http@create-session"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/d4ce028f699c71443cad41d2f357fe71730eaedd", "message": "Move initialization of default SecurityContextRepository to SessionManagementConfigurator"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/2e44c72fd15fae8f35dc0c560eb24e67dedb38a1", "message": "Remove ProxyFactoryBean from WebSecurityConfiguration"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/141e1354480d7de21bb4c0632d8a736749441d6b", "message": "Remove LazyInitTargetSource/ProxyFactoryBean from Socials SecurityConfig"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/f1fa159ecad97cb9a3855424c1aa1328dd352113", "message": "Remove SecurityConfigurator.setBuilder"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/c4205b526b3d37001602391ae9f5f642203a9f95", "message": "#52 Spelling corrections Adapater -> Adapter"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/5053903fbebf2df44f393696aa6fc7d22a6424dc", "message": "#49 WebSecurityConfigurer is now SecurityConfigurator"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/294861a5b14d62f91b459a7eda4201c597dae1ab", "message": "Rename WebSecurityConfiger methods in WebSecurityConfiguration"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/880529a22736e107076620ba6e82840f8bbca9f9", "message": "remove SecurityConfigurator#and since not needed on interface"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/20bb351b547c82b34c62293d9f2fd474dccaa2b9", "message": "#51 - Add support for custom remember me services"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/c4e2755d7601fd724753303f8fe3c6bf3af3cb9b", "message": "#50 Polishing"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/36f51bc064cc7052521a40f7f7c3a7c8024a2d41", "message": "#50 make GlobalMethodSecurityConfiguration loading of AuthenticationManager lazy"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/f52d3ef41f121ad0832dfd1bca8a23a6e7b5b34d", "message": "Demonstrate Spring Data and Spring Security Java Configuration for issue 50"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/addccf1863a1cd272a4750e694f8fdb38ba3da24", "message": "Add WebSecurityConfigurer"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/ff1506cbd334cad2e7355401c99608a618d342dd", "message": "polish imports"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/cc3cd9867551c8f7e252ce4ac40727e426cca3a1", "message": "add antMatcher and regexMatcher to HttpConfiguration"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/d2ca9f5036b09ce2d668438c2f3cba6f9b5185f0", "message": "add missing @Autowire and change to SampleMultiHttpSecurityConfig"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/605c6d3a44ea3ddcf11670a1599707b459bd25a3", "message": "Add multi http example to README"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/29bfd8efe0574f4170bdf3be082fbc5819d95fb5", "message": "polish jdbc sample"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/6f2329c341c342c23b11551cfb12327e80960328", "message": "Update to authenticationManager from createAuthenticationManager in README"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/2e2abbc1637eafd96755a83eab912683f93e672e", "message": "AuthenticationRegistry to AuthenticationBuilder"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/8dd9d241ab6d58500bf2b08491043fdcff9879be", "message": "initDefaults to initSharedObjects"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/b27a1f85c15f7b830e292729e08bbd20de781b21", "message": "AuthenticationManager authenticationManager(AuthenticationRegistry)"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/14564781", "body": "Thank you for your submission. I'm not sure we want to introduce the encoding.PasswordEncoder which is essentially deprecated way of password encoding.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/14564781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/14567960", "body": "It probably isn't that obvious that it was deprecated, so I went ahead and created [SEC-2147](https://jira.springsource.org/browse/SEC-2147) to deprecate the old PasswordEncoder. If you visit the JIRA it provides a link to the Javadoc that mentions you should use PasswordEncoder from the crypto module. I think that we will be removing the authentication.encoding.PasswordEncoder in the next major release (i.e. 4.0) so I would prefer to prevent users from accidentally using the deprecated APIs. If you still want to use it, you can build the DaoAuthenticationProvider and then invoke the setter method afterwards. It is not as nice as a builder, but again we do not want to encourage users to use the old way of doing things.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/14567960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/14568652", "body": "No problem. Thank you for taking the time to try it out and to report issues. Please do not hesitate to give further feedback (it is very much encouraged!!)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/14568652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/14795170", "body": "This has been completed as part of other refactoring\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/14795170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/14807975", "body": "Thanks for submitting the request. I will add a few tests to ensure this stays fixed.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/14807975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/14808278", "body": "This is now resolved. Authentication is registered using the following method now:\n\n```\nprotected void registerAuthentication(AuthenticationRegistry registry) {\n    registry\n        .inMemoryAuthentication()\n            .withUser(\"user\").password(\"password\").roles(\"USER\").and()\n            .withUser(\"admin\").password(\"password\").roles(\"USER\", \"ADMIN\").and();\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/14808278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/14970442", "body": "See AbstractSecurityConfigurator\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/14970442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/14981602", "body": "This was resolved as part of another ticket\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/14981602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/15137276", "body": "Still need to go back through and clean this up, but we have a working example now\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/15137276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/15137341", "body": "Fixed as part of breaking up the configurators\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/15137341/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/15137541", "body": "Now supported through \n\n```\nbuilder\n    .apply(new UrlAuthorizationRegistry())\n        .antMatchers(\"/users**\",\"/sessions/**\").hasRole(\"USER\")\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/15137541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/15323490", "body": "We should also consider since some sort of Authentication is required perhaps we should be returning something rather than having void return types?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/15323490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/15347339", "body": "This is no longer desirable since there is a clear separation between the two. WebSecurityConfiguration is in charge of assembling the FilterChainProxy which is composed of a lot of DefaultSecurityFilterChain's built by HttpConfiguration (use to be SimpleWebSecurityConfig).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/15347339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/15347349", "body": "This is no longer desirable since there is a clear separation between the two. WebSecurityConfiguration is in charge of assembling the FilterChainProxy which is composed of a lot of DefaultSecurityFilterChain's built by HttpConfiguration (use to be SimpleWebSecurityConfig).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/15347349/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/15397504", "body": "Changed to AuthenticationBuilder since it can be used to build AuthenticationManager, UserDetailsService, AuthenticationProvider, etc\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/15397504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16187898", "body": "I'm guessing you have a circular dependency which can be handled by XML configuration, but not by the Java Configuration. Can you post your entire configuration? I have added a test that demonstrates Spring Data usage for an AuthenticationProvider in commit f52d3ef\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16187898/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16197371", "body": "Thanks for the response. I can't be certain without your complete configuration, but I believe I found the issue. I have pushed out a fix as part of 36f51bc. Please ensure you update to the latest snapshot to try the changes I made and let me know if this resolves the issue you were having.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16197371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16202256", "body": "I think this is a different issue (and not with the Spring Security Java Config). Java Configuration defaults to use /login instead of /j_spring_security_check. From the README\n\n> > Notice that Spring Security uses different defaults that will make your HTTP requests appear more RESTful. For example, the URL /login POST is used to authenticate users. The URL /login GET is used to request the user for credentials (i.e. present a login form).\n\nThese defaults also follow best practices of not having [information leakage](https://www.owasp.org/index.php/Information_Leakage). Specifically the old defaults j_spring_security_check it was quite obvious that Spring Security was used. If an attacker observed this and Spring Security had a bug in it, the attacker would have an easier time identifying how to attack your application. \n\nIf you want to use the old conventions, you can do something like is done in the [NamespaceHttpFormLoginTests](https://github.com/SpringSource/spring-security-javaconfig/blob/addccf1863a1cd272a4750e694f8fdb38ba3da24/src/test/groovy/org/springframework/security/config/annotation/web/NamespaceHttpFormLoginTests.groovy#L148). Of course you would use the values that align with the old defaults that looks something like:\n\n```\nhttp\n    .formLogin()\n        .usernameParameter(\"j_username\")\n        .passwordParameter(\"j_password\")\n        .loginPage(\"/authentication/login\")\n        .failureUrl(\"/authentication/login?failed\")\n        .loginProcessingUrl(\"/j_spring_security_check\")\n        .defaultSuccessUrl(\"/default\")\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16202256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16258644", "body": "You are correct there was no way to easily do custom remember me services. Right now I am trying to prove everything out and make it clean. I will go back and ensure all of the XML namespace is supported afterwards. \n\nSince you have specifically requested support for custom RememberMeServices, I went ahead and added support for ``remember-me@services-ref` to get you going. Please let me know if this meets your needs or not.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16258644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16300937", "body": "> Thanks again for an instantly working fix.\n\nThanks for the feedback....keep it coming :)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16300937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16390296", "body": "Thanks for pointing this out. This should now be resolved in master. If you get a chance, please verify and close.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16390296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16466872", "body": "no longer valid...Autowires by default and allows overriding method for customization\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16466872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16466972", "body": "No defaults are on HttpConfiguration\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16466972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16467114", "body": "I'm going to go ahead and close this. If you find additional issues, please open another ticket\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16467114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16541118", "body": "After speaking to Dave this was with a particular use case. The problem seems to be that if you are trying to `@Autowire` an AuthenticationManager into a `WebSecurityConfigurerAdapter` it causes this cryptic error. Here are the details of what appears to be happening:\n- The WebSecurityConfigurerAdapter instance is created and tries to `@Autowired` an instance of AuthenticationManager\n- The container tries to resolve AuthenticationManager which is is built by WebSecurityConfiguration trying to iterate over all WebSecurityConfigurerAdapter instances. However, the WebSecurityConfigurerAdapter cannot be injected into WebSecurityConfiguration since it has not been initialized with an AuthenticationManager\n\nI'm not certain we can resolve this issue since the intent of WebSecurityConfigurerAdapter is to provide the AuthenticationManager that is exposed as a Bean. I will give this some more thought (if you have suggestions I welcome them). \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16541118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16603686", "body": "@dsyer You should be able to remove the `@Autowired AuthenticationManager` now that I have pushed out the changes for #53 This prevents the issues with circular dependencies by ensuring that the `BeanIds.AUTHENTICATION_MANAGER` is not loaded (it looks up by bean ids first and then loads not `BeanIds.AUTHENTICATION_MANAGER`). When I tried the sample you provided it now loads so hopefully this gets  you where you need to be.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16603686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16662573", "body": "Closing per discussion w/ @dsyer \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16662573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16812546", "body": "Now if extending can use AuthenticationRegistry (autowire is still supported)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16812546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/17037810", "body": "Provided for requires-channel. See #73 too\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/17037810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/17337251", "body": "Hmm...it builds fine in STS 3.3.0.M1 (and previously it worked in 3.2.0)\n- Which groovy compiler are you using? You should be using 1.8.6 (it is built with 1.8.x due to the fact that Spring Security is still on 1.8.x).\n- Did you try cleaning all the _javaconfig_ projects?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/17337251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/17340503", "body": "Speaking with Dave offline we figured out that updating to the latest Groovy Eclipse plugin resolved this\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/17340503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/17340804", "body": "Thanks for pointing that out. I also updated the Concreate -> Concrete spelling error in the tests\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/17340804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18623314", "body": "Thanks for the pull request. This is now merged.\n\nAs an FYI we typically do not put markup into our commit messages (markdown being rendered in commits is a GitHub thing), so if you provide additional commits please try to avoid it.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18623314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18623729", "body": "No problem on the markdown. The important thing is that you reported the issue and it is certainly a bonus that you fixed it too. Thanks again!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18623729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18628367", "body": "Thank you for your bug report. This was intended to go along with #48 but since you seem to have an immediate need for this, I have went ahead and fixed this specific issue.\n\nIf you are using Maven, please ensure to force update  the dependencies. You can then try out the fix. While I did add tests, a response of if this is working for you or not would be much appreciated.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18628367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18681390", "body": "Thanks for logging this. I want to provide this note for myself when I look into this:\n\n the thing is though that something like this also overrides:\n\n``` java\nhttp\n    .httpBasic()\n        .authenticationEntryPoint(entryPoint())\n        .and()\n    .httpBasic()\n        .authenticationEntryPoint(otherEntryPoint())\n```\n\nRob Winch: I'm not sure if we will be able to prevent such situations with all the options available\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18681390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18705085", "body": "Perhaps RequestCache needs to be removed from ExceptionHandlingConfigurator and moved to RequestCacheConfigurator?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18705085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18843039", "body": "The only problem that is immediately apparent is that the README sample's was still using the method signature configure(SpringSecurityFilterChainBuilder) instead of configure(WebSecurityConfiguration). I have fixed this.\n\nI'm not getting the UserDetails bean not found exception. Are you using the exact sample or a modified version that is looking for a UserDetailsService? The sample does not register a UserDetailsService since an AuthenticationManager is exposed as a bean. Previously, the sample did use the registerAuthentication method but it changed to illustrate that AuthenticationManager will be autowired by default (so you do not need to override registerAuthentication).\n\nWhat do you mean by \"prevents one of the filters from being created\"? It appears to be working fine for me.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18843039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18846869", "body": "The mappings for many of the XML namespace configurations are demonstrated in tests which was mentioned in the README. I have since made this more obvious by making the [XML Namespace a heading](https://github.com/SpringSource/spring-security-javaconfig/#mapping-the-xml-namespace-to-javaconfig). Unfortunately while there was support for it there was no sample (as you pointed out) for `password-encoder@ref`. I have since added [PasswordEncoderTests.groovy](https://github.com/SpringSource/spring-security-javaconfig/blob/master/src/test/groovy/org/springframework/security/config/annotation/authentication/NamespacePasswordEncoderTests.groovy) that demonstrates how to use it. \n\nPlease verify this resolves your issue.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18846869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18856753", "body": "We sorted this out offline. The issue appears when using older Spring Versions. I have added an FAQ entry to the README\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18856753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18937296", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18937296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18937393", "body": "This isn't consistent with the method name. Add should add and not set\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18937393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18937827", "body": "We will require the apply  method to be invoked to avoid issues w/ multiple <http>\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18937827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18937930", "body": "init is necessary to ensure all configurators have had init called and then all configurators have configure called\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18937930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18938093", "body": "After thinking about this, I'm not sure that this really makes sense since there is a reasonable default for failed authentication atttempts on the basic authentication. Consider when using both Basic and Form authentication the AuthenticationEntryPoint would redirect to a login form. When interacting with basic authentication it would be quite surprising to get redirect to a login form. For this reason, I think we leave this as is\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18938093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19002727", "body": "Since you are not using the registerAuthentication, the UserDetailsService is not defaulted for rememberMe(). Try using the following instead:\n\n``` java\n@Configuration\n@EnableWebSecurity\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Override\n    protected void configure(HttpConfiguration http) throws Exception {\n        http\n                .authorizeUrls()\n                .antMatchers...\n                .and()\n                .formLogin()...\n                .and()\n                .logout()...\n                .and()\n                .rememberMe();\n    }\n\n    @Override\n    public void configure(WebSecurityBuilder builder) throws Exception {\n        builder\n                .ignoring()\n                .antMatchers...;\n    }\n\n\n    @Override\n    protected void registerAuthentication(AuthenticationRegistry registry) throws Exception {\n        BCryptPasswordEncoder encoder = passwordEncoder();\n        registry\n                .inMemoryAuthentication()\n                    .passwordEncoder(encoder)\n                    .withUser(\"user\").password(encoder.encode(\"password\")).roles(\"USER\")\n    }\n\n    @Bean\n    public BCryptPasswordEncoder passwordEncoder() {\n        return new BCryptPasswordEncoder();\n    }\n}\n```\n\nAlternatively provide a UserDetailsService to the rememberMe() method explicitly using [rememberMe().userDetailsService](http://static.springsource.org/autorepo/docs/spring-security-javaconfig/1.0.0.CI-SNAPSHOT/api-reference/org/springframework/security/config/annotation/web/RememberMeConfigurator.html#userDetailsService(org.springframework.security.core.userdetails.UserDetailsService\\)). I'm still working on complete test coverage and error messages, but I created #114 to ensure that this gets a better error message prior to being released.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19002727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19005788", "body": "Thanks for pointing this out. I suppose that is what I get for using Groovy for the tests (it automatically handled the fact that AuthenticationRegistry is an AuthenticationBuilder and invoked the method). I will fix this issue.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19005788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19063139", "body": "I pushed out a fix for this. The javaconfig for the test was also moved to be .java to prevent such issues again. Please try with the updates and let me know if this resolves your issue.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19063139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19071558", "body": "Thanks for following up :)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19071558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19072135", "body": "@marceloverdijk Haha...he will be glad to see the test stayed in Groovy. I only changed the config to Java since that was the only piece of code hiding this issue.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19072135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19275004", "body": "This should be taken care of with #21\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19275004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19275540", "body": "Leaving as is for reasons stated above\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19275540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19275594", "body": "Done as part of #21\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19275594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19425553", "body": "We may not do this since if there are additional `@Bean` on the subclass it breaks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19425553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19478156", "body": "Changed mind as adds too much complexity for little value\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19478156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19558505", "body": "I think I will need a bit more details on how you are getting stuck. What do you mean by it failed? Does the configuration fail to load? If so, what exception do you get? What does your Java Configuration look like? The gist you provided does not provide any details about the content of com.rscharitas.training.spring.web.jpa.hibernate.security. In short, I need something more concrete in order to help you.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19558505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19617555", "body": "Does the user have permissions to create the schema? Does the schema already exist? If so this can cause failures.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19617555/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19660005", "body": "Did you figure out the issue? I'm not sure what you were saying yes to. Yes the user had permissions or Yes the schema was already created? If you did solve this issue, please close this issue out. \n\nThe only documentation that currently exists is on the github main page. There will be more documentation to come, but as the code has been under rather active development with non-passive changes (it hasn't yet been released) it doesn't make sense to commit a lot of time to detailed tutorials yet. A milestone release and further documentation should be coming soon.\n\nFor now, I would look through the tests that demonstrate how to convert from XML to Java Config (see the README for details on this). If this does not help, please create a new issue with a specific XML configuration with a specific error and complete stacktrace (please use [markdown](http://github.github.com/github-flavored-markdown/) to format the code and stacktrace so it is easier to read).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19660005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19710718", "body": "All tangles have been removed and Sonar Build was created https://sonar.springsource.org/dashboard/index/org.springframework.security:spring-security-javaconfig-build\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19710718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19710759", "body": "Instead we moved this to a different package and documented as internal use\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19710759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19721272", "body": "> The email attribute type in the Yahoo config on line 49 should be \"http://axschema.org/contact/email\" instead of \"http://schema.openid.net/contact/email\".\n\nThanks this has now been addressed\n\n> Also, I would make the attributeExchange regular expressions more precise.\n\nWhat value are you thinking this provides? The expressions do not limit which OpenID providers can authenticate (nor is that their intent). They expressions specify which attributes to request for each OP. If https://me.yahoo.com.random-hacker-domain.com/ provides the same attributes as yahoo.com then your application should not care. If it wants to prevent https://me.yahoo.com.random-hacker-domain.com/ from authenticating, then it needs to use authorization checks (which are distinct) to ensure the proper domains are authenticating only.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19721272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19760161", "body": "Locking down the OP's is not really part of standard OpenID as it is not very open (the point of OpenID is to allow the RP to connect to any OP). If you want authorization, you can do this in a number of ways (but these are unrelated to Java Config). One such way is to add a custom Filter that looks at the OpenIDAuthentication's identityUrl and ensures it matches some pattern. This assumes that you have locked down where a person can place their OpenID's and control which OP's are listed in the discovery information.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19760161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19766353", "body": "> If it's impractical to make it part of the configuration, could the documentation at least give an example of the best-practice solution for limiting providers to a fixed list?\n\nI guess I wasn't as clear as I could have been:\n- First this is not a bug, nor it is a security vulnerability. The feature works as expected / documented and operates within the constraints of OpenID specification\n- Second this is unrelated to Spring Security JavaConfig (this project) which is only about configuring Spring Security's existing functionality\n- If you would like enhancements (i.e. doc updates to Spring Security or authorization by OP)  please submit them to Spring Security's JIRA (this project is about configuring Spring Security not about new features in Spring Security). You can submit an enhancement request to http://jira.springsource.org/browse/SEC\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19766353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19834025", "body": "Please open another ticket if you can provide details around the issue you are having.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19834025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19908867", "body": "I think the reality is that as soon as we introduce the add(AuthenticationProvider) we are already a bit locked into ProviderManager implementation for the AuthenticationManagerBuilder so I went ahead and added a method for setting the AuthenticationEventPublisher. When using the WebSecurityConfigurerAdapter's registerAuthentication method it defaults to DefaultAuthenticationEventPublisher\n\n@ralscha can you please verify this resolves your issue and then close it out or provide additional details?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19908867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19974810", "body": "@ralscha Thanks for catching this :) I have updated the code to only set the publisher on the parent which is consistent with the XML namespace. You will see the test is more precise to ensure that only a single event is fired too. Can you please try out the changes to ensure that everything works properly? If they work well, please close this ticket out. If not, please elaborate on what is not working. Thanks again!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19974810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19990532", "body": "@gregturn Just as an FYI I resolved this issue and it simplifies the LDAP configuration significantly. Take a look at the associated commit for changes. In summary:\n- I updated the [ldif](https://github.com/SpringSource/spring-security-javaconfig/blob/72f953ab86aac3a8355edf5bc33ffe7d4b4d7651/samples/ldap/src/main/resources/users.ldif) to conform to the defaults (i.e. see in the [diff](https://github.com/SpringSource/spring-security-javaconfig/commit/72f953ab86aac3a8355edf5bc33ffe7d4b4d7651#L1L32) how member is now uniqueMember). \n- Also the [SecurityConfig](https://github.com/SpringSource/spring-security-javaconfig/blob/72f953ab86aac3a8355edf5bc33ffe7d4b4d7651/samples/ldap/src/main/java/org/springframework/security/samples/config/SecurityConfig.java) is simpler\n  - It longer needs to setup an ApacheDS Server\n  - It no longer needs to setup anr LDAP context (it is defaulted to be in memory implementation)\n  - It no longer specifies the groupSearchFilter (since the ldif uses the default of uniqueMember)\n  - See the [diff](https://github.com/SpringSource/spring-security-javaconfig/commit/72f953ab86aac3a8355edf5bc33ffe7d4b4d7651#L0L1) for the changes\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19990532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19993125", "body": "Not a problem :) I just knew that you were looking into the Java Config w/ LDAP so I thought I would point it out.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19993125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20094794", "body": "Removed this is being addressed by Core as the semantics of this solution are off. See https://jira.springsource.org/browse/SPR-10660\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20094794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20094811", "body": "Not doing this for previously mentioned reason\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20094811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20094871", "body": "I think this is a won't fix and refer to the (now added) javadoc on what is overridden\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20094871/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20094915", "body": "Leaving this because it is quite useful and ensures that the object is built\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20094915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20094930", "body": "No longer able to reproduce\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20094930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20198144", "body": "I'm not convinced one way or another on this so feel free to discuss. I have the stacktrace in there so that you can see it when you are trying to figure out what went wrong. In some instances, that stack trace may be relevant to figuring out what went wrong (but only the engineer will know). For example, if later on the AuthenticationManager was null because Spring Security was unable to obtain an AuthenticationManager another way and your code required the AuthenticationManager you might want to see that stack trace.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20198144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20208720", "body": "This seems that part of the issue is that I am using getClass() for creating the logger. While this is quite common throughout Spring, I wonder if changing this to WebSecurityConfigurerAdapter.class would be sufficient. This would make disabling logging for that logger much easier. What are your thoughts? Does this seem like a reasonable compromise?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20208720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20282101", "body": "@dsyer \n\nThe test I added in the first commit demonstrates that WebSecurityExpressionHandler is non-null without any changes to the code. Perhaps you were on an older version or have some difference in the configuration that is causing it? If so, can you provide your configuration?\n\nI did notice that WebInvocationPrivilegeEvaluator was not getting properly initialized due to an ordering issue. This seems fairly related and may have been what you were meaning? I went ahead and fixed this and added a test in the second commit linked with this issue.\n\nCan you please let me know if the second commit fixed your issue or clarify how to reproduce the issue? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20282101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20287652", "body": "Speaking with Dave offline the issue is now resolved\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20287652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20287823", "body": "I made the logger change so closing. Thanks for bringing up this usability issue. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20287823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20422622", "body": "Thanks for the pull request and suggestion. I think this makes more sense to be in AbstractSecurityWebApplicationInitializer which is consistent with AbstractDispatcherServletInitializer. By the way did you consider just using AbstractSecurityWebApplicationInitializer? It should be much easier and safer (it will map Spring Security to every request rather than only requests processed by the DispatcherServlet). Regardless, I think your suggestion makes sense to implement but in AbstractSecurityWebApplicationInitializer.\n\nI went ahead and logged [SEC-2192](https://jira.springsource.org/browse/SEC-2192) to address this. If you would like, I would encourage you to submit a pull request (with at least one test) to https://github.com/SpringSource/spring-security/ Please be sure to read the[ Contributor Guidelines](https://github.com/SpringSource/spring-security/blob/master/CONTRIBUTING.md).\n\nBTW...this isn't a big deal (it is more important that you brought this issue up), but in the future please submit pull requests and issues to Spring Security. As mentioned in the [README](https://github.com/SpringSource/spring-security-javaconfig#contributing) this project will not be updated. Instead, users will be encouraged to use the spring-security-config-3.2 which will be maintained going forward. Thanks again for reporting this!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20422622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/26284072", "body": "https://jira.springsource.org/browse/SEC-2359\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/26284072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/304985743", "body": "@dmarcaida  Please see the README about the project moving https://github.com/spring-projects/spring-security-javaconfig/blob/master/README.md", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/304985743/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/comments/3354267", "body": "@dsyer I thought you would like me to point out I added support for using anyRequest() so antMatchers(\"/**\") is not necessary. This was added based on some of the comments you provided.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/comments/3354267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/comments/3372736", "body": "@dsyer There is no need to look up beans by type and exclude the bean name after this commit.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/comments/3372736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "aspan": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/commits/a4e44519fd6abf0629ac88bf354d880ba2556078", "message": "Usage of raw types.\n\nUsage of raw types in the DaoAuthenticationConfigurator and AuthenticationManagerBuilder\nmakes build() require a cast to AuthenticationManager."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/14560185", "body": "I have signed and agree to the terms of the SpringSource Individual Contributor License Agreement.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/14560185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/14561394", "body": "Resubmitting from branch\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/14561394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/14566362", "body": "Ok. I did't understand that it was deprecated. Would it be acceptable to change the DaoAuthenticationProviderBuilder to accept Object like the DaoAuthenticationProvider does in order to support the old password encoders? Or do you plan to remove the old encoders in a future release?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/14566362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/14568501", "body": "Thanks for your response. I'll go ahead and close this pull request then.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/14568501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18623490", "body": "Thanks for the quick response. I'll avoid markdown in the future.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18623490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "tswcode": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16190703", "body": "Ok I'll post some more details concerning this security configuration, also because some of the following methods and classes have roots in some websites (or at least similar to them).\n\nMy business application has the demand to have the current User model object contained in a custom UserDetails class, which has no further autowire annotations. This class, called PasswordUserDetails (which also maps the database roles to security roles), is needed by the custom AuthenticationProvider class as followed:\n\n```\n@Service\npublic class UsernamePasswordAuthenticationProvider extends AbstractUserDetailsAuthenticationProvider {\n\n    @Autowired\n    private UserDetailsService userDetailsService;\n\n    @Override\n    protected void additionalAuthenticationChecks(UserDetails userDetails,\n            UsernamePasswordAuthenticationToken authentication)\n            throws AuthenticationException { }\n\n    @Override\n    protected UserDetails retrieveUser(String username,\n            UsernamePasswordAuthenticationToken authentication)\n            throws AuthenticationException {\n        PasswordUserDetails dbUser = (PasswordUserDetails) userDetailsService.loadUserByUsername(username);\n        if(dbUser == null) {\n            throw new UsernameNotFoundException(\"User \" + username + \" not found!\");\n        }\n        return dbUser;\n    }\n}\n```\n\nNext class beeing need for this demand, is the UserDetailsService implementation:\n\n```\n@Service\n@Transactional(readOnly = true)\npublic class PasswordUserDetailsService implements UserDetailsService {\n\n    @Inject\n    private UserRepository userRepository;\n\n    @Autowired\n    private LogEventService logEventService;\n\n    @Autowired\n    private MessageSource messageSource;\n\n    @Autowired\n    private HttpServletRequest request;\n\n    @Autowired\n    private LocaleResolver localeResolver;\n\n    @Override\n    public UserDetails loadUserByUsername(String username)\n            throws UsernameNotFoundException {\n        User user = null;\n        PasswordUserDetails userDetails = null;\n\n        user = userRepository.findByName(username);\n        if(user != null) {\n            userDetails = new PasswordUserDetails(\n                    user,\n                    logEventService.isLatestEvent(user, \n                            LogEventType.UNBLOCKED) > 0,\n                    user.getDefaultAuthentication().isEnabled());\n        } else {\n            throw new UsernameNotFoundException(\n                    getMessage(\"AbstractUserDetailsAuthenticationProvider.badCredentials\",\n                               \"Bad credentials\"));\n        }\n        return userDetails;\n    }\n\n    public String getMessage(String code, String defaultMessage) {\n        Locale requestLocale = localeResolver.resolveLocale(request);\n        return messageSource.getMessage(code, null, defaultMessage, requestLocale);\n    }\n\n}\n```\n\nConcerning my SecurityConfig class, it is similar to your class mentioned in your commit, \nbut also includes the following class level annotation:\n\n```\n@EnableGlobalMethodSecurity(jsr250Enabled = true, prePostEnabled = true)\n```\n\nWhich is needed to get the current User model object from the PasswordUserDetails of the security context as follows:\n\n```\npublic static PasswordUserDetails getCurrentPasswordUserDetails() {\n    SecurityContext securityContext = SecurityContextHolder.getContext();\n    org.springframework.security.core.Authentication securityAuthentication = securityContext.getAuthentication();\n    Object securityPrinzipal = securityAuthentication.getPrincipal();\n    PasswordUserDetails passwdUserDetails = null;\n    if(securityPrinzipal instanceof PasswordUserDetails) {\n        passwdUserDetails = (PasswordUserDetails) securityPrinzipal;\n    }\n\n    return passwdUserDetails;\n}\n```\n\nIf I disable the upper annotation, the exceptions on startup **do not** happen.\nThat means, this resolves a closer localization of the cause:\n- either my kind of circular dependency\n- or the enabling of global method security\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16190703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16201069", "body": "Ok, last action for me today. I enforced that maven updated to the latest snapshot and ran my webapp.\nSo far neither errors nor warnings. \n\nBut when I try to log in, an exception is raised due to a not registered mapping:\n\n```\n2013-04-10 22:32:56,120 WARN  [http-nio-8080-exec-4] PageNotFound  - No mapping found for HTTP request with URI [/pitsas/j_spring_security_check] in DispatcherServlet with name 'dispatcher'\n```\n\nMy first thought about this was to just cut out this \"issue\" part of code into a \"tiny\" example project,\nwhich I can (and am allowed to - concerning my company) push to my github repository.\nIncluding an example embedded database, which could get the \"all config in one big test case\" project.\n\nI will do this as soon as possible, I hope to have some time at the coming weekend, if not before.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16201069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16220722", "body": "Indeed it is written in the README file. I like the approach to make spring security more secure. :+1:\nI am happy to close this issue so fast. It is really solved: my business application works (nearly) \nthe same as having used xml configuration. (I don't really like xml configs)\n\nConcerning the \"nearly\", I'm preparing the next issue concerning a custom remember-me service.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16220722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16278111", "body": "Thanks again for an instantly working fix. :+1: \nI love this totally java configured webapp, no more xml files left. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/16278111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dsyer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/17330049", "body": "I think we need to do a full text search as well:\n\n```\n        throw new IllegalStateException(\"At least one non-null instance of WebSecurityConfigurerAdapater must be exposed as a @Bean when using @EnableWebSecurity\");\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/17330049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/17332533", "body": "Ditto ApplicationEventPublisher (e.g. FilterSecurityInterceptor needs one but never gets it because it is not a bean definition).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/17332533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/17338083", "body": "I'm using STS 3.2, and whatever groovy compiler it comes with (1.8.6*).  I didn't clean anything, but then all I did was git clone and gradle eclipse, so why would there be any turds?  What do you mean by \"clean\" anyway?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/17338083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19895135", "body": "I foresee a problem that the AuthenticationManager is not necessarily a ProviderManager. My approach has been to @Autowired a ProviderManager and then inject the publisher there. Maybe that is better anyway?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19895135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19895162", "body": "(Oops didn't mean to close.)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19895162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "stigrv": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18663728", "body": "Your fix removed the error I got earlier.\n\nWhen I got everything running, I couldn't figure out how to configure the CAS filter so that it catches the secured URL. I will need to use the XML configuration for now until a CAS sample is available.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18663728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "marceloverdijk": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18974072", "body": "Hi Rob,\n\nI tried this below configuration:\n\n```\n@Configuration\n@EnableWebSecurity\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Override\n    protected void configure(HttpConfiguration http) throws Exception {\n        http\n                .authorizeUrls()\n                .antMatchers...\n                .and()\n                .formLogin()...\n                .and()\n                .logout()...\n                .and()\n                .rememberMe();\n    }\n\n    @Override\n    public void configure(WebSecurityBuilder builder) throws Exception {\n        builder\n                .ignoring()\n                .antMatchers...;\n    }\n\n    @Bean\n    public AuthenticationManager authenticationManager() throws Exception {\n        BCryptPasswordEncoder encoder = passwordEncoder();\n        return new AuthenticationManagerBuilder()\n                .inMemoryAuthentication()\n                .withUser(\"user\").password(encoder.encode(\"password\")).roles(\"USER\")\n                .and()\n                .passwordEncoder(encoder)\n                .and()\n                .build();\n    }\n\n    @Bean\n    public BCryptPasswordEncoder passwordEncoder() {\n        return new BCryptPasswordEncoder();\n    }\n}\n```\n\nbut it gives me:\n\n[INFO] org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class org.springframework.security.config.annotation.web.WebSecurityConfiguration: Instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanDefinitionStoreException: Factory method [public org.springframework.security.web.FilterChainProxy org.springframework.security.config.annotation.web.WebSecurityConfiguration.springSecurityFilterChain() throws java.lang.Exception] threw exception; nested exception is java.lang.IllegalArgumentException: UserDetailsService cannot be null\n\nNote: I'm using Spring 3.2.3 and Spring Security 3.1.4 so I should not worry about SPR-10546.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/18974072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19004468", "body": "OK, I tried with the registerAuthentication as I was having that one anyway.\n\nBut neither [AuthenticationRegistry](https://github.com/SpringSource/spring-security-javaconfig/blob/master/src/main/java/org/springframework/security/config/annotation/authentication/AuthenticationRegistry.java) or [UserDetailsManagerRegistry](https://github.com/SpringSource/spring-security-javaconfig/blob/master/src/main/java/org/springframework/security/config/annotation/provisioning/UserDetailsManagerRegistry.java) has a `passwordEncoder` method to set the encoder (in current master branch).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19004468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19006656", "body": "Great to hear, I will try again as soon as it is fixed.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19006656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19070697", "body": "Thanks!, just verified the fix and I can add the password encoder like:\n\n```\n@Override\nprotected void registerAuthentication(AuthenticationRegistry registry) throws Exception {\n    registry\n            .inMemoryAuthentication()\n            .passwordEncoder(passwordEncoder())\n            .withUser(\"username\").password(\"password\").roles(\"USER\");\n}\n\n\n@Bean\npublic PasswordEncoder passwordEncoder() {\n    return new BCryptPasswordEncoder();\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19070697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19072007", "body": "ps: don't let @glaforge hear you removed that Groovy test :-)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19072007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "geine": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19524298", "body": "hello, i'm a newbie with Spring Security. i've an example written well in xml, and i'm going to ignore it, translate the xml syntax into java, but i got stuck with SecurityConfiguration. i'm trying to use your sample with jdbc but it failed, i still get stuck. \ni've three table, one is user, role, and user_role which content with user_id and role_id, then implement user entity to userdetails which from spring, then using ShaPasswordEncoder to encode password, and salt. \ni've link for my xml code, here it is https://gist.github.com/geine/5794359.i hope you'll give me some light about it.\nthanks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19524298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19584205", "body": "hello Rob,\ni've tried to translate that xml syntax into java class,\neverytime i run the application, it is said,\n Error creating bean with name 'springSecurityFilterChain' defined in class\npath resource\n[org/springframework/security/config/annotation/web/WebSecurityConfiguration.class]:\nInstantiation of bean failed; nested exception is\norg.springframework.beans.factory.BeanDefinitionStoreException: Factory\nmethod [public org.springframework.security.web.FilterChainProxy\norg.springframework.security.config.annotation.web.WebSecurityConfiguration.springSecurityFilterChain()\nthrows java.lang.Exception] threw exception; nested exception is\norg.springframework.dao.DataAccessResourceFailureException: Failed to\nexecute database script; nested exception is\norg.springframework.jdbc.datasource.init.ScriptStatementFailedException:\nFailed to execute SQL script statement at line 1 of resource class path\nresource [org/springframework/security/core/userdetails/jdbc/users.ddl]:\ncreate table users(username varchar_ignorecase(50) not null primary\nkey,password varchar_ignorecase(50) not null,enabled boolean not null).\n\nhere is the link for SecurityConfiguration i made.\nhttps://gist.github.com/geine/570be44d6bdac5e35f42.\nand the link for mainConfiguration is here,\nhttps://gist.github.com/geine/3044f9ad2f95051421c8.\ni create user implements from userdetails, that's why i used salt,\npasswordencoder in securityConfiguration. there is not much talking about\nsecurityConfiguration, please help me, where i do wrong, please correct it.\nthanks\n\n2013/6/17 Rob Winch notifications@github.com\n\n> I think I will need a bit more details on how you are getting stuck. What\n> do you mean by it failed? Does the configuration fail to load? If so, what\n> exception do you get? What does your Java Configuration look like? The gist\n> you provided does not provide any details about the content of\n> com.rscharitas.training.spring.web.jpa.hibernate.security. In short, I need\n> something more concrete in order to help you.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/SpringSource/spring-security-javaconfig/issues/123#issuecomment-19558505\n> .\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19584205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19654777", "body": "yes, i got all confused with springsecurity configuration, if you have any\ntutorial, can you send me one? because there'll be many things i should to\nmodified from your source and i have a little idea, eventually, it is very\nlittle talk in web about springsecurity config, many of programmer just\nusing xml and i hate to have my code mingle with xml when they all clear of\nxml before. thanks\n\n2013/6/18 Rob Winch notifications@github.com\n\n> Does the user have permissions to create the schema? Does the schema\n> already exist? If so this can cause failures.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/SpringSource/spring-security-javaconfig/issues/123#issuecomment-19617555\n> .\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19654777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19791781", "body": "actually, i still can't figure it out. at the end i'm using xml and it run\nwell.\n\n2013/6/19 Rob Winch notifications@github.com\n\n> Did you figure out the issue? I'm not sure what you were saying yes to.\n> Yes the user had permissions or Yes the schema was already created? If you\n> did solve this issue, please close this issue out.\n> \n> The only documentation that currently exists is on the github main page.\n> There will be more documentation to come, but as the code has been under\n> rather active development with non-passive changes (it hasn't yet been\n> released) it doesn't make sense to commit a lot of time to detailed\n> tutorials yet. A milestone release and further documentation should be\n> coming soon.\n> \n> For now, I would look through the tests that demonstrate how to convert\n> from XML to Java Config (see the README for details on this). If this does\n> not help, please create a new issue with a specific XML configuration with\n> a specific error and complete stacktrace (please use markdownhttp://github.github.com/github-flavored-markdown/to format the code and stacktrace so it is easier to read).\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/SpringSource/spring-security-javaconfig/issues/123#issuecomment-19660005\n> .\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19791781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dimalinux": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19726835", "body": "Some OpenId providers allow the user to fill in arbitrary values for requested attributes on their login page.  Where can we limit the allowed OpenId providers in the server configuration?  The client can manipulate any list we provide on the client-side.  If there is no current way to limit which OpenID providers can authenticate in the Spring configuration, I think that is something that is badly needed.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19726835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19765633", "body": "I think there is a disconnect here between what the original OpenID developers envisioned and how OpenID is actually used.  Most sites only give the user a few selections on the client side.  If your site works with any provider, it is open season to bots and fake e-mail addresses.\n\nThe \"point\" of using OpenID for most websites is:\n\n1)  So your site has no passwords to be compromised\n2)  So your users don't have to register and verify an e-mail address\n3)  So your users don't have to remember yet-another-password\n\nIf it's impractical to make it part of the configuration, could the documentation at least give an example of the best-practice solution for limiting providers to a fixed list?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19765633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20203444", "body": "I understand the problem better after trying to disable the message.  My logging config was already weeding anything below \"INFO\" for \"org.springframework.security\".  CGLIB is distorting who actually emitted the message.  In order to get rid of the stack trace, you have to raise the log level of the config class that extends WebSecurityConfigurerAdapter.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20203444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20228492", "body": "I like that solution.  As it turns out, I never would have seen the stack trace if it hadn't been logged against one of my own classes.  Thanks!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20228492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ralscha": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19895706", "body": "But the AuthenticationManagerBuilder always creates a ProviderManager in\nthe performBuild method.\nCould the library not simply support the EventPublisher like\nthe eraseCredentials property.\n\npublic AuthenticationManagerBuilder\nauthenticationEventPublisher(AuthenticationEventPublisher eventPublisher) {\n        this.eventPublisher= eventPublisher;\n        return this;\n}\n\nand in the performBuild method something like this.\n\n ProviderManager providerManager = new\nProviderManager(authenticationProviders, parentAuthenticationManager);\n        if(eraseCredentials != null) {\n\nproviderManager.setEraseCredentialsAfterAuthentication(eraseCredentials);\n        }\n        if (eventPublisher != null) {\n            providerManager.setAuthenticationEventPublisher(eventPublisher);\n        }\n        return providerManager;\n\nOn Mon, Jun 24, 2013 at 10:41 AM, Dave Syer notifications@github.comwrote:\n\n> (Oops didn't mean to close.)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/SpringSource/spring-security-javaconfig/issues/132#issuecomment-19895162\n> .\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19895706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19954661", "body": "It does work now. \nThere is one tiny problem that the AuthenticationFailureBadCredentialsEvent is sent twice if I try to login with an unknown user. Not sure if that is the correct behavior. \n\nFirst the parent is sending the event in Line 174 and then the ProviderManager itself is sending the event again.\n\nProviderManager Line 174: result = parent.authenticate(authentication);\nand\nProviderManager Line 200: prepareException(lastException, authentication);\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19954661/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20027485", "body": "Everything works fine now. Events are published only once. Thanks for your effort\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20027485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "gregturn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19991537", "body": "Thanks! \n\nI look forward to checking this out, but I won't be able to until I finish up some other tasking. In fact, I can't guarantee getting on this before SpringOne due to priorities of other content that needs to get crafted in the next 9 weeks.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/19991537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "keesun": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20459337", "body": "@rwinch \n\nI found that the <code>AbstractSecurityWebApplicationInitializer</code> works great. However, I already sent all requests to the <code>DispatcherServlet</code>, so I just wanted to register the filter in the class that extends the  <code>AbstractAnnotationConfigDispatcherServletInitializer</code> rather then add new class that extends <code>AbstractSecurityWebApplicationInitializer</code> for just registering one filter.\n\nAnyway, I agree with you that the constant makes more sense to be in AbstractSecurityWebApplicationInitializer. I will send new pull request to the spring-security project following the guideline.\n\nThanks a lot!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/20459337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "indyaah": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/72805906", "body": "Suggestion, \n1. Check DB caching. (If you are using that one)\n2. Make sure session and rememberme token are invalidated properly on password change.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/72805906/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/73010614", "body": "@singhjagjeet : Just google spring security invalidate session programmatically.\nTo give you pointers it can be done via spring security itself or via servlet api. HTH\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/73010614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "einxald": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/304800390", "body": "`UrlAuthorizationRegistry` no longer exists. How is this supposed to be done now?\r\n\r\nI came up with:\r\n```\r\nhttp\r\n    .apply( new UrlAuthorizationConfigurer<>( getApplicationContext() ) ).getRegistry()\r\n    .antMatchers( ... )\r\n```\r\nI am doing this right?\r\n\r\nHow do you the same for a `ResourceServerConfigurerAdapter` with does not have a `getApplicationContext()`? Or should I use `WebSecurityConfigurerAdapter` to be able to achieve `use-expressions=\"false\"` in Java config?\r\n\r\nI did not seem to find anything regarding this or I might've missed it.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-security-javaconfig/issues/comments/304800390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}}}}