{"_default": {"1": {"Houssamel-din": {"issues": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/107", "title": "import Gradle project", "body": "Synchronize Gradle builds with workspace failed due to an error connecting to the Gradle build.\r\nCould not fetch model of type 'EclipseProject' using Gradle distribution \r\n'https://services.gradle.org/distributions/gradle-2.14.1-all.zip'.\r\n\r\nA problem occurred configuring project ':android'.\r\nSDK location not found. Define location with sdk.dir in the local.properties file or with an ANDROID_HOME environment variable.\r\norg.gradle.tooling.GradleConnectionException: Could not fetch model of type 'EclipseProject' using Gradle distribution 'https://services.gradle.org/distributions/gradle-2.14.1-all.zip'.\r\n\t", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aya-eiya": {"issues": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/105", "title": "Fail to initialize EclipseModelBuilder in gradle 2.14.1 if \"Use Custom Tooling Model\" is checked.", "body": "Failed to fetch 'EclipseProject' model due to EclipseModelBuilder  constructor argument number change.\n\nspring-projects/eclipse-integration-gradle - version 3.8.0\n[StsEclipseProjectModelBuilder](https://github.com/spring-projects/eclipse-integration-gradle/blob/3.8.0.RELEASE/toolingapi/plugin/src/main/java/io/pivotal/tooling/plugin/eclipse/StsEclipseProjectModelBuilder.java#L58)\n\ngradle/gradle version 2.14.1\n[EclipseModelBuilder](https://github.com/gradle/gradle/blob/REL_2.14.1/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/internal/tooling/EclipseModelBuilder.java#L70)\n\nerror message:\n\n```\norg.gradle.plugins.ide.internal.tooling.EclipseModelBuilder.<init>(Lorg/gradle/plugins/ide/internal/tooling/GradleProjectBuilder;)V\nCould not fetch model of type 'EclipseProject' using Gradle distribution 'https://services.gradle.org/distributions/gradle-2.14.1-bin.zip'.\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "xzer": {"issues": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/101", "title": "\u201crefresh all\u201d update the eclipse .project file by force", "body": "As the title described, the force update causes some special project configuration lost after \"refresh\", for instance, resource filter configuration will disappear after refresh.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MoeSattler": {"issues": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/91", "title": "I don't have an extension tab", "body": "The doc says, the easiest way to install it is via the extension tab of the dashboard.\n\nI cannot find this tab. I have \"Docs\", \"Guides\", \"Issues\", \"Blog\" and \"Forum\".\nWhat am I doing wrong here?\n\nVersion: 3.6.4.RELEASE\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/91/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Razaekel": {"issues": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/83", "title": "Conflicting handlers for Gradle Tasks Quick Launcher", "body": "Trying to open the Gradle Tasks Quick Launcher in Eclipse results in the following error:\n\neclipse.buildId=4.4.1.M20140925-0400\njava.version=1.8.0_31\njava.vendor=Oracle Corporation\nBootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US\nFramework arguments:  -product org.eclipse.epp.package.java.product\nCommand-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product\n\norg.eclipse.ui\nError\nSun Feb 08 14:59:10 EST 2015\nConflicting handlers for org.eclipse.ui.edit.text.contentAssist.proposals: {org.springsource.ide.eclipse.gradle.ui.cli.editor.TasksViewer$3@7b842e79} vs {org.springsource.ide.eclipse.gradle.ui.cli.editor.TasksViewer$3@6e620fa9}\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/83/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "abrolle": {"issues": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/82", "title": "Very slow in large multi-projects", "body": "I am working on a project with 500+ eclipse projects. The eclipse-integration-gradle plugin runs ok on version 2.9.1.xx-201408111402-e44. I have tried different later versions but all are getting extremely slow, both import and refresh of gradle tasks. Latest version from http://dist.springsource.com/snapshot/TOOLS/gradle/nightly tried today.\nRunning on eclipse 4.4.0 using gradle 2.2.1.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/82/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/73774999", "body": "I'll provide you with profiling results tomorrow. Evaluating 500+ projects has gone from seconds to minutes from the 2.9.1.xx-201408111402-e44 and now. I ran JMC Java Flight Recorder and most time was spend in hash maps. Will get back with details.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/73774999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/73967070", "body": "All projects are part of the same multi-project build. No maven or other jar repo dependencies, only pure project dependecies. \nI have tried disabling all the new options relating to dependecy management.\nThe Gradle 2.3 release is near. Are you planning to update to this soon?\n\nBelow are a few screen shots from JMC Flight Recorder:\n![image](https://cloud.githubusercontent.com/assets/7009504/6156594/c4706f0a-b23b-11e4-9561-e5c432f97391.png)\n\n![image](https://cloud.githubusercontent.com/assets/7009504/6156610/db891016-b23b-11e4-9ad5-f7650f88c680.png)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/73967070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74032960", "body": "I read the discussion you refered to on gradle forums. I would be great to introduce the 'BuildActions' approach. However my 500+ projects work fine with the 2.9.1.xx-201408111402-e44 version. Something must have been done between then and now to make it much slower.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74032960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74224241", "body": "I ran the import again with the 'Gradle Tasks View' closed. This made the import go quicker. \nAlso having the  'Gradle Tasks View' closed when woring in eclipse made things quicker.\nI also seems quicker to find tasks in the 'quick launcher' than refreshing the 'gradle tasks view'\n\nThe external tools launch config wizard is not something we use. We have so many projects and mapping specific gradle tasks with this one would take quite some time. The normal java projects have no specific tasks. For applications we have specific packaging and install tasks we want to execute.\n\nI should have been clearer in my desciption. Meant: \"Importing projects\" and \"Refreshing tasks in the gradle tasks view\".\n\nThe problem with import being slow is the we are not working in a fixed project structure. New projects are added and dependencies are changed. When 10+ projects have updated dependencies the normal approach has been to reimport the projects again. This takes time. Do you have a better suggestion on how to approach this situation?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74224241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74699576", "body": "I will try this. Is there any chance the slowdown I'm seeing is caused by the fact that we are applying the eclipse plugin to each subproject? We are using this to assign each subproject a unique name: group + '.' + name. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74699576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "yunspace": {"issues": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/78", "title": "Eclipse Gradle import error with Java 1.8: Unrecognized VM option 'MaxPermSize=256m'", "body": "I'm using:\n- Mac OSX Yosemite\n- Java 1.8_25\n- Eclipse IDE for Java Developers 4.4.1.20140925-1820\n- Gradle IDE 3.6.3.201411271013-RELEASE\n\nMy JAVA_HOME is set to 1.8. Downloaded Eclipse 4.4.1 and installed Gradle IDE. When importing a gradle project I get the following error:\n\n```\n!ENTRY org.springsource.ide.eclipse.gradle.core 4 0 2015-01-07 11:12:56.677\n!MESSAGE Unable to start the daemon process.\nThis problem might be caused by incorrect configuration of the daemon.\nFor example, an unrecognized jvm option is used.\nPlease refer to the user guide chapter on the daemon at http://gradle.org/docs/2.2.1/userguide/gradle_daemon.html\nPlease read the following process output to find out more:\n-----------------------\nUnrecognized VM option 'MaxPermSize=256m'\nError: Could not create the Java Virtual Machine.\nError: A fatal exception has occurred. Program will exit.\n\n!STACK 0\njava.lang.reflect.InvocationTargetException\n    at org.springsource.ide.eclipse.gradle.core.util.GradleRunnable.run(GradleRunnable.java:112)\n    at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)\nCaused by: org.eclipse.core.runtime.CoreException: Unable to start the daemon process.\n```\n\nI tried various work arounds which didn't work:\n- setting Java version to 1.7 in Eclipse preferences\n- removing all references to MaxPermSize in eclipse.ini\n- setting my JAVA_HOME environment variable to 1.7\n\nIn the end I had to hack the Info.plist file to force Java 1.7:\n\n```\n <string>-vm</string><string>/Library/Java/JavaVirtualMachines/jdk1.7.0_55.jdk/Contents/Home/bin/java</string>\n```\n\nThis isn't very elegant. The eclipse gradle plugin should support Java 1.8 out of the box.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/78/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69564852", "body": "Thanks Alex, I've raised an issue with appengine plugin: https://github.com/GoogleCloudPlatform/gradle-appengine-plugin/issues/160 \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69564852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69565116", "body": "@kdvolder thanks for looking into this. Who should I raise the issue with for Gradle Tooling API?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69565116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "i23098": {"issues": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/59", "title": "Error importing projects - Build Model: InconsistenProjectHierarchyException", "body": "I have a project with sub-projects (https://github.com/i23098/Collections) that compiles correctly on the command-line. When I try to import the project in Eclipse I get an error and tells me to check the log... Checking it, it has:\n\n<pre>\n!ENTRY org.springsource.ide.eclipse.gradle.core 4 0 2014-11-09 17:03:13.404\n!MESSAGE Gradle project hierarchy is inconsistent for '/home/ralmeida/workspace-collections/Collections'\n!STACK 0\njava.lang.reflect.InvocationTargetException\nat org.springsource.ide.eclipse.gradle.core.util.GradleRunnable.run(GradleRunnable.java:113)\nat org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)\nCaused by: org.springsource.ide.eclipse.gradle.core.InconsistenProjectHierarchyException: Gradle project hierarchy is inconsistent for '/home/ralmeida/workspace-collections/Collections'\nat org.springsource.ide.eclipse.gradle.core.util.ExceptionUtil.inconsistentProjectHierachy(ExceptionUtil.java:82)\nat org.springsource.ide.eclipse.gradle.core.GradleModelProvider$GroupedModelProvider.getCachedModel(GradleModelProvider.java:339)\nat org.springsource.ide.eclipse.gradle.core.GradleProject.getGradleModel(GradleProject.java:634)\nat org.springsource.ide.eclipse.gradle.core.GradleProject.getSkeletalGradleModel(GradleProject.java:653)\nat org.springsource.ide.eclipse.gradle.ui.wizards.GradleImportWizardPageOne$11.doit(GradleImportWizardPageOne.java:516)\nat org.springsource.ide.eclipse.gradle.core.util.GradleRunnable.run(GradleRunnable.java:105)\n... 1 more\nRoot exception:\norg.springsource.ide.eclipse.gradle.core.InconsistenProjectHierarchyException: Gradle project hierarchy is inconsistent for '/home/ralmeida/workspace-collections/Collections'\nat org.springsource.ide.eclipse.gradle.core.util.ExceptionUtil.inconsistentProjectHierachy(ExceptionUtil.java:82)\nat org.springsource.ide.eclipse.gradle.core.GradleModelProvider$GroupedModelProvider.getCachedModel(GradleModelProvider.java:339)\nat org.springsource.ide.eclipse.gradle.core.GradleProject.getGradleModel(GradleProject.java:634)\nat org.springsource.ide.eclipse.gradle.core.GradleProject.getSkeletalGradleModel(GradleProject.java:653)\nat org.springsource.ide.eclipse.gradle.ui.wizards.GradleImportWizardPageOne$11.doit(GradleImportWizardPageOne.java:516)\nat org.springsource.ide.eclipse.gradle.core.util.GradleRunnable.run(GradleRunnable.java:105)\nat org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)\n</pre>\n\n\nEclipse IDE for Java EE Developers 4.4.1.20140925-1820\nGradle IDE 3.6.2.201410090835-RELEASE (configured to use gradle wrapper at http://services.gradle.org/distributions/gradle-2.1-bin.zip)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/59/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/62448589", "body": "I have version 3.6.2.201410090835-RELEASE of the plug-ins. Looking at the installation history, I started with regular eclipse Java EE 4.4 and installed Gradle IDE 3.5.1.201404300713-RELEASE. I got eclipse updated, and Gradle IDE 3.6.0.201407080553-RELEASE, and finally 3.6.2.201410090835-RELEASE.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/62448589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/62453409", "body": "Yes, import gradle project, when I press build model I got an error saying to look at the log. The exception was copy-pasted from the .log file. (Edit: Yes, it happens 100% of the time)\n\nSince it worked for you, I just started with a clean install Eclipse Luna SR1, installed gradle plugin 3.62, new workspace with new git clone... And now it works. Maybe some problem in the upgrade process?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/62453409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63170590", "body": "Got it again... For some reason Gradle -> Refresh All was not working. So, I decided to remove the projects from the workspace and import them again, to see if it helps. Now, it won't import it again...\n\n<pre>\n!ENTRY org.springsource.ide.eclipse.gradle.core 4 0 2014-11-15 12:25:07.941\n!MESSAGE Gradle project hierarchy is inconsistent for '/home/ralmeida/workspace-collections/Collections'\n!STACK 0\njava.lang.reflect.InvocationTargetException\n    at org.springsource.ide.eclipse.gradle.core.util.GradleRunnable.run(GradleRunnable.java:113)\n    at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)\nCaused by: org.springsource.ide.eclipse.gradle.core.InconsistenProjectHierarchyException: Gradle project hierarchy is inconsistent for '/home/ralmeida/workspace-collections/Collections'\n    at org.springsource.ide.eclipse.gradle.core.util.ExceptionUtil.inconsistentProjectHierachy(ExceptionUtil.java:82)\n    at org.springsource.ide.eclipse.gradle.core.GradleModelProvider$GroupedModelProvider.getCachedModel(GradleModelProvider.java:339)\n    at org.springsource.ide.eclipse.gradle.core.GradleProject.getGradleModel(GradleProject.java:634)\n    at org.springsource.ide.eclipse.gradle.core.GradleProject.getSkeletalGradleModel(GradleProject.java:653)\n    at org.springsource.ide.eclipse.gradle.ui.wizards.GradleImportWizardPageOne$11.doit(GradleImportWizardPageOne.java:516)\n    at org.springsource.ide.eclipse.gradle.core.util.GradleRunnable.run(GradleRunnable.java:105)\n    ... 1 more\nRoot exception:\norg.springsource.ide.eclipse.gradle.core.InconsistenProjectHierarchyException: Gradle project hierarchy is inconsistent for '/home/ralmeida/workspace-collections/Collections'\n    at org.springsource.ide.eclipse.gradle.core.util.ExceptionUtil.inconsistentProjectHierachy(ExceptionUtil.java:82)\n    at org.springsource.ide.eclipse.gradle.core.GradleModelProvider$GroupedModelProvider.getCachedModel(GradleModelProvider.java:339)\n    at org.springsource.ide.eclipse.gradle.core.GradleProject.getGradleModel(GradleProject.java:634)\n    at org.springsource.ide.eclipse.gradle.core.GradleProject.getSkeletalGradleModel(GradleProject.java:653)\n    at org.springsource.ide.eclipse.gradle.ui.wizards.GradleImportWizardPageOne$11.doit(GradleImportWizardPageOne.java:516)\n    at org.springsource.ide.eclipse.gradle.core.util.GradleRunnable.run(GradleRunnable.java:105)\n    at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)\n</pre>\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63170590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "balteo": {"issues": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/56", "title": "Issue running Spring tests/applications from STS with Gradle support", "body": "There seems to be an issue with STS/Gradle support when running/testing Spring projects.\n\nI have installed the STS 3.6.2 together with Gradle support and the exception below was raised when I ran Spring tests. My app uses logback and it appears Gradle support added a logback jar on the test classpath causing the exception below:\n\n```\njava.lang.IllegalStateException: Failed to load ApplicationContext\n    at org.springframework.test.context.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:91)\n    at org.springframework.test.context.DefaultTestContext.getApplicationContext(DefaultTestContext.java:74)\n    at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:116)\n    at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:82)\n    at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:212)\n    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:199)\n    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:251)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:253)\n    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:216)\n    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:82)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:60)\n    at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:67)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:162)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)\n    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)\nCaused by: java.lang.IllegalArgumentException: LoggerFactory is not a Logback LoggerContext but Logback is on the classpath. Either remove Logback or the competing implementation (class org.slf4j.impl.SimpleLoggerFactory loaded from file:/home/julien/system/spring-tool-suite-3.6.2.RELEASE-e4.4-linux-gtk-x86_64/sts-3.6.2.RELEASE/plugins/org.springsource.ide.eclipse.gradle.toolingapi_3.6.2.201410090835-RELEASE/lib/slf4j-simple-1.7.5.jar). Object of class [org.slf4j.impl.SimpleLoggerFactory] must be an instance of class ch.qos.logback.classic.LoggerContext\n    at org.springframework.util.Assert.isInstanceOf(Assert.java:339)\n    at org.springframework.boot.logging.logback.LogbackLoggingSystem.initialize(LogbackLoggingSystem.java:71)\n    at org.springframework.boot.logging.AbstractLoggingSystem.initializeWithSensibleDefaults(AbstractLoggingSystem.java:62)\n    at org.springframework.boot.logging.AbstractLoggingSystem.beforeInitialize(AbstractLoggingSystem.java:45)\n    at org.springframework.boot.logging.Slf4JLoggingSystem.beforeInitialize(Slf4JLoggingSystem.java:36)\n    at org.springframework.boot.logging.LoggingApplicationListener.onApplicationEvent(LoggingApplicationListener.java:136)\n    at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:151)\n    at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:128)\n    at org.springframework.boot.context.event.EventPublishingRunListener.publishEvent(EventPublishingRunListener.java:100)\n    at org.springframework.boot.context.event.EventPublishingRunListener.started(EventPublishingRunListener.java:54)\n    at org.springframework.boot.SpringApplication.run(SpringApplication.java:278)\n    at org.springframework.boot.test.SpringApplicationContextLoader.loadContext(SpringApplicationContextLoader.java:105)\n    at org.springframework.test.context.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:63)\n    at org.springframework.test.context.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:83)\n    ... 25 more\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/56/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "KavithaKrishna": {"issues": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/52", "title": "Error in installing gradle plugin-Gradle Integration for Eclipse(4.4)", "body": "Hi,\nI am using STS 3.1.0 version and trying to install gradle plugin-Gradle Integration for Eclipse(4.4),but I am facing the problem while trying to install.\nI am getting following error.\n\nProvisioning exception\norg.eclipse.equinox.p2.core.ProvisionException: Unable to read repository at http://download.springsource.com/release/TOOLS/third-party/m2e-sts310/site.xml.\nat org.eclipse.equinox.internal.p2.updatesite.UpdateSite.loadActualSiteFile(UpdateSite.java:233)\nat org.eclipse.equinox.internal.p2.updatesite.UpdateSite.load(UpdateSite.java:144)\nat org.eclipse.equinox.internal.p2.updatesite.metadata.UpdateSiteMetadataRepositoryFactory.initializeRepository(UpdateSiteMetadataRepositoryFactory.java:99)\nat org.eclipse.equinox.internal.p2.updatesite.metadata.UpdateSiteMetadataRepositoryFactory.load(UpdateSiteMetadataRepositoryFactory.java:59)\nat org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.factoryLoad(MetadataRepositoryManager.java:57)\nat org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:758)\nat org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:651)\nat org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:96)\nat org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:92)\nat org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepository.addChild(CompositeMetadataRepository.java:165)\nat org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepository.<init>(CompositeMetadataRepository.java:105)\nat org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepositoryFactory.load(CompositeMetadataRepositoryFactory.java:122)\nat org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.factoryLoad(MetadataRepositoryManager.java:57)\nat org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:758)\nat org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:651)\nat org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:96)\nat org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:92)\nat org.eclipse.epp.internal.mpc.ui.operations.AbstractProvisioningOperation.addRepositories(AbstractProvisioningOperation.java:91)\nat org.eclipse.epp.internal.mpc.ui.operations.ProfileChangeOperationComputer.computeInstallableUnits(ProfileChangeOperationComputer.java:262)\nat org.eclipse.epp.internal.mpc.ui.operations.ProfileChangeOperationComputer.run(ProfileChangeOperationComputer.java:123)\nat org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:121)\nCaused by: java.io.IOException: Server returned HTTP response code: 403 for URL: http://download.springsource.com/release/TOOLS/third-party/m2e-sts310/site.xml\nat sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1625)\nat org.eclipse.ecf.provider.filetransfer.retrieve.UrlConnectionRetrieveFileTransfer.getDecompressedStream(UrlConnectionRetrieveFileTransfer.java:542)\nat org.eclipse.ecf.provider.filetransfer.retrieve.UrlConnectionRetrieveFileTransfer.openStreams(UrlConnectionRetrieveFileTransfer.java:312)\nat org.eclipse.ecf.provider.filetransfer.retrieve.AbstractRetrieveFileTransfer.sendRetrieveRequest(AbstractRetrieveFileTransfer.java:879)\nat org.eclipse.ecf.provider.filetransfer.retrieve.AbstractRetrieveFileTransfer.sendRetrieveRequest(AbstractRetrieveFileTransfer.java:570)\nat org.eclipse.ecf.provider.filetransfer.retrieve.MultiProtocolRetrieveAdapter.sendRetrieveRequest(MultiProtocolRetrieveAdapter.java:106)\nat org.eclipse.equinox.internal.p2.transport.ecf.FileReader.sendRetrieveRequest(FileReader.java:422)\n\nCan any one please help me to resolve this problem..?\n\nI even tried installing the gradle using below URL.\n\n```\nhttp://dist.springsource.com/snapshot/TOOLS/gradle/nightly (latest development snapshot)\nhttp://dist.springsource.com/milestone/TOOLS/gradle (latest milestone build)\nhttp://dist.springsource.com/release/TOOLS/gradle (latest release)\n```\n\nbut all in vain.I will end up getting the following eror.\n\nUnable to read repository at http://dist.springsource.com/snapshot/TOOLS/gradle/nightly/site.xml.\nUnable to read repository at http://dist.springsource.com/snapshot/TOOLS/gradle/nightly/site.xml.\nServer returned HTTP response code: 403 for URL: http://dist.springsource.com/snapshot/TOOLS/gradle/nightly/site.xml\n\nplease help me to resolve .\n\nThanks.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/52/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "OverDrone": {"issues": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/46", "title": "NPE in external tool configurations", "body": "Steps to reproduce:\n1. Create gradle project (any type)\n2. build it\n3. select run as/gradle build\n4. select run as/external tool configuration\n5. left click on any item in tree on the left beside gradle build configurations. i.e. 'program', 'ant build', etc\n6. Most irritating thing is that after that eclipse response to any action with exception, so you must kill process\n\nIf you somehow delete all gradle external tool configurations this bug is no more reproduced. You can navigate and left click on any item in the tree\nlog file https://gist.github.com/OverDrone/45abdec4daca2489cbe5\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/46/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "doliver3": {"issues": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/45", "title": "build.gradle file disappearing from project explorer but shows in navigator", "body": "The build.gradle file is disappearing from the top level view in project explorer in Eclipse.  The file is still there on the file system and it still shows in the Navigator view.  \n\nTo reproduce load this project that has a build.gradle, pom.xml, and gradlew/gradle.bat file in the root.\nhttps://github.com/spring-guides/gs-convert-jar-to-war/tree/master/complete\n\nSometime after opening the build.gradle file and after deploying to Tomcat server with Eclipse wtp, the build.gradle file just stops showing up in project explorer even though in Navigator view it is still there. \n\nI'm using the latest Eclipse Luna 4.4 on a Mac OSX 10. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/45/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/50294674", "body": "Not sure why it would be an Eclipse issue rather than an eclipse gradle integration issue, but I've opened this defect there as you suggest https://bugs.eclipse.org/bugs/show_bug.cgi?id=440502\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/50294674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "zyro23": {"issues": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/40", "title": "gradle tooling must not always add java nature", "body": "the gradle tooling seems to _always_ add a java nature to the project when doing a \"refresh all\". no matter if the gradle build actually adds a java nature or if dependency mgmt is enabled or not.\n\nthis is not always a good approach: e.g. i got an ear project which must not have a java nature or else i am not able to deploy it to the application server. i explicitly removed that nature in my gradle build (or rather the project does not even have the java plugin applied) but \"refresh all\" keeps re-adding it.\n\nlooks like this could be the code.\nhttps://github.com/spring-projects/eclipse-integration-gradle/blob/master/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/wizards/GradleImportOperation.java#L419\n\nthe same happens on \"convert to gradle project\", i think:\nhttps://github.com/spring-projects/eclipse-integration-gradle/blob/master/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleProject.java#L690\n\nwould be cool if the gradle tooling supports non-java gradle projects as well.\n\nthanks, zyro\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/40/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "paulvi": {"issues": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/34", "title": "Task Quick Launcher should be movable by default", "body": "Task Quick Launcher should be movable by default\n\nCurrently user needs to to select Move from triangle menu\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/34/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/33", "title": "Gradle Tasks View actions are not visible, was: [feature request] for Gradle Tasks View", "body": "Please consider to implements\n- hide/show enherited tasks, (there can be quite a lot of inherited from plugins tasks, for some periods `build.gradle` defined is all what needed). Having defined tasks to start with the same latter like \"u\" is work-around\n- show description of tasks\n- (the least needed) group by category and/or plugin, as `gradle tasks` output is\n  ## Help tasks\n  \n  dependencies - Displays all dependencies declared in root project 'NashornSandbox'.\n  dependencyInsight - Displays the insight into a specific dependency in root project 'NashornSandbox'.\n  help - Displays a help message\n  projects - Displays the sub-projects of root project 'NashornSandbox'.\n  properties - Displays the properties of root project 'NashornSandbox'.\n  tasks - Displays the tasks runnable from root project 'NashornSandbox'.\n  ## IDE tasks\n  \n  cleanEclipse - Cleans all Eclipse files.\n  cleanIdea - Cleans IDEA project files (IML, IPR)\n  eclipse - Generates all Eclipse files.\n  idea - Generates IDEA project files (IML, IPR, IWS)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/33/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/8d9ea1d54c31f1371374eef1e0237c5058d8747b", "message": "Offline installation #95"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/31995986", "body": "Then when network connection timeout, then even close Eclipse correct becomes problem.\n\n![gradle-waiting-waiting](https://f.cloud.github.com/assets/1614482/1884187/f0cb6524-7997-11e3-9053-7ae2a8424536.png)\n\nWhy just to start gradle potentially long running task in external shell.\nPlease give option for that so that new users do not experience Eclipse hanging.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/31995986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/31996867", "body": "after restart the same operation starts again.\n\nThis Eclipse workspace is almost broken. I rename project folder to kill Eclipse.\n\nAfter Eclipse restart, and renaming the project back I get \n\n![gradle-error-initializing](https://f.cloud.github.com/assets/1614482/1884274/2db1af90-799b-11e3-8e9d-367e67a112f4.png)\n\nI wonder why Eclipse wants to get gradle 1.5 when I have 1.9 installed on PATH ?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/31996867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/32249405", "body": "Thank you, Kris\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/32249405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/40463429", "body": "Try Minimalist Gradle Editor from [Nodeclipse/Enide Gradle for Eclipse](https://github.com/Nodeclipse/nodeclipse-1/tree/master/org.nodeclipse.enide.gradle)\n([marketplace](http://marketplace.eclipse.org/content/gradle)) \n\nCurrently it has no completions. I guess this is the issue that would give them.\nSome screenshots for Gradle for Eclipse:\n\n![](http://marketplace.eclipse.org/sites/default/files/styles/ds_solution_screenshot/public/EditBox-plugin-gradle-example.PNG?itok=Fe_8TGFM)\n\n@Povital\nI wonder how gradle DSL is defined to implement simple completion?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/40463429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/40556311", "body": "@moley You should have reported  [Nodeclipse/Enide Gradle for Eclipse](https://github.com/Nodeclipse/nodeclipse-1/tree/master/org.nodeclipse.enide.gradle) issues at https://github.com/nodeclipse/nodeclipse-1/issues (I will not discuss here)\n\nI hope this #31 will bring code completion \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/40556311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/40783428", "body": "yes and link to #31 , I don't promise I ever do that, but at least I show to you what can be done quickly. At that would be half-way.\n\nIt is just not polite to discuss other project issues while being guest.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/40783428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/41237496", "body": "Or better drag-able when mouse button down\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/41237496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/41237931", "body": "Gradle Tasks View actually has some actions but they are visible only in narrow View\n\n![1](https://cloud.githubusercontent.com/assets/1614482/2785670/972bf2ac-cb5b-11e3-919b-42896dc6a902.PNG)\n\n![2](https://cloud.githubusercontent.com/assets/1614482/2785674/af45be4a-cb5b-11e3-88ad-aa8e66dfd6d6.PNG)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/41237931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/41369341", "body": "This is definitely not  this project issue. And this is not only for JIRA, but for used to be for http://spring.io/ as well. This is China issue.\nMost webmasters expect if they put something on CDN/cloud, it will be quick everywhere.\nBut in fact it is not. And even may be contrary effect.\n\nIssues was raised to raise Spring team awareness of China issue.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/41369341/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/41369420", "body": "Thank you Kris, you are very kind.\n\nI had to raise here because of #35\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/41369420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/41757745", "body": "I ran into this issues in [ADT-Bundle](http://developer.android.com/sdk/installing/bundle.html) (Eclipse Juno) on Windows 7. Checking in latest Eclipse Luna, GGTS updated to 3.5 is OK.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/41757745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/42128894", "body": "@jkschneider I am not from Pivotal that supports this plugin since it was created for Groovy and Grails project. In fact I made http://marketplace.eclipse.org/content/gradle\n\nIt is hightly advised to create issue on JIRA as recommended in README.\nPivotal do looks into these issues from time to time, but JIRA ticket is needed anyway.\nUnfortunately I will not follow then, because of #35 \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/42128894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/42385695", "body": "Thanks for link\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/42385695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/44610033", "body": "please raise JIRA ticket and share link here\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/44610033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/50139124", "body": "It seems to be issue of Eclipse projects, I propose to raise at https://bugs.eclipse.org/bugs/\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/50139124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/50729709", "body": "Please make it drag-able when holding on Labels (Tasks or Project)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/50729709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/50730007", "body": "The same again on Windows 7 64 with Java 8 _10 and STS 3.6 (on top of 4.4 Eclipse)\n\nWhen I first launched STS 2 icons were shown, but after a while they dissapeared\n(I notice them blinking when resizing View)\n\n![err-sts](https://cloud.githubusercontent.com/assets/1614482/3761480/d7541ba8-188a-11e4-9c88-f7f3b16a0ddd.PNG)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/50730007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/50731219", "body": "after restart \n\n![err-sts-after-restart](https://cloud.githubusercontent.com/assets/1614482/3761607/749341c2-188c-11e4-86e4-2690b2ed1da4.PNG)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/50731219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/60863016", "body": "BTW @spring-project was there plan to enable some Gradle functionality, when project is without Gradle feature?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/60863016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/60863588", "body": "When developer considers migrating from Maven to Gradle, it would be help for him to launch both builds, compare dependencies etc...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/60863588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61960778", "body": "possibly Tasks Quick Launcher just needs key binding to select project, e.g. <kbd>F4</kbd>\n\nso that user wouldn't have to leave the keyboard\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61960778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/65556422", "body": ":+1: voting up for empty template with `src/main/java` and `src/test/java` folders.\n\nsee also http://stackoverflow.com/questions/14017364/how-to-create-java-gradle-project\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/65556422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/86364851", "body": "Did it work from command line?\n\nby the way, why not to put into `gradle.properties`\n\nlike\n\n```\nsystemProp.http.proxyHost=127.0.0.1\nsystemProp.http.proxyPort=3213\nsystemProp.http.nonProxyHosts=fun.tv|localhost\nsystemProp.https.proxyHost=127.0.0.1\nsystemProp.https.proxyPort=3213\nsystemProp.https.nonProxyHosts=fun.tv|localhost\n```\n\nSee also http://stackoverflow.com/questions/5991194/gradle-proxy-configuration\nand http://www.nodeclipse.org/projects/gradle/\n\nAlso Eclipse has Preferences -> General -> Network Connections preferences where proxy also can be configured. But I can't tell if it will be applied with Gradle IDE\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/86364851/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/86889755", "body": "Is proxy.tencent.com free to use?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/86889755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/comments/6104296", "body": "@BoykoAlex \nThat is great feature. Thanks so much.  \n\nPlease take look at #33 #34 #36 \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/comments/6104296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/comments/10428652", "body": "While I did simple Gradle Editor https://github.com/Nodeclipse/nodeclipse-1/tree/master/org.nodeclipse.enide.editors.gradle\n\nI actually expected Pivotal to do even better integration with Greclipse , extract Editor, minimal Groovy for Gradle DSL support.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/comments/10428652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/comments/10460220", "body": "I already bundle it as Gradle IDE Pack http://marketplace.eclipse.org/content/gradle-ide-pack\n\nNow as Greclipse is put aside, would it make sense to add that tiny Minimalist Editor here?\n\nThough making first-class Gradle DSL support, with outline and completion without Greclipse may be not nice idea.... Or it may?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/comments/10460220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/comments/10460287", "body": "Wow, what a coincidence, now there are at least 3 people involved  https://github.com/Nodeclipse/nodeclipse-1/issues/187 Extract Minimalist Gradle Editor \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/comments/10460287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/comments/10480848", "body": "> Perhaps, but I'd try to keep the two projects as separate as possible. \n\nOK\n\n> Something else can/should provide the 'editing gradle code' piece. Bundling them up so that people can easily install them makes good sense (marketplace downloads for your 'gradle pack' have more installs than the two components separately.\n\nGradle IDE Pack\n\n[![chart](https://cloud.githubusercontent.com/assets/1614482/6911604/41b5e6d8-d795-11e4-8c69-caf35da4e9a2.png)](http://marketplace.eclipse.org/content/gradle-ide-pack)\n\nIt was in several steps. I worked with Android, and Gradle IDE could not help. At first there was just Editor, then launching Gradle without Tooling API http://www.nodeclipse.org/projects/gradle/ as\nGradle for Eclipse  is simple, but some users still expected it to work as full IDE (and not reading description)\n\nGradle for Eclipse\n\n[![chart](https://cloud.githubusercontent.com/assets/1614482/6911397/c93fc4a0-d792-11e4-96ae-2de39ca40393.png)](http://marketplace.eclipse.org/content/gradle)\n\nSo by making pack users gets all possible that can help (Minimalist Gradle Editor is associated but not default, so Groovy Editor should override when installed)\n\nAnd yes save few seconds by installing at one time.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/comments/10480848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/comments/10480952", "body": "And by the way, I think many (new) users don't know that they need to install Greclipse for editing with DSL support. It is not stated in README or marketplace entry http://marketplace.eclipse.org/content/gradle-integration-eclipse-44\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/comments/10480952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/comments/10615762", "body": "OK, thanks for telling. So adding DSL support via Gradle tooling is not way to go.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/comments/10615762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "moley": {"issues": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/31", "title": "special gradle editor", "body": "Hi, \n\nit would be nice to have an editor for gradle buildfiles which has auto completion for some dsl snippets. In general gradle allows very dynamic dsls, because all the groovy and java things are allowed. \nBut minimal the static things like dependencies, tasks, dsl extensions? could be auto completed. \n\nBest regards\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/31/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/30", "title": "Groovy Editor doesn't support Log injection", "body": "Hi, \n\ngroovy itself has a feature to dynamically create a field log which is a logger, when annotating the class with @Log4j or @Log or @Slf..... This is currently not supported by the groovy editor, because if I use this and want to access log this reference could not be resolved. \n\nBest regards\nMarkus\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/30/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/40513245", "body": "Hi Paul, \n\nthanks for your answer, I will give it a try\u2026\n\nAm 15.04.2014 um 11:46 schrieb Paul Verest notifications@github.com:\n\n> Try Minimalist Gradle Editor from Nodeclipse/Enide Gradle for Eclipse\n> (marketplace)\n> \n> Some screenshots for Gradle for Eclipse:\n> \n> @Povital\n> I wonder how gradle DSL is defined to implement simple complition?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/40513245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/40514483", "body": "Hi Paul, \n\nsorry, but it doesn\u2019t work for me :-( Because for my own extensions I don\u2019t get any syntax highlighting and I don\u2019t get any \ncode completion either. \n\nCheers \nMarkus\nAm 15.04.2014 um 11:46 schrieb Paul Verest notifications@github.com:\n\n> Try Minimalist Gradle Editor from Nodeclipse/Enide Gradle for Eclipse\n> (marketplace)\n> \n> Some screenshots for Gradle for Eclipse:\n> \n> @Povital\n> I wonder how gradle DSL is defined to implement simple complition?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/40514483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/40744263", "body": "@PaulVI \nI thought that my issue is very specific - I don't know. Sorry, shall I open a issue in nodeeclipse?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/40744263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ilx": {"issues": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/29", "title": "Decorate project name with version label", "body": "Please provide us with the custom label decorator on the gradle project that will display project version (similar to maven version label decorator).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/29/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "venta7": {"issues": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/25", "title": "Error when trying to install Eclipse integration gradle", "body": "I've got this error when trying to install Eclipse integration gradle:\n\nCannot complete the install because one or more required items could not be found.\nSoftware being installed: Spring Dashboard (optional) 3.4.0.201310051510-RELEASE\n(org.springsource.ide.eclipse.dashboard.feature.group 3.4.0.201310051510-RELEASE)\nMissing requirement: Getting Started With Spring Integration 3.4.0.201310051510-RELEASE (org.springsource.ide.eclipse.commons.gettingstarted 3.4.0.201310051510-RELEASE) requires 'bundle org.codehaus.jackson.core 0.0.0' but it could not be found\nCannot satisfy dependency:\nFrom: Spring Dashboard (optional) 3.4.0.201310051510-RELEASE(org.springsource.ide.eclipse.dashboard.feature.group 3.4.0.201310051510-RELEASE)\nTo: org.springsource.ide.eclipse.commons.gettingstarted [3.4.0.201310051510-RELEASE]\n\nThe system is Ubuntu 12.04 and Eclipse 4.2.\nHow can I fix this dependency?\nThank you!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/25/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/38947666", "body": "Hi, Thanks for your response!\nThe distribution is Eclipse Juno (Eclipse IDE for Java Developers).\n\nI've installed Eclipse 4.3.2 Kepler Standard Edition and it displayed the same error.\n\nTo be honest I didn't know that I probably will not need the dashboard and UAA components so I've tried to install them also together with Gradle tooling.\n\nSince I didn't find other solution yesterday I've installed Spring Tools Suite from Eclipse marketplace first and then Gradle plugin with no issues at all.\n\nAs you point it out - probably I'll not need them anyway but I didn't know at that time.\n\nThanks a lot for clarifying this for me!\n\nEDIT: I forgot to mention that I was using the following update site:\nhttp://dist.springsource.com/release/TOOLS/gradle\n(from Installation instruction here at github)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/38947666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "auriusbendikas": {"issues": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/21", "title": "Gradle tasks timeout after build.gradle modified while jetty is running", "body": "I am using jetty plugin to test my work. I have noticed that if I modify build.gradle while jetty is started (by gradle), than all other task executions timeout with this exeption:\n\nTimeout waiting to lock buildscript class cache for build file '{project}/build.gradle' ({gradle_home}/caches/1.11/scripts/build_307eri5rn2tng6h3pvh4svs119/ProjectScript/buildscript). It is currently in use by another Gradle instance.\nOwner PID: unknown\nOur PID: 7053\nOwner Operation: unknown\nOur operation: Initialize cache\nLock file: {gradle_home}/caches/1.11/scripts/build_307eri5rn2tng6h3pvh4svs119/ProjectScript/buildscript/cache.properties.lock\nCould not execute build using Gradle installation '{1.11-gradle-install-location}/gradle'.\n\nThe only way to get out of this situation is to manually kill gradle daemons.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/21/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gruberrolandfiducia": {"issues": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/14", "title": "Please support checkout of hierarchical multi-projects", "body": "Hi,\n\nit would be great if users could check-out a folder from Subversion and all Gradle subprojects would be detected and added to Eclipse automatically. At the moment users need to import projects from subfolders manually.\n\nThanks in advance.\n\nBest regards\n\nRoland\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/14/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "darylteo": {"issues": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/10", "title": "SourceSetOuptut output directories", "body": "Sorry I don't really want to create ANOTHER account on another forum for another bug tracker.\n\nIt seems that this integration plugin does not handle SourceSetOutput in the same manner as the Gradle Eclipse Plugin.\n\n[SourceSetOutput Referennce](http://www.gradle.org/docs/current/javadoc/org/gradle/api/tasks/SourceSetOutput.html)\n\nSpecifically, outputs directories added to the SourceSetOutput should be added to the compile classpath. \n\nExample from reference:\n\n``` groovy\n sourceSets {\n   main {\n     //let's register an output folder on the main SourceSet:\n     output.dir(generatedResources, builtBy: 'generateMyResources')\n     //it is now a part of the 'main' classpath and will be a part of the jar\n   }\n }\n```\n\nIn the example above, the folder is never added to Gradle Dependencies.\n\nThis seems to work as expected in the latest Eclipse Plugin, but this needs to be run on CLI.\n\nThanks\n\nEdit: just to help narrow things down: this seems related to \"Dependency Management\". Turning this off makes it use the Eclipse plugin (if applied) and works nicely.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/10/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "martinlippert": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/a4c13792f66cca7e9a3d4dc95ff0e2c5cc87e6e7", "message": "updated version to 3.9.3"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/4bbaedb66be520cec8166bea2f5462a90fe30031", "message": "removed commons feature and replaced it individual bundles"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/869293df3c2fffdbd35dde33a58caf6958735bc3", "message": "updated version to 3.9.2"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/5cc44cb8462b52db1186fb1fd4ff0ee218dc167b", "message": "updated version to 3.9.1"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/6b29a7c9788af38511cfbb3ec27d20ebf2f0f725", "message": "updated license files for 3.9.0 release"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/d74e8f12befb0f22d32868b174311db7e3d8c789", "message": "updated jarsigner version and timestamp server"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/2f087751faa6528c8bc181fe6a546e6c706559b5", "message": "Merge pull request #108 from bryant1410/master\n\nFix broken headings in Markdown files"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/79fde0af1353d14cd9078a8165caa1eea869590e", "message": "updated to version 3.9.0"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/c7688d8b254ba37cf434d9c58d6aee6a847481d5", "message": "added timestamp to signing"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/3dcbd4f5a931e9fe2082d3ea98bf0f64a6faea3a", "message": "updated s3 access"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/fe44fd4629e229ba7be59b4d885956c77d9029be", "message": "updated signing keystore information"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/6be07b988d0976a032cae42e80b041167d95cd8d", "message": "updated versions to 3.8.4"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/c17f76016544cc83455504d7fec4af564f5df227", "message": "updated version to 3.8.3"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/a1b4bc8120c7b03fbc718cf8726841b6751c7cbc", "message": "updated version to 3.8.2"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/1d4a563137ad522f16336822379d62bdfa9c941e", "message": "updated version to 3.8.1"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/fce1881a7190f11e5f75c395c8383c8422034b2c", "message": "updated license files for 3.8.0 release"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/48880bd1b938a30975ed7b6192a728f4dd3c4f53", "message": "added e4.5 prpfile and removed platform-specific extension of p2 repo URL of commons repo"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/c82613863a53573e123793a18545f178edef9b7c", "message": "updated version to 3.8.0"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/37662a59b4d00b07cb8da4a01413f2dc7c686a3b", "message": "add contributor covenant"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/2a9bc86d6331cb13a3cc8c852c9af51ca3fec47a", "message": "updated version to 3.7.3"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/e46b5cd37c094347301360eaf019e24dd4b6233b", "message": "updated versions to 3.7.2"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/f681136b7f00e17c621e5f6d84c585ab5c109803", "message": "updated version to 3.7.1"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/6c99b780d22d8b0a9ec5be0377cfd2ed67c62c61", "message": "updated legal information for 3.7.0 release"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/1dc6561bf7b32a630138dfd9fab79556f5ae7582", "message": "version updated to 3.7.0"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/f7b23ce33bbb523072b561d8f3dcb192564ab29d", "message": "updated version to 3.6.4"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/472967a029de27ef1f2e392bae80495e53b5faf2", "message": "updated version to 3.6.3"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/20520806", "body": "The update site URLs can be used by putting them into the \"install new software\" dialog in Eclipse. They don't serve anything when accessed with a browser.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/20520806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/20522394", "body": "Eclipse tries to access various extensions of the base update site URL (like content.xml, for example). Usually Eclipse should recognize that this resource doesn't exist and try the next possibility. In the case of the Gradle update site it should succeed to access http://dist.springsource.com/milestone/TOOLS/gradle/compositeContent.xml, for example. So something on the network level doesn't seem to work between your machine and our update site... :-( Can you try to put this update site URL into Eclipse instead: http://download.springsource.com/milestone/TOOLS/gradle/ ? Sometimes this helps. Other problems could be caused by virus scanners or proxy servers in between.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/20522394/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/43511259", "body": "This URL is pointing to a p2 update repository and should be used within Eclipse (or STS) from the \"Install New Software\" dialog. The URL doesn't serve an index file and therefore returns the Access Denied message when accessed via a browser.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/43511259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "bryant1410": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/e85b670a137d65c68ef5412da4f28b4063df0112", "message": "Fix broken Markdown headings"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kdvolder": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/ce9cf116078d27610aa135b4d89ea4f218039cc8", "message": "Delete maven.compiler.(source|target) from poms\n\nShould let tycho use BREE instead"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/7f91673c1b839613a78b18f0a637097b55d02b2e", "message": "Cleanup: imports"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/b9a825058da9ac79ecfb283e3cd308f7226574cc", "message": "Try  to fix two failing tests.\n\nReason for failure can't find 'mvn' on the PATH."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/dfe0e4a04276588f9bb145017121e6ab371fe69d", "message": "Add extra java 7 location for CI host."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/ee98af550d100527124157bb24d5fdf4a66f0ed6", "message": "Fix  another test failure."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/7bfaa95c47bc7ace471f9866dbfc91fb74ccc629", "message": "Fix test failure"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/e7eccdc5a67dfc811922f6692f90caa10254630f", "message": "Fix   STS-4332\n\nGradle dependency container before JRE container results in compilation errors"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/879fec8e29db9b8b83407fa17d3286c91d0906c1", "message": "Lots of test failng because they try to find Java 6.\n\nSwitch them over to Java 7... and see what happens."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/c9ec08141f4414132e8ba0aee9f23d1b6ea34252", "message": "Remove buildship stsmigration bundle from test target platform"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/430dca74a7981df6ea83658f1d95a2135514e76a", "message": "Fix CI build failure"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/7ba3506240dc4d3bc810039a1c4f4fa18435b57a", "message": "Make sure dependency on buildship migration plugin is greedy"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/5ef81d101cf80cebc1622b83929374c73280858c", "message": "Add buildship migration plugin as a optional dependency"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/f7823d4589a88dc5b0989f7139eb94634dd27e7f", "message": "Fix #102: sort classpath by name makes test folders disapear"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/abd02dfdd6e905c7879ca5281b3109fc1e5b2ab1", "message": "Make names of our menus etc. stand out from BuildShip"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/e43e425752815d2fcdb06fe9726293a33c2feefd", "message": "Merge branch 'master' of github.com:spring-projects/eclipse-integration-gradle"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/1bb3b57ff10b53066770a10bbc61c56cc3f273af", "message": "Java 6 -> Java 7"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/7d011e8bdd70a02ddc0631b0f65dde62f00e12ad", "message": "Fix NPE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/6494449a267ff0aec83c938d6490b007cfbd2e68", "message": "Better toString for debugging"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/a1d5554b1c0b0faf8a48b7585ac5371aa9a59793", "message": "Merge pull request #96 from paulvi/patch-1\n\nOffline installation #95"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/bf6972fcad700c9895f032f79525a4de60d47068", "message": "Merge branch 'master' of github.com:spring-projects/eclipse-integration-gradle"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/f811cff517ea109017f9b2f2d55df4559a241e0a", "message": "Fix  STS-2352:\n\nGradle dependencies refreshed whenever Eclipse starts"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/a88986a62bab67f6f0c4db9ba689820d743bb8a2", "message": "Add back some 'stubs' for removed DSLD related API on \nGradleImportOperation\n\nThis is to avoid breakage when user installs newer version of\nGradle tooling in older version of STS."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/d3bb6ca0ab1a7ebf957086f4e6b3ab59cee443f1", "message": "Remove greclipse dependency"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/f40acf8033db935270225e6ff4b5989f2f45abb4", "message": "Add 2.2 to 'run tasks with different releases' test"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/1a96c0ebcf3640ca90141b3265e72a79a75e1057", "message": "CI builder server too slow? Bump a timeout."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/d644268da1887ea5aac7069d1330744c254fd01e", "message": "Disable unstable test"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/8954e00d479115cc2045876122bb6c7d3b37fd89", "message": "Commit more updates for custom tooling model"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/4187d0921ae6695d26931ffa8aa42a15e3532ca6", "message": "Update Custom model builder for changesin Gradle 2.2"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/c8c6279a113049596b6791df436b95b2034cda35", "message": "Tooling API -> 2.2.1"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/7c7f3302442a2debd6d8ffe364d66289641f541c", "message": "Fix STS-4020"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/76dfae021a4a16f8587f0d871208c1762879bf09", "message": "STS-4021"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/0942b8df1c09382b7df50d441522cc88ae703320", "message": "Remove unstable tests"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/8ecc43b8a09dec3c6ba683bc70ab435e21163970", "message": "Remove UAA"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/b2eb41936f876a93124c7543d0f1c4cc6495746b", "message": "Fix failing test:\n\nReason for failure: project entries are now at end of classpath\n(since PR-74)."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/f614b57fed7c9b037878f2ea0551cb2306ba62a2", "message": "Merge pull request #74 from shanman190/reorder-project-dependencies\n\nRe-ordered remapped project references to be put at the end of the classpath"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/221d381f911836a20a7fab64332fb671a46a32dd", "message": "Fix suspected race condition in unit test"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/8d5b44acf89fc1da51ca73b1b71126038d11a7e3", "message": "Merge pull request #73 from jkschneider/master\n\nCustom tooling model is not adding classpath entries for gradleApi(), localGroovy()"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/71e7e1c125824e2fa1b154cdd7503081ab8486b0", "message": "Fix failing tests (junit version on classpath is now 4.12)"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/a0107914c88b56874579b83d94360c7bbf858125", "message": "STS-3981: refresh classpath container exported status"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/a907c2cebb344e72147c2cf13ea6195d35a032a1", "message": "Bugfix: sample project download cache location\n\nIt was meant to be in user.home dir but ended up being \nin plugin state location."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/ec8dcd0df9ba9a57b7bc22994763af7670915127", "message": "Merge branch 'master' into sts-tooling-model"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/9b37ffb577dd671067f18409c9528978b4877d6f", "message": "Merge pull request #69 from gamerson/master\n\nEnsure Gradle menu is available when contributing menu items"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/41bfaf27c61af8c3ce621043e986c496525bd221", "message": "Autobuilding + manual building causing test failure?"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/9a79dc944feaaf39a67d43072caff51166235e63", "message": "Fix test failures caused by classpath container state leaking between tests"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/9ef626540ddb4687cb56a9b96883e8a74de91caf", "message": "Merge branch 'master' into sts-tooling-model\n\nConflicts:\n\torg.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/classpathcontainer/GradleClassPathContainer.java"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/f35e7cdf3870794baa106a0bac843f46657967c1", "message": "Merge pull request #67 from spring-projects/STS-3960\n\nSTS-3960: make gradle classpath container refresh not block"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/a1e2c4d641ab44c8f78879f75a8c9b443e7f6434", "message": "Merge branch 'sts-tooling-model' of github.com:jkschneider/eclipse-integration-gradle into sts-tooling-model"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/21eb33f3b5d8642427a3bbd4e14e733648105a17", "message": "Felsh out multiproject remapping test"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/34e4755ee2a16099be913c1f311b4d69977d8480", "message": "Merge branch 'master' into sts-tooling-model"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/51e570039067fe6b917d51f0829543c997248d56", "message": "Add some more assertions to test remapping multiproject"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/591d2184e48af8311f501ba64fcf35be2019df06", "message": "Move jar remapping multi-project test to more logical place"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/74b4a1186a29337d3efc1b9b858f4c45204f68ea", "message": "Fix regression introduced by project -> jar remapping"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/b1a467e71f0af78e3f75a99ea518f2534f470cb5", "message": "Fix small problem with project -> jar mapping and test case"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/649e15ef5ef32a2f189ecb9229ed2c0a82544095", "message": "index all maps in custom builder by project path"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/926676151fb157acfcfcf3ae76d59a8aa2879512", "message": "Reneable project -> jar mapping code"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/39d7680a0158abc024bbda51a29e0db7e0899663", "message": "Merge branch 'sts-tooling-model' of github.com:jkschneider/eclipse-integration-gradle into sts-tooling-model"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/b8a3dd849bb215e5112268236c81a805c4f8148e", "message": "Project name is not 'unique' use 'getPath' as the key/id for\nproject dependency objects"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/c7e4bc7b9c023f17c16d95d07ac036d3ad1943d3", "message": "Add transitive project dependencies in custom tooling model"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/ec0e5e802d0a34e9827236b89bcc4a8d5051dc1e", "message": "Add FAILING  test case that shows project deps need to transitive if container\nis not exported."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/fe66835182c6f6f5f2b072ca4e25c5821431b356", "message": "Improve non-exported dependencies test project"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/8d875adf74ca797cb7a5b77e74893917fa043951", "message": "Add test for support of 'non-exported dependencies' using \ncustom tooling model"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/0632202830e40edd0dbfee4e46084bed90cdb127", "message": "Create an adapter that allows using either StsEclipseProject or\nEclipseProject to compute project classpath."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/eb626b48ec82e5d847463b67df9e79f7f987c543", "message": "Move GradleDependencyComputer to more logical pakcage"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/b1a17520e2308e03d8a9274ad0717343159e3c4f", "message": "Add 'jar remap in hierarchy' option to Gradle preferences page."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/a701c92f6e736f9956cfbf27b1d823966a14fc01", "message": "Custom tooling model init script conditional on preferences"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/cfa74595baf226aac5d5293d3d3a4604dd40ad34", "message": "Add 'init-script' stuffs back in."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/d4491c52eca886b43768b31315f9a30bb2e45804", "message": "REmove 'init-script' args for now. Will add back later."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/0bd1b955fa22fecc450d8acaf4219f0cdb0a7972", "message": "Organize imports"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/967d6341a47b6664fd6ce803ff95b7bb92f46658", "message": "Fix path in toolingapi integration test"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/f7c433eb1833109e031c5fc942f67baace49e50b", "message": "Add model build test with different gradle releases."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/931dd72d8315fb24a3881205238a2ba307db7dbd", "message": "Merge branch 'master' into sts-tooling-model"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/bb0c24dbe18d6946faba1d8949d1f92c39e6b51f", "message": "Delete outdated test"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/d9ab283043832400d4ae52d15cbca71685c2a42d", "message": "Merge branch 'master' into sts-tooling-model"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/5ba4297f5375c062712db0f4904fe5d24d0a23fb", "message": "Update spring-integration import test to recent version."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/16ac9be8d9102163f7ccbcbbd8cd6a38fa329fce", "message": "Try to fix bundleSources problem on CI build hosts."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/8f6236dbf1c1909853e35767bc8c47ce77caacbd", "message": "Remove 'bundleSource' configuration. Causes failures in CI builds."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/3d3318bf37ccf3021b38e7145cfb2c2ceaaeec8b", "message": "commons collections needed in toolingapi after all. Add it back"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/19b7c6789d84bf86730592f5c18dd2630fc2ae2b", "message": "commons collections needed in toolingapi after all. Add it back"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/7075cc344e76667d960d8f113252289d1f37fac6", "message": "commons collections needed in toolingapi after all. Add it back"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/cac45e4ac002b7af28506270a74b4ba878aa6fa0", "message": "Remove commons-collections dep from tooling api"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/5365a7e04f0e72e2db56119416cd72ba3102be0f", "message": "Merge branch 'sts-tooling-model' of github.com:jkschneider/eclipse-integration-gradle into sts-tooling-model"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/6ce79a6c6fdb86e718f748fb6a793605977648f7", "message": "Merge branch 'master' into sts-tooling-model\n\nConflicts:\n\torg.springsource.ide.eclipse.gradle.core.test/src/org/springsource/ide/eclipse/gradle/core/test/GradleTaskRunTest.java\n\torg.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleCore.java\n\torg.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleDependencyComputer.java\n\torg.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleModelProvider.java\n\torg.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleProject.java\n\torg.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/modelmanager/ToolinApiUtils.java\n\torg.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/preferences/GradlePreferences.java\n\torg.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/util/GradleProjectIndex.java\n\torg.springsource.ide.eclipse.gradle.toolingapi/embedded-libs.properties\n\torg.springsource.ide.eclipse.gradle.ui.taskview/src/org/springsource/ide/eclipse/gradle/ui/taskview/TaskLabelProvider.java\n\torg.springsource.ide.eclipse.gradle.ui.taskview/src/org/springsource/ide/eclipse/gradle/ui/taskview/TaskTreeContentProvider.java"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/06e4ac25a2aca1b0f09f5d8599500d2bfc8f8285", "message": "STS-3960: make gradle classpath container refresh not block\nother jobs while its fetching gradle model."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/f05839ebe5e8474e4513abd27be040655f409fb4", "message": "Merge branch 'master' of github.com:spring-projects/eclipse-integration-gradle"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/92d87ee4fcf8c3c2522201edde6ef2fa28256974", "message": "More debug info when check for Java 1.8 VM fails."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/6aee05e75a61206e2e797e6687be14b973f2dd0f", "message": "STS-3976: Icon to \"Open Tasks Quick Luancher\" throws Assertion failed excpetion"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/4a455ba563ef8942a5e6a6923a54870a92207c45", "message": "Make Jar mapping refresher job cancelable"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/a2ac5283346060d658a8f9039fbf6d620c7c5bd0", "message": "Use accessKey and secretKey property directly..\n\n.. to avoid picking up old accessKeys via intermediary property\ndist.accessKey"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/a45f5ea6d60e1439a64980c48f101f6e2a2f91d5", "message": "Add some echos to deployment logic for debugging"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/bbef52af56abb2da394070f85adbca11b4187318", "message": "Add some JVM locations for spring.io build hosts."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/5440094c98aaf17e88f0e38ef55cf2b20e6b7543", "message": "Tycho back to 0.19"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/00c7e3b1d634deddc3f55955d9b9246a5356af6b", "message": "Update tycho to 0.21"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/61124b4d381d9abb24e6a3fe4c3ae9c1e9215036", "message": "Add TODO comment about unexplained extra model build in test case."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/ed39f9e43d18ecb946e151ea000d1989b0ae8536", "message": "Fix failing test case"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/cd8665bd9c17b4d995b934c72d52a2155ce4bf16", "message": "Cleanup debug output"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/40446bc2e6b5fc9b850e9459659f41ca1f24abca", "message": "Merge branch 'master' of github.com:spring-projects/eclipse-integration-gradle"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/d896f9027316373776eb6cf3c4380ac83b76878f", "message": "Fix concurrency bug in model manager causing spurious test failures."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/93348284854e02fdec8cd166d51af274c501e9ec", "message": "Avoid building publications model if jar->gradle remapping is disabled."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/19ff723e16292b336ac2e91b8e529590772e38ed", "message": "Merge branch 'master' of github.com:spring-projects/eclipse-integration-gradle"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/0a5500b64b858a00a24a940bc3fc287365556c45", "message": "More debug output for failing test"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/adb05a43f5ae3de312a471e8b06b2cd073a7ed20", "message": "STS-3967: Open close listener for jar remapping\n\nDo not call publications model builds from classpath container\ndirectly. It causes GUI freezes."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/fb12e5eea883ce7b27bec4bff9c6baa2e39b6787", "message": "STS-3967: preference to control open-close listener"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/5d9eb8a7c970d7390500ae92a5a73401491b729e", "message": "Change point where adding root folder to history in GradleImportWizard.\n\nNow adding it when 'Build model' button is clicked instead of\non Wizard finish clicked. So even if wizard is not 'finsihed' meaningful\nselections can get added to history."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/c8916e634249313f1a7e3a8b48a025c950468445", "message": "Merge branch 'master' into andrask-master"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/9d35b7e271c84f104c9866507884b3ca1fd6485a", "message": "STS-3969 NPE in import wizard"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/aa6cbdf83da4afc51a2ba90b4d7b464b1f5c06b1", "message": "Cleanup unused imports"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/c38125db643fde75ac03305b7a27e386613722b4", "message": "Merge branch 'master' of github.com:andrask/eclipse-integration-gradle into andrask-master"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/a8cdb2f8b821c1292982150e032a146165b420ca", "message": "OpenClose listener jar remapping, maven support"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/ac843be6922094c5c8a75526f3e35bb7bd079d35", "message": "Merge branch 'master' into gradle-model-manager\n\nConflicts:\n\torg.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleProject.java"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/4c165835ee24c4910671e3dcded2c07f2c9e4668", "message": "Fix failing test case."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/ef5b5c6c99a7ea06ff63d3a5fb97b6992ecd2da5", "message": "Some extra debug output"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/beb877d1dc618cf284dc8d58178aadf6bcf30dd4", "message": "Handle spurious InterruptedException thrown by gradle."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/7d17b430b6d8b9689f8bf87ed03c3841f535830e", "message": "Major blowup of threads/jobs in 'quick refresh' for open-close listener\nFixed."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/8b1b7fe07c3ddc3816a3ef3938550d588da6a026", "message": "Few more fixes for test cases,"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/eec18cc2db254889c0852f8484108fca18e698c7", "message": "Fix failing test case"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/9e3b7b0037506948ff9377e8078ed73fb285d33d", "message": "Dropped new manager into main code, replacing old \nModelProviders. All compiles fine, but still some test failures\nto investigate."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/3c5e8821603e914b49c13ff0828da78e7dffe038", "message": "Merge branch 'master' into gradle-model-manager"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/e5ed7009b43a24a6a45abc75ebe9b205b2fa0030", "message": "Fix race condition in project prefs."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/6c23183c659c4626e82e96374f6fc5c7873b8a54", "message": "Model listener support"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/4260c39ced2df5b727a1fe071913125bcc37c3e2", "message": "Gradle model listener support"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/82212c25e243a9f9d82d5d509518537bff1ac087", "message": "Recovery from InconsistentProjectHierarchyException"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/caef7a324dfaf230911c7ee06f242f1cb2007f2f", "message": "Recovery from InconsistentProjectHierarchyException"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/f52a22cd9e5089628a313d115a0f9229d439d5a7", "message": "Back to locking-based solution\n  - remove BuildScheduler, it introduces race condtions\n  - Improve lockmanager: one per model type."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/649bd0c342501d7ded4b7b1cf67b81564ed8a654", "message": "Introduce 'BuildScheduler' keeps track of in progress builds to avoid\nduplicated work."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/70aa715681cea6a284f004d36452de28e2c1291d", "message": "Add some DefaultModelBuilder tests."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/6814f4aadc1ccb26cb779229d9b2972c91bc1c97", "message": "Merge branch 'master' into gradle-model-manager"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/b5e20aa87eab92d637d813b1798d884510d0bccd", "message": "Merge branch 'master' of github.com:spring-projects/eclipse-integration-gradle"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/5cf1d5eb24ba53e578502cd3367bd8153239d517", "message": "Fix some failing tests"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/bb33e91c2e6ddecb73be02d29e726612961ff5aa", "message": "Hookup ModelManager tests in main test suite."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/e752ecb25de596023d6c437fd80208e64d710d9d", "message": "Stable sorting for build family info stored in root project prefs."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/91d32a1c7343b700b3db4c38412e22942ea011a8", "message": "Fix potential NPE for unknown build family case"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/e8dbd48aafe23bf5bccbaf913bd65fe4421077e9", "message": "Progress towards new Gradle model manager"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/01e6921b8b00bfea22b8c6b0e979e57eee2145a7", "message": "Cleanup some comments."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/d540dd247740dc386f9eec153844389e9da93591", "message": "Update 'testSimpleTaskWithDifferentReleases' to run with more recent\nversions of Gradle"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/69e0f2ff2f8aaabc8dc30e2bb8efdb9460d0f5c2", "message": "Update sample projects to more recent."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/278e180933bd6ec79dd3249458e0a64bc0534a9c", "message": "Some references to EclipseProject where missed."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/f4f08aad96eb9681460cd5644a8824a5a107f83c", "message": "Finally a pom fix that works."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/3633228db2db0368680b94f990c0522db9df6c12", "message": "tooling api pom fix, attempt 2."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/35b5ad3c86f71a1316389a613e76a1222bbc1d70", "message": "remove unused gradle wrapper."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/5a0fa90634cc19467394c5175b13d3b34beeca1c", "message": "Fix toolingapi pom. Wrong working dir in exec gradle."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/67569deee990741d34f78e78aa570370aa9d537c", "message": "Revert some changes Jon committed by accident"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/98609efb18bb222a4cf773c0f761bebf8e0f7d00", "message": "Merge branch 'master' of github.com:spring-projects/eclipse-integration-gradle"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/b1d28a06642ea8a98ccf4d51d24be7edbf3f28dc", "message": "Regression test for jar-remap-gradle open-close listener"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/e18c9bc97966610d5aff031f6881a637b6d991d7", "message": "Move jar remapping options from project to global preferences"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/bc9bb4dc50213485d2bf191d3bb1394a5c06eb98", "message": "OpenClose listener to 'quick refresh' remapped jar/projects"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/a59e55d628180ecb18d77a481962f983c18a4a62", "message": "Fix NPE on deleted project"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/405f8e759095dc4e5ab783df1a6667746084bd29", "message": "Merge branch 'master' of github.com:spring-projects/eclipse-integration-gradle"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/04331c2a87a0a90e242d6e73f8c9fcb45a81484a", "message": "GradleSaveParticipant broke, fix it."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/22f660e46b74360f9f084e050266b5e07fcfd166", "message": "Merge branch 'master' of github.com:spring-projects/eclipse-integration-gradle"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/5d6cc1084995c1a5b0965b704a9c6859752aa930", "message": "Fix failing test case."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/308ed2ac4976692dd98601fcd6ad88576fb1a2fd", "message": "Add 'remap jar to gradle' option to project property page"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/d38ab97cd5f8ef78f2baaf46a0999192c1bc24f9", "message": "Remap jar to gradle project \n\n  - implemented\n  - regression test added"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/3b1acaa129431d33693652f06d182983e4d4fd22", "message": "Fix failing test"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/51a321a63f69ac3ee368da7eba85b448bc9da877", "message": "Fix failing test case"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/ecbc659097bc7b75d7e5625d5582a73eb43837da", "message": "Remove project entries from CP when adding CPC."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/db2d4af7bc95074eb6b980016d956ab552a1fc08", "message": "Fix test failure"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/b95642fe29411c567ce47359cca16ea9481d8c65", "message": "Fix test failure"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/0c38e385379aea33bb8c60b1444ef36f1e2afb6f", "message": "Also look inside CP container for project dependencies"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/b4e3ad1058fd9bd8576d6a51180c9a4603fdd833", "message": "Merge branch 'post-release' into STS-3818-project-deps-in-container\n\nConflicts:\n\torg.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleProject.java"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/24a3411d4a607e02976666085cfaafd4b40e5a64", "message": "WIP: partial test case for STS-2834"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/6934eea532a4b5b603fc37c8f1016342bff2d551", "message": "STS-3929: Refresh All disables dependency management"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/11cd84b4bd44e2f6b3ec58de54e228e081b5abf1", "message": "Fix failing test"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/447f33ab0e43209fb48fd0820a0f6b593af1c9c0", "message": "Try to get all tests passing again on CI builds."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/1fbf3b901e0793bf5c1b931e040e4bf67c1e6dce", "message": "Merge branch 'master' of github.com:jkschneider/eclipse-integration-gradle into jkschneider-master\n\nConflicts:\n\torg.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleProject.java\n\torg.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/TaskUtil.java\n\torg.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/classpathcontainer/GradleClassPathContainer.java\n\torg.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/launch/LaunchTerminationListener.java"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/5dcbe697a13b138bf9ab4ca99aa920f4a6cad017", "message": "Workaround for https://bugs.eclipse.org/bugs/show_bug.cgi?id=445122"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/4b296efd0a64b383fb8308882855c2dbb3f9d784", "message": "Merge branch 'master' of github.com:spring-projects/eclipse-integration-gradle"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/ed729aa61ef7993921d61a4e4e24c800e5790fe3", "message": "Revert changes relate t p2.inf workaround\n\nCauses side effects such as breaking Eclipse 'Uninstall' and 'Upgrade'."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/e2d574cabd73977eac49474940625ae8eb6acebb", "message": "Revert \"Automated tests run by Maven fix for 4.4.1\"\n\nThis reverts commit 66169bde6df6fb8dcd45fd66827e85953b596297."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/852f0209ca76a5d0ff91d1f630284f02a4c1d5cf", "message": "Use Groovy 2.3 compiler in test runs"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/3ede23cf33899e9ec352be57ae5337fe0a4c8d86", "message": "Run tests with Groovy 2.3 compiler since this is installed by default\nin current greclipse."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/010cbceea641dd0ccb83c739d343555389503515", "message": "Fix failing test"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/4c1a6052c0467ba1543f54a09e446639c37b82cc", "message": "Fix failing test"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/1c85e45863a0ddab3e8c0b91ebe20d510e28b39d", "message": "Add location for Java 6 on kdvolder machine"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/51076d29e446faa23f074ccf7bb41622fc7c3322", "message": "Fix test failure with recent greclipse"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/7fc833604cf4e2be2837f3e6ffe340e802d3e263", "message": "Fix test failure"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/20617196", "body": "Can you try selecting just the Gradle IDE feature for installation. I'm not sure why you are having trouble with those dependencies they should be on the update site. However, if you install just 'Gradle IDE' feature those dependencies are not needed. They are pulled in by the dashboard and UAA components which are optional and you don't really need them to use the gradle tooling.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/20617196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/20617930", "body": "Update: I just tried installing from the milestone site into a brand-new Eclipse 4.3 classic.\n\nI get a similar error as you report if I select everything under \"Extensions / Gradle Integration\". If I select only \"Gradle IDE\" then it installs ok.\n\nSo it seems something is indeed missing on that update site to satisfy dependencies for the Dashboard and/or UAA. I'll look into it a bit more. \n\nBut as suggested before, you probably don't really need them. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/20617930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/20618105", "body": "The actual error I get is this: \n\n```\n Cannot complete the install because one or more required items could not be found.\n Software being installed: SpringSource Dashboard (optional) 3.3.0.201306020927-M2 \n        (org.springsource.ide.eclipse.dashboard.feature.group 3.3.0.201306020927-M2)\n Missing requirement: SpringSource Tool Suite (UI) 3.3.0.201306020927-M2 \n     (org.springsource.ide.eclipse.dashboard.ui 3.3.0.201306020927-M2) requires 'package org.springframework.util \n     [3.0.5.RELEASE,4.1.0)' but it could not be found\n Cannot satisfy dependency:\n    From: SpringSource Dashboard (optional) 3.3.0.201306020927-M2 \n        (org.springsource.ide.eclipse.dashboard.feature.group 3.3.0.201306020927-M2)\n    To: org.springsource.ide.eclipse.dashboard.ui [3.3.0.201306020927-M2] \n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/20618105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/20618622", "body": "Can't really go back in time and fix milestone release. But I'll figure out and fix the nightly update site. It seems to have similar problems with missing dependencies for UAA and Dashboard.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/20618622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/22647168", "body": "The gradle tooling doesn't really have  much Eclipse version specific code. It should be possible to install the gradle tooling into Kepler. We don't yet have an update site with all dependencies for Keppler.\n\nHowever if you _only_ select the gradle tooling bits from the generic update site it will probably install without problems into Kepler.\n\nUse this update site: http://dist.springsource.com/release/TOOLS/gradle\n\nAnd install only the \"Gradle IDE\" piece under \"Extensions / Gradle Integration\"\n\nIf you hit problems with missing dependencies I can help you figure out where to get them. But likely it will just install.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/22647168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/22714817", "body": "The gradle tooling api doesn't tell us which dependencies are 'provided' so we can't treat them specially in the container.\n\nHowever, I think this case has come up before and a workaround has been implemented.\n\nJust open the Gradle >> WTP preferences page. Add some regexp's there to match the jars you don't want to deploy.\n\nDoes that work for you? \n\nI'll cose this issue now, can reopen if this doesn't work for you.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/22714817/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/22715110", "body": "> 1) try to disable Gradle daemon\n\nNot possible. The tooling API always uses the daemon. It can't be disabled.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/22715110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/22715197", "body": "Closing: this is a duplicate of STS issue linked above.\n\nAlso most likely its not really a bug in STS tooling but a problem that needs to be sorted out between gradle tooling API / daemon and lombok.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/22715197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24174010", "body": "Unfortunately I don't have much useful information to share. I don't know if ADT the STS Gradle plugin and gradle android plugin work well together.\n\nIf the Gradle Dependencies container disapeared it probably means it is empty and has no dependencies. I think in that case Eclipse will not display it.\n\nEither there are no dependencies or the gradle android plugin deals with dependencies differently and they are not visible to the tooling via the tooling API. \n\nIf the dependency container does not work, your best bet is probably to to disable 'Dependency Management'  from the gradle menu and then do a 'Refresh All' (also from the gradle menu). This will use Gradle 'cleanEclipse' and 'eclipse' tasks to generate eclipse metadata rather than the tooling API. \n\nPossibly this might work better, assuming that gradle android plugin has the ability to generate eclipse metadata.\n\nI can't promise this will work. I don't know much about ADT or the Gradle Android plugin. Maybe ask around gradle forums and other places where developers of the gradle android plugin and ADT might hang out.\n\nIt is possible that STS Gradle plugin won't work well together with these tools no matter how you set it up. But I am open to trying to fix that if specific problems can be identified.\n\nSorry I can't be more helpful at this time.\n\nKris\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24174010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24820121", "body": "It is probably a good idea to update to later version of tooling API. However if a project requires a specific version of gradle you should be using the gradle wrapper mechanism. That way you can specify as part of your project's build what version of gradle should be used.\n\nIf you do not use the wrapper to specify a version, you are essentially saying you don't care what version should be used.\n\nI've opened a ticket to update the tooling API version (which will change the default version of gradle used if its not specified by the user or project).\n\nhttps://issuetracker.springsource.com/browse/STS-3565\n\nClosing this issue.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24820121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24822946", "body": "The elements in the container are sorted alphabetically. I checked the code and the sorting is based on the full path rather than the name of the jar. Maybe that is not logical and it can be changed (it tends to end up soring based on 'group' first and then 'name' in the case of maven dependencies because the group name appears first in the path and the rest before that is identical).\n\nAlso, if you rather get the dependencies in the exact order as returned by gradle you can disable the sorting in the project's properties. Right click project and go to \"Properties >> Gradle >> Classpath sorting\".\n\nIf you disable the sorting I am not sure you will get the behavior you expect. The reason the sorting was put in is that gradle tends the return dependencies in an order that is unpredictable and depends on the OS. \n\nWith the sorting turned on at least you will get the same order for users on win / mac / linux.\n\nHowever I do think there are ways for you to explicitly control the order from the build script if you are determined enough. Just don't ask me how :-)\n\nIt might also be that the problem this sorting was trying to addres no longer exists in more recent version of gradle. If that's the case we should probably disable sorting by default or even remove this feature completely.\n\nPlease try out the 'sorting disabled' setting and let me know if it works as you expected (and whether you think it should be turned off by default).\n\nKris\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24822946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24823209", "body": "PS: Sorry it took me a long time to notice your issue. This is not the right place for raising issues so I don't look in here often. In the future please raise issues here: https://issuetracker.springsource.com/browse/STS\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24823209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24823641", "body": "The question is whether this is a bug in the STS tooling, the gradle tooling API, the tomcat plugin or gradle itself.\n\nThe first thing to try is if you get a similar error doing the same thing on the commandline. e.g try to generate eclipse metadata on the commandline with the 'gradle eclipse' plugin by running tasks './gradlew cleanEclipse eclipse'.\n\nWhile not exactly the same, this is probably the closest you can get to doing the 'build model' step in the tooling from the commandline.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24823641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24823768", "body": "BTW: I have hunch maybe the tomcat plugin might not be compatible with the version of Gradle you are trying to run it with. The stacktrace suggest an API incompatiblity (i.e. someone is calling a method that doesn't exist).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24823768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24830856", "body": "Yes, that does make the most sense, but I didn't implement the sorting on a whim. It was requested by a user.\n\nIt is possible the ordering issue this is trying to avoid no longer exists however. It was implemented quite a long time ago. Gradle has seen a lot of changes / improvement since then.\n\nIf that's the case flipping the default to not sorting things would probably be best.\n\nSince you seem to have a situation where the order matters, maybe you can confirm things work right for you if the option is turned off. That is an interesting data point :-)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24830856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24831782", "body": "I dug up the old issue: https://issuetracker.springsource.com/browse/STS-2175\n\nReading through it, the motivation for the sorting was unpredictable order in project type dependencies (not jar dependencies).\n\nMaybe the sorting strategy shouldn't be applied as aggressively as it currently is. For example, maybe it should not be applied to elements inside the container. But it probably still makes sense to keep the entries in the .classpath file in a kind of sorted/predictable order.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24831782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24832228", "body": "More reading through the old issue, now I actually think the reason for the unstable ordering may have been the users build script! He mentioned having some code iterating a directory to create project dependencies. \n\nMore and more making a case for switching the sorting off by default.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24832228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24832720", "body": "I've raised an issue in STS issue tracker to fix this. Closing this issue here.\nThanks for reporting and following up. Your input is most valuable!\n\nhttps://issuetracker.springsource.com/browse/STS-3567\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24832720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24937302", "body": "Okay, in that case I suggest you use the gradle wrapper on your project. If the wrapper properties are present. The tooling API will use the gradle version they stipulate. That way you won't have an issue with using the wrong gradle version. \n\nThe problem you are hitting is because Gradle tooling API we use is still at 1.5 you end up using 1.5 by default.\n\nIf you add the gradle wrapper and set it to use 1.6 then the tooling API will use 1.6 and the problem will go away.\n\nIt is generally a good idea to add the wrapper to your project to explicitly define what version of gradle it should use.\n\nOtherwise you are just taking your chances with the default.\n\nI'm closing this issue as it seems there's no bug here :-) \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24937302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/26914071", "body": "Maybe the installer is corrupted. Could you try re-downloading it?\n\nAlso if the issue persists, this is not a problem with Gradle tooling but a problem with Spring Tool suite distribution. You can report the issue in the proper place, the STS issue tracker:\n\nhttps://issuetracker.springsource.com/browse/STS\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/26914071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/32180365", "body": "> I wonder why Eclipse wants to get gradle 1.5 when I have 1.9 installed on PATH ?\n\nIt uses the default that the embedded Gradle tooling API chooses. You can override the default via the gradle preferences page in Eclipse.\n\nGenerally Eclipse does not pick up things from your PATH variable. You have to tell Eclipse via preferences pages which versions of a runtime to use.\n\n> Is recommendation to build first outside of Eclipse?\n\nThat would probably help since a lot of information will be cached by gradle making the next build much faster. However it will still need a decent network connection because even though dependencies are cached locally I think gradle will still verify them again (which is faster than downloading them but still needs network access).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/32180365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/32208827", "body": "This is an issue with Gradle not the tools. It is discussed here:\nhttp://forums.gradle.org/gradle/topics/import_project_into_eclipse_with_sts_using_gradle_wrapper_ignores_jvm_property_dgradle_user_home\n\nUnfortunately it seems none of the gradle devs has picked it up however. It seems to have fallen thorugh the cracks of the gradle forum.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/32208827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/32209288", "body": "Duplicate: http://issues.gradle.org/browse/GRADLE-2988\n\nI just raised the issue on gradle issue tracker as no-one seems to be paying attention to that forum thread.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/32209288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/32625987", "body": "Duplicate of https://issuetracker.springsource.com/browse/STS-2712\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/32625987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/32626636", "body": "I'm closing his issue. \n\nThis is really a known issue and there isn't much that can be done without major architectural changes to how the tools work.\n\nI do appreciate however you raising the issue. You are not the first to complain about this kind of problem and its something we'll keep in mind towards the future.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/32626636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/33145708", "body": "We don't have plans of our own to support this directly. A while ago I did hear from some Android folk expressing an interest in eclipse-integration-gradle project and mentioned they might want to contribute via pull requests. This was several months ago though and I have not heard anything since.\n\nThere is some activity on this issue: https://issuetracker.springsource.com/browse/STS-3659\n\nIf that issue is resolved that might make it easier for third parties to independently provide plugins to support all kinds of different project types with gradle + eclipse.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/33145708/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/33971290", "body": "There are no real plans for this. But feel free to raise a Jira ticket (feature request ticket) for this. That is a way to get it on the radar screen and get a sense how many people are interested in this (votes / watchers).\n\nThe STS issue tracker is here:\nhttps://issuetracker.springsource.com/browse/STS\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/33971290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/35648360", "body": "Hi Niklaus, \n\nIf it works correctly on commandline but incorrectly in the IDE then it may indeed be some bug in the IDE.\nHowever this isn't the right place for a bug report. Please go to our Jira issue tracker instead:\nhttps://issuetracker.springsource.com/browse/STS\n\nAlso please try to provide as clear a description of the problem and how to reproduce it as possible.\nI will look into it for sure but I don't have time to wade through the history of your other report and try to synthesize a good description of the issue and a recipe to reproduce.\n\nSo what I'd like you to do is attach a small sample project for me to import into Eclipse with the tooling and some detailed instructions how precisely to import it (what options are selected in the wizard).\n\nThen tell me exactly what is wrong with the result (i.e. difference between expected / actual behavior) and also some steps to verify the commandline produces the expected behavior.\n\nI will then go and debug to try and figure out where the discrepancy is coming from.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/35648360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/35648725", "body": "... and also some steps to verify the commandline produces the expected behavior.\n\nActually scrap that. This part is obvious enough that you don't have to explain.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/35648725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/35909936", "body": "Okay that would be great. Raise a Jira ticket when you have more details available.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/35909936/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/37033551", "body": "If you download a gradle distribution and unzip it, then point at that, it will work.\nAlso if you paste the url to a download zip on the internet, that should also work (it will be downloaded and unzipped on your behalf).\n\nAlso... the recommended way of specifying which gradle version to use is to add the gradle wrapper to your build itself so that your build is 'self contained' and doesn't depend whichever random gradle installation is the default in a users particular environment to match what your build expects.\n\nNevertheless changing how we 'validate' a local gradle installation isn't unreasonable or hard to do. Do you have a good suggestion of what files we _should_ look for to recognize with some certainty that what the user pointed to is in fact a gradle installation and not some random folder?\n\nI'll gladly change those few lines of code if you have a better idea.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/37033551/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/37034846", "body": "Just wanted to make something clear. The tools don't actually need the gradle.sh or bat scripts. So they don't need to actually know where they are. The checks are in a sense not necessary. They are just there to validate to some degree the user points to a real gradle installation.\n\nSo indeed it is not hard to change these checks. The only tricky bit is finding some other thing to look for that you would expect to see that would give you good confidence the installation is not just a random folder.\n\nIn my defense.. I think the checks do meet a distribution as it is downloaded. If the checks fail it means you have modified it by moving or removing files. Why can't you just leave the distribution intact? Instead of moving the binary scripts around to different places, you should be able to symlink them instead.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/37034846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/37199883", "body": "Is the bin gradle file inside the gradle distribution folder? I understood from your earlier message that is not, but it is moved to another bin folder? If it is in fact in the gradle distribution then I could change the validity check to look for either the gradle shell or gradle.bat so that if either one is there it counts as 'valid'.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/37199883/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/37427407", "body": "I will change the check so if either shell or bat script is there it passes. After all if you have a case where you remove the .bat file some people on windows might think of doing the opposite thing and only keep the .bat file.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/37427407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/37669151", "body": "I've raised a ticket here: \nhttps://issuetracker.springsource.com/browse/STS-3746\n\nWe don't really use github issues as our 'real' issue tracker. So I'm closing the github issue now as a 'duplicate'.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/37669151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/37947506", "body": "See https://issuetracker.springsource.com/browse/STS-2380\nWe don't really use github as our issue tracker. So this github issue is really a duplicate of the one above.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/37947506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/38941067", "body": "> The system is Ubuntu 12.04 and Eclipse 4.2.\n\nCan you be more precise. Eclipse distributions, come in several flavors. JEE, RCP etc. Which flavour is yours?\n\nAlso how are you installing the tools. Via marketplace? From a update site? Which update site?\n\nIf you give me those details I can try to reproduce the installation issue and attempt to fix it at source (i.e. make sure missing dependency is available on the update site).\n\nIn the mean time you can probably work around the problem. There are two options you can try:\n1. only install gradle tooling, do not installt the 'optional' dashboard and UAA components. You most likely do not need them. And if you don't install them the error above will probably go away because it is via these components that the jackson dependency is being pulled in.\n2. Add this update site to your 'Avaliable Software Sites'. (In Preferences >> Install / Update >> Available Software Sites)\n      http://download.eclipse.org/tools/orbit/downloads/drops/R20140114142710/repository/\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/38941067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/38979366", "body": "> To be honest I didn't know that I probably will not need the dashboard and UAA components so I've tried to install them also together with Gradle tooling.\n\nYes of course. And this should work. It doesn't then there must be something missing from the update site. \nI was just suggesting not installing them as a quick workaround.\n\nThanks for the details. I can probably reproduce and fix the issue with that information.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/38979366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39218779", "body": "Thanks.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39218779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39472109", "body": "Duplicate: https://issuetracker.springsource.com/browse/STS-3037\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39472109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39473130", "body": "You will need to provide more details. I have no idea what your problem is. Describe precisely what it is you are trying to do, and what goes wrong.\n\nI will say however that the tooling don't run gradle by executing a shell process like './gradlew ...'. It uses the gradle tooling API. The tooling API will not use the wrapper but it will read the wrapper.properties file and obey it. That is, unless you do something non-standard to your project, like editing the wrapper script and move the wrapper files to a non-standard location. In that case gradle tooling api will not be able to find the wrapper properties and not obey them.\n\nSince your description of the problem is a little vague, I really don't know if this information is relevant to your issue, but its the best I can do.\n\nIf you have a problem with a specific project, it would help to include a sample project (cut down version of your project that still demonstrates the issue). I can then try to reproduce and diagnose the problem.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39473130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39510117", "body": "Just to clarify something that is probably not obvious. THe \"Convert To Gradle Project\" doesn't really convert Java projects to Gradle projects. All it does is enable the Gradle tooling on a project by adding \"Gradle Nature\".\nFor the project to work properly it really already has to be a Gradle project (i.e. have a build.gradle file).\n\nIf you wanted to create a simple Java gradle project you would be better to use 'New Gradle Project' and choose the 'Java Quickstart' sample.\n\nIf you have an existing gradle project and want to get it inside of Eclipse. Then you should import it with Gradle Import Wizard. You should rarely have to use the 'Convert to Gradle Project' menu.\n\nThe hanging thing, of course, is an issue regardless.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39510117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39510581", "body": "Do you have any Firewall or Network proxy in your network environment? It is possible this is actually causing the hang. It could be interferring with either Gradle tooling connecting locally to the Gradle daemon or the gradle daemon connecting to the internet. Either one of these could cause the process to hang.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39510581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39510842", "body": "To diagnose the hang it is useful to collect a stacktrace. 'jps' and 'jstack' are commandline tools part of the JDK that will allow you to determine the process id of a Java process (jps) and then extract a stackdump (jstack).\n\nCan you try to collect a stack dump of the hanging Eclipse instance as well as the Gradle Daemon.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39510842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39511836", "body": "Possibly related: https://issuetracker.springsource.com/browse/STS-3495\nThat particular problem is reportedly fixed in recent version of Gradle.\n\nThis is not the first and only time I've heard of issues connecting to the daemon on Windows.\nBut I can't find other bug tickets at this time.\n\nThe problem is usually not a bug in the tooling but something else preventing the connection between eclipse and the daemon.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39511836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39512538", "body": "Okay... one more idea. When you use 'gradle wrapper default' it will need to download a gradle distribution (the first time a gradle operation is used).\n\nSince you say you specifically have problem with that scenario... Maybe the problem is the distribution either can't be downloaded or just takes a very long time because you have a slow internet connection.\n\nAll of these ideas are only guesses. The stacktraces will help determine what's going on.\n\nPS: I just tried the 'convert to Gradle project' and it works for me. I do see a bit of a pause around 25% also, which I think is the 'download gradle step' but I have fast enough internet connection it is only a few seconds.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39512538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39582536", "body": "> I never made that, can you please explain how I do that with Eclipse so I\n> don't have to research be myself and can focus on sending you the logs fast.\n\nYou don't do that with eclipse. You do it with commandline tools jps and\njstack. They are easy to use and are probably already installed on your\nmachine.\nJust google or read their man page. I understand you may not feel like\ndoing that, but we are just as busy as you... and this seems to be\na problem that specifically affects you so you will have to do some\n'legwork' if you want our help trying to diagnose and fix it.\n\nOn Fri, Apr 4, 2014 at 12:59 AM, MBurchard notifications@github.com wrote:\n\n> Good Morning,\n> so many comments during the night, so I'll give my best to respond.\n> \n> BTW, is that your initial setup? Eclipse for JEE dev + Groovy Eclipse +\n> Gradle Eclipse Integration?\n> \n> What do you mean with initial setup? I used to work with Eclipse for JEE\n> for years now. Since Spring 4 was released and all those good small\n> tutorials with Gradle came up, I installed Gradle IDE and cause the scripts\n> are groovy I also installed Groovy Eclipse.\n> \n> Just to clarify something that is probably not obvious. THe \"Convert To\n> Gradle Project\" doesn't really convert Java projects to Gradle projects.\n> All it does is enable the Gradle tooling on a project by adding \"Gradle\n> Nature\".\n> For the project to work properly it really already has to be a Gradle\n> project (i.e. have a build.gradle file).\n> \n> I know that. I used to write a small build.gradle and then using the\n> Gralde Import wizard, but the given example shows the problem in the\n> simplest possible scenario.\n> Also importing is not possible, It stuck after clicking on Build Model.\n> \n> # build.gradle\n> \n> apply plugin: 'java'\n> sourceCompatibility = 1.7\n> repositories {\n>     mavenCentral()\n>     mavenLocal()\n> }\n> \n> [image: gradle import stuck]https://cloud.githubusercontent.com/assets/4256302/2612585/5e10cd7a-bbc6-11e3-8f31-a0633ca705f2.png\n> \n> Do you have any Firewall or Network proxy in your network environment?\n> \n> In the office we have a firewall, but Gradle and Gradle Wrapper is working\n> from the commmand line.\n> At Home I don't have a firewall.\n> In Addition there is the standard Windows firewall but with default\n> settings. It asked my sometime before when starting with Gradle but since\n> then it's quiet.\n> The Problem is always there, not only in the office or at home.\n> \n> Okay... one more idea. When you use 'gradle wrapper default' it will need\n> to download a gradle distribution (the first time a gradle operation is\n> used).\n> Since you say you specifically have problem with that scenario... Maybe\n> the problem is the distribution either can't be downloaded or just takes a\n> very long time because you have a slow internet connection.\n> \n> The distribution was downloaded before. In addition my Internet connection\n> speed is always more then 25 MBit/s.\n> An additional information at this point. If I use the following\n> build.gradle\n> \n> apply plugin: 'java'\n> sourceCompatibility = 1.7\n> repositories {\n>     mavenCentral()\n>     mavenLocal()\n> }\n> task wrapper(type: Wrapper) {\n>         gradleVersion = '1.10' # 1.11 is also working here\n> }\n> \n> And have the wrapper initialized by command line gradle wrapper the\n> import will succeed and not stuck.\n> \n> To diagnose the hang it is useful to collect a stacktrace. 'jps' and\n> 'jstack' are commandline tools part of the JDK that will allow you to\n> determine the process id of a Java process (jps) and then extract a\n> stackdump (jstack).\n> \n> I never made that, can you please explain how I do that with Eclipse so I\n> don't have to research be myself and can focus on sending you the logs fast.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/spring-projects/eclipse-integration-gradle/issues/28#issuecomment-39540375\n> .\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39582536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/41291612", "body": "That may be the case but I don't think this is an issue with the gradle tooling. You can try and complain to Atlassian about Jira being slow.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/41291612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/41295192", "body": "Paul I appreciate you raising these issues. It is very valuable to get reports like these. \nHowever we use Jira rather than the github issue tracker. Please raise your issues on the STS Jira tracker.\n\nOtherwise one of us ends up having to create corresponding tickets on the Jira tracker and copy or link the information. Time we spend doing this we might otherwise spend on fixing issues.\n\nFYI: Jira tracker is here: https://issuetracker.springsource.com/browse/STS\n\nI've raised this issue here and closing this one as 'duplicate':\nhttps://issuetracker.springsource.com/browse/STS-3811\n\nI'd appreciate it if you did the same for your other open github issues.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/41295192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/41296478", "body": "Closing issue. Cannot reproduce /fix without more info.\n\nIf you have more info that may help please raise a new issue ticket on the STS issue tracker:\nhttps://issuetracker.springsource.com/browse/STS\n\nWhile we do keep an eye on the github tracker, it is not our main issue tracker. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/41296478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/41416919", "body": "Right... thans for the info. \n\nThis issue had been closed as a duplicate of https://issuetracker.springsource.com/browse/STS-2712\n\nBut it seems STS-2712 was left open even though this is already fixed. I added some comments to it and closed it.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/41416919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/41706225", "body": "Looks like maybe a Windows specific problem. I have not seen it on Linux either.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/41706225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/42682016", "body": "Tried merging but after merging code into master it doesn't even compile, let alone run regression tests. The errors are below:\n\n[ERROR] Failed to execute goal org.eclipse.tycho:tycho-compiler-plugin:0.19.0:compile (default-compile) on project org.springsource.ide.eclipse.gradle.core: Compilation failure: Compilation failure:\n[ERROR] /home/kdvolder/commandline-dev/open-sts/eclipse-integration-gradle/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/dsld/SuppressUnderliningTypeLookup.java:[23]\n[ERROR] public class SuppressUnderliningTypeLookup extends AbstractSimplifiedTypeLookup {\n[ERROR] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[ERROR] AbstractSimplifiedTypeLookup cannot be resolved to a type\n[ERROR] /home/kdvolder/commandline-dev/open-sts/eclipse-integration-gradle/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/dsld/SuppressUnderliningTypeLookup.java:[30]\n[ERROR] public void initialize(GroovyCompilationUnit unit, VariableScope topLevelScope) {\n[ERROR] ^^^^^^^^^^^^^^^^^^^^^\n[ERROR] GroovyCompilationUnit cannot be resolved to a type\n[ERROR] /home/kdvolder/commandline-dev/open-sts/eclipse-integration-gradle/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/dsld/SuppressUnderliningTypeLookup.java:[30]\n[ERROR] public void initialize(GroovyCompilationUnit unit, VariableScope topLevelScope) {\n[ERROR] ^^^^^^^^^^^^^\n[ERROR] VariableScope cannot be resolved to a type\n[ERROR] /home/kdvolder/commandline-dev/open-sts/eclipse-integration-gradle/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/dsld/SuppressUnderliningTypeLookup.java:[42]\n[ERROR] protected TypeAndDeclaration lookupTypeAndDeclaration(ClassNode declaringType, String name, VariableScope scope) {\n[ERROR] ^^^^^^^^^^^^^^^^^^\n[ERROR] TypeAndDeclaration cannot be resolved to a type\n[ERROR] /home/kdvolder/commandline-dev/open-sts/eclipse-integration-gradle/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/dsld/SuppressUnderliningTypeLookup.java:[42]\n[ERROR] protected TypeAndDeclaration lookupTypeAndDeclaration(ClassNode declaringType, String name, VariableScope scope) {\n[ERROR] ^^^^^^^^^\n[ERROR] ClassNode cannot be resolved to a type\n[ERROR] /home/kdvolder/commandline-dev/open-sts/eclipse-integration-gradle/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/dsld/SuppressUnderliningTypeLookup.java:[42]\n[ERROR] protected TypeAndDeclaration lookupTypeAndDeclaration(ClassNode declaringType, String name, VariableScope scope) {\n[ERROR] ^^^^^^^^^^^^^\n[ERROR] VariableScope cannot be resolved to a type\n[ERROR] /home/kdvolder/commandline-dev/open-sts/eclipse-integration-gradle/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/dsld/SuppressUnderliningTypeLookup.java:[44]\n[ERROR] return new TypeAndDeclaration(VariableScope.OBJECT_CLASS_NODE, VariableScope.OBJECT_CLASS_NODE);\n[ERROR] ^^^^^^^^^^^^^^^^^^\n[ERROR] TypeAndDeclaration cannot be resolved to a type\n[ERROR] /home/kdvolder/commandline-dev/open-sts/eclipse-integration-gradle/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/dsld/SuppressUnderliningTypeLookup.java:[44]\n[ERROR] return new TypeAndDeclaration(VariableScope.OBJECT_CLASS_NODE, VariableScope.OBJECT_CLASS_NODE);\n[ERROR] ^^^^^^^^^^^^^\n[ERROR] VariableScope cannot be resolved to a variable\n[ERROR] /home/kdvolder/commandline-dev/open-sts/eclipse-integration-gradle/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/dsld/SuppressUnderliningTypeLookup.java:[44]\n[ERROR] return new TypeAndDeclaration(VariableScope.OBJECT_CLASS_NODE, VariableScope.OBJECT_CLASS_NODE);\n[ERROR] ^^^^^^^^^^^^^\n[ERROR] VariableScope cannot be resolved to a variable\n[ERROR] 9 problems (9 errors)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/42682016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/44538754", "body": "Duplicate of: https://issuetracker.springsource.com/browse/STS-2834\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/44538754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/44675109", "body": "Duplicate: https://issuetracker.springsource.com/browse/STS-2829\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/44675109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/45633438", "body": "Try unchecking the boxes 'Group Items by category' and 'Hide items that are already installed'. Maybe you'll see more stuff.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/45633438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/45633819", "body": "It does seem to work for me: \n![install-gradle-tooling](https://cloud.githubusercontent.com/assets/1002156/3232922/55a8f1ea-f0b8-11e3-8f45-4c8cb273d05e.png)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/45633819/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/45638626", "body": "It looks to me like you have some network issues. Something is blocking you from accessing the update site. Maybe firewall / proxy issues?\n\nIf you are in network environment behind firewall you may need to configure eclipse network settings to configure proxies.\nSee 'window >> preferences >> General >> Network Connections'.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/45638626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/46500041", "body": "You can probably install it from the update site or eclipse market place, just like you would in a 'regular eclipse'.\nUpdate site info is here: https://github.com/spring-projects/eclipse-integration-gradle\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/46500041/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/50770581", "body": "As I said there's not much that we can do. The only way we can have a chance of getting some idea what is getting stuck is if you collect a trace of the stuck processes. That may shed some light.\nEven then I can't promise you anything.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/50770581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/51368194", "body": "Does this look correct:\n\n```\n    drwxrwxr-x 2 kdvolder kdvolder   4096 Aug  6 10:22 .\n    drwxrwxr-x 4 kdvolder kdvolder   4096 Aug  6 10:22 ..\n    -rw-rw-r-- 1 kdvolder kdvolder   4467 Jul 29 13:04 aopalliance-1.0.jar\n    -rw-rw-r-- 1 kdvolder kdvolder  60282 Jul 29 13:48 classmate-1.0.0.jar\n    -rw-rw-r-- 1 kdvolder kdvolder 574278 Jul 29 13:48 hibernate-validator-5.0.3.Final.jar\n    -rw-rw-r-- 1 kdvolder kdvolder  35058 Jul  9 11:52 jackson-annotations-2.3.0.jar\n    -rw-rw-r-- 1 kdvolder kdvolder 199621 Jul 29 13:48 jackson-core-2.3.3.jar\n    -rw-rw-r-- 1 kdvolder kdvolder 915481 Jul 29 13:48 jackson-databind-2.3.3.jar\n    -rw-rw-r-- 1 kdvolder kdvolder 659343 Aug  6 10:07 javassist-3.16.1-GA.jar\n    -rw-rw-r-- 1 kdvolder kdvolder  60796 Jul 29 13:48 jboss-logging-3.1.1.GA.jar\n    -rw-rw-r-- 1 kdvolder kdvolder  16519 Jul 29 13:03 jcl-over-slf4j-1.7.7.jar\n    -rw-rw-r-- 1 kdvolder kdvolder   4730 Jul 29 13:03 jul-to-slf4j-1.7.7.jar\n    -rw-rw-r-- 1 kdvolder kdvolder  24220 Jul 29 13:03 log4j-over-slf4j-1.7.7.jar\n    -rw-rw-r-- 1 kdvolder kdvolder 270750 Jul 29 13:03 logback-classic-1.1.2.jar\n    -rw-rw-r-- 1 kdvolder kdvolder 427729 Jul 29 13:03 logback-core-1.1.2.jar\n    -rw-rw-r-- 1 kdvolder kdvolder 227997 Aug  6 10:07 ognl-3.0.6.jar\n    -rw-rw-r-- 1 kdvolder kdvolder  29257 Jul 29 13:03 slf4j-api-1.7.7.jar\n    -rw-rw-r-- 1 kdvolder kdvolder 273449 Jul 29 13:03 snakeyaml-1.13.jar\n    -rw-rw-r-- 1 kdvolder kdvolder 352813 Jul 29 13:04 spring-aop-4.0.6.RELEASE.jar\n    -rw-rw-r-- 1 kdvolder kdvolder 670225 Jul 29 13:03 spring-beans-4.0.6.RELEASE.jar\n    -rw-rw-r-- 1 kdvolder kdvolder 317609 Jul 29 13:03 spring-boot-1.1.4.RELEASE.jar\n    -rw-rw-r-- 1 kdvolder kdvolder 341668 Jul 29 13:03 spring-boot-autoconfigure-1.1.4.RELEASE.jar\n    -rw-rw-r-- 1 kdvolder kdvolder   2151 Jul 29 13:03 spring-boot-starter-1.1.4.RELEASE.jar\n    -rw-rw-r-- 1 kdvolder kdvolder   2183 Jul 29 13:03 spring-boot-starter-logging-1.1.4.RELEASE.jar\n    -rw-rw-r-- 1 kdvolder kdvolder   2244 Aug  6 10:07 spring-boot-starter-thymeleaf-1.1.4.RELEASE.jar\n    -rw-rw-r-- 1 kdvolder kdvolder   2212 Jul 29 13:48 spring-boot-starter-web-1.1.4.RELEASE.jar\n    -rw-rw-r-- 1 kdvolder kdvolder 977762 Jul 29 13:04 spring-context-4.0.6.RELEASE.jar\n    -rw-rw-r-- 1 kdvolder kdvolder 976992 Jul 29 13:03 spring-core-4.0.6.RELEASE.jar\n    -rw-rw-r-- 1 kdvolder kdvolder 205365 Jul 29 13:04 spring-expression-4.0.6.RELEASE.jar\n    -rw-rw-r-- 1 kdvolder kdvolder 672855 Jul 29 13:48 spring-web-4.0.6.RELEASE.jar\n    -rw-rw-r-- 1 kdvolder kdvolder 662596 Jul 29 13:48 spring-webmvc-4.0.6.RELEASE.jar\n    -rw-rw-r-- 1 kdvolder kdvolder 789626 Aug  6 10:07 thymeleaf-2.1.3.RELEASE.jar\n    -rw-rw-r-- 1 kdvolder kdvolder  24141 Aug  6 10:07 thymeleaf-layout-dialect-1.2.5.jar\n    -rw-rw-r-- 1 kdvolder kdvolder 218637 Aug  6 10:07 thymeleaf-spring4-2.1.3.RELEASE.jar\n    -rw-rw-r-- 1 kdvolder kdvolder 132548 Aug  6 10:07 unbescape-1.0.jar\n    -rw-rw-r-- 1 kdvolder kdvolder  63777 Jul 29 13:48 validation-api-1.1.0.Final.jar\n```\n\nThis is what I get deploying the convert-jar-to-war example after importing it using the 'Import Getting Started Content' wizard.\n\nI think your problem is because you are using Gradle Tooling with 'Dependency Management' enabled. This doesn't work well with WTP tooling and is not able to distinguish between 'provided' and other dependencies.\n\nThe \"Import Getting Started Content\" wizard imports with \"Dependencies\" management disabled which relies directly on gradle's 'eclipse-wtp' plugin to configure the classpath and deployment assembly. This is the recommended way to import a WTP project. WTP can not be properly configured with information available from the tooling API.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/51368194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/51368684", "body": "See: \n   http://issues.gradle.org/browse/GRADLE-1777\n   https://issuetracker.springsource.com/browse/STS-2380\n\nClosing as duplicate.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/51368684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/54825504", "body": "I just tried installing from http://dist.springsource.com/snapshot/TOOLS/gradle/nightly into a fresh downloaded copy of \"eclipse 4.4 for Java Developers\".  It worked fine. \n\nIt could be there are certain install scenarios that have issues still, but without precise details on what you are trying to do I cannot reproduce it.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/54825504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/56401223", "body": "More useful info than what is in your build.gradle file would jps + jstack stacktraces of the stuck processes (gradle daeimon and STS). \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/56401223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/56690529", "body": "Try this for the current latest release:\nhttp://dist.springsource.com/release/TOOLS/gradle/3.6.1.RELEASE/gradle-3.6.1.201408250705-RELEASE-updatesite.zip\n\nThis is an eclipse update site in zip file.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/56690529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/57235400", "body": "Closing this as duplicate of https://issuetracker.springsource.com/browse/STS-3922\n(also STS-3922 will be resolved as 'Fixed' shortly)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/57235400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/57236307", "body": "The only thing you need to install from `http://dist.springsource.com/release/TOOLS/update/e4.4/`\nis 'Gradle IDE' under 'Core / Eclipse Integration Gradle'. I tried installing it with Eclipse 4.4 and it installs fine. However be aware that a bug in Eclipse 4.4.1 prevents it from working. \n\nThere is already a workaround for the bug. See details here:\nhttps://issuetracker.springsource.com/browse/STS-3922\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/57236307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/57237633", "body": "I tried installing from marketplace into Eclipse 4.4.1 for Java developers.\n\nI confirm that markeptlace entry doesn't install with the error exactly as reported by @chrisfabri \nWhen I only install the 'Gradle IDE' component and not the three other pieces it works however.\n\nWe should probably update marketplace entries in the same way (i.e. so it only installs the one Gradle IDE component).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/57237633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/58204342", "body": "To me this look like it is most likely a bug in gradle tooling api implementation and/or the gradle eclipse plugin (i.e. gradle's plugin for eclipse not STS plugins for gradle). What you were doing seems like it should probably work (without wrapping an extra '[...]' around your code). \nHowever the error comes from gradle code, not STS/eclipse code. \n\nUseful to try: When you generate the eclipse classpath using commandline gradle... e.g: \"./gradlew cleanEclipse eclipse\" does it also give the same error? \n\nIf so then it would be wortwhile to follow up but raising a gradle bug report.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/58204342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/60464124", "body": "STS 3.1.0 is pretty old. Can you try using something recent (like the current version of STS which is 3.6.1)?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/60464124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61284583", "body": "Closed. Sorry but decided that we will not add this advise to the general readme for the reason given above. Thanks for trying to make a contribution though. Your effort is appreciated.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61284583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61310125", "body": "I pushed some stuff to your branch. Just some small things so that the mvn build would run again. I can not yet merge this pull request though. The regression tests are looking like a genuine X-mass tree. 39 test failures.\n\nI'll dig in a bit and try and find out the cause(s).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61310125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61313830", "body": "Some places still had references to EclipseProject. Fixed those. Next problem I'm hitting is a some tests are throwing this now: \n\norg.gradle.tooling.model.UnsupportedMethodException: Unsupported method: Element.getName().\nThe version of Gradle you connect to does not support that method.\nTo resolve the problem you can change/upgrade the target version of Gradle you connect to.\nAlternatively, you can ignore this exception and read other information from the model.\n    at org.gradle.tooling.model.internal.Exceptions.unsupportedMethod(Exceptions.java:33)\n    at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:240)\n    at com.sun.proxy.$Proxy30.getName(Unknown Source)\n    at org.springsource.ide.eclipse.gradle.core.wizards.GradleImportOperation.importProject(GradleImportOperation.java:336)\n    at org.springsource.ide.eclipse.gradle.core.wizards.GradleImportOperation.perform(GradleImportOperation.java:188)\n    at org.springsource.ide.eclipse.gradle.core.actions.ReimportOperation.perform(ReimportOperation.java:59)\n    at org.springsource.ide.eclipse.gradle.core.test.GradleImportTests.testSTS3742ClassPathContainerEntryOrder(GradleImportTests.java:1163)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.springsource.ide.eclipse.gradle.core.test.util.ManagedTestSuite.run(ManagedTestSuite.java:207)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)\n    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)\n    at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:62)\n    at org.eclipse.pde.internal.junit.runtime.PlatformUITestHarness$1.run(PlatformUITestHarness.java:47)\n    at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\n    at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:136)\n    at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3774)\n    at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3412)\n    at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1151)\n    at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)\n    at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1032)\n    at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:148)\n    at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:636)\n    at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)\n    at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:579)\n    at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)\n    at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:135)\n    at org.eclipse.pde.internal.junit.runtime.NonUIThreadTestApplication.runApp(NonUIThreadTestApplication.java:54)\n    at org.eclipse.pde.internal.junit.runtime.UITestApplication.runApp(UITestApplication.java:47)\n    at org.eclipse.pde.internal.junit.runtime.NonUIThreadTestApplication.start(NonUIThreadTestApplication.java:48)\n    at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)\n    at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)\n    at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)\n    at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)\n    at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:648)\n    at org.eclipse.equinox.launcher.Main.basicRun(Main.java:603)\n    at org.eclipse.equinox.launcher.Main.run(Main.java:1465)\n    at org.eclipse.equinox.launcher.Main.main(Main.java:1438)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61313830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61317776", "body": "I updated 'testSimpleTaskWithDifferentReleases'. It was failing on some pretty old versions. So now this test tries out all versions of Gradle from 1.0 to 2.1 and runs a simple task.\n\nWe don't necessarily have to support version back to 1.0, but the test result indicates that only versions 1.12 or newer can execute tasks now. That really isn't acceptable. \n\nThe problem seems to be failure because ProjectPublications are not supported any further back. \n\nSo with this custom model we have now a severely limited range of supported versions. That's not acceptable so we have to find a solution.\n\nRelease 1.0 = org.gradle.api.internal.artifacts.ivyservice.projectmodule.ProjectPublicationRegistry\nRelease 1.1 = org.gradle.api.internal.artifacts.ivyservice.projectmodule.ProjectPublicationRegistry\nRelease 1.2 = org.gradle.api.internal.artifacts.ivyservice.projectmodule.ProjectPublicationRegistry\nRelease 1.3 = org.gradle.api.internal.artifacts.ivyservice.projectmodule.ProjectPublicationRegistry\nRelease 1.4 = org.gradle.api.internal.artifacts.ivyservice.projectmodule.ProjectPublicationRegistry\nRelease 1.5 = org.gradle.api.internal.artifacts.ivyservice.projectmodule.ProjectPublicationRegistry\nRelease 1.6 = org.gradle.api.internal.artifacts.ivyservice.projectmodule.ProjectPublicationRegistry\nRelease 1.7 = org.gradle.api.internal.artifacts.ivyservice.projectmodule.ProjectPublicationRegistry\nRelease 1.8 = org.gradle.api.internal.artifacts.ivyservice.projectmodule.ProjectPublicationRegistry\nRelease 1.9 = org.gradle.api.internal.artifacts.ivyservice.projectmodule.ProjectPublicationRegistry\nRelease 1.10 = org.gradle.api.internal.artifacts.ivyservice.projectmodule.ProjectPublicationRegistry\nRelease 1.11 = org.gradle.api.internal.artifacts.ivyservice.projectmodule.ProjectPublicationRegistry\nRelease 1.12 = OK\nRelease 2.0 = OK\nRelease 2.1 = OK\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61317776/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61517320", "body": "Thanks, will need to take a look at that. We'll have to do something to how these models are cached / refreshed.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61517320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61517691", "body": "This is not our 'real' issue tracker so I raised issue there:\nhttps://issuetracker.springsource.com/browse/STS-3952\n\nClosing this as a duplicate.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61517691/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/62189823", "body": "I think this is a known problem in the Gradle tooling API implementation: https://issues.gradle.org/browse/GRADLE-2828\n\nClosing as duplicate.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/62189823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63335554", "body": "The error means that gradle tooling is having problem creating a tooling api model for a project via its root project. This happens when some stored information in the project preference area links a given project to a root project, but when building a model for the root project then it can not find the project as a descendant of the root project. \n\nMaybe the project hierarchy changed? Or maybe there is some problem in your settings.gradle defining sub-projects for your root project. \n\nBefore importing the project try maybe deleting the settings files in the .settings/gradle folder (this is where the information is stored). I suggest you try to delete all these .settings/gradle files in all your projects and then try importing them again.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63335554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63377503", "body": "Just to make sure I understand what this is doing. It reverses the order of the 'root folder history' list in the UI right? If so that sounds like a nice little fix.\n\nHowever, to be able to merge the PR I will need you to sign the CLA (Contributor License Agreement). See the bottom of the project readme file. Some info there and a link to the CLA signing webform.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63377503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63493017", "body": "Great, I will look at merging this later today. Just in time for STS 3.6.3\nrelease :-)\n\nKris\n\nOn Tue, Nov 18, 2014 at 1:56 AM, andrask notifications@github.com wrote:\n\n> Yes, it makes sure that the most recently used folder is on the top and\n> the others are in recently used order with the least recently used at the\n> end.\n> \n> I have signed the the CLA. Let me know if you need more info.\n> \n> We are turning a maven project to gradle based and so far it's a breeze!\n> I'll try to keep contributing as we find out more. So far I can say it's\n> awesome.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/spring-projects/eclipse-integration-gradle/pull/60#issuecomment-63446299\n> .\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63493017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63526760", "body": "I merged your PR. Just did a little cleanup of some unused imports but kept it mostly just as is.\nI also decided to move the point where elements get added to history to where you click the 'Build Model' button rather than when wizard is 'finished'. It has always bugged me a little that nothing gets added to the history if I cancel the wizard.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63526760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63713459", "body": "Just in case you are not watching the Jira issue. I have resolved it as 'fixed'. I beleave it is fixed, but I can not be 100% sure my it would great if you can confirm that independently. So if you have a chance to try out a nightly build again, please do.\n\nPS: I have also disabled the Jar -> Gradle mapping option by default now. As I think it is better not to risk serious problems caused by it in the upcoming release.\n\nSo you'll have to turn it on in the preferences before you can test it.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63713459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63843368", "body": "> It looks to me that because I have multiple projects selected, the process of establishing the publications is done for each project individually instead of just once centrally.\n\nTHat is correct and unfortunately it is unavoidable. The publications model can only be built one project at a time, it is just how the tooling API works, there simply is no way to ask it to build models for a hierarchy all at once.\n\nI did fix a number of problems with how builds get scheduled (there was indeed a serious blow up in the same things getting built multiple times). \n\nThe question is if you are still seeing the 'quadratic blow up'. I hope not.\n\nTo be clear, if you have 4 projects in a hierarchy and refresh them all then this is the expected behavior re model builds:\n- 1 build to produce 'EclipseProject' model for all four projects at once, built via the root project\n- 4 builds to produce 'ProjectPublications' model. One build for each project.\n\nA total of 5 builds. So the number of builds should be 'linear' (n+1) w.r.t to the number of projects (n).\n\nIf that is what you are seeing then it works 'as designed'.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63843368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63849398", "body": "> Would providing a tarball of the test setup help to resolve this?\n\nYes, it would help. Assuming it doesn't work as I described above. But I will setup something like you described and try it myself today. See if I get quadratic or linear # of builds.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63849398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63895362", "body": "> I come up with (n)*(n+1) = 20 \n\nOkay at first this didn't make sense to me at all, but I think I understand it now. You are putting some code inside the build scripts of your plugins to 'detect' when they get evaluated.\n\nSo from STS point of view we have only have 'n+1' builds which is correct. But the 'ProjectPublications' build (n of the builds) each end up evaluating the siblings build scripts. So I see where you come up with 'quadratic' here.\n\nBut unfortunately... yes this is still... 'works as designed'.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63895362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64014137", "body": "> The 'Building Gradle Model' execution wipes out the console output of the task Gradle task that I was interested in.\n\nI don't think that it does, gradle tooling uses upto 9 consoles to dump output into for each time it runs builds or tasks. So although most likely the most recent console is the one that pops to the front you should be able to still get back to the previous one from the console view's pull down menu.\n\nDoes this work for you?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64014137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64046206", "body": "That is odd. Here's a screenshot what it should look like after two model builds and one task execution. Maybe something peculiar about how you are doing things make this break. How exactly are you getting this task executed? Provide detailed instructions and I'll try to reproduce it.\n![console-pulldown](https://cloud.githubusercontent.com/assets/1002156/5150552/49cba966-7188-11e4-9c3a-1b470c66d791.png)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64046206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64055283", "body": "Okay I am able to reproduce it. I see now what is happening. But I'm not sure there is much I can do about this. The problem seems to be that the ant-builder is replacing the current console with its own output. There's not much that I can really do about that since its not the Gradle tooling doing this.\n\nI can even reproduce this by just doing \"run as Ant Build\" on the builder.xml file. This replaces the contents of the latest / current console with ants output.\n\nI'll think about it some more, but I can't really see a solution. Maybe this is really a problem that should be fixed in the ant builder.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64055283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64256563", "body": "We may be able to improve this by using 'BuildActions' as discussed here:\nhttp://forums.gradle.org/gradle/topics/gradle-eclipseproject-and-buildinvocations-model-for-the-same-project-have-different-tasks-for-projects\n\nUnfortunately 'BuildActions' api is broken for us and as it seems we cannot use is in osgi environment.\n\nHowever... if could use it... then we could indeed build the ProjectPublications models for a hierarchy in one go. I have a little experiment that does this here:\n\nhttps://github.com/kdvolder/gradle-tooling-api-buildaction-example\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64256563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64257086", "body": "Closed this. Unless you have a good idea how I can stop ant tools from 'clobbering' our output, there's not much I can do.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64257086/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64463373", "body": "> Correct. Sorry for the hassle it caused on your part.\n\nNo problem, it was actually a useful interaction as it made me investigate 'BuildActions' as a possible future solution for this. I do think the current solution is problematic unless you have just a few 'toy' projects in the workspace.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64463373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64481676", "body": "> I have more than 300 projects. Do you think it is feasible to handle this size with the current tooling?\n\nIt will be fine if you don't enable the 'jar remap to gradle project' option. It is actually disabled by default. If you do not enable this option, then no ProjectPublications are needed and all is going to be okay.\n\nIf you do enable it then it could take a while building 'ProjectPublications' models for these 300 projects. It all happens in background so it should still be usable. But I personally found it is just a bit too disturbing to turn it on by default. Especially if many people won't care to have 'jar remapping' and it will just be annoying to them to wait for the model builds.\n\nSo by all means, give it a try... and you tell me how bad it is :-)\n\nIf I can use 'BuildActions' we can do it a lot better (but only if your 300 projects are part of a few large hierarchies).\n\nFor an idea of the difference. My little experiment used 'spring-xd' which is a large multi-project (110 projects in the hierarchy).\n\nEach of the 110 ProjectPublications models takes 3 to 4 seconds to build so that is 6 to 7 minutes for all of them. It all happens in 'background' jobs which don't lock things down... but it is long... and disturbing nonetheless.\n\nIn contrast, building all 110 models in one go with a single BuildAction takes only 6 seconds in total!\n\nSo in light of that, 7 minutes of 'building stuff' is not acceptable really.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64481676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/65095120", "body": "The fix must not have been complete as I'm still seeing a lot of these errors in the log.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/65095120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/65264621", "body": "Thanks, I can merge this pull request, did you already sign the CLA? (FYI, information and link to CLA signing form is linked from bottom of the project's readme, in case you need it).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/65264621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/65333673", "body": "Thanks, for PR and signing the CLA.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/65333673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/65671569", "body": "> Can you point me to the corresponding repo which contains the samples? I cloned gradle/gradle and it looks to me that this does not include the samples.\n\nActually, I'm not sure. However the tooling also has some 'local' samples (actually only a single one right now :-). It wouldn't be too difficult to add the 'empty' sample as local sample. \n\nAn empty sample is likely not interesting enough to be included in a gradle distribution, so my opinion is we _should_ do it as a local sample.\n\nI can point you to where our local samples are:\n\nhttps://github.com/spring-projects/eclipse-integration-gradle/tree/master/org.springsource.ide.eclipse.gradle.core/samples\n\nAll samples are registered here:\nhttps://github.com/spring-projects/eclipse-integration-gradle/blob/master/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/samples/SampleProjectRegistry.java\n\nBut the 'registerLocalSamples method scans the local samples directory, so simply adding your empty sample there should be sufficient.\n\nOne potential problem with 'empty' sample is that you can not commit empty source directories to git. So you will have to find your way around that somehow. The easiest might be to stick a small readme file in the empty directories. Alternatively you may override 'createAt' method of LocalSample or SampleProject class and generate your 'empty' sample content programatically.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/65671569/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/65675558", "body": "> This happens not to all of my projects but only a smaller part of them.\n\nAny chance you can attach a sample to reproduce the problem? I have not seen this problem and if we cannot reproduce it, we can not fix it.\n\nAlso please raise your bugreport on the STS issue tracker [*] instead of here. We do look here for bugs people raise but the STS Jira is our 'real' issue tracker. \n\nThanks,\n\nKris\n\n[*] = https://issuetracker.springsource.com/browse/STS\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/65675558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/68063962", "body": "Pull request looks like a nice small fix. But before I can merge it you need to sing the CLA, did you do this already? (Information about this is at the bottom of the project's readme file).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/68063962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/68064125", "body": "Thanks :-) Merged.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/68064125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69056258", "body": "Is that the entire stacktrace? I'd expect it to have more detailed location about exception origin as it most likely originates inside of Gradle tooling API implementation (when trying to start the daemon).\n\nThis is most likely a problem with tooling API implementation rather than STS tooling (STS itself doesn't start the daemon, it is the Gradle tooling API that does that. From what you are saying, it looks like Gradle Tooling API is trying to pass maxpermsize option to JDK 8 which no longer supports that option.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69056258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69224753", "body": "It is hard to give you specific information without a sample project to try out. The only thing that comes to mind right now is that commandline gradle may not have cycles while eclipse project do because commandline gradle 'dependencies' are more finegrained.\n\nIn particular, Eclipse projects merge 'test' and 'normal' dependencies into a single classpath. So it is theoretically possible that this creates a cycle in Eclipse project dependencies that doesn't arise on the commandline.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69224753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69225006", "body": "If you attach a sample project we can try to analyze and explain what is happening.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69225006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69367313", "body": "> The error is probably provided by eclipse but it's really annoying.\n> ...\n> Eclipse is quite bad at this apparently.\n\nMaybe it might be a good idea to raise an [Eclipse bug](https://bugs.eclipse.org/) to request the error message to be improved. Especially if you have a concrete example/ideas of how it could be done much better.\n\nI would raise the bug for you, but I didn't hit this problem myself, so not sure I'd be able to characterize the problem and explain 'the better way' very well.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69367313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69777389", "body": "Normally you start by asking a question on gradle forum and it then gets converted into an issue.\n\nHowever, I'm not yet 100% sure this is a problem with gradle or with STS. Let me first try and reproduce the problem. I'll post back here later.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69777389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/70002539", "body": "I tried reproducing the problem but cannot. For me stuff is running just fine with Java 8. \n\nMaybe you are getting this vmarguments from somewhere else you customized long  ago and forgot. Check the following in workspace preferences.\n\n1) Any default VM arguments set in your JRE definiition? \n\nWindow >> Preferences >> Installed JREs. If you select a JRE and click 'Edit', theres a 'DefaultVM arguments section. Check what is in there.\n\n2) VM arguments set by Gradle preferences? \n\nWindow >> Preferences >> Gradle >> Arguments\n\nCheck if maybe the permgen argument is being set there.\n\n3) Launch configuration\n\nCheck if maybe you have existing Gradle launch configs that supply custom VM arguments:\nExternal tools toolbar button menu (looks like a 'play icon' with suitcase)  >> Run Configurations\n\nDelete any old 'Gradle' launch configs you see there.\n\n4) gradle.properties\n\nSee the docs here: http://www.gradle.org/docs/current/userguide/gradle_daemon.html\nSection 19.4 says:\n\n> Some daemon settings, such as JVM arguments, memory settings or the Java home, can be configured. Please find more information in Section 20.1, \u201cConfiguring the build environment via gradle.properties\u201d\n\nRead that and check your gradle.properties (maybe in the project you are importing).\n\nHopefully in one of these places you will find who is supplying the 'bad' VM arguments. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/70002539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/73771572", "body": "> I'm trying to put together an example project\n\nGreat, a sample would help a lot, otherwise I wouldn't know where to start debugging it.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/73771572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/73800222", "body": "Are these projects part of a single multi-project build? Or separate\nprojects (or something in between).\n\nHave you tried mucking around with some of the new options\nto remap project/jar dependencies. Maybe the model builds required for\nthese options are slowing your stuff down. disabling some of these options\nmay help (especially if you do not really want to use them in the first\nplace).\n\nMy suspicion is that model builds take more time because, unfortunately we\nare not able to take advantage of building many models in a single tooling\nAPI request so you get to build many small models which is much slower than\nbuilding one big model. If so, there's not much can be done. See discussion\nhere:\nhttp://forums.gradle.org/gradle/topics/gradle-eclipseproject-and-buildinvocations-model-for-the-same-project-have-different-tasks-for-projects\n\nAt/near the end of the thread...\n\nWe should really use 'BuildActions' to build all these 'little models' at\nonce, but a bug in tooling-api makes this impossible in OSGI environment\nexcept for Gradle 2.3 or above.\n\nOn Tue, Feb 10, 2015 at 12:15 PM, abrolle notifications@github.com wrote:\n\n> I'll provide you with profiling results tomorrow. Evaluating 500+ projects\n> has gone from seconds to minutes from the 2.9.1.xx-201408111402-e44 and\n> now. I ran JMC Java Flight Recorder and most time was spend in hash maps.\n> Will get back with details.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/spring-projects/eclipse-integration-gradle/issues/82#issuecomment-73774999\n> .\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/73800222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74107619", "body": "> Something must have been done between then and now to make it much slower.\n\nIndeed, before we only used 'EclipseProject' model from Gradle and this can be built for all projects in a multiproject in one go. \n\nIn current version of Gradle there are also some other models being used which, unfortunately don't allow this kind of 'bulk' building of models. I am almost certain this has something to do with your slow down where you are now hvaing to build '500 little models' instead of a single big one.\n\nSome of these changes can be disabled in the preferences which I asked you to try.\n\nBut I think there are some changes also in the task models which can not be disabled. They were introduced to allow for identification of public tasks and fix some problems with the task models.\n\nYou could try doing an import of your projects and disabling any execution of tasks during the import, it may be your projects then do not import correctly, but it might reveal if building the tasks models is what's slowing things down.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74107619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74108377", "body": "> The Gradle 2.3 release is near. Are you planning to update to this soon?\n\nWhen it comes out we will probably update to its tooling API, but it doesn't help with the BuildActions issue since the problem is not in the tooling API itself but in the Gradle version that people use.\n\nThis means we still cannot use BuildActions until _everyone_ has switched to Gradle 2.3.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74108377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74284938", "body": "Sounds like the changes in how task models are computed are responsible for your troubles.\n\n> I also seems quicker to find tasks in the 'quick launcher' than refreshing the 'gradle tasks view'\n\nAlex would know this better than me, maybe the quicklauncher builds different (old-style) task model so is not affected by the slow down.\n\n> Do you have a better suggestion on how to approach this situation?\n\nSelecting all the projects and doing 'Refresh All' or 'Refresh Dependencies' might work better, but I suspect it will be prone to the same problem. Plus that might not be as convenient if new projects have been added.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74284938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74286490", "body": "Thinking some more about what might be going on. So... having tasks view open slows down import.\n\nProbably its the 'many little model builds' the task viewer creates to build task models are holding up the model builds required for importing project. \n\nEffectively only one model can be 'building' at the same time. \n\nIf task models are building for several minutes (not too surprising if there's 100s of them to build) then it would delay the model builds for import.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74286490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74287640", "body": "Maybe upgrading to newer version of tooling API might fix the problem. If not then it needs to be reported as a bug to Gradle itself as the error comes from inside the Tooling API.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74287640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74287720", "body": "Sorry didn't mean to close this. clicked wrong button.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74287720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74290633", "body": "I have update tooling API version to 2.2.1. Could you please try updating your Gradle tools from nightly update site to see if it fixes the problem.\n\nUpdate site is http://dist.springsource.com/snapshot/TOOLS/gradle/nightly\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74290633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74293633", "body": "Unfortunately there's nothing more that can be done on our (STS Tooling) side. This should be filed as a bug against the tooling API.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74293633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74294530", "body": "Posted a forum question to gradle forums: we can continue to follow up there. Closing this issue.\n\nhttp://forums.gradle.org/gradle/topics/java-lang-classnotfoundexception-org-gradle-api-internal-artifacts-component-defaultmodulecomponentselector?rfm=1\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74294530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74536774", "body": "Let me take another look, maybe I jumped to the wrong conclusion. Reopening.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74536774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74540149", "body": "You are probably right. Problem is coming from the 'Custom Model'. It doesn't show up as an error in my  build but it does when I run the regression tests on the custom model.\n\nYou could try disabling the Custom Model feature from Gradle preferences. (You have this enabled right?).\n\nI can probably apply the fix you suggested but... that will probably break compatibility with 2.1.x.  \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74540149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74546837", "body": "I've applied some changes based on your observations. Also found a few more stray references to version 2.1 that needed replacing. Also changed the UI prefs page (it now states that custom tooling model requires 2.2 as I think the changes that were just made mean that is in fact the case).\n\nIf you could please try CI build 34 (should be finished in a minute or two) from nightly again and let me know if this fixes your problem.\n\nThanks.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74546837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74549121", "body": "Closing, duplicate of the issue you cross-file on STS tracker.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74549121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74574711", "body": "Thanks for confirming the fix. Closing.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74574711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74716330", "body": "This is 'by design'. The Tooling API owns the daemon and provides no means for STS to terminate it.\nThe daemon will go away on its own after some time of inactivity (though it may be quite a long time).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74716330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/99200165", "body": "Duplicate of https://issuetracker.springsource.com/browse/STS-4114\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/99200165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/comments/10435062", "body": "Pivotal is no longer backing groovy (See http://blog.pivotal.io/pivotal/news-2/groovy-2-4-and-grails-3-0-to-be-last-major-releases-under-pivotal-sponsorship) and by extension Groovy Eclipse. It is unclear what the future of Greclipse is at the moment (nobody has yet come forward to take over groovy eclipse maintenance and we at Pivotal will effectively stop working on it as of next week).\n\nThe integration that was there for gradle tooling was fairly limited and optional. So we don't think there is great loss of value in removing groovy eclipse dependencies from Gradle tooling.\n\nOn the plus side, the gradle tooling code base becomes simpler in many ways. E.g. easier to build, test, depend on etc. And maybe it makes it actually easier for someone else to integrate your simple gradle editor, and/or bundle it together with Pivotal gradle tooling.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/comments/10435062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/comments/10471587", "body": "> Now as Greclipse is put aside, would it make sense to add that tiny Minimalist Editor here?\n\nPerhaps, but I'd try to keep the two projects as separate as possible. I.e. so people can install one or the other, or both. The way I see it, gradle tooling now gets completely out of the 'business' of providing editor support. It's only about getting gradle projects setup into your workspace.\n\nSomething else can/should provide the 'editing gradle code' piece. Bundling them up so that people can easily install them makes good sense (marketplace downloads for your 'gradle pack' have more installs than the two components separately.\n\nSo I don't think we need to 'merge' code bases. Actually its probably better if we keep these two things as just two separate projects. Also I'm happy to see you created the pack to install them together. \n\nWe could consider doing something like making the gradle pack installable from the STS dashboard (instead of the gradle tooling without editor support).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/comments/10471587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/comments/10471726", "body": "Also I forgot to comment on this:\n\n> Now as Greclipse is put aside ...\n\nI did say that 'greclipse future is uncertain'. But it doesn't mean for sure Greclipse is going away. For example, I did hear a rumour this morning someone may yet be interested in keeping Greclipse going. This may or may not happen, but maybe it is too soon to just say outright that 'Greclipse' is going away. Uncertain really means 'uncertain' at this point.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/comments/10471726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/comments/10549322", "body": "Actually, I usually discouraged people from using the 'DSL' support in Gradle tooling. It seems to cause more trouble than its worth because to get grecplipse editor working reasonably well you have to add things to the projects classpath that don't really belong there. This causes all kinds of problems if those things conflict or interact with other things that do belong on the classpath of the project.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/comments/10549322/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/pulls/comments/9121046", "body": "Comment doesn't match what the method does anymore\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/pulls/comments/9121046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "BoykoAlex": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/2126f7709d9c14a10a31a8883fb8077185897b88", "message": "Merge pull request #89 from sunhong/master\n\nAdd \"Alphabetically by name\" in dependency sorting strategies"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/c23d3b6fbcc9b8317ba14e0e05d131011c47eb9e", "message": "STS-4003 Fix for External Tools config for Gradle build"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/a31ba16ffe44a489255ff432252ec394a5cefbfe", "message": "Merge pull request #72 from gamerson/master\n\nAdds a global \"Ctrl+F5\" refresh All command"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/0acb48ded820fd49a2bc12882d21dd4c4beb33ea", "message": "Merge pull request #66 from a1dutch/fix-menu-warnings\n\nfix warnings about non existent menu"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/76064862334b03fecc3cac40fcd8589011cd9c39", "message": "Merge branch 'master' of https://github.com/spring-projects/eclipse-integration-gradle.git"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/ca0fb72d6894c598dc286b6a181cb68c122606d0", "message": "Avoid running numerous BuildInvocations model builds for quick task or\nlaunch config wizard popped up for a root projects with 100s of\nsubprojects. Lazy-load BuildInvocations models on demand"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/b9e9467850983d2a501f3222be3194a2025c0dd8", "message": "Merge pull request #64 from spring-projects/tasks_visibility\n\nTasks visibility - adoption of BuildInvocations model"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/5903d42802c964ce0ec7d1f02adc414d60ed53d0", "message": "Support multiple selection for play button in the Gradle Tasks view"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/300bed49d92cc266935d9ac490c08181ba6cd65a", "message": "Merge branch 'master' into tasks_visibility"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/72551009e469c86e476be9d867ef91e0f4ffe963", "message": "Include BuildInvocations model data into GradleProjectIndex. Tasks\neditor content assist proposals have public/internal task icons."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/142d97741584e50dd838f8203a825c852e119f08", "message": "Robustness, wording for logged messages, more API for getting models of\nspecific type on GradleProject"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/af02632189e7825ccdc4d11cfee376f4e631bee9", "message": "Added explanation comment"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/9ce2530badd9da542dd7ecf46349b47cd7cf1fa7", "message": "Cleanup"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/76cd8c0a87a4a2d4720dc9251686b5c67851fa44", "message": "Backward compatibility support for visibility (all tasks public if\nfeature not supported)"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/27096bd97c17ef7088c00c049077a35f9527c446", "message": "Fetch BuildInvocations model just for the sake of getting visibility\nproperty. Use EclipseProject model to list tasks."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/d7eb7c90538d2fdf2d78ebcd8c51d40f2ae9696d", "message": "Merge mistake reverted"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/471224ccd0c8eaf23915672124cef2edb0e1cb45", "message": "Merge branch 'master' into tasks_visibility\n\nConflicts:\n\torg.springsource.ide.eclipse.gradle.core.test/src/org/springsource/ide/eclipse/gradle/core/test/GradleProjectTest.java\n\torg.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleProject.java\n\torg.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/modelmanager/IGradleModelListener.java\n\torg.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/modelmanager/ToolinApiUtils.java\n\torg.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/util/GradleProjectIndex.java\n\torg.springsource.ide.eclipse.gradle.ui.taskview/src/org/springsource/ide/eclipse/gradle/ui/taskview/TaskTreeContentProvider.java"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/76f604c2ab3587794f636f6ecdf775621dbe2e56", "message": "Corrected Gradke feature description"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/d81cdc4a62ebb483a829094c839324e0ae76ffb3", "message": "Merge branch 'master' into tasks_visibility"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/4c1bf6539f730abbb0145e869bfa274678176c8b", "message": "Merge pull request #62 from spring-projects/flat_multiproject_fix\n\nCorrections for more robust check project folder' is an ancestor of the root project folder"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/a7548368de103d71a9cfb6012403f309f0786afa", "message": "Switch to IPath based check for nesting"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/f3072e03e65bf2be00bf0478e78fbecebbc8de13", "message": "Corrections"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/5dee9702e6bbeb608a8829236778c99e3310312a", "message": "Merge branch 'master' into tasks_visibility"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/074f26ddfdf2a72d1b460644bfb7cc00ae533b6a", "message": "Merge pull request #61 from spring-projects/flat_multiproject_fix\n\nPass settings.gradle to Gradel operations for Flat layout multiproject. Includes test."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/a976ed885d8c474f550c9a469d81930957d275d8", "message": "Added TODO to evaluate whether to log or ignore the\nFastOperationException thrown in the calculation of Gradle op args.\nAlways thrown when a new project is created."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/485c6839ab959c836f8ad695065337d7556c10f2", "message": "Switch to static method from instance method"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/d0518fe41b146d43f8120585d8c023b02a859545", "message": "Avoid throwing FastOperationFailedException from the CLI args\ncalculation"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/3498597e8150ac08dacf0fc2e25384823a54b30f", "message": "Support task launch config program parameters"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/24b80a5864dfd8dc02c2be279ab60a56ca754e89", "message": "one more correction"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/43bda7b357e75935ddc4acc388121cfe13560df2", "message": "Corrections"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/82dc30036346aefa74620c0ffde16417b50bc770", "message": "Removed 'build' folders"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/b5476408eefedf4f201e6b3b3c8d2f11b0653ae3", "message": "Pass settings.gradle to Gradel operations for Flat layout multiproject.\nIncludes test."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/c7e3e8f8aa33b3a8fa9600bf9cbf395cac32ea19", "message": "Add/Remove model listeners when project changes in the tasks view"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/23caad2b2c11b07ea47e74e08aa3ee7db9e7b119", "message": "Remember last selected project for Quick Tasks Launcher dialog"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/56e92c882b1c638d7e50216f71a3e8868dd7176a", "message": "Cache the job fetching the model such that no new jobs scheduled."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/b9139e7471679cc2a962c1baa2e50ae3ed37c859", "message": "Initial implementation of public/internal tasks visibility support"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/fd90f21d2e67d212fc81967a6a9c9670e4536580", "message": "Merge pull request #54 from a1dutch/disable-menu-no-nature\n\nonly enable gradle menu when the gradle nature is present"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/6ba61b857ef48b8299e552409b93df6ea319e4d8", "message": "Updated the icon with transparent background."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/7628aee3f5825105985af67de528e1d07fa5f325", "message": "STS-3941 - Can't disable Gradle from STS"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/deab83e0d23c30d4705bc1294c8beb1dda40f3ce", "message": "STS-3742 Eclipse WTP classpath has an incorrect order - source jars are\nnot recognized by eclipse"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/34db793c944d72dccbc906e685b2c6f55194c206", "message": "Merge pull request #50 from spring-projects/API_unchanged\n\nApi unchanged"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/0cd5ce0b0fbcf1cdf88026c8914dbdf6f5af33d7", "message": "Null check just in case. And check for mac os X for running maven tests."}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/882ca6252eb27a795f7deba4f1a28b7449e934bb", "message": "Merge branch 'master' into API_unchanged"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/6b8a28fed81b6aa45190e5a68bca689b05b49306", "message": "Revert build.gradle changes, keep classpath changes"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/522effad4ee0d265bd687f1ddaeee9ad82e52efc", "message": "Gradle build failure fix attempt"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/4142f81f6e916858b261cff6354a2b3b935642b9", "message": "Make CancellationToken part of a new ProgressMonitorWrapper and look for\nthis progress monitor in the chain of progress monitors to extract the\ncancellation token. Benefit: API does not change"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/56c570f3b76c4be2a487d4f839b45aee209e3957", "message": "Merge branch 'master' of https://github.com/spring-projects/eclipse-integration-gradle.git"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/2365004e84629927fce1ca14c180af26ccae6920", "message": "Backward compatibility API support methods"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/34e5adfd0516bd2ca56d029cf8d62d95c628a379", "message": "Added another not serializable in e441 property"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/66169bde6df6fb8dcd45fd66827e85953b596297", "message": "Automated tests run by Maven fix for 4.4.1"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/40266aaac70d510966f2b471d565d34c42a9f39e", "message": "Task cancellation test added"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/e8413cdaac5c0ef4e98ac74bb1f1ba8b90d62346", "message": "Merge branch 'master' of https://github.com/spring-projects/eclipse-integration-gradle.git"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/5a429122440729d5a33b4645231aac94c75496c4", "message": "Support cancellation of Gradle Tasks. Adoption of Gradle 2.1"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39506295", "body": "Hmm... I've tried that in STS 3.5.0 with Groovy Eclipse and Gradle Eclipse Integration from this update site: http://dist.springsource.com/release/TOOLS/update/e4.3/ Platform is Mac OSX. Probably some corner case scenario... Will try Win7 and plain eclipse + Greclipse and Gradle Eclipse integration. BTW, is that your initial setup? Eclipse for JEE dev + Groovy Eclipse + Gradle Eclipse Integration?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39506295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39527125", "body": "It might be that during the conversion of Java project to Gradle project it may ask you to confirm network access permissions on Windows (i got that \"allow access\" dialog on Win7) where you pick the decision allow access and it succeeds. Perhaps you either don't get this dialog or selected something previously that disallows network access in this case... Just a guess... Otherwise i couldn't reproduce this on Win7.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39527125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/41701898", "body": "Wonder how you manage to get the \"Gradle Tasks\" view actions to disappear... I have tried this on Mac OSX and it work fine all the time regardless the real estate available for the view. If the view has room to fit the buttons they'll be displayed in the same row as the view tab, otherwise the actions would go into a separate row as shown in your first screenshot.\nWhat's your Eclipse version?\nWhat's your platform title and version?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/41701898/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/44429281", "body": "Think it makes sense. Can you please submit a JIRA for this enhancement? (Would be nice if you could attach a sample project to the JIRA)\n\nOn May 28, 2014, at 5:17, romix notifications@github.com wrote:\n\n> I have the following setup:\n> \n> N Gradle (root )projects A1..An, each imported in Eclipse as a separate project\n> Some of the Gradle projects are dependent on artifacts (JARs) produced by other projects (they depend on snapshot versions), e.g. A1 is dependent on the artifact A2-SNAPSHOT.jar produced by A2.\n> When I change sources in A2 and add e.g. a new method, I'd like to be able to directly use this new method in A1, i.e. with autocompletion, etc. But today it is not possible, because this change is invisible to Eclipse. One should first build and locally deploy the artifact produced by A2. And only then Eclipse detects the change in the JAR and is able to provide autocompletion and so on.\n> \n> It would be nice, if Eclipse could detect this kind of changes automatically without requiring a dedicated build/local deploy step. It would be much more convenient and less error-prone.\n> \n> Idea: I can imagine that this feature would work, if the Eclipse project for A1 would depend on the Eclipse project for A2 (and with current Gradle Plugin and Gradle tooling it always depends on the JAR produced by A2 and therefore changes are not detected automatically). So, a possible solution could be that Gradle plugin detects that a given JAR is produced by a given Eclipse Gradle project and adds the dependency on that project automatically in the Eclipse project configuration.\n> \n> What do you think?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/44429281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/45453856", "body": "Yes, indeed. It\u2019s on our \u201cToDo\u201d list for Gradle Eclipse integration.\n\nCheers,\nAlex\n\nOn Jun 7, 2014, at 3:13, zyro notifications@github.com wrote:\n\n> the gradle tooling seems to always add a java nature to the project when doing a \"refresh all\". no matter if the gradle build actually adds a java nature or if dependency mgmt is enbaled or not.\n> \n> this is not always a good approach: e.g. i got an ear project which must not have a java nature or else i am not able to deploy it to the application server. i explicitly removed that nature in my gradle build (or rather the project does not even have the java plugin applied) but refresh all keeps re-adding it.\n> \n> looks like this could be the code.\n> https://github.com/spring-projects/eclipse-integration-gradle/blob/master/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/wizards/GradleImportOperation.java#L419\n> \n> the same happens on \"convert to gradle project\", i think:\n> https://github.com/spring-projects/eclipse-integration-gradle/blob/master/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleProject.java#L690\n> \n> would be cool if the gradle tooling supports non-java gradle projects as well.\n> \n> thanks, zyro\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/45453856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/45647198", "body": "Seems to me that garadle-1.12-all.zip is not an eclipse update site archive, but rather the Gradle 1.12 (binaries + source). SDo just Gradle by itself and not the Gradle Eclipse Integration archived update site\u2026 Wrong file to try it seems.\nBTW, this update site http://dist.springsource.com/release/TOOLS/gradle works fine for me too. Must some interference with your network settings as Kris indicated previously.\n\nOn Jun 10, 2014, at 13:22, ayushsingla991 notifications@github.com wrote:\n\n> But i have downloaded archive file for gradle.. And used it, but it shows this,\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/45647198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/58090757", "body": "Did you try executing \"./gradlew build\u201d from the command line for your project by any chance? It might be the problem with Gradle itself rather than Gradle Eclipse tooling\u2026\nPerhaps the best way to tackle this would be for you to give us a sample project such that we could reproduce it. Any chance you can provide us with a sample project?\n\nOn Oct 6, 2014, at 16:13, Mario Zechner notifications@github.com wrote:\n\n> While many 4.4.1 related issues have been fixed over the last few days, it seems that there're still some fixes needed.\n> \n> I'm working off of the latest nightly build from 10.4.2014 (which i assume will eventually turn into 3.6.2) of the integration plugin. The project uses the Gradle wrapper, using Gradle version 2.1.\n> \n> When building the model for a Gradle project in the import dialog i receive the following error:\n> \n> http://libgdx.badlogicgames.com/uploads/Screen%20Shot%202014-10-06%20at%2022.01.21-AlyY1ToIMQ.png\n> \n> The log file contains this:\n> \n> !ENTRY org.springsource.ide.eclipse.gradle.core 4 0 2014-10-06 22:10:28.518\n> !MESSAGE java.io.File cannot be cast to org.gradle.api.artifacts.Configuration\n> !STACK 0\n> java.lang.reflect.InvocationTargetException\n>     at org.springsource.ide.eclipse.gradle.core.util.GradleRunnable.run(GradleRunnable.java:109)\n>     at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)\n> Caused by: org.gradle.tooling.GradleConnectionException: Could not fetch model of type 'HierarchicalEclipseProject' using Gradle distribution 'http://services.gradle.org/distributions/gradle-2.1-all.zip'.\n>     at org.gradle.tooling.internal.consumer.ResultHandlerAdapter.onFailure(ResultHandlerAdapter.java:55)\n>     at org.gradle.tooling.internal.consumer.async.DefaultAsyncConsumerActionExecutor$1$1.run(DefaultAsyncConsumerActionExecutor.java:57)\n>     at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64)\n>     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n>     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n>     at java.lang.Thread.run(Thread.java:745)\n>     at org.gradle.tooling.internal.consumer.BlockingResultHandler.getResult(BlockingResultHandler.java:46)\n>     at org.gradle.tooling.internal.consumer.DefaultModelBuilder.get(DefaultModelBuilder.java:48)\n>     at org.springsource.ide.eclipse.gradle.core.GradleModelProvider.buildModel(GradleModelProvider.java:407)\n>     at org.springsource.ide.eclipse.gradle.core.GradleModelProvider$GroupedModelProvider.ensureModels(GradleModelProvider.java:294)\n>     at org.springsource.ide.eclipse.gradle.core.GradleProject.getModelProvider(GradleProject.java:569)\n>     at org.springsource.ide.eclipse.gradle.core.GradleProject.getGradleModel(GradleProject.java:629)\n>     at org.springsource.ide.eclipse.gradle.core.GradleProject.getSkeletalGradleModel(GradleProject.java:654)\n>     at org.springsource.ide.eclipse.gradle.ui.wizards.GradleImportWizardPageOne$11.doit(GradleImportWizardPageOne.java:516)\n>     at org.springsource.ide.eclipse.gradle.core.util.GradleRunnable.run(GradleRunnable.java:101)\n>     ... 1 more\n> Caused by: java.lang.ClassCastException: java.io.File cannot be cast to org.gradle.api.artifacts.Configuration\n>     at org.gradle.plugins.ide.internal.IdeDependenciesExtractor.extractProjectDependencies(IdeDependenciesExtractor.java:52)\n>     at org.gradle.plugins.ide.internal.IdeDependenciesExtractor$extractProjectDependencies.call(Unknown Source)\n>     at org.gradle.plugins.ide.eclipse.model.internal.ClasspathFactory$3.update(ClasspathFactory.groovy:45)\n>     at org.gradle.plugins.ide.eclipse.model.internal.ClasspathEntryBuilder$update.call(Unknown Source)\n>     at org.gradle.plugins.ide.eclipse.model.internal.ClasspathFactory.createEntries(ClasspathFactory.groovy:76)\n>     at org.gradle.plugins.ide.eclipse.model.internal.ClasspathFactory$createEntries.call(Unknown Source)\n>     at org.gradle.plugins.ide.eclipse.model.EclipseClasspath.resolveDependencies(EclipseClasspath.groovy:209)\n>     at org.gradle.plugins.ide.internal.tooling.EclipseModelBuilder.populate(EclipseModelBuilder.java:85)\n>     at org.gradle.plugins.ide.internal.tooling.EclipseModelBuilder.populate(EclipseModelBuilder.java:128)\n>     at org.gradle.plugins.ide.internal.tooling.EclipseModelBuilder.buildAll(EclipseModelBuilder.java:61)\n>     at org.gradle.plugins.ide.internal.tooling.EclipseModelBuilder.buildAll(EclipseModelBuilder.java:32)\n>     at org.gradle.tooling.internal.provider.BuildModelAction.run(BuildModelAction.java:68)\n>     at org.gradle.tooling.internal.provider.BuildModelAction.run(BuildModelAction.java:32)\n>     at org.gradle.tooling.internal.provider.ConfiguringBuildAction.run(ConfiguringBuildAction.java:134)\n>     at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:36)\n>     at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:26)\n>     at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:47)\n>     at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:34)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:35)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:24)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.StartStopIfBuildAndStop.execute(StartStopIfBuildAndStop.java:33)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.ReturnResult.execute(ReturnResult.java:34)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:71)\n>     at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:69)\n>     at org.gradle.util.Swapper.swap(Swapper.java:38)\n>     at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:69)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:60)\n>     at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:34)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:70)\n>     at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:34)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:45)\n>     at org.gradle.launcher.daemon.server.DaemonStateCoordinator.runCommand(DaemonStateCoordinator.java:258)\n>     at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy.doBuild(StartBuildOrRespondWithBusy.java:49)\n>     at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:34)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.HandleCancel.execute(HandleCancel.java:36)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.HandleStop.execute(HandleStop.java:30)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.DaemonHygieneAction.execute(DaemonHygieneAction.java:39)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.CatchAndForwardDaemonFailure.execute(CatchAndForwardDaemonFailure.java:32)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.DefaultDaemonCommandExecuter.executeCommand(DefaultDaemonCommandExecuter.java:52)\n>     at org.gradle.launcher.daemon.server.DefaultIncomingConnectionHandler$ConnectionWorker.handleCommand(DefaultIncomingConnectionHandler.java:154)\n>     at org.gradle.launcher.daemon.server.DefaultIncomingConnectionHandler$ConnectionWorker.receiveAndHandleCommand(DefaultIncomingConnectionHandler.java:128)\n>     at org.gradle.launcher.daemon.server.DefaultIncomingConnectionHandler$ConnectionWorker.run(DefaultIncomingConnectionHandler.java:116)\n>     at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64)\n>     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n>     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n>     at java.lang.Thread.run(Thread.java:745)\n> Root exception:\n> org.gradle.tooling.GradleConnectionException: Could not fetch model of type 'HierarchicalEclipseProject' using Gradle distribution 'http://services.gradle.org/distributions/gradle-2.1-all.zip'.\n>     at org.gradle.tooling.internal.consumer.ResultHandlerAdapter.onFailure(ResultHandlerAdapter.java:55)\n>     at org.gradle.tooling.internal.consumer.async.DefaultAsyncConsumerActionExecutor$1$1.run(DefaultAsyncConsumerActionExecutor.java:57)\n>     at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64)\n>     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n>     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n>     at java.lang.Thread.run(Thread.java:745)\n>     at org.gradle.tooling.internal.consumer.BlockingResultHandler.getResult(BlockingResultHandler.java:46)\n>     at org.gradle.tooling.internal.consumer.DefaultModelBuilder.get(DefaultModelBuilder.java:48)\n>     at org.springsource.ide.eclipse.gradle.core.GradleModelProvider.buildModel(GradleModelProvider.java:407)\n>     at org.springsource.ide.eclipse.gradle.core.GradleModelProvider$GroupedModelProvider.ensureModels(GradleModelProvider.java:294)\n>     at org.springsource.ide.eclipse.gradle.core.GradleProject.getModelProvider(GradleProject.java:569)\n>     at org.springsource.ide.eclipse.gradle.core.GradleProject.getGradleModel(GradleProject.java:629)\n>     at org.springsource.ide.eclipse.gradle.core.GradleProject.getSkeletalGradleModel(GradleProject.java:654)\n>     at org.springsource.ide.eclipse.gradle.ui.wizards.GradleImportWizardPageOne$11.doit(GradleImportWizardPageOne.java:516)\n>     at org.springsource.ide.eclipse.gradle.core.util.GradleRunnable.run(GradleRunnable.java:101)\n>     at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)\n> Caused by: java.lang.ClassCastException: java.io.File cannot be cast to org.gradle.api.artifacts.Configuration\n>     at org.gradle.plugins.ide.internal.IdeDependenciesExtractor.extractProjectDependencies(IdeDependenciesExtractor.java:52)\n>     at org.gradle.plugins.ide.internal.IdeDependenciesExtractor$extractProjectDependencies.call(Unknown Source)\n>     at org.gradle.plugins.ide.eclipse.model.internal.ClasspathFactory$3.update(ClasspathFactory.groovy:45)\n>     at org.gradle.plugins.ide.eclipse.model.internal.ClasspathEntryBuilder$update.call(Unknown Source)\n>     at org.gradle.plugins.ide.eclipse.model.internal.ClasspathFactory.createEntries(ClasspathFactory.groovy:76)\n>     at org.gradle.plugins.ide.eclipse.model.internal.ClasspathFactory$createEntries.call(Unknown Source)\n>     at org.gradle.plugins.ide.eclipse.model.EclipseClasspath.resolveDependencies(EclipseClasspath.groovy:209)\n>     at org.gradle.plugins.ide.internal.tooling.EclipseModelBuilder.populate(EclipseModelBuilder.java:85)\n>     at org.gradle.plugins.ide.internal.tooling.EclipseModelBuilder.populate(EclipseModelBuilder.java:128)\n>     at org.gradle.plugins.ide.internal.tooling.EclipseModelBuilder.buildAll(EclipseModelBuilder.java:61)\n>     at org.gradle.plugins.ide.internal.tooling.EclipseModelBuilder.buildAll(EclipseModelBuilder.java:32)\n>     at org.gradle.tooling.internal.provider.BuildModelAction.run(BuildModelAction.java:68)\n>     at org.gradle.tooling.internal.provider.BuildModelAction.run(BuildModelAction.java:32)\n>     at org.gradle.tooling.internal.provider.ConfiguringBuildAction.run(ConfiguringBuildAction.java:134)\n>     at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:36)\n>     at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:26)\n>     at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:47)\n>     at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:34)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:35)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:24)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.StartStopIfBuildAndStop.execute(StartStopIfBuildAndStop.java:33)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.ReturnResult.execute(ReturnResult.java:34)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:71)\n>     at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:69)\n>     at org.gradle.util.Swapper.swap(Swapper.java:38)\n>     at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:69)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:60)\n>     at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:34)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:70)\n>     at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:34)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:45)\n>     at org.gradle.launcher.daemon.server.DaemonStateCoordinator.runCommand(DaemonStateCoordinator.java:258)\n>     at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy.doBuild(StartBuildOrRespondWithBusy.java:49)\n>     at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:34)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.HandleCancel.execute(HandleCancel.java:36)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.HandleStop.execute(HandleStop.java:30)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.DaemonHygieneAction.execute(DaemonHygieneAction.java:39)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.CatchAndForwardDaemonFailure.execute(CatchAndForwardDaemonFailure.java:32)\n>     at org.gradle.launcher.daemon.server.exec.DaemonCommandExecution.proceed(DaemonCommandExecution.java:125)\n>     at org.gradle.launcher.daemon.server.exec.DefaultDaemonCommandExecuter.executeCommand(DefaultDaemonCommandExecuter.java:52)\n>     at org.gradle.launcher.daemon.server.DefaultIncomingConnectionHandler$ConnectionWorker.handleCommand(DefaultIncomingConnectionHandler.java:154)\n>     at org.gradle.launcher.daemon.server.DefaultIncomingConnectionHandler$ConnectionWorker.receiveAndHandleCommand(DefaultIncomingConnectionHandler.java:128)\n>     at org.gradle.launcher.daemon.server.DefaultIncomingConnectionHandler$ConnectionWorker.run(DefaultIncomingConnectionHandler.java:116)\n>     at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64)\n>     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n>     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n>     at java.lang.Thread.run(Thread.java:745)\n> We tell our users (libGDX) to use the Gradle Integration for Eclipse. This is currently a huge blocker for us and thousands of end users on Eclipse 4.4 and we'd appreciate any help with this.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/58090757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/60863386", "body": "The change looks good to me.\nI'd follow the M2E tooling and enable/disable Gradle features similar to the ones in M2E.\nMaven menu is not available for projects without Maven nature, consequently i'd do the same for Gradle.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/60863386/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/60989407", "body": "I have merged your PR, but in order to do so, I had to ask you to sign the CLA first (Contributor License Agreement). Is there any chance you've signed the CLA?\nYou can sign it here: https://support.springsource.com/spring_eclipsecla_committer_signup\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/60989407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61174112", "body": "Try not including \u201corg.gradle.toolingapi.feature\u201d. I\u2019m not sure why it\u2019s there and what it does. The tooliapi plugin project and feature is included into \u201cGradle IDE\u201d feature and this is probably the source of the error.\nThis issue is not preventing you from installing Gradle Eclipse plugin, correct? Or is it more serious than it looked to me?\n\nOn Oct 30, 2014, at 17:00, Nils Kilden-Pedersen notifications@github.com wrote:\n\n> I'm getting this when trying to install from Eclipse Marketplace:\n> \n> The following solutions are not available: Gradle Integration for Eclipse (4.4) 3.6.2.RELEASE (id=org.gradle.toolingapi.feature.feature.group, site=http://dist.springsource.com/release/TOOLS/update/e4.4/)\n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61174112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61370424", "body": "Hmm... Gradle Eclipse Tooling doesn't have support for separate classpath for test and runtime like M2E tools do. It's feature on Gradle Eclipse Integration yet to be implemented.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61370424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61987926", "body": "I'll try to implement something to address this request for 3.6.3 STS release.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61987926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/62006842", "body": "Quick Task Launcher dialog would set currently selected Gradle project\nbased on current selection in the workbench.\nFor example if you have a Gradle project selected in the Project Explorer\nthen if Quick Launcher is opened the selected project would be the Gradle\nproject selected in the Project Explorer. Furthermore, if a resource from\nGradle project is selected then the Quick Launcher would have the\nresource's parent Gradle project set.\nThe problem is that if the selected project is not a Gradle project or\nresource selected doesn't belong to a Gradle project. The project combo box\nfrom the Quick Launcher doesn't have any project selected in that case. I\nsuspect that this is the use cases you're hitting.\nI'm making the Quick Launcher to remember the last selected project such\nthat if selection in the workbench is not Gradle project then it would\nbecome the project selected from the last time Quick Launcher was shown.\nHow does that sound? Or you are more in favour of remembering the project\nfor which task(s) were run in Quick Launcher?\n\nOn Thu, Nov 6, 2014 at 10:54 AM, Andre Azzolini notifications@github.com\nwrote:\n\n> Great, thanks Alex!\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/spring-projects/eclipse-integration-gradle/issues/53#issuecomment-62000026\n> .\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/62006842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/62028626", "body": "Alright. Thanks for the feedback. Changes are in.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/62028626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/62446181", "body": "Hmm... that worked just fine for me...\n\nCheck if the Gradle eclipse integration plugins in your Plug-in Registry view are these:\norg.springsource.ide.eclipse.gradle.core (3.6.2.201410090835-RELEASE)\norg.springsource.ide.eclipse.gradle.toolingapi (3.6.2.201410090835-RELEASE)\norg.springsource.ide.eclipse.gradle.ui (3.6.2.201410090835-RELEASE)\norg.springsource.ide.eclipse.gradle.ui.taskview (3.6.2.201410090835-RELEASE)\n\nand also check if these are the ones that become active when you attempt to import your model.\n\nDid you upgrade to Gradle 3.6.2 or installed STS 3.6.2 and then added Gradle to fresh installation of STS?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/62446181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/62452949", "body": "When you import the Gradle project into Eclipse, I assume you follow the import wizard, select Gradle Project and then find the folder on your file system where the Collections projects hierarchy is located. Once that is done you click on the \"Build Model\" button and then the exception occurs?\nIs issue occurring all the time and blocking you completely? Looking at the code it's not yet clear why that issue is occurring... at least 100% of time.. perhaps there is a race condition, but it shouldn't be happening all the time it seems.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/62452949/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/62454372", "body": "We do get some issues on Gradle that occurred after upgrading Eclipse and Gradle eclipse plugin, but couldn\u2019t pinpoint what exactly is going wrong\u2026 Every time it\u2019s something different and very weird that has been tested before the release\u2026\n\n> On Nov 10, 2014, at 15:55, i23098 notifications@github.com wrote:\n> \n> Yes, import gradle project, when I press build model I got an error saying to look at the log. The exception was copy-pasted from the .log file.\n> \n> Since it worked for you, I just started with a clean install Eclipse Luna SR1, installed gradle plugin 3.62, new workspace with new git clone... And now it works. Maybe some problem in the upgrade process?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub https://github.com/spring-projects/eclipse-integration-gradle/issues/59#issuecomment-62453409.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/62454372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63325018", "body": "Updated the Gradle Eclipse feature description for 3.6.3: https://github.com/spring-projects/eclipse-integration-gradle/commit/76f604c2ab3587794f636f6ecdf775621dbe2e56\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63325018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64089814", "body": "Thnaks!-))\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64089814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64752065", "body": "Gradle Eclipse plugin 3.6.2 uses Gradle Tooling 2.1 API. Perhaps that\ncauses the error above... I suppose if you point to Gradle 2.1 or lower\nruntime in Eclipse Gradle preference page then it works, right?\n\nOn Wed, Nov 26, 2014 at 11:25 PM, kext notifications@github.com wrote:\n\n> I got below error when creating gradle project in eclipse.\n> [image: image]\n> https://cloud.githubusercontent.com/assets/1055011/5212160/f22a72e8-762b-11e4-9ce6-121946d1ff2b.png\n> \n> eclipse version is 4.4.0\n> Gradle IDE version is 3.6.2.201410090835-RELEASE\n> \n> gradle version and jdk version\n> [image: image]\n> https://cloud.githubusercontent.com/assets/1055011/5212156/cef2800e-762b-11e4-9ecf-569a2ae5e883.png\n> \n> gradle config in eclipse\n> [image: image]\n> https://cloud.githubusercontent.com/assets/1055011/5212169/2858e00c-762c-11e4-8b41-035aaca98c24.png\n> [image: image]\n> https://cloud.githubusercontent.com/assets/1055011/5212171/2ed75fee-762c-11e4-81c7-efdd440d763a.png\n> \n> Details log:\n> !ENTRY org.springsource.ide.eclipse.gradle.core 4 0 2014-11-27 11:03:55.233\n> !MESSAGE class\n> org.gradle.tooling.internal.provider.ClientSidePayloadClassLoaderFactory$MixInClassLoader$AnnotationDetector\n> has interface org.objectweb.asm.ClassVisitor as super class\n> !STACK 0\n> org.gradle.tooling.GradleConnectionException: Could not fetch model of\n> type 'HierarchicalEclipseProject' using Gradle installation\n> 'D:\\development\\gradle-2.2.1'.\n> at\n> org.gradle.tooling.internal.consumer.ResultHandlerAdapter.onFailure(ResultHandlerAdapter.java:55)\n> at\n> org.gradle.tooling.internal.consumer.async.DefaultAsyncConsumerActionExecutor$1$1.run(DefaultAsyncConsumerActionExecutor.java:57)\n> at\n> org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64)\n> at\n> java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)\n> at\n> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)\n> at java.lang.Thread.run(Thread.java:662)\n> at\n> org.gradle.tooling.internal.consumer.BlockingResultHandler.getResult(BlockingResultHandler.java:46)\n> at\n> org.gradle.tooling.internal.consumer.DefaultModelBuilder.get(DefaultModelBuilder.java:48)\n> at\n> org.springsource.ide.eclipse.gradle.core.GradleModelProvider.buildModel(GradleModelProvider.java:414)\n> at\n> org.springsource.ide.eclipse.gradle.core.GradleModelProvider$GroupedModelProvider.ensureModels(GradleModelProvider.java:295)\n> at\n> org.springsource.ide.eclipse.gradle.core.GradleProject.getModelProvider(GradleProject.java:568)\n> at\n> org.springsource.ide.eclipse.gradle.core.GradleProject.getGradleModel(GradleProject.java:628)\n> at\n> org.springsource.ide.eclipse.gradle.core.GradleProject.getSkeletalGradleModel(GradleProject.java:653)\n> at\n> org.springsource.ide.eclipse.gradle.core.wizards.GradleImportOperation.allProjects(GradleImportOperation.java:713)\n> at\n> org.springsource.ide.eclipse.gradle.core.wizards.GradleImportOperation.importAll(GradleImportOperation.java:718)\n> at\n> org.springsource.ide.eclipse.gradle.core.wizards.NewGradleProjectOperation.createProjectContents(NewGradleProjectOperation.java:104)\n> at\n> org.springsource.ide.eclipse.gradle.core.wizards.NewGradleProjectOperation.perform(NewGradleProjectOperation.java:82)\n> at\n> org.springsource.ide.eclipse.gradle.ui.wizards.NewGradleProjectWizard$1.doit(NewGradleProjectWizard.java:47)\n> at\n> org.springsource.ide.eclipse.gradle.core.util.GradleRunnable$1.run(GradleRunnable.java:53)\n> at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)\n> Caused by: java.lang.IncompatibleClassChangeError: class\n> org.gradle.tooling.internal.provider.ClientSidePayloadClassLoaderFactory$MixInClassLoader$AnnotationDetector\n> has interface org.objectweb.asm.ClassVisitor as super class\n> at java.lang.ClassLoader.defineClass1(Native Method)\n> at java.lang.ClassLoader.defineClassCond(ClassLoader.java:631)\n> at java.lang.ClassLoader.defineClass(ClassLoader.java:615)\n> at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:141)\n> at java.net.URLClassLoader.defineClass(URLClassLoader.java:283)\n> at java.net.URLClassLoader.access$000(URLClassLoader.java:58)\n> at java.net.URLClassLoader$1.run(URLClassLoader.java:197)\n> at java.security.AccessController.doPrivileged(Native Method)\n> at java.net.URLClassLoader.findClass(URLClassLoader.java:190)\n> at java.lang.ClassLoader.loadClass(ClassLoader.java:306)\n> at java.lang.ClassLoader.loadClass(ClassLoader.java:247)\n> at\n> org.gradle.tooling.internal.provider.ClientSidePayloadClassLoaderFactory$MixInClassLoader.transform(ClientSidePayloadClassLoaderFactory.java:59)\n> at\n> org.gradle.internal.classloader.TransformingClassLoader.findClass(TransformingClassLoader.java:46)\n> at java.lang.ClassLoader.loadClass(ClassLoader.java:306)\n> at java.lang.ClassLoader.loadClass(ClassLoader.java:247)\n> at java.lang.Class.forName0(Native Method)\n> at java.lang.Class.forName(Class.java:249)\n> at\n> org.gradle.tooling.internal.provider.DefaultPayloadClassLoaderRegistry$2.resolveClass(DefaultPayloadClassLoaderRegistry.java:77)\n> at\n> org.gradle.tooling.internal.provider.ClientSidePayloadClassLoaderRegistry$2.resolveClass(ClientSidePayloadClassLoaderRegistry.java:88)\n> at\n> org.gradle.tooling.internal.provider.PayloadSerializer$2.readClass(PayloadSerializer.java:124)\n> at\n> org.gradle.tooling.internal.provider.PayloadSerializer$2.readClassDescriptor(PayloadSerializer.java:104)\n> at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1578)\n> at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1494)\n> at\n> java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1748)\n> at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1327)\n> at java.io.ObjectInputStream.readObject(ObjectInputStream.java:349)\n> at\n> org.gradle.tooling.internal.provider.PayloadSerializer.deserialize(PayloadSerializer.java:137)\n> at\n> org.gradle.tooling.internal.provider.ProviderConnection.run(ProviderConnection.java:111)\n> at\n> org.gradle.tooling.internal.provider.ProviderConnection.run(ProviderConnection.java:94)\n> at\n> org.gradle.tooling.internal.provider.DefaultConnection.getModel(DefaultConnection.java:152)\n> at\n> org.gradle.tooling.internal.consumer.connection.CancellableModelBuilderBackedModelProducer.produceModel(CancellableModelBuilderBackedModelProducer.java:50)\n> at\n> org.gradle.tooling.internal.consumer.connection.GradleBuildAdapterProducer.produceModel(GradleBuildAdapterProducer.java:42)\n> at\n> org.gradle.tooling.internal.consumer.connection.BuildInvocationsAdapterProducer.produceModel(BuildInvocationsAdapterProducer.java:44)\n> at\n> org.gradle.tooling.internal.consumer.connection.ModelBuilderBackedConsumerConnection.run(ModelBuilderBackedConsumerConnection.java:62)\n> at\n> org.gradle.tooling.internal.consumer.DefaultModelBuilder$1.run(DefaultModelBuilder.java:59)\n> at\n> org.gradle.tooling.internal.consumer.connection.LazyConsumerActionExecutor.run(LazyConsumerActionExecutor.java:88)\n> at\n> org.gradle.tooling.internal.consumer.connection.ProgressLoggingConsumerActionExecutor.run(ProgressLoggingConsumerActionExecutor.java:58)\n> at\n> org.gradle.tooling.internal.consumer.connection.LoggingInitializerConsumerActionExecutor.run(LoggingInitializerConsumerActionExecutor.java:44)\n> at\n> org.gradle.tooling.internal.consumer.async.DefaultAsyncConsumerActionExecutor$1$1.run(DefaultAsyncConsumerActionExecutor.java:55)\n> at\n> org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64)\n> at\n> java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)\n> at\n> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)\n> at java.lang.Thread.run(Thread.java:662)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/spring-projects/eclipse-integration-gradle/issues/68.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64752065/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/66139820", "body": "Looks good to me.\nDid you sign the CLA?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/66139820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/67925951", "body": "Are there specific circumstances under which it became disabled? Does the project have Gradle nature? Is it a specific project? What\u2019s in the error log at the time when action becomes disabled?\n\n> On Dec 23, 2014, at 01:11, chintanpanchal notifications@github.com wrote:\n> \n> I am using GGTS 3.6.3, and however its Gradle Quick task launcher was disabled suddenly, if I press (Ctrl+Shift+Alt+r) it won't work and doesn't open the dialog box.\n> \n> Does anyone face before ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub https://github.com/spring-projects/eclipse-integration-gradle/issues/53#issuecomment-67924765.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/67925951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/67926122", "body": "Which version of Gradle integration for eclipse or STS is it?\n\n> On Dec 23, 2014, at 01:11, chintanpanchal notifications@github.com wrote:\n> \n> I am using GGTS 3.6.3, and however its Gradle Quick task launcher was disabled suddenly, if I press (Ctrl+Shift+Alt+r) it won't work and doesn't open the dialog box.\n> \n> Does anyone face before ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub https://github.com/spring-projects/eclipse-integration-gradle/issues/53#issuecomment-67924765.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/67926122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/67966511", "body": "I can\u2019t seem to be able to reproduce this issue with 3.6.3.\nWould you be able to debug the problem?\nIf yes, then please clone the Gradle eclipse repository here: https://github.com/spring-projects/eclipse-integration-gradle https://github.com/spring-projects/eclipse-integration-gradle There is documentation available on the page. (The only difference from the doc is that toolingapi project became a Maven project and you\u2019d have to run \u201cmvn clean install\u201d on it to download Gradle tooling api jars)\nOnce the code compiles run a runtime workbench, put breakpoints in ConsoleInplaceDialogActionDelegate and its super class, try to see why this action becomes disabled for you.\n\n> On Dec 23, 2014, at 06:15, chintanpanchal notifications@github.com wrote:\n> \n> There is no error logs, and all the projects in my workspace are Gradle nature.\n> When I launch Quick Task of gradle it shows nothing not even a single error message.\n> Gradle version: 3.6.3\n> \n> \u2014\n> Reply to this email directly or view it on GitHub https://github.com/spring-projects/eclipse-integration-gradle/issues/53#issuecomment-67941648.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/67966511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69036957", "body": "The Gradle project import wizard page has \u201cRun before\u201d and \u201cRun after\u201d check boxes at the top of the \u201cImport options\u201d group of controls. See the screenshot below.\n\nTasks to run are in the text boxes. Tasks in the text boxes separated by spaces are the tasks that would be run before and after the project is imported into Eclipse. Same tasks are run when the project is refreshed. Refreshing the project really removes the project and then imports it back in. Therefore, those are probably the tasks you\u2019re looking for. The limitation is that these tasks can only be specified once during the import and will be executed for each refresh. Also these tasks come from the root project rather than from a specific subproject that you\u2019d like to refresh\u2026\n\nFeel free to suggest the functionality that you\u2019d like to have for such a hook. Please document it in a JIRA issue against GRADLE component here: https://issuetracker.springsource.com\n\n> On Jan 6, 2015, at 18:57, Trent Bartlem notifications@github.com wrote:\n> \n> Other Eclipse plugins (maven etc) allow users to specify, on a per-project basis, which tasks to run as part of refreshing the project, which also covers the initial refresh after checking it out of source control.\n> \n> This allows a project to automatically trigger gradle tasks on checkout, which is a significant QOL improvement.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub https://github.com/spring-projects/eclipse-integration-gradle/issues/76.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69036957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69049105", "body": "This seem to come from Gradle Tooling API. It fails to build EclipseProject model. I investigated a bit, created a simple JUnit that uses Gradle Tooling API mostly and still get the same exception\u2026 We would have to raise a defect against Gradle Tooling API.\n\n> On Jan 6, 2015, at 23:42, Yun Zhi Lin notifications@github.com wrote:\n> \n> I'm using\n> \n> OSX Yosemite\n> Java 1.7_55\n> Eclipse IDE for Java Developers 4.4.1.20140925-1820\n> Gradle IDE 3.6.3.201411271013-RELEASE\n> When importing the following simple build.gradle from this sample project https://github.com/yunspace/eclipse_gradle_appengine_bug:\n> \n> buildscript {\n>     repositories {\n>         jcenter()\n>     }\n>     dependencies {\n>         classpath 'com.google.appengine:gradle-appengine-plugin:1.9.17'\n>     }\n> }\n> apply plugin: 'war'\n> apply plugin: 'appengine'\n> apply plugin: 'java'\n> \n> sourceCompatibility = 1.7\n> version = '1.0'\n> \n> repositories {\n>     jcenter()\n> }\n> \n> dependencies {\n>     appengineSdk 'com.google.appengine:appengine-java-sdk:1.9.17'\n>     testCompile group: 'junit', name: 'junit', version: '4.11'\n> }\n> \n> appengine {\n>     downloadSdk = true\n> }\n> I get the following error:\n> \n> !ENTRY org.springsource.ide.eclipse.gradle.core 4 0 2015-01-07 15:17:25.270\n> !MESSAGE java.io.File cannot be cast to org.gradle.api.artifacts.Configuration\n> !STACK 0\n> java.lang.reflect.InvocationTargetException\n> at org.springsource.ide.eclipse.gradle.core.util.GradleRunnable.run(GradleRunnable.java:112)\n> at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)\n> \n> Caused by: org.eclipse.core.runtime.CoreException: java.io.File cannot be cast to org.gradle.api.artifacts.Configuration\n> at org.springsource.ide.eclipse.gradle.core.util.ExceptionUtil.coreException(ExceptionUtil.java:42)\n> at org.springsource.ide.eclipse.gradle.core.util.ExceptionUtil.coreException(ExceptionUtil.java:53)\n> at org.springsource.ide.eclipse.gradle.core.modelmanager.BuildResult.get(BuildResult.java:85)\n> at  org.springsource.ide.eclipse.gradle.core.modelmanager.GradleProjectModelManager.getModelInternal(GradleProjectModelManager.java:145)\n> at org.springsource.ide.eclipse.gradle.core.modelmanager.GradleProjectModelManager.getModel(GradleProjectModelManager.java:100)\n> at org.springsource.ide.eclipse.gradle.core.modelmanager.GradleModelManager.getModel(GradleModelManager.java:77)\n> at org.springsource.ide.eclipse.gradle.core.GradleProject.getSkeletalGradleModel(GradleProject.java:608)\n> at org.springsource.ide.eclipse.gradle.ui.wizards.GradleImportWizardPageOne$11.doit(GradleImportWizardPageOne.java:516)\n> at org.springsource.ide.eclipse.gradle.core.util.GradleRunnable.run(GradleRunnable.java:104)\n> ... 1 more\n> \n> Caused by: org.gradle.tooling.GradleConnectionException: Could not fetch model of type 'HierarchicalEclipseProject' using Gradle distribution 'https://services.gradle.org/distributions/gradle-2.1-bin.zip'.\n> at org.gradle.tooling.internal.consumer.ResultHandlerAdapter.onFailure(ResultHandlerAdapter.java:55)\n> at org.gradle.tooling.internal.consumer.async.DefaultAsyncConsumerActionExecutor$1$1.run(DefaultAsyncConsumerActionExecutor.java:57)\n> at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64)\n> at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n> at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n> at java.lang.Thread.run(Thread.java:745)\n> at org.gradle.tooling.internal.consumer.BlockingResultHandler.getResult(BlockingResultHandler.java:46)\n> at org.gradle.tooling.internal.consumer.DefaultModelBuilder.get(DefaultModelBuilder.java:48)\n> at org.springsource.ide.eclipse.gradle.core.modelmanager.ToolinApiUtils.buildModel(ToolinApiUtils.java:103)\n> at org.springsource.ide.eclipse.gradle.core.modelmanager.DefaultModelBuilder.doBuild(DefaultModelBuilder.java:30)\n> at org.springsource.ide.eclipse.gradle.core.modelmanager.AbstractModelBuilder.buildModel(AbstractModelBuilder.java:40)\n> at org.springsource.ide.eclipse.gradle.core.modelmanager.HierarchicalProjectBuildStrategy.buildReferenceModel(HierarchicalProjectBuildStrategy.java:179)\n> at org.springsource.ide.eclipse.gradle.core.modelmanager.HierarchicalProjectBuildStrategy.buildModels(HierarchicalProjectBuildStrategy.java:65)\n> at org.springsource.ide.eclipse.gradle.core.modelmanager.GradleProjectModelManager.getModelInternal(GradleProjectModelManager.java:141)\n> ... 6 more\n> This project runs correctly via command line and imports fine in IntelliJ. I have narrowed down the issue to appengine gradle plugin 1.9.17. Please verify if this is an issue on the Eclipse Gradle integration side in importing the plugin, or should I raise an issue with the plugin provider.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub https://github.com/spring-projects/eclipse-integration-gradle/issues/79.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69049105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69058227", "body": "I have mirrored your question on Gradle forum: http://forums.gradle.org/gradle/topics/gradle-tooling-api-cannot-build-hierarchicaleclipseproject-model-for-a-project-using-appengine-plugin?rfm=1 http://forums.gradle.org/gradle/topics/gradle-tooling-api-cannot-build-hierarchicaleclipseproject-model-for-a-project-using-appengine-plugin?rfm=1\nMight be something wrong on the app engine plugin provider, just as you suspected\u2026\n\n> On Jan 7, 2015, at 11:37, Alex Boyko aboyko@pivotal.io wrote:\n> \n> This seem to come from Gradle Tooling API. It fails to build EclipseProject model. I investigated a bit, created a simple JUnit that uses Gradle Tooling API mostly and still get the same exception\u2026 We would have to raise a defect against Gradle Tooling API.\n> \n> > On Jan 6, 2015, at 23:42, Yun Zhi Lin <notifications@github.com <mailto:notifications@github.com>> wrote:\n> > \n> > I'm using\n> > \n> > OSX Yosemite\n> > Java 1.7_55\n> > Eclipse IDE for Java Developers 4.4.1.20140925-1820\n> > Gradle IDE 3.6.3.201411271013-RELEASE\n> > When importing the following simple build.gradle from this sample project https://github.com/yunspace/eclipse_gradle_appengine_bug:\n> > \n> > buildscript {\n> >     repositories {\n> >         jcenter()\n> >     }\n> >     dependencies {\n> >         classpath 'com.google.appengine:gradle-appengine-plugin:1.9.17'\n> >     }\n> > }\n> > apply plugin: 'war'\n> > apply plugin: 'appengine'\n> > apply plugin: 'java'\n> > \n> > sourceCompatibility = 1.7\n> > version = '1.0'\n> > \n> > repositories {\n> >     jcenter()\n> > }\n> > \n> > dependencies {\n> >     appengineSdk 'com.google.appengine:appengine-java-sdk:1.9.17'\n> >     testCompile group: 'junit', name: 'junit', version: '4.11'\n> > }\n> > \n> > appengine {\n> >     downloadSdk = true\n> > }\n> > I get the following error:\n> > \n> > !ENTRY org.springsource.ide.eclipse.gradle.core 4 0 2015-01-07 15:17:25.270\n> > !MESSAGE java.io.File cannot be cast to org.gradle.api.artifacts.Configuration\n> > !STACK 0\n> > java.lang.reflect.InvocationTargetException\n> > at org.springsource.ide.eclipse.gradle.core.util.GradleRunnable.run(GradleRunnable.java:112)\n> > at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)\n> > \n> > Caused by: org.eclipse.core.runtime.CoreException: java.io.File cannot be cast to org.gradle.api.artifacts.Configuration\n> > at org.springsource.ide.eclipse.gradle.core.util.ExceptionUtil.coreException(ExceptionUtil.java:42)\n> > at org.springsource.ide.eclipse.gradle.core.util.ExceptionUtil.coreException(ExceptionUtil.java:53)\n> > at org.springsource.ide.eclipse.gradle.core.modelmanager.BuildResult.get(BuildResult.java:85)\n> > at  org.springsource.ide.eclipse.gradle.core.modelmanager.GradleProjectModelManager.getModelInternal(GradleProjectModelManager.java:145)\n> > at org.springsource.ide.eclipse.gradle.core.modelmanager.GradleProjectModelManager.getModel(GradleProjectModelManager.java:100)\n> > at org.springsource.ide.eclipse.gradle.core.modelmanager.GradleModelManager.getModel(GradleModelManager.java:77)\n> > at org.springsource.ide.eclipse.gradle.core.GradleProject.getSkeletalGradleModel(GradleProject.java:608)\n> > at org.springsource.ide.eclipse.gradle.ui.wizards.GradleImportWizardPageOne$11.doit(GradleImportWizardPageOne.java:516)\n> > at org.springsource.ide.eclipse.gradle.core.util.GradleRunnable.run(GradleRunnable.java:104)\n> > ... 1 more\n> > \n> > Caused by: org.gradle.tooling.GradleConnectionException: Could not fetch model of type 'HierarchicalEclipseProject' using Gradle distribution 'https://services.gradle.org/distributions/gradle-2.1-bin.zip' <https://services.gradle.org/distributions/gradle-2.1-bin.zip'>.\n> > at org.gradle.tooling.internal.consumer.ResultHandlerAdapter.onFailure(ResultHandlerAdapter.java:55)\n> > at org.gradle.tooling.internal.consumer.async.DefaultAsyncConsumerActionExecutor$1$1.run(DefaultAsyncConsumerActionExecutor.java:57)\n> > at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64)\n> > at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n> > at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n> > at java.lang.Thread.run(Thread.java:745)\n> > at org.gradle.tooling.internal.consumer.BlockingResultHandler.getResult(BlockingResultHandler.java:46)\n> > at org.gradle.tooling.internal.consumer.DefaultModelBuilder.get(DefaultModelBuilder.java:48)\n> > at org.springsource.ide.eclipse.gradle.core.modelmanager.ToolinApiUtils.buildModel(ToolinApiUtils.java:103)\n> > at org.springsource.ide.eclipse.gradle.core.modelmanager.DefaultModelBuilder.doBuild(DefaultModelBuilder.java:30)\n> > at org.springsource.ide.eclipse.gradle.core.modelmanager.AbstractModelBuilder.buildModel(AbstractModelBuilder.java:40)\n> > at org.springsource.ide.eclipse.gradle.core.modelmanager.HierarchicalProjectBuildStrategy.buildReferenceModel(HierarchicalProjectBuildStrategy.java:179)\n> > at org.springsource.ide.eclipse.gradle.core.modelmanager.HierarchicalProjectBuildStrategy.buildModels(HierarchicalProjectBuildStrategy.java:65)\n> > at org.springsource.ide.eclipse.gradle.core.modelmanager.GradleProjectModelManager.getModelInternal(GradleProjectModelManager.java:141)\n> > ... 6 more\n> > This project runs correctly via command line and imports fine in IntelliJ. I have narrowed down the issue to appengine gradle plugin 1.9.17. Please verify if this is an issue on the Eclipse Gradle integration side in importing the plugin, or should I raise an issue with the plugin provider.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub https://github.com/spring-projects/eclipse-integration-gradle/issues/79.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69058227/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69520206", "body": "This is the issue with the appengine plugin.\nHere is the repossess from Gradle core developers: http://forums.gradle.org/gradle/topics/gradle-tooling-api-cannot-build-hierarchicaleclipseproject-model-for-a-project-using-appengine-plugin?utm_source=notification&utm_medium=email&utm_campaign=new_reply&utm_content=reply_button&reply%5Bid%5D=15222186#reply_15222186 http://forums.gradle.org/gradle/topics/gradle-tooling-api-cannot-build-hierarchicaleclipseproject-model-for-a-project-using-appengine-plugin?utm_source=notification&utm_medium=email&utm_campaign=new_reply&utm_content=reply_button&reply[id]=15222186#reply_15222186\n\nPlease raise a defect against the appengine plugin vendor. There link to Gurgle app engine GitHub repo is: https://github.com/GoogleCloudPlatform/gradle-appengine-plugin/ https://github.com/GoogleCloudPlatform/gradle-appengine-plugin/\n\n> On Jan 7, 2015, at 12:31, Alex Boyko aboyko@pivotal.io wrote:\n> \n> I have mirrored your question on Gradle forum: http://forums.gradle.org/gradle/topics/gradle-tooling-api-cannot-build-hierarchicaleclipseproject-model-for-a-project-using-appengine-plugin?rfm=1 http://forums.gradle.org/gradle/topics/gradle-tooling-api-cannot-build-hierarchicaleclipseproject-model-for-a-project-using-appengine-plugin?rfm=1\n> Might be something wrong on the app engine plugin provider, just as you suspected\u2026\n> \n> > On Jan 7, 2015, at 11:37, Alex Boyko <aboyko@pivotal.io <mailto:aboyko@pivotal.io>> wrote:\n> > \n> > This seem to come from Gradle Tooling API. It fails to build EclipseProject model. I investigated a bit, created a simple JUnit that uses Gradle Tooling API mostly and still get the same exception\u2026 We would have to raise a defect against Gradle Tooling API.\n> > \n> > > On Jan 6, 2015, at 23:42, Yun Zhi Lin <notifications@github.com <mailto:notifications@github.com>> wrote:\n> > > \n> > > I'm using\n> > > \n> > > OSX Yosemite\n> > > Java 1.7_55\n> > > Eclipse IDE for Java Developers 4.4.1.20140925-1820\n> > > Gradle IDE 3.6.3.201411271013-RELEASE\n> > > When importing the following simple build.gradle from this sample project https://github.com/yunspace/eclipse_gradle_appengine_bug:\n> > > \n> > > buildscript {\n> > >     repositories {\n> > >         jcenter()\n> > >     }\n> > >     dependencies {\n> > >         classpath 'com.google.appengine:gradle-appengine-plugin:1.9.17'\n> > >     }\n> > > }\n> > > apply plugin: 'war'\n> > > apply plugin: 'appengine'\n> > > apply plugin: 'java'\n> > > \n> > > sourceCompatibility = 1.7\n> > > version = '1.0'\n> > > \n> > > repositories {\n> > >     jcenter()\n> > > }\n> > > \n> > > dependencies {\n> > >     appengineSdk 'com.google.appengine:appengine-java-sdk:1.9.17'\n> > >     testCompile group: 'junit', name: 'junit', version: '4.11'\n> > > }\n> > > \n> > > appengine {\n> > >     downloadSdk = true\n> > > }\n> > > I get the following error:\n> > > \n> > > !ENTRY org.springsource.ide.eclipse.gradle.core 4 0 2015-01-07 15:17:25.270\n> > > !MESSAGE java.io.File cannot be cast to org.gradle.api.artifacts.Configuration\n> > > !STACK 0\n> > > java.lang.reflect.InvocationTargetException\n> > > at org.springsource.ide.eclipse.gradle.core.util.GradleRunnable.run(GradleRunnable.java:112)\n> > > at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)\n> > > \n> > > Caused by: org.eclipse.core.runtime.CoreException: java.io.File cannot be cast to org.gradle.api.artifacts.Configuration\n> > > at org.springsource.ide.eclipse.gradle.core.util.ExceptionUtil.coreException(ExceptionUtil.java:42)\n> > > at org.springsource.ide.eclipse.gradle.core.util.ExceptionUtil.coreException(ExceptionUtil.java:53)\n> > > at org.springsource.ide.eclipse.gradle.core.modelmanager.BuildResult.get(BuildResult.java:85)\n> > > at  org.springsource.ide.eclipse.gradle.core.modelmanager.GradleProjectModelManager.getModelInternal(GradleProjectModelManager.java:145)\n> > > at org.springsource.ide.eclipse.gradle.core.modelmanager.GradleProjectModelManager.getModel(GradleProjectModelManager.java:100)\n> > > at org.springsource.ide.eclipse.gradle.core.modelmanager.GradleModelManager.getModel(GradleModelManager.java:77)\n> > > at org.springsource.ide.eclipse.gradle.core.GradleProject.getSkeletalGradleModel(GradleProject.java:608)\n> > > at org.springsource.ide.eclipse.gradle.ui.wizards.GradleImportWizardPageOne$11.doit(GradleImportWizardPageOne.java:516)\n> > > at org.springsource.ide.eclipse.gradle.core.util.GradleRunnable.run(GradleRunnable.java:104)\n> > > ... 1 more\n> > > \n> > > Caused by: org.gradle.tooling.GradleConnectionException: Could not fetch model of type 'HierarchicalEclipseProject' using Gradle distribution 'https://services.gradle.org/distributions/gradle-2.1-bin.zip' <https://services.gradle.org/distributions/gradle-2.1-bin.zip'>.\n> > > at org.gradle.tooling.internal.consumer.ResultHandlerAdapter.onFailure(ResultHandlerAdapter.java:55)\n> > > at org.gradle.tooling.internal.consumer.async.DefaultAsyncConsumerActionExecutor$1$1.run(DefaultAsyncConsumerActionExecutor.java:57)\n> > > at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64)\n> > > at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n> > > at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n> > > at java.lang.Thread.run(Thread.java:745)\n> > > at org.gradle.tooling.internal.consumer.BlockingResultHandler.getResult(BlockingResultHandler.java:46)\n> > > at org.gradle.tooling.internal.consumer.DefaultModelBuilder.get(DefaultModelBuilder.java:48)\n> > > at org.springsource.ide.eclipse.gradle.core.modelmanager.ToolinApiUtils.buildModel(ToolinApiUtils.java:103)\n> > > at org.springsource.ide.eclipse.gradle.core.modelmanager.DefaultModelBuilder.doBuild(DefaultModelBuilder.java:30)\n> > > at org.springsource.ide.eclipse.gradle.core.modelmanager.AbstractModelBuilder.buildModel(AbstractModelBuilder.java:40)\n> > > at org.springsource.ide.eclipse.gradle.core.modelmanager.HierarchicalProjectBuildStrategy.buildReferenceModel(HierarchicalProjectBuildStrategy.java:179)\n> > > at org.springsource.ide.eclipse.gradle.core.modelmanager.HierarchicalProjectBuildStrategy.buildModels(HierarchicalProjectBuildStrategy.java:65)\n> > > at org.springsource.ide.eclipse.gradle.core.modelmanager.GradleProjectModelManager.getModelInternal(GradleProjectModelManager.java:141)\n> > > ... 6 more\n> > > This project runs correctly via command line and imports fine in IntelliJ. I have narrowed down the issue to appengine gradle plugin 1.9.17. Please verify if this is an issue on the Eclipse Gradle integration side in importing the plugin, or should I raise an issue with the plugin provider.\n> > > \n> > > \u2014\n> > > Reply to this email directly or view it on GitHub https://github.com/spring-projects/eclipse-integration-gradle/issues/79.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69520206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/73439656", "body": "I could reproduce the problem. However, it doesn't prevent you from opening the Quick Tasks Launcher, correct? The CA works as expected as well, right?\nThe issue is that the tasks viewer object is built by Quick Tasks Launcher and the \"Gradle Build\" External Tools Launch config wizard. The same id handler for CA is registered in both cases, hence you get a message in the log. I think it's worth putting this as a bug report in Gradle Eclipse JIRA https://issuetracker.springsource.com GRADLE component. Think the priority for this is minor since it doesn't block the workflow... at least it doesn't cause any harm really from I've seen (please correct me if I'm wrong)\n\nP.S. I could only reproduce this when i pinned the quick tasks launcher (left it opened all the time) and then attempted to open the \"Gradle Build\" External Tools launch config wizard. How do you reproduce it? \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/73439656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74116221", "body": "Did you have Gradle Tasks view opened? Did you use Quick Tasks Launcher or \u201cGradle Build\u201d external tools launch config wizard?\nTry closing Gradle Tasks view and not using the Quick Tasks Launcher and see if that helps.\nOnce you closed Gradle Tasks view try re-importing the project\u2026\n\nNow, I\u2019ve noticed that you\u2019re talking about \"importing and refreshing gradle tasks\u201d\u2026 Gradle tasks can be refreshed in the Gradle Tasks view. Only Gradle projects can be imported though\u2026 My guess it\u2019s the project import/refresh being slow, correct? Is that annoying because the UI is blocked at that time?\n\n> On Feb 12, 2015, at 12:00, Kris De Volder notifications@github.com wrote:\n> \n> The Gradle 2.3 release is near. Are you planning to update to this soon?\n> \n> When it comes out we will probably update to its tooling API, but it doesn't help with the BuildActions issue since the problem is not in the tooling API itself but in the Gradle version that people use.\n> \n> This means we still cannot use BuildActions until everyone has switched to Gradle 2.3.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub https://github.com/spring-projects/eclipse-integration-gradle/issues/82#issuecomment-74108377.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74116221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74540926", "body": "I have tried Spring-XD code base: https://github.com/spring-projects/spring-xd with STS 3.6.3 (Gradle 3.6.3) and STS 3.6.0 (Gradle 3.6.0).\nI didn't notice a slow down (at least significant one) when Gradle Tasks view is opened. The only difference between 3.6.3 and 3.6.0 was when switching between projects in Gradle Tasks view. Switching to a project that has no cached BuildInvocations model cached causes the BuildInvocations model to build first before the tasks are shown (takes ~5 sec with Spring-XD workspace, this is expected). Also, when Gradle Tasks view is refreshed the EclipseProject model is build for the hierarchy of projects and one BuildInvocations model is built for the currently selected project. Note that BuildInvocations models are cached for projects, consequently it won't be build again for the project if it's selected again.\nWonder if you can try Spring-XD code base and point exactly to a place, process that runs slower.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74540926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/97116443", "body": "Do you mind removing formatting/blank space changes? It's too many of them and difficult to track what's being changed... I suspect that you change far less code then Git shows...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/97116443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/97122814", "body": "Did you sign the CLA yet? This is the link: https://support.springsource.com/spring_eclipsecla_committer_signup Please sign it - takes a minute. This is for us to be able to accept your contributions.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/97122814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/97199311", "body": "Have you signed the CLA?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/97199311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "shanman190": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/65beb37614125e3a89ba5956b85457d366572af9", "message": "Re-ordered remapped project references to be put at the end of the classpath"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/68063193", "body": "Created issue STS-3997\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/68063193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/68064059", "body": "Yep, I've already signed it.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/68064059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "gamerson": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/c08a6852a7807d8536dccea8ae84c4d7cb183795", "message": "Adds a global \"Ctrl+F5\" refresh All command\n\nSigned-off-by: Gregory Amerson <gregory.amerson@liferay.com>"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/9c6ffbb72f8610017e12b609afe2759af6bb772b", "message": "Ensure Gradle menu is available when contributing menu items\n\nSigned-off-by: Gregory Amerson <gregory.amerson@liferay.com>"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/65332752", "body": "Thanks @kdvolder  for the notice.  I just signed the CLA online.  Do you need any more info, like that number they sent me?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/65332752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/66144880", "body": "Yep, sure did.\n\nOn Tue, Dec 9, 2014 at 12:17 AM, Alex Boyko notifications@github.com\nwrote:\n\n> Looks good to me.\n> Did you sign the CLA?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/spring-projects/eclipse-integration-gradle/pull/72#issuecomment-66139820\n> .\n\n## \n\nGreg Amerson\nLiferay Developer Tools\nLiferay, Inc. www.liferay.com\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/66144880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "a1dutch": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/a7e378c6ad19b2dbcb0a0efc07d6caadf1b822bd", "message": "fix warnings about non existent menu"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/02f9e8315ca25d0d845a96181e40f2846f34cf6c", "message": "only enable gradle menu when the gradle nature is present"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/60879406", "body": "It's possible to have both maven and gradle natures on the same project\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/60879406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/60980158", "body": "Will this be in the nightly build tonight?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/60980158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/60991750", "body": "just done it\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/60991750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/65099453", "body": "maybe it needs adding to the actions also, i don't mind having a look at it again later on in the week\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/65099453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "andrask": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/a81413106b3dc6367e6d92a10ef1d0e7cac93304", "message": "More robust history length control"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/56049e65677d1a610ce1170bb54b45e5802ad26f", "message": "Merge branch 'master' of https://github.com/andrask/eclipse-integration-gradle"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/247121345cffa7fd3dae47053388b87bafff6fa1", "message": "add the \"most recently used\" pattern to the root folder history save operation"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/c04dcb593eac6eae13aa8139bf31cc12801b893b", "message": "overwrite last commit"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/ae392bb63c9df567817f8e7d8637be952e9af4ae", "message": "add the \"most recently used\" pattern to the root folder history save operation"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63446299", "body": "Yes, it makes sure that the most recently used folder is on the top and the others are in recently used order with the least recently used at the end.\n\nI have signed the the CLA. Let me know if you need more info.\n\nWe are turning a maven project to gradle based and so far it's a breeze! I'll try to keep contributing as we find out more. So far I can say it's awesome.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63446299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63534575", "body": "Excellent! I'm looking forward to the coming release. :)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63534575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64469175", "body": "Oh, boy! Are you serious about this?\n\"I do think the current solution is problematic unless you have just a few\n'toy' projects in the workspace.\"\nI have more than 300 projects. Do you think it is feasible to handle this\nsize with the current tooling?\nThanks\nOn Nov 25, 2014 9:13 PM, \"Kris De Volder\" notifications@github.com wrote:\n\n> Correct. Sorry for the hassle it caused on your part.\n> \n> No problem, it was actually a useful interaction as it made me investigate\n> 'BuildActions' as a possible future solution for this. I do think the\n> current solution is problematic unless you have just a few 'toy' projects\n> in the workspace.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/spring-projects/eclipse-integration-gradle/issues/57#issuecomment-64463373\n> .\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64469175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69309765", "body": "As I have no clue what the issue is, I can't prepare an example project. First I would be happy to know at least whether the list shown in the error message is ordered or not. The error is probably provided by eclipse but it's really annoying.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69309765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69340657", "body": "I loaded the projects in Idea which showed me a completely legible cause for the cycle. Eclipse is quite bad at this apparently. Thanks for your help.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69340657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/73760641", "body": ":+1: with 300+ projects\n\nAdditionally, almost every time I update the code, many eclipse projects fall apart: lose gradle nature, get inexplicable compilation errors, lose previously known source folders... Practically, the only solution is to reimport everything which is a huge pain.\n\nI'm trying to put together an example project. One of the major issues seems to be when an already imported module is deleted.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/73760641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jkschneider": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/a50517b59c9c70b8d3039e480c4ec15c48db40d7", "message": "Update README.md"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/commits/40bca4cdd456d7c493a8b15db5ee4043344c205d", "message": "Update README.md"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/42053673", "body": "I can't understand the use case for why folks would want project references on the project itself instead of inside the classpath container (and there may be a good reason!).  The only thing that comes to mind is maybe mimicking Maven behavior?  IvyDE used to work this way too.\n\nI think historically these kind of dependency management plugins have been built by putting project references on the project.  It wasn't until later that Eclipse added support for including project reference classpath entries on the classpath container itself.\n\nI have a followup pull request coming here in the next couple of days to allow full support for partial multi-module project inclusion in a workspace.  For the workspace resource listener that watches for project open and closed events, the logic is much simpler if we can simply swap out project references for library entries and vice versa if project references are held on the classpath container and it will be less disruptive to the eclipse metadata that may be committed to VCS.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/42053673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/42131402", "body": "Thanks for reminding me, Paul.  JIRA is here: https://issuetracker.springsource.com/browse/STS-3818\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/42131402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "bramp": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/pulls/103", "title": "Upgrade Apache Commons Collections to v3.2.2", "body": "Version 3.2.1 has a CVSS 10.0 vulnerability. That's the worst kind of\nvulnerability that exists. By merely existing on the classpath, this\nlibrary causes the Java serialization parser for the entire JVM process\nto go from being a state machine to a turing machine. A turing machine\nwith an exec() function!\n\nhttps://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-8103\nhttps://commons.apache.org/proper/commons-collections/security-reports.html\nhttp://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Meai1": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/20521857", "body": "Well I tried that first, I pasted it into a browser to check if they exist at all and got the access denied. Here is the error I get from eclipse:\n\n```\nUnable to read repository at http://dist.springsource.com/milestone/TOOLS/gradle/content.xml.\nUnable to read repository at http://dist.springsource.com/milestone/TOOLS/gradle/content.xml.\nRead timed out\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/20521857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/20524553", "body": "Yes, that one works, I'm installing now. I'm using Eclipse Kepler, maybe something broke there?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/20524553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/20606008", "body": "Looks like I was too fast, it was just calculating dependencies for a very long time and then aborts with:\n\nCannot complete the install because one or more required items could not be found.\n  Software being installed: Eclipse Integration Commons 3.3.0.201306020927-M2 (org.springsource.ide.eclipse.commons.feature.group 3.3.0.201306020927-M2)\n  Missing requirement: SpringSource Tool Suite Workspace Configuration 3.3.0.201306020927-M2 (org.springsource.ide.eclipse.commons.configurator 3.3.0.201306020927-M2) requires 'bundle org.springframework.core [3.0.1,4.1.0)' but it could not be found\n  Cannot satisfy dependency:\n    From: Eclipse Integration Commons 3.3.0.201306020927-M2 (org.springsource.ide.eclipse.commons.feature.group 3.3.0.201306020927-M2)\n    To: org.springsource.ide.eclipse.commons.configurator [3.3.0.201306020927-M2]\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/20606008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/40480715", "body": "I just realized that this must be a problem of the 'gradle eclipse' task itself, brain freeze on my part\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/40480715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "DKroot": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/22669279", "body": "Forgot to mention: there is no related output in Eclipse Consoles or Eclipse Error Log whatsoever\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/22669279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/22670491", "body": "Next thing I tried to no avail:\n- Remove Gradle container library in .classpath, open project and then try to enable Dependency Management\n\nI'm running out of ideas.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/22670491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/22672440", "body": "OK, these might be related: https://issuetracker.springsource.com/browse/STS-3419, https://issuetracker.springsource.com/browse/STS-3495 as our project does use Lombok. Now I have couple of more ideas: 1) try to disable Gradle daemon and 2) try to disable Lombok before Resolving Dependencies and then reenable it.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/22672440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "stephanenicolas": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/22688866", "body": "It worked as STS 3.3.0 was released yesterday and it worked for Kepler. Thanks for your answer.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/22688866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "bwmeier": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/22711161", "body": "Disabling Lombok works, but is really annoying.  I was unable to configure the Gradle daemon in any way that made the problem go away, though.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/22711161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dubacher": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/22724547", "body": "Thanks for your immediate help!\n\nIt worked for me.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/22724547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "reap": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24719631", "body": "I got the same error, but was able to import the project after changing the Gradle distribution used by the plugin to gradle-1.7\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24719631/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kenyee": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24736959", "body": "I can confirm @reap's workaround.\nPlugin should be updated so default uses the latest Gradle distribution automatically (it defaults to 1.5).\n\nWorkaround in detail is:\n- download latest Gradle (1.7)\n- in Eclipse, do Windows/Preferences\n- choose Gradle on the left\n- update Gradle Distribution in the dialog to point to the folder you installed the latest Gradle into\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24736959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rkapsi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24823979", "body": "`gradle cleanEclipse eclipse` works.\n\nYou're most likely correct regards Gradle version. We're using Gradle 1.6+. Some folks had an older version installed and ran into the same problem on the CLI as the Tomcat Plugin (I believe I saw it was downloading Gradle 1.5 in the Build Model step).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24823979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/25168315", "body": "Adding a wrapper task and pointing it to 1.6 did the trick.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/25168315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "tHerrmann": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24824204", "body": "Hi Kris,\n\nI thought the dependencies should be sorted in the same way I list them in the dependencies configuration. I'm rather new to gradle and was expecting it would behave similar to my classpath settings in eclipse where you can specify a certain order.\nThe gradle build script seemed to handle it that way also. Both on linux and windows.\n\nTobias \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24824204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24857521", "body": "Thanks for your effort. I will follow the issue on your tracker.\n\nTobias\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/24857521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "nikolauskrismer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/35830170", "body": "I will have a deeper look into this, if I find some more time to do so.\nBy now I realized that the problem actually can occur on the commandline also. It seems that gradle actually generates the right content (and also the gradle plugin in eclipse generated it correctly), but eclipse messes up things when refreshing the project (or the workspace)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/35830170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jimmytheneutrino": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/37169761", "body": "Specifiying gradle wrapper is the correct solution for most cases, I will not argue with that. This was exactly my problem as the project which I was messing with specified an older verson of gradle in its gradlew.properties. Thank you.\n\nBut the reason for specifying system gradle distribution might be the following: gradle somehow creates different caches for different versions. You might want to use a single cache if you do not want to download libs for all the different versions. In any case you might want to override gradlew settings in favor of system settings (just like you can use gradle instead of gradlew in console).\n\n> Also if you paste the url to a download zip on the internet, that should also work (it will be downloaded and unzipped on your behalf).\n\nThis sounds like a good solution too.\n\n> Why can't you just leave the distribution intact?\n\nI am installing from a package made for my system (Archlinux). It does not contain any unnecessary files for the system and, as is the standard in linux, distributes files across different system folders. \n\n> I'll gladly change those few lines of code if you have a better idea. \n\nMaybe it would be enough to just check for bin/gradle file?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/37169761/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/37395106", "body": "I understood that shell or bat are not necessary. Is it so? If so it could be ok to check just for bin/gradle file? In my case bin/gradle and lib are in one place, so that just removing the check for gradle.bat would solve the problem.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/37395106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/37645941", "body": "Good idea. \n\n(I got confused a little before because I missed the fact that bin/gradle IS the shell file. I have another gradle.sh in a different location that adjusted some bash env vars. Sorry for that.)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/37645941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "SebTardif": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/37842290", "body": "I see the issue been closed. I think it should be blocked against a bug we open against Gradle tooling API.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/37842290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "amckinlay": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/38645132", "body": "The Gradle limitations that are hampering this should be [fixed](http://issues.gradle.org/browse/GRADLE-2434) in Gradle 1.12.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/38645132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "monkeyhybrid": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39020240", "body": "Just thought I'd add, I'm seeing the same error when trying to install 'Extensions / Gradle Integration' from the update site http://dist.springsource.com/release/TOOLS/gradle.\n\nIt installs fine if I deselect the optional components, as suggested by @kdvolder.\n\nI'm using Eclipse 4.3.2 (Standard), with latest Oracle Java, and a handful of Android / WTP plugins.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39020240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "MBurchard": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39502296", "body": "![eclipse installation details](https://cloud.githubusercontent.com/assets/4256302/2608787/b61e461c-bb6e-11e3-8c5f-b560c55c2c2b.png)\n![gradle preferences](https://cloud.githubusercontent.com/assets/4256302/2608803/eb73fea6-bb6e-11e3-85c1-bf4a22c14535.png)\nAlso the other Options are set to default cause I just created a new workspace for this test.\nNow I created a new Java Project _Demo01_.\nThen I right click the project, click on **Configure** > **Convert to Gradle Project**.\nNow it starts working. The Project Icon changes but the task doesn't stop.\n![converted project](https://cloud.githubusercontent.com/assets/4256302/2608870/b731913e-bb6f-11e3-9c54-f7a6d9e15706.png)\nAfter 5 minutes I still wait for it to finish...\n![task running](https://cloud.githubusercontent.com/assets/4256302/2608912/417f67d0-bb70-11e3-934d-a15f559dbb32.png)\nIt hangs at 25%.\nI havent't found any additional output in any console or so.\nEclipse must be killed now cause you can't work anymore...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39502296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39540375", "body": "Good Morning,\nso many comments during the night, so I'll give my best to respond.\n\n> BTW, is that your initial setup? Eclipse for JEE dev + Groovy Eclipse + Gradle Eclipse Integration?\n\nWhat do you mean with initial setup? I used to work with Eclipse for JEE for years now. Since Spring 4 was released and all those good small tutorials with Gradle came up, I installed Gradle IDE and cause the scripts are groovy I also installed Groovy Eclipse.\n\n> Just to clarify something that is probably not obvious. THe \"Convert To Gradle Project\" doesn't really convert Java projects to Gradle projects. All it does is enable the Gradle tooling on a project by adding \"Gradle Nature\".\n> For the project to work properly it really already has to be a Gradle project (i.e. have a build.gradle file).\n\nI know that. I used to write a small build.gradle and then using the Gralde Import wizard, but the given example shows the problem in the simplest possible scenario.\nAlso importing is not possible, It stuck after clicking on Build Model.\n\n```\n# build.gradle\napply plugin: 'java'\nsourceCompatibility = 1.7\nrepositories {\n    mavenCentral()\n    mavenLocal()\n}\n```\n\n![gradle import stuck](https://cloud.githubusercontent.com/assets/4256302/2612585/5e10cd7a-bbc6-11e3-8f31-a0633ca705f2.png)\n\n> Do you have any Firewall or Network proxy in your network environment?\n\nIn the office we have a firewall, but Gradle and Gradle Wrapper is working from the commmand line.\nAt Home I don't have a firewall.\nIn Addition there is the standard Windows firewall but with default settings. It asked my sometime before when starting with Gradle but since then it's quiet.\nThe Problem is always there, not only in the office or at home.\n\n> Okay... one more idea. When you use 'gradle wrapper default' it will need to download a gradle distribution (the first time a gradle operation is used).\n> Since you say you specifically have problem with that scenario... Maybe the problem is the distribution either can't be downloaded or just takes a very long time because you have a slow internet connection.\n\nThe distribution was downloaded before. In addition my Internet connection speed is always more then 25 MBit/s.\nAn additional information at this point. If I use the following build.gradle\n\n```\napply plugin: 'java'\nsourceCompatibility = 1.7\nrepositories {\n    mavenCentral()\n    mavenLocal()\n}\ntask wrapper(type: Wrapper) {\n        gradleVersion = '1.10' # 1.11 is also working here\n}\n```\n\nAnd have the wrapper initialized by command line `gradle wrapper` the import will succeed and not stuck.\n\n> To diagnose the hang it is useful to collect a stacktrace. 'jps' and 'jstack' are commandline tools part of the JDK that will allow you to determine the process id of a Java process (jps) and then extract a stackdump (jstack).\n\nI never made that, can you please explain how I do that with Eclipse so I don't have to research be myself and can focus on sending you the logs fast.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/39540375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/50687331", "body": "It's clear. Our whole developer team has this problem under Windows 7 or 8.1.\nSo it's really simple to reproduce.\nThe problem is not existent under Mac OS und Linux (Ubuntu 14.04).\nI switched to Ubuntu and my colleagues don't use the wrapper!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/50687331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "thomasj003": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/44446920", "body": "Just took the liberty to do that --> https://issuetracker.springsource.com/browse/STS-3837 as I would love to see that feature in place as well. \n\nNote: romix and me don't know each other, just seem to have the same problems / ideas ;) \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/44446920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/44454333", "body": "You might want to vote on the issue to show that more people are interested :)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/44454333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "romix": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/44452626", "body": "@thomasj003 Thanks a lot for submitting a JIRA issue for this enhancement! You saved my time.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/44452626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/44457483", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/44457483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mglauche": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/44574748", "body": "This would be extremely usefull for (meta-)code generating and enhancing.\n\nFor example, if you use openjpa and compile time enhancement you'll need to do a gradle build after changing entities (and you need to remember that you changed them, otherwise you'll end up with the non-enhanced classes in you classpath) and running your test. \n\nAnother point would be code generating plugins like querydsl, its very convinient (albeit very slow in m2e) to have the meta-classes being generated on saving the original java file (an JPA entity in this case)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/44574748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ayushsingla991": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/45619224", "body": "It only shows no categorised item.. not working :( for me. please help\n![screen shot 2014-06-10 at 7 49 17 pm](https://cloud.githubusercontent.com/assets/6817538/3231279/45e34ce6-f0aa-11e3-8233-1062d7f5a5ff.png)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/45619224/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/45637386", "body": "i did that, but nothing works it only shows this now.\n![screen shot 2014-06-10 at 9 56 43 pm](https://cloud.githubusercontent.com/assets/6817538/3233228/0bc3f288-f0bc-11e3-94fd-cc551053e646.png)\n\nPlease help. I want to import libgdx project.\nThanks in Advance.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/45637386/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/45644596", "body": "But i have downloaded archive file for gradle.. And used it, but it shows this,\n![screen shot 2014-06-10 at 10 52 07 pm](https://cloud.githubusercontent.com/assets/6817538/3233977/c9ef9292-f0c3-11e3-91e5-fbbb961703c6.png)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/45644596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/45647603", "body": "Thanks for suggestions. I will try this with a faster network. And will tell the result. :)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/45647603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/45701015", "body": "Yup, it was a network issue. Now i can see all option including Gradle IDE.\nI am unstalling it now.\nThanks a lot. :))\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/45701015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jmfelixr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/50664861", "body": "I am suffering the same problem with Windows 7.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/50664861/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ToolmakerSteve": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/54765373", "body": "Sep 7, 2014 - this error continues to happen, when attempt to install gradle integration from dist.springsource.com, unless only select sub-item Gradle IDE.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/54765373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "juanfezero": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/56279137", "body": "Same problem on windows 8.\nWhen importing a gradle project from 'import gradle project' it hangs and I need to kill java  process to quit sts.\nUsing java version \"1.8.0_05\"\nGradle version 2.0\nWindows Firewall deactivated.\n\nThis  is build.gradle file:\n\n```\napply plugin: 'java'\napply plugin: 'eclipse-wtp'\napply plugin: 'idea'\n\nrepositories { mavenCentral() }\n\ndependencies {\ncompile 'org.springframework:spring-core:3.2.3.RELEASE'\ncompile 'org.springframework:spring-webmvc:3.2.3.RELEASE'\n\ncompile 'org.slf4j:slf4j-api:1.7.5'\nruntime 'org.slf4j:slf4j-log4j12:1.7.5'\n\ntestCompile 'org.springframework:spring-test:3.2.3.RELEASE'\n\ntestCompile 'junit:junit:4.11'\ntestCompile \"org.mockito:mockito-core:1.9.5\"\ntestCompile \"org.hamcrest:hamcrest-library:1.3\"\n\ntestCompile 'javax.servlet:javax.servlet-api:3.0.1'\n}\ntest {\n         testLogging {\n          // Show that tests are run in the command-line output\n         events 'started', 'passed'\n     }\n}\ntask wrapper(type: Wrapper) { gradleVersion = '1.6' }\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/56279137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "chrisfabri": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/57060276", "body": "I've just downloaded a fresh copy of Eclipse IDE for Java Developers - specifically,\n\nEclipse IDE for Java Developers\nVersion: Luna Service Release 1 (4.4.1)\nBuild id: 20140918-0600\n\nI then try to download gradle support,  \"Gradle Integration for Eclipse (4.4) 3.6.1.RELEASE\", via\n\nhttp://marketplace.eclipse.org/content/gradle-integration-eclipse-44#.VCb1oi5dWyc\n\nDuring the gradle install process, I get the following error - looks like it needs other things which it cannot find:\n\nThe following solutions are not available: Gradle Integration for Eclipse (4.4) 3.6.1.RELEASE (id=org.gradle.toolingapi.feature.feature.group, site=http://dist.springsource.com/release/TOOLS/update/e4.4/)\n\nIf I exclude the items marked as 'optional' for the gradle install, the error is unchanged.\n\nNow, looking over spring tools..\n\nhttp://dist.springsource.com/release/TOOLS/update/e4.4/\n\nthere are quite a few items - what's actually needed for gradle support?  Would rather not have to install the whole lot but just what's needed.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/57060276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "andreyKarayvanskyCogniance": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/57061166", "body": "Just tried installing STS360 e44, then installed Gradle IDE from marketplace. Got same issue.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/57061166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "badlogicmanpreet": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/57061594", "body": "I am facing the same problem on 3.6.1.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/57061594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "radimk": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/57065297", "body": "Possible fix is to change anonymous ProgressListener class in GradleModelProvider into a static inner class. At least this fixed similar problem when running tests using -Pe44 profile last week. I am afraid there are more places where this equinox object leaks into a closure of objects transfered to Gradle daemon while executing long running operation.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/57065297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/57065467", "body": "BTW: it is probably better to file this into https://issuetracker.springsource.com/browse/STS (component GRADLE)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/57065467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "eliasvasylenko": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/57099424", "body": "Cheers radimk, issue created (and another confirmation, Ubuntu 14.10, same eclipse/STS versions) https://issuetracker.springsource.com/browse/STS-3922\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/57099424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/57233208", "body": "Solution from the springsource issue, add the following properties to eclipse.ini, STS.ini or GGTS.ini:\n\n-Dosgi.configuration.area.default=null\n-Dosgi.user.area.default=null\n-Dosgi.user.area=@user.dir\n\nConfirmed as working for me.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/57233208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "boulik": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/57288365", "body": "Hello, \nworkaround doesn't help me.\nhttps://issuetracker.springsource.com/browse/STS-3923 \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/57288365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "badlogic": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/58095869", "body": "Terribly sorry, it's already been a long day. It indeed seems to be an issue with our build files. However, performing a build on the CLI or importing and building via Intellij IDEA works as intended. I'll see if i can track the issue down within the Gradle integration plugin.\n\nHere's a test project: http://libgdx.badlogicgames.com/downloads/test.zip\n\nHowever, it appears that the problem lies within the Android project's build.gradle file. Setting this up on your end would require you to install the Android SDK and modifying local.properties to point to the proper Android SDK directory. Probably to much work. We try to figure this out and report back.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/58095869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/58097326", "body": "We tracked it down to an issue in our build file, see line 85 here: https://github.com/libgdx/libgdx/blob/b88e96ba2c445d30d4202e593f819c2c300f4f96/extensions/gdx-setup/src/com/badlogic/gdx/setup/resources/android/build.gradle#L85\n\nInstead we have to append this as an array/list now:\n\nhttps://github.com/libgdx/libgdx/blob/master/extensions/gdx-setup/src/com/badlogic/gdx/setup/resources/android/build.gradle#L85\n\nNow, the question is why CLI Gradle and Intellij IDEA had no problem with the old way of doing things. If this may indicate an issue in the Gradle Integration plugin and we could help in any way let me know.\n\nThanks and keep up the good work!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/58097326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "andrew-sumner": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/58118261", "body": "I just tried installing from http://dist.springsource.com/snapshot/TOOLS/gradle/nightly into a fresh install of eclipse-jee-luna-SR1-win32-x86_64. This broke my ability to connect to the marketplace.\n\nThe work around https://issuetracker.springsource.com/browse/STS-3922 did exactly the same thing (ie broke my ability to connect to the marketplace)\n\nI am behind a corporate proxy.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/58118261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "nilskp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61168679", "body": "I'm getting this when trying to install from Eclipse Marketplace:\n\n```\nThe following solutions are not available: Gradle Integration for Eclipse (4.4) 3.6.2.RELEASE (id=org.gradle.toolingapi.feature.feature.group, site=http://dist.springsource.com/release/TOOLS/update/e4.4/)\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61168679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61179095", "body": "Yeah, disabling that did the trick. It doesn't say \"Optional\", so I had it checked at first.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61179095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "marcopenhacking": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61946351", "body": "I would probably use the Quick Launcher with that improvement. Now the \"Gradle Tasks\" list is more fast to use.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61946351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61948270", "body": "Code completion for Gradle would be a useful feature. :smile: \nBut Eclipse Integration Gradle project already brings useful fuctionalities.. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/61948270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/62053472", "body": "Thanks for adding this Alex! I'm looking forward to see this in the 3.6.3 STS which I read is scheduled to ship in December. Marc\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/62053472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "apazzolini": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/62000026", "body": "Great, thanks Alex!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/62000026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/62025948", "body": "I think your suggestion is an improvement. It would also extend to selecting the correct project given the currently edited file if launched from a hotkey, which is awesome.\n\nToday, if there is no context, it launches with the alphabetically first project selected. I think that behavior is ok, or launching with no selected project would be ok as well.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/62025948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/62030363", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/62030363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "yoqto": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63732498", "body": "I've been checking the Jira issue irregularly every few days. Thank you for the ping nonetheless :)\n\nUnfortunately, I cannot say this is solved for 3.6.3.201411192101-CI-B321 (which, guessing it's using UTC timestamps, includes everything up to commit adb05a43). Still, I'm selecting all 4 projects (root and the three sub projects), right-click, Gradle, Refresh Dependencies. What I (maybe) didn't notice before is that I have 5 consoles opened for that: _Building EclipseProject Gradle Model '/.../root'_ and one _ProjectPublications_ for the root and the three subprojects I have. They all have their own \"BUILD SUCCESSFUL Total time: x secs\" log message.\nIt looks to me that because I have multiple projects selected, the process of establishing the publications is done for each project individually instead of just once centrally.\n\nIf I only refresh the root project's dependencies, all projects are touched once and nothing else. This doesn't update the publications, though.\nIf, on the other hand, I refresh a single submodule, the root has its EclipseProject information rebuilt and the selected project's ProjectPublications get's renewed as well (second evaluation). Thus, refreshing multiple projects at once causes the complexity because siblings need to be considered in a multi module setup.\n\nWould providing a tarball of the test setup help to resolve this?\n\nTo end this on a positive note, the workaround of disabling jar remapping still works flawlessly.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63732498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63883782", "body": "> The publications model can only be built one project at a time, it is just how the tooling API works, there simply is no way to ask it to build models for a hierarchy all at once.\n\nThat's unfortunate for any multiproject case, but not the this plugin's fault.\n\n> A total of 5 builds. So the number of builds should be 'linear' (n+1) w.r.t to the number of projects (n).\n\nAh, I now see where my confusion stems from. I completely understand the logic and reason behind this. My original way of thinking was that if I have (n=)4 projects, I was looking at how many individual projects get evaluated/executed in total. What is still happening (due to the tooling API, as you pointed out) is that all 4 projects are evaluated wrt their publications. Because they are part of a multiproject build, though, their siblings need to be evaluated as well to get the whole picture. Thus, I come up with (n)_(n+1) = 20 timestamps, whereas (1+1)_n = 8 was what I would have wished for (1 for EclipseProject, 1 for ProjectPublications for all individual modules).\n\nAs pointed out by the [Gradle 2.2 daemon documentation](http://www.gradle.org/docs/2.2/userguide/gradle_daemon.html) model caching is a feature to be developed in the future. Maybe this will cover what I was originally looking for.\n\nTo sum it up, I can fully agree that the plugin works as designed. Thus, this issue (and STS-3952) can stay closed. Thank you very much for looking into this! :+1:\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/63883782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64462361", "body": "> You are putting some code inside the build scripts of your plugins to 'detect' when they get evaluated.\n> Correct. Sorry for the hassle it caused on your part.\n\nBuildActions being available sounds wonderful! Thank you for keeping me posted on this. Running your example for my test setup, everythings seems to indeed only be evaluated once.\n\nI'm guessing it will be some time for gradle 2.3 to appear, let alone STS support for this. From what I can see, it _should_ be fixed by 2.3-20141120230022 wrt an OSGi environment.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64462361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74293306", "body": "I've upgraded to build 31 and sadly, no, that doesn't fix it. Still having 2.1 configured (and restarting Eclipse and killing the gradle daemon), there are no error messages.\n\nThen I changed the path to a 2.2 installation, shut down Eclipse, killed the daemon, restarted Eclipse and voil\u00e0, the error messages still show up for tasks \"Update Gradle Classpath for _projectName_\".\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74293306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74298956", "body": "Thank you for the quick response. I think I'm misunderstanding something here, though.\n\nRunning the updateLibs command locally on the cloned eclipse-integration-gradle gradle file, I'm hit with a compilation error because class StsEclipseProjectModelBuilder in this repository is referencing classes DefaultModuleComponentIdentifier, DefaultModuleComponentSelector and JvmLibrary (see previously linked commit and gradle/gradle/0247f8b627ebb8660ad2c3d16ee32cd997632d60) with their old package paths. This is also what the stack trace I linked read to me.\n\nThe way I see it, this should be fixable by adapting the ModelBuilder class in this repository, not the upstream tooling API itself. Could you please clarify? I think the connection between these components isn't that clear to me.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74298956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74558259", "body": "Yep, looks fixed to me. With CI build 35:\n2.1 with custom model -> errors\n2.1 without custom model -> no errors\n2.2 with & without custom model -> no errors\n\nThank you! :+1: \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74558259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "beverku": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64030221", "body": "I don't see any Gradle Console sessions in the Console View -> Display Selected Console Dropdown.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64030221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64030294", "body": "Other than the one from the Building Gradle Model that is\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64030294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64050335", "body": "OK, I think I have it where it's fairly simple but repeatable:\n\n0) I set up a brand new Gradle Project -> flat-java-multiproject\n\n1) In the product sub-project create a new File called Builder.xml with this content:\n\n`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project name=\"Builder\" default=\"target1\" basedir=\".\">\n    <target name=\"clean\">\n    </target>\n    <target name=\"target1\" depends=\"clean\" description=\"build stuff\">\n    </target>\n</project>`\n\n![image](https://cloud.githubusercontent.com/assets/5684118/5151026/5d2e7b44-719e-11e4-9b4f-d34c730b4e93.png)\n\n2) Rt Click product project -> properties -> Builders -> New -> Ant Builder\na) Set Builderfile: ${workspace_loc:/product/Builder.xml}\nb) Set Base Directory: ${workspace_loc:/product}\nc) OK, OK (to save builder)\n\n3) Double Click Gradle Task View -> build\n*Works as expected\n\n4) Rt Click product project -> properties -> Builders -> New_Builder -> Edit...\na) On Targets Tab -> Set Auto Build: `<default target selected>`\nb) OK, OK (to save builder)\n\n5) Double Click Gradle Task View -> build\n! You can see the build output scroll by, then the Builder executes, Console View no longer contains output from build task\n\nThis is not necessary to see the issue, but this is how our production builder is set up:\n6) Rt Click product project -> properties -> Builders -> New_Builder -> Edit...\na) On Build Options Tab -> Uncheck Allocate Console\nb) OK, OK (to save builder)\n\n7) Double Click Gradle Task View -> build\n! You can see the build output scroll by, then the Builder executes, Console View no longer contains output from build task\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64050335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64257495", "body": "No, thanks for looking.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64257495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "luffyke": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64755210", "body": "thanks @BoykoAlex .\nActually there are still errors after pointing to grade 2.1 in eclipse gradle preference page, but after changing the -vm parameter in eclipse.ini to jdk1.7, it works fine now. :)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/64755210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "vogella": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/65554174", "body": "Clone your code and I see that you are reusing the Gradle sample which I think is great. IMHO to solve this issue gradle should include a minimal example which the Eclipse tooling could reuse.\n\nCan you point me to the corresponding repo which contains the samples? I cloned gradle/gradle and it looks to me that this does not include the samples.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/65554174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kuniss": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/65654878", "body": "The Eclipse IDE Release affected is Kepler SR2.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/65654878/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Chintan-Panchal": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/67924765", "body": "I am using GGTS 3.6.3, and however its Gradle Quick task launcher was disabled suddenly, if I press (Ctrl+Shift+Alt+r) it won't work and doesn't open the dialog box.\n\nDoes anyone face before ? \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/67924765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/67941648", "body": "There is no error logs, and all the projects in my workspace are Gradle nature.\nWhen I launch Quick Task of gradle it shows nothing not even a single error message.\nGradle version: 3.6.3\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/67941648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/68030438", "body": "Thanks Alex,\n\nI have found another solution, in that if we create another workspace than Quick Launch works as expected. So, It might be workspace specific issue\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/68030438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "trunkbot": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/68978410", "body": "Sorry for the duplication, move this issue to #79 under my personal account.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/68978410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "TrentBartlem": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69122883", "body": "Thanks.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/69122883/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ercancelik": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/70801339", "body": "Sorry it was my fault. If gradle build fails because of build.gradle problems, the edit configuration editor won't work. After i resolve the build.gradle problems, editor works.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/70801339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jfelege": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74547993", "body": "Cross logged to STS JIRA tracker -\n\nhttps://issuetracker.springsource.com/browse/STS-4058\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74547993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "wayshall": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74813285", "body": "thanks!\nI have been used m2e before.\nm2e start a detached java process and close it when the action was done.\nSo, I have mistaked that it's a issue.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/74813285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "midstr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/86327321", "body": "![22](https://cloud.githubusercontent.com/assets/3962423/6840146/34f39df4-d3ae-11e4-8a33-219a6d52bbe7.png)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/86327321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/86875653", "body": "3ks.\nI think i find the Issue: the default maven repository url is \"https://mvnrepository.com/\", my proxy didn't support https..\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/86875653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/87188514", "body": "yes,it's my company's inner proxy.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/87188514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sunhong": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/97114682", "body": "![image](https://cloud.githubusercontent.com/assets/1815183/7373902/38829142-ed9d-11e4-84b9-1f8b7b234834.png)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/97114682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/97118474", "body": "Sure, I will solve the formatting issue. Thanks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/97118474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/97199584", "body": "Yes I did\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/eclipse-integration-gradle/issues/comments/97199584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}}}}