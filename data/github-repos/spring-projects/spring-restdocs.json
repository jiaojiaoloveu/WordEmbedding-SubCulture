{"_default": {"1": {"wilkinsona": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/474", "title": "Field paths with multiple asterisks render with bold text when using Asciidoctor", "body": "When using Asciidoctor, if a field path contains multiple asterisks, the text between a pair of asterisks will be bold and the asterisks themselves will be omitted. For example the following path:\r\n\r\na.\\*.b.\\*.c\r\n\r\nWill result in the following output:\r\n\r\na.**.b.**.c\r\n\r\nThe problem can be avoided by updating the Asciidoctor templates to [enclose the path in `+` characters](http://asciidoctor.org/docs/user-manual/#escaping-unconstrained-quotes).", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/470", "title": "Documentation for the operation macro doesn't explain exactly what it does", "body": "From @dsyer on Gitter:\r\n\r\n> Not clear yet what it actually does, but I can try and to find out probably.\r\n\r\nA concrete example may help. It could show the plain Asciidoc that is the equivalent of using the macro. Any other suggestions, @dsyer?", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/466", "title": "Formatting is lost when extracting a subsection from a request or response payload", "body": "", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/306", "title": "Provide support for documenting request and response cookies", "body": "There are a couple of ways in which this could be implemented:\n- By adding `Cookie` and `Set-Cookie` headers for each cookie in the request and response respectively and using the existing headers snippet\n- By adding specific request cookies and response cookies snippets and a richer cookie descriptor\n\nI'm leaning towards the latter at the moment as it would allow the details of the cookie, even if it was just the name, to be verified.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/306/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/277", "title": "Provide a snippet for documenting request and response structure", "body": "With complex, heavily nested payloads some people have found the table of fields that's currently produced by the request and response fields snippets a little difficult to use when trying to determine the structure.\n\nA suggestion has been to reflect the nesting in the documentation, ideally with collapsible sections. A relatively simple, albeit without collapsible sections, approach would be something like this:\n\n```\n{\n    \"userName\": String,\n    \"name\": {\n        \"familyName\": String,\n        \"givenName\": \"String\n    },\n    \"phoneNumbers\": [ {\n        \"value\": String\n    } ],\n    \"emails\": [ {\n        \"value\": String,\n        \"primary\": Boolean\n    } ],\n    \"active\": Boolean,\n    \"verified\": Boolean,\n    \"origin\": String,\n    \"externalId\": String\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/277/reactions", "total_count": 6, "+1": 6, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/275", "title": "Investigate if it's possible to document HTTP headers more strictly without it becoming too laborious", "body": "When support for documenting HTTP headers was added a decision was made that, unlike the other snippets, a failure would not occur if a header wasn't documented. This was to avoid problems with headers that are very commonly sent or received but typically don't warrant documentation such as `Content-Length`.\n\nThis seems to have worked well for making it easy to document HTTP headers, but has come at the cost of headers sometimes going undocumented. It would be nice to adjust the balance a little so that headers aren't missed and, hopefully, so that documenting headers remains an easy thing to do\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/241", "title": "Allow snippets to be used to assert that there are no fields, parameters, etc", "body": "See http://stackoverflow.com/questions/37357308/how-do-you-state-no-response-fields-with-spring-rest-docs\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/209", "title": "Provide a sample that illustrates how to use Spring REST Docs with Docbox", "body": "https://github.com/mapbox/docbox\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/178", "title": "Make it easier to document a resource with fields and links that come and go as the resource's state changes", "body": "At the moment you can document a link or field that isn't there by marking it as optional. It works, but it can lead to inaccuracies in the documentation. An alternative would be to allow the links, fields etc that need to be documented to be accumulated over multiple calls to the service. Once all of the calls are complete, and the resource has transitioned through its various states, the snippet can be produced and it can verify that all of the documented links, fields, etc were actually present.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/176", "title": "Improve HAL link rel matching to consider curie name", "body": "Rather than requiring the curie name to be included when documenting the link (for example `foo:bar`), it should be possible to just use `bar`.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/174", "title": "Provide a custom backend or CSS for Asciidoctor specifically designed for API documentation", "body": "", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/164", "title": "Improve support for documenting payloads with multiple sets of links", "body": "Inspired by [this question](http://stackoverflow.com/questions/33680699/spring-restdocs-document-links-in-child-documents) on Stack Overflow from @matsev.\n\nI had always assumed that links in embedded resources would be documented as part of the embedded resource's documentation, rather than in the embedding resource's documentation. That may not be an assumption that suits everyone. If you don't want to take this approach then the options currently available are:\n1. Use a custom link extractor and produce a single snippet but this means that you can't assert that the links were in the right place in the payload\n2. Use a custom snippet, probably a `LinksSnippet` subclass, and produce two separate snippets with different names.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/164/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/106", "title": "Provide support for more sophisticated path-based constraint description resolution", "body": "#42 added support for resolving constraint descriptions for a property on a class. This works well for simple payloads. For more complex payloads it would be useful to be able to resolve constraint descriptions for a nested path. Ideally, the path used to document a field could be reused.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/106/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/43", "title": "Provide support for automatic documentation of request and response structure using JSON schema", "body": "Spring Data REST can provide a JSON schema for each repository. Explore the possibility of using the returned schema to automatically generate documentation of request and response structure.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/43/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/712b5fd9f709836c5e854ee635afd4b17c4bfdc7", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/80bb6328494682bc93420710d4866eaf4a90b7c7", "message": "Warn against the use of org.asciidoctor.convert 1.5.6\n\nCloses gh-438"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/6a528911e3faf3ff9dd96e69615dbf4fa1550b73", "message": "Merge pull request #467 from Mathias D\u00fcsterh\u00f6ft\n\n* gh-467:\n  List restdocs-raml in third-party extensions"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/b9356c9fae85afe3db6862d610c853b0f2b9cf92", "message": "Merge pull request #469 from Jenn Strater\n\n* gh-469:\n  Update the Grails sample to use Grails 3.3 and Gradle 4.4"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/85c04b82b0812eba8bb5914d2c8ee22a0c07729c", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/874bfd119e3bae590d71babbcbb585d9c2eb73b2", "message": "Update samples to use 1.2.4 snapshots"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/bd3d253a2c9d727be1d85b07ab08a81cfdb98dd7", "message": "Upgrade samples to use 2.0.1 snapshots"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/11da628066341d2ed41fe8041bb397390b30fdfa", "message": "Upgrade to Spring Framework 5.0.2.RELEASE\n\nCloses gh-458"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/73970cafe83a41c68ad42f236b3fafc62062e5d5", "message": "Merge pull request #460 from Johnny Lim\n\n* gh-460:\n  Update minimum Java version in README.md and CONTRIBUTING.md"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/22dd1e75a4f1e6c7f198786dfa3081dede2452ff", "message": "Apply default scheme, host, and port to WebTestClient URIs\n\nCloses gh-461"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/17d05f2750791acb4755fd0690df73183db46825", "message": "Merge pull request #459 from Johnny Lim\n\n* gh-459:\n  Upgrade to org.asciidoctor.convert 1.5.6"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/d18f8d824655f15214a97c1e1ce68f0adef4f741", "message": "Upgrade to Spring Asciidoctor Extensions 0.1.2.RELEASE\n\nCloses gh-448"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/6912977b879892728327ab9ba6e9aff7283887be", "message": "Document how to configure URIs when using WebTestClient\n\nCloses gh-455"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/0f0769245d05e0a1f9bc77f920a7b4a433ace9da", "message": "Add cookie handling to WebTestClient request and response converters\n\nCloses gh-447"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/b7bf8cb992c3d9b5f29462d70143b8732e836cf1", "message": "Merge pull request #457 from Roman Zaynetdinov\n\n* gh-457:\n  Remove unused custom URI configuration documentation example"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/4d4809748a80db6c4c5c7485fd687fff6feff443", "message": "Update Hibernate Validator coordinates to use new group ID\n\nSee gh-454"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a17e17b00abdc7dcddc5547e4c8715d43fa5e4d8", "message": "Align constraints support with Hibernate Validator 6\n\nCloses gh-454"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/ac1d8ec4acc5547e10dd63de4c523fe72984a5b4", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/4d710d91432fc6e0ccc9a0c7f6f708ae68d16e05", "message": "Merge pull request #449 from Michael Simons\n\n* gh-449:\n  Fix name of self rel in reference documentation"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/49a0d4f7144cec1a9cdba60f7760085523bcda80", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/90c3549f554a544926460e1cd9c5eb938050233c", "message": "Refine ordering of default, operation, and additional snippets\n\nPreviously, the ordering was:\n\n1. Operation snippets\n2. Default snippets\n3. Additional snippets\n\nThis meant that any operation snippets (those specifically configured\nfor the documentation of the particular operation) would be\noverwritten by the output of the default snippets.\n\nThis commit updates the ordering to the following:\n\n1. Default snippets\n2. Operation snippets\n3. Additional snippets\n\nCloses gh-453"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/3f602465c02e96dc5a8bad45bd251835a12f0990", "message": "Remove redundant additionalSnippets field\n\nCloses gh-452"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/d47be09909badeca40c08bfb3f8671c3215f805f", "message": "Polish"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a8169cce0b790442b5f70eb0094cd0675714e1c7", "message": "Upgrade Boot-based samples to Spring Boot 2.0.0.M6\n\nCloses gh-444"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/9c9a6f448983e9f7409cb51dc917648f04345417", "message": "Upgrade REST Assured sample to build with Gradle 4.3\n\nSee gh-446"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/aedb9a7babe5ac8b9eb0b0bacc0909fe1b6e3abe", "message": "Align with breaking API changes since JUnit 5.0 M4\n\nCloses gh-451"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/c7fd07576bb963fd6c8df96fe6af21bf9c923dfe", "message": "Build with Gradle 4.3 where possible\n\nUpgrade the main build and all the Gradle-based samples other than\nthe Gradle sample to Gradle 4.3.\n\nCloses gh-446"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/1a858a2e1f64dd328ff22e9e7bb4b17ab0f20645", "message": "Build and test against Spring Framework 5.0.1.RELEASE\n\nCloses gh-443"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/cfb1fbc85d23335896080a934c3429c5d55d72bc", "message": "Add support for using WebFlux's WebTestClient to document an API\n\nCloses gh-384"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/1cd74a5c1d80e67148fd56755e942c5db64f709f", "message": "Merge pull request #424 from Filip Hrisafov\n\n* gh-424:\n  Polish \"Add support for configuring default request and response preprocessors\"\n  Add support for configuring default request and response preprocessors"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/eed90c0b9a3ba910806201bd9f3b90d7862e2cc6", "message": "Polish \"Add support for configuring default request and response preprocessors\"\n\nCloses gh-424"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/22cf08a9ad413f1fbadec533eb732becb9889fa3", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/abe36e3b54ba07e143a83002108396d9b5b17128", "message": "Ensure that section heading appears in reference documentation\n\nAsciidoctor appears to apply two blanks lines beneath a code block\nat the end of an included file otherwise the section heading that\nopens the following included file will be omitted.\n\nCloses gh-442"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/276a1807c7bceed73c6f015045016179927e7cd7", "message": "Polish"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/f0c69ade5e0ed0a5e19e95177d2081f74d69e668", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/473e3e1a7be1c73e259a0a3f2ec61a22fe8046f7", "message": "Correct end tag in included source so that it matches opening tag\n\nCloses gh-441"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/dfe856815d6c37f7d8bee33805fc93c5b1ad6feb", "message": "Correct section IDs so that all sections are uniquely identified\n\nCloses gh-440"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/7e0da73dd227da486d745e099badde86eb9faf26", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/07bca1875f337b4fe087fb84be512682c0cc9844", "message": "Replace placeholders in snippet name as well as the operation name\n\nPreviously, StandardWriterResolver only replaced placeholders in the\noperation name. This meant that the name and location of generated\nsnippets was unnecessarily limited.\n\nThis commit makes things more flexible by updating\nStandardWriterResolver to replace placeholders in the snippet name\nas well.\n\nCloses gh-403"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/660c440c6c971a40610ff5cc4c9ec94aadd28aed", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/f62b0f3ce724915d58f867bea667ace5f4edeb1a", "message": "Support documentation of a required field beneath an optional field\n\nPreviously, if a field nested beneath an optional field was documented\nand was required, it would be identified as missing even if its\noptional ancestor was missing. This made it impossible to document\nrequired fields of an optional subsection of a payload.\n\nThis commit updates JsonContentHandler to consider a field\u2019s ancestors\nwhen determining if it should be reported as missing. If the field\nfield has an optional ancestor that is not present, the field is not\nconsidered to be missing if it too is not present. If the field has\nan optional ancestor that is present then the field is considered to\nbe missing if it is not present.\n\nCloses gh-429"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/7f75529c01487fddc169801ad87f084854d04987", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/ead32c3f88d3e91ec987b8ab8a2def7abe25ad7e", "message": "Merge pull request #436 from Johnny Lim\n\n* gh-436:\n  Polish tests"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/3f127897c3047b51e73645019e6860af2efdb6dd", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/caf01d1f21d9ff60a39c58834f77167610150f90", "message": "Revert \"Make sure that spring-aop is available at test runtime\"\n\nThis reverts commit 26707cd7ac6a6252d8aa20eb0758c68d8c7c6851.\n\nSee gh-411"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/3d7262ae460243c1e6a44663155e092386ad16c3", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/440997c72b3df2532bfec8823aebc7bf4ca76903", "message": "Merge pull request #431 from Johnny Lim\n\n* gh-431:\n  Polish \u201cReuse ObjectMapper in FieldPathPayloadSubsectionExtractor\u201d\n  Reuse ObjectMapper in FieldPathPayloadSubsectionExtractor"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/0c8ec11c9cff68e5584af4f1940185bfdd4f6fe4", "message": "Polish \u201cReuse ObjectMapper in FieldPathPayloadSubsectionExtractor\u201d"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/04632c24fbe37bd596faa1728b302e4b622d5786", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/d1881c30e2a023d41ca450d9b9230f0feb5bdcd2", "message": "Update the samples to use the latest snapshots"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/dd976ad2997a741010ac3286f68ba745a4551d14", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/9e3a3c0536a69a2dcbc30c1c2e1b249c6204c2de", "message": "Upgrade to latest version of JRuby to avoid problems on Windows\n\nSee https://github.com/jruby/jruby/issues/4745"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/21addcfdb66a99830f42689af4c3cddb796616b1", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/47bcc45e453553154dbb0a9f525977a2d60b6ec6", "message": "Upgrade dependencies"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/de67160b1eb152dd331d6eaaa522597c7c23a4f8", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/d22dc1e2117a587e47f97f0e201c60f579547d99", "message": "Include filename in Content-Disposition header when available\n\nCloses gh-425"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/4e99df6b75e0f725c7e5319404579e7ea149ee5c", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/7c6c2e7523e46ba24f91e9743a09712b8a9bb422", "message": "Polish"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/5f7aa1af5618aae69a8595a7ad9ea88dd176cc13", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a084175afd405c66b83a6847dfff1ff92f182138", "message": "Fix field extraction and type resolution beneath arrays and wildcards\n\nFixes gh-422\nFixes gh-423"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/4854bc949f573a83b59fb9b172e019f8741bc5d2", "message": "Fix type resolution for fields with null and non-null values\n\nCloses gh-398"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/645a60a7879f8ea2783e219eace3cd8e570e9218", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a123e06d06f9530f7eabd009733c3d7730956854", "message": "Update build status image URL following changes to Bamboo"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/190ca2c450ed4321243c5da0d7a26a1551c26e3f", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/26707cd7ac6a6252d8aa20eb0758c68d8c7c6851", "message": "Make sure that spring-aop is available at test runtime\n\nCloses gh-411"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/5ac105db831481fe7b75e9df5d9d118866f4cad5", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a38a5120330e534d1ef27e2ae98d26d01273b93c", "message": "Require occasionally null or absent field in array to be marked optional\n\nCloses gh-402"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/3ac173c149dec16f9ad1be672230ce9ba0d96f9c", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a84bb0c569fce6394b1932e18ad3dd47b5f14f98", "message": "Make new snippet relaxed when adding descriptors to relaxed snippet\n\nCloses gh-400"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/ab2dbb2b4cd480806a3399b2458a27097c389749", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/214c068ece9de4231f08d9c94c2c4df4bd0d444f", "message": "Remove Accept: */* header from REST Assured requests\n\nCloses gh-404"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/d75a1b4277bb2cc55ed26ed433a714c250a1de17", "message": "Merge pull request #397 from Johnny Lim\n\n* gh-397:\n  Add missing space to assertion failure message in the tests"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/fbd13e30b0c06da674cbc864527738f92d028696", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/eac0e2c2d34c3b4a7631d60fe3c0051813cbcf3f", "message": "Merge branch 'gh-398' into 1.2.x"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/6bf1edcd09185ed9e3d5c87b5a517ecf09ed0c57", "message": "Improve handling of null fields beneath an array\n\nPreviously, if an array contained objects where a field was sometimes\nnull and sometimes had a value of a consistent type, the type inferred\ntype was varies. Furthermore, it was not possible for the user to\nspecify a type other than varies as a mismatch would be detected.\n\nThis commit updates JsonFieldTypeResolver so that, when dealing with\nan imprecise field path (i.e. a path for a field within an array),\nnull values that don't match the common type for the field are\nignored. This produces the following behavior when nulls are involved:\n\n- All null fields results in the null type\n- A mixture of nulls and a particular type results in the particular\n  type\n- A mixture of nulls and two or more other types results in the varies\n  type\n\nCloses gh-398"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/5cef4745f70615168d52dafc187f897da188c032", "message": "Polish new response fields test and add equivalent for request fields\n\nSee gh-399"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/1499eabef3a7995f2bac46798c2f6e0c57969947", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/dff9062a3231fc456533f763b3b1cda0fdfbdb5a", "message": "Fix formatting problems in the documentation\n\nPreviously, the included .adoc files did not consistently end with a \nblank line. In certain cases, Asciidoctor requires a blank line before a\nnew section. As a result, the lack of blank lines meant that some\nsection headings did not appear correctly.\n\nThis commit updates each of the included .adoc files in the\ndocumentation to ensure that each ends with a blank line."}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/e6d548407c7d1346b613154d7a91d996c0e98608", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/2650bd3bac7d202f63ab25ef512e0391ae90c644", "message": "Merge pull request #409 from Oliver Zeit\n\n* gh-409:\n  Fix formatting of reference to HeaderDocumentation in the docs"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/893a38694e61d1289e946dd0f30a881511cb22b2", "message": "Merge pull request #408 from Johnny Lim\n\n* gh-408:\n  Correct the documentation generated by the JUnit 5 sample"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/c5d8b2fe0e50e7cfaf3668a495209faf4591cde8", "message": "Merge branch '1.2.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/ba327f1e9af906987b1920d15eefcc7868729a2d", "message": "Ensure that all nodes for a snippet refer to main document\n\nPreviously, when the operation block macro rendered the fragment\nfor a snippet, every top-level block in the fragment had its parent\nset. Setting the parent has the side-effect of also setting the\nblock's document to be that of its parent. This meant that every\ntop-level block's document referred to the main document, but any\ndescendents were left with their document referring to the fragment\ndocument. This did not cause a problem with the HTML backend (which\ndoes not consider a block's document) but the PDF backend does\nconsider a block's document resulting in the descendents being\nomitted from the generated PDF.\n\nThis commit updates the operation block macro to set the parent of\nevery block in the fragment to its correct value. This has the\nside-effect of causing the block to update its document reference to\npoint to the main document.\n\nCloses gh-396"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/5af574a48a64a843b96bd8ad296da31ff6def7be", "message": "Upgrade to snapshots of the latest Spring IO plugin"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/84f8e55101250e537c5d7c21c3c792d7f59f873a", "message": "Update documentation after removal of deprecated REST Assured 2 support\n\nSee gh-387 and 6986cb75"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/0e6e785fb0d6e9cedb50bc95dd5915eb9a62603d", "message": "Add support for JUnit 5\n\nThis commit adds support for JUnit 5 and its Jupiter programming\nmodel. A new Jupiter Extension implementation,\nRestDocumentationExtension, is provided. This extension can be applied\nto a test class to allow it to use Spring REST Docs to document a\nRESTful API.\n\nCloses gh-296"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/6986cb75a845e24732cb79201aefd8f52c722c89", "message": "Remove deprecated code\n\nCloses gh-387"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/41d537d06a20ae7eaf0d9edc51e1874ac05644a2", "message": "Raise the minimum supported version of Spring Framework to 5.0\n\nThis commit upgrades to Spring Framework 5.0.0.RC1. It also upgrades\nthe Spring Boot-based samples to use Spring Boot 2.0.0.M1 which\nsupports Spring Framework 5. Lastly, it upgrades a number of\nthird-party dependencies to align with Spring Framework 5 and Spring\nBoot 2.\n\nCloses gh-386"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a8e1df3fd82d46ffce50e2e440a6e9b89b002f58", "message": "Raise the minimum support version of Java to 8\n\nCloses gh-388"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/ce8a296df0bb36875f994087047502fd8895fd17", "message": "Start work on 2.0"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/56a0495288d9bed7ea3a7147a3da29e58a953278", "message": "Update the samples to use the latest snapshots"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a440c2828373b8a5c1e71e8a9b05b1ae50e65289", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/bd63fae6629a237fa17079149de87de7b4eb0348", "message": "Update dependency versions in the samples to use latest snapshots"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/113976f2d9eb076e0f38e343629f23bea95155b9", "message": "Support documenting fields in XML payloads with any content type\n\nPreviously, the document fields in an XML payload, the request or\nresponse had to have an application/xml content type. This prevented\ndocumenting standard XML content types such as text/xml and\napplication/rss+xml as well as payloads with custom XML content types.\n\nThis commit updates the logic that sets up the ContentHandler to\nfirst attempt to parse the content as JSON. If that fails it then\nparses it as XML. If that fails an exception is thrown. This allows\nany JSON or XML content, irrespective of the actual content type, to\nbe documented.\n\nCloses gh-393"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/88db798b25ea4a1ca568913cb1cae23c2dafcafb", "message": "Update the dependency versions in the samples to use latest snapshots"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a996041384d431801af10c9f32392176c9eebffd", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/b00b13fed5a8d4e83691b6ce87c35e4a549b491c", "message": "Upgrade to spring-asciidoctor-extensions 0.1.1.RELEASE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/cf77eabe0469cad52d9df51570aca672826d9101", "message": "Use code block switch extension from separate project\n\nThis should have been merged forwards following the changes in\n70df55d4130eeaab38854488d84bc518165787fa.\n\nSee gh-229"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/835c1a55461d045e5c03d7a3919774ff9153f0bf", "message": "Merge pull request #389 from jd1\n\n* gh-389:\n  Add missing quotes around value of snippets attribute"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/6a3535c559c82406705771e4833ab8585de2ee03", "message": "Exclude spring-restdocs-asciidoctor from Spring IO checks"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a5e3e153adf5e9046ebabcd4c4d5d737a302fe7a", "message": "Do not include spring-restdocs-asciidoctor in API documentation\n\nCloses gh-391"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/d6eacfd81900f80b68c5bc3bff8981a5b9465b6d", "message": "Avoid duplicate cookies with Spring Framework 5's MockMvc\n\nCloses gh-390"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/d1424c90ca0b18d06e33a67dc85c07df6bf1f959", "message": "Ensure that provided dependency on asciidoctorj appears in generated pom\n\nCloses gh-385"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a11423d1f5b60095060adc5c9d245f945f128076", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/12b59273964ea62573cf46984d4b35240de39d35", "message": "Merge pull request #383 from Gerrit Meier\n\n* gh-383:\n  Add plugin snapshot repository to Data REST sample"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/1e2f2fdd3550df49fe31776c8f8dad6f78224094", "message": "Upgrade Spring Boot-based samples to use 1.5.3.RELEASE\n\nCloses gh-358"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a91bc22b8e143f95a3db83e2f675359194e3636f", "message": "Merge pull request #379 from Tomasz Kopczynski\n\n* gh-379:\n  Include request body and response body default snippets list"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/9f67eaab708321df32aeac49dac66175a94a06cf", "message": "List REST Assured dependencies as optional in pom\n\nPreviously, the use of compileOnly meant that the REST Assured\ndependencies were omitted from pom for spring-restdocs-restassured.\nThis commit correct thr problem by using the propdeps' plugin's\noptional configuration instead.\n\nCloses gh-372"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/704257e93b63d6ae01f58e1faab5e2798671ab2c", "message": "Align generated Set-Cookie header with RFC 6265\n\nCloses gh-378"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/93f4f11260c0a668b0d204a554bec6de29e0ee53", "message": "Merge pull request #377 from Johnny Lim\n\n* gh-377:\n  Fix typo in Asciidoctor attributes configuration"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/11483d738d4fe549a99d1138d965ef2da120fdca", "message": "Merge pull request #375 from Johnny Lim\n\n* gh-375:\n  Fix typo in name of local variable in CurlRequestSnippet"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/3262149283982a814350dc869888555702cdbe83", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/af0cd029c757a1e5912b7ea2394919460cf6f9b7", "message": "Ensure that samples' REST Docs version is updated before they are built"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/ea20363c6222b41752050e61845c7dbc7044b1c1", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/b6120cd539b4a68cce4328d4b7cdfb78ed3f56e4", "message": "Fix broken cross-reference"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/b1227ce019d95717b42fb3533f5e62ed77f6edd9", "message": "Remove recommendation about tweaking Surefire's configuration\n\nConfiguring Surefire to run tests found in files ending in\nDocumentation.java has the unwanted side-effect of switching off its\ndefaults, i.e. you end up with your documentation tests being run and\nnothing else. While using a specific name for your documentation tests\ncan make them easier to identify, it isn't required. The documentation\nalso doesn't explicitly recommend using a Documentation suffix.\n\nThis commit simplifies things by removing the configuration that\nchanges Surefire's default inclusions.\n\nCloses gh-368"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/14da4b954a58409de338bd9a8b53795a89f8d25a", "message": "Upgrade main build and Gradle-based samples to Gradle 3.4.1"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/ab1613ed6390a37a9829983fae94d2912b8411ee", "message": "Add support for using a wildcard when documenting a payload field\n\nCloses gh-265"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/78982cf515c39c4f837905f120eb557ede7f5691", "message": "Add support for REST Assured 3\n\nCloses gh-262"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/7fe5efab86eabb0a38b13da5679ac1d0d876f39a", "message": "Merge pull request #348 from Tomasz Kopczynski\n\n* gh-348:\n  Polish \"Provide more control of formatting of curl and HTTPie commands\"\n  Line breaks in cURL and HTTPie snippets"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a6d322007b453210c007b99b1142febf1a48e148", "message": "Polish \"Provide more control of formatting of curl and HTTPie commands\"\n\nSee gh-348\nCloses gh-260"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/82164348f3ad242a65f4b3db3f5eaa588f753b1a", "message": "Merge pull request #369 from Johnny Lim\n\n* gh-369:\n  Fix typo in value of snippets attribute"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/d486a16714c2144f769c60cbcc6211545d5f97ae", "message": "Reduce the complexity of MockMvcResponseConverter.generateSetCookieHeader"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/5e2be5554cfc012ea1343e7733535bc878a86812", "message": "Merge pull request #340 from Tomasz Kopczynski\n\n* gh-305:\n  Polish \"Include cookies in the HTTP response snippet\"\n  Include cookies in the HTTP response snippet"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/1b5e75ff2c3c5aae0e5ff970a952166dedd6e77e", "message": "Polish \"Include cookies in the HTTP response snippet\"\n\nSee gh-340\nCloses gh-305"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/ece826166fe8550e1180dd05a74f33da316f47d3", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/5a76decc118359f4004a5cc1aac5ef745b455c14", "message": "Link to correct branch on GitHub in snapshot documentation\n\nCloses gh-367"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/70df55d4130eeaab38854488d84bc518165787fa", "message": "Use code block switch extension from separate project\n\nCloses gh-229"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/539cc1756e3da50b5b84735064411868e5d83635", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/81c28166935fb59666aef2d0736d4f5fd8bfce5c", "message": "Relax field type validation when marked as optional and value is null\n\nPreviously, if a field was marked as optional and it appeared in a\npayload with a null value a failure would occur if the field's type\nwas configured to be a JsonFieldType other than NULL.\n\nThis commit relaxes this restriction so that a null value is tolerated\nwhen a field has been marked as optional.\n\nCloses gh-365"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/58bf231c8a422ece52dc6a9af007c543b009e522", "message": "Update the samples to use the new operation macro\n\nCloses gh-362"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/4a177de1f645be00ec902734382239691b46425e", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/281abb2e8b47663a1812b24a02eb1ac4a4ff1451", "message": "Ensure that Gradle's daemon is always disabled"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a4d2fc39d8bd4c76eb87b337d1c0140ba2de57fe", "message": "Allow snippet section titles to be customized using document attributes\n\nCloses gh-363"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/86f6dbab9c5047ddcafcc303eb844e97663a3661", "message": "Specify an ID for each section created by the operation macro\n\nCloses gh-364"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/40fc211d9ebf9a49ac1a3a3a7abce1b0fd2d50af", "message": "Polishing"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/6f7be570f7b700f7b220b1e56ea032ddf5a2765f", "message": "Another attempt at fixing OperationBlockMacroTests on Windows\n\nIt appears that Asciidoctor uses \\n on all platforms but when the\nexpected content is read in on Windows it uses \\r\\n as the line\nendings are being changed when Git performs the clone."}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/d3fdd0bef7ec41639c08a7e2e98553d44d16630c", "message": "Fix OperationBlockMacroTests on Windows"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/347f14f617aad377a9928ef7a6c8f5c7aa77410a", "message": "Merge pull request #354 from Gerrit Meier\n\n* gh-323:\n  Polish \u201cProvide a block macro for including an operation's snippets\u201d\n  Provide a block macro for including an operation's snippets"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/826e0a5dec8ef0fbc21b01e3123806bee8b682c3", "message": "Polish \u201cProvide a block macro for including an operation's snippets\u201d\n\n - Copy snippets used in the tests in @BeforeClass rather than using\n   Gradle so that the tests can be run easily in an IDE\n - Address problems in operation_block_macro.rb reported by Rubocop\n - Rename new test class to more closely match the name of the Ruby\n   class that it\u2019s testing\n - Gracefully handle a missing operation\n - Align behaviour when an operation or snippet is missing more closely\n   with Asciidoctor\u2019s behaviour when an include references a missing\n   file\n - Use kebab-case rather than snake_case for new test resources\n - Update the documentation to describe the new macro\n\nSee gh-354\nCloses gh-323"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/3cc6f2d7d51df31afbbfe0f491c21d03713059a6", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/2fa0aa44721aa4adcccec85e8739a9773d605932", "message": "Further tweaks to try and get builds on Travis to work reliably"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/73fac5ca31e411b2eb77037bc216da8c0a6fe4a4", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/17acbb9fbf17c0d0b043af85475094ff3037f37e", "message": "Upgrade Travis configuration to use a recent version of Oracle JDK 8\n\nBy default, Travis uses a rather old version of Oracle's JDK 8 in\nits container-based infrastructure. It would appear that this is what\nhas been causing the build to fail with minimal diagnostics.\n\nThis commit implements a suggestion [1] to get a more recent version\nof Java 8 by installing the oracle-java8-installer package via the APT\naddon.\n\n[1] https://github.com/travis-ci/travis-ci/issues/3259#issuecomment-130860338"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/ca86e3ad8c874fce6211876daf3ce7db9b9f1ace", "message": "Upgrade Slate sample to Slate 1.5\n\nCloses gh-361"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/3a0f4ab68e0bc23e18212c38c169e8f5f0492904", "message": "Fix the Slate sample's tests\n\nCloses gh-339"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/e9ceeacd6670e62577e3932ef8d900798912b2fd", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/727f6ccd78a63870d643d3ae49b50ffeb8b4d940", "message": "Protect the tests against changes to MockMvc's HTTP header ordering\n\nCloses gh-359"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/7cb91f99630b9f87210fc307b2caf95499da13c2", "message": "Remove use of Spring Boot from REST Assured module's integration tests\n\nCloses gh-360"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/b6f986556e8ab19ccfdb984381687b294ba62ea1", "message": "Upgrade to Gradle 3.4\n\nCloses gh-283"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/31ad4b40a066d81c0526622b0cb9996ae68be399", "message": "Upgrade the Grails sample to Grails 3.2.6\n\nCloses gh-357"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/722048e20fe77956e4ddb1d148433c78b114acf3", "message": "Introduce RequestCookie to avoid core depending on the Servlet API\n\nCloses gh-345"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/ccb31ecfb235ca89e104b9d67c537a9ed6cf304f", "message": "Merge pull request #336 from Tomasz Kopczynski\n\n* gh-336:\n  Polish \"Include cookies in request snippets\"\n  Include cookies in request snippets"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a9c1e04081971d06eacef8109a47688e72753420", "message": "Polish \"Include cookies in request snippets\"\n\nSee gh-336\n\nCloses gh-302\nCloses gh-303\nCloses gh-304"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/0337160e808455813f28956765ac1281b22d3aee", "message": "Merge pull request #343 from Florian Benz\n\n* gh-343:\n  Add spring-auto-restdocs to third-party extensions"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/677a23647fdd2502843f296fbd9cc1b2f2dd45d0", "message": "Compile and test against Spring Framework 4.3.6.RELEASE\n\nThis commit upgrade to Spring Framework 4.3.6.RELEASE. A side-effect\nof this change is that the Content-Type header is now always the first\nheader when building a request with MockMvc. One test has been updated\nto reflect this change in ordering.\n\nCloses gh-342"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/e2041333a66e8960b5baa61279faa106163ba0d3", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a19aef796ffc7ac48146bc8a7c91c777d03e4d57", "message": "Merge pull request #329 from Gerrit Meier\n\n* gh-329:\n  Document that port is omitted when it matches the scheme's default"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/de39e5b85c446281928f700c2414796908f77736", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/b7e4edf9041004be3c0a05531bcb7313f58ccfd2", "message": "Merge pull request #334 from stonio\n\n* gh-334:\n  Clarify that parameterized output directory uses the simple class name"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/dec3727da1c6a333bb17db4cfc8f15bb7d3bf99d", "message": "Add support for documenting body of a request, response or request part\n\nCloses gh-318\nCloses gh-319"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/1393182182cd270cffe153be2bf9e69a4b917d44", "message": "Upgrade Spring Boot-based samples and integration tests to use 1.4\n\nCloses gh-327"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/88d5e9192eeb0caba035fcd3611f8c0057bc2eaa", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/7ff45d273ec5b92a0c280d08db01637edb37cb3d", "message": "Call the right endpoint in REST Assured field reuse example\n\nCloses gh-324"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/cbd96f301d87078b01c6852723bf0861bdfbca11", "message": "Update field snippets to no longer document whole subsection by default\n\nPreviously, when a field was documented it would implicitly document\nthe whole subsection of the payload identified by that field. This\ncould lead to users inadvertently failing to document part of the\npayload. Arguably, this was a bug as it violated REST Docs' principle\nof producing accurate, detail documentation. However, fixing it\nrequires a breaking change as people may also be relying on this\nbehaviour. A balance needed to be struck so the fix is being made in\na minor release.\n\nThis commit introduces a new subsectionWithPath method which returns a\nSubsectionDescriptor; a specialisation of FieldDescriptor. Users\nthat were intentionally relying on the old behaviour will have to\nreplace some usage of fieldWithPath with subsectionWithPath instead.\nUsers who were unintentionally relying on the old behaviour will have\nto add some additional descriptors produced using fieldWithPath and\nwill receive more accurate documentation in return.\n\nCloses gh-274"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/7bcfbd9e35ebcb025ceb67876362934c0289dc16", "message": "Add support for documenting a portion of a request or response payload\n\nCloses gh-312"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/60211dab868767711a47dc3f4ad5e19cad213869", "message": "Polishing\n\n - Pass attributes into RequestPartFieldsSnippet\n - Add missing package.info.java for new asciidoctor package"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/8035b91735f895b3e9709d0636c46e1d7a68270f", "message": "Merge pull request #270 from Mathieu Pousse\n\n* gh-270:\n  Polish \"Add support for documenting request part payload fields\"\n  Add support for documenting request part payload fields"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/d2a5b38c83609e83c405e7b99a49e39fa7d8038c", "message": "Polish \"Add support for documenting request part payload fields\"\n\n- Rebase on latest code, and make use of new support for the same\n  TemplatedSnippet producing multiple snippets with different names\n  from the same template\n- Expand the documentation\n- Apply code formatting\n- Add support for relaxed documentation of a request part's fields\n\nCloses gh-270"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/4f19294220eea0ed442f9d3d0718f7135ff11981", "message": "Allow a TemplatedSnippet to produce multiple snippets from same template\n\nPreviously a TemplatedSnippet could only write snippets with the\nsame name as its template. This meant that the same template could\nnot be used to produce multiple snippets with different names.\n\nThis commit separates the snippet name from the template name, thereby\nallowing the snippet name to vary while the template name remains the\nsame. For backwards compatibility, the default behaviour is for the\ntemplate name and snippet name to remain the same. The new overloaded\nconstructor can be used when the names need to differ.\n\nCloses gh-320"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a603b9481ee5a52ee6ff03ba6cc66219217f4e7d", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/60e1bdd5f4421c980c0360d9c754986114401ecd", "message": "Merge pull request #314 from Luis del Toro\n\n* gh-314:\n  Polish \"Copy attributes when applying path prefix to field descriptors\"\n  Copy attributes when applying path prefix to field descriptors"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/7487f413631544087a50aedea0bb21a024c79b88", "message": "Polish \"Copy attributes when applying path prefix to field descriptors\"\n\n - Apply code formatting\n - Test copying of attributes (and other parts of a field descriptor)\n   in new PayloadDocumentationTests\n\nCloses gh-314"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/025cfe674224cb9d8bb2aa488c58ae1d9d4b3b93", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/49596df0f3b59cd22329f70ff0b7f07ebc3ebf07", "message": "Make snippet directory resolution more robust\n\nThe previous approach had (at least) two problems:\n\n - A Gradle build run from a directory that also contains a pom.xml\n   would result in the resolver incorrectly identifing that Maven was\n   being used\n - A Maven build run from a directory that did not could a pom and\n   that used -f to provide the path to a pom would result in the\n   resolver incorretly indentifying that Gradle was being used\n\nWith this commit, the resolver now uses the presence of the maven.home\nsystem property to identify that Maven is being used. When Maven\nis being used, rather than looking for a pom.xml in the working\ndirectory, the resolver now locates the pom.xml by searching up the\ndirectory hierarchy from the docdir.\n\nCloses gh-297"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/c13b7d03f5f6fa2d1b21e5ca6ff095a20b525415", "message": "Fix DefaultAttributesPreprocessorTests on Windows"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/2f568c21212a1b68cbc9825260f261c54eaca62b", "message": "Install spring-restdocs-asciidoctor before building samples"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a2f1391fc88ed1aca77b06b56c51e75147294e70", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/0c64c781f49e154c9dfaa76bd5569fad16154304", "message": "Improve styling of groovy and adoc code blocks in the documentation\n\nCloses gh-317"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/3162241d4ad656cf5178e95c277b368dc5f60191", "message": "Merge pull request #310 from Gerrit Meier\n\n* gh-310:\n  Polish contribution and rework to use default attribute rather than macro\n  Provide a default output directory for snippets based on build tool"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/319bd139fc620757e122306f0b518ef301ca702d", "message": "Polish contribution and rework to use default attribute rather than macro\n\nRather than introducing a custom macro, this commit opts to implicitly\nconfigure the snippets attribute instead. The attribute is configured\nwill the path into which snippets are generated, relative to the\ndirectory that contains the Asciidoctor document that is being\nrendered.\n\nThe samples and documentation have been updated to use the new\nspring-restdocs-asciidoctor module and the implicitly configured\nsnippets attribute.\n\nCloses gh-297"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/c1540838a35b2d68e8d9d7b9fa80439c069ebe94", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/0f1f84e6a604532a37e1f760c24629009f8ea424", "message": "Fix JSON field type resolution for top-level and nested array fields\n\nPreviously, the logic that determined the field\u2019s type would incorrectly\nlook at the contents of the array. For example, if the array contained\none or more objects, the field\u2019s type would be resolved as Object rather\nthan Array.\n\nThis commit updates JsonFieldPath to record when a path explicitly\nidentifies an array so that the array itself is used to determine the\nfield\u2019s type rather than its contents.\n\nCloses gh-292"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/4e4d01a459d3c2972fb1f4a7220978b19ffec165", "message": "Consolidate logic in test rules for getting output dir and operation name"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/5913eb0c709bf898ec3f8ddd9cb6d95537645254", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/21567e0ffa10a330951727edca62f283ca7f8803", "message": "Simply dealing with operation names in REST Docs' own tests"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/523e3208c2c94b4c6430f70ae3e1f2b0565d3939", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/14dcdb61d06fddbe40bc31f9bab2d00e8de73b99", "message": "Fix package tangle between cli and operation packages\n\nQueryStringParser has been moved into the operation page. In the\nunlikely event that there were any external users of the class, a\ndeprecated version remains in the cli package for backwards\ncompatibility. It will be removed in 1.2.\n\nCloses gh-286"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/2e9152ae92495f13a8203488f4e3cf4b1da206e5", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/5c6cf7f12ff43ed97dcc2e59e1b63465d91ee175", "message": "Polishing"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a0faebdb0a33f2ccede8c1293a778d78ddccd7fb", "message": "Ignore query string when extracting path parameters\n\nCloses gh-285"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/9ba0a9b6be0b9be039382ee6ef8efb5073df1579", "message": "Stop field snippets requiring a type for missing, optional, ignored field\n\nMissing optional fields require a type to be explicitly provided as\nit cannot be inferred from the payload. Ignored fields are not\nincluded in the documentation, yet, previously, a field that was\nmissing, optional, and ignored would still require a type to be\nprovided otherwise the test would fail. This was pointless as the\nfield wasn't going to appear in the documentation.\n\nThis commit updates the fields snippets so that a type is no longer\nrequired for a field that is missing, optional and ignored.\n\nCloses gh-289"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/e8ee583bd729bf16215e47434e2a01f061df1677", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/ec3a05926ef4d715cc6c60bb7fc75a1bd285a267", "message": "Merge branch '1.0.x' into 1.1.x"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/b430a887965f3cb4c2f15060e67ce5b666538333", "message": "Polishing"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/8bcfb49219814f612cb50ee9226ade543da373de", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/bf9b0f2d640aee805f9f3b097573f95753d344c5", "message": "Ensure that query string is not duplicated when parameters overlap\n\nCloses gh-286"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/f2717363f034d898f3a33d0a964a24ff0638da8f", "message": "Raise the minimum Spring Framework version to 4.3.x\n\nCloses gh-284"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/65571d98dd0fc9416d28885cce536a24f2c46cf4", "message": "Revert \"Upgrade to Gradle 2.14.1\"\n\nThis reverts commit 5c74bef194f7ba8894ed1fe96d55b8dfe51174d8 and\ncommit 10e421a105f4a1f818b27866dcf64dbce7be83a6.\n\nSee gh-283"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/10e421a105f4a1f818b27866dcf64dbce7be83a6", "message": "Upgrade the samples that use Gradle to 2.14.1 as well\n\nSee gh-283"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/445423f9c5e063dd785378adf4e81c46cedad079", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/110fa23958db850c22f390b6b0388682e30f0bf6", "message": "Configure sonar.branch"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/5c74bef194f7ba8894ed1fe96d55b8dfe51174d8", "message": "Upgrade to Gradle 2.14.1\n\nCloses gh-283"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/6234cd328cb93849c99ad7eeb5ae31d62c3fbce2", "message": "Merge branch '1.1.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/67d31fd7d9ec1426eab7c3a8ab37de7c7ffa5bd6", "message": "Upgrade to Jacoco 0.7.7.201606060606\n\nCloses gh-282"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/2db7ab5e711d7bd8afe37f0bf8aeb8b30809da1f", "message": "Start work on 1.2.0"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/d9192380230461573e3715e6ff60104af21d62e4", "message": "Update the samples following the release of 1.1.1.RELEASE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/6c6054178ea1ee00b42933b5cf87b9eca1f600d7", "message": "Upgrade tests and samples to use Spring Boot 1.3.6.RELEASE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/3ec945fe58845893847fd1e931f00ab0279f36b8", "message": "Make it clearer how to use RestDocumentationResultHandler.document\n\nCloses gh-255"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/3dceea8bb5ce8454ce86a0c14cdc0332ee64270f", "message": "Document the tableCellContent Mustache lambda\n\nCloses gh-251"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/78318775e0a24ee901e959531fd0fbeb6a083b4b", "message": "Cause a failure when field's documented and actual types do not match\n\nCloses gh-276"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/86c2310b90d0763b2d0dc93a01083d05fc474372", "message": "Improve message when fields cannot be documented due to empty body\n\nCloses gh-278"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/6131730621296a0885df80da4cb68447bf99f292", "message": "Merge pull request #279 from mle-enso\n\n* gh-279:\n  Polish \"Improve documention on how to use .adoc snippets\"\n  Improve documention on how to use .adoc snippets"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/9c97c8b9bf17a8ebfa50ca38450e356da6663a92", "message": "Polish \"Improve documention on how to use .adoc snippets\"\n\nSee gh-279"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/f77864b094d078b4ab25c08475c47a454f03b200", "message": "Merge pull request #280 from Johnny Lim\n\n* gh-280:\n  Remove unnecessary Host header set in UriModifyingOperationPreprocessor"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/4f00cebaae10dfc9f228090e1cafc8ce35e16eeb", "message": "Adopt the new CLA signing process"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a3159b6f1c851044e1c55ec6888c6e880a23b5f4", "message": "Update README to link to restdocsext-jersey third-party extension"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/0a0136ca5867813cc74984fbc7a77c7ab04cb0cb", "message": "Move spring-webmvc dependency to where it's needed\n\nPreviously, spring-restdocs-core had a dependency on spring-webmvc\nhowever it only used classes from spring-web. This commit moves\nthe spring-webmvc dependency from spring-restdocs-core to\nspring-restdocs-mockmvc where it's needed. It's now in the runtime\nscope (rather than compile) as it's not needed at compile time but\nis needed at runtime by the MockMvc support in spring-test.\n\nCloses gh-273"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/417547e61a848c64623ee58bb49900f9ba1b2ece", "message": "Support more types of content in RestAssuredRequestConverter\n\nPreviously, RestAssuredRequestConverter only supported request and\nrequest part content that was null, a String or a byte[]. This was\nparticularly problematic for multipart requests as RestAssured performs\nsome internal conversion which meant that, no matter what the when a\nbyte[] was provided it was wrapped in a ByteArrayInputStream meaning\nthat the converter could not read it.\n\nThe commit improves RestAssuredRequestConverter so that it will now\nconvert File content and InputStream content where the stream supported\nreset().\n\nCloses gh-252"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/61226b5619f5bf772367fa828a7f1a5c061e2ffb", "message": "Merge pull request #268 from Jennifer Strater\n\n* gh-268:\n  Add README to Grails sample"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/0540f98de8de933c364eaaa8046b659b26514b73", "message": "Merge pull request #266 from Jennifer Strater\n\n* gh-266:\n  Split samples table into three tables grouped by type"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/30254ba6d582a93c09bb23ca439b328288e7e1c2", "message": "Merge pull request #271 from Johnny Lim\n\n* gh-271:\n  Correct javadoc in LinksSnippet"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/8ca1dfa1ad7e84c4abde73db62a398bb1b9bed48", "message": "Improve handling of requests with both parameters and content\n\nPreviously, if a MockMvc request was made with parameters and body\ncontent, the parameters were omitted from the resulting curl, HTTPie\nand HTTP request snippets.\n\nThis commit updates the affected snippets to ensure that the\nparameters are included. The user-provided content is interpreted\nas indicating that the parameters should be sent in the query string\nrather than as form-encoded content.\n\nCloses gh-239"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/37519398c735dc4dca3c5f04bb0b309cd7b1dc19", "message": "Include customized Host header in curl and HTTPie request snippets\n\nPreviously, the curl and HTTPie request snippets always excluded the\nHost header, relying on the Host header that\u2019s auto-generated by curl\nand HTTPie instead. This worked well for the most part, but meant that\nincorrect snippets were generated when the request was being sent with\na custom host header that did not match the header that would be\nauto-generated.\n\nThis commit updates CliOperationRequest to only filter out the Host\nheader if it\u2019s the same as the header that would be auto-generated\nby curl or HTTPie.\n\nCloses gh-258"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a4298b29e7f30715c7d8f96334c8d30a02e541a1", "message": "Include request URI\u2019s port, if any, in default Host header \n\nPreviously, OperationRequestFactory would add a Host header if one did\nnot already exist in the request\u2019s headers, however it did not include\nthe port. This meant that when the request was being made to a\nnon-standard port (a port other than 80 for an HTTP request and 443 for\nan HTTPS request) the Host header was incorrect.\n\nThis commit updates OperationRequestFactory to check the URI for a port\nand, if it has one, include it in the Host header.\nUriModifyingOperationPreprocessor has also been updated to correctly\ninclude the port in the Host header.\n\nCloses gh-269"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/857525954befbf4350999d4f6364e1ec96697eb0", "message": "Update samples following the release of 1.1.0.RELEASE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/41b7fd63f61ccaa80028ddbc1c5a71f277ed7752", "message": "Fix RestAssuredRestDocumentationConfigurerTests.nextFilterIsCalled\n\nThe test wasn\u2019t actually verifying that the next filter was being\ncalled. This commit corrects that."}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/b804ebbe5ac7f5a5972260e3b363365b338a84de", "message": "Add a description to the REST Assured module"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/686914071a38c2d25afb230fe88ecdaf111b16bc", "message": "Configure Grails sample to run tests using a random server port\n\nSee gh-250"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/d5a2dff210d92730abafe0058c027264859514c3", "message": "Update the samples to use Spring Boot 1.3.5.RELEASE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/4f87f55aaa5d33555976c5c11e5d189421a7e929", "message": "Fix link to Spring Framework javadoc"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/8ca8c85d32502506d4f48803be1548d14a1062a6", "message": "Merge pull request #250 from Jennifer Strater\n\n* gh-250:\n  Polish \"Add Grails sample app\" (1338df9)\n  Add Grails sample app"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/34ec9d523d69a80d7d51d02b25b17a7c9495bcd8", "message": "Polish \"Add Grails sample app\" (1338df9)\n\nThe sole structural change is to rearrange the build slightly so that,\nlike the other samples, the version of the Grails sample's REST Docs\ndependency is automatically updated.\n\nSee gh-250"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/c1d245f7d438e557217b7633a31e839a3ff4e632", "message": "Add link to restdocs-wiremock to the README\n\nCloses gh-244"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/bec03a1f3f7ff5859d73657a1171fc0fb396d3df", "message": "Merge branch '1.0.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/26ff2ec8a51421e15acf032bd7f19968ca1697a7", "message": "Update HATEOAS sample to use new API for generating extra snippets\n\nSee gh-249"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/251d93ddc8ffd29eb323dbf8bc0120787f9c7876", "message": "Correct ordering of Javadoc tags"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/0446c99a101a423c99003c8fa5a6a551f374865c", "message": "Polishing\n\n- Correct copyright years\n- Add `@since` to javadoc of new public classes\n- Make new classes final where appropriate"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/42353a0b5f6ef2c384640b51870a7adac0d53ece", "message": "Improve the API for generating additional snippets\n\nPreviously, if alwaysDo was used and the user wanted to generate\none or more additional snippets when calling perform a separate call\nto `snippets` was made prior to calling `perform`. This had two\nproblems:\n\n - it required the result handler to be stateful (see gh-243)\n - it wasn't clear that the additional snippets would be produced when\n   a subsequent call to perform was made\n\nThis commit introduces a new API that allows the additional snippets\nto be specified within the MockMvc call. The old API has been\ndeprecated and will be removed in 2.0.\n\nCloses gh-249"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/cb1f98c601ecedd0bcc20fb857dfbbceca3dd0b9", "message": "Improve handling of parameters with null values\n\nCloses gh-199"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/6935f603f28e6e0d9dd8b1ec49b0b53dbfe8c1fc", "message": "Polish ResourceBundleConstraintDescriptionResolver and related tests\n\nCloses gh-234"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/4715351cce088d1aa121fea7ae8986361a803e1d", "message": "Make it easier to provide a placeholder resolver that uses the context\n\nCloses gh-235"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a0f82f283bd415baf417cb145f10c2217416f33a", "message": "Merge pull request #247 from Marcel Overdijk\n\n* gh-247:\n  Polish \"Allow descriptors to be provided as a List as well as via varags\"\n  Allow descriptors to be provided as a List as well as via varags"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/81b2f11ebfa223cdb2b27dd1ea39cabdbecd9a1a", "message": "Polish \"Allow descriptors to be provided as a List as well as via varags\"\n\nSee gh-247"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/7e116ae0cd8ad6165144b4a98c5fe359089be642", "message": "Merge pull request #245 from Marcel Overdijk\n\n* gh-245:\n  Provide utility method for applying a path prefix to field descriptors"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/1132fa275c5b6295412626decef8ece9664e8e2d", "message": "Merge pull request #240 from Johnny Lim\n\n* gh-240:\n  Polish"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/3c80176e663ba65898922fa3feba5b9d80405b58", "message": "Merge branch '1.0.x'"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/ad549ae7c0301ea39c6e67dcbd734e943e4f90cc", "message": "Ensure that additional snippets are only called once\n\nPreviously, when additional snippets were added to a\nRestDocumentationResultHandler, those snippets would then be called\nfor every subsequent call to handle(MvcResult). This is problematic as\nthe snippets and their configuration are specific to a particular\nMvcResult that is being documented.\n\nThis commit updates RestDocumentationResultHandler so that it clears\nits additional snippets each time handle(MvcResult) is called.\n\nCloses gh-243"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/7f02cdf72531e673d9ce425838b412adbe463dcf", "message": "Upgrade to JMustache 1.12\n\nCloses gh-246"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/404b99b0a4ea4dc1908b5d7d709db9e6e5a1f2b2", "message": "Avoid problems caused by | characters in table cell content\n\nPreviously, a | character in a cell of an Asciidoctor table would\nbreak that table's formatting as it would be interpretted as a\ndelimiter for the cell. The problem also affects Markdown tables where\nthe | character is not within backticks.\n\nThis commit addresses the problem with Asciidoctor tables by\nintroducing a JMustache Lambda that escapes | characters by prefixing\nthem with a backslash.\n\nUnfortunately, a complete solution to the problem when using Markdown\nis not as straightforward. Markdown only requires a | character to be\nespaced when it is not within backticks. Determing this isn't\nstraightforward as the text would have to be parsed, taking into\naccount the possibility of backticks themselves being escaped.\nInstead, this commit attempts to avoid the problem in a different way.\n\nThe most likely source of a | character is when documenting a\n`@Pattern` constraint that uses a | character in its regular\nexpression. To improve the readability of the regular expression this\ncommit wraps it in backticks, thereby formatting it in a monospaced\nfont in both Asciidoctor and Markdown and also avoiding any escaping\nproblems with the latter.\n\nCloses gh-232\nSee gh-230"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/65e55ac15cf01a60bb07ef04bbab490d1f7a6b33", "message": "Allow descriptors to be added using a List in addition to varags\n\nCloses gh-242"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/117e8ec096b5e95b575bc8258245602a6145680a", "message": "Provide an API for configuring additional default snippets\n\nPreviously, the default snippets could only be configured by\nreplacing those that are configured out of the box. This commit adds\na method, withAdditionalDefaults, that can be used to add one or more\nsnippets to those that are configured out of the box.\n\nCloses gh-237"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/62898691", "body": "It looks like you've hit a known problem with AsciiDoctor on Windows when you try to include an absolute path: asciidoctor/asciidoctor#1144.\n\nIt may be possible to rework things to use a relative path which should work around the problem.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/62898691/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/62903701", "body": "Thanks for bringing the problem to my attention. I think things should work as expected on Windows now. Please let me know if you're still having trouble.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/62903701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/62905117", "body": "Merged. Thanks, Rossen.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/62905117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/65223314", "body": "Merged. Thanks very much, Rob.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/65223314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/67745303", "body": "That's unlikely. Why do you care which build system the project itself uses?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/67745303/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/68747479", "body": "Am I right in thinking that this is a slightly cryptic request for snapshots to be published to repo.spring.io?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/68747479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/69222671", "body": "Thanks for this, Dave. I've reworked things so that they're no longer quite so Gradle-specific. See 6ec522069a2dca8c5ae95a11839afe8636ca09db for details. Both samples can now be built with Maven and, thankfully, there's less configuration required.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/69222671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/71507139", "body": "It works fine for me and, more importantly, on the CI server. It looks like you're trying to compile against and older snapshot that doesn't contain [this commit](https://github.com/wilkinsona/spring-restdocs/commit/cae7e3fb582d024f924943828b6721494610730f).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/71507139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/71522895", "body": "Looks like Artifactory's in a mess. The new code was there, but it's failing to increment the snapshot properly as part of the deploy so the old code's preferred over the new. I've deleted the snapshots and associated Maven metadata in the hope that a clean slate will sort things out.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/71522895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/71524428", "body": "Thanks. There's something wrong with Artifactory's snapshot publishing. I've cleared out the old snapshots and published a new build. It appears to have solved the problem (for now at least), You may need to run a build with `--refresh-dependencies` for Gradle to pick them up.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/71524428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/73930513", "body": "Thanks for pointing me to your project. It's an interesting approach to the problem and one that I hadn't thought of before.\n\nI'm coming at this as someone who isn't a fan of Swagger for a variety of reasons. I covered them in a recent webinar ([it's on YouTube](http://youtu.be/knH5ihPNiUs)), but I'll try to summarise them here:\n1. [It doesn't support hypermedia](https://github.com/swagger-api/swagger-core/issues/97). I like to avoid the religious debate about what is and is not REST, but I do think that a tool for documenting RESTful APIs really ought to support (but not require) the use of hypermedia.\n2. The general approach for generating the metadata is to harvest it from the implementation. Unfortunately, I think this approach is fundamentally flawed as it requires that the tool performing the harvesting understands every little detail of the implementation and the framework that it's been built with. That's a near-impossible task and, at the very least, means that the tool will constantly be playing catch up. They offer a raft of annotations to work around (some of) these limitations but you then end up repeating yourself as you have to configure Swagger and the framework with which you're building your API.\n3. Annotations are a really unpleasant way to write documentation and Swagger leans on them heavily for its operation descriptions, parameter descriptions, etc.\n4. I don't like the format/layout of the documentation that Swagger produces. For example, it places far too much focus on URIs and wastes space repeating information about HTTP status codes which, unless you're doing something off the wall, probably don't need to be mentioned at all. It also doesn't provide any where for you to provide an overview of the API ([here's GitHub's, for example](https://developer.github.com/v3/)).\n\nProblems 1, 2, and 3 are pretty much out of your control. What you've done does a nice job of tackling a large chunk of 4. If it were me I'd filter out the HTTP status codes and probably the consumes/produces MIME types too (assuming they're consistent across the whole API).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/73930513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74044419", "body": "@RobWin Sorry, I think it was missing the wood for the trees\n\n@Pytry I think you could introduce either spring-restdocs or swagger2asciidoc somewhat gradually.\n\nYou could use spring-restdocs to introduce some new getting started documentation that walks people through the steps to perform certain tasks with your API. Both of the samples contain such documentation. This approach is quite nice as the two different pieces of documentation are totally separate so there's no joint maintenance to worry about.\n\nAnother option would be to use @RobWin's project to produce some documentation in Asciidoctor based on all your existing Swagger-based documentation. This document could then be checked into source control and evolved over time. You might want to start by adding an overview section that describes some of the common features of all of your API's resources. Or you could gradually introduce the use of spring-restdocs to add some example requests and responses. If the API evolves, you'll have some joint maintenance to do for a while to keep the native Swagger documentation and the Asciidoctor conversion in step, but that's an inevitable consequence of a gradual migration.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74044419/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74330760", "body": "Thanks, @kurron. I'd had self-hosting in mind but had yet to investigate.\n\nI'm a member of the Boot team so I'm sure we can work something out. That said, I don't think any changes should be necessary on the Boot side.\n\nIIRC, Gradle runs the tests after it's built the jar, however that ordering can be changed by updating task dependencies. It might even be sufficient to set the Asciidoctor's output dir as an input for the jar task. Some experimentation to figure out the best way is probably in order.\n\nIn the project's early days there was a Gradle plugin but I removed it along with some Gradle-centric assumptions as part of making things work more nicely with Maven. Depending on how complicated the configuration becomes, it may be time to revisit that decision.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74330760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74489725", "body": "This seems to be a nice concise way to configure a Gradle build to include the documentation as static content that'll be served by Spring Boot:\n\n``` groovy\njar {\n    dependsOn asciidoctor\n    from (\"${asciidoctor.outputDir}/html5\") {\n        into 'static/docs'\n    }\n}\n```\n\nThe Maven equivalent requires binding the the Asciidoctor plugin to the `prepare-package` phase and then configuring the resources plugin to copy over the documentation:\n\n``` xml\n<plugin>\n    <artifactId>maven-resources-plugin</artifactId>\n    <version>2.7</version>\n    <executions>\n        <execution>\n            <id>copy-resources</id>\n            <phase>prepare-package</phase>\n            <goals>\n                <goal>copy-resources</goal>\n            </goals>\n            <configuration>\n                <outputDirectory>${project.build.outputDirectory}/static/docs</outputDirectory>\n                <resources>\n                    <resource>\n                        <directory>${project.build.directory}/generated-docs</directory>\n                    </resource>\n                </resources>\n            </configuration>\n        </execution>\n    </executions>\n</plugin>\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74489725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74492902", "body": "Thanks for the PR.\n\nThis project's going to move over to the [Spring Projects organisation](https://github.com/spring-projects). Once it's there I'll be able to accept PRs from anyone who's signed the contributor licence agreement. I'll comment again with more details after the move.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74492902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74650776", "body": "The project's moved over now. Can you please [sign the CLA](https://github.com/spring-projects/spring-restdocs/blob/master/CONTRIBUTING.md#sign-the-contributor-license-agreement)?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74650776/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74654643", "body": "Apologies. I'd forgotten about the project drop-down on the form. I'll let you know once it's been updated.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74654643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74715210", "body": "The form's been updated and Spring REST Docs is now listed in the projects drop-down. Hopefully that's the final piece in the puzzle. Sorry it's been a little convoluted, thankfully you only need to sign once.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74715210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74837191", "body": "@kurron The approach Greg mentions is described [here](https://help.github.com/articles/using-pull-requests/)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74837191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74863254", "body": "I've made a few comments in the commit (see above). Would you like to update the PR?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74863254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74890532", "body": "See #16\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74890532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75053345", "body": "It's Spring MVC Test that needs to be able to \"see\" the JAX-RS endpoints. How have you configured Jersey in your Spring application? Making Spring MVC Test aware of Jersey's filter might be sufficient but I haven't tried it.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75053345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75054750", "body": "I'd always envisaged the output format being pluggable and there's a (somewhat incomplete) abstraction around `DocumentationWriter` in the current code. It's incomplete as there's no way to plug in a different `DocumentationWriter`.\n\nAdding Markdown had seemed like the next obvious format after Asciidoctor, but I've yet to find a Markdown-based toolchain that works well with Maven and Gradle. I see you've got an example that uses MkDocs in your README but, as far as I know, it requires Python. Are you aware of anything for Markdown that has the same level of integration into the JVM's build tools as Asciidoctor does?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75054750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75058811", "body": "@glaforge @RobWin Thanks, both. Those look like some excellent options. I've opened #19 to add support for generating Markdown.\n\n@RobWin Thanks for the pointer to your `DocumentBuilder`. Thanks for the offer to extract it into a library, but I'd like to keep this project's dependencies as minimal as possible.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75058811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75362426", "body": "Spring REST Docs uses Spring MVC Test which was introduced in Spring Framework 3.2 so it definitely won't work with a version earlier than that. As expressed in the project's dependencies, using Spring Framework 4.1 is recommended. 4.0 may well work as well but isn't tested.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75362426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75513578", "body": "Well spotted. Thanks for the PR.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75513578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75515879", "body": "Thanks for the PR. Merged in 6bdd60c.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75515879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75523788", "body": "It's a limitation of Spring MVC Test.\n\nSpring Boot registers an error page with the embedded container. When an error response is being returned, the container forwards the request to the error page which causes Spring Boot's `BasicErrorController` to be driven. This produces the JSON output describing the failure. Spring MVC Test is unaware of error pages (and also doesn't fully support the forwarding of requests) so you're left with a \"plain\" error response.\n\nIf you look again at `ApiDocumentation.errorExample` you'll see that I've actually called Spring Boot's error controller directly (`/error`) and have configured the necessary request attributes to mimic the forwarding of an error:\n\n``` java\nthis.mockMvc.perform(get(\"/error\")\n        .requestAttr(RequestDispatcher.ERROR_STATUS_CODE, 400)\n        .requestAttr(RequestDispatcher.ERROR_REQUEST_URI, \"/notes\")\n        .requestAttr(RequestDispatcher.ERROR_MESSAGE,\n                \"The tag 'http://localhost:8080/tags/123' does not exist\"))\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75523788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75739016", "body": "No firm plans for a release just yet. That said, I'd like to get a first milestone out in the not too distant future. There are three issues (and possibly a fourth) still to tackle.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75739016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75740360", "body": "I've just taken a closer look and Spring Framework 4.1 is the minimum supported version as the `MockMvcConfigurer` API is new in Spring Framework 4.1. It's used to allow the scheme, host, and port of documented URIs to be configured. It's also a prerequisite for implementing #14. I'll update the README.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75740360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75743849", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75743849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75759068", "body": "Sounds great. Yes, please.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75759068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75935646", "body": "Thanks for the PR. Would you mind squashing it into a single commit and doing a forced push please? It'll make it a bit easier to review.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75935646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75975993", "body": "To be useful, there really needs to be a Markdown framework that supports including the snippets in a file that contains the bulk of the documentation, i.e. the same functionality as is provided by Asciidoctor's include directive. I've yet to find one. It's been suggested in [Pegdown](https://github.com/sirthias/pegdown/issues/111).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75975993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/76685780", "body": "The relationship between request parameters and a URI's query string is a little bit tricky and, at the moment, Spring REST Docs only looks at the query string (`HttpServletRequest.getQueryString()`), whereas the `param(key, value)` method only makes them available from `ServletRequest.getParameterMap()`. The latter contains parameters both from the query string and from POSTed form data. Rather than trying to separate out the query string parameters, Spring REST docs just looks at the request's query string. Looks like we need to improve this and look in the parameter map when it's a `GET` request.\n\nIn the meantime, updating your test to look like the following should produce the desired snippet:\n\n```\n@Test\npublic void testSearchingRoutes() throws Exception {\n    mockMvc.perform(get(\"/routes?startNear=+42.297877,-71.485591&endNear=+41.949915,-71.406392\"))\n        .andExpect(status().isOk())\n        .andDo(document(\"search-routes-example\"));\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/76685780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/76695603", "body": "That looks like you're missing the changes made in https://github.com/spring-projects/spring-restdocs/commit/6bdd60cda6760184b66272502d70c8023febfc2a. Perhaps you need to give Maven or Gradle a nudge to get it to refresh snapshot dependencies?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/76695603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/76915497", "body": "I'm not sure that there's a generally applicable way to solve this. If the service was using hypermedia then all of the links would also require the same modification to their URIs, and any code in the service that extracts ids etc from those links would have to understand the modification.\n\nDepending on how your app is written, and whether or not it uses hypermedia, the best solution may be to change the dispatcher servlet's mapping. Perhaps you can share some more information about your app so that we can explore that approach?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/76915497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/77165279", "body": "If the person writing the documentation is happy with the response example then I would expect them simply not to make any field documentation calls and for the test to pass.\n\nWhen the user has opted to document some fields I think it's reasonable, at least initially, for the test to pass or fail based on the same criteria as the link documentation support. If it becomes clear that this is too strict, then we can relax both at the same time.\n\nI don't think embedded resources complicate things here. Consider [this example from the HAL primer](http://phlyrestfully.readthedocs.org/en/latest/halprimer.html):\n\n``` json\n{\n    \"_links\": {\n        \"self\": {\n            \"href\": \"http://example.org/api/user/matthew\"\n        }\n    },\n    \"id\": \"matthew\",\n    \"name\": \"Matthew Weier O'Phinney\",\n    \"_embedded\": {\n        \"contacts\": [\n            {\n                \"_links\": {\n                    \"self\": {\n                        \"href\": \"http://example.org/api/user/mac_nibblet\"\n                    }\n                },\n                \"id\": \"mac_nibblet\",\n                \"name\": \"Antoine Hedgecock\"\n            },\n            {\n                \"_links\": {\n                    \"self\": {\n                        \"href\": \"http://example.org/api/user/spiffyjr\"\n                    }\n                },\n                \"id\": \"spiffyjr\",\n                \"name\": \"Kyle Spraggs\"\n            }\n        ],\n        \"website\": {\n            \"_links\": {\n                \"self\": {\n                    \"href\": \"http://example.org/api/locations/mwop\"\n                }\n            },\n            \"id\": \"mwop\",\n            \"url\": \"http://www.mwop.net\"\n        }\n    }\n}\n```\n\nThere are only four fields that require documentation: `_links`, `id`, `name`, and `_embedded`. If you want to go into more detail on the structure of `_embedded`, then you could document `_embedded.contacts` and `_embedded.website` instead of `_embedded`. This is probably the level I'd go to, with the documentation for `_embedded.contacts` and `_embedded.website` being nothing more than a link to the documentation for the contacts and website resources respectively. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/77165279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/77230527", "body": "My thinking is that, if you've documented `_embedded.foo`, then anything beneath that (`_embedded.foo.bar`, for example) should be treated as documented. I also wonder if `_embedded` should be considered to be documented if all of its children are documented\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/77230527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/77347675", "body": "The changes should be in the latest snapshots as they're automatically published by the CI server. The artifact's coordinates changed from `org.springframework.restdocs:spring-restdocs-core` to `org.springframework.restdocs:spring-restdocs` recently. Perhaps you were looking at the old artifact? I've just deleted the old snapshots from the repo to hopefully make the name change a little more obvious.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/77347675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/81558833", "body": "I've considered this in the past but never convinced myself that it was worth the effort \u2013 link URIs will be available via cURL (or whatever) so clients can always shoot themselves in the foot if they really want to. That said, I can certainly see how it would be an extra deterrent that might be enough to make some people think twice and do the right thing.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/81558833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/81568250", "body": "Thanks, @mikebra.\n\n> Adding the suggested optional prefix seems like the most flexible solution. Since it is optional it wouldn't impact existing users but would support more sophisticated routing of requests in a multi-tenant architecture.\n\nMy concern isn't so much with it impacting existing users but with the solution being (somewhat) generally applicable. For example, I'd like it to work for anyone who's documenting a hypermedia-based API that's behind a proxy/router.\n\nMy current thinking is that using the `X-Forwarded-Prefix` header may be appropriate here. The header could be set via `withPrefixUri` or similar and then used when creating the curl url. It would also have to be ignored when determining the curl command's header arguments. Setting the header would allow any link-creation logic to generate the correct URI ([and would get this for free if it's using Spring Framework's ServletUriComponentsBuilder](https://jira.spring.io/browse/SPR-12500)).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/81568250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/81584858", "body": "Thanks. Have you [signed the CLA](https://github.com/spring-projects/spring-restdocs/blob/master/CONTRIBUTING.md#sign-the-contributor-license-agreement)?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/81584858/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/81704061", "body": "Thanks for the PR. I've merged it with one notable change: I removed the logic for handling request parameters for POST requests as I'm not sure that it's necessary for a RESTful service and #26 was specifically looking to address GET requests.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/81704061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/81732847", "body": "I tried to explain my reasoning above. The primary reason was because issue #26, which this PR was addressing, was specifically interested in GET requests. If there's a valid use case for POST requests then I'd prefer to tackle it in a separate issue.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/81732847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/82395185", "body": "There's now a CI plan that runs the build on Windows: https://build.spring.io/browse/SRD-WIN\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/82395185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/84971634", "body": "Merged. Many thanks for the PR.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/84971634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/84971935", "body": "Closing in favour of the PR\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/84971935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/85597063", "body": "Thanks for the thoughtful feedback, @davidgoate. It looks like @rstoyanchev has answered much of it already. Thanks, Rossen.\n\nThere's [another issue](https://github.com/spring-projects/spring-restdocs/issues/27) open where someone is looking for the curl snippets to work for an app that's behind a load balancer/proxy, i.e. they want to generated URLs to point to the load balancer and not directly to the app. That, too, requires the configuration of a prefix but one that's used in a very different way to your context path requirement. I'm sure that both can be satisfied but it'll take some thought to get the naming/structure right so that the two can co-exist.\n\nSpring Boot's error handling is a little tricky when used with MVC Test as it relies on request forwarding which MVC Test doesn't fully support. However, I'm not sure that you actually want to document error responses that frequently and, when you do, you can make a request directly to `/error` to get the expected response. Take a look at the [`errorExample` test](https://github.com/spring-projects/spring-restdocs/blob/master/samples/rest-notes-spring-data-rest/src/test/java/com/example/notes/ApiDocumentation.java) in the samples to see how I've handled this.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/85597063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/85640615", "body": "@andreasevers Thanks for the PR that helped to get the ball rolling\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/85640615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/85976106", "body": "Interesting suggestion. Thanks. I'm less opposed to reusing existing annotations, such as those for bean validation, than I am to adding annotations to your implementation specifically for the purposes of documentation.\n\nI want to keep Spring REST docs as \"stupid\" as possible. I don't want it to try to discover your DTOs and exactly how they're validated as it'll inevitably get it wrong on occasion, lag behind validation features in the framework, etc. An explicit API that, for example, takes a class and a field name and extracts a description of the bean validation constraints would (largely) avoid these problems. I think it certainly warrants some exploration, particularly if others are interested in this functionality. +1s welcome.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/85976106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/85977057", "body": "@metoluke Contributions, no matter how small, are always welcome.\n\nI can imagine an API that's something like `withQueryString(parameter(\"foo\").withDescription(\"blah\"), parameter(\"bar\").withDescription(\"blah\"))`. As you suggest, it could have similar validation to `withLinks()` so it would fail if a query parameter was used but was not documented and would also fail if a query parameter was documented but did not appear in the request.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/85977057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/86510153", "body": "For some aspects of the documentation there's nothing to be done to support XML, for example a cURL request snippet for POSTing an XML payload. On the other hand, the current support for documenting links would require you to write your own `LinkExtractor` as the two built-in extractors are both JSON-specific.\n\nCan you be a bit more specific, what sort of XML payload support are you looking for?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/86510153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/86887342", "body": "The fact that [this](https://twitter.com/kubem/status/581202329178894337) is possible with the Bean Validation API makes me doubt the wisdom of trying to implement this.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/86887342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/87609132", "body": "XML is a little more complex than JSON (due to attributes) but it should be possible to do something, particularly as XPath is part of the JDK (I've avoided the use of JSON path as I want to limit Spring REST docs' dependencies as much as possible).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/87609132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/87990156", "body": "Thanks for the suggestion. I'm not familiar with Postman collections. I assume [this](https://www.getpostman.com/docs/collections) is what you're referring to? Do you know if the file format is documented anywhere?\n\nMy initial reaction is that this doesn't really fit within the scope of this project, but I can see that it might be useful to provide links to Postman collections in a getting started guide that groups together a series of operations. I'm not sure how widely used Postman is, this would certainly be more of a niche than HTML-based documentation. Also, for a hypermedia-based API, I'd want Postman to be following links rather than using hardcoded URIs. Is that possible?\n\n> it could be tricky because a postman collection is described in one file. \n\nThe infrastructure that supports [documenting multiple steps in a single test](https://github.com/spring-projects/spring-restdocs#parameterized-output-directories) might help here. While it's currently used to write separate snippets for each step, it could also provide a foundation for documenting multiple steps into a single file.\n\n> A few changes would be needed in order to properly generify classes like SnippetWritingResultHandler for them to support different output writers. The mentioned ResultHandler is currently hardcoded to use the AsciiDoctorWriter. \n\nI have a local branch that's tackled some of this as part of supporting Markdown as an output format (#19). That work's currently on hold due to Markdown's lack of support for includes but it could be dusted off to support this if we decide it's worth doing.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/87990156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/93984225", "body": "> Fatal error compiling: invalid target release: 1.8\n\nThe sample requires Java 8 and you're trying to compile with an earlier JDK.\n\nI should probably update the README to make it clear that, while the project itself works fine with Java 7, the samples need to be built with Java 8.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/93984225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/93984676", "body": "`withRequestFields` will let you document the request body, not the query string parameters. It looks like you trying to document an empty request body (hence the failure being at line 1, column 1 of the input).\n\nSupport for documenting query string parameters is #39.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/93984676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/93990975", "body": "Reopening to remind me to update the README\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/93990975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94189872", "body": "Thanks for the PR. Given that the changes are unrelated, would you mind splitting them out please? Also, if you haven't already done so, can you please sign the [CLA](https://support.springsource.com/spring_committer_signup)?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94189872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94395248", "body": "@openwms Thanks for the PR. I share @AGoliath's concern about the use of `startsWith`. Given the existing dependency on Spring Framework, I think the use of `MediaType.parseMediaType` is the safest option.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94395248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94396537", "body": "Merged. Thanks for the PR.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94396537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94396681", "body": "Excellent. Thanks very much.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94396681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94397146", "body": "@MikeBra I believe I was overthinking this. As @mayboroda has pointed out, you can achieve what you want by configuring the request's context path. In the latest snapshots, you can now do so using `RestDocumentationConfigurer.withContextPath(\"/router\")`\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94397146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94401304", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94401304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94404847", "body": "Thanks for the PR. I like the idea, but I'm not totally sold on the implementation.\n\nThere have already been requests for better support for XML payloads (see #46, for example) and I'd prefer not to add to the problem of things being too JSON-centric.\n\nHow about a `ResponseFormatter` abstraction that takes the response as input and returns the formatted content? The default implementation, `IdentityResponseFormatter` would simply return the content as-is. To enable pretty-printing, or any other sort of response post-processing, users could associate a `ResponseFormatter` implementation with a particular content type, perhaps via an API on `RestDocumentationConfigurer` that sets the formatters on `RestDocumentationContext`. Jackson-based implementations for pretty-printing JSON and XML could be provided.\n\nThe above-described changes would probably mean that there's only a single snippet produced, rather than one snippet for the formatted response and one for the unformatted response. I suspect that won't be a problem, though, as I can't imagine someone wanting to use both the formatted and the unformatted snippets in the same documentation. That's only a hunch. If you have real word experience the says otherwise, please do say so.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94404847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94405016", "body": "@openwms Would you like to update the PR when you have a moment?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94405016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94414423", "body": "I opened this issue more to get in on my todo list than in expectation that anyone else would tackle it.\n\nMy intention is to use a pure Asciidoctor-based approach. That'll probably mean no PDFs for now ([PDF support](http://asciidoctor.org/docs/convert-asciidoc-to-pdf/) is in alpha at the moment), but it'll also mean no Docbook which is a trade-off I'm happy to make.\n\nI haven't thought too much about the structure of the documentation in terms of chapters, sub-chapters, etc yet. If you are interested in helping out, perhaps we can revisit this once a general outline is in place?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94414423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94447662", "body": "Interesting. I hadn't considered stripping out headers. I like that idea too. Given that capability, perhaps `ResponsePostProcessor` would be more appropriate? It's no longer just about formatting.\n\nI haven't looked in detail to confirm that this'll work, but I think that `RestDocumentationResultHandler` could call the configured response formatters/post-processors and then call its delegates. There's no setter for an `MvcResult`'s response so I think the result would have to be copied to contain the new response. There may also be some hoops to jump through to produce a response with formatted content: judicious use of `setCommitted(false)` and `resetBuffer()` should do the trick.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94447662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94728122", "body": "Thank you. I've merged the changes.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94728122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94755680", "body": "Well spotted. Thank you.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94755680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/95508201", "body": "The implementation only supports (nested) maps at the moment\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/95508201/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/95929451", "body": "The link building methods in Spring HATEOAS rely on Spring Framework's `RequestContextHolder` to access the current request. The current request is used to determine the scheme, host, and port in the link. Given that you're trying to build a link in a test when there should be no current request, I'm surprised that it works at all.\n\nThe above doesn't really matter as I don't think you should be using a link builder in your test. By reusing the exact same logic in your test that you're using in your controller, you're not really testing that the controller is doing the right thing \u2013 if there's a bug in the controller then there's a high chance that you test will contain the same bug. I'd update your test to hardcode the expected URI for the Location header.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/95929451/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/97359908", "body": "Thank you. Have you [signed the CLA](https://github.com/spring-projects/spring-restdocs/blob/master/CONTRIBUTING.md#sign-the-contributor-license-agreement)?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/97359908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/97800874", "body": "Thanks again for the PR, I've merged it into master.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/97800874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/97801575", "body": "@dewet22 Thanks again for opening this PR and for inspiring a large chunk of what I've implemented in e5f35c9. Those changes should be available in the latest snapshots. If you get a chance to try them out, I'd be interested to hear any feedback you may have.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/97801575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/99030591", "body": "Nice! Thanks very much.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/99030591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/99030763", "body": "Closed in https://github.com/spring-projects/spring-restdocs/commit/e5f35c98f371e7132e114fdcffca5f0c14fc40d2\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/99030763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/99036462", "body": "On seconds thoughts, it'll make things simpler if the samples and main project have the same Java version requirement. I'll update the samples to build with Java 7.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/99036462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/99036956", "body": "In the absence of a Markdown frameworks that supports includes, there's little point in implementing this.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/99036956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/100437179", "body": "Sorry, I'm struggling to see the connection between microservices and the use of a parent pom or a Git submodule. Can you explain in a bit more detail please?\n\nOne area where I can see microservices complicating things is in discovering and accessing the documentation. The best approach that I've heard so far is for each microservice to serve its own documentation from the same URI (`/docs`, for example). You can then piggyback on service discovery to also discover the documentation. Using hypermedia and linking to the service's documentation from its main entry point is another approach.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/100437179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/100447602", "body": "Yes, that's the kind of approach I had in mind\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/100447602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/100489154", "body": ">  does it support things like Feign and RestTemplate?\n\nNo. You use Spring Test's MockMvc API to drive the tests and generation of the documentation.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/100489154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/101346433", "body": "The snippets are currently written using the JVM's default encoding. Do you have a need to write the snippets in an encoding other than the default for your environment?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/101346433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/101347427", "body": "Nevermind, thinking about it some more, ensuring that builds are repeatable is reason enough to use a specific encoding. It should probably be configurable with the same default as Asciidoctor (UTF-8).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/101347427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/102023209", "body": "What coordinates are you using? The artifact id changed from `spring-restdocs-core` to `spring-restdocs` a while ago. All the old `spring-restdocs-core` snapshots have been removed from the repo so I would guess you're seeing a locally cached version of one of the old artifacts.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/102023209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/102027714", "body": "Strange. The earliest snapshot version [in the repository](http://repo.spring.io/libs-snapshot/org/springframework/restdocs/spring-restdocs/0.1.0.BUILD-SNAPSHOT/) is `0.1.0.BUILD-20150429.090949-42` so, wherever the old version is coming from, I don't think it's repo.spring.io. Are you behind a proxy? Perhaps it's cached a stale version? Running Maven or Gradle with debug output enabled should show where the download's coming from.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/102027714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/102512776", "body": "Thanks for the pointer to the test that was causing the problem. This should now be fixed in the latest snapshots.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/102512776/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/103127018", "body": "Thanks for the suggestion.\n\nIf a change is made here, then it should be made in such a way as to make all of the generated tables configurable, not just those for request and response fields. Basically, anything that uses `TableWriter`. At the time of writing that's links, request and response fields, and query parameters.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/103127018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/106944097", "body": "A field being optional only governs whether or not the test fails if it is documented but missing from the payload. For now at least, you should use the description if you want to document a field's optionality.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/106944097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/108098915", "body": "@juicegit Take a look at #70. It's (somewhat) related to this.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/108098915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/110338963", "body": "Have you looked at using a `LinkExtractor` on the response from the `MockMvc` call? It gives you a `Map` of links keyed by `href`:\n\n``` java\nMockHttpServletResponse response = mockMvc.perform(get(\"/\")).andReturn()\n        .getResponse();\nLinkExtractor linkExtractor = LinkExtractors.extractorForContentType(response\n        .getContentType());\nMap<String, List<Link>> links = linkExtractor.extractLinks(response);\n```\n\nYou would then be free to write out the links in whatever format you need.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/110338963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/110340315", "body": "Sorry for the slightly delayed response; I've just got back from paternity leave.\n\nMy assumption thus far has been that headers are something that should be used consistently across an entire API and, therefore, should only be documented once. For example, this is the approach that GitHub have taken, with various HTTP headers being documented in the [overview section of their documentation](https://developer.github.com/v3/#overview).\n\nThat said, even if it'll only be used once in the documentation, having support for producing a table of headers where you can be sure that the header names match those consumed and produced by the service is probably still of value.\n\nIf you'd like to create a PR I'd be more than happy to accept the contribution.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/110340315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/110769072", "body": "Thanks. Have you [signed the CLA](https://github.com/spring-projects/spring-restdocs/blob/master/CONTRIBUTING.md#sign-the-contributor-license-agreement)?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/110769072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/112786321", "body": "Merged. Thanks again for the PR.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/112786321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/114060077", "body": "@andreasevers Sorry, I forgot to mention you in my comment above\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/114060077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/114061146", "body": "Thanks for the suggestion, @vicmosin. This issue is somewhat related to #70 and should probably be tackled at the same time.\n\nIn addition to making the column widths configurable, I think there's room to improve the defaults. I've opened #76 to track that.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/114061146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/114074293", "body": "Great, thanks. I'll look forward to the showcase.\n\nI'm going to close this for now. If the `LinkxExtractor`-based approach doesn't work out, we can re-open it and figure out an alternative.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/114074293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/114400710", "body": "Nice idea. I'm not aware of anyone having looked at this already. A PR would be great, thank you.\n\nHave you thought about what the API would look like for specifying the title? The snippets that are generated by default (`curl-request`, `http-request`, and `http-response`) will present a bit of a challenge as there's no obvious place to supply the titles.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/114400710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/114417553", "body": "Spring REST docs doesn't really understand the format of a response payload so it has no good way of enforcing a limit. Instead, I'd use a custom response post-processor. Something like this:\n\n``` java\n@Test\npublic void test() {\n    this.mockMvc.perform(get(\"/\").accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isOk())\n            .andDo(modifyResponseTo(limitItems()).andDocument(\"post-processed\"));\n}\n\nprivate ResponsePostProcessor limitItems() {\n    return new ContentModifyingReponsePostProcessor() {\n\n        @Override\n        public String modifyContent(String originalContent) {\n            // Manipulate the content as required\n            return modifiedContent;\n        }\n    };\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/114417553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/114434053", "body": "I've looked into this some more, and I no longer think it's something that Spring REST Docs needs to support via its API. Asciidoctor will already let you do this and I don't want to reinvent the wheel.\n\nYou can configure the widths of the columns when you include a snippet like so:\n\n```\n[cols=\"1,4\"]\ninclude::{snippets}/error-example/response-fields.adoc[]\n```\n\nThis will split the width of the table so that column 1 uses 20% of the width and column 2 uses 80%.\n\nIt's probably worth describing this in the reference docs.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/114434053/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/114434608", "body": "Closing in favour of documenting how to specify the column widths when a snippet is included (see #75).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/114434608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/114439911", "body": "Reopening to track the update to the reference documentation\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/114439911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/114472968", "body": "It's just occurred to me that you can already do this thanks to Asciidoctor's ability to include portions of a file. You can include the start of the snippet, set the title, and then include the rest of the snippet:\n\n```\ninclude::{snippets}/error-example/http-response.adoc[lines=1..2]\n.A title for the code block\ninclude::{snippets}/error-example/http-response.adoc[lines=2..-1]\n```\n\nAdmittedly, this is rather clunky but it does address the problem of providing a title for the snippets that are generated by default.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/114472968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/115181727", "body": "@kellen Thanks for opening the issue, and apologies for the delayed response. @mhuffman-r7 This is the right place for your comments. Thanks for adding to the discussion.\n\nMy approach thus far has been to deliberately limit the visibility and extensibility of classes. That's not because I don't want the library to be extensible, but because I want it to be extensible in the right way and in the right places. The feedback above is vital to doing that.\n\nPull requests for improving the extensibility would definitely be welcome, but I'd like to have the general approach to extensibility nailed down before people spend time on changes the may be going in the wrong direction. I'd like to understand the need for some of the extensibility improvements suggested above. To that end, here's some questions and comments on what's been suggested thus far:\n\n> I want to be able to add LinkDescriptors, FieldDescriptors, and ParameterDescriptors in several steps\n\n@kellen What do you mean by \"in several steps\"? Perhaps you can provide a concrete example of what you'd like to be able to do?\n\n> I want to be able to override already-added descriptors by name\n\n@kellen I don't understand the need for this. There aren't any descriptors added by default. Why are you adding them, if it means that they then need to be overridden?\n\n> I don't want AsciidoctorWriter to write a $ before bash command since this makes copy-pasting the command difficult.\n\nAnother way to address this would be to provide a configuration option for the prefix.\n\n> I want CurlDocumentation to use a bash variable instead of the hostname so that a user of the documentation can export HOST=foo.bar and then curl \"${HOST}/api/\"\n\nThis could, perhaps, also be addressed by a RequestPostProcessor abstraction that mirrors what's already in place for responses.\n\n> Custom output file resolver\n\nThe intention has always been for the output to be pluggable as I wanted to support different output formats. That rather dropped off the radar, unfortunately, when it became apparent that Asciidoctor was pretty much the only option that had the ability to import snippets into a document.\n\nI think this is a good suggestion, and it also seems to get to the crux of the current difficulties. It's tempting to add everything that should be configurable/pluggable to `RestDocumentationContext`, but I think that could get rather messy, rather quickly. It also already makes testing a bit of a pain and it would be nice not to add to that. In short, this one's going to take some thought.\n\n> Custom result handlers\n\nThis one seems pretty straightforward. Adding the current default handlers in a protected method that a subclass can override would seem like a good, low-impact solution. You can then call super and augment the default handlers, or avoid calling super and take complete control.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/115181727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/115236143", "body": "@ne-kellen Got it. Thanks.\n\nOne way to tackle this without requiring you to extend anything would be for `withLinks` to be additive. `LinkSnippetResultHandler` already stores the descriptors in a `Map` keyed by `rel`. They're added to the map in the order that they're provided so the last descriptor for a particular `rel` will override any that have come before it.\n\nI think you can do this today, albeit in a rather clunky manner, by combining the default links with the custom links yourself and then passing the combined array to a single call to `withLinks`.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/115236143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/116522255", "body": "Can you share your fork somewhere please? It's hard to comment or make suggestions without seeing what you've done.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/116522255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/119233788", "body": "I would guess it's failing when it tries to resolve the field's type. Did you provide one? Like this, for example:\n\n```\nfieldWithPath(\"a.b\").description(\"Foo\").optional().type(FieldType.STRING)\n```\n\nIf this is the case, the error message could certainly be more helpful.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/119233788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/120116229", "body": "http://docs.spring.io/spring-restdocs/docs/1.0.0.M1/reference/html5/#_removing_headers\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/120116229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/120231776", "body": "No, not at the moment. Please open a separate issue\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/120231776/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/120462287", "body": "Reopening to remind me to improve the error message\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/120462287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/121710425", "body": "It's not possible at the moment, but you're not the first to ask. /cc @mminella\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/121710425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/121888541", "body": "@awendland @mminella I've been thinking about this a bit and would welcome your input. I'm struggling at the moment to figure out what the API would look like. The problem is that for it to be clear that path parameters were being used, you'd have to do something like this:\n\n``` java\nmockMvc.perform(get(\"/{foo}/{bar}\", \"one\", \"two\"))\n```\n\nThe `get` call creates a `MockHttpServletRequestBuilder`, but its constructor immediately turns the url template and parameters into an instance of `UriComponents`. At this point the information in the template (that there are two parameters named foo and bar) is lost so there's no way for Spring REST Docs to know what should be documented.\n\nIf we can figure out what we'd like the Spring REST Docs API to look like, perhaps we can then work with @rstoyanchev to make whatever changes may be required in MockMvc.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/121888541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122057125", "body": "@marceloverdijk Are you using M1? If so, could you give a snapshot a try? I think https://github.com/spring-projects/spring-restdocs/commit/833a01d6a5de8b5b343de23697df04df0099057a may have already taken care of this\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122057125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122359597", "body": "That looks right to me. There are tests that cover this so, without more information, I can't diagnose the problem. Can you please share a sample project that shows pretty printing not working?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122359597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122828745", "body": "@marceloverdijk There's no template engine at the moment, largely because I want to minimise dependencies as much as possible. It's an interesting idea, though. Thank you.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122828745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122836514", "body": "What you tried doesn't work as the `ResponseModifier` that's returned from `modifyResponseTo` is lost. You're never calling `andDocument` on it, so no documentation of the modified response is performed.\n\nAs things stand, this will work:\n\n``` java\n@Before\npublic void createMockMvc() {\n    this.mockMvc = MockMvcBuilders.webAppContextSetup(this.context)\n            .apply(new RestDocumentationConfigurer()).build();\n    this.prettyPrint = modifyResponseTo(prettyPrintContent());\n}\n\n@Test\npublic void testOne() throws Exception {\n    this.mockMvc.perform(get(\"/\")).andDo(\n            this.prettyPrint.andDocument(\"first-example\"));\n}\n\n@Test\npublic void testTwo() throws Exception {\n    this.mockMvc.perform(get(\"/\")).andDo(\n            this.prettyPrint.andDocument(\"second-example\"));\n}\n```\n\nYou can take things a step further by using a parameterised output directory:\n\n``` java\n@Before\npublic void createMockMvc() {\n    this.mockMvc = MockMvcBuilders\n            .webAppContextSetup(this.context)\n            .apply(new RestDocumentationConfigurer())\n            .alwaysDo(\n                    modifyResponseTo(prettyPrintContent()).andDocument(\n                            \"{method-name}\")).build();\n}\n\n@Test\npublic void testOne() throws Exception {\n    this.mockMvc.perform(get(\"/\"));\n}\n\n@Test\npublic void testTwo() throws Exception {\n    this.mockMvc.perform(get(\"/\"));\n}\n```\n\nIf, in some of the tests, you want to do some more documentation, you can save a reference to the `RestDocumentationResultHandler` created in `@Before` and then using it in the tests:\n\n``` java\n@Before\npublic void createMockMvc() {\n    this.document = modifyResponseTo(prettyPrintContent()).andDocument(\n            \"{method-name}\");\n    this.mockMvc = MockMvcBuilders.webAppContextSetup(this.context)\n            .apply(new RestDocumentationConfigurer())\n            .alwaysDo(this.documentationHandler).build();\n}\n\n@Test\npublic void testOne() throws Exception {\n    this.mockMvc.perform(get(\"/\")).andDo(\n            this.document.withLinks(linkWithRel(\"rel\").description(\"bar\")));\n}\n\n@Test\npublic void testTwo() throws Exception {\n    this.mockMvc.perform(get(\"/\"));\n}\n```\n\nThere's very little (no?) mention of this in the documentation so we can use this issue to address that.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122836514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122840965", "body": "I like the idea, but I think it's outside of this project's scope.\n\nSpring REST Docs deliberately tries to avoid doing anything that would limit your options when it comes laying out and formatting the documentation. That's why it generates snippets that you can then include in your Asciidoc. You're free to structure that Asciidoc as you see fit and also have a huge amount of control over the layout/structure/etc of the HTML that's generated. Take a look at Asciidoctor's [support for custom themes](http://asciidoctor.org/docs/user-manual/#custom-themes). There may already be one that does what you want.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122840965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122842592", "body": "There isn't, because I'm not sure that it's necessary. When you're writing the tests, you have complete control over the request body so you can format it before making the request. For example, if you're using a Jackson `ObjectMapper`, you can enable its pretty printing like this:\n\n``` java\nobjectMapper.configure(SerializationFeature.INDENT_OUTPUT, true);\n```\n\nYou'd only need Spring REST docs to do the formatting in a post-processor if, for some reason, your service can't consume pretty-printed content. That doesn't seem likely, and I wouldn't want to encourage people to write such services... That said, you might be interested in #84. It talks about hiding request headers from the documentation. Those headers may be required by the service but, for whatever reason, you don't want them to appear in a particular snippet. It's likely that Spring REST Docs will support something along those lines in the future.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122842592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122843420", "body": "@marceloverdijk Agreed. It'd probably provide an answer for quite a few of the open issues. I plan to look into doing something optional, i.e. a template engine can be used if one's on the classpath, otherwise it falls back to the current behaviour.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122843420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122844508", "body": "@awendland @mminella Thanks for the suggestions\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122844508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122845678", "body": "Just for the record, the `http-request` snippet is intended to be an actual valid HTTP/1.1 request. While what you've suggested may read more nicely, it wouldn't be a valid HTTP/1.1 request. Such a request must include the `Host` header and it also must not include any scheme, host, port etc information in the request path.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122845678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122847186", "body": "> I think this is a bad practice\n\nI disagree that it's bad practice and think it's more a matter of personal style/preference.\n\nIn the early days, Spring REST Docs had a (very basic) Gradle plugin and expected tests that produced documentation to be in `src/documentation/java`. This [was removed](https://github.com/spring-projects/spring-restdocs/commit/6ec522069a2dca8c5ae95a11839afe8636ca09db) when the Maven examples were added as I wanted things to be as similar as possible, irrespective of build system.\n\nIt's fairly straightforward to set up a documentation-specific source set. We can use this issue to document how to do it for Gradle users.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122847186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/123711465", "body": "Spring REST Docs isn't involved in deciding which profiles should be active so the problem must lie elsewhere. Perhaps you could post on Stackoverflow with an example that reproduces the problem?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/123711465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/123734281", "body": "You should use `[]` as the path. I've added in test in b1a6840 to verify that it works.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/123734281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/123749957", "body": "If the array is empty you'll have to mark the field as optional and explicitly provide a type for its contents. For example:\n\n``` java\n.withResponseFields(\n        fieldWithPath(\"[]\").description(\"List of colors\").optional().type(FieldType.STRING));\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/123749957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125164151", "body": "Thanks very much. Merged with a few amendments.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125164151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125239484", "body": "That's intentional. `optional` just tells Spring REST docs whether or not to fail if the field's not present in the request or the response. \n\nIncluding an `optional` column in the request or response field's snippet is covered by #70 (which I'm working on at the moment).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125239484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125508666", "body": "I don't think it makes sense for this to be handled in the same way as field types. Field types have a known set of possibilities (as defined by the JSON specification). Query parameters can be anything that you can represent as a string. In other words, the type would have to be free-form, at which point it might as well be part of the description. For those that want to do so, using a separate column to describe the type is another variant of #70.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125508666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125546107", "body": "This is now possible using a custom template and a `title` attribute. Here's an example for `curl-request`:\n\n##### Custom curl-request.snippet:\n\n```\n[source,bash]\n.{{title}}\n----\n$ curl {{arguments}}\n----\n```\n\n##### Test code:\n\n``` java\nmockMvc.perform(get(\"/\")).andDo(\n                document(\"index\").withCurlRequest(\n                        attributes(key(\"title\").value(\"Access the index using curl\"))));\n```\n\nPlease see the [updated reference documentation](http://docs.spring.io/spring-restdocs/docs/1.0.x-SNAPSHOT/reference/html5/#documenting-your-api-customizing) for further information.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125546107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125546412", "body": "Custom snippets can now be used to relabel and reorder table columns. Custom snippets coupled with custom attributes on the descriptors can now be used to add arbitrary columns. Please see the [updated reference documentation](http://docs.spring.io/spring-restdocs/docs/1.0.x-SNAPSHOT/reference/html5/#documenting-your-api-customizing) for further information.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125546412/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125548125", "body": "The latest snapshots are now using JMustache and templates to produce the snippets. This takes care of number 3 from the [original list](https://github.com/spring-projects/spring-restdocs/issues/73#issue-84514677) of examples as you can now provide your own `curl-request.snippet` template that removes the `$` prefix.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125548125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125989149", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125989149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125991423", "body": "The key difference is that a field being optional or not means something to Spring REST Docs. There's no concept, as far as Spring REST Docs is concerned, of path parameters being optional. If/when path parameters can be optional then it would certainly make sense for that information to be added to the model automatically.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125991423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/126406024", "body": "@mhuffman-r7 @kellen @marceloverdijk (and, of course, anyone else who's interested): the latest snapshots use a `WriterResolver` to determine the `Writer` that should be used to write a snippet. You can plug in your own implementation when you're building the `MockMvc` instance:\n\n``` java\nthis.mockMvc = MockMvcBuilders.webAppContextSetup(this.context)\n        .apply(documentationConfiguration()\n                .writerResolver(new CustomWriterResolver()))\n        .build();\n```\n\nI've also pushed up [a branch](https://github.com/spring-projects/spring-restdocs/tree/api-refactoring) that reworks the API. One of the main changes is that you can now include any implementation of `Snippet` when calling `document` as they're passed in as varags to the `document` call rather than being provided by the various `withXXX` methods:\n\n``` java\nthis.mockMvc.perform(get(\"/\"))\n            .andExpect(status().isOk())\n            .andDo(document(\"index-example\",\n                    links(\n                            linkWithRel(\"notes\").description(\"\u2026\"),\n                            linkWithRel(\"tags\").description(\"\u2026\")),\n                    responseFields(\n                            fieldWithPath(\"_links\").description(\"\u2026\")),\n                    yourCustomSnippet()));\n```\n\nAlso, you now have complete control over the default snippets:\n\n``` java\nthis.mockMvc = MockMvcBuilders.webAppContextSetup(this.context)\n        .apply(documentationConfiguration().snippets()\n            .withDefaults(curlRequest(), yourCustomSnippet()))                      \n        .build();\n```\n\nThese are breaking changes, so they're not being made lightly (and I'm not yet 100% that they will be made). That said, I think they're a significant improvement over what was in M1 but I'd like feedback from others before proceeding. If you have some time, please check out [the branch](https://github.com/spring-projects/spring-restdocs/tree/api-refactoring) and let me know what you think.\n\nPlease note that I've yet to open up the constructors and accessors on the various `Snippet` implementations as requested above by @kellen but it's on the cards.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/126406024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/129367266", "body": "> Another scenario for the same shall be to hide basic auth details from curl snippets of secured endpoints.\n\nI think you might be able to avoid this by setting up your test to run as a particular user, so you wouldn't need to provide the credentials with the request. You could use [Spring Security Test's `@WithMockUser`](http://docs.spring.io/spring-security/site/docs/4.0.x/reference/htmlsingle/#test-method-withmockuser), for example.\n\n> Also have a wish if there would be something by which we can mask certain fields in responses\n\nHave you seen `replacePattern` on `ResponsePostProcessors`?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/129367266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/129449716", "body": "> Also I had another point if you can add more meanigful types to the FieldTypes enum for say LINKS ,href etc .. will enrich the docs as now they just populate as dumb Objects .\n\nThis is going way off topic for this issue, but `FieldType` is an enumeration of the different types in a JSON payload and, as JSON doesn't know anything about links, hrefs etc, it's not appropriate to include them in the enum\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/129449716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/130210500", "body": "> What if what I want is to mask only values and not the field keys in the json ?\n\nIt'll only replace whatever's matched by the regular expression. Are you saying that you can't write a regular expression that will only match the values?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/130210500/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/130219708", "body": "Hi, @johanhaleby. I'm certainly not against making Spring Rest Docs work with REST Assured, and it's something that others are interested in too (see #80). I'm only somewhat familiar with REST Assured so I probably need to spend some time familiarising myself with it and getting a feel for where Spring REST Docs needs to be decoupled from MockMvc.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/130219708/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/130811107", "body": "Any opinion on where the unmodified URL should go? A few options to get the ball rolling:\n- Table title in path-parameters.adoc\n- Somewhere else in path-parameters.adoc\n- In a separate snippet\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/130811107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/130814514", "body": "Thanks for taking a shot at it. I'm not surprised about the test \u2013 after the move to using a template engine, I think the tests might be a bit too clever for their own good\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/130814514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/130815871", "body": "There's an interesting suggestion [here](https://github.com/spring-projects/spring-restdocs/issues/86#issuecomment-122049672) that I'd missed previously. It makes a good case for producing a separate snippet with the path. It doesn't have to be either/or, though.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/130815871/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/131185043", "body": "Multipart requests are already supported by the curl and HTTP request snippets (see https://github.com/spring-projects/spring-restdocs/issues/48). What's missing is support for documenting parameters.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/131185043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/131216982", "body": "A better API is needed for this, but, somewhat bizarrely, you can already document the parameters using `queryParameters`:\n\n``` java\nmockMvc.perform(fileUpload(\"/batch/files\")\n        .file(\"foo\", new byte[] { 1, 2, 3, 4 })\n        .param(\"path\", \"/foo\")\n        .accept(MediaType.APPLICATION_JSON))\n        .andDo(document(\"foo\",\n                queryParameters(\n                        parameterWithName(\"path\").description(\"description\"))));\n}\n```\n\nThe reason is that the query parameters snippet looks in the request's parameters map. That's where all parameters end up, whether they're specified using `param` or directly in the url as a query string.\n\nMy current thinking is that the query parameters snippet should be renamed to become the request parameters snippet.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/131216982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/132113636", "body": "Closing due to lack of response. Please comment if you're still having trouble and we can re-open the issue.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/132113636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/132165618", "body": "A brief discussion with @olivergierke moved me away from providing a separate snippet. The request's path or it's HTTP method and path is of limited use as there's no guarantee that it will uniquely identify a particular RESTful resource. Instead, the path parameters snippet has been enhanced to include the path as the title of the table.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/132165618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/135560822", "body": "Work in progress is [available in this branch](https://github.com/spring-projects/spring-restdocs/tree/gh-108)\n\n/cc @johanhaleby @sg-ad\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/135560822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/137545485", "body": "@johanhaleby I've just reworked things so that all of the MockMvc stuff is now in a separate module, spring-restdocs-mockmvc. Having a look at what that's doing is, hopefully, a reasonable starting point for you. My hope is to start working on a spring-rest docs-restassured module next week as I'd like to verify that the new abstraction holds up. Your help with that would be much appreciated.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/137545485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/137693255", "body": "Good idea. Note that the API has changed in the latest snapshots, hopefully for the better. Feedback most welcome.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/137693255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138303246", "body": "The `Operation` abstraction appears to be holding up. I have the very beginnings of REST Assured support working in this branch: https://github.com/spring-projects/spring-restdocs/tree/rest-assured. It successfully produces the curl request snippet for the simplest possible request.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138303246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138497789", "body": "Closing in favour of #102.\n\n@sg-ad I'd still very much like to see the work that you did as it could provide a big jumpstart for REST Assured support. Please share it when you're able to do so.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138497789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138524329", "body": "The curl request snippet will only include a `Content-Length` header if you've set one in the test that generates it. Is there something about your test that means that you have to set the header even though you don't want it to appear in the snippet?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138524329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138567591", "body": "The original description of this problem doesn't really apply now following the refactoring of the API.\n\nThe relevant snippet classes now all provide getters that provide access to mutable Map or List of their descriptors. This means that it's now possible to add descriptors after a snippet's been created. If a more succinct API is required, the relevant snippet class should be subclassed to provide a custom API that's well-suited to the specific use case.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138567591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138702952", "body": "Thanks, Rob. That's a deliberate, and temporary, situation while I'm waiting for Trevor to update some symlinks.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138702952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138706895", "body": "I don't think security's unique in this regard. There are lots of other cross-cutting concerns in a RESTful API:\n- Use of PUT vs PATCH\n- Rate limiting\n- Links (hypermedia)\n- Paging\n- Use of HTTP status codes\n- Errors\n\nThe samples touch on some of these by [describing them in an overview section](https://github.com/spring-projects/spring-restdocs/blob/master/samples/rest-notes-spring-hateoas/src/main/asciidoc/api-guide.adoc#overview). I could add security to one of the existing samples but I'm not convinced that it deserves special treatment.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138706895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138851849", "body": "Thanks for the suggestion.\n\nI thought about this when I implemented `{method-name}` and couldn't convince myself that it was useful enough to be worth it. I kept coming back to just using the class name directly in your `@Before` method. For example:\n\n``` java\n@Before\npublic void setup() {\n     this.document = document(\"product-api-tests/{method-name}\", \n             preprocessRequest(removeHeaders(\"Foo\")),\n             preprocessResponse(prettyPrint()));\n     this.mockMvc = MockMvcBuilders\n             .webAppContextSetup(this.context)\n             .alwaysDo(this.document) \n             .build();\n}\n```\n\nThe only situations that I could think of where this would not be ideal were:\n- You want to be able to copy and paste the `setup` method\n- You want to use an abstract base class for the tests that'll have the `setup` method in it\n\nDoes you use case fall into one of those two, or have I overlooked something?\n\nIt's still possible to do what you want, you just have to write a bit more code at the moment. In 1.0.0.RC1 you can use a `StandardWriterResolver` with a custom `PlaceholderResolver`:\n\n``` java\nMockMvc mockMvc = MockMvcBuilders\n        .webAppContextSetup(this.context)\n        .apply(documentationConfiguration(this.restDocumentation).writerResolver(\n                new StandardWriterResolver(new PlaceholderResolver() {\n                    @Override\n                    public String resolvePlaceholder(String placeholderName) {\n                        // \u2026\n                    }\n\n                }))).build();\n```\n\nUnfortunately the default `PlaceholderResolver`, `RestDocumentationContextPlaceholderResolver`, isn't as extensible as it could be. I've just fixed that in 5dc28b9 so you can subclass it and override `resolvePlaceholder`.\n\nAll that said, I'm not against adding support for `{ClassName}`, `{class-name}`, and `{class_name}` if people would find it generally useful.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138851849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138856549", "body": "That was intentional. Supporting both build systems in the same project was proving to be more trouble than it was worth. See the `rest-notes-spring-hateoas` sample for a Gradle-based build.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138856549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138866163", "body": "Everything should be available from http://docs.spring.io/spring-restdocs/docs now. The blog post and project page have been updated accordingly.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138866163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138869135", "body": "One of the key principles of Spring REST Docs is that it doesn't force you to document your API in a particular way. You can take the generated snippets and use them however you see fit. Thus far, I've avoided offering any recommendations or guidance on how to document an API in the reference manual as I don't think that's the right place for it. In my documenting RESTful API's presentation (linked to in the README) I offer some opinions on what makes good RESTful API documentation. That presentation in written form could prove useful, but I'm not sure that it necessarily belongs in this project.\n\n> I personally find that these cross cutting concerns are the most difficult things to document. This is particularly true when the result of one request needs to be included in most of (if not all) of the other requests.\n> \n> A concrete example with security is that when I authenticate I get back some token and that token needs to be included in every request. How is that documented?\n\nI like the way that GitHub have handled this in the [authentication section](https://developer.github.com/v3/#authentication) of their API documentation. If asked, I would advise people to do something similar.\n\n> What is interesting to me is that despite being in the overview, the HTTP method is restated in the documentation.\n\nThat's just a choice I made in the sample. The section in the overview is there to make two points:\n- HTTP verbs are used in a standard way\n- The use of PATCH vs PUT for updates\n\nThe verb's then mentioned in the documentation for each resource as a reminder. If you don't like that repetition, then Spring REST Docs doesn't force you to have it.\n\n> Will the documentation state that credentials need to be included in the request? Will it link to how to obtain the credentials?\n\nAgain, that's something that's totally up to you.\n\n> At minimum adding samples like this would help improve the implementation\n\nI've opened #120 to improve the curl snippet. Thanks for the suggestion.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138869135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138871942", "body": "Merged into master. Thank you.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138871942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/comments/9495385", "body": "I'm trying to keep the dependencies as minimal as possible at the moment but, should that change, reusing this Spring HATEOAS code definitely makes sense. Thanks for the pointer.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/comments/9495385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/comments/12423051", "body": "Indeed it should. Thank you.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/comments/12423051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/25352759", "body": "The documentation shouldn't include the name of a Java type \u2013 the fact that the service is written in Java is an implementation detail. Assuming a JSON-based format (which is entirely reasonable) the type can be one of `number`, `string`, `boolean`, `array`, or `object`.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/25352759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/25353036", "body": "I don't think this code belongs in the hypermedia package. Any service will have fields in its requests and responses, not just those that are using hypermedia.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/25353036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/25353573", "body": "This feels like overkill to me. The `LinkExtractor` abstraction was created to pull links out of a response into a common format. I'm not convinced that's necessary for the fields in a request/response to be extracted in a similar way. I don't think there's any need for them to be in a common format as the format that they are in is the format that needs to be documented.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/25353573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/25353784", "body": "I could be convinced that `_links` doesn't need to be documented as it could be documented in the same for every resource (a pointer to the links documentation for the resource). However, `_embedded` will vary and, therefore, I suspect that people will want to document it.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/25353784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/25354206", "body": "I wonder if this should be a path rather just a name? It would enable the documentation of more complex nested structures.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/25354206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/28671919", "body": "Please do not use wildcard imports\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/28671919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/28671984", "body": "Please do not use wildcard imports\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/28671984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/28672070", "body": "As mentioned in the main comments on the PR, I think this should use `MediaType.parseMediaType(contentType)`\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/28672070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/35545311", "body": "Thanks. I caught that one as part of the merge. See: https://github.com/spring-projects/spring-restdocs/commit/6f4fe4ea644d77d66985c249102c8abd3d44c59d#diff-1c885f4a0e9ffe753bc7f61ba4d69f3bR4\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/35545311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/55210417", "body": "All of the authors of the original `CurlRequestSnippet` should also be credited here\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/55210417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/55210479", "body": "`snippetName` and `attributes` do not need to be `final`\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/55210479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/68265228", "body": "I wonder if this should fail fast here rather than failing later when a documented field in the part isn't found?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/68265228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/82603545", "body": "This constructor needs to be kept, both to allow the output directory to be overridden and to maintain backwards compatibility.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/82603545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/82603676", "body": "This constructor needs to remain public, both to allow the output directory to be overridden and to maintain backwards compatibility.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/82603676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/82604005", "body": "While this class is deprecated (and might be removed before 1.2 is released), for the time being at least this constructor needs to be kept, both to allow the output directory to be overridden and to maintain backwards compatibility.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/82604005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/82604303", "body": "This is OS-specific so it doesn't belong in the repository's `.gitignore`. It should go in your own [global `.gitignore`](https://help.github.com/articles/ignoring-files/#create-a-global-gitignore) instead.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/82604303/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/82604390", "body": "Why is this suppression necessary? \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/82604390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/82604471", "body": "This looks like a duplicate of line 7.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/82604471/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/82604670", "body": "If this copy is necessary, I'd rather do it as part of the test than in the Gradle build so that it happens when running things in an IDE too.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/82604670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/82604856", "body": "`restdocs` is too generic as we may want to add more macros in the future. I think the macro should be called `snippet`. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/82604856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/82605024", "body": "I don't think this class should be named as if it's specific to a particular macro. IMO, `RestDocsExtensionRegistry` is a better name.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/82605024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/82605746", "body": "I don't like the use of a system property.\n\nREST Docs used one in the past but it didn't work well when running individual tests in an IDE. Typically, the system property is only set in `build.gradle` or `pom.xml` so you ended up with different configuration.\n\nFor now at least, I'm happy for people who don't want to use the conventional locations to have to override the location using the constructor argument to `JUnitRestDocumentation` or `ManualRestDocumentation` and continuing to use `include::`.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/82605746/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/103442660", "body": "REST Docs' code style is to only use `final` when it's required", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/103442660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/103443065", "body": "I think this should be called `OperationBlockMacro` and the file itself should be called `operation_block_macro.rb`", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/103443065/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/103443549", "body": "I think we could use `parent.level` to figure this out automatically", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/103443549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/103443932", "body": "I don't think the macro should be called `srd` as that would seem to imply the REST Docs will only ever have a single block macro. There doesn't seem to be a tradition of trying to namespace macro names in Asciidoctor so I'm tempted to go with `operation` instead.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/103443932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/103444352", "body": "I'm intrigued by this test. What was the reasoning behind adding nothing? I would expect this to either produce an error or to include all of the snippets for a particular operation. My preference is for the latter but I'm not set on that.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/103444352/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/103445585", "body": "I think using [`fetch`](https://ruby-doc.org/core-1.9.3/Hash.html#method-i-fetch) would make this read a bit better:\r\n\r\n```ruby\r\nattrs.fetch('snippets', '').split(',')\r\n```", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/103445585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/103446453", "body": "I think using `File.join` and some string interpolation would improve the readability here. Something like:\r\n\r\n```ruby\r\nFile.join(params[:snippet_dir], params[:operation], \"#{snippet}.adoc\")\r\n```", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/103446453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/103446568", "body": "I'd use string interpolation here too", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/103446568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/103446589", "body": "I'd use string interpolation here too", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/103446589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/103446731", "body": "This should be named `\u2026Tests` to match the other tests classes", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/103446731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/103446908", "body": "My preference would be to store the expected content in files in `src/test/resources`", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/103446908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/101971692", "body": "Could you make this an interface, please? There could be a single implementation provided out of the box. Something like `ConcatenatingCommandFormatter` that takes a separator as a constructor argument.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/101971692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104417098", "body": "There should be an overloaded variant of this method that takes a command formatter and attributes", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104417098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104417145", "body": "There should be an overloaded variant of this method that takes a command formatter and attributes", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104417145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104417231", "body": "Looks like this is only used in the tests. I don't think it's needed.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104417231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104417353", "body": "The contract shouldn't mention the use of a separator. The job of the formatter is simply to format a number of elements into a single string.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104417353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104417524", "body": "The method description shouldn't mention concatenation as that can just be an implementation detail. The contract of format is to take a number of elements and turn them into a single string.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104417524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104417716", "body": "This constructor should call `super` with all the other constructors calling this one", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104417716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104417874", "body": "This should be `final` with its initialisation happening in the constructor", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104417874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104417975", "body": "This should be final with its initialisation happening in the constructor", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104417975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104418060", "body": "This constructor should call super with all the other constructors calling this one", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104418060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104418503", "body": "I'd prefer that the existing tests were largely unaffected by the introduction of the `CommandFormatter`. That could be done by leaving the content assertions as they were, but creating the snippet with a single-line formatter.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104418503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104419005", "body": "This constructor should be deprecated and a new constructor that takes a `CommandFormatter` introduced", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104419005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104419091", "body": "This constructor should be deprecated and a new constructor that takes a CommandFormatter introduced", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104419091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104419441", "body": "You could use `CollectionUtils.isEmpty()` here", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104419441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104419509", "body": "I think I'd prefer it if this were package-private", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104419509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104419685", "body": "I think this static method would be better on `CliDocumentation`. I'd be tempted to call it `multiLine` or `multiLineFormat`.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104419685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104419738", "body": "I think this static method would be better on `CliDocumentation`. I'd be tempted to call it `singleLine` or `singleLineFormat`.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104419738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104419794", "body": "I'm not sure we need this", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104419794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104420005", "body": "If the static methods are moved, this test could be simplified to just check that no elements results in an empty string. It would be good to have a similar test for `null` too.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104420005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104420104", "body": "I think this could be simplified to just test against a single formatter with whatever separator too", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104420104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104420146", "body": "I think this could be simplified to just test against a single formatter with whatever separator too", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104420146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104420261", "body": "I'd prefer that the existing tests were largely unaffected by the introduction of the CommandFormatter. That could be done by leaving the content assertions as they were, but creating the snippet with a single-line formatter.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104420261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104420483", "body": "It's good to have tests for the curl snippet with different command formatters, but there's nothing MockMvc-specific about it so I don't think they belong here.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104420483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104420595", "body": "It's good to have tests for the HTTPie snippet with different command formatters, but there's nothing MockMvc-specific about it so I don't think they belong here.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104420595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104420674", "body": "It's good to have tests for the curl snippet with different command formatters, but there's nothing REST Assured-specific about it so I don't think they belong here.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104420674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104761185", "body": "I was torn on this earlier when I was reviewing the change but, while annoying, I think it's probably the right thing to do. It's what I was getting at when I said \"but creating the snippet with a single-line formatter\" in my comment on the tests below.\r\n\r\nMy motivation was that I wanted the opinion on what the default formatter should be to be in a single place. `CliDocumentation` seemed to make sense as it can then pass the default formatter into `CurlRequestSnippet` and `HttpieRequestSnippet`. \r\n\r\nI was also envisaging a further change where the default moves to `SnippetConfigurer` and it'll apply it to the default `CurlRequestSnippet` and `HttpieRequestSnippet` that it creates. The would lead to the deprecation of `curlRequest()` and `httpieRequest()` on `CliDocumentation` as well.\r\n\r\nAs I said, I was torn on this so if you don't think the reasoning above is sound I'd really like to hear any counter arguments.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104761185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/105258119", "body": "Sounds good to me. Thanks very much.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/105258119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "bsb319": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/473", "title": "responseFields beneathPath does not work with arrays", "body": "**Using:**\r\n```\r\norg.springframework.restdocs:spring-restdocs-core:2.0.0.RELEASE\r\norg.springframework.restdocs:spring-restdocs-mockmvc:2.0.0.RELEASE\r\n```\r\n\r\n**Error:**\r\n```\r\norg.springframework.restdocs.snippet.SnippetException: The following parts of the payload were not documented:\r\n[ {\r\n  \"details\" : \"test details\",\r\n  \"name\" : \"testName\"\r\n} ]\r\nFields with the following paths were not found in the payload: [details, name]\r\n```\r\n\r\n**Test Code that causes error:**\r\n```\r\nList<FieldDescriptor> responseFieldDescriptors = new ArrayList<>();\r\nresponseFieldDescriptors.add(fieldWithPath(\"details\").type(JsonFieldType.STRING).description(\"Details to display to the customer.\"));\r\nresponseFieldDescriptors.add(fieldWithPath(\"name\").type(JsonFieldType.STRING).description(\"Customer's name.\"));\r\n\r\n\r\nresultActions.andDo(\r\n        MockMvcRestDocumentation.document(\"content-example\",\r\n                preprocessRequest(prettyPrint()),\r\n                preprocessResponse(prettyPrint()),\r\n                responseFields(beneathPath(\"information.customers[]\").withSubsectionId(\"customer\"), responseFieldDescriptors)\r\n        )\r\n);\r\n```\r\n\r\n**Test Code that runs but displays unwanted \"[].\" in generated table**\r\n```\r\nList<FieldDescriptor> responseFieldDescriptors = new ArrayList<>();\r\nresponseFieldDescriptors.add(fieldWithPath(\"[].details\").type(JsonFieldType.STRING).description(\"Details to display to the customer.\"));\r\nresponseFieldDescriptors.add(fieldWithPath(\"[].name\").type(JsonFieldType.STRING).description(\"Customer's name.\"));\r\n\r\n\r\nresultActions.andDo(\r\n        MockMvcRestDocumentation.document(\"content-example\",\r\n                preprocessRequest(prettyPrint()),\r\n                preprocessResponse(prettyPrint()),\r\n                responseFields(beneathPath(\"information.customers\").withSubsectionId(\"customer\"), responseFieldDescriptors)\r\n        )\r\n);\r\n```\r\n\r\n**Sample Response:**\r\n```\r\n{\r\n    \"information\": {\r\n        \"customers\": [\r\n            \"details\": \"test details\",\r\n            \"name\": \"testName\"\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/473/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "florind": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/472", "title": "Documenting request parameters for PUT requests", "body": "I'd like to allow documenting request parameters in PUT requests. There's currently a built-in constraint to only allow documenting request parameters for GET requests (see https://github.com/spring-projects/spring-restdocs/blob/master/spring-restdocs-webtestclient/src/main/java/org/springframework/restdocs/webtestclient/WebTestClientRequestConverter.java#L86)\r\nI understand that params can be moved in the body of the request but sometimes it makes sense to structure the URL in this way.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mariusoe": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/468", "title": "Support array indices in JSON field paths", "body": "Hi,\r\n\r\nwhen using a `PayloadSubsectionExtractor` (e.g. `FieldPathPayloadSubsectionExtractor`) to extract a subsection of a JSON payload, array indices are ignored.\r\n\r\nI would assume that when a path is used like `Outer[].Nested[0].Attribute` only the first (in this example `Nested`) element or which is matching the specified index will match the given path and, thus, returned. But it extracts always all elements which results in a `PayloadHandlingException({PATH} + \" does not uniquely identify a subsection of the payload\")`. ", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fsmorygo": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/462", "title": "Modify response- and request-body snippets to have language attribute depending on `Content-Type` header", "body": "Current default snippet\r\n```\r\n[source,options=\"nowrap\"]\r\n----\r\n{{body}}\r\n----\r\n```\r\n\r\nIt's much more convenient to automatically add json attribute like this:\r\n```\r\n[source,{{language}},options=\"nowrap\"]\r\n----\r\n{{body}}\r\n----\r\n```\r\n\r\n`AbstractBodySnippet#createModel` could set `language` property in model depending on the `contentType`", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jkubrynski": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/427", "title": "Generate snippets for other technologies", "body": "It would be great if Rest Docs could generate snippets for most popular tools/libraries. Currently only cURL and httpie are supported. For Spring most natural would be probably `RestTemplate` and that's good place to start. ", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "joemccall86": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/421", "title": "Add support for using Gru to document an API", "body": "See https://agorapulse.github.io/gru/\r\n\r\nComing from solely writing Spock tests in Grails, both MockMVC and RESTAssured seem to clash stylistically. I think Gru would be a great option to allow for more terse tests to be written, especially for users in the Groovy ecosystem.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Polve": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/373", "title": "Support for Messaging controllers", "body": "Controllers using MessageMapping(s) instead of rest endpoint have very similar requirements for documentation.\r\nCould spring-restdocs be used for those controllers too?", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/373/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "victorherraiz": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/352", "title": "Support multiple type assertion", "body": "The following code produce a nice output in the type column, but It does not perform the assertion:\r\n\r\n```\r\nfieldWithPath(\"uid\").type(Arrays.asList(JsonFieldType.STRING, JsonFieldType.NULL));\r\n```\r\n\r\nIs there a better way to do it? \r\nWould you accept a pull request about this?", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/352/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "meistermeier": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/347", "title": "Provide http(s) default port method", "body": "It feels like a magic number to use `80` or `443` in the `UriConfigurer#withPort` method to suppress the port output given the right scheme.\r\n\r\nThere should be a method to set this magic number without user getting to see or having to use it like `withHttpPort` or `withHttpsPort`.\r\n\r\nI know it is a small change but I think the right way is to discuss it before opening a PR.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/419547dcdfb4f40cc074683647ca854af5b13340", "message": "Add plugin snapshot repository to Data REST sample\n\nPreviously, if the main project hadn't been installed in the local\nMaven repository (./gradlew install), rest-notes-spring-data-rest\nwould fail to build as the plugin dependency,\nspring-restdocs-asciidoctor, was not available.\n\nThis commit corrects the problem by adding\nrepo.spring.io/libs-snapshot as a plugin repository in addition to\nits existing declaration as a \"normal\" repository.\n\nFixes gh-382\nCloses gh-383"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/18b559a839681d23dbe4389b24aa5718233f8a28", "message": "Provide a block macro for including an operation's snippets\n\nSee gh-323\nCloses gh-354"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/2fb3ede3a6073f8ca702dff1098298d5eddf3261", "message": "Document that port is omitted when it matches the scheme's default\n\nCloses gh-325\nCloses gh-329"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/3ac4a1acada45cacc0a7d394edf719315f26b054", "message": "Provide a default output directory for snippets based on build tool\n\nRather than requiring an output directory to be explcitly configured,\na default is now automatically configured based on the build tool\nthat's being used. When using Gradle, snippets will be generated in\nbuild/generated-snippets. When using Maven, snippets will be\ngenerated in target/generated-snippets.\n\nSee gh-297"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/82660211", "body": "Asciidoctor needs to instantiate the macro using reflection(?). If I reduce the visibility of the constructor I get `org.jruby.exceptions.RaiseException: (TypeError) asciidoctor: FAILED: <stdin>: Failed to parse source, no public constructors for Java::OrgSpringframeworkRestdocsAsciidoctorExtensions::RestDocsSnippetBlockMacro`. I don't see any possibility to use another registration method and also provide the macro's block name.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/82660211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104297847", "body": "Now it adds every exiting snippet in the operation folder.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104297847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jmisur": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/308", "title": "Support for passing custom values/services into Snippet classes", "body": "In our auto-documentation extension https://github.com/ScaCap/spring-auto-restdocs we are trying to automate documentation as much as possible by introspecting code. For this we created extensions of Snippets which are dependent on some common services, such as jackson ObjectMapper, custom constraints & javadoc reader, having HandlerMethod available etc.\n\nFor passing these common components around, we are doing little hack by putting custom attributes inside `MockHttpServletRequest`, then inside the Snippet class getting them from Operation attributes:\n\n```\n    public static ObjectMapper getObjectMapper(Operation operation) {\n        return (ObjectMapper) operation.getAttributes().get(ObjectMapper.class.getName());\n    }\n\n    public static void setObjectMapper(MockHttpServletRequest request, ObjectMapper objectMapper) {\n        ((Map) request.getAttribute(ATTRIBUTE_NAME_CONFIGURATION))\n                .put(ObjectMapper.class.getName(), objectMapper);\n    }\n```\n\nhttps://github.com/ScaCap/spring-auto-restdocs/blob/master/spring-auto-restdocs-core/src/main/java/capital/scalable/restdocs/OperationAttributeHelper.java\n\nWe are setting it for every request using custom ResultHandler and `alwaysDo` mechanism.\n\n```\n        public void handle(MvcResult result) throws Exception {\n            setHandlerMethod(result.getRequest(), (HandlerMethod) result.getHandler());\n            setObjectMapper(result.getRequest(), objectMapper);\n            ...\n```\n\nhttps://github.com/ScaCap/spring-auto-restdocs/blob/master/spring-auto-restdocs-core/src/main/java/capital/scalable/restdocs/jackson/JacksonResultHandlers.java\n\nBecause we need custom data for every request, such as request pattern and HandlerMethod, we cannot configure these things statically during Snippet class creation.\n\nAs this mechanism is basically a hack to inner workings of spring-restdocs (discovered how these attributes are passed around by digging in source code) and it's prone to change as it's internal api, it would be great if this framework offers customization of such things out of the box. Could be still using these attributes internally but having some convenient public api.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kamaydeo": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/295", "title": "Add support for documenting a request URI's matrix variables", "body": "The URI specification RFC 3986 defines the possibility of including name-value pairs within path segments. Spring MVC has support for this for a long while. \n\nHow do you recommend documenting matrix variables with rest docs?\nFor example: \"/cars;color=red;year=2012\"\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/213", "title": "Build Swagger 2 / OpenAPI specs", "body": "I like the TDD approach to documenting your restful api. However, I love \"API Playground\" feature enabled by swagger specification. I wish there was a way to get best of both worlds. \n\nIs there a way to build swagger specs from spring rest docs? may be via building custom request/response preprocessors. \n\nDo you have any thoughts or recommendations?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cannehal": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/293", "title": "Document how to use REST Assured on top of MockMvc", "body": "Hi\nAre you planning support for this hybrid solution?\nBest regards\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "psamsotha": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/264", "title": "Add support for replacing binary multipart data with placeholder content", "body": "You can see in [this Stack Overflow question](http://stackoverflow.com/q/37860530/2587435), that when posting Multipart data, often there is binary data, which causes the resulting snippet to be a large amount of garbled data. It would be nice to have a core preprocessor that allows us to replace that binary content with a placeholder, like `<<binary data>>`. The component should allow for selecting which parts should be replaced, as not all parts will be binary data.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "BK-Choi": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/263", "title": "Make it easier to use JSON libraries other than Jackson alongside REST Docs", "body": "My spring project works fine,\nbut tests crashes when I add spring-restdocs to gradle dependencies.\nJust that (no configuration chages, no test code changes) brakes my project.\n\nThe problem is that spring-restdocs library make spring framework ignore `mvc:message-converters` configuration. (I'm not sure what is exactly happened)\nI added gson over jackson for JSON as you can see below.\nbut with spring-restdocs, only I see is `messageConverters` without `GsonHttpMessageConverter`.\n\nI have configuration like this: dispatcher-servlet.xml (there are applicationContext.xml and applicationContext-rest.xml as well)\n\n``` xml\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xmlns:mvc=\"http://www.springframework.org/schema/mvc\"\n       xsi:schemaLocation=\"\n        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd\n        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\n        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd\">\n\n<!-- message converter -->\n    <mvc:annotation-driven content-negotiation-manager=\"contentNegotiationManager\">\n        <mvc:message-converters>\n            <ref bean=\"jaxbMessageConverter\" />\n            <ref bean=\"gsonMessageConverter\" />\n        </mvc:message-converters>\n    </mvc:annotation-driven>\n\n    <bean id=\"gsonMessageConverter\" class=\"org.springframework.http.converter.json.GsonHttpMessageConverter\"/>\n    <bean id=\"jaxbMessageConverter\" class=\"org.springframework.http.converter.xml.MarshallingHttpMessageConverter\">\n        <property name=\"marshaller\" ref=\"jaxbMarshaller\" />\n        <property name=\"unmarshaller\" ref=\"jaxbUnmarshaller\" />\n        <property name=\"supportedMediaTypes\">\n            <list>\n                <value>application/xml</value>\n                <value>application/xml;charset=UTF-8</value>\n            </list>\n        </property>\n    </bean>\n\n    <bean id=\"jaxbMarshaller\" class=\"org.springframework.oxm.jaxb.Jaxb2Marshaller\">\n        <property name=\"packagesToScan\">\n            <list>\n                <value>foo.boo.**.output</value>\n            </list>\n        </property>\n    </bean>\n    <bean id=\"jaxbUnmarshaller\" name=\"unmarshaller\" class=\"org.springframework.oxm.jaxb.Jaxb2Marshaller\">\n        <property name=\"packagesToScan\">\n            <list>\n                <value>foo.boo.**.model</value>\n            </list>\n        </property>\n    </bean>\n</beans>\n```\n\n**gradle**\n\n``` js\ndependencies {\n    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc:1.1.0.RELEASE'\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kakawait": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/248", "title": "Allow descriptors to be loaded from a file", "body": "# Overview\n\nStarting discussion on [Gitter](https://gitter.im/spring-projects/spring-restdocs?at=57442bd8fce033da4bef6d42)\n\nWould be great to be able to externalize documentation message outside of testing class like `.properties` or `.yml` files.\n\nMoreover external resources could be localized to allow publish documentation in multiple language: \n\n```\nmessage.properties\nmessage_fr_FR.properties\nmessage_zh_CN.properties\n...\n```\n\nFurthermore link between external resources and testing parameters should be automatic. We must use convention filename/path convention to be able to link each together.\n# Details\n\nThere are many points to take care:\n- Which external resources format will be supported? (`properties`, `yml`)\n-  How to avoid collisions?\n  - An external resource per `document` `identifier`?\n  - Flat file and prefix (`document` `identifier`)?\n- How can I manage placeholder?\n\n```\nkey = blabla blabla forbidden values are {0}\n```\n- How to describe message type: `STRING` or whatever\n- Ability to load external resource outside of `Classpath`\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sdeleuze": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/219", "title": "Native support for Server-Sent Events and Streaming API endpoints", "body": "Maybe Spring REST Docs could support natively Server-Sent Events endpoints, as supported in Spring Framework 4.2+ thanks to [`SseEmitter`](http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/web/servlet/mvc/method/annotation/SseEmitter.html) type, and global Streaming API support based on [`ResponseBodyEmitter`](http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitter.html) type.\n\nI am not sure yet about what that support would be, but for example Spring REST Docs could recognize `SseEmitter` return types, and generate a snippet with a `curl` command with `text/event-stream`media type, handle the fact that some SSE endpoints never closes the connection (handle a timeout but not as an error?), and eventually provide Javascript code that would help people to use that endpoint in their application.\n\nThis issue is also intended to prepare support for Spring Web Reactive, which will provide first class support for streaming API via handler methods returning types like `Flux<Foo>` or `Observable<Foo>`. And unlike `SseEmitter` and `ResponseBodyEmitter`, these types will carry more type information within their Generic type.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rhuss": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/192", "title": "Provide a fluent API for creating the REST assured filter", "body": "Since REST assured is based on a fluent API it would be awesome if Spring REST docs could provide a fluent (builder) API in addition to the varargs based approach. \n\n(haven't looked in the Spring MVC usage pattern yet).\n\nFor example, instead of \n\n``` java\nresponseFields( \n            fieldWithPath(\"contact\").description(\"The user's contact details\"), \n            fieldWithPath(\"contact.email\").description(\"The user's email address\"))\n```\n\nmaybe sth like \n\n``` java\nrequest()\n    .param(\"id\",\"User's id\")\nresponse()\n    .field(\"contact\",\"The user's contact details\")\n    .field(\"contact.email\",\"The user's email address\")\n```\n\nJust a minor enhancement but would probably better align the paradigms. Nothing serious ;-)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thomaseizinger": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/47", "title": "Supporting postman collections", "body": "What do you guys think about supporting postman collections? It should be possible to integrate them in a similar manner as the curl documentation, although it could be tricky because a postman collection is described in one file. \nAs all the classes are re-instantiated on every call, one way of doing things would be trying to deserialize the given file into a list of postman-collection-models, append current request and overwrite the given file with the updated list.\nA few changes would be needed in order to properly generify classes like `SnippetWritingResultHandler` for them to support different output writers. The mentioned `ResultHandler` is currently hardcoded to use the `AsciiDoctorWriter`. \nI am not quite sure on what is the best way to do this, since I cannot really figure out, which class should be responsible for determining in which format the request/response is going to be documented. \nAlthough writing out postman collections is just a matter of implementing a `DocumentationWriter` and `DocumentationAction`s, it does not make much sense to use them in combination with the cURL stuff. So maybe classes like `CurlDocumentation` should decide which `DocumentationWriter` should be used to write the `DocumentationAction`.\nI would happily support the implementation of this feature request. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/47/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/87996464", "body": "Yes, that is the software I was referring to.\n\n> Do you know if the file format is documented anywhere?\n\nI have not found anything but I did not invest much time into research since the file consists of a simple JSON-Array with rather small models. \nI have already extracted that into entities and ran some successful tests covering the basics.\n\n> Also, for a hypermedia-based API, I'd want Postman to be following links rather than using hardcoded URIs. Is that possible?\n\nPostman makes links in responses clickable, so you just need to hit enter again and it will execute a request to the clicked link. There is also an option to preserve headers between those clicks (useful for stuff like custom authentication tokens). I have used postman in combination with SDR and found it very easy to use. \n\n> I'm not sure how widely used Postman is, this would certainly be more of a niche than HTML-based documentation.\n\nI think it would be a nice addition to the HTML-documentation because you can execute the request right away, just filling in the desired parameters. Postman also supports some kind of integration tests (if you support them with a donation) but I have not used them so far. I have experienced it has a very sophisticated and useful tool.\n\nEdit: The chrome extensions (normal and packaged app) have about 1.5kk users in total.\n[Packaged app](https://chrome.google.com/webstore/detail/postman-rest-client-packa/fhbjgbiflinjbdggehcddcbncdddomop)\n[Extension](https://chrome.google.com/webstore/detail/postman-rest-client/fdmmgilgnpjigdojojpjoooidkmcomcm)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/87996464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "drdamour": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/32", "title": "RFC-6906 Profile Rel Support", "body": "We've settled on using profile link relationship to help define what's available within the resource. https://tools.ietf.org/html/rfc6906\n\nIn the client profiles map to \"traits\" (which in the java 7 client is interfaces, maybe 8 we'll use default methods).  Client is irrelevant but it illustrates the concept really nicely that different profiles indicate what is or isn't present.\n\nSo we don't really have \"resource types\"  we have responses that have resources that claim to implement different profiles.  This allows you to know what links & fields are or are not there.\n\nI'd like to have a ToC/Nav that lists all profiles, lets you jump around, and indicate rel X on from resource of profile y will likely return profiles a,b or c.\n\nIt's very abstract, which can be difficult for consumers to get with thought...so maybe its' better to stick to resource types and collapse profiles around them.\n\nand obv many API's don't use the profile thing explicitly...but implicitly a type could be considered a profile based upon it's \"shape\", ie the links and fields that are present.\n\nJust spitballing problems here..not even really sure what I'm looking for.\n\nTo give you an idea how profiles helps here are two Product resources...that are both products, but also very different:\n\n``` json\n{\n    \"name\": \"Premium Meal Plan\",\n    \"description\": \"Select From 7 Premium Entrees To Get 14 High-Quality Meals!\",\n    \"briefDescription\": \"Premium Meals, Premium Plan!\",\n    \"violator\": null,\n    \"rating\": {\n        \"value\": 8.25,\n        \"count\": 4,\n        \"category\": \"Excellent\"\n    },\n    \"flags\": [],\n    \"biToken\": \"prod1430160\",\n    \"_links\": {\n        \"profile\": [\n            {\n                \"href\": \"https://catalog.bodybuilding.com/profiles/product\"\n            },\n            {\n                \"href\": \"https://catalog.bodybuilding.com/profiles/product-combo\"\n            },\n            {\n                \"href\": \"https://catalog.bodybuilding.com/profiles/product-meal-plan\"\n            }\n        ],\n        \"self\": {\n            \"href\": \"http://localhost:8080/products/prod1430160\"\n        },\n        \"bb:image\": [\n            {\n                \"href\": \"http://store.bbcomcdn.com/images/store/prodimage/prod_prod1430160/image_prodprod1430160_largeImage_X_450_white.jpg\",\n                \"name\": \"large\"\n            },\n            {\n                \"href\": \"http://store.bbcomcdn.com/images/store/prodimage/prod_prod1430160/image_prodprod1430160_largeImage_X_130_white.jpg\",\n                \"name\": \"medium\"\n            },\n            {\n                \"href\": \"http://store.bbcomcdn.com/images/store/prodimage/prod_prod1430160/image_prodprod1430160_largeImage_X_70_white.jpg\",\n                \"name\": \"small\"\n            }\n        ],\n        \"bb:reviews\": {\n            \"href\": \"http://localhost:8080/products/prod1430160/reviews{?page,size,reviewType}\",\n            \"type\": \"application/json\",\n            \"templated\": true\n        }\n    },\n    \"_embedded\": {\n        \"bb:promotions\": {\n            \"_links\": {\n                \"self\": {\n                    \"href\": \"http://localhost:8080/products/prod1430160/promotions?page=0&size=10\"\n                },\n                \"profile\": [\n                    {\n                        \"href\": \"https://api.bodybuilding.com/profiles/page\"\n                    }\n                ],\n                \"search\": {\n                    \"href\": \"http://localhost:8080/products/prod1430160/promotions{?page,size}\",\n                    \"templated\": true\n                }\n            },\n            \"page\": {\n                \"size\": 10,\n                \"totalElements\": 0,\n                \"totalPages\": 0,\n                \"number\": 0\n            }\n        },\n        \"bb:skugroups\": {\n            \"_links\": {\n                \"self\": {\n                    \"href\": \"http://localhost:8080/products/prod1430160/skugroups?page=0&size=1\"\n                },\n                \"profile\": [\n                    {\n                        \"href\": \"https://api.bodybuilding.com/profiles/page\"\n                    }\n                ],\n                \"search\": {\n                    \"href\": \"http://localhost:8080/products/prod1430160/skugroups{?page,size}\",\n                    \"templated\": true\n                }\n            },\n            \"_embedded\": {\n                \"item\": [\n                    {\n                        \"name\": \"\",\n                        \"violator\": {\n                            \"text\": \"free shipping\",\n                            \"color\": \"vio-red\"\n                        },\n                        \"listPriceDisplay\": \"$111.48\",\n                        \"salePriceDisplay\": \"$111.48\",\n                        \"listPrice\": 111.48,\n                        \"salePrice\": 111.48,\n                        \"flags\": [],\n                        \"_links\": {\n                            \"profile\": [\n                                {\n                                    \"href\": \"https://catalog.bodybuilding.com/profiles/skugroup\"\n                                },\n                                {\n                                    \"href\": \"https://catalog.bodybuilding.com/profiles/skugroup-combo\"\n                                },\n                                {\n                                    \"href\": \"https://catalog.bodybuilding.com/profiles/skugroup-meal-plan\"\n                                }\n                            ],\n                            \"bb:image\": [\n                                {\n                                    \"href\": \"/images/store/skuimage/sku_BBFUEL1450168/image_skuBBFUEL1450168_largeImage_X_450_white.jpg\",\n                                    \"name\": \"large\"\n                                },\n                                {\n                                    \"href\": \"/images/store/skuimage/sku_BBFUEL1450168/image_skuBBFUEL1450168_largeImage_X_130_white.jpg\",\n                                    \"name\": \"medium\"\n                                },\n                                {\n                                    \"href\": \"/images/store/skuimage/sku_BBFUEL1450168/image_skuBBFUEL1450168_largeImage_X_70_white.jpg\",\n                                    \"name\": \"small\"\n                                }\n                            ],\n                            \"self\": {\n                                \"href\": \"http://localhost:8080/skugroups/prod1430160_BBFUEL1450168\"\n                            },\n                            \"bb:product\": {\n                                \"href\": \"http://localhost:8080/products/prod1430160\"\n                            }\n                        },\n                        \"_embedded\": {\n                            \"bb:skus\": {\n                                \"_links\": {\n                                    \"self\": {\n                                        \"href\": \"http://localhost:8080/skugroups/prod1430160_BBFUEL1450168/skus?page=0&size=1\"\n                                    },\n                                    \"profile\": [\n                                        {\n                                            \"href\": \"https://api.bodybuilding.com/profiles/page\"\n                                        }\n                                    ],\n                                    \"search\": {\n                                        \"href\": \"http://localhost:8080/skugroups/prod1430160_BBFUEL1450168/skus{?page,size}\",\n                                        \"templated\": true\n                                    }\n                                },\n                                \"_embedded\": {\n                                    \"item\": [\n                                        {\n                                            \"name\": null,\n                                            \"inventory\": {\n                                                \"status\": \"IN_STOCK\",\n                                                \"label\": \"In Stock\",\n                                                \"message\": null\n                                            },\n                                            \"biToken\": \"BBFUEL1450168\",\n                                            \"_links\": {\n                                                \"profile\": [\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku\"\n                                                    },\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku-combo\"\n                                                    },\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku-meal-plan\"\n                                                    }\n                                                ],\n                                                \"self\": {\n                                                    \"href\": \"http://localhost:8080/skus/BBFUEL1450168\"\n                                                },\n                                                \"bb:image\": [\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1450168/image_skuBBFUEL1450168_largeImage_X_450_white.jpg\",\n                                                        \"name\": \"large\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1450168/image_skuBBFUEL1450168_largeImage_X_130_white.jpg\",\n                                                        \"name\": \"medium\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1450168/image_skuBBFUEL1450168_largeImage_X_70_white.jpg\",\n                                                        \"name\": \"small\"\n                                                    }\n                                                ],\n                                                \"bb:skugroup\": {\n                                                    \"href\": \"http://localhost:8080/skugroups/prod1430160_BBFUEL1450168\"\n                                                },\n                                                \"bb:add-to-wishlist\": {\n                                                    \"href\": \"http://www.bodybuilding.com/rest/model/bodybuilding/commerce/wishlist/WishlistActor/addItemToWishList?skuId=BBFUEL1450168&productId=prod1430160{&CSRF}\",\n                                                    \"templated\": true\n                                                }\n                                            },\n                                            \"_embedded\": {\n                                                \"bb:choice\": [\n                                                    {\n                                                        \"name\": \"Select Premium Meal  #1\",\n                                                        \"quantity\": 14,\n                                                        \"_links\": {\n                                                            \"profile\": [\n                                                                {\n                                                                    \"href\": \"https://catalog.bodybuilding.com/profiles/choice\"\n                                                                },\n                                                                {\n                                                                    \"href\": \"https://catalog.bodybuilding.com/profiles/choice-multi\"\n                                                                }\n                                                            ],\n                                                            \"self\": {\n                                                                \"href\": \"http://localhost:8080/skus/BBFUEL1450168/choices/cp660004\"\n                                                            },\n                                                            \"bb:image\": [\n                                                                {\n                                                                    \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1390310/image_skuBBFUEL1390310_largeImage_X_70_white.jpg\",\n                                                                    \"name\": \"small\"\n                                                                }\n                                                            ],\n                                                            \"bb:select-update\": {\n                                                                \"href\": \"http://localhost:8080/skus//selectUpdate{?options*}\"\n                                                            }\n                                                        },\n                                                        \"_embedded\": {\n                                                            \"bb:option\": [\n                                                                {\n                                                                    \"name\": \"Chicken Breast, Brown Rice & Broccoli\",\n                                                                    \"inventory\": {\n                                                                        \"status\": \"IN_STOCK\",\n                                                                        \"label\": \"In Stock\",\n                                                                        \"message\": null\n                                                                    },\n                                                                    \"biToken\": \"BBFUEL1390310\",\n                                                                    \"gramsProtein\": 39,\n                                                                    \"gramsCarbs\": 33,\n                                                                    \"gramsFat\": 8,\n                                                                    \"calories\": 370,\n                                                                    \"_links\": {\n                                                                        \"profile\": [\n                                                                            {\n                                                                                \"href\": \"https://catalog.bodybuilding.com/profiles/sku\"\n                                                                            },\n                                                                            {\n                                                                                \"href\": \"https://catalog.bodybuilding.com/profiles/sku-meal\"\n                                                                            }\n                                                                        ],\n                                                                        \"self\": {\n                                                                            \"href\": \"http://localhost:8080/skus/BBFUEL1450168/choices/cp660004/options/BBFUEL1390310\"\n                                                                        },\n                                                                        \"bb:image\": [\n                                                                            {\n                                                                                \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1390310/image_skuBBFUEL1390310_largeImage_X_450_white.jpg\",\n                                                                                \"name\": \"large\"\n                                                                            },\n                                                                            {\n                                                                                \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1390310/image_skuBBFUEL1390310_largeImage_X_130_white.jpg\",\n                                                                                \"name\": \"medium\"\n                                                                            },\n                                                                            {\n                                                                                \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1390310/image_skuBBFUEL1390310_largeImage_X_70_white.jpg\",\n                                                                                \"name\": \"small\"\n                                                                            }\n                                                                        ],\n                                                                        \"bb:ingredient-label\": {\n                                                                            \"href\": \"http://localhost:8080/skus/BBFUEL1390310/ingredientLabel\",\n                                                                            \"type\": \"text/html\"\n                                                                        }\n                                                                    }\n                                                                },\n                                                                {\n                                                                    \"name\": \"Tilapia & Broccoli\",\n                                                                    \"inventory\": {\n                                                                        \"status\": \"IN_STOCK\",\n                                                                        \"label\": \"In Stock\",\n                                                                        \"message\": null\n                                                                    },\n                                                                    \"biToken\": \"BBFUEL1390326\",\n                                                                    \"_links\": {\n                                                                        \"profile\": [\n                                                                            {\n                                                                                \"href\": \"https://catalog.bodybuilding.com/profiles/sku\"\n                                                                            }\n                                                                        ],\n                                                                        \"self\": {\n                                                                            \"href\": \"http://localhost:8080/skus/BBFUEL1450168/choices/cp660004/options/BBFUEL1390326\"\n                                                                        },\n                                                                        \"bb:image\": [\n                                                                            {\n                                                                                \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1390326/image_skuBBFUEL1390326_largeImage_X_450_white.jpg\",\n                                                                                \"name\": \"large\"\n                                                                            },\n                                                                            {\n                                                                                \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1390326/image_skuBBFUEL1390326_largeImage_X_130_white.jpg\",\n                                                                                \"name\": \"medium\"\n                                                                            },\n                                                                            {\n                                                                                \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1390326/image_skuBBFUEL1390326_largeImage_X_70_white.jpg\",\n                                                                                \"name\": \"small\"\n                                                                            }\n                                                                        ],\n                                                                        \"bb:ingredient-label\": {\n                                                                            \"href\": \"http://localhost:8080/skus/BBFUEL1390326/ingredientLabel\",\n                                                                            \"type\": \"text/html\"\n                                                                        }\n                                                                    }\n                                                                },\n                                                                {\n                                                                    \"name\": \"Egg White Omelet with Chicken & Oatmeal\",\n                                                                    \"inventory\": {\n                                                                        \"status\": \"IN_STOCK\",\n                                                                        \"label\": \"In Stock\",\n                                                                        \"message\": null\n                                                                    },\n                                                                    \"biToken\": \"BBFUEL1470124\",\n                                                                    \"gramsProtein\": 42,\n                                                                    \"gramsCarbs\": 27,\n                                                                    \"gramsFat\": 9,\n                                                                    \"calories\": 350,\n                                                                    \"_links\": {\n                                                                        \"profile\": [\n                                                                            {\n                                                                                \"href\": \"https://catalog.bodybuilding.com/profiles/sku\"\n                                                                            },\n                                                                            {\n                                                                                \"href\": \"https://catalog.bodybuilding.com/profiles/sku-meal\"\n                                                                            }\n                                                                        ],\n                                                                        \"self\": {\n                                                                            \"href\": \"http://localhost:8080/skus/BBFUEL1450168/choices/cp660004/options/BBFUEL1470124\"\n                                                                        },\n                                                                        \"bb:image\": [\n                                                                            {\n                                                                                \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1470124/image_skuBBFUEL1470124_largeImage_X_450_white.jpg\",\n                                                                                \"name\": \"large\"\n                                                                            },\n                                                                            {\n                                                                                \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1470124/image_skuBBFUEL1470124_largeImage_X_130_white.jpg\",\n                                                                                \"name\": \"medium\"\n                                                                            },\n                                                                            {\n                                                                                \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1470124/image_skuBBFUEL1470124_largeImage_X_70_white.jpg\",\n                                                                                \"name\": \"small\"\n                                                                            }\n                                                                        ],\n                                                                        \"bb:ingredient-label\": {\n                                                                            \"href\": \"http://localhost:8080/skus/BBFUEL1470124/ingredientLabel\",\n                                                                            \"type\": \"text/html\"\n                                                                        }\n                                                                    }\n                                                                },\n                                                                {\n                                                                    \"name\": \"Egg White Omelet with Chicken & Vegetables\",\n                                                                    \"inventory\": {\n                                                                        \"status\": \"IN_STOCK\",\n                                                                        \"label\": \"In Stock\",\n                                                                        \"message\": null\n                                                                    },\n                                                                    \"biToken\": \"BBFUEL1470120\",\n                                                                    \"gramsProtein\": 37,\n                                                                    \"gramsCarbs\": 7,\n                                                                    \"gramsFat\": 8,\n                                                                    \"calories\": 260,\n                                                                    \"_links\": {\n                                                                        \"profile\": [\n                                                                            {\n                                                                                \"href\": \"https://catalog.bodybuilding.com/profiles/sku\"\n                                                                            },\n                                                                            {\n                                                                                \"href\": \"https://catalog.bodybuilding.com/profiles/sku-meal\"\n                                                                            }\n                                                                        ],\n                                                                        \"self\": {\n                                                                            \"href\": \"http://localhost:8080/skus/BBFUEL1450168/choices/cp660004/options/BBFUEL1470120\"\n                                                                        },\n                                                                        \"bb:image\": [\n                                                                            {\n                                                                                \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1470120/image_skuBBFUEL1470120_largeImage_X_450_white.jpg\",\n                                                                                \"name\": \"large\"\n                                                                            },\n                                                                            {\n                                                                                \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1470120/image_skuBBFUEL1470120_largeImage_X_130_white.jpg\",\n                                                                                \"name\": \"medium\"\n                                                                            },\n                                                                            {\n                                                                                \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1470120/image_skuBBFUEL1470120_largeImage_X_70_white.jpg\",\n                                                                                \"name\": \"small\"\n                                                                            }\n                                                                        ],\n                                                                        \"bb:ingredient-label\": {\n                                                                            \"href\": \"http://localhost:8080/skus/BBFUEL1470120/ingredientLabel\",\n                                                                            \"type\": \"text/html\"\n                                                                        }\n                                                                    }\n                                                                },\n                                                                {\n                                                                    \"name\": \"Tilapia, Sweet Potato & Asparagus\",\n                                                                    \"inventory\": {\n                                                                        \"status\": \"IN_STOCK\",\n                                                                        \"label\": \"In Stock\",\n                                                                        \"message\": null\n                                                                    },\n                                                                    \"biToken\": \"BBFUEL1390328\",\n                                                                    \"gramsProtein\": 39,\n                                                                    \"gramsCarbs\": 30,\n                                                                    \"gramsFat\": 3,\n                                                                    \"calories\": 300,\n                                                                    \"_links\": {\n                                                                        \"profile\": [\n                                                                            {\n                                                                                \"href\": \"https://catalog.bodybuilding.com/profiles/sku\"\n                                                                            },\n                                                                            {\n                                                                                \"href\": \"https://catalog.bodybuilding.com/profiles/sku-meal\"\n                                                                            }\n                                                                        ],\n                                                                        \"self\": {\n                                                                            \"href\": \"http://localhost:8080/skus/BBFUEL1450168/choices/cp660004/options/BBFUEL1390328\"\n                                                                        },\n                                                                        \"bb:image\": [\n                                                                            {\n                                                                                \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1390328/image_skuBBFUEL1390328_largeImage_X_450_white.jpg\",\n                                                                                \"name\": \"large\"\n                                                                            },\n                                                                            {\n                                                                                \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1390328/image_skuBBFUEL1390328_largeImage_X_130_white.jpg\",\n                                                                                \"name\": \"medium\"\n                                                                            },\n                                                                            {\n                                                                                \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1390328/image_skuBBFUEL1390328_largeImage_X_70_white.jpg\",\n                                                                                \"name\": \"small\"\n                                                                            }\n                                                                        ],\n                                                                        \"bb:ingredient-label\": {\n                                                                            \"href\": \"http://localhost:8080/skus/BBFUEL1390328/ingredientLabel\",\n                                                                            \"type\": \"text/html\"\n                                                                        }\n                                                                    }\n                                                                },\n                                                                {\n                                                                    \"name\": \"Chicken Breast, Sweet Potato & Green Beans\",\n                                                                    \"inventory\": {\n                                                                        \"status\": \"IN_STOCK\",\n                                                                        \"label\": \"In Stock\",\n                                                                        \"message\": null\n                                                                    },\n                                                                    \"biToken\": \"BBFUEL1390308\",\n                                                                    \"gramsProtein\": 37,\n                                                                    \"gramsCarbs\": 33,\n                                                                    \"gramsFat\": 10,\n                                                                    \"calories\": 370,\n                                                                    \"_links\": {\n                                                                        \"profile\": [\n                                                                            {\n                                                                                \"href\": \"https://catalog.bodybuilding.com/profiles/sku\"\n                                                                            },\n                                                                            {\n                                                                                \"href\": \"https://catalog.bodybuilding.com/profiles/sku-meal\"\n                                                                            }\n                                                                        ],\n                                                                        \"self\": {\n                                                                            \"href\": \"http://localhost:8080/skus/BBFUEL1450168/choices/cp660004/options/BBFUEL1390308\"\n                                                                        },\n                                                                        \"bb:image\": [\n                                                                            {\n                                                                                \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1390308/image_skuBBFUEL1390308_largeImage_X_450_white.jpg\",\n                                                                                \"name\": \"large\"\n                                                                            },\n                                                                            {\n                                                                                \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1390308/image_skuBBFUEL1390308_largeImage_X_130_white.jpg\",\n                                                                                \"name\": \"medium\"\n                                                                            },\n                                                                            {\n                                                                                \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1390308/image_skuBBFUEL1390308_largeImage_X_70_white.jpg\",\n                                                                                \"name\": \"small\"\n                                                                            }\n                                                                        ],\n                                                                        \"bb:ingredient-label\": {\n                                                                            \"href\": \"http://localhost:8080/skus/BBFUEL1390308/ingredientLabel\",\n                                                                            \"type\": \"text/html\"\n                                                                        }\n                                                                    }\n                                                                },\n                                                                {\n                                                                    \"name\": \"Chicken Breast & Asparagus\",\n                                                                    \"inventory\": {\n                                                                        \"status\": \"IN_STOCK\",\n                                                                        \"label\": \"In Stock\",\n                                                                        \"message\": null\n                                                                    },\n                                                                    \"biToken\": \"BBFUEL1390312\",\n                                                                    \"gramsProtein\": 37,\n                                                                    \"gramsCarbs\": 7,\n                                                                    \"gramsFat\": 10,\n                                                                    \"calories\": 260,\n                                                                    \"_links\": {\n                                                                        \"profile\": [\n                                                                            {\n                                                                                \"href\": \"https://catalog.bodybuilding.com/profiles/sku\"\n                                                                            },\n                                                                            {\n                                                                                \"href\": \"https://catalog.bodybuilding.com/profiles/sku-meal\"\n                                                                            }\n                                                                        ],\n                                                                        \"self\": {\n                                                                            \"href\": \"http://localhost:8080/skus/BBFUEL1450168/choices/cp660004/options/BBFUEL1390312\"\n                                                                        },\n                                                                        \"bb:image\": [\n                                                                            {\n                                                                                \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1390312/image_skuBBFUEL1390312_largeImage_X_450_white.jpg\",\n                                                                                \"name\": \"large\"\n                                                                            },\n                                                                            {\n                                                                                \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1390312/image_skuBBFUEL1390312_largeImage_X_130_white.jpg\",\n                                                                                \"name\": \"medium\"\n                                                                            },\n                                                                            {\n                                                                                \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_BBFUEL1390312/image_skuBBFUEL1390312_largeImage_X_70_white.jpg\",\n                                                                                \"name\": \"small\"\n                                                                            }\n                                                                        ],\n                                                                        \"bb:ingredient-label\": {\n                                                                            \"href\": \"http://localhost:8080/skus/BBFUEL1390312/ingredientLabel\",\n                                                                            \"type\": \"text/html\"\n                                                                        }\n                                                                    }\n                                                                }\n                                                            ],\n                                                            \"bb:brand\": {\n                                                                \"label\": \"B-Elite Fuel\",\n                                                                \"description\": \"You Are Elite. This Is Your Fuel.\",\n                                                                \"_links\": {\n                                                                    \"profile\": [\n                                                                        {\n                                                                            \"href\": \"https://catalog.bodybuilding.com/profiles/category\"\n                                                                        }\n                                                                    ],\n                                                                    \"self\": {\n                                                                        \"href\": \"http://localhost:8080/category/cat830006\"\n                                                                    },\n                                                                    \"bb:full\": {\n                                                                        \"href\": \"http://localhost:8080/category/cat830006\"\n                                                                    },\n                                                                    \"bb:image\": [\n                                                                        {\n                                                                            \"href\": \"http://store.bbcomcdn.com/store/deploy/images/category/cat_cat830006/image_catcat830006_largeImage.png\",\n                                                                            \"name\": \"icon\"\n                                                                        }\n                                                                    ]\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                ]\n                                            }\n                                        }\n                                    ]\n                                },\n                                \"page\": {\n                                    \"size\": 1,\n                                    \"totalElements\": 1,\n                                    \"totalPages\": 1,\n                                    \"number\": 0\n                                }\n                            }\n                        }\n                    }\n                ]\n            },\n            \"page\": {\n                \"size\": 1,\n                \"totalElements\": 1,\n                \"totalPages\": 1,\n                \"number\": 0\n            }\n        },\n        \"bb:brand\": {\n            \"label\": \"B-Elite Fuel\",\n            \"description\": \"You Are Elite. This Is Your Fuel.\",\n            \"_links\": {\n                \"profile\": [\n                    {\n                        \"href\": \"https://catalog.bodybuilding.com/profiles/category\"\n                    }\n                ],\n                \"self\": {\n                    \"href\": \"http://localhost:8080/category/cat830006\"\n                },\n                \"bb:full\": {\n                    \"href\": \"http://localhost:8080/category/cat830006\"\n                },\n                \"bb:image\": [\n                    {\n                        \"href\": \"http://store.bbcomcdn.com/store/deploy/images/category/cat_cat830006/image_catcat830006_largeImage.png\",\n                        \"name\": \"icon\"\n                    }\n                ]\n            }\n        }\n    }\n}\n```\n\nand\n\n``` json\n{\n    \"name\": \"Phase8\",\n    \"description\": \"Sustained Release Protein with Amino Acids for Longer Muscle Building Benefits*\",\n    \"briefDescription\": \"Muscle Building Protein Powder Blend*\",\n    \"violator\": null,\n    \"rating\": {\n        \"value\": 9.1,\n        \"count\": 2491,\n        \"category\": \"Excellent\"\n    },\n    \"flags\": [],\n    \"biToken\": \"prod1280062\",\n    \"_links\": {\n        \"profile\": [\n            {\n                \"href\": \"https://catalog.bodybuilding.com/profiles/product\"\n            },\n            {\n                \"href\": \"https://catalog.bodybuilding.com/profiles/product-supplement\"\n            }\n        ],\n        \"self\": {\n            \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/products/prod1280062\"\n        },\n        \"bb:image\": [\n            {\n                \"href\": \"http://store.bbcomcdn.com/images/store/prodimage/prod_prod1280062/image_prodprod1280062_largeImage_X_450_white.jpg\",\n                \"name\": \"large\"\n            },\n            {\n                \"href\": \"http://store.bbcomcdn.com/images/store/prodimage/prod_prod1280062/image_prodprod1280062_largeImage_X_130_white.jpg\",\n                \"name\": \"medium\"\n            },\n            {\n                \"href\": \"http://store.bbcomcdn.com/images/store/prodimage/prod_prod1280062/image_prodprod1280062_largeImage_X_70_white.jpg\",\n                \"name\": \"small\"\n            }\n        ],\n        \"bb:reviews\": {\n            \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/products/prod1280062/reviews{?page,size,reviewType}\",\n            \"type\": \"application/json\",\n            \"templated\": true\n        },\n        \"bb:ingredient-labels\": {\n            \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/products/prod1280062/ingredientLabels\"\n        }\n    },\n    \"_embedded\": {\n        \"bb:promotions\": {\n            \"_links\": {\n                \"self\": {\n                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/products/prod1280062/promotions?page=0&size=10\"\n                },\n                \"profile\": [\n                    {\n                        \"href\": \"https://api.bodybuilding.com/profiles/page\"\n                    }\n                ],\n                \"search\": {\n                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/products/prod1280062/promotions{?page,size}\",\n                    \"templated\": true\n                }\n            },\n            \"_embedded\": {\n                \"item\": [\n                    {\n                        \"title\": \"Stacked Savings!\",\n                        \"content\": \"Get additional savings when you purchase <strong><a href=\\\"http://www.bodybuilding.com/store/muscletech/core-stack.html\\\">Core Stack</a></strong>\",\n                        \"badges\": null,\n                        \"disclaimer\": null,\n                        \"_links\": {\n                            \"profile\": [\n                                {\n                                    \"href\": \"https://catalog.bodybuilding.com/profiles/promotion\"\n                                }\n                            ],\n                            \"self\": {\n                                \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/promotions/promo1580015\"\n                            },\n                            \"bb:image-primary\": [\n                                {\n                                    \"href\": \"http://store.bbcomcdn.com/images/store/prodimage/prod_prod1390076/image_prodprod1390076_largeImage_X_450_white.jpg\",\n                                    \"name\": \"large\"\n                                },\n                                {\n                                    \"href\": \"http://store.bbcomcdn.com/images/store/prodimage/prod_prod1390076/image_prodprod1390076_largeImage_X_130_white.jpg\",\n                                    \"name\": \"small\"\n                                }\n                            ],\n                            \"bb:image-secondary\": [\n                                {\n                                    \"href\": \"http://store.bbcomcdn.com/store/deploy/images/common/no_image/noimage-w450.png\",\n                                    \"name\": \"large\"\n                                },\n                                {\n                                    \"href\": \"http://store.bbcomcdn.com/store/deploy/images/common/no_image/noimage-w130.png\",\n                                    \"name\": \"small\"\n                                }\n                            ],\n                            \"bb:promotion-target\": [\n                                {\n                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/category/BRAND_BIGNUTRITION\",\n                                    \"name\": \"primary\",\n                                    \"profile\": \"https://catalog.bodybuilding.com/profiles/category\"\n                                }\n                            ]\n                        }\n                    }\n                ]\n            },\n            \"page\": {\n                \"size\": 10,\n                \"totalElements\": 1,\n                \"totalPages\": 1,\n                \"number\": 0\n            }\n        },\n        \"bb:main-ingredient\": {\n            \"label\": \"Whey Protein\",\n            \"description\": \"Whey protein is a fast-absorbing source of protein to support lean muscle! Great for anytime of the day - especially post-workout! \",\n            \"_links\": {\n                \"profile\": [\n                    {\n                        \"href\": \"https://catalog.bodybuilding.com/profiles/category\"\n                    }\n                ],\n                \"self\": {\n                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/category/INGREDIENT_WHEY_PROTEIN\"\n                },\n                \"bb:full\": {\n                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/category/INGREDIENT_WHEY_PROTEIN\"\n                },\n                \"bb:image-menu\": [\n                    {\n                        \"href\": \"http://store.bbcomcdn.com/store/deploy/images/category/sub_and_featured/protein/whey_protein_featured.jpg\",\n                        \"name\": \"medium\"\n                    }\n                ]\n            }\n        },\n        \"bb:skugroups\": {\n            \"_links\": {\n                \"self\": {\n                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/products/prod1280062/skugroups?page=0&size=3\"\n                },\n                \"profile\": [\n                    {\n                        \"href\": \"https://api.bodybuilding.com/profiles/page\"\n                    }\n                ],\n                \"search\": {\n                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/products/prod1280062/skugroups{?page,size}\",\n                    \"templated\": true\n                }\n            },\n            \"_embedded\": {\n                \"item\": [\n                    {\n                        \"name\": \"2 Lbs.\",\n                        \"violator\": {\n                            \"text\": null,\n                            \"color\": null\n                        },\n                        \"listPriceDisplay\": \"$44.99\",\n                        \"salePriceDisplay\": \"$27.97\",\n                        \"listPrice\": 44.99,\n                        \"salePrice\": 27.97,\n                        \"flags\": [],\n                        \"size\": \"2 Lbs.\",\n                        \"servings\": 22,\n                        \"pricePerServing\": 1.2713636363636363,\n                        \"_links\": {\n                            \"profile\": [\n                                {\n                                    \"href\": \"https://catalog.bodybuilding.com/profiles/skugroup\"\n                                },\n                                {\n                                    \"href\": \"https://catalog.bodybuilding.com/profiles/skugroup-supplement\"\n                                }\n                            ],\n                            \"bb:image\": [\n                                {\n                                    \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1450152/image_skuMT1450152_largeImage_X_450_white.jpg\",\n                                    \"name\": \"large\"\n                                },\n                                {\n                                    \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1450152/image_skuMT1450152_largeImage_X_130_white.jpg\",\n                                    \"name\": \"medium\"\n                                },\n                                {\n                                    \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1450152/image_skuMT1450152_largeImage_X_70_white.jpg\",\n                                    \"name\": \"small\"\n                                }\n                            ],\n                            \"self\": {\n                                \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1530374\"\n                            },\n                            \"bb:product\": {\n                                \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/products/prod1280062\"\n                            }\n                        },\n                        \"_embedded\": {\n                            \"bb:skus\": {\n                                \"_links\": {\n                                    \"self\": {\n                                        \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1530374/skus?page=0&size=6\"\n                                    },\n                                    \"profile\": [\n                                        {\n                                            \"href\": \"https://api.bodybuilding.com/profiles/page\"\n                                        }\n                                    ],\n                                    \"search\": {\n                                        \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1530374/skus{?page,size}\",\n                                        \"templated\": true\n                                    }\n                                },\n                                \"_embedded\": {\n                                    \"item\": [\n                                        {\n                                            \"name\": \"Cookies and Cream\",\n                                            \"inventory\": {\n                                                \"status\": \"IN_STOCK\",\n                                                \"label\": \"In Stock\",\n                                                \"message\": null\n                                            },\n                                            \"biToken\": \"MT1530374\",\n                                            \"flavor\": \"Cookies and Cream\",\n                                            \"flavorRating\": 8.53,\n                                            \"_links\": {\n                                                \"profile\": [\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku\"\n                                                    },\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku-supplement\"\n                                                    }\n                                                ],\n                                                \"self\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1530374\"\n                                                },\n                                                \"bb:image\": [\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1530374/image_skuMT1530374_largeImage_X_450_white.jpg\",\n                                                        \"name\": \"large\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1530374/image_skuMT1530374_largeImage_X_130_white.jpg\",\n                                                        \"name\": \"medium\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1530374/image_skuMT1530374_largeImage_X_70_white.jpg\",\n                                                        \"name\": \"small\"\n                                                    }\n                                                ],\n                                                \"bb:skugroup\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1530374\"\n                                                },\n                                                \"bb:ingredient-label\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1530374/ingredientLabel\",\n                                                    \"type\": \"text/html\"\n                                                },\n                                                \"bb:add-to-wishlist\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/bodybuilding/commerce/wishlist/WishlistActor/addItemToWishList?skuId=MT1530374&productId=prod1280062{&CSRF}\",\n                                                    \"templated\": true\n                                                },\n                                                \"bb:add-to-cart\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/atg/commerce/order/purchase/CartModifierActor/addItemToOrder?skuId=MT1530374&productId=prod1280062{&quantity,CSRF}\",\n                                                    \"templated\": true\n                                                }\n                                            }\n                                        },\n                                        {\n                                            \"name\": \"Milk Chocolate\",\n                                            \"inventory\": {\n                                                \"status\": \"IN_STOCK\",\n                                                \"label\": \"In Stock\",\n                                                \"message\": null\n                                            },\n                                            \"biToken\": \"MT1450152\",\n                                            \"flavor\": \"Milk Chocolate\",\n                                            \"flavorRating\": 8.91,\n                                            \"_links\": {\n                                                \"profile\": [\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku\"\n                                                    },\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku-supplement\"\n                                                    }\n                                                ],\n                                                \"self\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1450152\"\n                                                },\n                                                \"bb:image\": [\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1450152/image_skuMT1450152_largeImage_X_450_white.jpg\",\n                                                        \"name\": \"large\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1450152/image_skuMT1450152_largeImage_X_130_white.jpg\",\n                                                        \"name\": \"medium\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1450152/image_skuMT1450152_largeImage_X_70_white.jpg\",\n                                                        \"name\": \"small\"\n                                                    }\n                                                ],\n                                                \"bb:skugroup\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1530374\"\n                                                },\n                                                \"bb:ingredient-label\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1450152/ingredientLabel\",\n                                                    \"type\": \"text/html\"\n                                                },\n                                                \"bb:add-to-wishlist\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/bodybuilding/commerce/wishlist/WishlistActor/addItemToWishList?skuId=MT1450152&productId=prod1280062{&CSRF}\",\n                                                    \"templated\": true\n                                                },\n                                                \"bb:add-to-cart\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/atg/commerce/order/purchase/CartModifierActor/addItemToOrder?skuId=MT1450152&productId=prod1280062{&quantity,CSRF}\",\n                                                    \"templated\": true\n                                                }\n                                            }\n                                        },\n                                        {\n                                            \"name\": \"Peanut Butter Chocolate - Exclusive! \",\n                                            \"inventory\": {\n                                                \"status\": \"IN_STOCK\",\n                                                \"label\": \"In Stock\",\n                                                \"message\": null\n                                            },\n                                            \"biToken\": \"MT1640032\",\n                                            \"flavor\": \"Peanut Butter Chocolate - Exclusive! \",\n                                            \"flavorRating\": 9.48,\n                                            \"_links\": {\n                                                \"profile\": [\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku\"\n                                                    },\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku-supplement\"\n                                                    }\n                                                ],\n                                                \"self\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1640032\"\n                                                },\n                                                \"bb:image\": [\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/prodimage/prod_prod1280062/image_prodprod1280062_largeImage_X_450_white.jpg\",\n                                                        \"name\": \"large\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/prodimage/prod_prod1280062/image_prodprod1280062_largeImage_X_130_white.jpg\",\n                                                        \"name\": \"medium\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/prodimage/prod_prod1280062/image_prodprod1280062_largeImage_X_70_white.jpg\",\n                                                        \"name\": \"small\"\n                                                    }\n                                                ],\n                                                \"bb:skugroup\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1530374\"\n                                                },\n                                                \"bb:ingredient-label\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1640032/ingredientLabel\",\n                                                    \"type\": \"text/html\"\n                                                },\n                                                \"bb:add-to-wishlist\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/bodybuilding/commerce/wishlist/WishlistActor/addItemToWishList?skuId=MT1640032&productId=prod1280062{&CSRF}\",\n                                                    \"templated\": true\n                                                },\n                                                \"bb:add-to-cart\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/atg/commerce/order/purchase/CartModifierActor/addItemToOrder?skuId=MT1640032&productId=prod1280062{&quantity,CSRF}\",\n                                                    \"templated\": true\n                                                }\n                                            }\n                                        },\n                                        {\n                                            \"name\": \"Strawberry\",\n                                            \"inventory\": {\n                                                \"status\": \"IN_STOCK\",\n                                                \"label\": \"In Stock\",\n                                                \"message\": null\n                                            },\n                                            \"biToken\": \"MT1450154\",\n                                            \"flavor\": \"Strawberry\",\n                                            \"flavorRating\": 8.86,\n                                            \"_links\": {\n                                                \"profile\": [\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku\"\n                                                    },\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku-supplement\"\n                                                    }\n                                                ],\n                                                \"self\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1450154\"\n                                                },\n                                                \"bb:image\": [\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1450154/image_skuMT1450154_largeImage_X_450_white.jpg\",\n                                                        \"name\": \"large\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1450154/image_skuMT1450154_largeImage_X_130_white.jpg\",\n                                                        \"name\": \"medium\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1450154/image_skuMT1450154_largeImage_X_70_white.jpg\",\n                                                        \"name\": \"small\"\n                                                    }\n                                                ],\n                                                \"bb:skugroup\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1530374\"\n                                                },\n                                                \"bb:ingredient-label\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1450154/ingredientLabel\",\n                                                    \"type\": \"text/html\"\n                                                },\n                                                \"bb:add-to-wishlist\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/bodybuilding/commerce/wishlist/WishlistActor/addItemToWishList?skuId=MT1450154&productId=prod1280062{&CSRF}\",\n                                                    \"templated\": true\n                                                },\n                                                \"bb:add-to-cart\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/atg/commerce/order/purchase/CartModifierActor/addItemToOrder?skuId=MT1450154&productId=prod1280062{&quantity,CSRF}\",\n                                                    \"templated\": true\n                                                }\n                                            }\n                                        },\n                                        {\n                                            \"name\": \"Vanilla\",\n                                            \"inventory\": {\n                                                \"status\": \"IN_STOCK\",\n                                                \"label\": \"In Stock\",\n                                                \"message\": null\n                                            },\n                                            \"biToken\": \"MT1450156\",\n                                            \"flavor\": \"Vanilla\",\n                                            \"flavorRating\": 9.04,\n                                            \"_links\": {\n                                                \"profile\": [\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku\"\n                                                    },\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku-supplement\"\n                                                    }\n                                                ],\n                                                \"self\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1450156\"\n                                                },\n                                                \"bb:image\": [\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1450156/image_skuMT1450156_largeImage_X_450_white.jpg\",\n                                                        \"name\": \"large\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1450156/image_skuMT1450156_largeImage_X_130_white.jpg\",\n                                                        \"name\": \"medium\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1450156/image_skuMT1450156_largeImage_X_70_white.jpg\",\n                                                        \"name\": \"small\"\n                                                    }\n                                                ],\n                                                \"bb:skugroup\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1530374\"\n                                                },\n                                                \"bb:ingredient-label\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1450156/ingredientLabel\",\n                                                    \"type\": \"text/html\"\n                                                },\n                                                \"bb:add-to-wishlist\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/bodybuilding/commerce/wishlist/WishlistActor/addItemToWishList?skuId=MT1450156&productId=prod1280062{&CSRF}\",\n                                                    \"templated\": true\n                                                },\n                                                \"bb:add-to-cart\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/atg/commerce/order/purchase/CartModifierActor/addItemToOrder?skuId=MT1450156&productId=prod1280062{&quantity,CSRF}\",\n                                                    \"templated\": true\n                                                }\n                                            }\n                                        },\n                                        {\n                                            \"name\": \"White Chocolate\",\n                                            \"inventory\": {\n                                                \"status\": \"IN_STOCK\",\n                                                \"label\": \"In Stock\",\n                                                \"message\": null\n                                            },\n                                            \"biToken\": \"MT1840012\",\n                                            \"flavor\": \"White Chocolate\",\n                                            \"flavorRating\": 8.55,\n                                            \"_links\": {\n                                                \"profile\": [\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku\"\n                                                    },\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku-supplement\"\n                                                    }\n                                                ],\n                                                \"self\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1840012\"\n                                                },\n                                                \"bb:image\": [\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1840012/image_skuMT1840012_largeImage_X_450_white.jpg\",\n                                                        \"name\": \"large\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1840012/image_skuMT1840012_largeImage_X_130_white.jpg\",\n                                                        \"name\": \"medium\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1840012/image_skuMT1840012_largeImage_X_70_white.jpg\",\n                                                        \"name\": \"small\"\n                                                    }\n                                                ],\n                                                \"bb:skugroup\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1530374\"\n                                                },\n                                                \"bb:ingredient-label\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1840012/ingredientLabel\",\n                                                    \"type\": \"text/html\"\n                                                },\n                                                \"bb:add-to-wishlist\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/bodybuilding/commerce/wishlist/WishlistActor/addItemToWishList?skuId=MT1840012&productId=prod1280062{&CSRF}\",\n                                                    \"templated\": true\n                                                },\n                                                \"bb:add-to-cart\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/atg/commerce/order/purchase/CartModifierActor/addItemToOrder?skuId=MT1840012&productId=prod1280062{&quantity,CSRF}\",\n                                                    \"templated\": true\n                                                }\n                                            }\n                                        }\n                                    ]\n                                },\n                                \"page\": {\n                                    \"size\": 6,\n                                    \"totalElements\": 6,\n                                    \"totalPages\": 1,\n                                    \"number\": 0\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"name\": \"4 Servings\",\n                        \"violator\": {\n                            \"text\": null,\n                            \"color\": null\n                        },\n                        \"listPriceDisplay\": \"$13.99\",\n                        \"salePriceDisplay\": \"$9.99\",\n                        \"listPrice\": 13.99,\n                        \"salePrice\": 9.99,\n                        \"flags\": [],\n                        \"size\": \"4 Servings\",\n                        \"servings\": 4,\n                        \"pricePerServing\": 2.4975,\n                        \"_links\": {\n                            \"profile\": [\n                                {\n                                    \"href\": \"https://catalog.bodybuilding.com/profiles/skugroup\"\n                                },\n                                {\n                                    \"href\": \"https://catalog.bodybuilding.com/profiles/skugroup-supplement\"\n                                }\n                            ],\n                            \"bb:image\": [\n                                {\n                                    \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1760033/image_skuMT1760033_largeImage_X_450_white.jpg\",\n                                    \"name\": \"large\"\n                                },\n                                {\n                                    \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1760033/image_skuMT1760033_largeImage_X_130_white.jpg\",\n                                    \"name\": \"medium\"\n                                },\n                                {\n                                    \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1760033/image_skuMT1760033_largeImage_X_70_white.jpg\",\n                                    \"name\": \"small\"\n                                }\n                            ],\n                            \"self\": {\n                                \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1760035\"\n                            },\n                            \"bb:product\": {\n                                \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/products/prod1280062\"\n                            }\n                        },\n                        \"_embedded\": {\n                            \"bb:skus\": {\n                                \"_links\": {\n                                    \"self\": {\n                                        \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1760035/skus?page=0&size=5\"\n                                    },\n                                    \"profile\": [\n                                        {\n                                            \"href\": \"https://api.bodybuilding.com/profiles/page\"\n                                        }\n                                    ],\n                                    \"search\": {\n                                        \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1760035/skus{?page,size}\",\n                                        \"templated\": true\n                                    }\n                                },\n                                \"_embedded\": {\n                                    \"item\": [\n                                        {\n                                            \"name\": \"Cookies and Cream\",\n                                            \"inventory\": {\n                                                \"status\": \"IN_STOCK\",\n                                                \"label\": \"In Stock\",\n                                                \"message\": null\n                                            },\n                                            \"biToken\": \"MT1760035\",\n                                            \"flavor\": \"Cookies and Cream\",\n                                            \"flavorRating\": 8.53,\n                                            \"_links\": {\n                                                \"profile\": [\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku\"\n                                                    },\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku-supplement\"\n                                                    }\n                                                ],\n                                                \"self\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1760035\"\n                                                },\n                                                \"bb:image\": [\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1760035/image_skuMT1760035_largeImage_X_450_white.jpg\",\n                                                        \"name\": \"large\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1760035/image_skuMT1760035_largeImage_X_130_white.jpg\",\n                                                        \"name\": \"medium\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1760035/image_skuMT1760035_largeImage_X_70_white.jpg\",\n                                                        \"name\": \"small\"\n                                                    }\n                                                ],\n                                                \"bb:skugroup\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1760035\"\n                                                },\n                                                \"bb:ingredient-label\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1760035/ingredientLabel\",\n                                                    \"type\": \"text/html\"\n                                                },\n                                                \"bb:add-to-wishlist\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/bodybuilding/commerce/wishlist/WishlistActor/addItemToWishList?skuId=MT1760035&productId=prod1280062{&CSRF}\",\n                                                    \"templated\": true\n                                                },\n                                                \"bb:add-to-cart\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/atg/commerce/order/purchase/CartModifierActor/addItemToOrder?skuId=MT1760035&productId=prod1280062{&quantity,CSRF}\",\n                                                    \"templated\": true\n                                                }\n                                            }\n                                        },\n                                        {\n                                            \"name\": \"Milk Chocolate\",\n                                            \"inventory\": {\n                                                \"status\": \"IN_STOCK\",\n                                                \"label\": \"In Stock\",\n                                                \"message\": null\n                                            },\n                                            \"biToken\": \"MT1760031\",\n                                            \"flavor\": \"Milk Chocolate\",\n                                            \"flavorRating\": 8.91,\n                                            \"_links\": {\n                                                \"profile\": [\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku\"\n                                                    },\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku-supplement\"\n                                                    }\n                                                ],\n                                                \"self\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1760031\"\n                                                },\n                                                \"bb:image\": [\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1760031/image_skuMT1760031_largeImage_X_450_white.jpg\",\n                                                        \"name\": \"large\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1760031/image_skuMT1760031_largeImage_X_130_white.jpg\",\n                                                        \"name\": \"medium\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1760031/image_skuMT1760031_largeImage_X_70_white.jpg\",\n                                                        \"name\": \"small\"\n                                                    }\n                                                ],\n                                                \"bb:skugroup\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1760035\"\n                                                },\n                                                \"bb:ingredient-label\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1760031/ingredientLabel\",\n                                                    \"type\": \"text/html\"\n                                                },\n                                                \"bb:add-to-wishlist\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/bodybuilding/commerce/wishlist/WishlistActor/addItemToWishList?skuId=MT1760031&productId=prod1280062{&CSRF}\",\n                                                    \"templated\": true\n                                                },\n                                                \"bb:add-to-cart\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/atg/commerce/order/purchase/CartModifierActor/addItemToOrder?skuId=MT1760031&productId=prod1280062{&quantity,CSRF}\",\n                                                    \"templated\": true\n                                                }\n                                            }\n                                        },\n                                        {\n                                            \"name\": \"Peanut Butter Chocolate\",\n                                            \"inventory\": {\n                                                \"status\": \"IN_STOCK\",\n                                                \"label\": \"In Stock\",\n                                                \"message\": null\n                                            },\n                                            \"biToken\": \"MT1760033\",\n                                            \"flavor\": \"Peanut Butter Chocolate\",\n                                            \"flavorRating\": 8.36,\n                                            \"_links\": {\n                                                \"profile\": [\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku\"\n                                                    },\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku-supplement\"\n                                                    }\n                                                ],\n                                                \"self\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1760033\"\n                                                },\n                                                \"bb:image\": [\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1760033/image_skuMT1760033_largeImage_X_450_white.jpg\",\n                                                        \"name\": \"large\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1760033/image_skuMT1760033_largeImage_X_130_white.jpg\",\n                                                        \"name\": \"medium\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1760033/image_skuMT1760033_largeImage_X_70_white.jpg\",\n                                                        \"name\": \"small\"\n                                                    }\n                                                ],\n                                                \"bb:skugroup\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1760035\"\n                                                },\n                                                \"bb:ingredient-label\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1760033/ingredientLabel\",\n                                                    \"type\": \"text/html\"\n                                                },\n                                                \"bb:add-to-wishlist\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/bodybuilding/commerce/wishlist/WishlistActor/addItemToWishList?skuId=MT1760033&productId=prod1280062{&CSRF}\",\n                                                    \"templated\": true\n                                                },\n                                                \"bb:add-to-cart\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/atg/commerce/order/purchase/CartModifierActor/addItemToOrder?skuId=MT1760033&productId=prod1280062{&quantity,CSRF}\",\n                                                    \"templated\": true\n                                                }\n                                            }\n                                        },\n                                        {\n                                            \"name\": \"Strawberry\",\n                                            \"inventory\": {\n                                                \"status\": \"IN_STOCK\",\n                                                \"label\": \"In Stock\",\n                                                \"message\": null\n                                            },\n                                            \"biToken\": \"MT1950166\",\n                                            \"flavor\": \"Strawberry\",\n                                            \"flavorRating\": 8.86,\n                                            \"_links\": {\n                                                \"profile\": [\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku\"\n                                                    },\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku-supplement\"\n                                                    }\n                                                ],\n                                                \"self\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1950166\"\n                                                },\n                                                \"bb:image\": [\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/prodimage/prod_prod1280062/image_prodprod1280062_largeImage_X_450_white.jpg\",\n                                                        \"name\": \"large\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/prodimage/prod_prod1280062/image_prodprod1280062_largeImage_X_130_white.jpg\",\n                                                        \"name\": \"medium\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/prodimage/prod_prod1280062/image_prodprod1280062_largeImage_X_70_white.jpg\",\n                                                        \"name\": \"small\"\n                                                    }\n                                                ],\n                                                \"bb:skugroup\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1760035\"\n                                                },\n                                                \"bb:ingredient-label\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1950166/ingredientLabel\",\n                                                    \"type\": \"text/html\"\n                                                },\n                                                \"bb:add-to-wishlist\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/bodybuilding/commerce/wishlist/WishlistActor/addItemToWishList?skuId=MT1950166&productId=prod1280062{&CSRF}\",\n                                                    \"templated\": true\n                                                },\n                                                \"bb:add-to-cart\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/atg/commerce/order/purchase/CartModifierActor/addItemToOrder?skuId=MT1950166&productId=prod1280062{&quantity,CSRF}\",\n                                                    \"templated\": true\n                                                }\n                                            }\n                                        },\n                                        {\n                                            \"name\": \"Vanilla\",\n                                            \"inventory\": {\n                                                \"status\": \"IN_STOCK\",\n                                                \"label\": \"In Stock\",\n                                                \"message\": null\n                                            },\n                                            \"biToken\": \"MT1760108\",\n                                            \"flavor\": \"Vanilla\",\n                                            \"flavorRating\": 9.04,\n                                            \"_links\": {\n                                                \"profile\": [\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku\"\n                                                    },\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku-supplement\"\n                                                    }\n                                                ],\n                                                \"self\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1760108\"\n                                                },\n                                                \"bb:image\": [\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1760108/image_skuMT1760108_largeImage_X_450_white.jpg\",\n                                                        \"name\": \"large\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1760108/image_skuMT1760108_largeImage_X_130_white.jpg\",\n                                                        \"name\": \"medium\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1760108/image_skuMT1760108_largeImage_X_70_white.jpg\",\n                                                        \"name\": \"small\"\n                                                    }\n                                                ],\n                                                \"bb:skugroup\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1760035\"\n                                                },\n                                                \"bb:ingredient-label\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1760108/ingredientLabel\",\n                                                    \"type\": \"text/html\"\n                                                },\n                                                \"bb:add-to-wishlist\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/bodybuilding/commerce/wishlist/WishlistActor/addItemToWishList?skuId=MT1760108&productId=prod1280062{&CSRF}\",\n                                                    \"templated\": true\n                                                },\n                                                \"bb:add-to-cart\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/atg/commerce/order/purchase/CartModifierActor/addItemToOrder?skuId=MT1760108&productId=prod1280062{&quantity,CSRF}\",\n                                                    \"templated\": true\n                                                }\n                                            }\n                                        }\n                                    ]\n                                },\n                                \"page\": {\n                                    \"size\": 5,\n                                    \"totalElements\": 5,\n                                    \"totalPages\": 1,\n                                    \"number\": 0\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"name\": \"4.4 Lbs.\",\n                        \"violator\": {\n                            \"text\": null,\n                            \"color\": null\n                        },\n                        \"listPriceDisplay\": \"$82.99\",\n                        \"salePriceDisplay\": \"$46.97\",\n                        \"listPrice\": 82.99,\n                        \"salePrice\": 46.97,\n                        \"flags\": [],\n                        \"size\": \"4.4 Lbs.\",\n                        \"servings\": 50,\n                        \"pricePerServing\": 0.9394,\n                        \"_links\": {\n                            \"profile\": [\n                                {\n                                    \"href\": \"https://catalog.bodybuilding.com/profiles/skugroup\"\n                                },\n                                {\n                                    \"href\": \"https://catalog.bodybuilding.com/profiles/skugroup-supplement\"\n                                }\n                            ],\n                            \"bb:image\": [\n                                {\n                                    \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1490004/image_skuMT1490004_largeImage_X_450_white.jpg\",\n                                    \"name\": \"large\"\n                                },\n                                {\n                                    \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1490004/image_skuMT1490004_largeImage_X_130_white.jpg\",\n                                    \"name\": \"medium\"\n                                },\n                                {\n                                    \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1490004/image_skuMT1490004_largeImage_X_70_white.jpg\",\n                                    \"name\": \"small\"\n                                }\n                            ],\n                            \"self\": {\n                                \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1530372\"\n                            },\n                            \"bb:product\": {\n                                \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/products/prod1280062\"\n                            }\n                        },\n                        \"_embedded\": {\n                            \"bb:skus\": {\n                                \"_links\": {\n                                    \"self\": {\n                                        \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1530372/skus?page=0&size=5\"\n                                    },\n                                    \"profile\": [\n                                        {\n                                            \"href\": \"https://api.bodybuilding.com/profiles/page\"\n                                        }\n                                    ],\n                                    \"search\": {\n                                        \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1530372/skus{?page,size}\",\n                                        \"templated\": true\n                                    }\n                                },\n                                \"_embedded\": {\n                                    \"item\": [\n                                        {\n                                            \"name\": \"Cookies and Cream\",\n                                            \"inventory\": {\n                                                \"status\": \"IN_STOCK\",\n                                                \"label\": \"In Stock\",\n                                                \"message\": null\n                                            },\n                                            \"biToken\": \"MT1530372\",\n                                            \"flavor\": \"Cookies and Cream\",\n                                            \"flavorRating\": 8.53,\n                                            \"_links\": {\n                                                \"profile\": [\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku\"\n                                                    },\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku-supplement\"\n                                                    }\n                                                ],\n                                                \"self\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1530372\"\n                                                },\n                                                \"bb:image\": [\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1530372/image_skuMT1530372_largeImage_X_450_white.jpg\",\n                                                        \"name\": \"large\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1530372/image_skuMT1530372_largeImage_X_130_white.jpg\",\n                                                        \"name\": \"medium\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1530372/image_skuMT1530372_largeImage_X_70_white.jpg\",\n                                                        \"name\": \"small\"\n                                                    }\n                                                ],\n                                                \"bb:skugroup\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1530372\"\n                                                },\n                                                \"bb:ingredient-label\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1530372/ingredientLabel\",\n                                                    \"type\": \"text/html\"\n                                                },\n                                                \"bb:add-to-wishlist\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/bodybuilding/commerce/wishlist/WishlistActor/addItemToWishList?skuId=MT1530372&productId=prod1280062{&CSRF}\",\n                                                    \"templated\": true\n                                                },\n                                                \"bb:add-to-cart\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/atg/commerce/order/purchase/CartModifierActor/addItemToOrder?skuId=MT1530372&productId=prod1280062{&quantity,CSRF}\",\n                                                    \"templated\": true\n                                                }\n                                            }\n                                        },\n                                        {\n                                            \"name\": \"Milk Chocolate\",\n                                            \"inventory\": {\n                                                \"status\": \"IN_STOCK\",\n                                                \"label\": \"In Stock\",\n                                                \"message\": null\n                                            },\n                                            \"biToken\": \"MT1490004\",\n                                            \"flavor\": \"Milk Chocolate\",\n                                            \"flavorRating\": 8.91,\n                                            \"_links\": {\n                                                \"profile\": [\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku\"\n                                                    },\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku-supplement\"\n                                                    }\n                                                ],\n                                                \"self\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1490004\"\n                                                },\n                                                \"bb:image\": [\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1490004/image_skuMT1490004_largeImage_X_450_white.jpg\",\n                                                        \"name\": \"large\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1490004/image_skuMT1490004_largeImage_X_130_white.jpg\",\n                                                        \"name\": \"medium\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1490004/image_skuMT1490004_largeImage_X_70_white.jpg\",\n                                                        \"name\": \"small\"\n                                                    }\n                                                ],\n                                                \"bb:skugroup\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1530372\"\n                                                },\n                                                \"bb:ingredient-label\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1490004/ingredientLabel\",\n                                                    \"type\": \"text/html\"\n                                                },\n                                                \"bb:add-to-wishlist\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/bodybuilding/commerce/wishlist/WishlistActor/addItemToWishList?skuId=MT1490004&productId=prod1280062{&CSRF}\",\n                                                    \"templated\": true\n                                                },\n                                                \"bb:add-to-cart\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/atg/commerce/order/purchase/CartModifierActor/addItemToOrder?skuId=MT1490004&productId=prod1280062{&quantity,CSRF}\",\n                                                    \"templated\": true\n                                                }\n                                            }\n                                        },\n                                        {\n                                            \"name\": \"Strawberry\",\n                                            \"inventory\": {\n                                                \"status\": \"IN_STOCK\",\n                                                \"label\": \"In Stock\",\n                                                \"message\": null\n                                            },\n                                            \"biToken\": \"MT1490008\",\n                                            \"flavor\": \"Strawberry\",\n                                            \"flavorRating\": 8.86,\n                                            \"_links\": {\n                                                \"profile\": [\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku\"\n                                                    },\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku-supplement\"\n                                                    }\n                                                ],\n                                                \"self\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1490008\"\n                                                },\n                                                \"bb:image\": [\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1490008/image_skuMT1490008_largeImage_X_450_white.jpg\",\n                                                        \"name\": \"large\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1490008/image_skuMT1490008_largeImage_X_130_white.jpg\",\n                                                        \"name\": \"medium\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1490008/image_skuMT1490008_largeImage_X_70_white.jpg\",\n                                                        \"name\": \"small\"\n                                                    }\n                                                ],\n                                                \"bb:skugroup\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1530372\"\n                                                },\n                                                \"bb:ingredient-label\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1490008/ingredientLabel\",\n                                                    \"type\": \"text/html\"\n                                                },\n                                                \"bb:add-to-wishlist\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/bodybuilding/commerce/wishlist/WishlistActor/addItemToWishList?skuId=MT1490008&productId=prod1280062{&CSRF}\",\n                                                    \"templated\": true\n                                                },\n                                                \"bb:add-to-cart\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/atg/commerce/order/purchase/CartModifierActor/addItemToOrder?skuId=MT1490008&productId=prod1280062{&quantity,CSRF}\",\n                                                    \"templated\": true\n                                                }\n                                            }\n                                        },\n                                        {\n                                            \"name\": \"Vanilla\",\n                                            \"inventory\": {\n                                                \"status\": \"IN_STOCK\",\n                                                \"label\": \"In Stock\",\n                                                \"message\": null\n                                            },\n                                            \"biToken\": \"MT1490006\",\n                                            \"flavor\": \"Vanilla\",\n                                            \"flavorRating\": 9.04,\n                                            \"_links\": {\n                                                \"profile\": [\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku\"\n                                                    },\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku-supplement\"\n                                                    }\n                                                ],\n                                                \"self\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1490006\"\n                                                },\n                                                \"bb:image\": [\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1490006/image_skuMT1490006_largeImage_X_450_white.jpg\",\n                                                        \"name\": \"large\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1490006/image_skuMT1490006_largeImage_X_130_white.jpg\",\n                                                        \"name\": \"medium\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1490006/image_skuMT1490006_largeImage_X_70_white.jpg\",\n                                                        \"name\": \"small\"\n                                                    }\n                                                ],\n                                                \"bb:skugroup\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1530372\"\n                                                },\n                                                \"bb:ingredient-label\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1490006/ingredientLabel\",\n                                                    \"type\": \"text/html\"\n                                                },\n                                                \"bb:add-to-wishlist\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/bodybuilding/commerce/wishlist/WishlistActor/addItemToWishList?skuId=MT1490006&productId=prod1280062{&CSRF}\",\n                                                    \"templated\": true\n                                                },\n                                                \"bb:add-to-cart\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/atg/commerce/order/purchase/CartModifierActor/addItemToOrder?skuId=MT1490006&productId=prod1280062{&quantity,CSRF}\",\n                                                    \"templated\": true\n                                                }\n                                            }\n                                        },\n                                        {\n                                            \"name\": \"White Chocolate\",\n                                            \"inventory\": {\n                                                \"status\": \"IN_STOCK\",\n                                                \"label\": \"In Stock\",\n                                                \"message\": null\n                                            },\n                                            \"biToken\": \"MT1850002\",\n                                            \"flavor\": \"White Chocolate\",\n                                            \"flavorRating\": 8.55,\n                                            \"_links\": {\n                                                \"profile\": [\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku\"\n                                                    },\n                                                    {\n                                                        \"href\": \"https://catalog.bodybuilding.com/profiles/sku-supplement\"\n                                                    }\n                                                ],\n                                                \"self\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1850002\"\n                                                },\n                                                \"bb:image\": [\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1850002/image_skuMT1850002_largeImage_X_450_white.jpg\",\n                                                        \"name\": \"large\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1850002/image_skuMT1850002_largeImage_X_130_white.jpg\",\n                                                        \"name\": \"medium\"\n                                                    },\n                                                    {\n                                                        \"href\": \"http://store.bbcomcdn.com/images/store/skuimage/sku_MT1850002/image_skuMT1850002_largeImage_X_70_white.jpg\",\n                                                        \"name\": \"small\"\n                                                    }\n                                                ],\n                                                \"bb:skugroup\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skugroups/prod1280062_MT1530372\"\n                                                },\n                                                \"bb:ingredient-label\": {\n                                                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/skus/MT1850002/ingredientLabel\",\n                                                    \"type\": \"text/html\"\n                                                },\n                                                \"bb:add-to-wishlist\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/bodybuilding/commerce/wishlist/WishlistActor/addItemToWishList?skuId=MT1850002&productId=prod1280062{&CSRF}\",\n                                                    \"templated\": true\n                                                },\n                                                \"bb:add-to-cart\": {\n                                                    \"href\": \"http://bitwise-int1.dev:8080/rest/model/atg/commerce/order/purchase/CartModifierActor/addItemToOrder?skuId=MT1850002&productId=prod1280062{&quantity,CSRF}\",\n                                                    \"templated\": true\n                                                }\n                                            }\n                                        }\n                                    ]\n                                },\n                                \"page\": {\n                                    \"size\": 5,\n                                    \"totalElements\": 5,\n                                    \"totalPages\": 1,\n                                    \"number\": 0\n                                }\n                            }\n                        }\n                    }\n                ]\n            },\n            \"page\": {\n                \"size\": 3,\n                \"totalElements\": 3,\n                \"totalPages\": 1,\n                \"number\": 0\n            }\n        },\n        \"bb:main-goal\": {\n            \"label\": \"Build Muscle\",\n            \"description\": \"Looking to build a strong, lean and muscular body? Check out the top muscle building supplements and start seeing results! \",\n            \"_links\": {\n                \"profile\": [\n                    {\n                        \"href\": \"https://catalog.bodybuilding.com/profiles/category\"\n                    }\n                ],\n                \"self\": {\n                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/category/BUILD_MUSCLE\"\n                },\n                \"bb:full\": {\n                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/category/BUILD_MUSCLE\"\n                },\n                \"bb:image-menu\": [\n                    {\n                        \"href\": \"http://store.bbcomcdn.com/store/deploy/images/category/sub_and_featured/build_muscle/build_muscle_featured2.jpg\",\n                        \"name\": \"medium\"\n                    }\n                ]\n            }\n        },\n        \"bb:brand\": {\n            \"label\": \"MuscleTech\",\n            \"description\": \"MuscleTech has created a line of great products at great prices. Tons of people are using them everyday with great results... are you next?\",\n            \"_links\": {\n                \"profile\": [\n                    {\n                        \"href\": \"https://catalog.bodybuilding.com/profiles/category\"\n                    }\n                ],\n                \"self\": {\n                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/category/BRAND_MUSCLETECH\"\n                },\n                \"bb:full\": {\n                    \"href\": \"http://bitwise-api1.dev:8080/commerce-hyper-api/category/BRAND_MUSCLETECH\"\n                },\n                \"bb:image\": [\n                    {\n                        \"href\": \"http://store.bbcomcdn.com/store/deploy/images/category/sub_and_featured/brand_images/muscletech-featured.png\",\n                        \"name\": \"icon\"\n                    }\n                ]\n            }\n        }\n    }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/32/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mduesterhoeft": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/e69c4c8209a98bb4988cc556e80ae7cf778ec704", "message": "List restdocs-raml in third-party extensions"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jlstrater": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/75bc7e05387cbd9fb08fa95442deddd53b238c63", "message": "Update the Grails sample to use Grails 3.3 and Gradle 4.4\n\nCloses gh-469"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/42613bf3f9e322515530b1c082362f07b4cb4a9f", "message": "Add README to Grails sample\n\nCloses gh-254\nCloses gh-268"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a1d5d75c4e4caf16bae5f46c7249b18bd2a7e0db", "message": "Split samples table into three tables grouped by type\n\nCloses gh-266"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/64803b5fae42bfb63ed19c7b4467600e66d534c2", "message": "Add Grails sample app\n\nCloses gh-250"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "spring-buildmaster": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/fe9ec0ea1c83c8ec0cdd09aeca8cdfdfe0e5463b", "message": "Next development version"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/4a54c401aab824ac69d105579a3dfe9aeb7acc87", "message": "Next development version"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/f6002a00a323ebc99556e11f3fe56ca7b8b97762", "message": "Next development version"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/add6e6932e940612269268ddd3bd2e4d26e49ebf", "message": "Next development version"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/3ea51f2afad5839536e24268ab53a0907b6b8ef6", "message": "Next development version"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/72d692107f71bddcfe0eab34364a045fe2208cc3", "message": "Next development version"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/c0e950b3ee7682b7936e213ccf4e68ea13cbb551", "message": "Next development version"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/8a91f170545bcf4eb6a9745d50ad0a8d1e45239e", "message": "Next development version"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/832f4fdbc3429442629533f5c9cf7d5940557340", "message": "Next development version"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a9305cba8764f5e61a26c64988cb4bab90610671", "message": "Next development version"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "izeye": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/126d8fde5630013124f87d16ae978fc9a38e25f6", "message": "Update minimum Java version in README.md and CONTRIBUTING.md\n\nCloses gh-460"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/5750babc6f33c246fd7fc1f119bd23835bc3c1ae", "message": "Upgrade to org.asciidoctor.convert 1.5.6\n\nCloses gh-459"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/aeb12673ae716bf58971d68c9305d1733b5a85df", "message": "Polish tests\n\nCloses gh-436"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/9bd9fa31dc8851f47e751a1c46ec9fd580a97d4d", "message": "Reuse ObjectMapper in FieldPathPayloadSubsectionExtractor\n\nCloses gh-431"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/9a22ec04423b360277177f750f028ef39a1c73de", "message": "Add missing space to assertion failure message in the tests\n\nCloses gh-397"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/59311292ba02daf8ec668559cb5dbce500cfc463", "message": "Correct the documentation generated by the JUnit 5 sample\n\nCloses gh-408"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/dd00ce05aa356ac9ea914027aa7f45a74cd7d6db", "message": "Fix typo in Asciidoctor attributes configuration\n\nCloses gh-377"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/4a1facd1e6bfd1981f86d196112b2c12f99e4c4a", "message": "Fix typo in name of local variable in CurlRequestSnippet\n\nCloses gh-375"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/39fabc28d447fec67f65eb99c91481d179ee61a0", "message": "Fix typo in value of snippets attribute\n\nCloses gh-369"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/19d7337e264cdfc6e526d37dac81617194fc22c6", "message": "Remove unnecessary Host header set in UriModifyingOperationPreprocessor\n\nCloses gh-280"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/c6f20f213860bb09c06fd57fe7ad9541080b2b2d", "message": "Correct javadoc in LinksSnippet\n\nCloses gh-271"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/09c9cac857e07bf33c6894bfaff02fb07f45dc70", "message": "Polish"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125179416", "body": "@wilkinsona Thanks for the nice tool!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125179416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "zaynetro": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/2dc48590dd97c2f2e3a1b64686e970dc93a3b58d", "message": "Remove unused custom URI configuration documentation example\n\nCloses gh-457"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "michael-simons": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/92b6268da42398b1c7a83bfaa4b7ee60fd31e242", "message": "Fix name of self rel in reference documentation\n\nCloses gh-449"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "filiphr": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/4f8b17383684c08a2b12cae1b561db5cf0cfae0b", "message": "Add support for configuring default request and response preprocessors\n\nSee gh-424"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ooz": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/a8d51da4f4039a88d45084475476902cac049483", "message": "Fix formatting of reference to HeaderDocumentation in the docs\n\nCloses gh-409"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jd1": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/9d4a118993eaf70940431c1bcbe5689a3e0191aa", "message": "Add missing quotes around value of snippets attribute\n\nCloses gh-389"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tkopczynski": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/30fa6bcc5f73b832907d2e5971fee698fbeb1363", "message": "Include request body and response body default snippets list\n\nCloses gh-379"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/2cb9d36ef18e729762c5de1e7fa61d645bb582b1", "message": "Line breaks in cURL and HTTPie snippets\n\nCloses gh-260"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/46190535f771b0ef924b175db12c6dd0361e4853", "message": "Include cookies in the HTTP response snippet\n\nSee gh-305\nCloses gh-340"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/25bc6c37dae372a15dab59eee6acd252a0176968", "message": "Include cookies in request snippets\n\nCloses gh-336\nSee gh-302, gh-303, gh-304"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/102100777", "body": "OK, I think I managed to introduce the `ConcatenatingCommandFormatter` class as you proposed.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/102100777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104751488", "body": "Just a quick question about this one: deprecating this constructor would mean that I would have to touch every test in `CurlRequestSnippetTests` to switch to a different constructor. Is that ok for you?", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/104751488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/105251397", "body": "OK, I understand now. I'm also in favour of putting the default formatter in one place, I just wasn't sure where should it be. After looking at the code again I think that `CliDocumentation` should be a good enough place to put it there.\r\n\r\nBut, to have it done in a clean way I would propose the following changes:\r\n\r\n- `CurlRequestSnippet`: create a copy of all constructors with an additional `commandFormatter` parameter and deprecate the old ones\r\n- `CliDocumentation`: create additional `curlRequest` method that takes `attributes` and `commandFormatter` parameters. Additionally, change all existing `CurlRequestSnippet` constructors so that they will receive the default formatter.\r\n- `CurlRequestSnippetTests`: add the additional formatter parameter to each `CurlRequestSnippet` constructor or call the appropriate `CliDocumentation` method. The former option feels better since these are the `CurlRequestSnippet` tests.\r\n\r\nI do understand that this is more or less the same that you have proposed in the first place but now it's written in one place and it's easier for me to see the whole picture.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/105251397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "fbenz": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/7e4a865d1bccb38286ee053b7e914609deda6df2", "message": "Add spring-auto-restdocs to third-party extensions\n\nCloses gh-343"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stonio": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/9bbb60ac2a49931edacc51a5f95be44c662795df", "message": "Clarify that parameterized output directory uses the simple class name\n\nCloses gh-334"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "luisdeltoro": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/27b75538125f967098be5fd58f2fc9dd3ecd13ff", "message": "Copy attributes when applying path prefix to field descriptors\n\nSee gh-314"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mle-enso": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/eb46eaa3c55b5b6099aed9c5e406da602ee2f386", "message": "Improve documention on how to use .adoc snippets\n\nCloses gh-279"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "marceloverdijk": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/5edc27fc990b984c733d88850f9c971529846da8", "message": "Allow descriptors to be provided as a List as well as via varags\n\nCloses gh-247"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/commits/d58f69175fc00dace8c999c71b0457b0c0e67367", "message": "Provide utility method for applying a path prefix to field descriptors\n\napplyPathPrefix is generally useful but, previously, it was only\navailable as a protected method on AbstractFieldsSnippet.\n\nThis commit moves the method from AbstractFieldsSnippet to\nPayloadDocumentation where it's now public and static.\n\nCloses gh-245"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122186469", "body": "Yes, latest snapshot indeed includes the host like:\n\n```\nGET /api/customers HTTP/1.1\nHost: myhost.com\n```\n\nHowever I think I would prefer just:\n\n```\nGET http://myhost.com/api/customers HTTP/1.1\n```\n\nas it reads nicer I think.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122186469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122302241", "body": "I also like the format\n\n```\nmockMvc.perform(get(variableRequest(\"/{foo}/{bar}\", \"one\", \"two\")))\n```\n\nas @awendland already pointed out this exactly what we have in request mappings.\n\nTo be honest this is also the approach I use in junit tests. Very useful if you e.g. have some kind of Paths class with the actual paths as static fields shared between main and test code.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122302241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122302400", "body": "But documenting path parameters is a real must imo.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122302400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122774531", "body": "I haven't looked at the source code but I assume the snippets are generated using some template engine?\nIt would be nice to change these templates per project.\nThis way we could remove e.g. the `$` from the curl-template as being mentioned earlier.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122774531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122829540", "body": "@wilkinsona OK I understand. I think using templates could give a lot of of flexibility and possibilities for customizations. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122829540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122845742", "body": "@wilkinsona yes that sound reasonable to do!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122845742/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122846932", "body": "Yes, I'm using a second `ObjectMapper` now to do this.\nAnother option is indeed to change the @Autowired ObjectMapper or configure it differently when running in 'documentation' mode.\nThis would also give the benefit for more easily change the pretty print for response bodies.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122846932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122848640", "body": "For reference, this is what I was using now:\n\n```\n@Autowired\nprotected ObjectMapper objectMapper;\n\n@Test\npublic void create_example() throws Exception {\n    Input input = ..;\n    mockMvc.perform(post(\"some-url\")\n            .accept(APPLICATION_JSON)\n            .contentType(APPLICATION_JSON)\n            .content(prettyPrint(objectMapper.writeValueAsString(input))))\n\nprivate String prettyPrint(String original) throws IOException {\n    ObjectMapper mapper = new ObjectMapper().configure(\n            SerializationFeature.INDENT_OUTPUT, true);\n    return mapper.writeValueAsString(mapper.readTree(original));\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122848640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122849470", "body": "Yes probably a plugin for only creating `SourceSets` is a little bit of overkill.\nI will look into separate `SourceSets` soon, and will provide some example for documentation.\nDon't know if Maven would support this as well.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122849470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/124130746", "body": "Sorry was indeed a problem on my side.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/124130746/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125104986", "body": "I've quickly looked at source code and if you are interested I can make a PR to add a new `ParameterType` type to `ParameterDescriptor`. Similar as `FieldDescriptor` has a `FieldType`.\nAnd of course adding to to the `QueryParametersSnippetResultHandler`. If not provided the default type in the snippet should be `String`.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125104986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125258302", "body": "Ok great to hear you are working on 70. Looking forward to this!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125258302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125527624", "body": "Yes, when raising this issue I wasn't aware of #70. That should be sufficient.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125527624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125693582", "body": "@wilkinsona I noticed the `optional` field of the `FieldDescriptior` is added to the model for template rendering.\nWouldn't you think it would be consistent to add an `optional` field to `ParameterDescriptor` as well and do:\n\n```\nparameterWithName(\"page\")\n    .description(pageDescription)\n    .optional()\n```\n\nI would recommend this instead of \n\n```\nparameterWithName(\"page\")\n    .description(pageDescription)\n    .attributes(\n        key(\"optional\").value(true))\n```\n\nThis would be much more consistent when writing the `Java asciidoctor documentation`.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125693582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/127196568", "body": "Hi @wilkinsona \n\nI'm going on holiday this week so unfortunately I wontt have time to look into it now.\nLooking at the above the varargs api change looks really nice and indeed offers a lot of flexibility to attache custom snippet writers.\nThis looks very promising!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/127196568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138852810", "body": "Yes I use a abstract base class for all my documentation test classes.\nIn this base class I setup the `MockMvc` and `RestDocumentationResultHandler` instances.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138852810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/comments/12422973", "body": "@wilkinsona I think this should be `return this.withPathParameters(null, descriptors);`\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/comments/12422973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/comments/12423145", "body": "https://github.com/spring-projects/spring-restdocs/pull/101\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/comments/12423145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "pvardanega": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/477", "title": "Convert query parameters' list as param=1&param=2 instead of param=1,2", "body": "Fixes gh-476", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RobWin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/62934172", "body": "Thx. I will give it a try\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/62934172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74033633", "body": "Thanks for your comments. \nI agree to all your points. I mainly created the swagger2asciidoc project to be able to reverse engineer an existing Annotation-based API documentation to a \"markup language\"-based documentation, \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74033633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74056690", "body": "I plan to use swagger2asciidoc and spring-restdocs as follows:\n- Migrate Annotation-Based documentation to AsciiDoc. \n- Use spring-restdocs to generate request and response examples\n- Use jackson-module-jsonSchema to generate JSON schema of the domain model on the fly\n- Use JAXB to generate XML schema of the domain model on the fly\n- Include the generated AsciiDoc files into the main AsciiDoc documentation.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74056690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75047815", "body": "Hello @wilkinsona \nI've integrated spring-restdocs now. I'm able to include the generated examples from spring-restdocs into the generated AsciiDoc document.\n\nLet's say I have a Swagger-annotated Controller method with a ApiOperation value _\"Create a quota\"_\n\n``` java\n@ApiOperation(value = \"Create a quota.\", notes =  \"Create a quota allows bla bla bla bla\")\npublic void createMailStorageQuota(@ApiParam(name = \"MailStorageQuota\", value = \"MailStorageQuota\", required = true) @RequestBody MailStorageQuota mailStorageQuota) {\n}\n```\n\nI'm using spring-restdocs in combination with https://github.com/jayway/rest-assured to test the Controller.\nThe target folder of the generated request and response example files must be _\"create_a_quota\"_.\n\n``` java\ngiven().contentType(ContentType.XML).body(storageQuota).resultHandlers(document(\"create_a_quota\")).\nwhen().put(\"/quotas\").\nthen().statusCode(204);\n```\n\nThe output directory is configured as follows:\n\n```\nio.restdocumented.outputDir = docs/generated\n```\n\nThe Swagger2MarkupConverter must know the output directory of spring-restdocs.\n\n``` java\nSwagger2MarkupConverter.from(\"http://localhost:8080/api-docs\").\n                withExamples(\"docs/generated\").build()\n                .intoFolder(\"src/docs/asciidoc\");\n```\n\nThe Swagger2MarkupConverter searches for a Swagger ApiOperation with value: _\"Create a quota\"_ in a folder called _\"docs/generated/create_a_quota\"_  for example files and includes the request.asciidoc and response.asciidoc files, if they are available.\n\nNow my question: Could you please enhance spring-restdocs so that it can generate AsciiDoc and/or Markdown files? Maybe configurable via gradle? That would be great. In that way, I could generated AsciiDoc and Markdown documents with examples.\n\nKind regards,\n\nRobert Winkler\n\nPS:\nThe Converter can also include JSON and XML Schema files.\n\n``` java\nSwagger2MarkupConverter.from(\"http://localhost:8080/api-docs\").\n                withMarkupLanguage(MarkupLanguage.MARKDOWN).\n                withExamples(\"docs/generated\").withSchemas(\"docs/schemas\").build()\n                .intoFolder(\"src/docs/markdown\");\n```\n\nI create the Schemas files in Unit-Tests as follows:\n\n``` java\n        RestDocumented restDocumented = RestDocumented.fromProperties();\n        restDocumented.documentJsonSchema(MailStorageQuota.class, \"docs/schemas\");\n        restDocumented.documentXmlSchema(MailStorageQuota.class, \"docs/schemas\");\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75047815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75055992", "body": "@wilkinsona  @glaforge \nHave a look at https://github.com/jbake-org/jbake to generate a HTML documentation with Markdown or AsciiDoc. The project can be compared to Jekyll, but runs on the JVM. The project Griffon uses JBake for its documentation: http://new.griffon-framework.org/\n\nThen there is a nice Markdown Gradle plugin which uses Pegdown.\nhttps://github.com/aalmiray/markdown-gradle-plugin \n\nFor generating AsciiDoc and Markdown output you can reuse my DocumentBuilder from Swagger2MarkupConverter. If you like, i can extract it and make it an own library. \nHave a look at it. It can also create Tables and source code listings.\n\n``` java\nDocumentBuilder builder = DocumentBuilders.documentBuilder(MarkupLanguage.ASCIIDOC);\nbuilder.documentTitle(\"Test title\").textLine(\"Text line\").writeToFile(\"/tmp\", \"test.adoc\", StandardCharsets.UTF_8);\n\nDocumentBuilder builder = DocumentBuilders.documentBuilder(MarkupLanguage.MARKDOWN);\nbuilder.documentTitle(\"Test title\").source(\"Java code\", \"java\").paragraph(\"Long text paragaph with line breaks\").writeToFile(\"/tmp\", \"test.adoc\", StandardCharsets.UTF_8);\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75055992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75057938", "body": "Btw. when you use http://www.mkdocs.org/ and http://readthedocs.org/ together, yon don't have to install Python. Only if you want to preview your changes on a local server.\n\nI love the readthedocs theme:\nhttp://supervisorclusterctl.readthedocs.org/\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75057938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75059082", "body": "Then feel free to copy what you need :)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75059082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75075024", "body": "MarkupDocBuilder is extracted now.\nhttps://github.com/RobWin/markup-document-builder\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75075024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/76352259", "body": "How about using something like [RAML](http://raml.org/index.html) or [Swagger.yaml](http://editor.swagger.io/#/) to specify and document your API and check you tests against the specification?\nSee this blog post for an example:\nhttp://www.insaneprogramming.be/blog/2014/08/18/rest-documentation-specification/\n\nSee projects: https://github.com/nidi3/raml-tester-uc-spring and https://github.com/nidi3/raml-tester\n\nI love this idea. I like it more than specifying and documenting the API in the unit test directly.\n\nYou could create an AsciiDoc document from RAML or Swagger and just include the examples from spring-restdocs. See [swagger2markup](https://github.com/RobWin/swagger2markup). Just my 2 cents.\n\nI know. This does not support HATOES yet.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/76352259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94256340", "body": "@Pytry Have a look at https://github.com/RobWin/swagger2markup now\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94256340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "andreasevers": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/67740804", "body": "Would it be possible for the restdocs project itself to be mavenized as well?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/67740804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/68859187", "body": "I second this request. Manually putting this in our corporate nexus works but it would be much easier if it would be in a public repo such as the spring or mavencentral repo.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/68859187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/69232470", "body": "Awesome! Thanks for the effort @wilkinsona.\nWe will be using this in our new architecture.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/69232470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75747071", "body": "I've started implementation of this in a fork.\nCan I create a pull request with my current implementation for review?\nI've reused a lot of the logic for the links.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75747071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75873233", "body": "How a possible example using the implementation in the pull request would look like:\n\n``` java\nmockMvc.perform(MockMvcRequestBuilders.post(\"/cat\").header(\"Content-Type\", \"application/json\").content(\"{\\\"name\\\":\\\"garfield\\\", \\\"whiskers\\\":150}\"))\n            .andDo(document(\"cat\")\n                    .withRequestFields(\n                            fieldWithName(\"name\")\n                                .description(\"The name of the cat\")\n                                .type(String.class)\n                                .constraints(\"Should be a cat-like name. 250 chars max\")\n                                .required(true),\n                            fieldWithName(\"whiskers\")\n                                .description(\"The amount of whiskers the cat has\")\n                                .type(Integer.class)\n                                .constraints(\"Should be more than 10 and less than 1000\")\n                                .required(false)));\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75873233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75969591", "body": "Okay, done!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75969591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/76169688", "body": "Thanks for the comments. I feel like I'll learn a lot from these remarks :)\nThis weekend I'll make all the changes and update the pull request!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/76169688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/77125463", "body": "For request body fields it seems useful to document the fields a client has or can pass.\nFailing the test if not all the fields are documented is in this case a good idea to make sure the documentation stays up-to-date.\n\nBut for the response body it seems overkill to fail the test when not all the fields are documented. Especially if there are embedded resources this could be a fairly big chunk of documentation in the unit test, while not all developers may want to go about documenting every single field the service could return. They could instead be happy with the response example.\n\nWhat would your preference be in this case?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/77125463/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/77226021", "body": "Alright, can do.\nJust confused about the following parts:\n\n> When the user has opted to document some fields I think it's reasonable, at least initially, for the test to pass or fail based on the same criteria as the link documentation support. If it becomes clear that this is too strict, then we can relax both at the same time.\n\nThis conflicts in my opinion with:\n\n> This is probably the level I'd go to, with the documentation for _embedded.contacts and _embedded.website being nothing more than a link to the documentation for the contacts and website resources respectively.\n\nIf I understand the link documentation criteria, all the field paths of the response should be gathered, and compared with the documentation. If the same is applied here, the test would fail in your scenario I think. It would expect _embedded.website.id or _embedded.website.url to also be documented.\n\nWhere would the recursive check draw the line? Should we have some more intelligent logic to check if one of the fields of a certain depth-level is documented, all those fields on that level should be documented?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/77226021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/79304401", "body": "I've updated the pull request with all the changes you requested.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/79304401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/85604903", "body": "Great, thanks Andy!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/85604903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/114061017", "body": "Oh no problem, I'm subscribed anyway :)\n\nI'll for sure try this out. It seems like a way easier approach than what I was using as of now.\n\nWhen I'm done I'll try to showcase the eventual solution which should be pretty nice in the HAL browser.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/114061017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/137056714", "body": "Thank you for considering this enhancement. I will soon create a PR in a similar way the support for request and response fields were designed.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/137056714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/25556049", "body": "I agree.\nFor inspiration I took a closer look at how the [HAL specification](http://stateless.co/hal_specification.html) calls these fields. \nThe HAL model is making the distinction between links, embedded resources, and plain old state (more specifically called \"your bog standard JSON or XML data\").\nSo I moved the \"fields\" classes to org.springframework.restdocs.state.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/25556049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jhiemer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/68747769", "body": "Yes, that would be awesome, as I am really interested to test spring-restdocs.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/68747769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/69229851", "body": "thx @wilkinsona.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/69229851/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "tsweets": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/71522512", "body": "Doesn't look like the repo has the latest code\nhttps://repo.spring.io/snapshot/org/springframework/restdocs/spring-restdocs-core/0.1.0.BUILD-SNAPSHOT/\n\nLast version is from 1/8 which is before your commit. \nThat's why the compile is failing on my side, its grabbing an older restdocs-core.\n\n--Tony\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/71522512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Pytry": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/73937322", "body": "This got me thinking about a possible situation. Assume I have a suite of applications that currently uses swagger for all it's documentation. I would like to be able to improve the documentation, but there may not be time nor budget for making huge sweeping changes in our documentation process.\n\nWhat is the conceptual approach that a user of either of these projects should take towards adoption into or migration away from such an environment?\n\nWould I be able to gradually incorporate the product, or would I have to make sweeping changes to get any value from them?\n\nAssuming I cannot move completely away from swagger, would either project be able to add hypermedia support? \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/73937322/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74329174", "body": "Would something like this be appropriate for a \"boot-starter\" or Gradle plugin perhaps?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74329174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/77160270", "body": "I always like to have options. \n\nThe developer should be able to decide when and how a test fails.\n\n> On Mar 4, 2015, at 3:46 AM, Andreas Evers notifications@github.com wrote:\n> \n> For request body fields it seems useful to document the fields a client has or can pass.\n> Failing the test if not all the fields are documented is in this case a good idea to make sure the documentation stays up-to-date.\n> \n> But for the response body it seems overkill to fail the test when not all the fields are documented. Especially if there are embedded resources this could be a fairly big chunk of documentation in the unit test, while not all developers may want to go about documenting every single field the service could return. They could instead be happy with the response example.\n> \n> What would your preference be in this case?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/77160270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "andrewmerc21": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74631384", "body": "okay, sure\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74631384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74653508", "body": "Hi, can you please specify which project should I choose in the CLA form? There is no option for restdocs.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74653508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74833229", "body": "Okay thanks. I've signed it. My confirmation number is 108220150217110755\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74833229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74883281", "body": "Yeah sure. I'll update it soon.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74883281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75374075", "body": "I've created new pull request, for this feature.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75374075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "gregturn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74770860", "body": "Fork the repo and make your branch off that. Then you can PR from your own branch. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74770860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "kurron": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74864797", "body": "Thanks. I'll give that a try.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/74864797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "glaforge": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75055450", "body": "pegdown is pretty good\nhttps://github.com/sirthias/pegdown\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75055450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ngandriau": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75595600", "body": "Thanks for the explanation Andy\nI was not sure why the `ApiDocumentation.errorExample` was different.\nThis limitation is not a blocker for the documentation. \nI need to learn more about the Spring MVC test.\n\nAny idea when spring-restdocs will be released?\n\nThanks again\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75595600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "tarundatascientist": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75600964", "body": "Thank You for informing. Are there any plans to test with Spring 4.0 and/or with v3.2 and above?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/75600964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "TomRK1089": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/76695044", "body": "I tried that first, with no luck, hence why I assumed I needed separate calls to `param` (hadn't used MockMvc before now).\n\nDigging a little more into the code, I see\n\n```\nthis.writer.print(String.format(\"curl %s://%s:%d%s\", request.getScheme(),\n                request.getRemoteHost(), request.getRemotePort(),\n                request.getRequestURI()));\n```\n\nin the `CurlRequestDocumentationAction` class. Seems like the query string is omitted from the format string as it's built up. Any technical reason for this, or is it just an oversight? If the latter, I'll try to throw together a pull request.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/76695044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/76695724", "body": "Aha, thanks!\nOn Mar 2, 2015 6:20 AM, \"Andy Wilkinson\" notifications@github.com wrote:\n\n> That looks like your missing the changes made in 6bdd60c\n> https://github.com/spring-projects/spring-restdocs/commit/6bdd60cda6760184b66272502d70c8023febfc2a.\n> Perhaps you need to give Maven or Gradle a nudge to get it to refresh\n> snapshot dependencies?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/spring-projects/spring-restdocs/issues/26#issuecomment-76695603\n> .\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/76695724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/77285863", "body": "Took a look at Artifactory on repo.spring.io -- looks like that commit isn't in the most recent snapshot. Still, glad to know it'll be in the next update.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/77285863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "yleguern": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/77592877", "body": "I've just created a Pull Request to fix this.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/77592877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/81634388", "body": "I just did.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/81634388/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/81729163", "body": "Thanks for the merge.\nBut why did you remove the logic for `POST` requests ?\nI think it's especially interesting in case of `POST` requests because I can't see no workaround to document `POST` requests with parameters : \n\n``` java\nthis.mvc.perform(MockMvcRequestBuilders\n  .post(Constants.URL_GET_TOKEN)\n  .param(PARAM_USERNAME, \"user\")\n  .param(PARAM_PASSWORD, \"userpwd\"))\n  .andExpect(status().isOk())\n  .andDo(document(\"retrieveTokenViaPost\"))\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/81729163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "MikeBra": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/77798495", "body": "The front end router takes requests and puts them on a AMQP message exchagne for the correct tenant. We then have a service that takes messages off the queue and routes them to the correct RequestMapping service. From the perspective of the service it doesn't know about the front end router that is doing the dispatching to the proper tenant so we can't address this by adding it to the mapping. \n\nAdding the suggested optional prefix seems like the most flexible solution. Since it is optional it wouldn't impact existing users but would support more sophisticated routing of requests in a multi-tenant architecture.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/77798495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "davidgoate": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/85534835", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/85534835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/85567829", "body": "@firefoxNX Hi, thanks for the reply. Yes this would fix that problem, however, this was just one aspect of my issue with this.\n\nI don't think the context path or difference in error handling is down to the missing security filters?\n\n It begins to feel like one has to understand all of the differences between MockMVC and a real WebAppContext so that you can begin to copy or inject the config into MockMVC yourself when you have a perfectly good full blown context sitting there doing nothing.\n\nDon't get me wrong, I like the concept of where this is going and it is a great start given this is so young and not even at its first release yet. I just feel like in scenarios where you do have easy access to a container, isn't it easier to use this rather than mock something that is a bit like it - but not quite.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/85567829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/85593467", "body": "@rstoyanchev Thanks for the detailed response and all of the points you have made. \n\nI think the `defaultRequest` method should do the trick so thanks for that. The only slight issue is, if I understand correctly, I have to do `MockMvcRequestBuilders.request(method, uri)` which means I need to add each endpoint I might test manually. There doesn't seem to be an obvious way for me to just say, \"for any request issued by this MockMvc instance use this context path\".\n\nJust to address your point\n\n> but then again you'd have to generate your documentation against the actual host of your REST API, which isn't ideal either.\n\nThe idea here is that I would still use something like `localhost:8080` but I would set a context path. With Spring Boot I use `server.context-path=/api`. There wouldn't be a need to necessarily produce CURL commands that point at the live environment on `https://myhost/api`. The important thing is that since this tool makes it so easy to produce sample CURL commands for the documentation it would be nice if I can ensure that the context path is set so that they can just be copy/pasted and run against a dev instance or even local machine. Perhaps this could even be added as an option to the `org.springframework.restdocs.config.RestDocumentationConfigurer` with a `withPathPrefix` method or similar so that and CURL commands include the path prefix.\n\n:+1:  for the Spring Boot specific MockMvcBuilder I think that this would take away some of this pain.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/85593467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/86904961", "body": "@wilkinsona ouch! I do take your point. For sure libraries and languages can often be abused in interesting and sometimes unbelievable ways ;) \n\nThis suggestion really grew out of a desire to find a good way to document request body constraints in a way that is; easy for someone to understand, doesn't bloat the documentation too much and doesn't require developers to duplicate descriptions of declarative rules. \n\nSure, I can write tests that violate lots of different rules ( and if my response body conatins more descriptive messages that just \"400 bad request\", this will ensure that a meaningful response body ends up in the documentation), but as I pointed out above, I don't feel like this is good way for people to consume this data...\n\nIn my precise use-case JSON is the interchange format of choice, so I know there are [solutions](https://github.com/fge/json-schema-validator) out [there](https://github.com/FasterXML/jackson-module-jsonSchema) that might help document things like the schema. Some of these also support things like required and min/max lengths and so on. But, again these require additional annotations.\n\nIt'd be great to find a solution that can document the request body and the basic constraints without resorting to duplicating annotations or adding new ones just for the purpose of documentation. I understand not everyone will use bean-validation but, to me at least, supporting these seems like a fair idea since a standard library exists. I'd be keen to hear other ideas about the _best_ way of doing this and thanks again for taking the time to read and consider this suggestion.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/86904961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "firefoxNX": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/85563029", "body": "Can you take a look at http://stackoverflow.com/questions/14561235/spring-mvc-integration-tests-with-spring-security Rob Winch's answer?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/85563029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/86309998", "body": "\ud83d\udc4d\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/86309998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rstoyanchev": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/85587647", "body": "Spring Security has a more recent integration with Spring MVC Test. Take a look here https://spring.io/blog/2014/05/23/preview-spring-security-test-web-security.\n\n> This means that if an app is always run on a path such as \"/api/\" e.g. \"https://myhost/api/\" there doesn't seem to be a way for the documentation to be aware of the \"/api\" path meaning all sample CURL requests won't work.\n\nThere is a `defaultRequest` method on the MockMvcBuilder that you can use to set up any host and/or context path you'd like to appear. Yes it's not the same as running against an actual container but then again you'd have to generate your documentation against the actual host of your REST API, which isn't ideal either.\n\n> When using Spring Boot (or for any situations where it's just as easy to get a full embedded container up and running) there is arguably no need for MockMVC, and I believe it actually can do harm.\n\nYou have a point here although I believe this has more to do with the overall strategy for testing. Yes integration tests are the ultimate test of everything but there is a reason why unit tests have a place in an overall testing strategy. \n\nSpring MVC Test falls somewhere in between integration and unit testing. It's another option in the tool chest. In fact the different builders (standalone vs webAppContext) provide multiple options on the scale between integration and unit testing -- loading the actual Spring configuration vs testing one controller at a time. \n\nFull integration tests can be harder to reason about and debug as there are more moving pieces and it takes longer to execute which can really add up if you web layer does things that call to other services for example. Spring MVC Test can test the controller web layer in isolation. You can write more nuanced tests that verify more things on a more fine-grained level. It doesn't replace the need for integration tests but it has a role as part of an overall strategy. \n\nI do think you have a very valuable point in that Spring Boot does quite a few things for web applications out of the box including the registration of Servlet filters, error handling, and many others. There is a much larger gap to fill when using Spring MVC Test in a Spring Boot application to understand what you should add manually. I think what we need is a Spring Boot specific MockMvcBuilder.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/85587647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "theonlyguills": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/85992049", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/85992049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ghost": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/86340110", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/86340110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "yohanliyanage": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/86645738", "body": "Thanks for the quick response. I am trying to add XML based examples in addition to the JSON based examples to my documentation. I'm not doing HATEOS, so I believe LinkExtractor is not relevant in my case.\n\nWhen I try to extract response fields from the payload as follows, it seems like the FieldValidator is expecting JSON instead of XML.\n\nUnit Test Code:\n\n```\n    this.mockMvc.perform(get(\"/api/v1/users\").accept(MediaType.APPLICATION_XML))\n        .andExpect(status().isOk())\n        .andDo(document(\"users-list-example\")\n                .withResponseFields(\n                        fieldWithPath(\"content\").description(\"An array of <<resources-user, User resources>>\"),\n                        fieldWithPath(\"total\").description(\"Total records found\"),\n                        fieldWithPath(\"pageSize\").description(\"Size of a single page\"),\n                        fieldWithPath(\"page\").description(\"Current page number (zero based)\"),\n                        fieldWithPath(\"pages\").description(\"Total number of pages\")\n                ));\n```\n\nTest Failure:\n\n```\n    com.fasterxml.jackson.core.JsonParseException: Unexpected character ('<' (code 60)): expected a valid value (number, String, array, object, 'true', 'false' or 'null')\n     at [Source: java.io.StringReader@6621a4ef; line: 1, column: 2]\n        at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1419)\n        at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:508)\n        at com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:437)\n        at com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(ReaderBasedJsonParser.java:1462)\n        at com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:683)\n        at com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:3105)\n        at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3051)\n        at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2184)\n        at org.springframework.restdocs.payload.FieldValidator.validate(FieldValidator.java:45)\n        at org.springframework.restdocs.payload.FieldSnippetResultHandler.handle(FieldSnippetResultHandler.java:72)\n        at org.springframework.restdocs.snippet.SnippetWritingResultHandler.handle(SnippetWritingResultHandler.java:51)\n        at org.springframework.restdocs.RestDocumentationResultHandler.handle(RestDocumentationResultHandler.java:63)\n        at org.springframework.test.web.servlet.MockMvc$1.andDo(MockMvc.java:158)\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/86645738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jtheuer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/86926580", "body": "I like this idea very much and supporting a subset of the existing annotations (like Notnull, Regexp, Min, Max, Length ..) should work for 99% of the users.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/86926580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mayboroda": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/93736803", "body": "Hi, do you have any description what is expected to have in the end of the task?\nI can think of:\n- apply gradle-asciidoctor plugin to generate docbook\n- apply spring-docbook plugin to generate 4 entries for the documentation\n- write the documentation\n\nI think the last bullet has to be specified more accurate: chapters, sub-chapters\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/93736803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94416428", "body": "I knew about asciidoc PDF support in alpha that is why I was thinking about docbook (I'm doing the same on my current project). Also I found an interesting plugin for docbook https://github.com/spring-gradle-plugins/docbook-reference-plugin and it's great cause it's making 4 artifacts in the end:\n- html\n- single-html\n- pdf\n- epub\n\nThat is already branded with spring leaf in background :) (BTW it's used in many spring projects: spring-integration for sure)\n\nAnd yeah, I can help as long as my English is acceptable :)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94416428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/95930485", "body": "cool, that's what I wanted to hear :)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/95930485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125548435", "body": "Thanks, already got an email about your commits. Thank you very much for this improvement. I didn't have time to finish my version of this issue, but I've also created an BaseDescirptor :)\nNow I can remove all the custom stuff I had and use this out of the box.\nThanks again.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/125548435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "tommyb82": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/93986525", "body": "Ah!  Apologies, yes of course, makes perfect sense.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/93986525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "bismoy2013": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/93987186", "body": "Hmmm that makes things much clear now . Thanks :)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/93987186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/93993114", "body": "Ah sure, that Java 7 thing will certainly help those who still didn't update their Java version .\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/93993114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dewet22": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94176268", "body": "Ugh, I didn't want github to merge the two commits into one pull request. Let me know if you want me to split them out or not.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94176268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94272598", "body": "Certainly, I'll submit two new PRs.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94272598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94413995", "body": "I've been thinking about this too, and I agree. We even have a need where we want to filter out headers from the response (for instance, it isn't useful documenting things like Cache-Control, Pragma or X-Frame-Options in every request). So a ResponseFormatter would be a useful abstraction where we can fine-tune exactly how headers are filtered and response bodies are formatted.\n\nI agree that a single snippet is fine -- I was hoping to do that but because `documentHttpResponse` gets added to the list of delegates in the constructor, it is harder to fine-tune. Do you think the default set of delegates should be configurable? Or maybe this point becomes moot when we can inject our own ResponseFormatter.\n\nLet me take another look at this and get back to you.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94413995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/97805921", "body": "Thanks, I have been playing with it since I saw the commit -- it is looking very good right now. As soon as I've converted over all of our current documenting actions, I'll get back with any feedback.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/97805921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "AGoliath": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94384118", "body": "@openwms  you beat me to it, I was about to raise the same issue (haven\u00b4t prepared a pr yet, though). I don\u00b4t know if `startsWith` would work, though, since it would also match on application/json+something.  I\u00b4d rather `StringUtils.substringBefore(contentType, \";\")` and then make an equals-comparison\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94384118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/123783036", "body": "+1 for getDocumentedPath\n\nI was about to start looking into it, but stopped once I saw how get() merges path parameters.\nAdding a getDocumentedPath() would allow the change to be only in spring-restdocs and no need for changing mock-mvc If I\u00b4m not mistaken, so that would be a clear plus for me.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/123783036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "openwms": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94396319", "body": "Perfect @wilkinsona . Fully agree with @AGoliath about the strictness. Sorry for the wildcard imports, thats a default behaviour of IntelliJ\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94396319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94493272", "body": "Hey @wilkinsona please have a look at the updated 2 classes\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/94493272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jdpgrailsdev": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/97453160", "body": "@wilkinsona I have signed the CLA (confirmation #84320140613071640).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/97453160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ccit-spence": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/100437554", "body": "Your right, that was my confusion.  The maven idea was somehow thinking that might be a way to create a docs site.  Not that it was a good idea.\n\nI could see using Zuul to route to the docs and maybe setting up a central docs UI with links to each services set of docs.  \n\nThe main thing is I am finding centralized documentation to be a bit of a challenge with Microservices.  I like the idea of keeping docs with each service; then providing a central UI to access them.  \n\nIn the example you listed.  I assume you have a route in the gateway that would like like this `/api/service/**` then within the api you have a static directory/resource `/api/service/docs` which would be the docs for each service.  \n\nFor the centralized doc service have it utilize service discovery for listing docs for each service.  This could then span to other none REST services if the same structure is implemented.\n\nThis sound close to the right track?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/100437554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/100448805", "body": "We will start working on this this week and see how it turns out.  Sounds like it should actually be fairly simple.  Seems as though the key is Discovery to include services within the main docs.  Otherwise a point of contention will be hard coding everything.\n\nI have not tried anything with Restdocs yet, does it support things like Feign and RestTemplate?  My assumption is that each `rel` can be defined in the Mock setup.  \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/100448805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "fabriciocolombo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/101368564", "body": "I running on Windows 7 x64, and default Charset is windows-1252, but source code is UTF-8. I currently work around setting the file.encoding to UTF-8 in my GRADLE_OPTS.\nIt would be nice to have a setting for this.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/101368564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/102496922", "body": "Thank you\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/102496922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "gkaran": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/102026644", "body": "I'm using `org.springframework.restdocs:spring-restdocs:0.1.0.BUILD-SNAPSHOT`.\n\nI tried removing the library and adding it back, but again I get the old version.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/102026644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/102028715", "body": "It seems that IntelliJ IDEA was keeping a cached version somewhere. Removing this worked like a charm. Sorry for this.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/102028715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "juicegit": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/106925296", "body": "This looks to have been removed. Can someone please confirm? I set a request field as optional and regardless, I only get 3 attributes for each field (path, description, and type). It looks like this code was removed in a subsequent commit.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/106925296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/108013406", "body": "@wilkinsona thanks for the reply. That is what I have done \"for now\" :). Are there plans to support that as a discrete column in the output? I realize that it might be the exception case. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/108013406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kellen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/110814923", "body": "Yep!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/110814923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/123216563", "body": "One super-simple templating solution would be to use commons' [StrSubstitutor](http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/text/StrSubstitutor.html), though I suppose that's less spring-y than using SpEL...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/123216563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "vicmosin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/114435995", "body": "I totally agree that it's more asciidoctor's issue rather then restdocs. Just didn't know thus syntax. Thank you very much.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/114435995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kenblair": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/114618249", "body": "Interesting as a workaround at least.\n\n> Have you thought about what the API would look like for specifying the title?\n\nI haven't had as much time to look at the code as I'd like.  For our purposes I simply added title to the AsciidoctorWriter as an option and then passed it along the entire chain to see if I liked the result.  I do like the result but I don't consider that a good approach. \n\nLooking through code it occurred to me that there's more than a few aspects (file name, extension, directory name) that I'd love to see configurable which are basically hardcoded currently.  Some refactoring and exposing configuration (I'm not sure how yet) could open up quite a few options.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/114618249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mhuffman-r7": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/115027036", "body": "I agree with the suggestion, and have run into a set of related use cases. Not sure it is best to create a new ticket, or append to this one. In general, allowing for extensible design, such as protected fields, would be a **huge** improvement. So far I am extremely happy with the features of the library and giving consumers more \"seams\" to extend would go a long way to spread adoption.\n\nOne of the things we do in our APIs is provide support for multiple versions of an API at the same time. To avoid the natural copy/paste style inherent to Spring-MVC we generally use AOP techniques to manage the version boundaries (e.g. annotations). This means that when we run our tests using mock mvc we are using a JUnit rule to cause the test to be evaluated multiple times, once for each version that we dictate the test to be supported for. This is particularly useful when an API is present in multiple versions, but does not change its behavior, which is the most common case for us.\n\nTo customize restdocs to our needs, I would love to be able to do two things:\n\n##### Custom Output File Resolver\n\nThe parameterized formats such as `{step}` are great, but not quite flexible enough to handle more sophisticated test conventions. `OutputFileResolver` would be a great seam to customize along, but it is package-private and the `SnippetWritingResultHandler` doesn't support injecting a different resolver implementation. Perhaps a simple interface would do the trick, but it may also require a commensurate adjustment to `RestDocumentationContext`.\n\n##### Custom Result Handlers\n\nOne extension that I would like to make is registering a custom `ResultHandler` within the `RestDocumentationResultHandler`. In my case, I'd like to output another `adoc` document that indicates which versions of the API are supported by a particular endpoint. This would do a lookup of my custom AOP-driven metadata. Unfortunately, the class `RestDocumentationResultHandler`is public but is not extensible because the list of delegates is private, rather that protected. Alternatively, a public method to append the delegate would be sufficient.\n\nWould you recommend that we look to contribute pull-requests for these enhancement ideas? If so, I want to make sure it aligns with the architectural direction intended.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/115027036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/115274538", "body": "@wilkinsona For \"Custom output file resolver\" that sounds great. I do see that the context is going to be a bit tricky, as its using a thread-local-like design pattern. In my experience these patterns are tricky to extend, particularly because of the static singleton calls.\n\nAs far as the \"Custom result handlers\", agree it should be pretty easy. The only thing that may not be clean is the handling of the output directory. An adapter may be desirable here so that the handler registered with the `RestDocumentationResultHandler` inherits its output directory.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/115274538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ne-kellen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/115217993", "body": "> What do you mean by \"in several steps\"?\n\nI have an API in which there are always certain fields and links. For example, I always provide a `links` field and always provide a `self` and `discovery` link. Each call to the API has additional fields and links.\n\nSo, what I want is to be able to do `document(...).withLinks(defaultLinks()).withLinks(customLinks())`\n\nDue to the way the `delegates` are handled in `RestDocumentationResultHandler`, if I call `withLinks` with only a _partial_ description of the links on the response, and the resulting `LinkSnippetResultHandler` will throw an exception during processing.\n\n>  Why are you adding them, if it then means that they then need to be overridden?\n\nThere's lots of endpoints with similar fields, so I want to be able to define a global set of fields, links, and parameters but then override these if necessary. e.g.\n\n```\npublic LinkDescriptor[] defaultLinks() {\n    return new LinkDescriptor[] {\n        linkWithRel(\"foo\").description(\"bar\"),\n        // ...\n    };\n}\n\n// ...\n\ndocument(...).withLinks(defaultLinks()).withLinks(linkWithRel(\"foo\").description(\"BAR\"));\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/115217993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/115245589", "body": "Right. My solution was to implement `ResultHandler` and change the definition of `withLinks:\n\n```\n    protected Set<LinkDescriptor> linkDescriptors = new HashSet<>();\n\n    public RestDocumentationResultHandler withLinks(LinkDescriptor... descriptors) {\n        Collections.addAll(linkDescriptors, descriptors);\n        return this;\n    }\n```\n\nThen I only add the delegate when `handle()` is called:\n\n```\n    @Override\n    public void handle(MvcResult result) throws Exception {\n        List<ResultHandler> delegates = new ArrayList<>();\n        // ...\n        if (!linkDescriptors.isEmpty()) {\n            delegates.add(documentLinks(this.outputDir, null, linkDescriptors));\n        }\n        //...\n        for (ResultHandler delegate : delegates) {\n            delegate.handle(result);\n        }\n    }\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/115245589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Endron": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/118030475", "body": "Just realized this does in fact not work.\nI need the tests to be completed to have the snippets. And I can not run tests without processing the resources.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/118030475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sg-ad": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/118385650", "body": "Sure!  I'll clean it up a bit and will share soon.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/118385650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/130367657", "body": "Hi @johanhaleby !\n\nIt's interesting you should mention that, because I had precisely the same need a few months ago.  I was in love with the idea of Spring Restdocs, but needed it to work with REST Assured.  I also added some tidbits of functionality that weren't supported at the time (Spring Restdocs has evolved since I originally forked it and I needed support for path parameters).  \n\nThe challenge that I had was decoupling the code from Spring's `MvcResult`.  Unfortunately, REST Assured doesn't yet offer as rich of a result object, and the things a REST Assured filter has access to are very limited.  To get a \"rich\" access, I had to go down to the level of the HTTP client.  Fortunately, REST Assured allows you to do this in a fairly straightforward fashion by modifying the config to introduce your own factory:\n\n``` java\nRestAssured.config = RestAssured.config()\n    ...\n    .httpClient(HttpClientConfig.httpClientConfig().httpClientFactory(new RestAssuredDocumentingHttpClientFactory()))\n    .decoderConfig(decoderConfig().noContentDecoders().defaultContentCharset(\"UTF-8\"))\n    .encoderConfig(encoderConfig().defaultContentCharset(\"UTF-8\"));\n```\n\nAll the new `RestAssuredDocumentingHttpClientFactory` factory does is add request and response interceptors which give me access to most of the useful information, with one exception:  I can't get my hands on the OAuth information because it is added by an internal interceptor added by REST Assured in such a way that it will always run after any interceptor I might add.  It makes sense, because you wouldn't want to allow tampering of the request after it gets signed, but in my case it's quite unfortunate.  Ideally one could still intercept it but the request would be wrapped in a way to make it immutable.  Anyway, that's another discussion... :)  Another limitation is that while it is thread-safe, it won't support asynchronous calls but I find that is rarely a need for tests.\n\nTo keep the usage similar to that of Spring Restdocs, I introduced a simple REST Assured filter and kept the static approach for a `document` method.  The result looks like this:\n\n``` java\ngiven()\n    .filter(document(\"subscriptions-delete-example\")\n        .withRequestPathParams(pathParam(\"subscriptionId\").description(\"ID of subscription to cancel.\")))\n    .auth().oauth(APPLICATION_OAUTH_KEY, APPLICATION_OAUTH_SECRET, \"\", \"\")\n    .when()\n        .pathParam(\"subscriptionId\", newCompanyEntitlement.getUuid())\n        .delete(\"/api/v1/subscriptions/{subscriptionId}\")\n    .then()\n        .statusCode(Status.NO_CONTENT.getStatusCode());\n```\n\nThe next difficulty was that the `MvcResult` is passed around in a lot of internal pieces to Spring Restdocs; the `SnippetWriter`s after all need access to it.  This caused me to have to create a whole parallel structure where my new snippet writers would take Apache's `HttpRequest`, `HttpResponse` and `HttpContext` instead of `MvcResult`.  This quickly devolved in a lot of code replication where sometimes all that changed were the `import` statements.  That's basically what I described in #80 and was seeking suggestions.  What I would like to do is to somehow refactor it so that it could live next to Spring Restdocs and benefit from enhancements, or at least make those enhancements easily portable.  At the moment I haven't kept up-to-date with the latest releases of Spring Restdocs and it would be a real shame if this caused my implementation to go stale.\n\nAnyway, I think the right first step is for me to share my work as @wilkinsona suggested so that we can see where it might live - or, better yet, how it could best be refactored to \"come home\" to Spring Restdocs.  July was a bad month and I was also on vacation for a bit, but I'll endeavour to make something publicly available over the next few days to get your comments.\n\nCheers!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/130367657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/137548198", "body": "@wilkinsona and @johanhaleby I'd like to contribute as well.  Because my work was done on company time, I've been tangled up in a little bit of legal red tape that was exacerbated by the summer holidays.  It should get resolved this week and I can then show you were I got.  I'll take a look at the new changes that were made to see if it fits at all.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/137548198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/137766074", "body": "Hi @johanhaleby!  The difficulty I had with RestAssured was related to logging example requests.  I was hoping to show examples that were as close to reality as possible.  Because a `Filter` only sees request and response specifications, it can't provide information as to other headers that are added by the HttpClient (ex: keep-alive, host).  It also couldn't show OAuth related headers.  The result was that I could only capture \"partial\" examples, so to speak.  Granted, you could argue that headers that aren't in the specification might not contribute much to the documentation, but I found that it made it a bit nicer.  However, the one thing I could never get my hands on - even with my alternative approach - were the OAuth headers.\n\nI don't know how complicated it would be for RestAssured to provide post-response access to the _entire_ request and response, akin to what an `MvcResult` exposes.  That would allow one to log the whole request, including the OAuth headers, without exposing a tampering opportunity since it would only be available after the request completed.  Do you know if that would be easily feasible?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/137766074/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/137780573", "body": "@johanhaleby What I found is that since the HTTP client currently used by Rest Assured (RA) is an instance of Apache HTTP Client (AHC), I could use the functionality it exposes.  It allows you to register some `HttpRequestInterceptor` and `HttpResponseInterceptor`, similar to an RA `Filter` except that you can fully modify the request and response.  What I envision could be done is to have RA register a final interceptor that would take a snapshot of the request in its final form and store it in a container on the side.  Once the response comes back, another interceptor could take a snapshot of the response and store it in the same container.  This info container could be provided to user code a bit like `MvcResult` is.  The interceptor would have to be the last one to process the request, and the first one to process the response.\n\nThe interceptors are said to be executed in the order in which they are registered.  Since RA creates the AHC and doesn't easily expose it to manipulation, it could safely add that interceptor in as the last step.  However, one critical thing is that it should be added _after_ the `OAuthSigner` interceptor is added.  Currently it's the last one added (for a very good reason since you don't want the request to be modified after the signature has been calculated).  We would have to find a correct place in RA to add such an interceptor.  I'd be happy to help in this if you think it's a good approach.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/137780573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "niharay": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/120106634", "body": "Thanks for replying. I was missing the field's type in response fields after calling the optional method.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/120106634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/120117721", "body": "Thanks for your help.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/120117721/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/120147864", "body": "This removes the headers from the response. Is there anyway to remove the headers from the request before documenting it I dont want specific headers to be part of http-request.adoc?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/120147864/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "awendland": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/121705451", "body": "This would also be useful when a JSON payload is in the request and the cURL output includes a \"Content-Length: ...\" header. Though the Content-Length header should be sent in real client apps, it would be nice to be able to remove it from the cURL output for simplification of the example requests and so that it is easier for someone testing the API to modify the sample requests.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/121705451/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122040531", "body": "@wilkinsona I like that form of the URL because it is consistent with the `@RequestMapping` definition for Path Variables. Is it possible to modify the `MockHttpServletRequestBuilder` in a way for Spring REST Docs to retrieve it prior to modification? Or would their need to be some Spring REST Docs wrapper around the call, such as\n\n``` java\nmockMvc.perform(get(variableRequest(\"/{foo}/{bar}\", \"one\", \"two\")))\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122040531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122049672", "body": "This could also be utilized for more than just paths with variables in them. If it produces a snippet such as `GET /user/groups`, then the endpoint URL can easily be included in the documentation.\n\n``` adoc\nThe resource include::{snippets}/groups-get/path.adoc[] can be used to retrieve a User's Groups\n```\n\n``` adoc\nThe resource `GET /user/groups` can be used to retrieve a User's Groups\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122049672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mminella": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122042626", "body": "I'll be the first to admit that this corner of the framework is a bit of magic to me still.  However, what about something like:\n\n```\nRestDocumentationHandler handler = document(\"documented-foo\");\nmockMvc.perform(getDocumentedPath(\"/{foo}/{bar}\", \"one\", \"two\", handler)).andDo(handler...\n```\n\nObviously you could also have `postDocumentedPath`, etc.  This would allow you to intercept the values prior to modification and then delegate to the original `get` method.  While it's not quite as elegant as the original piece, it would work and is only needed for path variables.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/122042626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/130812366", "body": "I started trying to put together a PR for this (assuming I could crank it out quickly).  I had it working as an additional attribute in the path-parameters.adoc (just a source snip above the table) but writing a clean test for it tripped me up a bit.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/130812366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "rozhok": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/123736103", "body": "Thanks for blazing fast reply!\nI'm also wondering is it possible to document an empty array in response...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/123736103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/123750459", "body": "Many thanks! :+1: \nCan't wait until path variables will be supported.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/123750459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/126816189", "body": "Absolutely awesome! Thank you!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/126816189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "gauravbrills": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/127956934", "body": "Another scenario for the same shall be to hide basic auth details from curl snippets of secured endpoints.\nAlso have a wish if there would be something by which we can mask certain fields in responses .Though I think this can be taken care by dummy data but just one on my wishlist .\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/127956934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/129441165", "body": "ahh thanks @wilkinsona that will work .. \n\nAlso I had another point if you can add more meanigful types to the  FieldTypes enum for say LINKS ,href etc .. will enrich the docs as now they just populate as dumb Objects .\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/129441165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/130189368", "body": "@wilkinsona  ya that sounds apt .. Also the replacePattern actually masks the whole json response .What if what I want is to mask only values and not the field keys in the json ? \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/130189368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/130229818", "body": "@wilkinsona The issue is if I apply the pattern on some text then it shall match both values and keys and any other text in the json like links .As I want to mask only values so yes I think I will not be able to write a regex that only matches values . \n\nso say if my json is \n`\n{\n    \"glossary\": {\n        \"title\": \"example glossary\",\n        \"GlossDiv\": {\n            \"title\": \"S\",\n            \"GlossList\": {\n                \"GlossEntry\": {\n                    \"ID\": \"SGML\",\n                    \"SortAs\": \"SGML\",\n                    \"GlossTerm\": \"Standard Generalized Markup Language\",\n                    \"Acronym\": \"SGML\",\n                    \"Abbrev\": \"ISO 8879:1986\",\n                    \"GlossDef\": {\n                        \"para\": \"A meta-markup language, used to create markup languages such as DocBook.\",\n                        \"GlossSeeAlso\": [\"GML\", \"XML\"]\n                    },\n                    \"GlossSee\": \"markup\"\n                }\n            }\n        }\n    }\n}\n`\nand I apply some regex it will ideally mask everything \n\n`{\n    \"xxxxxxxxxxxxxxxx\": {\n        \"xxxxxxxxxx\": \"xxxxxxxxxxxxxx xxxxxxxxxxxxxxxx\",\n        \"GxxxxxxxxDxxxx\": {\n            \"xxxxxxxxxx\": \"S\",\n            \"GxxxxxxxxLxxxxxx\": {\n                \"GxxxxxxxxExxxxxxxx\": {\n                    \"ID\": \"SGML\",\n                    \"SxxxxxxAxx\": \"SGML\",\n                    \"GxxxxxxxxTxxxxxx\": \"Sxxxxxxxxxxxxxx Gxxxxxxxxxxxxxxxxxxxx Mxxxxxxxxxx Lxxxxxxxxxxxxxx\",\n                    \"Axxxxxxxxxxxx\": \"SGML\",\n                    \"Axxxxxxxxxx\": \"ISO 8879:1986\",\n                    \"GxxxxxxxxDxxxx\": {\n                        \"xxxxxxxx\": \"A xxxxxxxx-xxxxxxxxxxxx xxxxxxxxxxxxxxxx, xxxxxxxx xxxx xxxxxxxxxxxx xxxxxxxxxxxx xxxxxxxxxxxxxxxxxx xxxxxxxx xxxx DxxxxBxxxxxx.\",\n                        \"GxxxxxxxxSxxxxAxxxxxx\": [\"GML\", \"XML\"]\n                    },\n                    \"GxxxxxxxxSxxxx\": \"xxxxxxxxxxxx\"\n                }\n            }\n        }\n    }\n}`\n\nhence it wont be possible to make regex very restrictive only to values. Any suggestions\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/130229818/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "johanhaleby": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/130233047", "body": "My idea (although I'm not at all sure if it's feasible) is to integrate spring-restdocs with REST Assured using a <a href=\"https://github.com/jayway/rest-assured/wiki/Usage#filters\">filter</a>. A filter in REST Assured is similar to a Servlet filter in the sense that you can hook into the request and response and view/change its details. Since you have access to the request and response details I figure you ought to be able to delegate to spring-restdocs from within the filter. I imagine the REST Assured API looking something like this (off the top of my head):\n\n``` java\ngiven().\n       param(\"x\", \"y\").\n       filter(document(\"error-example\",\n                    responseFields(\n                        fieldWithPath(\"error\").description(\"The HTTP error that occurred, e.g. `Bad Request`\"),\n                        fieldWithPath(\"message\").description(\"A description of the cause of the error\"),\n                        fieldWithPath(\"path\").description(\"The path to which the request was made\"),\n                        fieldWithPath(\"status\").description(\"The HTTP status code, e.g. `400`\"),\n                        fieldWithPath(\"timestamp\").description(\"The time, in milliseconds, at which the error occurred\")))).\nwhen().\n        get(\"/resource\").\nthen().\n        statusCode(200);\n```\n\nwhere `document` is statically imported from a `rest-assured-spring-restdocs` module that uses `spring-restdocs` under the covers. I'm sure that there's a lot to workout for this to work flawlessly. For example when it comes to <a href=\"http://docs.spring.io/spring-restdocs/docs/1.0.0.M1/reference/html5/#documenting-your-api-request-response-payloads\">the path syntax</a>. REST Assured uses GPath (but it's unfortunaltey called JsonPath in REST Assured) whereas spring-test (MockMvc) uses the defacto json-path syntax developed by Stefan Goessner (and ported to <a href=\"https://github.com/jayway/JsonPath\">Java</a> by a colleague of mine). I'm planning to support the Goessner syntax as well in a future version of REST Assured but I like it to be pluggable. But anyway this is just an example of where it would be great if \"spring-restdocs-core\" didn't depend directly on <a href=\"https://github.com/jayway/JsonPath\">JsonPath</a> but rather provided an  SPI to extract values from the path. The \"standard\" `spring-restdocs` component could then depend on `json-path` and `spring-test` while `rest-assured-spring-restdocs` could depend on Groovy (for GPath) and `rest-assured` (instead of `spring-test`). \n\nI would be happy to participate and try things out if you're interested in taking this route but I'm sure that it'll be quite a lot of work just as @sg-ad suggested in issue #80. But I think it would be a great addition both for REST Assured and spring rest docs.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/130233047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/130390240", "body": "Thanks for some great input @sg-ad! I think it would be great if you could share your project and if you want to continue collaborating. May I ask what data you couldn't get a hold of from the REST Assured filter? I'll be happy to make changes to the FilterableRequest-/ResponseSpecification (as long as it doesn't break backward compatibility) if that would make things easier. I hope that we manage to solve this using only a filter since having to register a custom HttpClientFactory seem quite complex to me.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/130390240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/135623251", "body": "@wilkinsona Great news. Let me know if I can be of assistance.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/135623251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/137179904", "body": "@wilkinsona Could you point me in a direction where I should start looking if I want to integrate this with REST Assured?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/137179904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/137682868", "body": "@wilkinsona Just drop me a comment or mail and I'll try to help out\n@sg-ad Great that you want to help out as well.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/137682868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/137771356", "body": "@sg-ad I would very much like to log _all headers_ but I haven't found a way to do so. To my knowledge the only way to do it is to enable wire-level logging in Apache HTTP Client (AHC). Do you know if AHC has support for something similar to filters? Perhaps it would be possible to get a hold of the headers then? Was this why you provided your own HttpClient instance?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/137771356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/137911651", "body": "I like your idea.. Perhaps it could work if we create new RA `Filter` from which we get the AHC instance and register a `HttpRequestInterceptor` that extracts the header details and put them in the filter context? For example:\n\n``` java\ngiven().\n        filter((requestSpec, responseSpec, ctx) -> {\n            AbstractHttpClient ahc = (AbstractHttpClient) requestSpec.getHttpClient();\n            ahc.addRequestInterceptor((request, context) -> {\n                Header[] allHeaders = request.getAllHeaders();\n                ctx.setValue(\"ahc-headers\", allHeaders);\n            });\n            return ctx.next(requestSpec, responseSpec);   \n        }). ..\n```\n\nNow when the request comes back the headers should be present in RA's filter context. Would this help?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/137911651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138316322", "body": "@wilkinsona Cool! Glad to see that there the progress so far.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138316322/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "msoub": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/136791498", "body": "This enhancement would be much appreciated :+1: \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/136791498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jochenchrist": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/137133680", "body": "+1\nWould be nice to see.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/137133680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "steviemo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/137690190", "body": "Implement your own ContentModifyingReponsePostProcessor to strip the binary content from the respone.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/137690190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rwinch": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138790882", "body": "You are correct that there are other cross cutting concerns. I personally find that these cross cutting concerns are the most difficult things to document. This is particularly true when the result of one request needs to be included in most of (if not all) of the other requests.\n\nA concrete example with security is that when I authenticate I get back some token and that token needs to be included in every request. How is that documented? \n\nWhat is interesting to me is that despite being in the overview, the HTTP method is restated in the documentation. Will the documentation state that credentials need to be included in the request? Will it link to how to obtain the credentials? \n\nAt minimum adding samples like this would help improve the implementation. For example, master currently documents a curl example as:\n\n``` bash\ncurl 'http://localhost:8080/notes' -i -H 'Authorization: Basic dXNlcjpwYXNzd29yZA=='\n```\n\nObviously this is fine. However, ideally it should be documented as\n\n``` bash\ncurl -u user:password 'http://localhost:8080/notes' -i \n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/issues/comments/138790882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "olivergierke": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/comments/9391278", "body": "It might too much of a burden to pull in Spring HATEOAS actually has everything you'd need for this:\n- a `LinkDiscoverer` API\n- a basic JSONPath based `JsonPathLinkDiscoverer`\n- a `HalLinkDiscoverer` that basically configures the aforementioned with the adequate JSONPath expression\n- a `LinkDiscoverers` wrapper that will allow you to look up the `LinkDiscoverer` suitable for the media type returned for an `HttpServletResponse`.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/comments/9391278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "spencergibb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/comments/13113486", "body": ":+1: I was going to ask for this after spring one.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/comments/13113486/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "waqasrajab": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/comments/15485783", "body": "I am following these steps but getting the following exception on Centos, Could you advise whats causing this exception?\n- Exception is:\n  org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':asciidoctor'.\n  at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:69)\n  at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:46)\n  at org.gradle.api.internal.tasks.execution.PostExecutionAnalysisTaskExecuter.execute(PostExecutionAnalysisTaskExecuter.java:35)\n  at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:64)\n  at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:58)\n  at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:52)\n  at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:52)\n  at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:53)\n  at org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43)\n  at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:203)\n  at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:185)\n  at org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.processTask(AbstractTaskPlanExecutor.java:66)\n  at org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.run(AbstractTaskPlanExecutor.java:50)\n  at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor.process(DefaultTaskPlanExecutor.java:25)\n  at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter.execute(DefaultTaskGraphExecuter.java:110)\n  at org.gradle.execution.SelectedTaskExecutionAction.execute(SelectedTaskExecutionAction.java:37)\n  at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:37)\n  at org.gradle.execution.DefaultBuildExecuter.access$000(DefaultBuildExecuter.java:23)\n  at org.gradle.execution.DefaultBuildExecuter$1.proceed(DefaultBuildExecuter.java:43)\n  at org.gradle.execution.DryRunBuildExecutionAction.execute(DryRunBuildExecutionAction.java:32)\n  at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:37)\n  at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:30)\n  at org.gradle.initialization.DefaultGradleLauncher$4.run(DefaultGradleLauncher.java:154)\n  at org.gradle.internal.Factories$1.create(Factories.java:22)\n  at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:90)\n  at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:52)\n  at org.gradle.initialization.DefaultGradleLauncher.doBuildStages(DefaultGradleLauncher.java:151)\n  at org.gradle.initialization.DefaultGradleLauncher.access$200(DefaultGradleLauncher.java:32)\n  at org.gradle.initialization.DefaultGradleLauncher$1.create(DefaultGradleLauncher.java:99)\n  at org.gradle.initialization.DefaultGradleLauncher$1.create(DefaultGradleLauncher.java:93)\n  at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:90)\n  at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:62)\n  at org.gradle.initialization.DefaultGradleLauncher.doBuild(DefaultGradleLauncher.java:93)\n  at org.gradle.initialization.DefaultGradleLauncher.run(DefaultGradleLauncher.java:82)\n  at org.gradle.launcher.exec.InProcessBuildActionExecuter$DefaultBuildController.run(InProcessBuildActionExecuter.java:94)\n  at org.gradle.tooling.internal.provider.ExecuteBuildActionRunner.run(ExecuteBuildActionRunner.java:28)\n  at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)\n  at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:43)\n  at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:28)\n  at org.gradle.launcher.exec.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:77)\n  at org.gradle.launcher.exec.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:47)\n  at org.gradle.launcher.exec.DaemonUsageSuggestingBuildActionExecuter.execute(DaemonUsageSuggestingBuildActionExecuter.java:51)\n  at org.gradle.launcher.exec.DaemonUsageSuggestingBuildActionExecuter.execute(DaemonUsageSuggestingBuildActionExecuter.java:28)\n  at org.gradle.launcher.cli.RunBuildAction.run(RunBuildAction.java:43)\n  at org.gradle.internal.Actions$RunnableActionAdapter.execute(Actions.java:170)\n  at org.gradle.launcher.cli.CommandLineActionFactory$ParseAndBuildAction.execute(CommandLineActionFactory.java:237)\n  at org.gradle.launcher.cli.CommandLineActionFactory$ParseAndBuildAction.execute(CommandLineActionFactory.java:210)\n  at org.gradle.launcher.cli.JavaRuntimeValidationAction.execute(JavaRuntimeValidationAction.java:35)\n  at org.gradle.launcher.cli.JavaRuntimeValidationAction.execute(JavaRuntimeValidationAction.java:24)\n  at org.gradle.launcher.cli.CommandLineActionFactory$WithLogging.execute(CommandLineActionFactory.java:206)\n  at org.gradle.launcher.cli.CommandLineActionFactory$WithLogging.execute(CommandLineActionFactory.java:169)\n  at org.gradle.launcher.cli.ExceptionReportingAction.execute(ExceptionReportingAction.java:33)\n  at org.gradle.launcher.cli.ExceptionReportingAction.execute(ExceptionReportingAction.java:22)\n  at org.gradle.launcher.Main.doAction(Main.java:33)\n  at org.gradle.launcher.bootstrap.EntryPoint.run(EntryPoint.java:45)\n  at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:54)\n  at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:35)\n  at org.gradle.launcher.GradleMain.main(GradleMain.java:23)\n  Caused by: org.jruby.exceptions.RaiseException: (LoadError) no such file to load -- asciidoctor\n  at org.jruby.RubyKernel.require(org/jruby/RubyKernel.java:1040)\n  at RUBY.require(/Users/mr255029/Development/sd-app-gateway/?/.gradle/caches/modules-2/files-2.1/org.jruby/jruby-complete/1.7.21/e061b9f399a5e8d5cfcca84d4a6baf879111e83c/jruby-complete-1.7.21.jar!/META-INF/jruby.home/lib/ruby/shared/rubygems/core_ext/kernel_require.rb:54)\n  at RUBY.(root)(<script>:9)\n  at org.asciidoctor.gradle.AsciidoctorTask.instantiateAsciidoctor(AsciidoctorTask.groovy:633)\n  at org.asciidoctor.gradle.AsciidoctorTask.processAsciidocSources(AsciidoctorTask.groovy:577)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/comments/15485783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "otrosien": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/35543270", "body": "to make it easy :)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-restdocs/pulls/comments/35543270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}}}}