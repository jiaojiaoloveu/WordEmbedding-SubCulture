{"_default": {"1": {"HenryDev": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/213", "title": "Kotlin examples?", "body": "I'm trying to set up Spring Integration in a Kotlin application, what would be the best example for that? Something like doing CRUD on Rest endpoints, parsing JSON, etc.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "scne": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/204", "title": "mqtt over UDP", "body": "There is any way to use spring-integration-mqtt over UDP or use mqtt-sn?", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stefsp7": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/195", "title": "Cafe-dsl sample not working", "body": "It seems that after the route call the flow does not go back to the main flow (.defaultOutputToParentFlow() seems not to be working) and the commands after the route are never being executed.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "edgarmariorivera": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/194", "title": "I can't run this examples", "body": "I notice that this dependency doesn't work anymore\r\n\r\n```\r\n    <dependency>\r\n      <groupId>org.springframework.integration</groupId>\r\n      <artifactId>spring-integration-sftp</artifactId>\r\n      <version>5.0.0.BUILD-SNAPSHOT</version>\r\n      <scope>compile</scope>\r\n    </dependency>\r\n```\r\n\r\nI have to replace this this one\r\n\r\n```\r\n    <dependency>\r\n      <groupId>org.springframework.integration</groupId>\r\n      <artifactId>spring-integration-sftp</artifactId>\r\n      <version>5.0.0.M2</version>\r\n      <scope>compile</scope>\r\n    </dependency>\r\n```\r\n\r\nThen I got a class not found exception because no dependencies for spring-core\r\n\r\n```\r\n    <dependency>\r\n      <groupId>org.springframework.integration</groupId>\r\n      <artifactId>spring-integration-core</artifactId>\r\n      <version>4.3.7.RELEASE</version>\r\n    </dependency>\r\n\r\n```\r\n\r\nBut when I tried to run the example SftpOutboundTransferSample I got this error :\r\n\r\n```\r\n/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/bin/java -ea -Didea.launcher.port=7533 \"-Didea.launcher.bin.path=/Applications/IntelliJ IDEA.app/Contents/bin\" -Dfile.encoding=UTF-8 -classpath \"/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/lib/tools.jar:/Users/rivera/git/spring/spring-integration-samples/basic/sftp/target/test-classes:/Users/rivera/.m2/repository/org/springframework/integration/spring-integration-core/4.3.7.RELEASE/spring-integration-core-4.3.7.RELEASE.jar:/Users/rivera/.m2/repository/org/springframework/spring-core/4.3.6.RELEASE/spring-core-4.3.6.RELEASE.jar:/Users/rivera/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/Users/rivera/.m2/repository/org/springframework/spring-aop/4.3.6.RELEASE/spring-aop-4.3.6.RELEASE.jar:/Users/rivera/.m2/repository/org/springframework/spring-beans/4.3.6.RELEASE/spring-beans-4.3.6.RELEASE.jar:/Users/rivera/.m2/repository/org/springframework/spring-context/4.3.6.RELEASE/spring-context-4.3.6.RELEASE.jar:/Users/rivera/.m2/repository/org/springframework/spring-expression/4.3.6.RELEASE/spring-expression-4.3.6.RELEASE.jar:/Users/rivera/.m2/repository/org/springframework/spring-messaging/4.3.6.RELEASE/spring-messaging-4.3.6.RELEASE.jar:/Users/rivera/.m2/repository/org/springframework/spring-tx/4.3.6.RELEASE/spring-tx-4.3.6.RELEASE.jar:/Users/rivera/.m2/repository/org/springframework/retry/spring-retry/1.1.3.RELEASE/spring-retry-1.1.3.RELEASE.jar:/Users/rivera/.m2/repository/org/springframework/integration/spring-integration-sftp/5.0.0.M2/spring-integration-sftp-5.0.0.M2.jar:/Users/rivera/.m2/repository/org/springframework/integration/spring-integration-file/5.0.0.M2/spring-integration-file-5.0.0.M2.jar:/Users/rivera/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/Users/rivera/.m2/repository/org/springframework/integration/spring-integration-stream/5.0.0.M2/spring-integration-stream-5.0.0.M2.jar:/Users/rivera/.m2/repository/com/jcraft/jsch/0.1.54/jsch-0.1.54.jar:/Users/rivera/.m2/repository/org/springframework/spring-context-support/5.0.0.M4/spring-context-support-5.0.0.M4.jar:/Users/rivera/.m2/repository/org/apache/sshd/sshd-core/0.14.0/sshd-core-0.14.0.jar:/Users/rivera/.m2/repository/org/slf4j/slf4j-api/1.6.4/slf4j-api-1.6.4.jar:/Users/rivera/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/rivera/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rivera/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rivera/.m2/repository/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar:/Users/rivera/.m2/repository/org/mockito/mockito-core/1.10.19/mockito-core-1.10.19.jar:/Users/rivera/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar:/Users/rivera/.m2/repository/org/springframework/spring-test/5.0.0.BUILD-SNAPSHOT/spring-test-5.0.0.BUILD-SNAPSHOT.jar\" com.intellij.rt.execution.application.AppMain com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 org.springframework.integration.samples.sftp.SftpOutboundTransferSample\r\n\r\norg.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 550 in XML document from class path resource [META-INF/spring/integration/SftpOutboundTransferSample-context.xml] is invalid; nested exception is org.xml.sax.SAXParseException; systemId: http://www.springframework.org/schema/integration/sftp/spring-integration-sftp.xsd; lineNumber: 550; columnNumber: 59; src-resolve: No se puede resolver el nombre 'integration:maxFetchGroup' para un componente 'attribute group'.\r\n\r\n\tat org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:399)\r\n\tat org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:336)\r\n\tat org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:304)\r\n\tat org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:181)\r\n\tat org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:123)\r\n\tat org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:93)\r\n\tat org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:129)\r\n\tat org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:613)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:514)\r\n\tat org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:197)\r\n\tat org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:172)\r\n\tat org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:158)\r\n\tat org.springframework.integration.samples.sftp.SftpOutboundTransferSample.testOutbound(SftpOutboundTransferSample.java:49)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:51)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:237)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)\r\nCaused by: org.xml.sax.SAXParseException; systemId: http://www.springframework.org/schema/integration/sftp/spring-integration-sftp.xsd; lineNumber: 550; columnNumber: 59; src-resolve: No se puede resolver el nombre 'integration:maxFetchGroup' para un componente 'attribute group'.\r\n\tat com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)\r\n\tat com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:134)\r\n\tat com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:396)\r\n\tat com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.reportSchemaErr(XSDHandler.java:4156)\r\n\tat com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.reportSchemaError(XSDHandler.java:4139)\r\n\tat com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getGlobalDecl(XSDHandler.java:1745)\r\n\tat com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAttributeGroupTraverser.traverseLocal(XSDAttributeGroupTraverser.java:80)\r\n\tat com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAbstractTraverser.traverseAttrsAndAttrGrps(XSDAbstractTraverser.java:643)\r\n\tat com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDComplexTypeTraverser.processComplexContent(XSDComplexTypeTraverser.java:1123)\r\n\tat com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDComplexTypeTraverser.traverseComplexContent(XSDComplexTypeTraverser.java:836)\r\n\tat com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDComplexTypeTraverser.traverseComplexTypeDecl(XSDComplexTypeTraverser.java:315)\r\n\tat com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDComplexTypeTraverser.traverseGlobal(XSDComplexTypeTraverser.java:191)\r\n\tat com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.traverseGlobalDecl(XSDHandler.java:1892)\r\n\tat com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getGlobalDecl(XSDHandler.java:1780)\r\n\tat com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDComplexTypeTraverser.traverseComplexContent(XSDComplexTypeTraverser.java:768)\r\n\tat com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDComplexTypeTraverser.traverseComplexTypeDecl(XSDComplexTypeTraverser.java:315)\r\n\tat com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDComplexTypeTraverser.traverseLocal(XSDComplexTypeTraverser.java:164)\r\n\tat com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDElementTraverser.traverseNamedElement(XSDElementTraverser.java:392)\r\n\tat com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDElementTraverser.traverseGlobal(XSDElementTraverser.java:242)\r\n\tat com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.traverseSchemas(XSDHandler.java:1437)\r\n\tat com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.parseSchema(XSDHandler.java:633)\r\n\tat com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.loadSchema(XMLSchemaLoader.java:613)\r\n\tat com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.findSchemaGrammar(XMLSchemaValidator.java:2446)\r\n\tat com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:1767)\r\n\tat com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(XMLSchemaValidator.java:740)\r\n\tat com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:374)\r\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2784)\r\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:602)\r\n\tat com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:112)\r\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:505)\r\n\tat com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:841)\r\n\tat com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:770)\r\n\tat com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)\r\n\tat com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)\r\n\tat com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:339)\r\n\tat org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)\r\n\tat org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadDocument(XmlBeanDefinitionReader.java:429)\r\n\tat org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:391)\r\n\t... 39 more\r\n\r\n\r\nProcess finished with exit code 255\r\n\r\n```\r\n\r\nAny idea???\r\n\r\nThanks", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "michaelgli": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/193", "title": "I just got branch 4.3.x, when I run StatelessRetryDemo, got the following error", "body": "```\r\n16:14:12.579 WARN  [main][org.springframework.context.support.ClassPathXmlApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'channelInitializer': Initialization of bean failed; nested exception is java.lang.NoSuchMethodError: org.springframework.core.convert.support.DefaultConversionService.getSharedInstance()Lorg/springframework/core/convert/ConversionService;\r\nException in thread \"main\" org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'channelInitializer': Initialization of bean failed; nested exception is java.lang.NoSuchMethodError: org.springframework.core.convert.support.DefaultConversionService.getSharedInstance()Lorg/springframework/core/convert/ConversionService;\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:866)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)\r\n\tat org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)\r\n\tat org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)\r\n\tat org.springframework.integration.samples.advice.StatelessRetryDemo.main(StatelessRetryDemo.java:43)\r\nCaused by: java.lang.NoSuchMethodError: org.springframework.core.convert.support.DefaultConversionService.getSharedInstance()Lorg/springframework/core/convert/ConversionService;\r\n\tat org.springframework.expression.spel.support.StandardTypeConverter.<init>(StandardTypeConverter.java:46)\r\n\tat org.springframework.expression.spel.support.StandardEvaluationContext.getTypeConverter(StandardEvaluationContext.java:185)\r\n\tat org.springframework.expression.spel.support.ReflectiveMethodResolver.resolve(ReflectiveMethodResolver.java:110)\r\n\tat org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:196)\r\n\tat org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:125)\r\n\tat org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:85)\r\n\tat org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:57)\r\n\tat org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:87)\r\n\tat org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:120)\r\n\tat org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:242)\r\n\tat org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:161)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.evaluateBeanDefinitionString(AbstractBeanFactory.java:1448)\r\n\tat org.springframework.beans.factory.support.BeanDefinitionValueResolver.doEvaluate(BeanDefinitionValueResolver.java:255)\r\n\tat org.springframework.beans.factory.support.BeanDefinitionValueResolver.evaluate(BeanDefinitionValueResolver.java:228)\r\n\tat org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:204)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1531)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1276)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)\r\n\t... 11 more\r\n```", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Enan01": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/187", "title": "why i can not download the jars in pom.xml", "body": "+ spring-integration-kafka\r\n+ spring-integration-core\r\n+ spring-kafka\r\n+ spring-kafka-test\r\nthese all can not download, can anybody tell me why ?", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "artembilan": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/185", "title": "STOMP Chat sample is out of date", "body": "There is an old `reactor.tuple.Tuple` usage in the XML config.\r\n\r\n1. The Reactor isn't required dependency for SI since 4.2 (at least until 5.0)\r\n2. In the Reactor `2.0.x` the `Tuple` has been moved to the new `reactor.fn.tuple` package.\r\n\r\nhttp://stackoverflow.com/questions/40643008/stomp-chat-web-socket-with-embedded-tomcat-reactor-error-type-reactor-tuple-tu", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/a1fc9d599955f9e0775e8684a1d10e05de456e60", "message": "Upgrade to SIK-3.0.1"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/6b75cbedcc2302a048c9dda65ecccd90dc5c4ebf", "message": "Upgrade to SK-2.0.3"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/feb2ba465ddd222b3f9f960309bd2d9317f6e777", "message": "Upgrade to SI-5.0.1"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/b19246e8314361904ae73b20d45e44b85353142d", "message": "Fix TcpClientServerDemoTest race condition\n\nhttps://build.spring.io/browse/INTSAMPLES-NIGHTLY-2342\n\nThe `TcpClientServerDemoTest.testMultiPlex()` relies on the\n`HashSet.size()` for assertion meanwhile that property is not `volatile`.\n\nSince we change the state of the `HashSet` from other threads\nthe non-`volatile` property is not reliable source of information.\n\n* Change the test-case to use `LinkedBlockingQueue` instead of `HashSet`\nwhich uses `AtomicInteger` to track its `size`"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/bbcb4bcfaefbb17086ba46ed153b1c9f7947748a", "message": "Upgrade to SIK-3.0\n\n* Fix Kafka Java DSL sample from bean name conflict\n* Fix usage of deprecated `org.springframework.integration.test.util.SocketUtils`"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/38202d8b1ff25572c448aea0af0f629b5ae1ffba", "message": "Upgrade to SI-5.0-GA, SS-5.0-GA, SF-5.0.2, SK-2.0\n\nRemove exclude for the `TwitterAutoConfiguration` since it doesn't\nexist in Spring Boot any more"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/77477a953d3a963f0a6dc41c88ad954a648a613c", "message": "Fix compatibility with the latest Spring Boot\n\nhttps://build.spring.io/browse/INTSAMPLES-NIGHTLY-2287"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/f09f4563d929c90fbd7f6c37df506558ce9f0951", "message": "Use `cacheConsumers=false` for  CachingJmsCF\n\nhttps://build.spring.io/browse/INTSAMPLES-NIGHTLY-2256\n\nThe `AggregatorDemoTest` fails sporadically with no second part from\nreply.\nThat might be as a result of the cached consumers in the\n`CachingConnectionFactory`, so several `<int-jms:inbound-gateway>`\nfor the topic using the same connectionFactory essentially end up\nusing the same consumer sequentially.\nAnd Broker considers them as a single consumer, therefore only one\nmessage is sent."}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/f97ea5b988187bbbff61b63ab269938d28b76cd7", "message": "Use `mainClassName` instead of `main` for `bootRun` task"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/107ef1f305f3704c2fba1a42bb1d359c7b620271", "message": "Remove EclipseLink from JPA sample\n\nhttps://build.spring.io/browse/INTSAMPLES-NIGHTLY-2239/\n\nHaving Hibernate and EclipseLink in the same application isn't a goal.\nOn the other hand the sample must be concentrate on the Spring Integration,\nnot a complexity brought by the Spring Boot auto-configuration override.\n\n* Remove the EclipseLink support from the JPA samples and rely only on\nthe Hibernate auto-configuration\n* Remove an appropriate message from the README"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/6ce495e427ac98a8cce2c23af306775566a96c34", "message": "Upgrade to Mockito-2.10.0 and appropriate fixes"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/6bf53917153c5d7adcd2a05f4cd47fe339376409", "message": "Upgrade to ActiveMQ-5.15.0 and increase test time\n\nhttps://build.spring.io/browse/INTSAMPLES-NIGHTLY-2211\n\nIt isn't clear why second message copy is lost, so increase timeout\nin case of some fluctuations in the ActiveMQ.\nAlso increase logging level to DEBUG to see some info in the next failure"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/68377fedd186e0f12ea8ad5cf00cc233f6e44f04", "message": "Exclude `jackson-module-kotlin` to avoid CP issue\n\nThe `Jackson2JsonObjectMapper` tries to load any available modules for\nthe Jackson `ObjectMapper` via `findAndRegisterModules()`.\n\nBut if we have a module but don't have a target library, we end up with\nthe `ClassNotFoundException`.\nIn our case we fail with the Kotlin because Spring Boot provides\n`com.fasterxml.jackson.module:jackson-module-kotlin` dependency and\nleaves the rest of required libs for the target application.\n\n* Exclude `com.fasterxml.jackson.module:jackson-module-kotlin`\nfrom all the dependencies.\n* Spring Integration `Jackson2JsonObjectMapper` should be revised to use\n`Jackson2ObjectMapperBuilder` - https://jira.spring.io/browse/INT-4318"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/fe60be8a18292acc3b1c1464743109b81f8d4810", "message": "Upgrade dependencies to latest Milestones\n\nUpgrade to Gradle 4.0.1"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/403650f6cdaa201b02bb4f2e5c3e222f1c19940a", "message": "Fix compatibility with the latest SI"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/695a5440d436f781198065f44255e1b09c1bf153", "message": "Upgrade to SF-5.0.B-S to avoid CP confuses"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/2ccc8f426cc094bd6f21b70dee35da1e2aa44b01", "message": "Fix compatibility with the latest Spring Boot\n\nhttps://build.spring.io/browse/INTSAMPLES-NIGHTLY-2099/"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/e1be51feb145bdf894b0c176a8a19e1281c64e0f", "message": "Upgrade to SK-2.0 M2 and SF-5.0 RC1\n\nFix `JmsMockTests` for wrong mock usage - just `reset()` before testing!"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/be0e24aea55ed053ad89859c583799487ebd9283", "message": "Fix JmsMockTests for bad Mockito usage\n\nhttps://build.spring.io/browse/INTSAMPLES-NIGHTLY-2074\n\nUpgrade to SK-2.0 M1 and SIK-3.0 M1\n\nFix JPA sample adding `SEQUENCE HIBERNATE_SEQUENCE` DDL\ninto the `schema.sql`\n\nhttps://build.spring.io/browse/INTSAMPLES-NIGHTLY-2078/\n\nThe latest Hibernate version doesn't create such a DB entity if\nwe use `hibernate.ddl-auto: none`\n\nIncrease timeouts in the JMS and TCP tests"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/13c22ceb280c37627bc97b55f11668c213e1ccd9", "message": "FTP Outbound test: use `CachingSessionFactory`\n\nhttps://build.spring.io/browse/INTSAMPLES-NIGHTLY"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/5956cf8cfb33b3439af1d1a5f5d20ea8348b5cfb", "message": "Fix FTP sample tests to use bigger idle\n\nhttps://build.spring.io/browse/INTSAMPLES-NIGHTLY-2059/\n\nFix `JmsMockTests` stubbing via making endpoint stopped before mocking\n\nForce SI and SF versions via their BOMs imports\nRegenerate POMs including `dependencyManagement` for BOMs customization"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/2b80cf25a809d5d8fc381a266f805987edfd1a63", "message": "Upgrade to SI-5.0 M3\n\n* Fix Spring Boot 2.0 B-S compatibility\n* Fix deprecation warnings\n* regenerate POMs according new dependency versions"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/ea919aa4be0fea8061b2594e1046cd1aca9512c4", "message": "GH-198: (S)FTP Server: Use an OS-selected Port\n\nFixes spring-projects/spring-integration-samples#198\n\nThe `SocketUtils.findAvailableServerSocket()` isn't reliable for port selection and its `socket.close()` may cause a port selection by some other process.\n\nUse OS-selected port for SshdServer in SFTP sample\n\nRevert unexpected refactoring after renaming properties\n\nUpgrade to SSHD-1.4, FTP Server 1.1,  fix tests and Boot 2.0 compatibility"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/a21a2444ef952a31698d59a53d8aab236b6afef7", "message": "Change Kafka Samples to use Boot auto-config\n\nRemove `@IntegrationComponentScan` from Boot samples\n\nSince the latest Spring Boot utilize already `@IntegrationComponentScan` for the `@SpringBootApplication` class package, there is no reason to worry about lost `@MessagingGateway`\n\nReflect Kafka samples changes according latest Spring Boot fixes"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/dba0ee6112ee0d014adb436ee4747fdb9757dc4d", "message": "Fix Spring Boot 2.0 compatibility\n\nhttps://build.spring.io/browse/INTSAMPLES-NIGHTLY-1965/"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/812686e1bcd12b94635ecc4ef4e3095d5ef93781", "message": "Change dependencies order for `jpa` sample\n\nSince both `hibernate-jpa-2.1-api` and `org.eclipse.persistence.jpa` have similar classes in the same packages ensure that `hibernate-jpa-2.1-api` loads first to meet JPA-2.1 spec requirements in the Hibernate 5.2.5"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/04ef89784f52f22ffaf2b811b6ffac778aba0e5f", "message": "Upgrade to SI-5.0.0.M1"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/69a896df0018eedc2e1631c58d7c1255aa21079b", "message": "Fix Kafka-0.10.1.0 compatibility\n\nhttps://build.spring.io/browse/INTSAMPLES-NIGHTLY-JOB1-1923/"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/5f524dc534653b0b6fa9384143fbb24c2cadfa3f", "message": "Upgrade to SI-5.0 & SIK-3.0, Reactor 3.0\n\n* Fix compatibility after Java DSL migration to the SI Core\n* Also upgrade all the JMS sample to the JMS 2.0\n* Fix default `connectionFactory` bean reference to the current `jmsConnectionFactory`\n* Remove unsupported JPA-1.0 Spec via `OpenJpaAutoConfiguration`, since the minimum now is JPA-2.0\n* Remove non-lambda sample since minimum now is Java 8\n* Rename `PromiseTest` to `MonoTest` and fix it to Reactor 3.0\n* Fix `stomp-server.xml` to use proper Reactor 3.0 `eactor.util.function.Tuples` for SpEL\n* Regenerate POMs"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/a6bf1880993c46582b0231e8770335b43d361b61", "message": "regenerate POMs"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/239f4b27b58c1ca3dbc300dd3aa7e0025bd9c56c", "message": "Upgrade to SI-4.3.6\n\nRemove SI-5.0 dependency and use `TestMailServer` from the SI-test since 4.3.6"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/6ffb17fe1e62b7106c99ddad6d36cfe21fbd145b", "message": "Upgrade to SI-Java-DSL-1.2.1"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/ae2e18dad66c10d19988754657d4f3e262892d46", "message": "Upgrade to SI-4.3.5"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/e35d4416919786ad21d6bbf8429d1f0ae8ef7d3d", "message": "File-split-ftp: fix read files race condition\n\nhttps://build.spring.io/browse/INTSAMPLES-NIGHTLY-1898/\n\nThere is no guarantee that if `File.exists()`, the real write to file has occurred\n\n * Add `while()` to check not only `File.exists()` but also its `length()` only after that proceed to assert logic"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/ef31a187c4b6d50e71aa6120b9d192f5c6a199a2", "message": "Revert usage for `fileNameExpression`\n\nSince we provide a custom `FileNameGenerator` via `fileNameExpression` we should ensure somehow `BeanFactory` injection to that\n`FileWritingMessageHandlerSpec` is a `FactoryBean` since version DSL `1.2` and a particular `BPP` takes care about `Spec` internals and register custom `FileNameGenerator` as a bean.\n\n Use standard `FactoryBean` injection in the `lines()` flow to populate the target `FileWritingMessageHandler` to the flow\nGenerate pom for all project to apply SI Java DSL 1.2 GA"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/a9d653b19e3eb3b1c5bc4284772c6f7820e90a87", "message": "Upgrade to SI-Java_DSL-1.2.RELEASE\n\nFixes GH-180 (https://github.com/spring-projects/spring-integration-samples/issues/180)\n\n* Apply `PollerSpec.errorChannel(String)` style\n* Replace `fileNameExpression()` to `fileNameGenerator()` to avoid `No BeanFactory` for `EvaluationContext`\n* Use `.trigger()` instead of `.handle()` for `FileWritingMessageHandler.trigger()`\n* Fix race condition in test, when file exists already, but there is no content yet"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/62894391b577cc07a95c50a6ebc4367570e37b02", "message": "Upgrade to SI-Java_DSL-1.2.RC1"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/e80d7573b4e53abb4bedd9bb6703033a2f6280f8", "message": "Upgrade to SI-4.3.2, SK-1.1, SIK-2.1"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/3f88c5de296b28690b3b1198873dd3fa40cbdd49", "message": "Upgrade to SI Java DSL 1.2.0.M2"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/a46bd8acb37fa1c1cdec6947dd2195265b71fc37", "message": "Add Java DSL sample for Kafka 0.9\n\nMake `PromiseTest` more fast decreasing `sleep()` in the `MathService`\n\nKafka-0.10.0 Compatibility\n\nUpgrade to Spring Boot 1.4.0.RELEASE\n\nRegenerate poms according to upgrades"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/9554dc7f1f4570816b324a6586416508d97883a2", "message": "INTSAMPLES-142: Fix mail dependencies\n\nJIRA: https://jira.spring.io/browse/INTSAMPLES-142\n\nAlso do some upgrades and polishing"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/6228929b9580cd3ff05536615dfc5774c7451e71", "message": "Upgrade to Spring Kafka 1.0.1"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/324bf11d60efa5478296b4f10a330091656214d1", "message": "Fix wrong Mockito usage in the `JmsMockTests`\n\nJust fix the test code according Mockito advice:\n```\norg.mockito.exceptions.misusing.UnfinishedStubbingException:\nUnfinished stubbing detected here:\n-> at org.springframework.integration.samples.advance.testing.jms.JmsMockTests.verifyJmsMessageOnOutputChannel(JmsMockTests.java:153)\n\nE.g. thenReturn() may be missing.\nExamples of correct stubbing:\n    when(mock.isOk()).thenReturn(true);\n    when(mock.isOk()).thenThrow(exception);\n    doThrow(exception).when(mock).someVoidMethod();\nHints:\n 1. missing thenReturn()\n 2. you are trying to stub a final method, you naughty developer!\n```"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/d8f2c43b456d443223ca23e481d1946e82151909", "message": "Some upgrades\n\n* Spring Kafka 1.0.0.RELEASE\n* SI Kafka 2.0.0.RELEASE\n* Gradle 2.14\n* SF 4.3.0.RELEASE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/2c4215b731a652488bd6be91f306fc4c66ad52d4", "message": "Upgrade to SI-4.3.0.RELEASE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/2a26f74845c1671d4a1ed4ecb5687aa92f153ce8", "message": "Regenerate POMs according the latest upgrades"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/1cbcbe78103f344ce80050ffe73c2edd268e8983", "message": "Some upgrades\n\n* Gradle-2.13\n* Spring Kafka 1.0.0.RC1\n* Spring Integration Kafka 2.0.0.RC1\n* Spring Boot 1.4.0.M3\n* Provide required fixes"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/b6f872664d00c79b6cc8741ebbd66fb80d2c0cb1", "message": "Fix compatibility with Boot-1.4 and fresh POMs"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/32fc46161afeb61cab843a8113ae7b3bdbb64e3b", "message": "Upgrade to SI-4.3.0.RC1 and Boot-1.4.0.M2"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/ae1150ae1ab3ebccb824a9d2a8970d29cc5c4d1c", "message": "Upgrade to SI-4.3.0.M2"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/1f25bd781b09d925964291afc4fc1823f48277fc", "message": "Upgrade to SK-1.0.0.M2 and SIK-2.0.0.M2"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/f4b48a6cc13b5f789571436b9bd3ac87af001f21", "message": "Add `Community Sample Projects` to `README`\n\nAdd like to Xavier Padr\u00f3's Samples repository"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/689279656eff62ee5dee1048726e0e22bb77a055", "message": "Add Spring Boot Test Starter to JPA Sample\n\nhttps://build.spring.io/browse/INTSAMPLES-NIGHTLY-1672"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/6080639682e964fbcffb19c8dfae78c18de5455d", "message": "INTSAMPLES-148: Make JPA Sample as Boot App\n\nJIRA: https://jira.spring.io/browse/INTSAMPLES-148\n\nUpgrade several dependencies, especially OpenJPA-2.4.0 to support Java 8 Class Transformation\n\nUpgrade to DSL-1.1.2 and other polishing\n\nUpgrade to SI-4.3.0.M1"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/55b2cfb49fd4b18732018d2fd100757f0fcd0ac3", "message": "GH-161: Use `TopicUtils` to `ensureTopicCreated`\n\nFixes GH-161 (https://github.com/spring-projects/spring-integration-samples/issues/161)"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/4a65dcbff419b90c8d608606c963f58358cbd6c8", "message": "Upgrade to SI-Kafka-1.3.0.RELEASE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/56366bccab8b53c2b08df7444b6530a6e72aecd8", "message": "Upgrade to SI-DSL-1.1.1"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/2a9fb42d76057742c74f9feba1e682b6f9b660db", "message": "Upgrade to SI-4.2.2"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/6cc1ff6542ec29dfe5cb6531aa54475297f472e3", "message": "Upgrade to SI-4.2.1 and others"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/0387ab5e7b03f37ea88e2de04ddb6d78cb82ff37", "message": "STOMP: Add `heart-beat` tracing"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/5c4b817e27a3dd766d102bca26bf46ddd312a31a", "message": "INTSAMPLES-146 Fix Kafka tests and some polishing\n\nJIRA: https://jira.spring.io/browse/INTSAMPLES-146"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/4d535741e9d04250bce5ca409786f987a767adfb", "message": "Upgrade to SI-Java-DSL-1.1.0.RELEASE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/f8634557bb4c34822ff3c5edf82a37d163596083", "message": "Upgrade to SI-4.2.0.RELEASE\n\nAnd SI-Java-DSL-1.1.0.M2"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/92eb01de4ed975fb13c2b90b4d2990d89994712b", "message": "Upgrade dependencies and Gradle"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/5ccedd32f3801155c63eea23ca018a351c671e68", "message": "Add non-Lambda DSL Cafe sample\n\n* Polishing for `stomp-chat` sample\n* Some dependencies upgrade"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/fb6d47f52837dc497fc5a9c3e091e1743d0af36a", "message": "INTSAMPLES-139: Upgrade versions\n\nJIRA: https://jira.spring.io/browse/INTSAMPLES-139"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/5547f2a840d50f1d241496ecda739129b7c26a4d", "message": "Fix `stomp-chat` according to the latest Boot\n\nhttps://build.spring.io/browse/INTSAMPLES-NIGHTLY-JOB1-1189"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/d3ccc2530cf5931ddde4529890382fce52895b98", "message": "Cafe_DSL: Rework the `cafe-dsl` to the latest DSL"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/5d08c6f67ee387f51c7bf358b7f95228f7a44bb8", "message": "Upgrade to SI Java DSL 1.0.RC1 and Gradle 1.12\n\nRegenerate POMs"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/1ad35f2cd25ef777605c64ec758e7506369de7b3", "message": "INTSAMPLES-138: Make SI 4.1 as minimal\n\nJIRA: https://jira.spring.io/browse/INTSAMPLES-138\n\n* Upgrade to Boot 1.2, which is based on the SI 4.1\n* Upgrade to SF 4.1.1\n* Fix `feed` sample to use new `Rome` dep. from SI\n* Fix deprecations for `@Payload`, `@Header` etc.\n* Fix mongo` sample deprecation warn"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/63232c2974f74ed46bf0de93e4c9729449b460fd", "message": "INTS-137: Add STOMP Chat Application\n\nJIRA: https://jira.spring.io/browse/INTSAMPLES-137\n\n* Upgrade to Boot 1.1.7\n* Fix several Boot apps to get deal with `args`, e.g. `--debug` option can be useful for Boot\n* Provide a loca copy for JavaScript files (`sock.js` and `stomp.js`) to avoid extra Internet connection on testing\n\nINTS-137-2: Make JavaScript cross-browser\n\nSome additional polishing to the server config, like `logging-channel-adapter` for server message flow"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/a5c12343c675d64b4ad45c9298464ef9c032ab60", "message": "INTSAMPLES-137: Add WebSockets sample\n\nJIRA: https://jira.spring.io/browse/INTSAMPLES-137\n\nDepends on https://github.com/spring-projects/spring-integration/pull/1274\n\nPolishing and cleanup\n\n* Fix `cafe-dsl` project: https://build.spring.io/browse/INTSAMPLES-NIGHTLY-JOB1-1131\n* Change author emails to the `pivotal.io`\n* Regenerate poms\n\nFix for `Cafe-DSL` sample\n\nhttps://build.spring.io/browse/INTSAMPLES-NIGHTLY-JOB1-1143"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/1914a54f3c0e9ffe82c504c74810abd0e5ccbf50", "message": "Fix `si4demo` issues"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/8de0f77321884bf80c3ef2ee7dd485b03612700c", "message": "INTSAMPLES-135: DSL Cafe Demo Sample\n\nJIRA: https://jira.spring.io/browse/INTSAMPLES-135\n\nConflicts:\n\tgradle.properties\n\nUpgrade version: Boot 1.1.5, SI 4.0.4, DSL 1.0.0.M3, SF 4.0.7"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/90d5ee928213c2e6abee1b43f2920da9484cd091", "message": "INTSAMPLES-134: SFTP: Use Apache SSHD SshServer\n\nJIRA: https://jira.spring.io/browse/INTSAMPLES-134\n\nINTSAMPLES-134: `sun.misc.BASE64Decoder` -> `org.apache.sshd.common.util.Base64`\n\nINTSAMPLES-134: PR comments and fix for Windows\n\nINTSAMPLES-134 Test Samples with Remote Server\n\n- change 'user' property to 'username' to avoid conflict with environment variable.\n- create temporary files using the remote file template in 'si.sftp.sample'.\n- clean up after test completion.\n- use a caching session factory."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/28784722", "body": "LGTM\nMerging...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/28784722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/28785087", "body": "Merged\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/28785087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/33675023", "body": "Not sure what you mean, but everything is here: https://github.com/spring-projects/spring-integration-samples/tree/master/basic/xmpp/src/test\n\nThere are confings in the META-INF and **xmpp.properties** as well\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/33675023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/33675836", "body": "You are welcome!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/33675836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/33709240", "body": "Merged with `@Ignore` for MS SQL Server and Oracle tests.\nThank you for contribution!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/33709240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/35806757", "body": "Pushed fix for: https://jira.springsource.org/browse/INTSAMPLES-126\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/35806757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/35807278", "body": "Thank you for paying attention to it. The fix is presented in the PR #101 together with upgrade to the Spring Integration 3.0.\n\nNote: it's recommended to use versionless XSD locations to avoid such issues in your applications.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/35807278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/40601893", "body": "> [ERROR] D:\\SpringIO\\spring-integration-samples-mvn\\applications\\loanshark\\src\\main\\java\\org\\springframework\\integration\\samples\\loanbroker\\loanshark\\domain\\LoanShark.java:0::0 Internal compiler error\n> [ERROR] org.aspectj.apache.bcel.classfile.ClassFormatException: File: 'java/lang/CharSequence.class': Invalid byte tag in constant pool: 15\n\nSeems for `aspectJ` version issue.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/40601893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/40603599", "body": "Well, switch to `<aspectj.version>1.8.0.RC3</aspectj.version>` fixes the `aspectJ` issue\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/40603599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/40605542", "body": "Here is some polishing: https://github.com/artembilan/spring-integration-samples/commit/f26f139cb0a7ae988c8177d99a84fec1a676276c\n\nNeed to fix SS transitive and make decision regarding Jackson\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/40605542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/40627420", "body": "I think can go ahead and merge it as is with that polishing.\nOther concerns can be fixed in Gradle migration branch.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/40627420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/40628499", "body": "Merging...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/40628499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/41716080", "body": "Pushed the upgrade to SI 4.0 GA and other versions polishing\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/41716080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/42681059", "body": "No, there isn't yet. However the Java and Annotations configuration samples are on our road. Do you need the solution for you instantly or just ask general question?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/42681059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/43048062", "body": "Here you are: https://gist.github.com/artembilan/8d7d4cf6959c71be2cc9\n\nLet us know, if this is enough for you\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/43048062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/43049108", "body": "Add one more commit\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/43049108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/43307936", "body": "@garyrussell , @ghillert any chance to merge this ?\nThanks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/43307936/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/43673822", "body": "Pushed Annotation/DSL sample converted to Gradle\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/43673822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/43900197", "body": "Pushed\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/43900197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44211065", "body": "Your changes works for me. Share, please, the StackTrace\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44211065/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44236701", "body": "Looks like you changed something else, e.g. in the `EmployeeSearchService`\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44236701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44239706", "body": "Do you mean this:\n\n``` java\n Employee expl=(Employee)inMessage.getPayload();\n employeeList.getEmployee().add(expl);\n```\n\n?\nWhat is your point? Just to check that we can transfer request object to response?\nAlthough I don't see concern to add it to the sample, but there is need to understand the goal.\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44239706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44241657", "body": "Strange: it works for me again:\n\n> 09:50:11.714 INFO  [main][org.springframework.integration.samples.rest.RestHttpClientTest] Return Status :[0]\n> 09:50:11.715 INFO  [main][org.springframework.integration.samples.rest.RestHttpClientTest] Return Status Message :[Success]\n> 09:50:11.735 INFO  [main][org.springframework.integration.samples.rest.RestHttpClientTest] {\"employee\":[{\"employeeId\":1,\"fname\":\"ali\",\"lname\":\"azizkhani\"},{\"employeeId\":1,\"fname\":\"John\",\"lname\":\"Doe\"},{\"employeeId\":2,\"fname\":\"Jane\",\"lname\":\"Doe\"}],\"returnStatus\":\"0\",\"returnStatusMsg\":\"Success\"}\n\nOr you are using some old SAMPLES version, or I am wrong that test it against my Gradle branch.\n\nI think we will add your tweaks to this sample, but already after we commit Gradle migration.\n\nWhat might cause the issue, that I use Gradle and its Jetty pluging, but Maven sample uses Tomcat pluging.\n\nAs the conclusion: all your modifications are correct and have the right to life\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44241657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44323615", "body": "Got it. I'll fix them all tomorrow.\nThanks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44323615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44373513", "body": "Pushed\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44373513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/45123754", "body": "Well, does it say that you haven't shown entire changes to the sample?\nCan you do it now?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/45123754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/46284018", "body": "Merged with: https://github.com/spring-projects/spring-integration-samples/commit/4c1f7d452c3d5af0b950ee22defe267bab869f8b\n\nAbout:\n\n> 2014-06-15 09:36:11.881:WARN:oejs.ServletHandler:\n> org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.nio.charset.UnsupportedCharsetException: ibm290\n\nIt's something to your MacOS. There might be some wrong default Charset (http://aaronbonner.io/post/570462273/character-encoding-and-mac-osx). For me it works correctly:\n\n> 12:02:17.081 INFO  [main][org.springframework.integration.samples.http.HttpClientDemo] Replied with: Hello from the other side\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/46284018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/46849938", "body": "Pushed\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/46849938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/50474047", "body": "Works well on Mac. \nThe issue on Windows is about the inappropriate file path, e.g. `C:/`\nThere is a warn, though:\n\n>  EmbeddedSftpServer.java:95: warning: BASE64Decoder is internal proprietary API and may be removed in a future release\n>         byte[] decodeBuffer = new BASE64Decoder().decodeBuffer(stream);\n\nShould we suppress it ?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/50474047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/50481912", "body": "> Apache has a base 64 decoder\n\nI know that one and would prefer it, because it is a sample project and it would be good to show users how they can live with existing solutions.\nWill be changed.\n\nAny thought how to be in the SI on the matter ?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/50481912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/50487937", "body": "Pushed.\nIt has been more simple - `org.apache.sshd.common.util.Base64` :smile: \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/50487937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/50528213", "body": "Pushed polishing and fix for Windows\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/50528213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/50528681", "body": "Works on Mac as well.\nNeed to check from the real SSH perspective\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/50528681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/51382032", "body": "Any update or at least comments on the matter?\nThanks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/51382032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/51443022", "body": "Merged via https://github.com/spring-projects/spring-integration-samples/commit/28116776c29dab796d0a948d2377b650e22fd1ed\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/51443022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/53951516", "body": "LGTM\nMerging with some polishing...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/53951516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/53951662", "body": "Merged via https://github.com/spring-projects/spring-integration-samples/commit/b20a275a6a0a32168f37b63789d0042ff516dcf4\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/53951662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/54808199", "body": "Merged via: https://github.com/spring-projects/spring-integration-samples/commit/8de0f77321884bf80c3ef2ee7dd485b03612700c\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/54808199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/55487722", "body": "Push common polishing. In general it is up to automatic pom generations\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/55487722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/56145350", "body": "Hi!\nWhat does it mean?\nAre you spammer?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/56145350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/56306730", "body": "I am forced to close this PR as an invalid one.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/56306730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/56797679", "body": "Pushed fix for Cafe-DSL Sample\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/56797679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/59096408", "body": "Pushed\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/59096408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/59096430", "body": "Now it can be merged\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/59096430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/68701423", "body": "@garyrussell , just a remind to merge this.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/68701423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/68701440", "body": "@garyrussell , just a remind to merge this.\nThanks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/68701440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/72436475", "body": "@baudo2048 , this is a common case of configuration and it doesn't provide so much value to be a comprehensive example. So, we will consider it from that you DSL issue https://github.com/spring-projects/spring-integration-java-dsl/issues/14. \n\nClosing this one as non-relevant.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/72436475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/78378335", "body": "Hi @slukashenkov !\nLooks like wrong PR.\n\nOr are you just spamming us? :smile: \n\nPlease, close it\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/78378335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/81498185", "body": "Hell, @greathouse !\n\nThank you for pointing that out!\n\nHowever before that PR it would be better to raise a JIRA ticket. Hence I've created it for you:  https://jira.spring.io/browse/INTSAMPLES-142.\n\nLet's continue discussion from there!\n\nWe upgraded `mail` deps recently to `1.5.2` and the main build tool is Gradle. To get the actual POM you should run `generatePom` task.\n\nHowever I see that we really missed some deps with that ugrade. Should be like this:\n\n```\nruntime \"com.sun.mail:javax.mail:$mailVersion\"\nruntime \"com.sun.mail:smtp:$mailVersion\"\nruntime \"com.sun.mail:pop3:$mailVersion\"\nruntime \"com.sun.mail:imap:$mailVersion\"\n```\n\nWe really don't need those for `compile`.\n\nI close this PR anyway, because it is against `master`, not the top-level branch. \nFrom other side you should follow with Contribution Guideline before making PR: https://github.com/spring-projects/spring-integration-samples/wiki.\n\nLooking forward for the correct contribution!\nThank you one more time\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/81498185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/86906884", "body": "Thank you for finding that and for the fix anyway.\nBut we can't accept the patch without the CLA signing confirmation: https://github.com/spring-projects/spring-integration-samples/wiki\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/86906884/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/87450804", "body": "> I've tried to sign it, let me know if it didn't work.\n\nYou had to receive a confirmation email with CLA Number.\n\nFrom other side it's not an issue and we can fix it for you, but there won't be your commit in the project.\n\n> Even PRs have boilerplate in the Java world\n\nNothing specific: just some rules of Open Source\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/87450804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/87619118", "body": "No, that's fine.\nThank you for the contribution.\nMerging you PR...\n\nFor the future, please, follow with those Contribution rules: \"JIRA first!\" is good way to start.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/87619118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/87619888", "body": "Merged as :https://github.com/spring-projects/spring-integration-samples/commit/b32cd1edda288ef22a4d5660f08e20c318d75cc2\nwith additional fix to the same typo in other places :smile: \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/87619888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/99814846", "body": "Merged as https://github.com/spring-projects/spring-integration-samples/commit/49e0a25e8e0b346c531263d453ac880552f2a923 without `correlation_id` and after rebase.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/99814846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/117705803", "body": "Hello, @ersushantsood !\n\nFirst of all we don't accepts any PullRequest from the Community without signing the CLA: https://github.com/spring-projects/spring-integration-samples/wiki\n\nFrom other side your PR does not make sense for us anyway. That's because the `master` is based on the SI-4.x. 3.0.x version support is exactly in that `SI3.0.x` branch.\n\nPlease, convince us that we really should merge your PR!\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/117705803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/121242408", "body": "Hello, @skaba !\n\nThank you for contribution anyway, but before even looking into your fix we have to know that you have signed the CLA: https://github.com/spring-projects/spring-integration-samples/wiki.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/121242408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/126380245", "body": "Closed as invalid and with the lack of feedback.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/126380245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/126433259", "body": "Closed as `invalid` with the lack of response.\nPlease, open the JIRA (or GH issue) first to discuss the issue before PR.\n\nThank you for the attention to the Spring anyway!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/126433259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/126439372", "body": "Merged after rebase\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/126439372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/131874245", "body": "Merged as https://github.com/spring-projects/spring-integration-samples/commit/db3d78109fe614c3e398fd357be8d6ef473f8473\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/131874245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/142071987", "body": "Updated to DSL-1.1.0.RELEASE\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/142071987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/142085480", "body": "Merging as the simple change...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/142085480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/142088952", "body": "Merging with simple polishing and rebasing...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/142088952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/142092466", "body": "Right, because I pushed that before `promoting`.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/142092466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/142094696", "body": "I thought that it would be so easy just polish a bit and re-generate poms and merge, but looks like Gradle 2.5 (or Groovy 2.3 >) doesn't like `build {}` block for the `generatePom` task: https://discuss.gradle.org/t/after-upgrade-gradle-to-2-0-version-the-maven-pom-not-support-build-property/2190/3.\n\nDon't you, @garyrussell , remember if we faced and overcame somehow something similar in other projects?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/142094696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/142112353", "body": "@garyrussell , I found how to fix it for the Gradle 2.x: https://github.com/artembilan/spring-integration-samples/commit/12a94e0508a0cc9301f0e751bdae51c0ad3535d8\n\nLet me know if you have any concerns and I can merge it.\nThanks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/142112353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/142150686", "body": "Merged as https://github.com/spring-projects/spring-integration-samples/commit/23f4a04661abf195a7eb0c7ed5744b844d916ef7\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/142150686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/142150760", "body": "Merged as https://github.com/spring-projects/spring-integration-samples/commit/ecab656cc15f2067c548c7dbdfdcfcc5a512cda3\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/142150760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/151992172", "body": "I understand (or not ?) what you do here, but would you mind commenting it a bit. \nJust because that SO discussion is blurred in the time :smile: \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/151992172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/152008047", "body": "Merged as https://github.com/spring-projects/spring-integration-samples/commit/15f78146e0c8c435166512219fa06eb16a06267d\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/152008047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/157399222", "body": "Hi @radiumx3 !\n\nNot sure what is your question, but this one can cover any samples related to the Spring Integration.\nIf you wonder to find some specific sample which reflect some particular use-case just with annotations, you should just ask here and we may consider that as contribution to this repo.\n\nCheers,\nArtem\n\nP.S. Leaving open until your clarification.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/157399222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/157894113", "body": "See here: http://docs.spring.io/spring-integration/docs/latest-ga/reference/html/files.html#_configuring_with_java_configuration_7\nYou can find something similar throughout the manual. Not everywhere, of course, but we try to do our best on demand :smile: .\n\nThe main concept of Java config is described here: http://docs.spring.io/spring-integration/docs/latest-ga/reference/html/configuration.html#annotations.\n\nEverything else are just Java classes which should be configured as `@Bean` s with particular Messaging Annotation.\nWe just didn't think that it is so difficult to get the concrete class from the Framework and follow with the classical Spring Java Config.\nIn addition consider to study: https://github.com/spring-projects/spring-integration-java-dsl.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/157894113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/163440592", "body": "Hi @kasoban !\n\nWould you mind to confirm the CLA signing?\nOtherwise we are forced to close your PR.\nBut I see the issue and it definitely has to be fix.\nScanning our `build.gradle` says me that we have several places with the `slf4j-log4j12` dependency. but without `slf4j-api`. \nAll of them should be fixed and there will be need to re-generate pom using `generatePom` Gradle task.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/163440592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/163441283", "body": "Hi @fbalicchia !\n\nSorry for delay: was busy on PTO and other critical tasks :smile: \nSo, let review it now and maybe merge!\n\nBTW the target JIRA has been moved to the appropriate project: https://jira.spring.io/browse/INTSAMPLES-147\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/163441283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/163459929", "body": "@fbalicchia , would you mind to comment how this sample work for you with Java 8:\nhttps://answers.splunk.com/answers/209379/no-appropriate-protocol-protocol-is-disabled-or-ci.html\n?\nFor me that has started to work exactly after commenting out `jdk.tls.disabledAlgorithms=SSLv3` in the `/lib/security/java.security`\n\nI have this one:\n\n```\njava version \"1.8.0_51\"\nJava(TM) SE Runtime Environment (build 1.8.0_51-b16)\nJava HotSpot(TM) 64-Bit Server VM (build 25.51-b03, mixed mode)\n```\n\nIf you have been forced to do the same, I suggest to add the note to the `README`.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/163459929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/163735654", "body": "Hi @fbalicchia !\n\nThank you being in touch!\n\nNo, you don't need to rename branch: I'll just fix commit message on merge to mention correct JIRA.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/163735654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/164074671", "body": "Merged as https://github.com/spring-projects/spring-integration-samples/commit/b9697909d09ac80161cc103de258c8e3e7156317\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/164074671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/165912330", "body": "Do not merger until https://github.com/spring-projects/spring-integration/pull/1664\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/165912330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/166352749", "body": "Hello, @kasoban !\nThank you for feedback!\n\nWell, I'm sure that your name in the commit isn't an issue and we can merge it based on the name of one of us.\nThe only problem here is about the **copyright**, when with your real name you agree do not exact your code from us in the future.\nSorry for inconvenience, but that is a first time when I hear from the community member that he can't show his real name.\n\n@garyrussell , do you have anything in mind on the matter?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/166352749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/166672030", "body": "> No bean named 'inboundchannel' is defined\n\nYou have to declare `@Bean` as a `MessageChannel` for that name. Otherwise it doesn't work as you see.\n\nFrom other side it isn't clear to me why you don't use `FileReadingMessageSource` directly as a:\n\n```\n@Bean\n@InboundChannelAdapter(value = \"inboundchannel\", poller = @Poller(fixedDelay = \"50000\", maxMessagesPerPoll = \"1\"))\npublic MessageSource<File> fileMessageSource() {\nnew FileReadingMessageSource();\n.........\n}\n```\n\nhttp://docs.spring.io/spring-integration/docs/latest-ga/reference/html/configuration.html#annotations\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/166672030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/166975217", "body": "There might be some delay and unexpected order for the bean population to the application context which depends of the platform and the count of CPU, or even Java version.\nHaving that we don't recommend to use `auto channel creating` for such kind of configuration from the `inbound-channel` to the `service-activator` .\n\nSo, or you follow with our recommendation and create the `@Bean` for the `inboundchannel` or you continue live with the issue. \nBut what is the reason to disturb us than ? :smile: \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/166975217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/166977067", "body": "Hi, @kasoban !\n\nSorry for delay.\nYes, that will work for us, too. \nIf we will be able to trace your commit by info in the CLA, it is good to go ahead with signing.\nAnd after the confirmation, I'll come back to you for review.\n\nThank you for your patience!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/166977067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/167621365", "body": "Hello, @Sudheer786 !\n1. I'm not sure how the issue is related to the [Spring Integration](projects.spring.io/spring-integration/) and its Samples.\n2. I'm not aware in any issue on the matter regarding Java versions.\n3. I see you use `@Scheduled` against `private static` method. Weird. How about to try the same for normal `public` method?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/167621365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/167630793", "body": "> I made it as a static method as I need it running before the class gets Initialized,\n\n??? \n\nHow you can make it running before class gets Initialized, if it is `@Scheduled`?\nFrom other side it doesn't work until Spring Framework processes your class fully as bean. \nSee `ScheduledAnnotationBeanPostProcessor.postProcessAfterInitialization()`:\n\n```\nRunnable runnable = new ScheduledMethodRunnable(bean, method);\n```\n\nSo, we deal here with the bean exactly, not class. Therefore your `static` stuff does not make sense for Spring.\n\nFrom other side it looks like the problem is somewhere in a different place and doesn't relate to the `@Scheduled`...\nYou should `dump` your Tomcat's process and see where is the stuck for your threads.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/167630793/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/167644736", "body": "And? Does it help you somehow to overcome issue?\nI see Activity is involved in the process.\nSo, more and more questions where is the problem with the Spring Integration?..\n\nYou have a dead lock with the `fixedRate`, when the next task is initiated after the start of the previous one. But yes, having `synchronized` there doesn't allow to go ahead and this new task is stuck. After the `fixedRate = 10000` it initiates a new task again and so on.\nConsider to use `fixedDelay` instead.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/167644736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/167644877", "body": "Note: please, read about the comments syntax here on the GitHub: https://guides.github.com/features/mastering-markdown/. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/167644877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/167823833", "body": "Glad to hear!\n\nLet us know if we can close the issue or do that yourself.\n\nComeback to us anytime, but try to post the issue in the proper place.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/167823833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/168689221", "body": "Good.\n\nMerging, although with different fix in the Gradle script....\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/168689221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/168698598", "body": "Merged as https://github.com/spring-projects/spring-integration-samples/commit/68976a81a6e93b70a521e66327cf3d5ebbe03cd2.\n\nThank you for the contribution.\nLooking forward for more!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/168698598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/170391870", "body": "Hi, @fbalicchia !\n\nThank you for contribution anyway, but looks like your local version isn't actual.\nThe current `master` really has `Splunk Sample`. \nAnd actually that is based on the Gradle config:\n\n```\nproject('splunk') {\n    description = 'Splunk Sample'\n```\n\nThe POM is generated by the `generatePom` task from Gradle.\n\nSo, I'm closing this PR as an invalid. Sorry.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/170391870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/170392184", "body": "This is good one.\nMerging...\nThanks.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/170392184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/170392744", "body": "Merged as https://github.com/spring-projects/spring-integration-samples/commit/1310fd57e5af812e63ded7be51f3ced9856a5720\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/170392744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/176402472", "body": "Pushed upgrade to Java DSL-1.1.2 and some other fixes.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/176402472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/184906354", "body": "Pushed upgrade to SI-4.3.0.M1.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/184906354/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/185297881", "body": "Hello @andregmoeller !\n\nPlease, share your environments and the info how you run the project.\n\nWe use the `SmartLifecycle` because `InitializingBean` is so critical to get access to the low level resources or external service.\nIt's typical anti-pattern do what you suggest during initialization phase.\n\nAlthough I still agree that `AdminUtils.createTopic()` is still something like _init_ step, but I insist that we should not do that during `afterPropertiesSet()`.\n\nThis is just sample and I and you really can live with your fix there. I'm sure in the real application your topic is supplied on the Kafka before your start the application. At least it should be like that...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/185297881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/185316788", "body": "When I switch on DEBUG for the `org.springframework` category I can see something like in logs:\n\n```\n12:24:03.635 [main] INFO  o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase -2147483648\n12:24:03.636 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Starting bean 'topicCreator' of type [class org.springframework.integration.samples.kafka.Application$TopicCreator]\n12:24:03.636 [main] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=10000 watcher=org.I0Itec.zkclient.ZkClient@1bd0b0e5\n12:24:03.637 [main-SendThread(genuine.microsoft.com:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server genuine.microsoft.com/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)\n12:24:03.638 [main-SendThread(genuine.microsoft.com:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established to genuine.microsoft.com/127.0.0.1:2181, initiating session\n12:24:03.638 [main-SendThread(genuine.microsoft.com:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Session establishment request sent on genuine.microsoft.com/127.0.0.1:2181\n12:24:03.655 [main-SendThread(genuine.microsoft.com:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server genuine.microsoft.com/127.0.0.1:2181, sessionid = 0x152f04007560009, negotiated timeout = 10000\n12:24:03.657 [main-SendThread(genuine.microsoft.com:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x152f04007560009, packet:: clientPath:null serverPath:null finished:false header:: 1,8  replyHeader:: 1,89,0  request:: '/brokers/ids,F  response:: v{'0} \n12:24:03.658 [main-SendThread(genuine.microsoft.com:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x152f04007560009, packet:: clientPath:null serverPath:null finished:false header:: 2,3  replyHeader:: 2,89,0  request:: '/brokers/topics/si.topic,F  response:: s{36,36,1450902406582,1450902406582,0,1,0,0,36,1,39} \n12:24:03.659 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'topicCreator'\n12:24:03.659 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Starting bean 'application.handler.serviceActivator' of type [class org.springframework.integration.endpoint.EventDrivenConsumer]\n12:24:03.659 [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:application.handler.serviceActivator} as a subscriber to the 'toKafka' channel\n12:24:03.659 [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toKafka' has 1 subscriber(s).\n12:24:03.659 [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started application.handler.serviceActivator\n12:24:03.659 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'application.handler.serviceActivator'\n12:24:03.659 [main] INFO  o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 0\n12:24:03.659 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Starting bean 'producerContext' of type [class org.springframework.integration.kafka.support.KafkaProducerContext]\n12:24:03.659 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'producerContext'\n12:24:03.659 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Starting bean '_org.springframework.integration.errorLogger' of type [class org.springframework.integration.config.ConsumerEndpointFactoryBean]\n12:24:03.659 [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel\n12:24:03.659 [main] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 1 subscriber(s).\n12:24:03.659 [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started _org.springframework.integration.errorLogger\n12:24:03.659 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Successfully started bean '_org.springframework.integration.errorLogger'\n12:24:03.659 [main] INFO  o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 1073741823\n12:24:03.659 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Starting bean 'adapter' of type [class org.springframework.integration.kafka.inbound.KafkaMessageDrivenChannelAdapter]\n12:24:03.721 [main] INFO  o.s.i.k.i.KafkaMessageDrivenChannelAdapter - started adapter\n12:24:03.721 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'adapter'\n```\n\nSo, as you see the `TopicCreator` starts enough early before the last one `KafkaMessageDrivenChannelAdapter`, like we see in your StackTrace:\n\n```\n at org.springframework.integration.kafka.listener.KafkaMessageListenerContainer.start(KafkaMessageListenerContainer.java:312) ~[spring-integration-kafka-1.3.0.RELEASE.jar:na]\n    at org.springframework.integration.kafka.inbound.KafkaMessageDrivenChannelAdapter.doStart(KafkaMessageDrivenChannelAdapter.java:137) ~[spring-integratka-1.3.0.RELEASE.jar:na]\n```\n\nSo, I assume the only problem that we exit from the `AdminUtils.createTopic()` very early, because it might be _aync_. Therefore the `KafkaMessageDrivenChannelAdapter` gets the control to start from its phase. \n\nLooks like we should take a look into utilization our own function - `TopicUtils.ensureTopicCreated()`.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/185316788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/185320498", "body": "Please, try this in the `TopicCreator`:\n\n```\n        @Override\n        public void start() {\n            TopicUtils.ensureTopicCreated(this.zkConnect, this.topic, 1, 1);\n            this.running = true;\n        }\n\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/185320498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/185322778", "body": "Great! \nWe can push that to the main repo.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/185322778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188422066", "body": "Hello @vayalaivadivel !\n\nLooks like your problem isn't related to the question and doesn't fit to the `mail` sample.\n\nShare you configuration, please. Looks like there is something wrong with the `store-uri` option.\n\nFrom other side not sure why you need `commons-email` dependency, since we are fine with just Spring mail support and `javax.mail`.\nYou should consider to add something like into your Gradle config though:\n\n```\nruntime \"com.sun.mail:smtp:$mailVersion\"\nruntime \"com.sun.mail:pop3:$mailVersion\"\nruntime \"com.sun.mail:imap:$mailVersion\"\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188422066/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188428333", "body": "OK. Thank you for that one!\n\nLet me know how does that work with my dependencies?\n\nFrom other side share, please, more StackTrace.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188428333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188433442", "body": "You can still use your `1.5.5`.\nSince it is test, you should use the `testRuntime` instead.\nSee the Spring Integration Java DSL Gradle: https://github.com/spring-projects/spring-integration-java-dsl/blob/master/build.gradle#L154\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188433442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188437273", "body": "According to your StackTrace, looks like your `store-url` isn't `null`, but doesn't have the proper `protocol` part (`AbstractMailReceiver`):\n\n```\nif (this.url != null) {\n    this.store = this.session.getStore(this.url);\n}\n```\n\nBut afterwards we end up with:\n\n```\nif (protocol == null || protocol.length() <= 0) {\n    throw new NoSuchProviderException(\"Invalid protocol: null\");\n}\n```\n\nFunny, but no choice unless you will try to debug the Spring Integration code and beyond starting from the `AbstractMailReceiver.connectStoreIfNecessary()`.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188437273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188441778", "body": "Well, then you don't have choice unless go to the `Session.getProvider()` via debug from your IDE.\nAccording to the existing logic, since we are reaching that `Session.getProvider()`, I can guess something like this:\n1. Since we overcome the `Pop3MailReceiver` constructor:\n\n```\npublic Pop3MailReceiver(String url) {\n    super(url);\n    if (url != null) {\n        Assert.isTrue(url.startsWith(\"pop3\"), \"url must start with 'pop3'\");\n    }\n    else {\n        this.setProtocol(\"pop3\");\n    }\n}\n```\n1. And can't determine the protocol afterwards in the  `Session.getStore()`:\n\n```\nString protocol = url.getProtocol();\nProvider p = getProvider(protocol);\n```\n1. And end up with the simple exception like:\n\n```\nif (protocol == null || protocol.length() <= 0) {\n    throw new NoSuchProviderException(\"Invalid protocol: null\");\n}\n```\n\nI only see the problem with your `store-url`, when you don't have `:` after `pop3` prefix. And don't have it at all! Something like this: `pop3//outlook.office365.com/INBOX`.\n\nJust have tested it locally and seen the same StackTrace.\n\nWhy have you removed your one here? It is really useful to have the full picture.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188441778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188459546", "body": "???\n\nSorry, @vayalaivadivel , I can't help you anymore from this my side.\n\nYou have to go through the debug from your IDE, since you mentioned that it is a \"spock test\". You should not to remove colon. That was just my assumption what may be wrong in your case. \n\nOtherwise I don't see any how to help you...\n\n(Please, study the GitHub comments syntax: https://help.github.com/articles/creating-and-highlighting-code-blocks/. It's thankless to edit each your post :smile: )\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188459546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/11683066", "body": "What does this file mean ?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/11683066/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/11683528", "body": "This one should be fixed to exclude transitive SF from SS. And seems for we we should upgrade Jackson, too.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/11683528/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/11684367", "body": "The `TestSplitterAggregator#testSearchNoSearchA` fails somehow on `maven test` from `root`\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/11684367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/11685207", "body": "Found the issue. Need `@DirtiesContext(classMode = DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD)` as tests mutate the state of `Search*` object and relies on that state.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/11685207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/15546975", "body": "Actually these properties are used from tests configs for gateways. The use, of course, can specify them as remote dirs according to the SFTP root.\nFor embedded server root I selected the `root` of `sftp` module dir.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/15546975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/14117762", "body": "Wouldn't it be better to rename these `main` classes to reflect their goals?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/14117762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/14117837", "body": "copy/paste issue\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/14117837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/14118113", "body": "Don't see usage of this adapter.\nThe same for another context from this project\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/14118113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/14118204", "body": "We can live with this, although I'd prefer to have custom tasks for each `main` to avoid confuse.\nSee `helloworld` project configuration.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/14118204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/15903912", "body": "I think we can rely on `spring-integration-amqp` transitive dependency\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/15903912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/15903969", "body": "Having these we don't need \n\n```\napply plugin: 'application'\nmainClassName = 'org.springframework.integration.samples.amqp.Main'\n```\n\nanymore\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/15903969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/15903996", "body": "4.0.0 ?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/15903996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/15905724", "body": "Looks like 3.0 is OK: https://jira.spring.io/browse/INTSAMPLES/?selectedTab=com.atlassian.jira.jira-projects-plugin:summary-panel\n\nNP. I am doing all fixes during merge.\n\nYour turn to review my DSL sample :smile: \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/15905724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/16918671", "body": "New line in the end and redundant Copyright\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/16918671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/16919172", "body": "Can be simplified:\n\n``` java\nreturn new Environment().addDispatcher(\"foo\", new ThreadPoolExecutorDispatcher(100, 1)));\n```\n\nAnyway I don't see reason of that, because `GatewayProxyFactoryBean` produces `Promise` based on `defaultDispatcher`, which is `reactor.dispatchers.default = threadPoolExecutor` in your properties file.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/16919172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/16919507", "body": "Good. How about to show here `@EnableReactor` from `reactor-spring-context` since it is a sample project ?\nhttps://github.com/spring-projects/spring-integration/blob/master/spring-integration-core/src/test/java/org/springframework/integration/configuration/EnableIntegrationTests.java#L830\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/16919507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/29841729", "body": "This doesn't have value for the further process.\nWe send a message to the `requestTopic` with specific `jms_replyTo` and both `<int-jms:inbound-gateway>` will reply with the proper `jms_correlationId`.\nHave you had anything specific thought doing this ?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/29841729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/35998953", "body": "As you see by Travis logs, the `--parallel` isn't good again\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/35998953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/36633230", "body": "Minor: new sentence from new line.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/36633230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/36633709", "body": "Or never mind: this is `markdown`, not `asciidoc` :smile: \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/36633709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/36681112", "body": "`$springIntegrationVersion` is more feasible here.\nAlthough I don't think that we should be in a hurry and there is just enough to wait for the proper Boot version to pick up those SI changes.\nWDYT?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/36681112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/40028541", "body": "I can merge it as is, but wonder, first of all, what you have had in mind introducing this `profile`-based configuration...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/40028541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/40045206", "body": "Yes, that's fine. Merging as is after rebase....\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/40045206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/43323819", "body": "Good polishing and I'm merging it anyway.\nJust want to share here my five cents.\n\nThis trick `return to gateway where it will be thrown` isn't obvious and enough complicated to determine throughout the source code. \n\nI wonder if should say anything on the matter in the Reference Manual...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/43323819/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/43323916", "body": "Typo is here anyway :smile: \nFixing on merge...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/43323916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/45222880", "body": "Hi @fbalicchia, one more time!\n\nYeah... This PR need so much redo...\nWould you mind to review it yourself first of all and fix all found issues?\nJust because I'm going to comment here almost on each line.\n\nhttps://github.com/spring-projects/spring-integration/blob/master/CONTRIBUTING.md\nhttps://github.com/spring-projects/spring-framework/wiki/Spring-Framework-Code-Style\n\nshould help you to be close to the perfect :smile: \n\nAnd it would be grate to make samples based on the Spring Boot! \n\nFrom other side you can just let us know how it works for you and we can go ahead with your PR even without comments, but with a lot of rework.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/45222880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47173588", "body": "`Inbound` from the capital letter.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47173588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47173707", "body": "This is a code - 4 whitespaces as an indent.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47173707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47173767", "body": "Typo: i~~n~~**m**port \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47173767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47173834", "body": "all event**s**\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47173834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47174030", "body": "I thing this sentence should start from the new line to avoid an italic style.\n\nsnippend  -> snippet ?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47174030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47174170", "body": "Whitespace before `ean`.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47174170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47174213", "body": "This from the new line as well.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47174213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47174274", "body": "Would be better to see your real name here.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47174274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47174339", "body": "As well as the git config should show your real name as well, but not:\n\n```\nfbalicchia <fbalicchia@gmail.com>\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47174339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47174506", "body": "Minor, of course, but that would be better to have good names for variables.\nI mean the proper camel style here - `channelRestOutput`\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47174506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47174594", "body": "Don't see reason to use `Streams` here. The simple `for (int i = 0; i < 10; i++)` should be enough.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47174594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47175169", "body": "Need to reset color in the end to the `${AnsiColor.DEFAULT}`. Otherwise all my logs are in green. A lot of acid letters :smile: \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47175169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47176112", "body": "`catch` from the new line.\nMinor, of course, but that is how we write the code: https://github.com/spring-projects/spring-framework/wiki/Spring-Framework-Code-Style\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47176112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47176287", "body": "A new line in the end of each file would be good.\nMinor, of course, but as you see this extra noise on review.\nYou can configure your IDE to add it for you.\n\nI don't insist to do all that reconfiguration changes, BTW, but that will save our time on the next your contribution.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47176287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47177162", "body": "This file is redundant. We can just rely on that one from `main`.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47177162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47177171", "body": "DITO\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47177171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47177174", "body": "DITO\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47177174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47177184", "body": "DITO\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47177184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47303174", "body": "I'm curious why do you print your name without Capitals? :smile: \nI can fix on merge, of course, but I'll respect your position.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47303174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47310665", "body": "What is bad here that we rely only on the default port for the Splunk and don't care about that one in the `application.yml`.\nI'm not sure that we will be able to deal with the last one, but, at least, I see simple workaround like this:\n\n```\nSystem.setProperty(\"splunk.port\", \"\" + splunkServer.getPort());\n```\n\nThat definitely overrides the value in the `application.yml`. Therefore our test is able to pass independently of the preference in case of normal application run.\nIn addition I added this as well:\n\n```\nprivate final int port;\n\npublic SplunkWatcher() {\n    this(Service.DEFAULT_PORT);\n}\n\npublic SplunkWatcher(int port) {\n    this.port = port;\n}\n```\n\nSo, I can fix it on merge, but I need to know your opinion regarding capital letters in your name :smile: \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47310665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47416546", "body": "You have missed the `System.setProperty(\"splunk.port\", \"\" + this.port);`, but it is easy to fix on merge :smile: \n\nI tested that just with the change `splunk.port` in the `application.yml` to something different and start test with the normal Splunk port and this `System.setProperty()` option.\n\nSo, merging anyway.\n\nThank you very much!\n\nI guess I can now switch to your SI-Splunk PR, but you feel free to contribute more in any place ! :smile: \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/47416546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79690373", "body": "We need POM in this project any way, but that should be correct one based on the `group = 'org.springframework.integration.samples'`\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79690373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79690521", "body": "Wrong class name. In both places.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79690521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79691590", "body": "Seems for me we don't need this.\nIt is a part of `MailSenderAutoConfiguration`.\n\nI won't mind if I miss something. Then any explanations are welcome.\nThanks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79691590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79693095", "body": "Nit-picking, of course, but can't we rely on the Java DSL 1.2 here already:\n\n```\n.<Object, Class<?>>route(Object::getClass, m -> m\n    .channelMapping(FileSplitter.FileMarker.class, \"markers.input\")\n    .channelMapping(String.class, \"lines.input\"))\n```\n\n?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79693095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79693514", "body": "https://jira.spring.io/browse/INT-4109 has been fixed and Samples is on the SI-4.3.2 already.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79693514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79693879", "body": "My IDEA says that can be replaced with method reference:\n\n```\n.subscribe(sf -> sf.transform(FileSplitter.FileMarker::getFilePath)\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79693879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79694112", "body": "We really don't need `StringBuilder`. \nThe compiler converts simple string concatenation to that one.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79694112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79699168", "body": "https://jira.spring.io/browse/INT-4113.\nI mean add comment here.\nAlthough I think after `getComponentsToRegister()` for the `PollerSpec` we can provide some out-of-the-box workaround just with `errorChannel(MessageChannelString)`\nBut right: that is a different story...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79699168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79700336", "body": "Yep! These are up to `@ConfigurationProperties`. Our own custom one.\nI mean for the real mail server tests.\nBut I see we have so many of options to expose...\n\nMaybe we can live without that for now...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79700336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79721087", "body": "WDYT, if we change this `.enrichHeaders()` just to the `.fileNameExpression(\"payload.substring(1, 4) + '.txt'\")`?\n\nAlthough it doesn't work with your test somehow... But I see in debug the proper expression and expected file name result.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79721087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79829791", "body": "Having the problem with bean definitions order on Linux we should move `Files.outboundAdapter()` to the separate `@Bean`. At least until the fix for https://github.com/spring-projects/spring-integration-java-dsl/issues/119\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79829791/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79829976", "body": "Gary, any ideas why it doesn't work with just `.fileNameExpression()` and I'll merge with the fix for handler bean access.\nThanks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79829976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/80081798", "body": "Well, I think I should come back to my Spring Boot `IntegrationProperties` work and utilize this feature as an auto-config property.\nI think we can do the same for the `@IntegrationComponentScan` as well...\n\nRight, different storty, but I'd like to start a discussion on the matter.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/80081798/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/80084698", "body": "I think we can avoid `ctx.getBean()` here with the `this.flowContext.messagingTemplateFor(hostPort + \".flow\").getDefaultDestination()`. That's why I suggest one more option-method in a refinement of the `IntegrationFlowContext`: https://github.com/spring-projects/spring-integration-java-dsl/issues/125\n\nWDYT?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/80084698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/99134412", "body": "??? You just don't want to promote our \"admin utils\" in test module. Do you ?", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/99134412/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/99134645", "body": "Do we really need `System.exit()` in the end of `main()`?\r\nEspecially when we `close()` ctx, therefore stop all the async processes.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/99134645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/99135630", "body": "Shouldn't we move to `SK-2.0` already ?", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/99135630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/113304453", "body": "Wow! Doesn't it really work as is without any tweaking?\r\nThanks", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/113304453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/136655419", "body": "Would you mind to jump back to the `5.0.0.BUILD-SNAPSHOT` for Spring Integration and remove exclude for the `jackson-module-kotlin`? We don't need it any more since the fix is done in the latest SI.\r\nThanks", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/136655419/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/136656868", "body": "OK. Merging then...\r\nI think the issue with `assemble` we should address in the separate commit:\r\n```\r\nFAILURE: Build failed with an exception.\r\n\r\n* What went wrong:\r\n\r\nUnable to find a single main class from the following candidates [org.springframework.integration.samples.barrier2.ErrorHandlingApplication, org.springframework.integration.samples.barrier.Application]\r\n```", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/136656868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "aarashtaheri": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/174", "title": "kafka: set message key dynamically", "body": "Regarding the kafka sample code, currently you can only have one message key, which you set it in application.properties. After running the application there is no way to change it.\n\nIs there a way to set the message key dynamically, before sending the message?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mmelliott103": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/125", "title": "Missing StringConversionService", "body": "The service class is missing the StringConversionService. I found it in another example in the repo but I'm assuming you would like this code to be self contained.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ghost": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/108", "title": "rest-http POST method", "body": "i want to sent json by post method\nafter change integration configuration \nand write test i send object but response is failed\n\n``` xml\n<int-http:inbound-gateway id=\"inboundEmployeeSearchRequestGateway\" \n        supported-methods=\"POST\"\n        request-payload-type=\"org.springframework.integration.samples.rest.domain.Employee\"\n        request-channel=\"employeeSearchRequest\"\n        reply-channel=\"employeeSearchResponse\"\n        mapped-response-headers=\"Return-Status, Return-Status-Msg, HTTP_RESPONSE_HEADERS\"\n        path=\"/services/employee/{id}/search\"\n        reply-timeout=\"50000\"  \n        >\n```\n\n``` java\n@Test\n    public void testGetEmployeeAsJsonPOST() throws Exception {\n        Map<String, Object> employeeSearchMap = getEmployeeSearchMap(\"0\");\n\n        final String fullUrl = \"http://localhost:8080/rest-http/services/employee/{id}/search?format=json\";\n        HttpHeaders headers = getHttpHeadersWithUserCredentials(new HttpHeaders());\n        headers.add(\"Accept\", \"application/json\");\n        Employee em=new Employee(6, \"ali akbar\", \"azizkhani\");\n        HttpEntity<Employee> request = new HttpEntity<Employee>(em,headers);\n        ResponseEntity<?> httpResponse = restTemplate.exchange(fullUrl, HttpMethod.POST, request,EmployeeList.class, employeeSearchMap);\n        logger.info(\"Return Status :\" + httpResponse.getHeaders().get(\"X-Return-Status\"));\n        logger.info(\"Return Status Message :\" + httpResponse.getHeaders().get(\"X-Return-Status-Msg\"));\n        assertTrue(httpResponse.getStatusCode().equals(HttpStatus.OK));\n        ByteArrayOutputStream out = new ByteArrayOutputStream();\n        jaxbJacksonObjectMapper.writeValue(out, httpResponse.getBody());\n        logger.info(new String(out.toByteArray()));\n    }\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44211700", "body": "```\norg.springframework.http.converter.HttpMessageNotReadableException: Could not read JSON: Unexpected end-of-input within/between OBJECT entries\n at [Source: sun.net.www.protocol.http.HttpURLConnection$HttpInputStream@2392d604; line: 1, column: 101] (through reference chain: org.springframework.integration.samples.rest.domain.EmployeeList[\"employee\"]); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Unexpected end-of-input within/between OBJECT entries\n at [Source: sun.net.www.protocol.http.HttpURLConnection$HttpInputStream@2392d604; line: 1, column: 101] (through reference chain: org.springframework.integration.samples.rest.domain.EmployeeList[\"employee\"])\n    at org.springframework.http.converter.json.MappingJackson2HttpMessageConverter.readJavaType(MappingJackson2HttpMessageConverter.java:228)\n    at org.springframework.http.converter.json.MappingJackson2HttpMessageConverter.read(MappingJackson2HttpMessageConverter.java:220)\n    at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:95)\n    at org.springframework.web.client.RestTemplate$ResponseEntityResponseExtractor.extractData(RestTemplate.java:784)\n    at org.springframework.web.client.RestTemplate$ResponseEntityResponseExtractor.extractData(RestTemplate.java:769)\n    at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:549)\n    at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:510)\n    at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:453)\n    at org.springframework.integration.samples.rest.RestHttpClientTest.testGetEmployeeAsJsonPOST(RestHttpClientTest.java:109)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at java.lang.reflect.Method.invoke(Method.java:597)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)\n    at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)\n    at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)\n    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:232)\n    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:89)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\n    at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:175)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)\n    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)\nCaused by: com.fasterxml.jackson.databind.JsonMappingException: Unexpected end-of-input within/between OBJECT entries\n at [Source: sun.net.www.protocol.http.HttpURLConnection$HttpInputStream@2392d604; line: 1, column: 101] (through reference chain: org.springframework.integration.samples.rest.domain.EmployeeList[\"employee\"])\n    at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:232)\n    at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:197)\n    at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.wrapAndThrow(BeanDeserializerBase.java:1420)\n    at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:244)\n    at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:118)\n    at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:2993)\n    at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2158)\n    at org.springframework.http.converter.json.MappingJackson2HttpMessageConverter.readJavaType(MappingJackson2HttpMessageConverter.java:225)\n    ... 37 more\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unexpected end-of-input within/between OBJECT entries\n at [Source: sun.net.www.protocol.http.HttpURLConnection$HttpInputStream@2392d604; line: 1, column: 101]\n    at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1524)\n    at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS(UTF8StreamJsonParser.java:2546)\n    at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:708)\n    at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:235)\n    at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:118)\n    at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:227)\n    at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:204)\n    at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:23)\n    at com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:525)\n    at com.fasterxml.jackson.databind.deser.impl.FieldProperty.deserializeAndSet(FieldProperty.java:106)\n    at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:242)\n    ... 41 more\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44211700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44238688", "body": "can you add some unit test like this and commit it thanks;\n\n``` java\n@Secured(\"ROLE_REST_HTTP_USER\")\n    public Message<EmployeeList> getEmployee(Message<?> inMessage){\n\n        EmployeeList employeeList = new EmployeeList();\n        Map<String, Object> responseHeaderMap = new HashMap<String, Object>();\n\n\n        try{\n            Employee expl=(Employee)inMessage.getPayload();\n            employeeList.getEmployee().add(expl);\n            MessageHeaders headers = inMessage.getHeaders();\n            String id = (String)headers.get(\"employeeId\");\n            boolean isFound;\n            if (id.equals(\"1\")){\n                employeeList.getEmployee().add(new Employee(1, \"John\", \"Doe\"));\n                isFound = true;\n            }else if (id.equals(\"2\")){\n                employeeList.getEmployee().add(new Employee(2, \"Jane\", \"Doe\"));\n                isFound = true;\n            }else if (id.equals(\"0\")){\n                employeeList.getEmployee().add(new Employee(1, \"John\", \"Doe\"));\n                employeeList.getEmployee().add(new Employee(2, \"Jane\", \"Doe\"));             \n                isFound = true;\n            }else{              \n                isFound = false;\n            }           \n            if (isFound){\n                setReturnStatusAndMessage(\"0\", \"Success\", employeeList, responseHeaderMap);\n            }else{\n                setReturnStatusAndMessage(\"2\", \"Employee Not Found\", employeeList, responseHeaderMap);                              \n            }\n\n        }catch (Throwable e){\n\n            setReturnStatusAndMessage(\"1\", \"System Error\", employeeList, responseHeaderMap);\n            logger.error(\"System error occured :\"+e);\n        }\n        Message<EmployeeList> message = new GenericMessage<EmployeeList>(employeeList, responseHeaderMap);\n        return message;     \n    }\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44238688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44240138", "body": "i want send object (json) by post method and add to list and get list (json);\nwhen i  test it .both in unit test and using rest-client plugin    response in failed and empty .\nwhen i trace see that object have in payload but return message failed.\nthanks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44240138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44252822", "body": "i am using tomcat & maven\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44252822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/45112170", "body": "i think this is cause  when i remove xml in negotiation and remove marshaler ;\ni want to get json just why when i remove it this happen\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/45112170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ffazil": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/107", "title": "No XML example of jdbc outbound gateway", "body": "Is there an no xml example of the basic jdbc sample available? Am particularly interested in converting the following part using annotations. \n\n```\n<bean id=\"personResultMapper\" class=\"org.springframework.integration.samples.jdbc.PersonMapper\"/>\n    <int-jdbc:outbound-gateway data-source=\"datasource\" \n                                request-channel=\"createPersonRequestChannel\"\n                                reply-channel=\"createPersonReplyChannel\"\n                                update=\"insert into Person (name,gender,dateOfBirth) \n                                    values\n                                    (:name,:gender,:dateOfBirth)\"\n                                query=\"select * from Person where id = :id\"     \n                                request-sql-parameter-source-factory=\"requestSource\"\n                                reply-sql-parameter-source-factory=\"replySource\"\n                            row-mapper=\"personResultMapper\"\n                                keys-generated=\"true\"/>\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/43046154", "body": "It will be great if I get a solution immediately even if it is not part of 4.0.x GA release. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/43046154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "pescadorbob": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/106", "title": "INTSAMPLES-127", "body": "with this commit, it seems that the loanshark war won't deploy without adding \n\n``` xml\n<dependency>\n    <groupId>org.springframework</groupId>\n    <artifactId>spring-aspects</artifactId>\n    <version>${spring.version}</version>\n</dependency>\n```\n\nto the loanshark maven pom.  also, now version inconsistencies with insight cause it to not deploy with insight.\nloanshark uses `spring 4.0.0.RC1` spring, but the spring insight plugins depends on spring framework version `3.2.1.RELEASE` and spring.integration.version `2.2.1.RELEASE`.\nIs it possible that the insight war dependencies are getting into the classloader for loanshark?\nI see the following error occur when I deploy and start loan shark:\n\n```\n28-Apr-2014 10:57:28.437 INFO [localhost-startStop-1] org.apache.catalina.core.ApplicationContext.log Initializing Spring root WebApplicationContext\n28-Apr-2014 10:57:36.929 SEVERE [localhost-startStop-1] org.apache.catalina.core.StandardContext.listenerStart Exception sending context initialized event to listener instance of class org.springframework.web.context.ContextLoaderListener\norg.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.integration.config.ConsumerEndpointFactoryBean#0': Cannot resolve reference to bean 'org.springframework.integration.config.TransformerFactoryBean#0' while setting bean property 'handler'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.integration.config.TransformerFactoryBean#0': FactoryBean threw exception on object creation; nested exception is java.lang.NoClassDefFoundError: org/springframework/integration/MessageHeaders\nat org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:336)\nat org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)\nat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1456)\nat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1197)\nat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)\nat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)\nat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:304)\nat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)\nat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:300)\nat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:195)\nat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:684)\nat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)\nat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)\nat org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)\nat org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)\nat org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)\nat org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4939)\nat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5434)\nat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\nat org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:901)\nat org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:877)\nat org.apache.catalina.core.StandardHost.addChild(StandardHost.java:633)\nat org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:983)\nat org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1660)\nat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\nat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\nat java.util.concurrent.FutureTask.run(FutureTask.java:166)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\nat java.lang.Thread.run(Thread.java:724)\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.integration.config.TransformerFactoryBean#0': FactoryBean threw exception on object creation; nested exception is java.lang.NoClassDefFoundError: org/springframework/integration/MessageHeaders\nat org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:151)\nat org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)\nat org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1514)\nat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:252)\nat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:195)\nat org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:328)\n... 29 more\nCaused by: java.lang.NoClassDefFoundError: org/springframework/integration/MessageHeaders\nat com.springsource.insight.plugin.integration.AbstractIntegrationOperationCollectionAspect.<clinit>(AbstractIntegrationOperationCollectionAspect.aj:40)\nat org.springframework.integration.transformer.MessageTransformingHandler.<init>(MessageTransformingHandler.java:49)\nat org.springframework.integration.config.TransformerFactoryBean.createHandler(TransformerFactoryBean.java:69)\nat org.springframework.integration.config.TransformerFactoryBean.createMethodInvokingHandler(TransformerFactoryBean.java:59)\nat org.springframework.integration.config.AbstractStandardMessageHandlerFactoryBean.createHandler(AbstractStandardMessageHandlerFactoryBean.java:97)\nat org.springframework.integration.config.AbstractSimpleMessageHandlerFactoryBean.createHandlerInternal(AbstractSimpleMessageHandlerFactoryBean.java:113)\nat org.springframework.integration.config.AbstractSimpleMessageHandlerFactoryBean.getObject(AbstractSimpleMessageHandlerFactoryBean.java:101)\nat org.springframework.integration.config.AbstractSimpleMessageHandlerFactoryBean.getObject(AbstractSimpleMessageHandlerFactoryBean.java:43)\nat org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:144)\n... 34 more\nCaused by: java.lang.ClassNotFoundException: org.springframework.integration.MessageHeaders\nat org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1702)\nat org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1547)\n... 43 more\n\n28-Apr-2014 10:57:37.211 INFO [localhost-startStop-1] org.apache.catalina.core.ApplicationContext.log Closing Spring root WebApplicationContext\n```\n\nand message handers isn't in spring 4, so why ask for it.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/41597912", "body": "If I back out the change, then I am able to run the sample with spring insight.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/41597912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "garyrussell": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/2cef8584807c321de3cffdfd3588ec24eef94735", "message": "Fix Link in README"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/e8fc589c5d0246ee0063509fd4acf74cb0dfd8b4", "message": "Upgrade Several Versions"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/c68666607731ba75d7e4c84b27b194e69b72a566", "message": "Upgrade to gradle 4.1"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/e37904128e2c2ebb0a5f07cdd0e98af3094a3ecf", "message": "INTSAMPLES-150: Switch to Log4j2\n\nJIRA: https://jira.spring.io/browse/INTSAMPLES-150"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/fdb9ddceeb99b9b01a9c8fd35966624a8e03c19b", "message": "Upgrade to Gradle 3.5"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/a198e45239c784d2f5aa8dfaad34d087095a800a", "message": "Kafka_DSL Sample Improvements\n\n- get rid of topic creator and scala deps\n- use boot properties\n- demonstrate using the DSL to dynamically add adapters"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/038ee4576ac2119958e5c8d4ad2681402cd60e2e", "message": "Kafka Sample Improvements\n\n- get rid of topic creator and scala deps\n- use boot properties\n- demonstrate using the DSL to dynamically add adapters"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/65368f79596740583e728069c61c63e2f130177f", "message": "5.0 README"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/171dd510241d463c0e9689a46391a15a34243317", "message": "Update file-split-ftp Visualization"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/948e5135cd436840ec887e1c4d6e3c4e903aa5aa", "message": "Generate POMs"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/933b3f015a9389e57d91b766cc87767bf0ddd642", "message": "file-split-ftp Move errorChannel to Poller"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/b3bab0dea2dc3317e4567f4b3752ad11d8836ab9", "message": "Revert \"file-split-ftp Move errorChannel to Poller\"\n\nThis reverts commit 7b84810388f91dc7c0524100e80f4059ee0a88da."}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/7b84810388f91dc7c0524100e80f4059ee0a88da", "message": "file-split-ftp Move errorChannel to Poller"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/42294bf8314018e435f62855d74b70a9ec722183", "message": "Update to Spring Integration 4.3.4"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/4e37b9ad5c6e8578870a75a0ab01f740f3e97230", "message": "Update to Spring Integration 4.3.3"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/2e103f6f34f65824cabee44e63f274ed5bf2a6c9", "message": "Add dynamic-tcp-client Sample\n\nUtilizing the new DSL dynamic flow registration.\n\nPolishing - forgot to save this before pushing.\n\nsync\n\nPolishing\n\n* Upgrade to Boot-1.4.1"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/2c1a070930b54b724d6377f85211e872bf2c6a24", "message": "Add file-split-ftp Sample\n\nJIRA: https://jira.spring.io/browse/INTSAMPLES-149\n\nPolishing - PR Comments\n\nPolishing - Work Around DSL Issue #119\n\nMake test compatible with Windows.\nAlso reset Application context `DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD`.\nSince tests uses the same target resources we should be sure that they use clear foundation before running"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/b6cbf15e4c9cdb8ef1d6440494927b7d6066f112", "message": "Update to spring-kafka 1.1.0.M1"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/006468fca3ec08f4f2576a36068e430bafd7624a", "message": "Add Java DSL"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/cf8e76301f9e9bb0a5eb5602f2f2317cf5f95f19", "message": "Fix Links"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/f18f567bc703373340d2aa5e7ec3e1f00e81476e", "message": "Add Contributing"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/a13e153d5b76c6cc8da6f80af9eda92b9079311e", "message": "Regenerate POMs"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/f943f5e20ff8db90016bd637a9c0a39be11b7007", "message": "Kafka - Update to S-I-K 2.0\n\nPolishing"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/b52ee9ed9c4f247e2b0c9162d6c90f31e71b3cfa", "message": "Add MQTT Sample\n\n* Move `ftp` `log4j` dependency to the `testCompile` configuration\n* Regenerate POM for MQTT sample"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/8f7fb189c06e636f3af9faecda54b8ea63bb6958", "message": "Barrier README Polishing"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/3c855f82047c2e5f639bbec47ad44b4782b366da", "message": "Barrier Error Handling"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/7ec8687efc5fa62d4c3363c6b1d032a31094c99c", "message": "Fix retry-and-more Sample Bug\n\nIncorrect SpEL for rename."}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/b335846952250759f1aafcd34074a6e9d57eeb5d", "message": "Barrier: Fix Banner w/ eclipse Ansi Console"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/69d39f7ff257410ed27a2947e39a7964bcf1482f", "message": "Barrier Sample Boot Banner"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/50d4234675bdf39587df35eef0084acb044a3dc3", "message": "Update to Boot 1.3.0.RELEASE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/d10509ca374c813fa5acaf66777da8c20561bfe8", "message": "TCP: Clarify Async Exception Handling"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/d220665bc76499134c5fdb3e9913df0541a2de0d", "message": "Cafe-DSL: Fix Deprecation"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/76efa61056202458128b7c139c9bec843cb15a99", "message": "Fix Kafka POM, Test Package Name\n\nhttp://stackoverflow.com/questions/33402448/spring-integration-kafka-maven-build-error-cant-find-spring-integration-kafka"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/15f78146e0c8c435166512219fa06eb16a06267d", "message": "TCP Async - Add Timeout Test\n\nhttp://stackoverflow.com/questions/32614395/spring-integration-tcp-outbound-channel-adapter-that-detects-connection-loss-and/32617568#comment54590607_32617568\n\nPolishing - PR Comments"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/23f4a04661abf195a7eb0c7ed5744b844d916ef7", "message": "Barrier: Use Boot AutoConfig for RabbitMQ\n\nAlso support a browser GET."}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/ecab656cc15f2067c548c7dbdfdcfcc5a512cda3", "message": "INTEXT-191: Add Apache Kafka Sample\n\nJIRA: https://jira.spring.io/browse/INTEXT-191\n\nPolishing and build.gradle fix for pom generation"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/db3d78109fe614c3e398fd357be8d6ef473f8473", "message": "INTSAMPLES-144: Barrier Sample\n\nJIRA: https://jira.spring.io/browse/INTSAMPLES-144\n\nINTSAMPLES-144: Use o-c-a for Release\n\nINTSAMPLES-144: Switch to Spring Boot\n\nINTSAMPLES-144: Polishing\n\n* Upgrade to SI-4.2, SF-4.2, Boot-1.3\n* Fix: https://jira.spring.io/browse/INTSAMPLES-145"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/dd7871a7ba9cdb9b621a22dc1f021da8ef0e7ba2", "message": "Gradle 2.5; Travis"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/61603c2437a654cafb33abb05c8c7c8119b65ac1", "message": "INTSAMPLES-143: Fix Package Tangles\n\nJIRA: https://jira.spring.io/browse/INTSAMPLES-143\n\nAdd Sonar support to build.gradle.\n\nFix critical violations."}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/70b4d12870fe5fc9cc1633a045dc30eafc58bc24", "message": "Update pom.xml\n\n- Set version to 4.1.0.BUILD-SNAPSHOT\n- Regenerate all poms"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/f30bb5f15b93a08d18997739cbaa6bd15835c6af", "message": "Add Retry to (S)FTP; Update SI 4.1.6\n\nhttps://build.spring.io/browse/INTSAMPLES-NIGHTLY-JOB1-1430/test/case/97845436"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/b5e7cfa16ac14bc0e0ab5f74f2bd8108b011d04b", "message": "INT-3692: Add Annotation-Based TCP Demo"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/49e0a25e8e0b346c531263d453ac880552f2a923", "message": "Add JMS Aggregator Sample\n\nRemove useless `correlation-id` header mapping"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/c525e43299573ab1734189b6b7728c1fe47eac7e", "message": "Use Generated Port for Boot Test Cases"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/77116fc3154381894cedbfedcc903d0546fbb9c3", "message": "Update to Spring Integration 4.1.0.RELEASE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/5216cf10b659c378c23bf7436cde61829265bbe0", "message": "Update README for Versions"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/f37f993499dbd824430274f2a865ed05860fc9ae", "message": "SpringOne ReadMe Updates"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/59dcdd915e42fb7f403e223095610f57ca5a722d", "message": "SpringOne 2014 @Config to DSL (E-G)"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/a97acde67b14b2f69b2a78b03ed6d63d6efeacdd", "message": "SpringOne 2014 XML to @Config (A-E)\n\nAXML thru EDSL.\n\nFMail is the same as EDSL with placeholders\n\nGIMAP is empty"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/b20a275a6a0a32168f37b63789d0042ff516dcf4", "message": "INTSAMPLES-136 Async GW Promise/ListenableFuture\n\nJIRA: https://jira.spring.io/browse/INTSAMPLES-136\n\nPolishing - PR Comments\n\n* Add `compile \"org.projectreactor.spring:reactor-spring-context:$reactorSpringVersion\"` dependency\nto show a usage of `@EnableReactor`\n* Make `async-gateway` project Java 8 compatible and replace inline implementations for callbacks to Lambdas"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/3296463fb80338787a148dfd2a4f81e7fd7d18b9", "message": "TCP Sample - Use <o-t-s-t />\n\nReplace expression-based transformers with <o-t-s-t/> now that\nit can handle `byte[]`."}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/28116776c29dab796d0a948d2377b650e22fd1ed", "message": "INTSAMPLES-132 AMQP Publisher Confirms/Returns\n\nJIRA: https://jira.spring.io/browse/INTSAMPLES-132\n\nPolishing - PR Comments"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/9eccb86adf21eb7d3019714faf1adde63e84e01d", "message": "Update to Spring Integration 4.0.3"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/4c1f7d452c3d5af0b950ee22defe267bab869f8b", "message": "INTSAMPLES-130 Fix Eclipse WTP for Web Samples\n\nJIRA: https://jira.spring.io/browse/INTSAMPLES-130\n\nEnable `Run As | Run on Server ...` when using eclipse.\n\nThe wtp config was lost when the samples were converted\nto gradle.\n\nUpgrade to SI-4.0.2 and Boot 1.1.0.RELEASE\nPolishing according upgrading"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/cc07c37e7a0495235e679988a0eb192c3cea633a", "message": "Add Eclipse bin/ Directory to .gitignore"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/148e7b52c26601927efe3323cf93f3dc9d68ab49", "message": "si4demo Spring Integration 4.0 Demo\n\nhttps://spring.io/blog/2014/05/15/webinar-replay-spring-integration-4-0-the-new-frontier"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/cc579226d696e6c97743f9327fe4e7d19651b085", "message": "INTSAMPLES-127 Polishing\n\n- PR Comments\n- Switch to Jackson2\n- Fix oxm config\n\nPolishing\n\nINTSAMPLES-127 Update to SI 4.0.0.RC1\n\nINTSAMPLES-127 Remove Servlet Dependency\n\ntravel sample; see INT-3350.\n\nINTSAMPLES-127 Update Samples to SI 4.0.0\n\nJIRA: https://jira.spring.io/browse/INTSAMPLES-127\n\nCreated `maint` branch for ongoing SI 3.0.x samples."}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/c5b1ace70fa37a5f476d2e55ed006c588042391a", "message": "Fix Typo in tcp-amqp Sample Config"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/33f8783f13a47cec9dc55559ad73c241d65c376b", "message": "INTSAMPLES-128 Update SI to 3.0.2, SF to 3.2.8"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/d9fba154b306a8c7f4a134cae216ac4daa5000e4", "message": "Change Maven Repos to spring.io"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/ed736aa499d14046a477160479f75c5b7437aa30", "message": "INTSAMPLES-117 Remove cache-sessions - FTP Sample\n\nCompatibility with SI 3.0; also bump to 3.0.0.M3."}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/0f6fb885c274af9c5b9448b4c68862bb436bbd07", "message": "Dynamic FTP Add Link to Forum For Inbound"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/e190c160f168935d4632ff9bec779e1291814b4d", "message": "INTSAMPLES-119 Update Monitor for Twitter OAuth\n\nTwitter now requires authentication.\n\nDisable the real twitter adapter by default; enable it\nwith spring.profile \"twitter\" - requires the user to get\nreal oauth tokens.\n\nReplicate oauth setup instructions from the twitter sample.\n\nAdd note to README for enabling the real twitter adapter.\n\nAdd .gitignore so committers can keep their real credentials\nin, say, 'oauth.properties.foo'.\n\nAdd note about `SpringIntegrationTest`.\n\nUpdate dummy tweets to use new icon.\n\nINTSAMPLES-119 Polishing\n\n- Fix 'twitterTemplate' bean name\n- Add content to log and JMX Notification\n\nJIRA: https://jira.springsource.org/browse/INTSAMPLES-119"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/8454c9f564c3cb017895fc528e32f3fb44fe8c14", "message": "Update SI Version 2.2.0 -> 2.2.6"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/99fe63dc354dc398b08fbab560a9b49c9c5b4d02", "message": "INTSAMPLES-106 JMS: Eliminate Hijack of stdout\n\nCaused unusual behavior when exceptions occurred, or debug\nlogging enabled.\n\nNow uses Spring profiles to route the output to a QueueChannel\ninstead."}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/ee8de8c6b0e0aea8f9d2f8afdee22239c5d1f660", "message": "INTSAMPLES-95 Add Remote Monitor\nINTSAMPLES-95 Add OperationInvokingAdapter\n\nFor reference see: https://jira.springsource.org/browse/INTSAMPLES-95"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/cbd1a06a2c58f9d99cb59edb71d4c37c4d82a14f", "message": "INTSAMPLES-81 File Sample: Fix FWMH Field Access\n\nFileWritingMessageHandler:\n\nSample accessed 'destinationDirectory' field; it\nis now 'destinationDirectoryExpression'."}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/7a7733b3eda21ddab4572d627a005320dba703cb", "message": "INTSAMPLES-91 Fix Typo In Directory Name\n\nREADME.md and sysout for copy/paste had txSynchDir instead of\ntxSynchDemo."}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/84aefe6766b59840d78e23c5ed857383c7d56421", "message": "INTSAMPLES-94 Monitoring Fixes\n\n- Missing imports\n- Remove schema version in config file\n- Update to RC1\n- Use <context:mbean-server/>"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/80986a00801e4e18e31dcbf61b809241117033a4", "message": "INTSAMPLES-91 Transaction Synchronization Sample\n\nINTSAMPLES-91 Initial Commit\n\nINTSAMPLES-91 Polishing\n\nINTSAMPLES-91 Add JDBC Activity"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/542f3569e4e06abb5ef1d08c4520692a25f603a0", "message": "INTSAMPLES-88 Message Handler Advice Samples\n\nInitial Commit\n\nStateless Retry\n\nINTSAMPLES-88 Add Stateful Retry (AMQP)\n\nINTSAMPLES-88 Add Circuit Breaker Demo\n\nINTSAMPLES-88 Add Expression Evaluating Advice\n\nSee README.md\n\nFix EE\n\nPolishing"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/e2dc83b725eade364476ac3c35a22cd5944c1b5c", "message": "Webinar End State\n\nThe state of the project at the end of the webinar,\nuse git log -p <this commit> to see what changed."}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/dbd1be35798081076385e02a2563fa7ce5b77839", "message": "Initial State\n\nstart point"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/12b293c1c7f3cfe93bb6a1fbb1b9f3feaacd884e", "message": "INTSAMPLES-82 Fix Exception"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/84b08f135dd16ade85382497a4520bc1e0d68b1f", "message": "Merge pull request #48 from ghillert/INTSAMPLES-62"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/fa65ee054104c7787c641fc58981fbff3ea8caaf", "message": "INTSAMPLES-66 Standard log4j Pattern"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/cd388053d4eb6b0785e687502a12866017d4b595", "message": "INTSAMPLES-66 TCP/AMQP Bridge\n\n    telnet->tcp-inbound-adapter->amqp-outbound-adapter->amqp->amqp-inbound-adapter->tcp-outbound-adapter->netcat\n\nFor reference see: https://jira.springsource.org/browse/INTSAMPLES-66"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/693dae8869d677cbc726961725e54cb640f59bd7", "message": "Merge pull request #49 from ghillert/INTSAMPLES-52"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/80653acd073c2c2c5243b717d603ec6dd4603dae", "message": "INTSAMPLES-76 Wait for Server (Intermediate)\n\nAlso need to wait in the intermediate TCP sample."}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/433cff0a407cd3b11305038e1bf17318292db005", "message": "INTSAMPLES-76 Wait For Server\n\nAdd utility and @Before methods to all tests\nto wait for the server to start before starting."}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/02059beadd12c37c98bd3bbbeda5ca87090710c9", "message": "Merge pull request #53 from ghillert/INTSAMPLES-76-2"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/f9f8fc5030e71879edd310cdd7818d397e4d11e0", "message": "Merge pull request #52 from ghillert/INTSAMPLES-76"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/566e1a76aa65876a6b27c20b6cdeb8790fdc736a", "message": "INTSAMPLES-75 Fix For 2.2.0.M1\n\nChange MessageHandlingException to MessagingException."}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/3cacd502534185b8285085de745f4301b3299b8c", "message": "INTSAMPLES-74 2.2.0.M1 (SF 3.1.1) Compatibility\n\nChange 'user' property to userid to avoid conflict\nwith environment property."}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/66b25d33198b1764d358211b7d41ee9d036dea54", "message": "Merge pull request #43 from ghillert/INTSAMPLES-54\n\nINTSAMPLES-54 - Update README.md"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/1cea69c371ba97a3697d3b50409e797d63747df2", "message": "Merge pull request #44 from ghillert/INTSAMPLES-55\n\nINTSAMPLES-55 - Update README.md for OddEven Sample"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/9d14c3f0b2d7378554d76faa9cc11291f749cff6", "message": "Merge pull request #41 from ghillert/INTSAMPLES-53\n\nINTSAMPLES-53 Update README.md\r\n\r\nLGTM"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/4dc47bf2f7dfe6c015286a7f738cf0ddc36c3eb2", "message": "Merge pull request #42 from ghillert/INTSAMPLES-56\n\nINTSAMPLES-56 Update README.md for ws-outbound-gateway sample"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/97dae9ed68e9a706263638c1e7d4bb828a833077", "message": "Merge pull request #40 from ghillert/INTSAMPLES-57\n\nINTSAMPLES-57 Update README.md"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/1930a92bbee9e586106a5cf112f3b1d9c0bef02d", "message": "Merge pull request #39 from ghillert/INTSAMPLES-46\n\nINTSAMPLES-46 - Remove Eclipse Meta Data files"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/4b67641e3ae6a82420083c171cf51c2ff645aaf2", "message": "Merge pull request #35 from ghillert/INTSAMPLES-59\n\nINTSAMPLES-59 - Remove Twitter4j reference"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/2b144d12d348385b8594bbc23c3ba5df5f91b93d", "message": "Merge pull request #30 from ghillert/INTSAMPLES-42\n\nINTSAMPLES-42 - Convert all ReadMe files to MarkDown"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/d451e2e6654d44c679f3939a2cd697b52220f512", "message": "Merge pull request #29 from ghillert/INTSAMPLES-47\n\nINTSAMPLES-47 - Upgrade SI dep. to 2.1.0.RELEASE"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/1902885", "body": "I'll talk to Gunnar - it looks like you need to add\n\n``` xml\n    <int-amqp:outbound-channel-adapter channel=\"toRabbit\"\n        amqp-template=\"amqpTemplate\" exchange-name=\"si.test.exchange\" \n        routing-key=\"si.test.binding\"/>\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/1902885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/1903240", "body": "Yes - I saw that in Kenneth's pull request; not sure how you want to handle it; I will merge in Kenneth's patch and re-push.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/1903240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/1903393", "body": "Merged into my branch and now included with request #9\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/1903393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/1903403", "body": "Merged kenneth's changes and closed his pull request; this should merge cleanly now.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/1903403/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/2206489", "body": "They don't run because they're ...Sample.java not ...Test.java.\n\nBTW I followed the model of the other tests in the sample which would have the same problem if they ran.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/2206489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3170585", "body": "Both done; thanks for reviewing.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3170585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3224247", "body": "PR #22 Merged; Rebased and pushed -f\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3224247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3466697", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3466697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3547975", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3547975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3750840", "body": "Thanks; Spring Integration 2.1 was changed to used spring-social instead of Twitter4j and it looks like the sample wasn't updated to match. Unfortunately, the tests are named such that they are not run by the Maven build so when the samples were updated to 2.1, nobody realized the tests were broken.\n\nI have opened  a JIRA here... \n\nhttps://jira.springsource.org/browse/INTSAMPLES-59\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3750840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3750914", "body": "Thanks, but before we can take a look, please sign the CLA for Spring Integration?\n\nhttps://support.springsource.com/spring_committer_signup\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3750914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3759432", "body": "Thanks!\n\nMark will be notified directly.\n\nI merged Gunnar's version of the patch because he also made a small change to the read me file.\n\nBut, thanks; we look forward to any future contributions you wish to make.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3759432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3871635", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3871635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/4901490", "body": "All addressed.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/4901490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5770464", "body": "Gunnar - will merge, but dropping the sleep 1000 to 100 - we only want to wait 10 seconds, not 100\n\nalso incrementing twice\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5770464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5989195", "body": "Pushed - I don't know how that bogus test got included - I probably cloned some other project.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5989195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/7641171", "body": "Pushed updates for review comments - when merging, please squash the last 2 commits, but leave the first one (start point) as a discrete commit.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/7641171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/11287936", "body": "Actually I think it goes beyond this; there are other queues that deliveries come back on (hot drinks and cold drinks baristas).\n\nRather than using the converter just on the inbound I think we should use the JSON converter on **all** adapters, and remove all the json transformers. That way, the headers will be set up correctly for the default json converter on the inbound.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/11287936/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/12943908", "body": "The credentials are shown in the test case...\n\nhttps://github.com/SpringSource/spring-integration-samples/blob/master/intermediate/rest-http/src/test/java/org/springframework/integration/samples/rest/RestHttpClientTest.java\n\nYes, it's SPRING/spring\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/12943908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/13238471", "body": "See: http://blog.springsource.org/2012/10/09/spring-integration-2-2-retry-and-more/\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/13238471/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/13290619", "body": "This is not an appropriate place for this kind of discussion; please use the forum... http://forum.springsource.org/forumdisplay.php?42-Integration\n\nThat said - we can't implement everyone's use cases in the framework; we provide common functionality, while providing extensibility. If the supplied advice classes don't exactly meet your requirements, you are free to implement your own.\n\nhttp://static.springsource.org/spring-integration/reference/html/messaging-endpoints-chapter.html#custom-advice\n\nIf you come up with something that you feel has wider appeal and will be useful to the community, consider issuing a pull request on the spring-integration-extensions repository.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/13290619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/13610923", "body": "What do you mean by \"hard time\" ??\n\nThe readme seems pretty clear to me\n\n```\ncd basic/tcp-client-server\n$ mvn clean package exec:java\n```\n\nOr, import it into your IDE of choice (using the maven pom) and explore.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/13610923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/22298434", "body": "Hi, \n\nThanks very much for your contribution! I just wanted to let you know that we are not ignoring you; we are quite busy right now, with SpringOne2gx coming up in a few weeks.\n\nWe'll take a look at this and hopefully get it merged as soon as possible.\n\nThanks again!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/22298434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/27122103", "body": "Thanks for your contribution - before we can look at it, please be sure to \"sign\" the CLA, as described in the [contributing guidelines](https://github.com/spring-projects/spring-integration/blob/master/CONTRIBUTING.md).\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/27122103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/27151183", "body": "Thanks again \n\nrelated to #70 \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/27151183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/28742681", "body": "Pushed changes; thanks for the feedback!\n\n@artembilan Can you merge this tomorrow, unless you see any issues.\n\nThanks.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/28742681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/33027150", "body": "The non-versioned files on the internet are for a very old version of Spring Integration (1.0.3); if we change it, it will break applications that use that version.\n\nSpring loads the correct versioned schema from the classpath. Some IDEs (STS, IDEA) understand this and load it from there too.\n\nOther IDEs (e.g. native eclipse) allow you to add schemas to the IDE configuration. I don't know if NetBeans has that feature.\n\nWe are considering replacing the \"old\" schemas but have not done so yet.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/33027150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/35786263", "body": "Thanks, I've opened a JIRA issue for this; I will take a look over the weekend...\n\nhttps://jira.springsource.org/browse/INTSAMPLES-126\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/35786263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/35789596", "body": "This appears to be an SI 3.0.x regression problem, when the stream outbound adapter is declared within a chain.\n\nIf you change the POM to use 2.2.6.RELEASE instead of 3.0.0.RELEASE, it works as described.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/35789596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/35817933", "body": "Merged\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/35817933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/38527273", "body": "Many thanks for your contribution.\n\nBefore we can take a look, did you \"sign\" the CLA, as discussed in the [contributor guidelines](https://github.com/spring-projects/spring-integration/blob/master/CONTRIBUTING.md)?\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/38527273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/40628165", "body": "I added the jackson changes\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/40628165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/41605404", "body": "Yes, unfortunately we broke it; https://jira.spring.io/browse/INTSAMPLES-129\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/41605404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/41606047", "body": "Also, please see the note in the README on master...\n\n> This (master) branch requires Spring Integration 4.0 or above. For samples running against earlier versions of Spring Integration, use the maint branch.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/41606047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44314013", "body": "`./gradlew` is not executable - will fix during merge.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44314013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44315329", "body": "I am getting this error...\n\n```\n:javaconfig:processResources\n:javaconfig:classes\n:javaconfig:jar\n:javaconfig:bootRepackage FAILED\n\nFAILURE: Build failed with an exception.\n\n* What went wrong:\nExecution failed for task ':javaconfig:bootRepackage'.\n> Unable to find a single main class from the following candidates [org.springframework.integration.samples.javaconfig.annotations.Application, org.springframework.integration.samples.javaconfig.dsl.Application]\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44315329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44435479", "body": "Merged.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/44435479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/46851330", "body": "Merged.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/46851330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/49612845", "body": "Looks good; thanks; I will change the initial backoff back to 2000 and add a note to the readme and then merge.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/49612845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/49620765", "body": "Merged\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/49620765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/50479647", "body": "Apache has a base 64 decoder; we should use that instead (or I wrote my own 10+ years ago, I can try to find it).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/50479647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/50479745", "body": "Also, @liujiong1982 's JDK in China doesn't have it.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/50479745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/50486979", "body": "We should change that too.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/50486979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/50493141", "body": "hostkey.ser (binary) should be in `.gitignore` the server will create it.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/50493141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/50497438", "body": "Are you saying it doesn't work on Windows? Can't that be fixed?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/50497438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/50656871", "body": "Polishing to make the tests work properly with a remote `SSHD` here:  https://github.com/garyrussell/spring-integration-samples/commit/dadc8082cfda2df5ed4770ea2b87cee0323ab72a\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/50656871/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/50709266", "body": "Merged.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/50709266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/51397306", "body": "Pushed\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/51397306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/51401396", "body": "Thanks; can you clear up these minor issues during merge?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/51401396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/53921767", "body": "[REVIEW ONLY]\n\nNeed to wait for 4.1.0.M1.\n\nAlso there's a concurrent modification problem in `reactor` - see hipchat room.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/53921767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/53934982", "body": "Pushed\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/53934982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/56952971", "body": "Merged\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/56952971/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/59092899", "body": "Just to document our Skype chat - works ok with Firefox on Linux, but not Chrome on OS X. Connect and Join works, but messages don't appear in the \"Room\".\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/59092899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/59098381", "body": "Merged as 63232c2974f74ed46bf0de93e4c9729449b460fd\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/59098381/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/65802707", "body": "Can you explain which sample you are talking about? I only see `StringConversionService` used in `stored-procedures-ms` and `stored-procedures-oracle`, and the interface `StringConversionService.java` appears in both projects.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/65802707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/68748774", "body": "Merged\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/68748774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/105570810", "body": "What are you using for dependency management?\n\n`NoSuchProviderException` means the respective jars are missing from your runtime classpath.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/105570810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/129019416", "body": "Pushed (switched to boot).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/129019416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/142091960", "body": "Hmmm - travis failure?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/142091960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/142095636", "body": "The last time I generated poms; I dropped gradle back to 1.9 (temporarily - just for the generate) - I didn't have time to figure out how to get it to work with a more recent gradle.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/142095636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/142113620", "body": "Cool; good work; go ahead.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/142113620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/145521349", "body": "Thanks for the contribution.\n\nYes, the dependency must go in build.gradle (which is where we generate the poms from.\n\nAlso, we need you to \"sign\" [the CLA](https://github.com/spring-projects/spring-integration/blob/master/CONTRIBUTING.md) before we can merge your PR. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/145521349/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/151998089", "body": "Good point - pushed.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/151998089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/151998376", "body": "Re-pushed (typo)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/151998376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/158413568", "body": "The DSL is \"better\" (less verbose) when using lambdas, but they are no means required; it fully supports Java 7.\n\nAs Artem said, we are adding annotation-based configuration to the reference manual as time permits, we have done a few recently, but generally it's driven by specific user requests.\n\nSame thing with the samples; we just don't have the resources to provide annotation-based versions for them all in one go.\n\nIf there is something specific you need help with we can try to accommodate.\n\nContributions are welcome too.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/158413568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/159423809", "body": "Thanks for the contribution; unfortunately it will probably be a couple of weeks before we can look at it (due to holidays, vacations, business travel, for the next two weeks).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/159423809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/172872865", "body": "See [INT-3934](https://jira.spring.io/browse/INT-3934) for a fix on master (4.3) and a work-around for earlier versions.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/172872865/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/306386", "body": "-core and -stream - duplicate deps\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/306386/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/306416", "body": "Does this imply m2e 1.x? Vs. 0.x?\n\nMaybe we should remove the nature altogether.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/306416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/306420", "body": "Hmmm... I thought we weren't including eclipse metadata files? (.project, .classpath etc).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/306420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/309873", "body": "Had a weird glitch in STS - kept saying 'No JUnit Tests found'.\n\nAdded a dummy test..\n\n```\n    @Test\npublic void t() {}\n```\n\nand it ran find; deleted the dummy test; still runs fine. Weird.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/309873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/347278", "body": "disappear\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/347278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/432853", "body": "In order to run the client... should start on a new line.\n\nPerhaps splitting up into server and client sections\n\n## Server\n\n## maven\n\n...\n\n## STS\n\n...\n\n## Client\n\n## maven\n\n...\n\n## STS\n\nmight be better\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/432853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/443979", "body": "We should probably mention that every 5th number returned by Counter is negative and therefore filtered.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/443979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/452808", "body": "Although correct - this looks a little confusing - using the passed-in time unit, but converting to millis.\n\nThe timeunit is only ever used outside of here for the initial delay.\n\nSuggest moving the TU to setInitialDelay, or remove it altogether and just work with Millis.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/452808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/452845", "body": "Need to catch exceptions for invalid input, or at least put the System.exit() in a finally block.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/452845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/452869", "body": "How about...\n\nexpression=\"new java.text.SimpleDateFormat('yy/MM/dd hh:mm:ss.SSS').format(new java.util.Date())\"\n\n??\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/452869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/452878", "body": "Need to point out that the change to the trigger will occur after the NEXT poll at the current rate - if currently 60 seconds and you change it to 1 second, it can take up to 60 seconds to take effect, depending on when in the polling cycle you make the change.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/452878/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/453870", "body": "Hmmm... that doesn't mean it's right :-)\n\nWould you object to changing it to...\n\n```\npublic DynamicPeriodicTrigger(long period, TimeUnit timeUnit) {\n    Assert.isTrue(period >= 0, \"period must not be negative\");\n    this.period = timeUnit.toMillis(period);\n    this.initialDelayTimeUnit = (timeUnit != null) ? timeUnit : TimeUnit.MILLISECONDS;\n}\n```\n\n(note change of field name)\n\nas well as adding a comment to the field period to indicate it is always milliseconds?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/453870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/835250", "body": "I think we should stick with a hard-wired socket for the TelnetServer - it's a main so it won't run as a test in the build. Having to dig around to find out which socket to telnet into increases the price of admition.\n\nHow about a simple constant that is set in the environment. They can change the constant if they have a conflict.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/835250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/837999", "body": "In my experience, using arbitrary short sleeps less than a few seconds is not sufficient and, increasing the sleep time, unnecessarily increases the build time, which can be frustrating. I prefer to use a \"smart\" sleep; most of the spring-integration-ip tests have something like this...\n\n``` java\n    private void waitListening(TcpInboundGateway gateway) throws Exception {\n        int n = 0;\n        while (!gateway.isListening()) {\n            Thread.sleep(100);\n            if (n++ > 100) {\n                throw new Exception(\"Gateway failed to listen\");\n            }\n        }\n\n    }\n```\n\nwhich waits for up to 10 seconds buts exits as soon as we are ready.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/837999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/881846", "body": "Must include %d and %t in all logs. Debugging multi-threaded apps is hard without the thread and a timestamp.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/881846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/885660", "body": "Open up a new INT JIRA; let's just go with this for now and we can migrate the samples to the new class when it's in a release.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/885660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/895561", "body": "2.2.0.BUILD-SNAPSHOT\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/895561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/895564", "body": "${spring.integration.version}\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/895564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/1123128", "body": "We could use some java docs here; and in the method above need to explain that the subject is used for the directory where the message will eventually be stored.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/1123128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/1123131", "body": "use libs-milestone (see INTSAMPLES-84)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/1123131/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/1123160", "body": "I get errors importing this POM into STS...\n\nNo marketplace entries found to handle maven-compiler-plugin:2.5.1:compile in Eclipse.  Please see Help for more information.\nNo marketplace entries found to handle Execution default-compile, in /pom.xml in Eclipse.  Please see Help for more information.\n\nNo marketplace entries found to handle maven-compiler-plugin:2.5.1:testCompile in Eclipse.  Please see Help for more information.\nNo marketplace entries found to handle Execution default-testCompile, in /pom.xml in Eclipse.  Please see Help for more information.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/1123160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/1123218", "body": "Can we use M3 instead of a snapshot?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/1123218/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/1123251", "body": "I was able to resolve this by mvn clean test on the command line - sheesh - darned m2eclipse is still a pain\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/1123251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/2292546", "body": "Pushed\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/2292546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/11684522", "body": "doh\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/11684522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/13093187", "body": "Why did you move this?\n\nUnfortunately, the `dsl` location is published everywhere (including the webinar).\n\nhttps://speakerdeck.com/garyrussell/spring-integration-4-dot-0-demo\n\nWe either need to move it back, or put a README there to indicate it moved.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/13093187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/14075420", "body": "Typo - will fix during merge\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/14075420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/14076138", "body": "typo\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/14076138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/15532080", "body": "We should make host a property\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/15532080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/15532168", "body": "We should explain that these are not used for the gateway sample; in fact the gateway sample only works on `localhost`; we either need to fix that, or document it.\n\nMaybe we should change the sample to PUT the files. (put, ls, get, rm).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/15532168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/15902994", "body": "There's a wire tap in the other context; reinstated here.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/15902994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/15905539", "body": "It's not clear what we should call them; but certainly not 2.2.0\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/15905539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/16919344", "body": "Copied if from reactor - per the reactor docs :smile: \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/16919344/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/16919411", "body": "Yes - this was left over from when I was trying to figure out how to remove the ringbuffer dispatcher - which is no good for this sample.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/16919411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/29841899", "body": "Good point; no I had just forgotten.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/29841899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/36019273", "body": "Works without --parallel (pushed)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/36019273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/36768545", "body": "Yes; we can wait\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/36768545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/40033749", "body": "I was playing around with a `cloud` profile.\n\nI decided not to pursue it in this PR but didn't see any reason not to show how different URLs can be used via profiles.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/40033749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79706116", "body": "I don't want to pollute the code here with a TODO: will add a comment to the JIRA.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79706116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79841421", "body": "I will look.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79841421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79845134", "body": "It worked fine for me with the file name expression. I've built on linux too. Let's see what our friend Travis thinks.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/79845134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/80089571", "body": "Yes, thanks, didn't notice that method and yes, I agree with the other discussion.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/80089571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/99137513", "body": "I don't remember why it's there but I just tested without it and there are no problems.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/99137513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/99137718", "body": "\ud83d\udc4d \r\n\r\nCan you do these minor polishes on merge?\r\n\r\nWe can consider re-adding topic provisioning when we create the admin module.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/99137718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/113482089", "body": "Actually, it doesn't look like the original jetty config works; reverted; we can revisit this later.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/113482089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/136656438", "body": "I think I prefer to keep the samples on a stable release.", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/136656438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "The-Alchemist": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/26ece34c3dfde8618f4609e73738bada5ca6d78b", "message": "Fix URL to Spring Flo"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bryant1410": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/d7a77b75ac6ff1ee6c3843bda8014adde7b64c7c", "message": "Fix broken Markdown headings"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fbalicchia": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/1310fd57e5af812e63ded7be51f3ced9856a5720", "message": "add cafe-dsl run task\n\nRegenerate POMs"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/b9697909d09ac80161cc103de258c8e3e7156317", "message": "INTSAMPLES-147: Add Splunk example\n\nJIRA: https://jira.spring.io/browse/INTSAMPLES-147"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/157861912", "body": "Hi @artembilan  thanks for your time.\nYes, you are rigth I need to change my Ide checkstyle and remove some misprint.\nAnyway I follow your advice and prepare a samples based on the Spring Boot\n\nthanks again for the availability\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/157861912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/163697443", "body": "Hi @artembilan,\nthanks for your time, honestly I never had that error.\nIn my linux box I use JDK build 1.8.0_25-b17 and I see that is commented out by default.\ntyping \n\n```\ncat ./jdk1.8.0_25/jre/lib/security/java.security | grep jdk.tls.disabledAlgorithms\n#dk.tls.disabledAlgorithms=MD5, SHA1, DSA, RSA keySize < 2048\n```\n\ninstead after downloaded 1.8.0_66\ntyping I retrieve this\n\n```\ncat ./jdk/jdk1.8.0_66/jre/lib/security/java.security | grep jdk.tls.disabledAlgorithms\n#jdk.tls.disabledAlgorithms=MD5, SSLv3, DSA, RSA keySize < 2048\njdk.tls.disabledAlgorithms=SSLv3, RC4, DH keySize < 768\n```\n\nInteresting... you're right, I need to trace it in Readme and fix other notes \nDo you I need rename the branch like new issue or  can I commit on the same branch ?\n\nthanks.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/163697443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/163781008", "body": "Hi @artembilan,\nI've fix the notes \nThanks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/163781008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/164069115", "body": "Thanks again \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/164069115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kasoban": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/68976a81a6e93b70a521e66327cf3d5ebbe03cd2", "message": "Add specific slf4j-api version dependency\n\nWhen just importing the ftp example as a maven project, I ran into the issue of a slf4j version discrepancy described here:\nhttp://www.slf4j.org/faq.html#IllegalAccessError\n\nThis is solved by adding the specific version dependency of `slf4j-api`.\n\n* Add the specific `slf4j-api` dependency to the Gradle script\n* Change the dependency scope for `slf4j-` impl to the `runtime`.\n* Regenerate POMs"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/145469257", "body": "I just noticed you might be generating the POMs after all? I guess then this has to be added somewhere else.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/145469257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/166250060", "body": "Sorry @artembilan, kinda missed this notification.\nAs a matter of fact I can sadly not confirm signing the CLA, as I take issue with your project guideline to use real name for commits. If you can confirm that this is indeed not a must-have requirement and that committing with the same email address as used in the CLA is sufficient, I will look into this again.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/166250060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/166654479", "body": "It's not so much that I can't, just that I don't necessarily want it linked on a publicly indexed medium. I have no issue signing the CLA with my real name, but the way I see it the copyright should be sorted since my mail address of the commit can linked to the CLA signature where my real name is given.\n\nAt least that strategy worked out fine for the Google CLA at the AngularJS project.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/166654479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/168654037", "body": "CLA is as of now signed with the same email address I used for the commit.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/168654037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "cirosantilli": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/b32cd1edda288ef22a4d5660f08e20c318d75cc2", "message": "Typo Gardle -> Gradle"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/87445975", "body": "I've tried to sign it, let me know if it didn't work.\n\nEven PRs have boilerplate in the Java world :)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/87445975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/87465108", "body": "I've received the email. Do I need to do something else?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/87465108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/128000160", "body": "I take back what I've said about Java: GNU requires you to send them a physical letter :-) \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/128000160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "liujiong1982": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/35e5156bdb8903605c1df6dd2205b07ab6da6689", "message": "INTSAMPLES-133:Use <int:handler-retry-advice/>\n\nUpdate the retry-and-more Sample to use <int:retry-advice/> Syntax\n\nPolishing - add info to README.\n\nAlso, use \"localhost\" for amqp connection factories."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lbillon": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/630d1cf009e7d1c220ee481186efdeaf964dc47d", "message": "Fix typo in Basic Mail Sample\n\nhttps://jira.springsource.org/browse/INTSAMPLES-118"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/27144890", "body": "Sorry I missed this step\nI have signed and agree to the terms of the SpringSource Individual Contributor License Agreement.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/27144890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "ghillert": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/1c5da3bc0f96822703950ccc4f77f26ab5f58967", "message": "Merge pull request #93 from ghillert/INTSAMPLES-114\n\nINTSAMPLES-114 Twitter Search Requires Authentication"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/64f8dbbd83cc293a39b4047de84f62746b9c7e59", "message": "Merge pull request #91 from ghillert/INTSAMPLES-110\n\nINTSAMPLES-110 - Add doc/polish REST sample"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/dae05522be2f17e29bac610c6416bca18704163f", "message": "Merge pull request #90 from ghillert/INTSAMPLES-109\n\nINTSAMPLES-109 - Move XQuery Sample to SI Extensions Repo"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/078a72eeeb8b11045898fadf80fe4eea0b26c5fd", "message": "Merge pull request #89 from ghillert/INTSAMPLES-107\n\nINTSAMPLES-107 - Add CoffeeService Sample to Oracle StoredProc Sample"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/9759373c5a08f82db6d92747fb94f74aea31d744", "message": "Merge pull request #84 from ghillert/INTSAMPLES-102-2\n\nINTSAMPLES-102 - Fix intermittently failing tests"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/863f5eecf45c7dd2b1bfee6962bd10e69a33ac6c", "message": "Merge pull request #79 from ghillert/INTSAMPLES-100\n\nINTSAMPLES-100 - Fix cafe-amqp JSON Serialization"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/3a4e8d0db4dff3947e397fbfbf22cf6a6fbac2e4", "message": "Merge pull request #82 from ghillert/INTSAMPLES-102\n\nINTSAMPLES-102 - Advanced-testing-examples - Fix failing test"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/76bce333da7887c0b53912ef969a39de6869f30b", "message": "Merge pull request #81 from ghillert/INTSAMPLES-78\n\nINTSAMPLES-78 - Don't use hard-coded FTP port"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/44420d335538729639a425f539fe1c87d10c0ab4", "message": "Merge pull request #80 from ghillert/INTSAMPLES-101\n\nINTSAMPLES-101 - Don't Use Hard-Coded Port in the 'mail-attachments' Sample"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/ad8e003fe8522d48f128ff6a80e81674b0af4522", "message": "Merge pull request #77 from ghillert/INTSAMPLES-79\n\nINTSAMPLES-79 - Update TCP Samples to Use S-I-IP TestingUtilities"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/8260e02ac28ae49cf90c5682d3280f0405e9e8a7", "message": "Merge pull request #76 from ghillert/INTSAMPLES-49\n\nINTSAMPLES-49 - Move main demo class to src/main/java + add tests"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/c151ac24b267c57e41e90dc8e4454781fec8118a", "message": "Merge pull request #75 from ghillert/INTSAMPLES-99\n\nINTSAMPLES-99 Upgrade samples to SI 2.2.0.RELEASE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/1dac2e5c9bf5518004529b6b50db44bd69152737", "message": "Merge pull request #74 from ghillert/INTSAMPLES-71\n\nINTSAMPLES-71 - Fix SFTP Outbound Sample"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/e5aced1ee76a2068b0d64f84ca1db16d9562a836", "message": "Merge pull request #72 from ghillert/INTSAMPLES-65\n\nINTSAMPLES-65 - Basic File Sample (Text Copy) Has Incorrect Filter Attribute"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/bdcde6f34d4710d2175e94ad927531e53c24a259", "message": "Merge pull request #71 from ghillert/INTSAMPLES-96\n\nINTSAMPLES-96 - Polish SI Cafe Sample"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/074383ce5590c37ffbfeee48d4555d83f4cca6ff", "message": "Merge pull request #70 from ghillert/INTSAMPLES-98\n\nINTSAMPLES-98 - Fix Typos in Mail and Multipart Sample"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/4b69b31bfebac3e1c3da55183f1914b9471b5772", "message": "Merge pull request #69 from ghillert/INTSAMPLES-89\n\nINTSAMPLES-89 - Upgrade to Spring Integration 2.2 RC3"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/251e035a1892915938d3cffdc83cabf503a2bd07", "message": "Merge pull request #68 from ghillert/INTSAMPLES-77\n\nINTSAMPLES-77 - Fix Travel Example"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/015c337969a1dadb7a61d8e7db5bbf8f99823f0c", "message": "Merge pull request #67 from ghillert/INTSAMPLES-23\n\nINTSAMPLES-23 - Add Splitter-Aggregator example"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/ff5aa542d7666856058e2f87bb8551dcaccf0707", "message": "Merge pull request #65 from ghillert/INTSAMPLES-93\n\nINTSAMPLES-93 - Pollish the JPA Samples"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/94bff16daece9bb7e38b958a0d065d82b4b5d11a", "message": "Add reference to mail-attachments sample"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/23ed55d02b491846de57853b6ab0c468657498a1", "message": "Merge pull request #60 from ghillert/INTSAMPLES-85\n\nINTSAMPLES-85 - Upgrade Twitter Sample Spring Integration version"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/b6b7a14fbaa5cb8adea2d17b8f8f8f6fab334c01", "message": "Merge pull request #45 from ghillert/INTSAMPLES-64\n\nINTSAMPLES-64 Poller Sample using custom Trigger"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/65c4d47206ddc96ba0c3fba2079137eacb4ab129", "message": "Merge pull request #31 from ghillert/INTSAMPLES-48\n\nINTSAMPLES-48 Add SLF4J dependency"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/2e1b22aaac7ff745202780bb4be74fd542d983cf", "message": "Fixed spelling error in */applications/cafe-scripted/pom.xml*"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/1903200", "body": "Sorry about that!! Somehow the outbound-channel-adapter got lost. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/1903200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/1903229", "body": "Hi Gary you need both milestone and snapshot repos:\n\n```\n<repositories>\n    <repository>\n        <id>repository.springframework.maven.release</id>\n        <name>Spring Framework Maven Release Repository</name>\n        <url>http://maven.springframework.org/release</url>\n    </repository>\n    <repository>\n        <id>repository.springframework.maven.milestone</id>\n        <name>Spring Framework Maven Milestone Repository</name>\n        <url>http://maven.springframework.org/milestone</url>\n    </repository>\n    <repository>\n        <id>repository.springframework.maven.snapshot</id>\n        <name>Spring Framework Maven Snapshot Repository</name>\n        <url>http://maven.springframework.org/snapshot</url>\n    </repository>\n</repositories>\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/1903229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3144899", "body": "Looks good - Cool sample\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3144899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3144925", "body": "Need to manually merge sample.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3144925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3145285", "body": "Sorry for the conflict. If you would do that that would help me out tremendously. Thanks! I will make sure that you new PR gets merged immediately. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3145285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3167767", "body": "Looks like some files are missing e.g. org.springframework.integration.samples.jdbc.service.PersonService\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3167767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3167835", "body": "Can you make sure that the user can execute this sample via the main class? \n\nAlso, since this is an additional example to the existing one. Can you maybe provide some text in the README.md that ties both examples together? Something like this in the introduction section: This module covers the following JDBC use cases: ... \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3167835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3170529", "body": "Looks good otherwise - Cool Sample!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3170529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3179544", "body": "Yes, that should work. Felt the same way, go ahead and combine them.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3179544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3182069", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3182069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3182117", "body": "Looks good so far. Will merge as I do some cleanup across the entire samples project e.g. updating all Spring Integration dependencies to RC1. Unifying this examples sounds good, though. Please open a separate Jira for that and issue a new pull request. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3182117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3214002", "body": "Gary - this looks great. I would like to merge it once I get the following one merged: https://github.com/SpringSource/spring-integration-samples/pull/22 \n\nIf you're volunteering to eyeball it ...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3214002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3223756", "body": "@garyrussell Thanks! Pushed the changes. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3223756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3396305", "body": "Looks good to me. Maybe we can expand the example later a bit, particular when we also need to create a sample for the JPA components. Thanks for issuing the pull request!! \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3396305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3396596", "body": "Merged pull request\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3396596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3396645", "body": "Sorry for the delay - finally got around reviewing your PR. \n\nCould you please re-submit the pull request without any Eclipse specific project files? .project, .settings, .classpath etc. Also, I am upgrading all samples to using Spring Integration 2.1.0.RELEASE later today. Thus, if you could upgrade your sample's dependency as well that would be great. Thanks a lot! \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3396645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3878379", "body": "Do you think it might be better to separate out this example into its own sample folder e.g. \"applications/cafe-jms\"?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3878379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3881007", "body": "I think that sounds like a good idea. Let's have 3 sub-modules under cafe. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3881007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3881038", "body": "Cool thanks! Then we can have the main documentation under /cafe/README.md and the 3 sub-modules will each provide module-specific info.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3881038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3908160", "body": "@garyrussell Committed the change. Broke up the README.md into client and server sections. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3908160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3940923", "body": "- Added copyright notice\n- Renamed **delayer** to **poller**\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3940923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3941080", "body": "@garyrussell  Updated the README.md file.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3941080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3941755", "body": "The issues was resolved - More details: https://jira.springsource.org/browse/INTSAMPLES-59\nPlease let us know if you encounter any further issues. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3941755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3950959", "body": "Closing as superseded by PR #32:\n\nhttps://github.com/SpringSource/spring-integration-samples/issues/32\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3950959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3951031", "body": "Hi, thanks! I have not looked at the further details but could you maybe check why this PR cannot be automatically merged?  Before issuing a PR I usually tend to do a rebase so that I have the latest changes e.g.:\n\n```\n$ git pull --rebase upstream master\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3951031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3951106", "body": "Hi Christian,\n\nI merged the sample into **Master**. I have added some copyright notices and also changed the socket port of one of the tests as ran into conflicts locally. \n\nAlso, I merged the commits above into one. \n\nSee: https://github.com/SpringSource/spring-integration-samples/commit/8e7314ef1d3eab0c93a271de258eb305278054a0\n\nThank you so much for your contribution!!\n\nCheers,\n\nGunnar\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3951106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3984644", "body": "@garyrussell I made a new commit addressing your issues. As mentioned above I did not change the Constructor of the Trigger, keeping it in line with the behavior of the 'original' PeriodicTrigger.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3984644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3987021", "body": "@garyrussell Committed the refactored constructors of _DynamicPeriodicTrigger.java_\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3987021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5733562", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5733562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5733672", "body": "Need to merge later this morning...GitHub gives me: ERROR: Storage server temporarily offline.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5733672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5733677", "body": "Need to merge later this morning...GitHub gives me: ERROR: Storage server temporarily offline.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5733677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5733678", "body": "Need to merge later this morning...GitHub gives me: ERROR: Storage server temporarily offline.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5733678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5733681", "body": "Need to merge later this morning...GitHub gives me: ERROR: Storage server temporarily offline.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5733681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5733686", "body": "Need to merge later this morning...GitHub gives me: ERROR: Storage server temporarily offline.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5733686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5733712", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5733712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5753268", "body": "Defaults now to port 11111 but users can also provide an additional system property to customize the port:\n\n```\n-DavailableServerSocket=7777\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5753268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5796790", "body": "Created a Jira for this: https://jira.springsource.org/browse/INTSAMPLES-77\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5796790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5900434", "body": "LGTM - Frustrating issue. Thanks for fixing this!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5900434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5920628", "body": "Rebased with Master\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5920628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5938697", "body": "As discussed with @garyrussell - Standardized the Log4j PatternLayout\nto **%d{HH:mm:ss.SSS} %-5p [%t][%c] %m%n** for all samples. This should provide some additional consistency.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5938697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5951365", "body": "Ok. LGTM. Will merge it.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5951365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5984779", "body": "@garyrussell I was in the process of merging this. Everything looked great but then I noticed that `org.springframework.integration.samples.amqp.ClusterTests.java` is not running successfully:\n\n```\norg.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.springframework.integration.samples.amqp.RetryBeanPostProcessor] for bean with name 'org.springframework.integration.samples.amqp.RetryBeanPostProcessor#0' defined in class path resource [META-INF/spring/integration/gateway-context.xml]; nested exception is java.lang.ClassNotFoundException: org.springframework.integration.samples.amqp.RetryBeanPostProcessor\n    at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1261)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:575)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1330)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:896)\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:566)\n    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)\n    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)\n    at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)\n    at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)\n    at org.springframework.integration.samples.amqp.ClusterTests.test(ClusterTests.java:38)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at java.lang.reflect.Method.invoke(Method.java:597)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)\n    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)\nCaused by: java.lang.ClassNotFoundException: org.springframework.integration.samples.amqp.RetryBeanPostProcessor\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:202)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:190)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:306)\n    at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:247)\n    at org.springframework.util.ClassUtils.forName(ClassUtils.java:257)\n    at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:408)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1282)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1253)\n    ... 32 more\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5984779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5984862", "body": "@garyrussell Also, I saw a couple of trailing white-spaces and you may also want to convert spaces to tabs. Lastly, if you could change the log4j log pattern to `%d{HH:mm:ss.SSS} %-5p [%t][%c] %m%n`. This would address all issues I saw. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5984862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5985738", "body": "@christian-posta Sorry for letting this linger for too long, it somehow dropped off my plate. Could you do me a favor and rebase your PR? I would then like to finally merge it into the Samples project. Thanks a lot for your patience!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5985738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5996458", "body": "Fixed some dependency issues and addressed issues discussed above.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5996458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/6091247", "body": "Commit will fix:\n- Make JPA Sample compliant with INT-2601 (refactoring _JPA Outbound Gateway_ into _Updating_ and _Retrieving Outbound Gateway_)\n- Fix whitespace issues\n- Make sure all schemas are version-less\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/6091247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/6849860", "body": "Also, please add a reference to the sample to the repo-root-level README.md file. Great example! - except for some minor Java doc comments missing (see above) - looks good. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/6849860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/6855608", "body": "@garyrussell Commit ab34ce1 should address your comments:\n- Add more JavaDoc\n- Change Maven repository to _libs-milestone_\n\nI left the Spring Integration version at _2.2.0.BUILD-SNAPSHOT_ due to [INT-2656](https://jira.springsource.org/browse/INT-2656). If you feel strongly about it, let me know and I will change it to the M3 milestone.\n\nGenerally, I plan to cut a more formalized release of the Spring Integration Samples project, once SI 2.2 is GA. I will update all sample dependencies to 2.2.RELEASE once it is available.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/6855608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/7529391", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/7529391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/7873140", "body": "@garyrussell The underlying Java property is called **javax.xml.xquery.XQDataSource**. But I agree - **data-source** may be better in order to use a common attribute across adapters.\n\nI have created a Jira to address this: https://jira.springsource.org/browse/INTEXT-15\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/7873140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/7882723", "body": "@garyrussell Changed the pom with commit d9249a6 - It now uses Maven profiles to manage the dependencies.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/7882723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/7911435", "body": "@garyrussell With commit 694dbbb the attribute is now **data-source**\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/7911435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/7940389", "body": "Looks like there is an issue with the SI version - the build failed:\n\n```\nTests in error: \ntestBinaryCopy(org.springframework.integration.samples.filecopy.BinaryFileCopyTest): Invalid property 'destinationDirectoryExpression' of bean class [org.springframework.integration.file.FileWritingMessageHandler]: Field 'destinationDirectoryExpression' does not exist\n```\n\n Upgrading to 2.2.0.M3 worked. Thus, you may want to upgrade the SI version.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/7940389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/9124337", "body": "Did some polishing and merged PR.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/9124337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/9918670", "body": "Pull Request submitted: https://github.com/SpringSource/spring-integration-samples/pull/68\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/9918670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/9931915", "body": "Substantially refactored Travel sample. See the sample's README.md file for details.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/9931915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/10959946", "body": "Did some additional polishing:\n- Add more links to README.md\n- Convert spaces to tabs\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/10959946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/11292660", "body": "Hi, \n\nThanks for your PR. Before merging your PR, can you sign the S2 contributor license agreement (CLA) at \n- [https://support.springsource.com/spring_committer_signup](https://support.springsource.com/spring_committer_signup)\n\nFor **Project**, please select **Spring Integration**. The **Project Lead** is **Mark Fisher**.\n\n(Some necessary 'paper-work', should only take a minute). \n\nThanks!!\n\nCheers,\n\nGunnar\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/11292660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/15588922", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/15588922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/15645204", "body": "The samples are building fine now. Also, as part of [INTEXT-59](https://jira.springsource.org/browse/INTEXT-59) the XQuery sample was moved to the Spring Integration Extensions repo:\n\nhttps://github.com/SpringSource/spring-integration-extensions/tree/master/samples/xquery\n\nPlease re-open this issue if you continue experiencing build issues.   \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/15645204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/15669700", "body": "I have updated/expanded the documentation (added the credential information). Furthermore, I did some polishing of the sample - https://github.com/SpringSource/spring-integration-samples/pull/91\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/15669700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/16653706", "body": "Thanks for the PR! Did you fill out the Contributor License Agreement? - https://github.com/SpringSource/spring-integration/blob/master/CONTRIBUTING.md\n\nI have to look at all the modules in more detail, but for example `stored-procedures-oracle` cannot be included as the Oracle dependencies must be manually installed. Therefore some modules are left out on purpose.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/16653706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/260093", "body": "Would you mind providing the **readme.txt** as Markdown formatted **README.md** file? It looks so much more pretty in Github :-)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/260093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/260095", "body": "I saw a few places where it should be **2002-2011**\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/260095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/269749", "body": "You can probably bumb the version to RC1\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/269749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/293782", "body": "I will review Spring Integration versions as part of https://jira.springsource.org/browse/INTSAMPLES-38\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/293782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/298088", "body": "Would you possibly mind to provide the readme as a README.md file using Markdown? That way it looks a little bit more pleasing to the eye via GitHub. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/298088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/298112", "body": "change 2010 to 2011\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/298112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/297604", "body": "The Markdown formatting of the list not showing up correctly.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/297604/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/334759", "body": "Could you please submit a README.md (markdown formatted readme)? We are in the process to migrate all **txt** readme files to Markdown, which provides a nicer look in GitHub.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/334759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/347515", "body": "Fixed\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/347515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/446807", "body": "I think you mean _higher_\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/446807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/452938", "body": "Well, this is copied directly from org.springframework.scheduling.support.PeriodicTrigger :-)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/452938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/885638", "body": "Should we move this class into the TCP/IP Module? Looks like it may be useful in a couple of places.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/885638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/886083", "body": "Created https://jira.springsource.org/browse/INT-2590\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/886083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/572912", "body": "bridging\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/572912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/572915", "body": "Maybe add a link to some Netcat resources.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/572915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/572917", "body": "2012\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/572917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/572918", "body": "Your name\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/572918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/572919", "body": "Maybe for consistency use either version-less schemas or versioned ones.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/572919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/896009", "body": "Fixed with commit 8630167.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/896009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/896013", "body": "Fixed with commit 8630167.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/896013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/1123398", "body": "Was switching to the Snapshot version in order to avoid exceptions in the log file due to INT-2656. M3 might be too noisy...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/1123398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/1122925", "body": "Maybe you can add some documentation here. Even if it is just one sentence stating what the class does.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/1122925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/1122936", "body": "Missing JavaDoc\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/1122936/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/1122987", "body": "Just a thought - but for future samples we could use the _org.springintegration_ base-package.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/1122987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/2286122", "body": "Better to have version-less schema declarations.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/2286122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "christian-posta": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/a46d0a3b57d27da545643b6554211327a27bbbe0", "message": "INTSAMPLES-60 - Add JMS-backed Cafe Application Sample\n* Add idea folder to .gitignore\n* Add an embedded ActiveMQ\n* Add activemq data to ignore list\n* Use JMS-backed channels\n* Add the sample description to README.md"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/375cc41b1a4ca172b3102eb4fcd89fb4504d7b87", "message": "INTSAMPLES-22: Create sample for inbound tcp-connection-factory using deserializer and serializer\n* Added new tests\n* Added comments\n* Created the custom serializer/deserializer. Fixing some small issues with it\n* Changed the sending to use java socket api\n* Working, just trying to figure out junit differences\n* Found an error in the input message (contained \\r\\n) fixed now\n* added .idea and activemq-data folders to ignore\n* Cleaned up unused code, added documentation to the README.md\n* Added more comments\n* Added Copyright notices"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3880749", "body": "that's possible. or, under the cafe sample, have three modules (maven modules). One for JMS, one for AMQP, and one without the message brokers?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3880749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3881018", "body": "excellent. i can do that and commit it on the INTSAMPLES-60 branch.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3881018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3890119", "body": "Take a look and my INTSAMPLES-60 branch and let me know what you think\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3890119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3953196", "body": "Okay, great. Thank you for making it so easy to work with you guys.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3953196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5985789", "body": "yes, absolutely. i'll let you know when i've done it\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5985789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "markfisher": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/dc31846615292e0f4750f0a647c8cd1b03d1d793", "message": "fixed prompt to mention 1, 2, or 3 as valid options"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/f6b6fc315fe0507819fc896ad782863438551c02", "message": "minor typo"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/1883938", "body": "Merged after squashing.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/1883938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3550447", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3550447/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "vbose": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/f7bd84e22fccaf0a8ececf804cc6a3d80b4b036f", "message": "INTSAMPLES-36 - Adding rest-http sample to demonstrate the usage of Spring Integration's new HTTP Path facility usage\n\n* The JIRA referenced for this sample is https://jira.springsource.org/browse/INTSAMPLES-36"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3441164", "body": "I will look at your request when I get back in US. I am now in Ghana and will be back in US in couple of days.\n\nSent from Vigil's iPad. Please excuse any brevity, punctuation or spelling mistakes\n\nOn Jan 7, 2012, at 4:43 PM, Gunnar Hillertreply@reply.github.com wrote:\n\n> Sorry for the delay - finally got around reviewing your PR. \n> \n> Could you please re-submit the pull request without any Eclipse specific project files? .project, .settings, .classpath etc. Also, I am upgrading all samples to using Spring Integration 2.1.0.RELEASE later today. Thus, if you could upgrade your sample's dependency as well that would be great. Thanks a lot!\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/SpringSource/spring-integration-samples/pull/28#issuecomment-3396645\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3441164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3944995", "body": "I have submitted another pull request #32 and have committed all the proposed changes as per your comment.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3944995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3969074", "body": "@ghillert  It has been painful to merge and fix the conflicts. I fixed all of them. Please pull the latest from https://github.com/vbose/spring-integration-samples.git. My master branch has been merged with Spring Integration Master and my master has also been merged with vbose-branch. Please let me know if you come across any issues.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3969074/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "amolnayak311": {"issues": [], "commits": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/commits/c97fb87ae8ed6bb9876feee17702ed3c4d26c66e", "message": "INTSAMPLES-61 Changes, use LinkedHashMap to demonstrate LRU concept"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3145013", "body": "should i create merge this with the jdbc project already in place and create a new pull request closing this one?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3145013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3145305", "body": "No problem :), i'll merge, test and raise a new pull request.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3145305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3166043", "body": "Pull request https://github.com/SpringSource/spring-integration-samples/pull/19 issued with conflicts resolved\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3166043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3172822", "body": "Hi Gunnar, changes done(hopefully :D) . I'm new to git and guess i need to start doing some reading for it :)\n\nI was thinking, can i modify your changes and search for the Person i am creating rather than the User? I feel both of them together as an application would go together.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3172822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/7876723", "body": "Some white spaces complaints in README.md and pom.xml. Otherwise LGTM. But please don't merge. Let me address the issue INTEXT-15 and then we can change the spring config in the samples accordingly before we push the changes.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/7876723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/446890", "body": "Yes, I'll correct that one, Thanks.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/446890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/453165", "body": "Made the change.. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/453165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "kpb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/1903178", "body": "yep, that's it.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/1903178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/1912796", "body": "Thanks for fixing!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/1912796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/1912799", "body": "Thanks for merging my pull request!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/1912799/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dturanski": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/2206314", "body": "Looks good. One question - since these run with Junit and require an ftp server to be running on localhost, how do we ensure they won't run during a build? Should they be excluded in the pom file? \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/2206314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/2951390", "body": "@garyrussell @olegz @ghillert please review\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/2951390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3000582", "body": "Changed to README.md and updated copyright notices\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3000582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "ffbit": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3750539", "body": "The org.springframework.integration.twitter.core.Twitter4jTemplate class is mentioned here:\n    http://static.springsource.org/spring-integration/docs/2.0.x/api/org/springframework/integration/twitter/core/Twitter4jTemplate.html\n\nBut is not mentioned here:\n    http://static.springsource.org/spring-integration/reference/htmlsingle/\n\nThe org.springframework.social.twitter.api.impl.TwitterTemplate class is mentioned here:\n    http://static.springsource.org/spring-integration/reference/htmlsingle/\ninstead of the org.springframework.integration.twitter.core.Twitter4jTemplate one.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3750539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3750924", "body": "Here is a simple fix of one of the broken tests - 27fbbb0\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3750924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3755654", "body": "I've just read the ICLA and filled out the Individual Contributor Agreement, I've specified Mark Fisher as the Project Lead.\n\nI've got my confirmation number.\nWhere should I send my confirmation number?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/3755654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "devans": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5796300", "body": "Just realized the samples are doing this all over the place. Here's the problem from the travel example (many others worked fine):\n\nException in thread \"main\" org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'travelGateway': Initialization of bean failed; nested exception is java.lang.NoSuchFieldError: NULL\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:527)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)\n    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)\n    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:567)\n    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)\n    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)\n    at org.springframework.context.support.FileSystemXmlApplicationContext.<init>(FileSystemXmlApplicationContext.java:140)\n    at org.springframework.context.support.FileSystemXmlApplicationContext.<init>(FileSystemXmlApplicationContext.java:84)\n    at org.springframework.integration.samples.travel.TravelDemo.main(TravelDemo.java:22)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at java.lang.reflect.Method.invoke(Method.java:597)\n    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)\nCaused by: java.lang.NoSuchFieldError: NULL\n    at org.springframework.expression.TypedValue.<clinit>(TypedValue.java:32)\n    at org.springframework.expression.spel.support.StandardEvaluationContext.setRootObject(StandardEvaluationContext.java:88)\n    at org.springframework.expression.spel.support.StandardEvaluationContext.<init>(StandardEvaluationContext.java:74)\n    at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:124)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.evaluateBeanDefinitionString(AbstractBeanFactory.java:1299)\n    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.evaluate(BeanDefinitionValueResolver.java:224)\n    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:200)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1360)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)\n    ... 16 more\n\nProcess finished with exit code 1\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/5796300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "st0ne-dot-at": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/11307780", "body": "@ghillert: done\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/11307780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kenorb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/11838755", "body": "Check the github status at: https://status.github.com\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/11838755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Venkatsrii": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/13233774", "body": "In Travel example ..\nhow can confiure failovers and interval time when web service is not available(network down time ..),I need track when its failed.\ni'll try to hit 3 or 4 times for accessing service (if request/response fail)..\nplease give me suggestion for that asap..\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/13233774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/13286561", "body": "Thanks for your reply...\ni am new to spring-integration configuration..\nI've tested retry-and-more example, while sending request here calling 3 times ConditionalService(Service Activator configuraton) ,if it service available also we are calling ConditionalService(Service Activator configuraton)...\n\nGateway (java code )-->int-ws:inbound/outbound (xml configurations) --> webservice publish (\"http://localhost:8080/WeatherService\")\nwhen i'm sending request to webservice(travelGateway.getWeatherByCity(message);)\nmy requirement is  : need to cosume services.\n    1.if Webservice is not available/network down ,i'll try to hit 3 times (http://localhost:8080/) (need to cofigure in xml)\n    2.if its service available on 2nd hit i need to show  (\" Service failure Failure  of 2 of 3 hits..\" ) asper your Service Activator configuraton,we have to call ConditionalService class.\n    3.i want to log error msgs based on conditions( server errors/network issues,etc...), no need to call before ConditionalService(unnecessarly 3 times) testRetryBackoff() sending request,call only if any fails.\n\nmy xml configuration is(I've done based on travel applicaton ):\n\n```\n<int-ws:header-enricher input-channel=\"inputChannel\" output-channel=\"weatherServiceChannel\"  >\n    <int-ws:soap-action value=\"http://localhost:8080/WeatherService\"  />        \n</int-ws:header-enricher>\n\n\n<int-ws:outbound-gateway request-channel=\"weatherServiceChannel\" reply-channel=\"prettifyXml\" ignore-empty-responses=\"false\"  \n    uri=\"http://localhost:8080/WeatherService/WService\"  marshaller=\"jaxbMarshaller\" unmarshaller=\"jaxbMarshaller\"> \n</int-ws:outbound-gateway>  \n\n<int:gateway id=\"travelGateway\" default-request-channel=\"loggingChannel\" service-interface=\"org.springframework.integration.samples.travel.TravelGateway\">\n    <int:method name=\"getWeatherByCity\"\n                request-channel=\"weatherServiceChannel\"\n                request-timeout=\"5000\"\n                reply-channel=\"prettifyXml\"\n                reply-timeout=\"5000\"/>  \n</int:gateway>\n```\n\n# \n\npublic interface TravelGateway {\n    Message<?> getWeatherByCity( Message<?> message);\n    String getTrafficByCity(City city);\n    }\n\nplease provide solution asper my requiremnet...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/13286561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "niddhi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/33675759", "body": "Thanks so much. Got it.\u00a0Thanks,Niddhi-----Artem Bilan notifications@github.com wrote: -----To: spring-projects/spring-integration-samples spring-integration-samples@noreply.github.comFrom: Artem Bilan notifications@github.comDate: 01/30/2014 03:45PMcc: niddhi niddhi.g@tcs.comSubject: Re: [spring-integration-samples] XMPP Complete example (#100)Not sure what you mean, but everything is here: https://github.com/spring-projects/spring-integration-samples/tree/master/basic/xmpp/src/testThere are confings in the META-INF and xmpp.properties as well \u2014Reply to this email directly or view it on GitHub.=====-----=====-----=====\nNotice: The information contained in this e-mail\nmessage and/or attachments to it may contain \nconfidential or privileged information. If you are \nnot the intended recipient, any dissemination, use, \nreview, distribution, printing or copying of the \ninformation contained in this e-mail message \nand/or attachments to it are strictly prohibited. If \nyou have received this communication in error, \nplease notify us by reply e-mail or telephone and \nimmediately and permanently delete the message \nand any attachments. Thank you\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/33675759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "radiumx3": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/157890867", "body": "We were looking for fully java based sample (no xml, just annotations)  (File move, file copy workflow), we didn't manage to find the java equivalent for outbound-adapter xml tag in the beggining, we found out how to do it though. If anyway there is some pure java <-> xml cheatsheet I would be glad to study it :) Thanks anyway\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/157890867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/158333086", "body": "As far as I understood, Java DSL make extensive use of Java Lambda (Java8) but we have to stick with java7 (internal constraint) \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/158333086/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Sudheer786": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/166607488", "body": "Hi Artem/Gary,\n\nbelow is my Code for Spring Integration , I am trying to poll a folder and I have configured it properly.\n\n``` java\n@InboundChannelAdapter(value = \"inboundchannel\", poller = @Poller(fixedDelay = \"50000\", maxMessagesPerPoll = \"1\"))\npublic Message<File> processFiles() {\nfileReadingMessageSource = getFileReadingMessageSource();\nreturn fileReadingMessageSource.receive();\n}\n\n@ServiceActivator(inputChannel = \"inboundchannel\")\npublic void process(Message<File> payload) {\nprocessFile(payload);\n\n}\n```\n\nbut once the program initializes..I am getting an Exception as below,\n\nException : \n\n```\nDec 21, 2015 3:22:11 PM org.apache.catalina.core.StandardContext listenerStart\nSEVERE: Exception sending context initialized event to listener instance of class com.activiti.servlet.WebConfigurer\norg.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cSVFileProcessor' defined in URL [jar:file:/xjp/appserver_1/tomcat/apache-tomcat-7.0.42/webapps/activiti-app/WEB-INF/lib/nexen-workflow-ext-0.0.3.jar!/com/activiti/extension/bean/CSVFileProcessor.class]: Initialization of bean failed; nested exception is org.springframework.messaging.core.DestinationResolutionException: failed to look up MessageChannel with name 'inboundchannel' in the BeanFactory.; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'inboundchannel' is defined\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:547)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)\n        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)\n        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)\n        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)\n        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)\n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)\n        at com.activiti.servlet.WebConfigurer.contextInitialized(WebConfigurer.java:67)\n  at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)\n        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)\n        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)\n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)\n        at com.activiti.servlet.WebConfigurer.contextInitialized(WebConfigurer.java:67)\n        at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4939)\n        at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5434)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:901)\n        at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:877)\n        at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:633)\n        at org.apache.catalina.startup.HostConfig.deployDescriptor(HostConfig.java:656)\n        at org.apache.catalina.startup.HostConfig$DeployDescriptor.run(HostConfig.java:1635)\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\n        at java.util.concurrent.FutureTask.run(FutureTask.java:166)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n        at java.lang.Thread.run(Thread.java:722)\nCaused by: org.springframework.messaging.core.DestinationResolutionException: failed to look up MessageChannel with name 'inboundchannel' in the BeanFactory.; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'inboundchannel' is defined\n        at org.springframework.integration.support.channel.BeanFactoryChannelResolver.resolveDestination(BeanFactoryChannelResolver.java:112)\n        at org.springframework.integration.support.channel.BeanFactoryChannelResolver.resolveDestination(BeanFactoryChannelResolver.java:45)\n        at org.springframework.integration.config.annotation.InboundChannelAdapterAnnotationPostProcessor.postProcess(InboundChannelAdapterAnnotationPostProcessor.java:64)\n        at org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor$1.doWith(MessagingAnnotationPostProcessor.java:177)\n        at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:494)\n        at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:501)\n        at org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor.postProcessAfterInitialization(MessagingAnnotationPostProcessor.java:145)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:422)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1579)\nat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)\n        ... 23 more\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'inboundchannel' is defined\n        at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:687)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1168)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:281)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)\n        at org.springframework.integration.support.channel.BeanFactoryChannelResolver.resolveDestination(BeanFactoryChannelResolver.java:88)\n        ... 32 more\n```\n\nwill you please help me with this Issue ? \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/166607488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/166679038", "body": "Hi Artem,\n\nthanks a lot for your quick reply.\n\nI will try by keeping `@Bean` Annotation and let you know.\n\nto answer your second question , I want to have a single instance of `FileReadingMessageSource` through out my Application , that's the reason why I am getting it from a method where I created a single Instance for it.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/166679038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/166964631", "body": "Hi Artem, I am giving you the entire Annotations I have used at class level to make the Issue clear.\n\n``` java\n@Component(\"cSVFileProcessor\")\n@Configuration\n@IntegrationComponentScan\n@EnableIntegration\n@MessageEndpoint\npublic class CSVFileProcessor {\n\npublic static FileReadingMessageSource getFileReadingMessageSource() {\n        try {\n            if (fileReadingMessageSource == null) {\n                fileReadingMessageSource = new FileReadingMessageSource();\n                fileReadingMessageSource.setDirectory(new File(folderPath));\n                SimplePatternFileListFilter simplePatternFileListFilter = new SimplePatternFileListFilter(\n                        filePattern);\n                IgnoreHiddenFileListFilter ignoreHiddenFileListFilter = new IgnoreHiddenFileListFilter();\n                List<FileListFilter<File>> fileListFilter = new ArrayList<FileListFilter<File>>();\n                fileListFilter.add(simplePatternFileListFilter);\n                fileListFilter.add(ignoreHiddenFileListFilter);\n                compositeFileListFilter = new CompositeFileListFilter<File>(\n                        fileListFilter);\n                CustomScanner cs = new CustomScanner();\n                cs.setFilter(compositeFileListFilter);\n                fileReadingMessageSource.setScanner(cs);\n                logger.info(\"In static method after Initializing frms   \"\n                        + fileReadingMessageSource);\n            }\n        } catch (Exception e) {\n            logger.debug(\"Exception while creating FileReadingMessageSource\");\n            logger.debug(\"Exception while creating FileReadingMessageSource\", e);\n            return null;\n        }\n        return fileReadingMessageSource;\n    }\n\n    @InboundChannelAdapter(value = \"inboundchannel\", poller = @Poller(fixedDelay = \"5000\", maxMessagesPerPoll = \"1\"))\n    public Message<File> processFiles() {\n        fileReadingMessageSource = getFileReadingMessageSource();\n\n        return fileReadingMessageSource.receive();\n    }\n\n    @ServiceActivator(inputChannel = \"inboundchannel\")\n    public void process(Message<File> payload) {\n        logger.info(\"In process() ... payload is\" + payload.getClass());\n\n            processFile(payload);\n\n\n    }\n}\n```\n\nThe above configuration has worked on my local setup perfectly fine .\n\nbut the same code when I moved to Dev machine , we are getting the Exception which I have mentioned above.\n\nwill you please provide your comments ? do you still want me to add `@Bean` Annotation.\n\n thanks In Advance.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/166964631/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/167629563", "body": "Hi Artem,\n\nI made it as a static method as I need it running before the class gets Initialized,\n\nhere are the complete details,\n- The below Code is working fine on my local set up(windows , jdk 1.8,Tomcat 7)\n- the same Code is not working on the Development box (Linux,jdk 1.7,Tomcat 7)\n\nServer Details:\n\n```\nLinux r007ppn0c 2.6.32-358.23.2.el6.x86_64 #1 SMP Sat Sep 14 05:32:37 EDT 2013 x86_64 x86_64 x86_64 GNU/Linux\njdk1.7.0_21/bin/java -Djava.util.logging.config.file=/xjp/appserver_1/tomcat/apache-tomcat-7.0.42/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Xms4096m -Xmx4096m -XX:PermSize=256m -XX:MaxPermSize=512m -Denv=Dev_CNJ -Dgrails.env=Dev_CNJ -Djava.awt.headless=true -Dliquibase.should.run=false -XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseParNewGC -XX:NewSize=512m -XX:MaxNewSize=512m -XX:+UseConcMarkSweepGC -XX:+DisableExplicitGC -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -Xloggc:/xjp/tomcat/apache-tomcat-7.0.42/logs/gc.log -Dderby.system.home=/xjp/appserver_1/tomcat/apache-tomcat-7.0.42/derby -Dspring.profiles.active=Dev,ldap-properties -Ddomain=Dev -Ddivision=BNYMellon -DdataCenter=CNJ -Dcom.sun.management.jmxremote=ptql:State.Name.eq=java,Args.*.ew=catalina.base=/xjp/appserver_1/tomcat/apache-tomcat-7.0.42 -Djava.endorsed.dirs=/xjp/appserver_1/tomcat/apache-tomcat-7.0.42/endorsed -classpath /xjp/appserver_1/tomcat/apache-tomcat-7.0.42/bin/bootstrap.jar:/xjp/appserver_1/tomcat/apache-tomcat-7.0.42/bin/tomcat-juli.jar -Dcatalina.base=/xjp/appserver_1/tomcat/apache-tomcat-7.0.42 -Dcatalina.home=/xjp/appserver_1/tomcat/apache-tomcat-7.0.42 -Djava.io.tmpdir=/xjp/appserver_1/tomcat/apache-tomcat-7.0.42/temp org.apache.catalina.startup.Bootstrap start\n```\n\nListener Code is as below:\n\n``` java\n@Configuration\n@EnableScheduling\npublic class CSVFileProcessor {\n\n       @Scheduled(fixedRate = 10000)\n    public static synchronized void pollDirectory() {\n        System.out.println(\"***started Polling***\");\n        faxFolder = Paths.get(folderPath);\n        try {\n            watchService = FileSystems.getDefault().newWatchService();\n\n            faxFolder.register(watchService,\n                    StandardWatchEventKinds.ENTRY_CREATE);\n            do {\n                WatchKey watchKey = null;\n                try {\n                    watchKey = watchService.take();\n                } catch (InterruptedException e) {\n                    System.out.println(\"Interrupted Exception cause \"\n                            + e.getMessage() + e);\n                    e.printStackTrace();\n                } catch (Exception e) {\n                    System.out.println(\"Exception cause .. \" + e.getMessage()\n                            + e);\n                }\n                for (WatchEvent event : watchKey.pollEvents()) {\n                    WatchEvent.Kind kind = event.kind();\n                    if (StandardWatchEventKinds.ENTRY_CREATE.equals(event\n                            .kind())) {\n                        String fileName = event.context().toString();\n\n                        System.out.println(\"File Created:\" + fileName);\n                        String txtFileAbsPath = faxFolder.toString()\n                                .concat(\"\\\\\").concat(fileName);\n                        System.out.println(\"##### Text file absolute Path .. \"\n                                + txtFileAbsPath);\n\n                        if (txtFileAbsPath.contains(\".txt\")) {\n                            System.out\n                                    .println(\"************** calling processFile() method on file : \"\n                                            + txtFileAbsPath);\n\n                            processFile(txtFileAbsPath);\n                        }\n                    }\n                }\n                valid = watchKey.reset();\n\n            } while (valid);\n        } catch (IOException e) {\n            System.out.println(\"IOException while polling Directory cause \"\n                    + e.getMessage() + e);\n            e.printStackTrace();\n        }\n\n    }\n\n}\n```\n\nand the error on Server as mentioned above ,\n\n```\nDec 28, 2015 1:38:00 PM org.apache.catalina.core.ApplicationContext log\nINFO: Initializing Spring FrameworkServlet 'appDispatcher'\n```\n\nIs there anything you suspect on the above please ? \n\nthanks In Advance .\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/167629563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/167643064", "body": "yeah , I got you .. sorry \n\nbelow is the Exception where I am stuck ,\n\n```\n- locked <0x0000000700c244b8> (a java.lang.Class for com.activiti.extension.bean.CSVFileProcessor)\n\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\nat java.lang.reflect.Method.invoke(Method.java:601)\n\nat org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:65)\n\nat org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)\n\nat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n\nat java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:351)\n\nat java.util.concurrent.FutureTask.runAndReset(FutureTask.java:178)\n\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:178)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:722)\n\n\"pool-3-thread-1\" prio=10 tid=0x000000000119b800 nid=0x3ac4 waiting on condition [0x00007f9fd76c3000]\n   java.lang.Thread.State: WAITING (parking)\n    at sun.misc.Unsafe.park(Native Method)\n    - parking to wait for  <0x00000006fccd0120> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\n    at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n    at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1085)\n\nat java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:807)\n\nat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)\n\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\nat java.lang.Thread.run(Thread.java:722)\n\n\"Thread-6\" daemon prio=10 tid=0x0000000001e13000 nid=0x3ac3 in Object.wait() [0x00007f9fd77c4000]\n\njava.lang.Thread.State: TIMED_WAITING (on object monitor)\n    at java.lang.Object.wait(Native Method)\n    - waiting on <0x0000000702e167e0> \n(a java.lang.Object)\n    at org.activiti.engine.impl.asyncexecutor.AcquireAsyncJobsDueRunnable.run(AcquireAsyncJobsDueRunnable.java:86)\n\n\n- locked <0x0000000702e167e0> (a java.lang.Object)\n\n- locked <0x00000007030c9258> (a org.activiti.engine.impl.asyncexecutor.AcquireAsyncJobsDueRunnable)\n\nat java.lang.Thread.run(Thread.java:722)\n\n\"Thread-5\" daemon prio=10 tid=0x0000000001e17800 nid=0x3ac2 in Object.wait() [0x00007f9fd78c5000]\n\n\njava.lang.Thread.State: TIMED_WAITING (on object monitor)\n\nat java.lang.Object.wait(Native Method)\n    - waiting on <0x0000000702fba728>\n (a java.lang.Object)\n    at org.activiti.engine.impl.asyncexecutor.AcquireTimerJobsRunnable.run(AcquireTimerJobsRunnable.java:88)\n\n- locked <0x0000000702fba728> (a java.lang.Object)\n\n- locked <0x00000007030c9280> (a org.activiti.engine.impl.asyncexecutor.AcquireTimerJobsRunnable)\n```\n\nthis might be being caused as I kept synchronized for my `@scheduled` method.\n\n```\n @Scheduled(fixedRate = 10000)\n    public static synchronized void pollDirectory()\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/167643064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/167821096", "body": "Hi Artem,\nyeah  , after removing 'static' and 'synchronized' specifiers from the method \nThe Server is up and running .\n\nwe are developing this to run along with Activiti , hence it becoming a little difficult to solve the Issues .\n\nthanks a lot for your inputs which helped me to solve the Issue.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/167821096/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/168702842", "body": "Hi Artem,\n\nthanks a lot .. sure , I will make sure to post in proper place.\n\n I am closing the Issue.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/168702842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "andregmoeller": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/185314176", "body": "Hey Artem,\n\nthank you for your super fast feedback! \n\nI start the example by entering `./gradlew :kafka:run`. \nMy machine is running Mac OS X 10.11.3. I downloaded kafka_2.11-0.8.2.2.zip and start Zookeeper by entering `bin/zookeeper-server-start.sh config/zookeeper.properties &` and start Kafka by entering `bin/kafka-server-start.sh config/server.properties &`.\n\nzookeeper.properties:\n\n```\ndataDir=/tmp/zookeeper\n# the port at which the clients will connect\nclientPort=2181\n# disable the per-ip limit on the number of connections since this is a non-production config\nmaxClientCnxns=0\n```\n\nserver.properties:\n\n```\nbroker.id=0\nport=9092\nnum.network.threads=3\nnum.io.threads=8\nsocket.send.buffer.bytes=102400\nsocket.receive.buffer.bytes=102400\nsocket.request.max.bytes=104857600\nlog.dirs=~/Documents/kafka/kafka-log-1s\nnum.partitions=1\nnum.recovery.threads.per.data.dir=1\nlog.retention.hours=168\nlog.segment.bytes=1073741824\nlog.retention.check.interval.ms=300000\nlog.cleaner.enable=false\nzookeeper.connect=localhost:2181\nzookeeper.connection.timeout.ms=6000\n```\n\nAfter reading your comment, I feel that maybe the best solution might be to \nremove `TopicCreator` and add a section on how to create a Kafka topic using `kafka-topics.sh` in the readme file.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/185314176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/185322214", "body": "Thanks a lot! This fixes the problem!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/185322214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "vayalaivadivel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188418432", "body": "Hi, I am getting below exception,\n\n```\n o.s.integration.handler.LoggingHandler   : org.springframework.messaging.MessagingException: failure occurred while polling for mail; nested exception is javax.mail.NoSuchProviderException: Invalid protocol: null\n```\n\nBelow are the dependencies which i am using,\n\n```\n    compile 'org.springframework.integration:spring-integration-mail'\n//    compile 'com.sun.mail:javax.mail:1.5.2'\n    compile 'com.sun.mail:javax.mail:1.5.5'\n    compile 'org.apache.commons:commons-email:1.1'\n```\n\nPlease help me to fix this issue.\n\nThanks and Regards,\nVADIVEL PM.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188418432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188424843", "body": "Hi Artem Bilan, Thanks for your quick reply below is the configuration details,\n\n``` java\n@Bean\npublic IntegrationFlow pop3MailFlow() {\n        return IntegrationFlows\n                .from(Mail.pop3InboundAdapter(\"pop3://user:pwd@outlook.office365.com/INBOX\")\n                                .javaMailProperties(p -> p.put(\"mail.debug\", \"true\").put(\"mail.debug\", \"true\")),\n                        e -> e.autoStartup(true)\n                                .poller(Pollers.fixedDelay(1000)))\n                .handle(\"MyHandler\", \"processEmail\")\n                .channel(\"My Message Channel\")\n                .get();\n}\n```\n\nPlease help me to fix. It is some what so urgency.\n\nThanks and Regards,\nVADIVEL PM.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188424843/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188436525", "body": "Ok Artembilan, I will check and let you know quickly\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188436525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188438207", "body": "Artembilan, Bad luck. Still i am getting same issue\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188438207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188458054", "body": "Sorry Unfortunately i have removed, Still i am getting same issue even though we removed the colon\n\nSame exception:\n\n```\n016-02-25 01:26:38.568  INFO 10060 --- [      Thread-12] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 2147483647\n2016-02-25 01:26:39.329 ERROR 10060 --- [ask-scheduler-6] o.s.integration.handler.LoggingHandler   : org.springframework.messaging.MessagingException: failure occurred while polling for mail; nested exception is javax.mail.NoSuchProviderException: Invalid protocol: null\n    at org.springframework.integration.mail.MailReceivingMessageSource.receive(MailReceivingMessageSource.java:125)\n    at org.springframework.integration.endpoint.SourcePollingChannelAdapter.receiveMessage(SourcePollingChannelAdapter.java:175)\n    at org.springframework.integration.endpoint.AbstractPollingEndpoint.doPoll(AbstractPollingEndpoint.java:224)\n    at org.springframework.integration.endpoint.AbstractPollingEndpoint.access$000(AbstractPollingEndpoint.java:57)\n    at org.springframework.integration.endpoint.AbstractPollingEndpoint$1.call(AbstractPollingEndpoint.java:176)\n    at org.springframework.integration.endpoint.AbstractPollingEndpoint$1.call(AbstractPollingEndpoint.java:173)\n    at org.springframework.integration.endpoint.AbstractPollingEndpoint$Poller$1.run(AbstractPollingEndpoint.java:330)\n    at org.springframework.integration.util.ErrorHandlingTaskExecutor$1.run(ErrorHandlingTaskExecutor.java:55)\n    at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)\n    at org.springframework.integration.util.ErrorHandlingTaskExecutor.execute(ErrorHandlingTaskExecutor.java:51)\n    at org.springframework.integration.endpoint.AbstractPollingEndpoint$Poller.run(AbstractPollingEndpoint.java:324)\n    at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)\n    at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:81)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: javax.mail.NoSuchProviderException: Invalid protocol: null\n    at javax.mail.Session.getProvider(Session.java:459)\n    at javax.mail.Session.getStore(Session.java:557)\n    at org.springframework.integration.mail.AbstractMailReceiver.connectStoreIfNecessary(AbstractMailReceiver.java:239)\n    at org.springframework.integration.mail.AbstractMailReceiver.openFolder(AbstractMailReceiver.java:259)\n    at org.springframework.integration.mail.AbstractMailReceiver.receive(AbstractMailReceiver.java:285)\n    at org.springframework.integration.mail.MailReceivingMessageSource.receive(MailReceivingMessageSource.java:111)\n    ... 19 more\n\n2016-02-25 01:26:39.338  INFO 10060 --- [      Thread-12] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 1073741823\n2016-02-25 01:26:39.342  INFO 10060 --- [      Thread-12] o.s.i.e.SourcePollingChannelAdapter      : stopped org.springframework.integration.config.SourcePollingChannelAdapterFactoryBean#0\n2016-02-25 01:26:39.342  INFO 10060 --- [      Thread-12] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 0\n2016-02-25 01:26:39.343  INFO 10060 --- [      Thread-12] o.s.i.endpoint.EventDrivenConsumer       : Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel\n2016-02-25 01:26:39.343  INFO 10060 --- [      Thread-12] o.s.i.channel.PublishSubscribeChannel    : Channel 'application:local:-1.errorChannel' has 0 subscriber(s).\n2016-02-25 01:26:39.344  INFO 10060 --- [      Thread-12] o.s.i.endpoint.EventDrivenConsumer       : stopped _org.springframework.integration.errorLogger\n2016-02-25 01:26:39.344  INFO 10060 --- [      Thread-12] o.s.i.endpoint.EventDrivenConsumer       : Removing {service-activator} as a subscriber to the 'pop3MailFlow.channel#0' channel\n2016-02-25 01:26:39.344  INFO 10060 --- [      Thread-12] o.s.integration.channel.DirectChannel    : Channel 'application:local:-1.pop3MailFlow.channel#0' has 0 subscriber(s).\n2016-02-25 01:26:39.345  INFO 10060 --- [      Thread-12] o.s.i.endpoint.EventDrivenConsumer       : stopped org.springframework.integration.config.ConsumerEndpointFactoryBean#0\n2016-02-25 01:26:39.345  INFO 10060 --- [      Thread-12] o.s.i.endpoint.EventDrivenConsumer       : Removing {transformer} as a subscriber to the 'merchantMessageChannel' channel\n2016-02-25 01:26:39.345  INFO 10060 --- [      Thread-12] o.s.integration.channel.DirectChannel    : Channel 'application:local:-1.merchantMessageChannel' has 0 subscriber(s).\n2016-02-25 01:26:39.346  INFO 10060 --- [      Thread-12] o.s.i.endpoint.EventDrivenConsumer       : stopped org.springframework.integration.config.ConsumerEndpointFactoryBean#1\n2016-02-25 01:26:39.346  INFO 10060 --- [      Thread-12] o.s.i.endpoint.EventDrivenConsumer       : Removing {jms:outbound-channel-adapter} as a subscriber to the 'merchantMessageProcessingFlow.channel#0' channel\n2016-02-25 01:26:39.346  INFO 10060 --- [      Thread-12] o.s.integration.channel.DirectChannel    : Channel 'application:local:-1.merchantMessageProcessingFlow.channel#0' has 0 subscriber(s).\n2016-02-25 01:26:39.347  INFO 10060 --- [      Thread-12] o.s.i.endpoint.EventDrivenConsumer       : stopped org.springframework.integration.config.ConsumerEndpointFactoryBean#2\n2016-02-25 01:26:39.347  INFO 10060 --- [      Thread-12] o.s.i.endpoint.EventDrivenConsumer       : Removing {service-activator} as a subscriber to the 'orderChannel' channel\n2016-02-25 01:26:39.347  INFO 10060 --- [      Thread-12] o.s.integration.channel.DirectChannel    : Channel 'application:local:-1.orderChannel' has 0 subscriber(s).\n2016-02-25 01:26:39.347  INFO 10060 --- [      Thread-12] o.s.i.endpoint.EventDrivenConsumer       : stopped org.springframework.integration.config.ConsumerEndpointFactoryBean#3\n2016-02-25 01:26:39.354  INFO 10060 --- [      Thread-12] o.s.s.c.ThreadPoolTaskScheduler          : Shutting down ExecutorService 'taskScheduler'\n2016-02-25 01:26:39.360  INFO 10060 --- [      Thread-12] o.s.j.d.e.EmbeddedDatabaseFactory        : Shutting down embedded database: url='jdbc:hsqldb:mem:testdb'\n2016-02-25 01:26:39.365  INFO 10060 --- [      Thread-12] o.a.activemq.broker.TransportConnector   : Connector vm://test.replinkorder.integration stopped\n2016-02-25 01:26:39.366  INFO 10060 --- [      Thread-12] o.apache.activemq.broker.BrokerService   : Apache ActiveMQ 5.12.0 (test.replinkorder.integration, ID:IND-VADIVEL-LT-54243-1456343776935-0:3) is shutting down\n2016-02-25 01:26:39.370  INFO 10060 --- [      Thread-12] o.apache.activemq.broker.BrokerService   : Apache ActiveMQ 5.12.0 (test.replinkorder.integration, ID:IND-VADIVEL-LT-54243-1456343776935-0:3) uptime 13.105 seconds\n2016-02-25 01:26:39.370  INFO 10060 --- [      Thread-12] o.apache.activemq.broker.BrokerService   : Apache ActiveMQ 5.12.0 (test.MyClientorder.integration, ID:IND-VADIVEL-LT-54243-1456343776935-0:3) is shutdown\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188458054/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188459095", "body": "Now i am getting `javax.mail.AuthenticationFailedException: Command is not valid in this state` error for the configuration,\n\n```\n@Bean\n    public IntegrationFlow pop3MailFlow() {\n        return IntegrationFlows\n                .from(Mail.pop3InboundAdapter(\"outlook.office365.com\", \"usernae\", \"password\")\n                                .javaMailProperties(p -> p.put(\"mail.debug\", \"true\").put(\"mail.debug\", \"true\")),\n                        e -> e.autoStartup(true)\n                                .poller(Pollers.fixedDelay(1000)))\n                .handle(\"MyMailOrderUpdateProcessor\", \"processEmail\")\n                         .channel(myMessageChannel)\n                .get();\n    }\n```\n\nFYI\n\n```\n<ijLog><event type='onOutput'><ijLogEol/>\n  <test id='2.7' parentId='2.5'><ijLogEol/>\n    <descriptor name='sending mail file and verify Inbound Flow' className='com.b2s.service.merchant.replink.TestMailContextSpecIT' /><ijLogEol/>\n    <event destination='StdOut'><![CDATA[Caused by: javax.mail.AuthenticationFailedException: Command is not valid in this state.<ijLogEol/>\n]]></event><ijLogEol/>\n  </test><ijLogEol/>\n</event></ijLog>\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188459095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188459873", "body": "Ok no problem thank you so much...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/issues/comments/188459873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "gerdbremer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/comments/2705044", "body": "I'm new to spring integration and tried to execute the file example. It turns out, that I have to:\n- copy the input files to ${java.io.tmpdir}/spring-integration-samples/input manually\n- change the regex to accept file_0.txt - file_4.txt file names\n\nIn addition only one file is copied, but maybe I didn't understand the channel adapter behavior right now and this is intended behavior.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/comments/2705044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "tmccuch": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/293970", "body": "Gunnar -\n\nI'll give you a call this week about what I need to do as part of getting\nthis into the samples. I'm a bit git-challenged, so I'll likely need your\nhelp. Also, I have some additional comments / read me material for the new\nsample that was contributed by a colleague of mine to share with you.\n\n_Tom\n\nOn 12/14/11 12:21 PM, \"Gunnar Hillert\"\n<reply+p-293782-3ff0cd8b1d7f32077c367b7059b8ea3567e68773-858375@reply.githu\nb.com> wrote:\n\n> > @@ -7,14 +7,14 @@\n> >      <version>2.0.0</version>\n> >      <name>Spring Integration Cafe Sample</name>\n> >      <properties>\n> > -     <spring.integration.version>2.0.5.RELEASE</spring.integration.version>\n> > -        <spring.integration.version>2.1.0.M3</spring.integration.version>\n> \n> I will review Spring Integration versions as part of\n> https://jira.springsource.org/browse/INTSAMPLES-38\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/SpringSource/spring-integration-samples/pull/14/files#r\n> 293782\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/293970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "columb1a": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/105437784", "body": "what's the difference here? how is this connected with the changes you did in the TestSuite class?\r\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-samples/pulls/comments/105437784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}}}