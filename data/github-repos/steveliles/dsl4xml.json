{"_default": {"1": {"steveliles": {"issues": [], "commits": [{"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/d543adac36c147c1ab9ef508425a70b3a2105555", "message": "bsd license"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/6768ae81abdec875fa6331839eaefe55c571025e", "message": "extracted a common JsonObject class which implements the bulk of the functionality required by Named and UnNamed json objects, and used as a delegate to implement both"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/97da60a3e5cc6aed16276d7838861de98b325345", "message": "refactored named and unnamed array implementations out to a common implementation as a top-level class rather than anonymous inner in JsonDocumentDefinition"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/3f9e3ef7746a41aa09a3e3a7f9fd6b0410b47f42", "message": "beginning to refactor anonymous inner classes out to nested implementations within their respective interfaces"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/522e02123019e35bae79a94ce430d69c10203b0f", "message": "test and implementation for ignoring sections of the json document we aren't interested in mapping"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/d036fb7f7cefc5ee6d0b63c7acafbb36ea2a474d", "message": "working towards being able to ignore sections of a json document we aren't interested in"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/7f43a31fd76b67cbd286d0bb836cd0a72013a024", "message": "more tests and some cleaning up"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/b68e45b99cde97a78a0ed78bc8c1970753310ffe", "message": "fixed a bug in gsoncontext, all tests passing"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/a434dcf3c3b874fbedc078030507bb97227f06f6", "message": "removing legacy gson implementation. Re-assigned a test class to the new implementation and working through fixing the test and code-under-test"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/33b4cda5d23dbf0692f72dd2764462538ae8ee2b", "message": "deprecating some old classes and renaming to Legacy*, also pushed back some useful classes to the core support package"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/174195cfd6648e29c7ad2618ff5541043a520fe6", "message": "passing all tests"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/7b4c12b121164ed9f0f1d24f631f4d3369615650", "message": "working through some more tests and fixing bugs along the way"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/a2f6772a84ddfcb0f4feec4d3b2f7b23e0d70f5c", "message": "Added converters for number and boolean types available from javascript and added (and passed) another test"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/dea42407edb9840b48d8060324ef04b29b2b71a6", "message": "refactored to have just one kind of ReflectiveBuilder that decides how to behave based on whether it is given an intermediate class or not"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/7669b90eabe6fe04f5e24af85170019474aa17c8", "message": "first attempts at json parsing - first two tests passing after numerous modifications and fixes"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/3ae9ddfbac4bf6f60be860e536fa2a0eb37066b4", "message": "just finished drafting a gson context for working with the new document definitions ... completely untested but I want to get this checked in"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/f194054dcd80a1cccc01149251a09aa4ab407607", "message": "separated preparation of reflector from the reflector interface (via ReflectorFactory)"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/6bc434725f9317c5988524f344e6fc6b2ca8ca12", "message": "finished work on the JsonDocumentDefinition and associated classes, including wiring-up checks that allow the mappings to be checked early where possible and calculated from the context when the definition has not made types explicit"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/d3708433ad0803bc9d6676be685c1af1e48d279d", "message": "ensuring that builders know the names of the things they build, to allow the context to select an appropriate builder. Making the Reflector the one source of all reflective capabilities (no more static calls to Classes."}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/7c36063486597499ba9c4cdbdf557acad4f901cd", "message": "setting up builders to work with a Context object so that they are stateless and thread-safe"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/90085c8b33dc8fd1a85ae3874c187fe9a7cfc2fd", "message": "filled in some of the blanks in JsonDocumentDefinition. Ready to begin unit-tests to drive out a working implementation"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/8e880c5813131822e5e3bb544ffa8e9f02e2d9de", "message": "implemented builders for both direct or intermediate building, and a thread-safe caching reflection helper"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/4a2ecbf90dc65ecf3aca8e9efb27a1d3aeca5b92", "message": "introduced a builder interface, which is the product of a completed definition and is used to build the defined objects"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/01e23cd53721b69ea1de02cd68bf3ce02a9d3e5d", "message": "filled out JsonDocumentDefinition with basic implementations to guide the next pass of refactoring and deeper implementation"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/a2174f4aeb4d2323db1017db59ee400c35b7959b", "message": "beginning to work through implementation of JsonDocumentDefinition"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/11b4fbd202154138f2a1d682fa265273ef369a92", "message": "wrangling generics to support type-safe converter-registration method chaining"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/4476613dca260cc17d265378ad1a319f5fca18ec", "message": "fixed a silly bug in StringConverter"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/df0b0af22c08e0f4afcdde646947aef6e80e6801", "message": "Working through some more modifications to the json parsing dsl, including setting up converters as part of the definition of the document"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/11779bfad253d96c1fb69579d28eb16944ba6054", "message": "much improved json parsing dsl"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/e82b6d620ae5bb7411da4763c3ba6518b1875e0f", "message": "refactoring towards a single consistent dsl for xml parsing, and likewise for json parsing"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/5d4880656e4fd7844858f5d5348b60cbc845d9fb", "message": "Fixing up some issues - still getting used to intellij which\ndoesn't constantly recompile the entire project on the fly..."}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/5bd99471936fba27e3f04ab7ee19ae94e035df85", "message": "Generalized the Converter interface to convert from classes\nother than just String. Modified implementations accordingly.\n\nThreshing out an alternative approach to the DSL that is more\nconsistent between parser implementations, more complete,\nand does not involve static imports."}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/b2616f6965baae83decf6f3aa11c46a08fbf7ea4", "message": "allowed aliasing a json object to a different field-name in the java class"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/a80a5729718007d77b7110c5eaa848ba383d0782", "message": "various tweaks, twiddles and pokes while noodling with json parsing"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/ab3143e3b8b3c87f861e026975ae17a5b262765e", "message": "experimenting with 'Factory' for populating immutable objects"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/e27c6179ee0837f1cccb580552334618227ea3ac", "message": "null safety in enum converter"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/411b1f20578a4d9e1b1f03a9703b4331fab04e42", "message": "added an enum converter. cannot register it generically, as it needs to be parameterised with the specific enum type to convert"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/9f75bebb4f5e12910980f2bfb94d271d3ea36364", "message": "tweaking the readme"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/44326fdd453596ed5b9b38b98a10d5a6d35c355b", "message": "describing json parsing in the README"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/7a2e86e460e8092bcb50a7a7d0ea31a61768b8bf", "message": "Allowed dynamic proxying of 'toXXX' methods, and fixed some bugs in calculation of method names to invoke"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/b6bf5ae573ed3a690a6bf372a7fa85ce99cdcca0", "message": "first working draft of json parsing"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/e1608895180a555d2849fd682f9e36c36a7a4e2b", "message": "Merge branch 'master' of github.com:steveliles/dsl4xml"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/e6ef2e640c648b87b8196e9b27ba5da7ac4c65e6", "message": "discovered an accidental dependency on the order of Method objects returned from class.getMethods - different order in Java7 Mac than Java6 linux, results in complete failure on Mac - fixed"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/60101af0f24c2e0d2a2aec790bbef0fdab5876bf", "message": "ignore idea project files"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/c86a2e178f8d67597d4fb67acd31c5c03b066275", "message": "started playing with a json parsing implementation using gson"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/a19b617ff515d17a31f6f88496ee1042c7a8095c", "message": "removing some project files that shouldn't have been committed"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/aeddd83ac7e47e63f6055665f3fae665224a8336", "message": "updated README to reflect new module arrangement"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/d529662944d4cbed2890ea2aa12031e6f01112d3", "message": "big refactoring to split the project so that sax and pull can be used separately, no dependency on Android jar, multi-module maven support, and placeholder for json parsing"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/f128da778ee17e73041a57c1b43ebe386d5d9d77", "message": "modified readme to reflect the fact that dynamic implementation no longer requires paired get/set methods"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/475d79accf4d19d19242734a26eff383d0695998", "message": "Refactoring to remove the need for mutable interfaces in dynamically proxied interfaces. Possibly a breaking change for some users, though I have tried to keep everything working and all tests still pass"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/ad29b04fcf4f1c9a9761223f7064897667f1ee82", "message": "Merge pull request #2 from Sash0k/patch-1\n\nmaven dependency fix"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/bd592f96031f705f42983b90a58d951f8db8a705", "message": "updated latest maven dependency version"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/240545d243f718fad80dbc2b3810a010a7b0513a", "message": "Allowed for hyphenated attribute and element names - mapped to camel-case method names"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/e560313d1c5e79fc5f48e7e8817970efb2c21cf3", "message": "Added hashcode and equals methods to dynamic-proxy implementations to prevent NPE's"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/12a4ceadba320b4bddb53de44c2902867bf856b7", "message": "removing some debug output from tests"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/e19dc07202bc009f89422c1dda7079d74b2b1750", "message": "updated dependency info"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/87bf2b708f20cc63ff966db3fdc44476cbcb85a7", "message": "0.1.5"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/6325bb3be65d438f9fb8a344e2f0481a19177953", "message": "PullDocumentReader fixes - passing all tests"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/36b6c6acd654697042f5c2c70ab13490e30b7e53", "message": "refactored to repeat same set of tests for both sax and pull. Currently several failures in pull implementation"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/050d6341a05561b1343fdf6273e156f8964fc361", "message": "more extensive tests for SAXDocumentBuilder. Fixed several bugs and funnies along the way."}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/933e8ea51bed7c628e67e4002a427aa3eb4a659e", "message": "0.1.4"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/106be4d1e27bbeb72233d514ca55da260155326e", "message": "small changes"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/70a282a0af84f6dc0a334f49a55ef0ffaa41a935", "message": "Try more setter-method name variants"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/cd9b74d4f5286d0031c5802421d88df3dc7113db", "message": "making the README and the config-test match up"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/3bfd0c6f174aef14cc8f8638ebc9afab0427486a", "message": "tweaking the readme"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/a22c511da08ebb86711cbeca230e764d856f2a95", "message": "Updating readme to illustrate dynamic implementation"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/4b789618d0854b9c6605192ebdb901cfed8153a6", "message": "dynamic implementation working for pull reader as well as SAX. Found and fixed a bug when handling elements with attributes _and_ inner content (nested tags or pcdata)"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/c220e5fd61eb3db1654fd1c26eb6555b4b9a7167", "message": "another dynamic implementation example"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/2aad10ed4789ba4b5584e40302ba49019f01a406", "message": "back to snapshot and better tracing of problems with anonymous classes when using dynamic implementation"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/e2c2ec2b2a00d21f52cb49a7b65e233effa95718", "message": "Removing duplicate class and fixing a failing test"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/d3b4905456a6d01e28071583293f2c12a147fdba", "message": "versioning and updating README to include maven location"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/aa9b3a40031264e07c454cdb6a795263daccd606", "message": "experimenting with automatic implementation of interfaces - map xml to interfaces and have POJO implementations dynamically created that fulfil those interfaces. Probably many unsatisfied edge cases right now..."}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/38c4089db20f2eb49ce6532108973ebb3c6627b9", "message": "tweaking the readme"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/dfcd17af3c25675df19a0f02774906051b9b38d0", "message": "Extracted nested classes from SAXDocumentHandler for easier testing. Fixed an exception-hierarchy bug along the way. Introduced DocumentReader<T> interface above AbstractDocumentReader<T>."}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/f4bdcea7cae3caaa401df2f223dd4eaad65d2c18", "message": "Merge pull request #1 from ntamas/master\n\nFixing a bug in SAXDocumentReader.TagHandler - thanks @ntamas !"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/21c6bf192add14e4471cced72a3c608185ca38c2", "message": "removing some debug"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/626217b17a6964407654782f0e646d663e8c24c9", "message": "Small modification to readme"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/3ecf0d44755917be5bff8a9f0d58690eaa4a6480", "message": "renamed DocumentReader to PullDocumentReader to clearly indicate the difference between it and SAXDocumentReader"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/b96e71dcbb7332b6a1f7c2088edffaf38d4d8cb0", "message": "Added SAX-based dsl4xml implementation. Needs a bit of refactoring"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/4e5687263de3a347d0901bec9627bf80cf4db9f4", "message": "first attempt at dsl for sax parsing"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/e3b0aa6edba50e1119291ddd612d38c12398e7a4", "message": "Added namespace support (in tags)"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/7177f42a639a264938489ebc4330f48feb483223", "message": "back to snapshot for changes"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/90f9e25fd01a703934a568a9505b83e1bddba61b", "message": "Fixing the src directory declared in the pom, and versioning at 0.1.2"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/2f80e1ffc75b29f6733f4121547c4b1cfbedf931", "message": "small clean up of attribute readers, and added extraction of language from twitter feed example"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/d233dbc41b84e29f6c1d12ff010e95b233f4bf7b", "message": "1.1.2-SNAPSHOT"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/f6eef79e9b0d1c0b1f6602230575742cf5c12ab9", "message": "v0.1.1"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/5f6a6c542516e7d6971826d5c1899dfd1fae18d6", "message": "Extended the DSL to improve readability\n\n* Added \"attribute\" factory method for single-attribute reading\n* Added \"pcdataMappedTo(field name)\" factory method for explicitly\ndeclaring pcdata mapping inside a \"with\" clause.\n\nExample use:\n\n  tag(\"content\", Content.class).with(\n\tattribute(\"type\"),\n\tpcdataMappedTo(\"value\")\n  )"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/18f1a1b0e135dcdc75d96e295ddf236fd6a0a36e", "message": "Added author to the model"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/1352fc81bc8d417ab6dcb1bc6d1724df0a25099d", "message": "v0.1"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/62d402c4e3aae7232543e89734c27a4d213e80b9", "message": "Added an example of parsing a twitter feed\n\nThis was a useful example as it drove out some issues with tags that\nhave both attributes and PCDATA."}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/86cbe1d57b261b51ac8220a09277c57ef0481b25", "message": "Test for, and test-driven improvements to, ValueSetter"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/039aedf19210fc8f0a3e34cf2fa4a912cb7b0ce3", "message": "Extracted HasConverters interface from ReadingContext\n\nPrimarily for testing purposes, this introduces a bit of granularity\nand reduces the surface contact between between ValueSetter and\nReadingContext to only the provision of converters."}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/9ad9539ca33a1db809013c4f481889910e6a2c9a", "message": "Fixed broken test (forgot to check that mock expectations were satisfied)"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/2f50dda74dae25d1e2617e24bc5e2cba6bde1edd", "message": "minor README update about aims"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/ae6bea8f82ed9177fa23f5a8587edeb52ed7fe11", "message": "Extracted interface ReadingContext"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/d4d33263681e1f4c941fab8d2a857eb806f5d7da", "message": "Extracted an interface for ReadingContext, initially for test purposes"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/7f4c2a46dcf2bfbcf0b5575cae05d0e79f8cb6ea", "message": "Adding support for reading attributes in order"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/52c9b1a310640f24e9f42c7316d5996b1b23d1b8", "message": "Updating README to reflect class name changes from marshall* to read*"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/194210eea38ca450e06ea8453a8d5ae40ccb97d2", "message": "Renaming from marshall* to read*"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/4053616a0a7abb9056c56347d1564bacfac7e1ee", "message": "Some renamings\n\nRenaming from marshall* to read*."}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/27564964952b2bdd7721e1daeb3045f804839069", "message": "Explicitly treating text nodes as PCDATA\n\nNot officially supporting CDATA yet, so making it PCDATA explicit. Need\ntests and support for CDATA."}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/1920028a13590f013cffa276116ade438cdf8b55", "message": "Updating README to reflect automatic mapping of PCDATA"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/99e5cfaf77e6aec774567a2a95b805a8c366b0d9", "message": "Simplifying DSL use\n\nModified TagMarshaller so that the default behaviour is to expect CData\nif no other content is specified. This means that instead of having to\nwrite tag(\"tag name\").withCData() you can just write tag(\"tag name\") if\nthe tag only contains CDATA."}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/0505dcf9d03d789feaf688e843d4064c1b38c477", "message": "Fixed eclipse classpath"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/9da104c4757d9231b68e562c6c5fe956935d58fa", "message": "small change to remove a warning"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/1f970c7400e1ba5e75fe2ca56c638940abbd34de", "message": "testing date conversion"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/6ef2a6fa9f89a6290f6b2caa09def507bc76d460", "message": "Added a test case for String conversion"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/6ab32f7b26877f09b4169a96462f9c4a7caedb55", "message": "testing short conversion (primitive and wrapped)"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/50825b2aa76584741f2d82940e34cd5c9c5917fe", "message": "Added test-case for primitive long conversion"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/a43af18f61faf1ab82e596a79c620a1b4307c204", "message": "Added test-case for primitive int converter"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/e97b108ad623aebbefaeafca3fe5838f104b420a", "message": "Added test-cases for primitive float and double conversion"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/70289242b1317da40068bee1549022506cb61c5e", "message": "Added test for primitive char conversion"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/15dac3843c96ed08896e6c5fe5e4a43b652b25e3", "message": "Added test case for primitive byte conversion"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/184f3073a5d9ea66f66b0f0b9f7e56883b5f802e", "message": "Added test-case for primitive boolean conversion"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/f2ef3ebbb1e0340a37f870d9fbfc1d5ee84adeb9", "message": "Improving Double, Float and Integer converter tests, and adding LongConverterTest"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/0b87ca9da1d76f28358fed592e830778cc130468", "message": "Added tests for Integer and Float converters"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/fe18743499918417055bc4df558dbe3497c80cac", "message": "fleshing out the DoubleConverterTest"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/bec1ef693d72652d2cc1b4586fb2f52f8f8c3fa6", "message": "More testing of converters"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/20ae9d3e7c5d8f633c75be93cfd027cdbc28293d", "message": "nope, script tags scrubbed - of course, github are good at what they do :)"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/2e50254810616e197b051138a6e56275fcb8f931", "message": "experiment to see if github will include a script in a formatted README.markdown (to kick off syntax highlighting)"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/c0618bacd183fb0ad14ecf1a6ff77ba572ebc7f4", "message": "Added a test-case for ByteConverter"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/62e319b3472628dcfaa9558430981705175fbbe1", "message": "renamed test to match the naming pattern required for Maven to auto-include in the test-suite. Added a test-case for BooleanConverter"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/cac449f34b7399ec458ef3d8f3971384e7a9b985", "message": "renaming UnsafeDateConverter to ThreadUnsafeDateConverter to remove ambiguity"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/d6a1071878883b51d2b24fd8befabeb56ca7a9da", "message": "Adding a bunch of new converters for primitive types and their wrappers"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/88f867a5da6deddcd6bdac88c0d07069ae6af4f9", "message": "updating readme with more complex example"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/ad2141df218a776ebd68a75072feab16a5221fd5", "message": "A more complex test using deeply nested model objects and type conversion"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/06aa8e3d204c36d814042597148b2a44a860c61c", "message": "Made provision for type conversion, and added the first few simple converters"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/df625bd1ed8179ec65ceca8c74e030a4aeb1fa0b", "message": "More examples in README"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/3e7f0738d49daaf0fb9ee9d7416784dd223626ec", "message": "Removing some unused classes, and refactoring some abstract classes to be concrete and final"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/a835320e1154cbc61f63acff5458089c002cfb1a", "message": "balancing the arguments between DOM and SAX/pull parsing"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/cfe0bc8d9adc771facdcb31316236cc6d793e38c", "message": "updated readme"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/2cbdce2893100feb062f0755e268ae28928b1e2a", "message": "Renaming 'map' method to 'marshall', as a better fit for what is actually happening, and to fit with the class names"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/9a78552507a9a4a74be4ec0afd811b62f5b8c848", "message": "renaming some classes, methods, and variables for clarity"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/54c315afc0d5a53ea7ccaf8da50d03a31a2cf166", "message": "added a convenience method for auto-mapping CData to field of same name as current tag"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/dced2e346d6b46dee19a5168e30def1a1bc1570f", "message": "fixed a small mistake"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/b3447f44de92de1da9023aa1685c361edcc57df2", "message": "adding a readme"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/1351706393e3c8eefb24f814053080f6bbf70bf2", "message": "introduce attribute test and added/refactored mappers to pass the test"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/6ada4a49273d5c9ef03431a8e662ae3797b682bc", "message": "A bit of refactoring, preparing for the second test - working with attributes"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/2aa4bf140d50e0931f437c0c7b98534615e2ff4c", "message": "first playing around with a dsl for xml parsing using xmlpullparser."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/6172215", "body": "Thanks very much for the fix! :)\n\nS.\n\nOn Wed, Jun 6, 2012 at 1:30 PM, Tam\u00e1s Nepusz <\nreply@reply.github.com\n\n> wrote:\n> \n> Fixed a bug that can be triggered in the current trunk version as follows:\n> 1. Create a SAXDocumentReader with a tag handler T that has no subhandlers.\n> 2. Create an XML file where the tag T handled by the above tag handler has\n>    some subtags that should be ignored.\n> 3. When parsing the tag T in TagHandler.startTag, the method returns with\n>    the same tag handler when it encounters a subtag instead of the ignore\n>    handler. This puts the context stack out of sync with the XML tree and\n>    sooner or later one will encounter an EmptyStackException when the parser\n>    tries to peek into the stack.\n> \n> This commit fixes the issue by modifying TagHandler to return the ignore\n> handler instead of \"this\" when a tag handler has no subtag handlers and it\n> encounters a subtag.\n> \n> You can merge this Pull Request by running:\n> \n>  git pull https://github.com/ntamas/dsl4xml master\n> \n> Or you can view, comment on it, or merge it online at:\n> \n>  https://github.com/steveliles/dsl4xml/pull/1\n> \n> -- Commit Summary --\n> - fixed a bug when a tag with no subtag handlers encountered an unknown\n>   subtag\n> \n> -- File Changes --\n> \n> M src/main/java/com/sjl/dsl4xml/SAXDocumentReader.java (2)\n> A src/test/java/com/sjl/dsl4xml/example/UnknownTagsTest.java (63)\n> \n> -- Patch Links --\n> \n>  https://github.com/steveliles/dsl4xml/pull/1.patch\n>  https://github.com/steveliles/dsl4xml/pull/1.diff\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/steveliles/dsl4xml/pull/1\n", "reactions": {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/6172215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/15514382", "body": "thx :)\n", "reactions": {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/15514382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/18286424", "body": "Can you tell me a bit more about your use-case so I have a better idea of your goals?\n", "reactions": {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/18286424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/18290093", "body": "OK, I think I see what you mean - you want to invoke methods on an existing object, rather than instantiating a new object for the tag, right?\n\nYou have a few options -\n1. Let DSL4XML build your objects, then post-process them to set shared prefs (nice and easy)\n2. Do a bit of static trickery - using singletons or static methods inside the Book.class for example\n3. bravely try the below...\n\nWhile working on the first version of json parsing I introduced a mechanism that could be used to do what you want (factory objects passed to the json equivalent of a tag method). I didn't quite finish porting that back to the xml dsl, but I think the only thing missing is a static method in the SAXDocumentReader like:\n\n```\npublic static <R> TagHandler<R> tag(String aTagName, Class<R> aClass, Factory<R,?> aFactory) {\nreturn new TagHandler<R>(aTagName, aClass, aFactory);\n}\n```\n\nYou could add that static method yourself to your own class ...\n\nThe factory is a converter of sorts - it is called with the constructed value of the tag, giving it an opportunity to do some extra work and/or convert the type to something else. In your case the Factory would not do any conversion, it would just return the object it is given, but it could store your shared prefs, for example.\n\nA couple of things worth noting:\n1. I didn't actually complete this work for xml, so I haven't tested it\n2. I am actually in the midst of a rewrite, attempting to make the DSL more consistent across all underlying parser implementations. At this point I can't really say what effect this will have on your needs...\n", "reactions": {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/18290093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/18336080", "body": "Something like this might do it:\n\n```\nFactory<Book, Void> factory = new Factory<Book,Void>(){\n    public Void newTarget(Book aBook) {\n        SharedPreferences prefs = PreferenceManager.getDefaultPreferences(this);\n        Editor edit = prefs.edit();\n        edit.putString(\"synopsis\", synopsis);\n        edit.commit();\n        return null;\n    }\n}\n\nreader = mappingOf(\"books\", Books.class, factory).to(\n    tag(\"book\", Book.class).with(\n        tag(\"title\"),\n            tag(\"synopsis\")\n        )\n    );\n```\n\nI used Void and returned null just to show that it doesn't have to be the same type. It would probably be better to use `Factory<Book, Book>` and return the aBook parameter just to avoid the possibility of NPE's.\n\nOne thing that concerns me though ... are you marshalling _any_ objects from this XML, or you want to perform actions like the above on all branches of the XML tree?\n\nI ask because DSL4XML is a marshalling tool - designed to produce Java object graphs as a result of parsing - but the kind of thing you're trying to do (perform actions when XML tags are encountered) sounds like a good fit for event-based XML parsing - (ie. SAX, using a ContentHandler). If you don't want the marshalled objects, working directly with SAX will be faster (at runtime) and will generate less garbage. \n", "reactions": {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/18336080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/26437845", "body": "Hi,\n\nThe DSL is a little bit lacking on the root node. You could probably do it like this:\n\n```\nmappingOf(\"gpx\",XmlGPX.class).\n    to(attributes(\"version\",\"creator\")).\n    to(tag(...));\n```\n\nThe \"to\" methods all return the same DocumentReader instance, so this should work, although I confess I haven't actually tried it.\n\nI don't know what the rest of your document looks like, but unless you actually _need_ the xmlns values you could probably just ignore them (don't even try to map them). \n\nIf you _do_ need them then you're going to run into trouble because I haven't yet implemented proper handling of namespaces - the result is that dsl4xml would try to map namespaced fields to java setter methods with invalid names (like setXmlns:xsi(String value)).\n", "reactions": {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/26437845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/135460079", "body": "what license would you like? Apache 2?\n", "reactions": {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/135460079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/135662419", "body": "BSD licensed d543adac36c147c1ab9ef508425a70b3a2105555\n", "reactions": {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/135662419/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "Sash0k": {"issues": [], "commits": [{"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/a444399c266e98ac39dca4792ff5ca3255d6a164", "message": "maven dependency fix"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ntamas": {"issues": [], "commits": [{"url": "https://api.github.com/repos/steveliles/dsl4xml/commits/852eaa1c6046555e46fc316cc9a0bcf6fafec014", "message": "fixed a bug when a tag with no subtag handlers encountered an unknown subtag"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/6186713", "body": "No problem. Thanks a lot for dsl4xml - it saved me a lot of time when I had to switch from SimpleXML in an Android-based app because it was way too slow.  \n\n## \n\nT.\n\nOn Thursday, 7 June 2012 at 11:49, Steve Liles wrote:\n\n> Thanks very much for the fix! :)\n> \n> S.\n> \n> On Wed, Jun 6, 2012 at 1:30 PM, Tam\u00e1s Nepusz <\n> reply@reply.github.com (mailto:reply@reply.github.com)\n> \n> > wrote:\n> > \n> > Fixed a bug that can be triggered in the current trunk version as follows:\n> > 1. Create a SAXDocumentReader with a tag handler T that has no subhandlers.\n> > 2. Create an XML file where the tag T handled by the above tag handler has\n> >    some subtags that should be ignored.\n> > 3. When parsing the tag T in TagHandler.startTag, the method returns with\n> >    the same tag handler when it encounters a subtag instead of the ignore\n> >    handler. This puts the context stack out of sync with the XML tree and\n> >    sooner or later one will encounter an EmptyStackException when the parser\n> >    tries to peek into the stack.\n> > \n> > This commit fixes the issue by modifying TagHandler to return the ignore\n> > handler instead of \"this\" when a tag handler has no subtag handlers and it\n> > encounters a subtag.\n> > \n> > You can merge this Pull Request by running:\n> > \n> > git pull https://github.com/ntamas/dsl4xml master\n> > \n> > Or you can view, comment on it, or merge it online at:\n> > \n> > https://github.com/steveliles/dsl4xml/pull/1\n> > \n> > -- Commit Summary --\n> > - fixed a bug when a tag with no subtag handlers encountered an unknown\n> >   subtag\n> > \n> > -- File Changes --\n> > \n> > M src/main/java/com/sjl/dsl4xml/SAXDocumentReader.java (2)\n> > A src/test/java/com/sjl/dsl4xml/example/UnknownTagsTest.java (63)\n> > \n> > -- Patch Links --\n> > \n> > https://github.com/steveliles/dsl4xml/pull/1.patch\n> > https://github.com/steveliles/dsl4xml/pull/1.diff\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/steveliles/dsl4xml/pull/1\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/steveliles/dsl4xml/pull/1#issuecomment-6172215\n", "reactions": {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/6186713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "HappyDr0id": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/18287428", "body": "Yes of course, sorry if my question is not crystal clear.\nFor example, here is the xml I want to parse : \n\n``` xml\n<books>\n  <book>\n    <title>The Hobbit</title>\n    <synopsis>\n        A little guy goes on an adventure, \n        finds ring, comes back.\n    </synopsis>\n  </book>\n  <book>\n    <title>The Lord of the Rings</title>\n    <synopsis>\n        A couple of little guys go on an adventure, \n        lose ring, come back.\n    </synopsis>\n  </book>\n    <book>\n     <title>Twilight</title>\n     <synopsis>\n         A vampire saga (...)\n     </synopsis>\n   </book>\n</books>\n```\n\nand here is my reader java class : \n\n``` java\npublic class DSL4XMLSAXBookReader implements BookReader {\n\n    private SAXDocumentReader<Books> reader;\n\n    public DSL4XMLSAXBookReader() {\n        reader = mappingOf(\"books\", Books.class).to(\n                tag(\"book\", Book.class).with(\n                        tag(\"title\"),\n                        tag(\"synopsis\")\n                )\n        );\n    }\n\n    @Override\n    public Books read(InputStream anInputStream) throws Exception {\n        return reader.read(anInputStream, \"utf-8\");\n    }\n}\n```\n\nAll is working very well, no problem. But if I want to put the synopsis in a SharedPreference (this is just an example) and not in a java class, can I do that ?\n\nThanks for your time :)\n", "reactions": {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/18287428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/18334855", "body": "Thanks for your answer.\n\nI want to make something like\n\n``` java\nSharedPreferences prefs = PreferenceManager.getDefaultPreferences(this);\nEditor edit = prefs.edit();\nedit.putString(\"synopsis\", synopsis);\nedit.commit();\n```\n\nin the tag method for example.\n\nI understand the choice I have for doing that. And yes, the easiest is certainly to reuse the constructed Book object with a post-process (option 1). But I would like to not have to create this Book object to execute my method. And create a static method into my Book class (option 2) is also too much Book-dependent.\n\nThat's why I think the option 3 is certainly the best solution. I just didn't get how you obtain the constructed value with the Factory class. I don't see what the Factory look like, could you clarify a little bit this point please ?\n\nI know that what I want to do is quite complex, so thanks a lot for your answers and your time. I will wait for your response when you will have the time for that, have a good day !\n", "reactions": {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/18334855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/18340397", "body": "Actually, by default I use SAX to parse XML files in my applications, but I wanted to test and know if there were other solutions, maybe not with better performances, but with a more readable code than the implementation of a SAX parser.\n\nFinally I can conclude that the SAX parser is great in terms of performance, and that DSL is as good as SAX and more readable but only to map Java objects to XML files. If I want to execute so custom methods during the parsing, I should use SAX because it is maybe \"simpler\".\n\nI understand that this use-case is not what DSL is primarily made for, and I still think this is a great API to parse XML on Android.\n\nThanks for your help, you have greatly advanced my research. Keep up the good work to rewrite DSL :)\n\nHave a good day !\n", "reactions": {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/18340397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/18340973", "body": "And thanks for the Factory tip to make custom methodes while parsing with DSL, I think this is the best of the three options.\n", "reactions": {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/18340973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "JGuillet": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/26439344", "body": "Ok, thanks for your answer. In fact I don't need the root attributes so my problem is obsolete.\n", "reactions": {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/26439344/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ghost": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/135656863", "body": "I consider using it in an Android app that needs modifications that would be uninteresting to most users and probably break backwards compatibility. A BSD/Public Domain licence would be the simplest.\n", "reactions": {"url": "https://api.github.com/repos/steveliles/dsl4xml/issues/comments/135656863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}}}}