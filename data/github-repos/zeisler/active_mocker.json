{"_default": {"1": {"maxp-edcast": {"issues": [{"url": "https://api.github.com/repos/zeisler/active_mocker/issues/117", "title": "Minitest support?", "body": "Hello, this looks like an awesome project. Our test base is incredibly slow, probably because of all the DB calls. I would like to integrate this tool, but ... we use minitest. Is it possible to use this with minitest?", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zeisler": {"issues": [{"url": "https://api.github.com/repos/zeisler/active_mocker/issues/100", "title": "Correctly Support many through", "body": "```ruby\r\nhas_many :decision_mortgages\r\nhas_many :credit_liabilities, through: :decision_mortgages\r\n```\r\n\r\nActiveMocker treats credit_liabilities as an association on the parent model and ignores the `through`.\r\n\r\nThe work around is\r\n```ruby\r\nModel.new(credit_liabilities: credit_liabilities)\r\n```\r\n\r\nIt should work like:\r\n\r\n```ruby\r\nModel.new(decision_mortgages: [DecisionMortgage.new(credit_liability: CreditLiability.create)])\r\n```", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/80", "title": "Less warnings when generating for mixed model and non model files.", "body": "Sample output\n\n``` bash\nGenerating Mocks |========================================================>>| 100%\nError Summary\nerrors: 1, warn: 5, info: 0\nFailed models: ReportParser::UnderwritingData::ApplicationRecord\n96 mock(s) out of 98 failed.\nTo see more/less detail set error_verbosity = 0, 1, 2, 3\n```\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/80/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/79", "title": "Missing schema information on a non abstract model does not fail.", "body": "", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/79/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/30", "title": "A created record that is modified persists changes without calling #save", "body": "Fix this limitation.\n\nA record that has been created and then is modified will persist changes without calling #save.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/30/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/25", "title": "Research Optimizations", "body": "Provide benchmarks of specific uses cases. \n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/25/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/21", "title": "Improve Documentation", "body": "Looking for support in documenting useful things, both in the readme and in the code. \n\nIf you find value in the project please consider giving back to the community.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/21/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commits": [{"url": "https://api.github.com/repos/zeisler/active_mocker/commits/f367217d47f6850f7a57330896953612a99f09b9", "message": "Merge pull request #116 from olleolleolle/patch-1\n\nREADME: Use SVG build badges"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/dbaf7fadf2cd52e583e2d481f368a7206f99c140", "message": "Merge pull request #115 from tiagofsilva/master\n\nFixes a couple of errors in README"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/43d67aa4e33646fd5f2e46f7596cbdb6f5d36a0b", "message": "Merge branch 'master' into master"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/487e8a4880634ba3a41868a1d2b877090d09e786", "message": "Merge pull request #114 from seanhussey/patch-1\n\nUpdate README.md"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/4c1fa700f5a5323ee049aa7ddb98fce12fc3e01d", "message": "Merge pull request #113 from zeisler/full_ordering\n\nv2.6.0"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/d68305e2e8fc3207d4fdab4df0f643ca7fb15115", "message": "v.2.6.0"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/7379a5750ef55665e787677f65444b5fb0baf59b", "message": "Now whitelist all locally defined methods as safe to copy/run within mock\nOR blacklist methods from being safe."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/4d5951694301ab53647db7575d56f0176a4fa0ad", "message": "Error message for calling stubbed methods better formats RSpec syntax for variable names."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/d9e3780e977306ad3564d6adf5d40e52367b7b18", "message": "Feature\n- Relation#order now accepts all non-SQL arguments"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/845f8b69bdf3c5d3eab4b6b1a84e403597c29959", "message": "Improved output for `rake active_mocker:build`."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/92a0315a89f57abeff164f109d2c617185f9240a", "message": "Merge pull request #112 from zeisler/has_many_scope_methods\n\nhas_and_belongs_to_many & improve stub error message"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/2bc69b5b44c0c528116484d8518e29f541ca8b9c", "message": "v2.5.4"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/bc77391b748afa2f991319ae99401db59734d1d2", "message": "has_and_belongs_to_many association did not contain scoped methods."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/3a35a75c9a2da22983de903e4c20f82c9f63c8c9", "message": "Error message when calling stubbed methods show safe_methods syntax along with RSpec syntax."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/260c8a74ae7628337eb481d8397452673a3fc311", "message": "Merge pull request #111 from zeisler/readme_change\n\nReadme Update"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/248c629fc28b7f55e6aa33b8aeb32633c3e3f525", "message": "Readme Update"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/378a155d1546abea5d7bf9acb4bae0c0f08a1c6d", "message": "v2.5.3"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/7e3783a618c8816361ef81048cbcd6c2eb3e7f7b", "message": "Merge pull request #110 from zeisler/v2.5.2\n\nv2.5.2"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/8ec219bc888409ee9af995c396d88b2a7b658028", "message": "v2.5.2"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/a563758e09660f13e96d274c3155e3b33c72d222", "message": "Merge pull request #109 from zeisler/real_class_methods_code\n\nFeature - In ActiveRecord model comment Macro `ActiveMocker.safe_methods` now allow class_methods"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/d82bd5e0e3ffd62cac74d69aaeb65337e944570e", "message": "Feature\n- In ActiveRecord model comment Macro `ActiveMocker.safe_methods` now allow class_methods\n```ruby\nActiveMocker.safe_methods(*instance_methods, scopes: [], instance_methods: [], class_methods: [])\n```"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/da0c22f07deb96abba968cc3b8814e82f63a3cba", "message": "Merge pull request #108 from zeisler/class_methods_on_scopes\n\nFeature  - Add mockable class methods to relations. Enhancement"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/4e5e9408ce8776f1a3bc2c9ee26e5824e88afc58", "message": "Feature\n- Add mockable class methods to relations.\n\nEnhancement\n- Better error message when calling mockable method. Shows RSpec syntax to stub method.\n\nRemoved\n- `ActiveMocker::MockAbilities` required by \"active_mocker/deprecated_components/mock_abilities\"\n- `mock_method('ClassName')` required by \"active_mocker/deprecated_components/rspec\" Use `active_mocker.mocks.find('ClassName')` instead"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/d2bdb0e333ad6c90ed827172a001ed0d2ad6cc73", "message": "v2.5.1 changelog"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/6efb554176465a969441a612126110ed2db5c45b", "message": "Merge pull request #107 from zeisler/active_record_5-1\n\nsupport rails 5.1"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/43ee48494ed779c4f74d13377a47cef5ef66356e", "message": "v2.5.1"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/45aaa5f4955f54af9b6e10bc85f53eb328f5e05d", "message": "support rails 5.1"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/ffe7653a7a731ba3fdb9fdcb01ef46974c6534d8", "message": "Merge pull request #105 from zeisler/bring_in_scopes\n\nFeature .safe_methods(scopes: [:method_name])"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/1b823fbb7a44a7665df7bb4c9fe62e0a596c29a3", "message": "Remove Commented out code"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/e8f022768ed2c5c0cea8cb5f5cdef714c2a18c89", "message": "Fix style"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/72bca29e681a2b6f526b2d1f5e28959d0b54c255", "message": "v.2.5.0"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/a80119417df5a131b238ea43773f0462f4a4f9e0", "message": "In comment Macro `ActiveMocker.safe_methods(*instance_methods, scopes: [], instance_methods: [])`\nNow accepts scope methods"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/8c2ccd8efd233774b65c0d321ac1124dcb7e4062", "message": "Use body method in Template"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/63376faa810ff9930a5ae5922d415be2d5f316a4", "message": "Merge pull request #104 from zeisler/scope_methods_in_nested_mocks\n\nv.2.4.4 Really fix scope methods returned `undefined method `call_mock_method' for nil:NilClass`"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/4576f099e46de9370610636452004b2f8650f62c", "message": "v.2.4.4 Really fix scope methods returned `undefined method `call_mock_method' for nil:NilClass`"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/2f3aaf675c7772440fa8e54c1b16c5b28502a1dd", "message": "Merge pull request #103 from zeisler/scope_methods_in_nested_mocks\n\nv.2.4.3 scope methods returned `undefined method `call_mock_method' for nil:NilClass` for Mocks nested in modules."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/8823f6f77ed4c59e78dcb9925c4531a8b6a8df62", "message": "v.2.4.3 scope methods returned `undefined method `call_mock_method' for nil:NilClass` for Mocks nested in modules."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/b705c1c895066eaec72e748d905319e925c0a1eb", "message": "Merge pull request #102 from zeisler/mock_version_builds\n\nAdd Comment about mock version"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/45442936efaedef2948dab7f6b1c03e4d1a34f5b", "message": "Add Comment about mock version"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/bcc8542058cfbd1ffc1fd2ff650bbcb4202619c6", "message": "V.2.4.2 semantically version mock generation separately."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/03280ca7517e5aac5d7ab31c853b1fe499b30c7d", "message": "Merge pull request #101 from zeisler/deep_dup_mutatable_object_in_attr\n\ndeep_dup class attributes"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/fa39edecc27146a8b2ec4c6d7d3f3f1830495a31", "message": "V.2.4.1"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/26558c8ab09ada7132dbfa466c29c5597aa1385d", "message": "#deep_dup attributes Hash for the case when an object it mutated it does not persist beyond that record."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/e7b1fc7ec231b350c20534c5efbe358d27062b32", "message": "Merge pull request #99 from zeisler/seperate_mock-creator\n\nExtract modules into own files for readability."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/29e042c8df586b8dfa3372856a24a4c94df3a2a6", "message": "New version test lock files"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/116acbe798e481f51262d0abb50c59ca6a2fe307", "message": "Fix formating of list"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/c0d4057085c7a0969846fa606466acfe83c08dc1", "message": "Merge Readme sections"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/b09c66fe642da8a3113c0f071cb889e2678d6ad8", "message": "Fix style violations"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/101482b70edf9e46477a3550ef375a117211a3f0", "message": "v2.4.0"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/ace2861eb1ccee361b549385d9fe4c034b5a3a05", "message": "`ActiveMocker::Base.transaction(*)` will now take any args. Note this method will not rollback if any failures it's only support the methods and runs the code in the block."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/5039f6bf54da249b90524b6d765a0d3eb6fc840b", "message": "ActiveMocker::Base.reflection\nNot fully Implemented\nReturns association reflections names with nil values\n\n```ruby\n{ \"user\" => nil, \"order\" => nil }\n```"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/e0d18407429c7755209133a0f3cddaf3aa16e3f7", "message": "When requiring \"active_mocker/rspec_helper\", and adding `active_mocker: true` to the describe metadata, these errors will be auto stubbed:\n  * ActiveRecord::RecordNotFound\n  * ActiveRecord::RecordNotUnique\n  * ActiveRecord::UnknownAttributeError\n\n To add to this list:\n\n ```ruby\n ActiveMocker::LoadedMocker::Features::STUB_ACTIVE_MOCKER_EXCEPTIONS.merge!({ \"ActiveRecord::OtherError\" => ActiveMocker::BaseError })\n ```\n\n To disable\n\n ```ruby\n active_mocker.features.disable(:stub_active_record_exceptions)\n ```"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/0075758726ae844ee115ab588c5f77577fffb8d9", "message": "Extract modules into own files for readability."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/301df50d5b11704a08f7922601f6696dcdcff4df", "message": "v2.4.0.pre5"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/0f862cb5bf90f51a9a9ddfb34a4400b8478b5a9f", "message": "Passing a single record when to collection association now causes a failure."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/5e7ff624b5e9fe640a91c2d1e3b3b69c322ed7be", "message": "Passing a single record when to collection association now causes a failure."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/90a5c5c8207283a72dd85d57d5f06022708c33f4", "message": "Merge pull request #96 from zeisler/safe_methods\n\nv.2.4.0.pre4"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/a02caddfaf0911566437a67a04d36dccc73daee8", "message": "hound warning fix"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/fc9c74cc05ed7e6ccf986ac790f1a40af27b9551", "message": "v.2.4.0.pre4"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/35f3df91a2d1902e5521e6770694727365fd4658", "message": "v.2.4.0.pre4"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/77bad07d4c0631d2d1bb9a9e7b8ba7094df925af", "message": "Merge pull request #95 from zeisler/missing_requires\n\nv2.4.0.pre3"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/6abde4ded058d08698bd85c8a0e68a364a2fc5e4", "message": "Fix hound warnings"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/184bcec42d0f6dcdbfe7fe09afe0092c9d085126", "message": "v2.4.0.pre3"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/c0dc158a74b0daf97561cb1dbb8c93d0c050c83a", "message": "Merge pull request #94 from zeisler/enum_support\n\nEnum Support"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/6ee572c42abd9627e44e2407ee343c51c3156f78", "message": "Fix hound warnings"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/39a0b16c2c71419592f2d8fb79cb8e61da4fab9e", "message": "v2.4.0.pre2"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/da2ecd5e6741dc50df9cd8a3319df19e898ce20d", "message": "Support Enums to match ActiveRecord 5 and 4 behavior\nGenerating using deferent version of ActiveRecord creates differing mock files."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/6d25dfe044532d359b355722c2a44ef3db5cf8a5", "message": "Document new instance method touch"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/943437f10709e54df1613f2cc2d8467f90b725d9", "message": "Merge pull request #92 from zeisler/timestamps\n\nOptional Features :timestamps & delete_all_before_example"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/8934bb8332fa0dc7976d6ac6fdbbaef796e70db5", "message": "v2.4.0.pre1"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/364982ed9887ed2b4ed6da6d62153e89bc6bbb0a", "message": "Fix hound violations"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/59d118bb9bdbd62e813c25417b573b0c992ce869", "message": "Enhancement\n- Option to delete all records before each example\nIt can be enabled for specific test context.\n```ruby\nbefore(:all) { active_mocker.features.enable(:delete_all_before_example) }\nafter(:all) { active_mocker.features.disable(:delete_all_before_example) }\n```\n\nOr it can be enabled as the default\n\n```ruby\nActiveMocker::LoadedMocks.features.enable(:delete_all_before_example)\n```\n\n- Option to enable timestamps\n\n```ruby\nActiveMocker::LoadedMocks.features.enable(: timestamps)\n```"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/0964293087fa1b93a1f8fb70d96258b559116f89", "message": "Move features class into own file"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/faf80b9b01e1b0b7c78788cd8a9d5941b6565fdc", "message": "Fix style violations"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/5ae39a273558e1962682060c72394f3b5d3c55de", "message": "First attempt at timestamp feature"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/ed6df6acf276a6e05b091a34fad166b945a77d33", "message": "Merge pull request #93 from zeisler/test_find_by!_error\n\nEnhancement - stub ActiveRecord::RecordNotFound with \"active_mocker/rspec_helper\""}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/515d402abdd42ddcfba2c6ac64d2249760c65919", "message": "Default to latest Rails when rails version givin"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/8fef146f99f91bfb18313cedcdcdf6622fefc5e2", "message": "v2.3.3"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/5e8dced0b226555c6814f9c0b939b60944812d08", "message": "Enhancement\n- stub ActiveRecord::RecordNotFound with \"active_mocker/rspec_helper\""}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/07daff364804ee315d69241d9a513b8b1650b080", "message": "Merge pull request #91 from zeisler/refactor-name-def\n\nMake #name available for Queries module"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/5e9b461c559d2f69f73f7d3d603dad317e9d799e", "message": "Make #name available for Queries module"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/429fdc56311453fc3e58c08863f14c3eca8ee048", "message": "Merge pull request #90 from zeisler/fix_local_tests\n\nFix local tests"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/13bb8c73b8087309994c932b85788649f597493b", "message": "Fix local tests"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/01ce4599dc285491de7be786c87f1240671967db", "message": "Merge pull request #89 from zeisler/v2.3.2\n\nv2.3.2"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/96a526c8b25c8dcf5ab8c02516ff1e0fb460833d", "message": "Revert Error log back to level 1"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/ec501f37844149896c1813a69e22d9b83c1784db", "message": "Fix typo"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/bc25f991099b2db0097bb278e0869f8f76674914", "message": "Update Verbosity level"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/879842288f386a78895e4e21e3907b806e9d9bbd", "message": "Move gems out of group"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/34053a1761812ea0e957633be28c6b7b9e77e8bb", "message": "v2.3.2"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/f9aa3725f199ae4e77efffee0854cd85d6ddeed8", "message": "Fix\n- Stop generating Mocks when table cannot be found."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/0e2b7b1a8f4ff5777892788f1ab2c0daf946ba8a", "message": "Fix\n- Fix case where parent class was not being set."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/94aee9602e0baed53bc045628112b7175a1b39b9", "message": "Merge pull request #88 from zeisler/belongs_to_create_acciation\n\nv2.3.1"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/f86b9442e81cc5c102136a9d04da41db6d5627fb", "message": "Fix style warnings"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/a87a5c9761aac3483744ec22198df09574458f5a", "message": "v2.3.1"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/2f6f87cc00bd054801da6e2b6fb44afebd7fbdd6", "message": "Add default patch config"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/eba9657c77891244a8f3774ef231316fabc4cc8f", "message": "Update codeclimate.yml"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/5c1bf692746a04c424345db52bdfa887ccccb0df", "message": "Update CodeClimate"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/ce09cb4974d413fd84d4153508aa9cb41743a5be", "message": "Merge pull request #87 from zeisler/v2.3\n\nv2.3"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/6783dcc012b4d5b10c6149ea11ae7f660edc3730", "message": "v2.3"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/71011575f8bb29f3acd6f0446aa3b7beef8bbad7", "message": "Documentation for creating custom relations"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/b72cc1e51c3a7860d2f5314b1df9c13cf9279534", "message": "Merge pull request #86 from zeisler/add_first_or_methods\n\nAdded `#first_or_create`, `#first_or_create!`, and `#first_or_initialize`"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/ea9e959e46a3529ceff60fe788316fb44f53250b", "message": "Fix Travis Test failure"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/1e9d235881f9fce5ae15628f3b8dc85178c3c116", "message": "Added `#first_or_create`, `#first_or_create!`, and `#first_or_initialize`"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/0e7e8e66917987df901f2fe68d175c045b5bef6a", "message": "Merge pull request #85 from zeisler/save-on-update\n\nPersist on update"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/2cea2bd7178ee00a114e977b652700a5f608e931", "message": "v2.2.5"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/fdd364fd4785b571776c42c0fb92c31b88a2502c", "message": "Update Change Log"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/327b6c50cfc049a6e651bfce2dadaa13a21d148c", "message": "Test and add proper documentation for `#assign_attributes`"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/c009e7c4e48f167f23b595339a061120dab1961d", "message": "Add an explicit test for save"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/9f7d2007c0f55304f39ea528fc22a091ccdc1a6c", "message": "Ensure update calls save \nAddressing the case where an object had not been saved prior"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/8f83d3d7de727e84883d722a42cee244c29450a0", "message": "Merge pull request #83 from zeisler/version-2.2.4\n\nv2.2.4"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/189ff1e7725c418ac4fee61f1e2862b4e0c1d361", "message": "v2.2.4"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/9a64baa9c908b9f6813bbb6fa87d70110aab89f6", "message": "Merge pull request #82 from zeisler/fix_issue_81_big_decimal_default\n\nFix - BigDecimal, Date, DateTime when used as defaults in the schema would cause mock generation failures."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/ce0b6cbff49fcd7fcce340dc899cd6ed85425e57", "message": "Fix\n\nBigDecimal, Date, DateTime when used as defaults in the schema would cause mock generation failures."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/e77e67cc2dd8959b13c50940075b660e06afba05", "message": "Merge pull request #78 from zeisler/test_rails_5_0_final\n\nTest against Rails 5.0 final"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/8070eec648eaba30472a5097b09c03db45a9c43a", "message": "Test against Rails 5.0 final"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/6d9758560da865d8add0afb1dc9bcc5d328ac036", "message": "Exclude paths correctly"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/cc04f357bd695b58737287ccd999cccc7ca212a4", "message": "v2.2.3"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/320d5990cd4f8a40001f8e998a9807cdf5bdf059", "message": "Merge pull request #77 from zeisler/rails-rc2\n\nTest Against latest Rails RC"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/525056eea5ab4bc4c5f5168c16d60b2ac30c536b", "message": "Merge pull request #76 from zeisler/issue-72\n\nFix: Constant values assigned to non sudo primitives objects https://github.com/zeisler/active_mocker/issues/72"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/4ac93767c036f3fbf98afc030ab72b6112382066", "message": "Test Against latest Rails RC"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/6033a8d76cdde85570473f3ceb9060a4fadd75f9", "message": "Fix: Constant values assigned to non sudo primitives objects\nhttps://github.com/zeisler/active_mocker/issues/72"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/dae165d18d7ae4cf953a48840e1bbe1efe1a84f1", "message": "Merge pull request #74 from zeisler/fix-appraisal\n\nRemove Rails 4.0 for Local dev"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/4a4a2becbb4a5ad45cb884c93e868951576efd67", "message": "Remove Rails 4.0 for Local dev"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/13099a5159ce9899002be022ce5a891a4b534dc7", "message": "Merge pull request #73 from zeisler/add_rails_5_testing\n\nAdd Rails 5 testing"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/c6eac94bcf45d6269597621a3bd24d92f01b1b45", "message": "Update ActiveMocker Gem Version check"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/4c27506574c79a828ef2804cb27c89c738e08973", "message": "Update ReadMe - Listed tested Rails Versions"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/019f1e161b500e8411d00beae137d3f24819a7bd", "message": "Rails 5 does not support ruby 2.1.x"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/ad82bd2a6a8958fe5d0aad2995a91e58f492af9b", "message": "Test rails 5 in TravisCi\nRemove Rails 4.0"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/e138d96aaee004db0f9350379bbc9b6f8e5d00ef", "message": "Add Rails 5 testing"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/3330e9eb0a28ef3a191b8b3f9e955c5204b1f1cf", "message": "Update CodeClimate"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/2916da0e9a11e94feee6d1811c924133b79996e7", "message": "Merge pull request #71 from zeisler/code_climate_code_coverage\n\nAdd code climate code coverage"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/6aee1dde92695e0e1142f5be053f9a378effaf2e", "message": "Add code climate code coverage"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/3e66a49e91e0ab9da2daf3a1dc4e118ac9ec200d", "message": "Merge pull request #70 from zeisler/less_strict_activesupport\n\nEnhancement - Reduce activesupport version requirement for compatibility with version 5."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/f9966e5f41db37bf854dda6b2976957a04b4046f", "message": "### Enhancement\n- Reduce activesupport version requirement for compatibility with version 5."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/4b652fc37068496ee633d2d075af0c26a09dfe07", "message": "v2.2.2 changelog"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/ea4dba25f3ec569e26b5d746117aacaff3230682", "message": "Merge pull request #69 from zeisler/v2.2.2\n\nv2.2.2"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/d1a26a39be3a7fe4e17fd9a508de6737b006f701", "message": "v2.2.2"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/75640c9ab281b62748ec60e776880624e3e8627e", "message": "Merge pull request #68 from zeisler/subclassed_mock_not_getting_auto_stubbed\n\nFix - When using \"active_mocker/rspec_helper\" with active_mocker:true tag, subclassed mocks were not getting auto stubbed."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/0bea96def8d18644faecb854cbab2908170c0e58", "message": "Remove extra space"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/fe18c515a08d24bc5a0ad98b4890eef3aad0da15", "message": "Merge pull request #67 from zeisler/require_colorize\n\nrequire colorize https://github.com/zeisler/active_mocker/issues/65"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/caa62261ff3769a5e254483bf1a05200a95415a6", "message": "Fix test to user ancestors method\nFix model string name sent to active_mocker.find()"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/e553b384370bf2d55749ada26cbbe5c7735a438e", "message": "### Fix\n- When using \"active_mocker/rspec_helper\" with active_mocker:true tag, subclassed mocks were not getting auto stubbed."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/8499532cceed265b5e46f00ddbd7af3ed0d1bbca", "message": "Merge pull request #64 from notonthehighstreet/reduce_complexity\n\nReduce complexity"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/c00e8156299b6605cdc1cfd1d604c0484e36d564", "message": "require colorize\nhttps://github.com/zeisler/active_mocker/issues/65"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/6cd52e79cab788aaae236e688c7ead5f93af5b05", "message": "Merge pull request #63 from zeisler/colorize_fix\n\nColorize NoMethodError Fix"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/0046cc477a6a60246f3d5d17e57b120a56d51112", "message": "v2.2.1"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/faff4e211330bca572bdcd5265aac750051e33af", "message": "Remove hack for String#colorize that would cause the error: \"NoMethodError: super: no superclass method `colorize' for #<String>\""}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/a9fe9d637ea34c9efc3386dd9fbf18cdb7c6a28c", "message": "v2.2.0"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/39b9381f8151df0f62554eb590649a874588470b", "message": "Update CHANGELOG for next version"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/99e2092c654f1bc9d3823303ebb7222c428d3d87", "message": "Merge pull request #62 from zeisler/fully_defined_included_modules\n\nFix - When an include/extended module is not locally defined, but defined in the same namespace as the mock it was not correctly namespaced"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/77411cb978f7479d86f4410dc09e1e19407d7e23", "message": "Style fixes"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/24f60da99e973fd3203682d61bbf4ff8bc074a7c", "message": "## Fix\n- When an include/extended module is not locally defined, but defined in the same namespace as the mock it was not correctly namespaced."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/17d86eede469ea2204693b0a533c0d8765422a4b", "message": "Merge pull request #61 from zeisler/alias_attribute\n\nFeature - Import alias_attribute usage to mock  - With supporting methods `attribute_alias?(name)` and `attribute_alias(name)`"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/b7737f8e0520aaefb066a132e39e3d9b827ac040", "message": "style fixes"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/1156bb780f3689622408cf49f265ca68762c9281", "message": "Use alias_method instead of manual method calls"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/8c9e89731355d55868c57e5a7b67b62ba939e89a", "message": "Feature\n- Import alias_attribute usage to mock\n - With supporting methods `attribute_alias?(name)` and `attribute_alias(name)`"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/214dca2afd81c2b35f2fd0ffd4ae8df976c58400", "message": "Merge pull request #50 from notonthehighstreet/ignore_non_active_record_subclasses\n\nIgnore non active record subclasses"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/f34fe13eda1d2d61d440baca35aa6b4dd1c0a28a", "message": "Merge pull request #59 from zeisler/update_ruby_test_versions\n\nUpdate travis test version to latest ruby versions"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/bba1238af118ec43c663fdbcb9c39732a0d9eb42", "message": "Update travis test version to latest ruby versions"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/0f83836c3e05bd1d0ad609862fe007f4350aef57", "message": "Add documentation for Mock.slice"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/9731760936ed763bc881763fadd700783e5723d4", "message": "Merge pull request #51 from notonthehighstreet/rubocop\n\nRubocop"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/fec07efe1650f36c44f7b795225a4cbd4faeaa80", "message": "Merge pull request #57 from zeisler/make_rails_5_work\n\nRails 5.beta.x error"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/76033114a7481e8a90cdbbc0ecb63753abe05316", "message": "Enhancement\n- Fix issue NoMethodError in Rails 5.beta when introspection activerecord model."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/1372a8c8ae53c50d03853245c661866d2cbe8ccf", "message": "Merge pull request #43 from markburns/patch-1\n\nMake rake dependency less strict"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/1e57b5ab88e87cb93f4edb2609b340e886b1eeba", "message": "Add #slice"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/6c1aa184c04016da9fea6904c92752184603c3ee", "message": "Merge pull request #41 from zeisler/add_slice_method\n\nFeature - Add ActiveMocker::Mock#slice"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/faf74585ffa5b80fde20374d6abbe39493904f56", "message": "## Feature\n- Add ActiveMocker::Mock#slice"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/204e6c4d8527608bc64173217c449de224fbc4f8", "message": "v2.1.3"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/87c05e8a9a4ff443274bffa01d6179fe016ce9a5", "message": "Merge pull request #40 from zeisler/fix_auto_stubb_namespaced_mockes\n\nFix - Issue where namespaced mocks would not be auto stubbed."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/f0fc4acad79b506b8f62b98df84f69aa7a574435", "message": "Fix\n- Issue where namespaced mocks would not be auto stubbed."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/e2a3023c6271d3658a653af792eff4a910880403", "message": "Merge pull request #37 from zeisler/update_params_gem\n\nWhen method or scopes defined on the model took an explicit block ie. `&block` it would cause an error."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/79da98cd34929862274a7d6c80260095dafb71ea", "message": "Update other test rails gemfiles"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/552f19d5694d96c78784a0a511a212ca6ef7b427", "message": "freeze version string"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/ca2898bbf2a1fc400813a96af404cb5ef2894aed", "message": "v2.1.2"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/2880a140cb204245f6adaba0b66f78b537ae4cef", "message": "Fix: When method or scopes defined on the model took an explicit block ie. `&block` it would cause an error."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/ad53aac9e1475b560cfd6ad6447e24dcb6bdb87c", "message": "update gemfiles latest gem version"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/18ef91545317ad39cd014dded69670803d35302e", "message": "Version 2.1.1"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/18c96991b81b55fd4b2595cca370256ddc3ae891", "message": "Merge pull request #36 from zeisler/issue-35\n\nhttps://github.com/zeisler/active_mocker/issues/35"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/52a9797ae56cd5211163b3c9f8b7eac9a9440c07", "message": "style changes"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/f6d6e337200d4f17d3f6488f5d05ff69723c9f31", "message": "https://github.com/zeisler/active_mocker/issues/35"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/8e7a53e7837558790ad77343a1e31d4272a38c57", "message": "Address regression https://github.com/zeisler/active_mocker/issues/35"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/68147b2044e647f16b6f110a0707284a0d50f6a8", "message": "Update for version 2.1"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/e6cd3de39a7f78118307b24cb2885a9ed0a1c7d6", "message": "Add travis settings"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/65496d0bf804ef779db588558ea15435bfe7dd54", "message": "Merge pull request #34 from zeisler/revert_debugging_for_travis\n\nReverting changes to debug travis failure"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/cdc9ca98d0bc35804f602ecf51e5a5bb65d1357c", "message": "Reverting changes to debug travis failure"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/f5159063b5ba86a96f2b514d9c293bd1d02890d7", "message": "sort methods so that rubies order in the same way"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/cbd696b86eb48b09bfb0794f9746b6d14916ecaa", "message": "Fix spelling"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/0cd4bfc5d94966d10ba3885338f505b2cb5ac112", "message": "Add Customers to schema.rb"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/85202f014a02f3fc00dc58e9cc9798e191850f93", "message": "Diagnositic for travis failure part 6"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/aded565448a46c55f4570f1a7a3cabff96ebc8ec", "message": "Diagnositic for travis failure part 5"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/5beb91150eea606f152527364b9e1f84c5ecaf7a", "message": "Diagnositic for travis failure part 5"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/dbafc6c2bb0a12be68e05adcceec8649dbea9dcc", "message": "Diagnositic for travis failure part 4"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/b328fedd9f2fc1bb4f110ea1e6daa629502b7350", "message": "Diagnositic for travis failure part 3"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/644d40af4cf4a18596466bd21cb481eff71d1e75", "message": "Diagnositic for travis failure part 2"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/1f805d90513bf79eee97e27f9f4b67b8fb165882", "message": "Diagnositic for travis failure."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/f04396797b730823a38433d748f159e710dfaaca", "message": "Create mock dir for specific mock before file open"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/c53bf2fa2851974d247d81bb9218a72c607f069b", "message": "Consolidation of test setup"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/76110417b94f2f5c9b2669911e8216379f4402a0", "message": "Fix travis"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/cefcb7d6b9fe2f29105f1bac9412761875f39e80", "message": "Additions for v2.1"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/55540681ecc511c06a67c95b5a858de9d4c66726", "message": "Mocks will be ignored by default"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/2a51904dd0820894848b826b993ae5d92756a444", "message": "Run expected ruby code through parsing to remove any formatting differences."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/232182944f246fd1d53abd68644242fa9f49fadc", "message": "Start testing ruby 2.3"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/f02da7f8eae9c41b5c5f397088612db05a85b19c", "message": "Version Mocks 2.0"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/0772ab45d4e95bb570da018d0651c59108d4603e", "message": "Add Test to make sure test gem files have current gem version to save travis from failing."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/2fa9398cab62e36dfc8754b06c805112596e333f", "message": "Update Gemlocks"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/b6a1431314b2d22895239ba82d0ffc67ed59bb64", "message": "Be resilient without colorize or ruby-progressbar"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/a5ba1f43747c6f9450e9c2fe0179ff1c6b2258cc", "message": "Update Readme"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/9a952ae772990713d5d1254de8f494d4b9c5f3e5", "message": "Version 2.0.0"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/489dfcd045aaad8ff00dca5514562348fc342e07", "message": "Version 2.0.0.rc1"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/a7999a74bd7f07fc2f579f72f85b2364b1049eea", "message": "Reverting changes"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/7b81221bd37aca5303f52705db364a8c75fbbeae", "message": "Refactor class"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/81eb435f2db637c016f784797e6c17b008c04a60", "message": "Make sure that the creator generates no error while running the test."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/2de077b04827fb4f190580acc850a74f78229a70", "message": "Update Readme about primary key limitation"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/607367ce33ef317b2e427c8893bc5551ba3c60d0", "message": "Refactorings\nIf error was not already collected it will raise an error and fail the mock"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/8d6b85797ce6538d1baee4547e1f5f756fac1c00", "message": "Add some ACSI art"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/aaa79aacb414f0280655875b8e1963da7d028cda", "message": "* Mock will fail if attributes has failure"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/5a498d16faa58efecdc6e0b7ff532a75702db03d", "message": "Add rake test, it remove the setup step"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/7a5746d12384fa6d4901a2fc270a385a636d8842", "message": "Enhancement when a model fails list out those models"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/e56e0f6269eccf3cf8a7ed0104f5a31c45e538be", "message": "Remove Mock namespeace"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/37fecc0d26100fa862f7c38a88544953c554662e", "message": "Version 2.0.0.pre1"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/754a8a934dccaa63002fb0756963df2994b5f605", "message": "Fix case where id is not a fixnum and make it match ActiveRecord"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/64c4acce2c3ef732fd052eaa82156c4a23b6f095", "message": "Delete unused exceptions"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/cc667582ce2c1004312d6b5325e3834797c83e2a", "message": "Make some constants backwards compatible to easy upgradability."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/1de96a03d3e3ec92f9042c8cab62b01858aca9f5", "message": "Fix MockAbilities require to work"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/e9c6795f392d1a0e395ed189de5a7c34bfb0e4d6", "message": "Add summary of types of errors"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/fcf41291377d22bd5ac842346a10d2b2092a98ea", "message": "Enhancement\nerror_verbosity now has setting for 0 to 3"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/e701fc748d92caecbc9372fb6e6cc98a6dbed137", "message": "Update Docs"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/d7e022ed949d66e39d20c0f3ddad080ae96cb71c", "message": "Use RSpec verified doubles"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/61456d06e10731de34ec1e89432f2b2fc83913fb", "message": "Update readme"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/9e2c6e4397ab580d924f67ee173291f957a3709c", "message": "Update dependency and add colorize"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/3a8e8be851dd695f4e82161a648bf2d4445ca34e", "message": "Update ReadMe for version 2.0"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/3921c07adbbd7d122eae69ff0dce75f23ccc2a49", "message": "Moved ActiveMocker::MockAbilities into \"active_mocker/deprecated_components/mock_abilities\" if a project is still dependent on it this file it can be required and used at least until version 2.1. The alternative is to use `RSpec` verified doubles.\n`#mock_class(\"Mock\")` method has been moved to \"active_mocker/deprecated_components/rspec_helper\"  if a project is still dependent on it this file it can be required and used at least until version 2.1. The alternative is to use the new api that is accessible by `#active_mocker`."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/68afab491b8fd7f4f3eff1e97009d7638d58a96f", "message": "Fix a random failure"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/72e4ca36b087ef53bbc7ececdc86d25df9aed66a", "message": "Remove Mock NameSpace"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/4fa74dc48c6cbff0b7acb5e331368db3c68588a7", "message": "Require missing file"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/bd4bdb978997e65099b9f7b46fd88e319301caa1", "message": "Update gem file and local test process"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/c349a7729a3b7038f3f0e5799ae2db749869770c", "message": "Change private method #new_relation to #__new_relation__\nProvide API to access using ActiveMocker::Mock::MockRelation(mock, collection) to create separate independent mock collections."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/db42dff8e342cff9fb450d14beb07cd064663462", "message": "Enhancement\n\tThe mock append name is now changabe using `ActiveMocker::Config.mock_append_name=`. The default still being `Mock`.\nRefactoring\n\tCreate an error object in the hopes of creating more fine detail error reporting."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/86115f434924e2906bc6f3e4d80db1d7c5b672db", "message": "Reduce Virtus version & require rubygems in main file."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/1396fb52a2c998a9ebfbfd8d1782de1811c6df42", "message": "Update change log"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/a0a97683f3df5cb812b5589b1c2d74648b0a6e65", "message": "Update Email and description"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/1c11e439fa0ca50f29dd3dd804e8fb3379fd6af4", "message": "- Much better support for Single Table Inheritance."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/fa70dfd80d3eb95b08296909b7ec13f1337fa2a4", "message": "Lessen restriction on Virtus gem"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/11a6aaba96778f41cacf0df3ddaa1dfaf776f3a8", "message": "Update change log"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/ecaed6686f75ab0159c17ec9d0cb813c602aefb1", "message": "Add gems needed to run rake locally"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/a1df411d81a6e7302fe53864b667e27e002a3f8d", "message": "Remove raise"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/f33124a05d8408bd0f1b67ee336e8beab96a43f0", "message": "The test need a database to work. Who would of thought?"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/57553cee2787159e9f86cc461a84ae33e6b4e02c", "message": "Increase Error details"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/9161d9c5d4e59080280c2540c580efc5d3f6d49e", "message": "fix gem file path names"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/8ea273f9d57bc0c462d4c10306aebfac6b02d0f6", "message": "Update Gem try again"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/bc3c830834b1efbd5fbfc30a257598c9c1d64a54", "message": "Fix path name. Cross fingers."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/526d4caab1eed9a2d5af69f1ad86159b058fb9c1", "message": "update bundler version"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/3aaa5eadae52e4c5a9d53a2bd9e729393afaaafc", "message": "update bundler version"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/07951e0a83869d7469614e71c838da1e724a8035", "message": "Remove bundle exec for Travis"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/bc9c36f23a0efb87b20c59412ad630d35980ce13", "message": "Remove unneeded gem"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/ec72ef4974935ae5a416b62200d1fc05c0e99aa1", "message": "Update rspec to 3.4"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/19fe89f4fc22495e5b2a6aed2a2f5cb2cb6a93c6", "message": "Remove optional developmental gems"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/726e4dc14654d6340f2b6073d6ecc4dc034ef6ac", "message": "remove s"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/7618cedde2fd49a148f2ddf903c8b7e377e84cc7", "message": "Fix path to gemfiles"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/6ea2056cfa6301dc29329e8625abe76b5ea6c7a6", "message": "Try a different approach for Travis"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/34b17f9b09d5981a93eea7e7eb890b5601588194", "message": "Use correct naming for beta version"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/df47cdff15ac5caa0d7bbb6963ab5821706f37e2", "message": "Remove 2.0 notice and update description."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/a1331fb74d23bf5e666616d072a24b26dbe5e038", "message": "Merge branch 'master' into 2.0"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/22e6c6559b268de5bbe9ae4e6ff36719b4d6360d", "message": "Add note on how to disable module inclusion"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/e93c837b8820108333fbd2a0232376b38883b9f7", "message": "Remove .idea files"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/8715ce4d8da3a2d8c5eced2a94fdb0ab1dc79753", "message": "Version Beta1"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/d33e95bc0915f3ebc72ac834c0d55a9ffbbdb0cd", "message": "Version 2.0 Notice"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/44cb7fcfc43cffb2146057de3847725dba556d6a", "message": "Fix RSpec warnings"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/be491eea5dbd092c388da91cd6ebadf7d80ae553", "message": "rake task refactors"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/ea51f6b15b04573516d9710b4d9d655253313341", "message": "Move testing rake test into test_rails_4_app"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/0bf24ecc41f02f851fa7e2952ea37353ce27dac4", "message": "Refactor spec runners"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/6729d74468188d176c67b10c83de566ee19cadc7", "message": "Cheffile"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/94baa5cc2c819b2d05fe9fff709d999e2165225d", "message": "vagrant script"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/332cc31da6cc36c6edfc37fcf43664da67f1dc52", "message": "update mocks with new version number"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/973db793d0da6a81a8e670c7a162389d307ff5e6", "message": "clean up gemfiles"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/0cb66f56be9418f3a1752167d325c12eff084101", "message": "This is need to get vagrant setup"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/5d61ba25a016c2d7c2b57a0195c7966f145e8da4", "message": "This is only a dependancy of the test rails project"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/3fd3a588d1a1b77bca1636913f3119a3d05280e1", "message": "It will load even if gem dir is not active_mocker"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/18ab249d22df76de3eb3b46164064b276b4d7170", "message": "Delete tasks because they should be load through the gem."}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/14fe94244680ecc3995dc2f8e5c3bf13bd5b449d", "message": "update gemfiles"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/46893393", "body": "This has been fix on master. The block is now defaulted to be scoped it it's creation place. If the old functionality is needed use:\n\n```\n User.mock_instance_method(:display_name, true){ display_name }\n```\n\nPassing true as the second argument will bind it the self of the caller. This is useful in the case where you need reference to methods on the class like calling `where(condition)`.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/46893393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/46893620", "body": "Currently testing feature, see branch [scope_module](https://github.com/zeisler/active_mocker/tree/scope_module).\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/46893620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/49964430", "body": "This feature has been completed and released as gem version 1.5.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/49964430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51069654", "body": "I don't use factory_girl when I develop but I know a lot of people do, so I would be open to seeing what it takes to be compatible with it. Have you tried it and if so did you get any errors back? \n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51069654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51138911", "body": "I can not reproduce my own issue and with several cases in a rails app setting of a has_one association all worked.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51138911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51259294", "body": "Thanks for the pull request. Even though the active_mocker doesn't get a very good score it will encourage me to push the amount of documentation up. Also I think a lot of things need to be marked with @api private.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51259294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51281438", "body": "I pushed up a fix that is on master and 1.6 branch test it out and see if it works for you.\ngem 'active_mocker', :github => \"zeisler/active_mocker\", :branch => \"1.6\"\nhttps://github.com/zeisler/active_mocker/blob/1.6/lib/active_mocker/model_schema/generate.rb\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51281438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51337437", "body": "Thanks for catching that. \n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51337437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51361607", "body": "Added test case for this issue. Let me know if there are any other issues.\n\nhttps://github.com/zeisler/active_mocker/commit/cb09760c85718463b884ae02fb48366ebd067bd5\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51361607/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51381519", "body": "I looked a this a little and was not able to come up with a solution. I would like mocks generation to soft fail and continue with the rests of the mocks so any issue like this would not be a blockers. Your welcome to take a look and see if you can find a solution. My guess is that the parent model is not loaded with child model making it so the active record methods are not there and this case is being masked in some way. \n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51381519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51416900", "body": "Your suggestion as sounds good to me, your welcome to have a go at it, otherwise I won't be able to work on for a couple of days.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51416900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51671168", "body": "I just did a spike on this and it seem Rails is some how loading the parent class. Originally ActiveMocker would dynamically create mocks for units tests, but I optimized it with a static ruby file. So Rails could not be loaded, but now there is no reason it couldn't be loaded for the generation of the mocks. The only thing is that it would take a little refactoring to swap out the APIs. It could also be a little slower, but I don't think by much, also the complexity would be reduced.  Also there are future benefits of having more advanced association if it does hook to ActiveRecord. If there is a simple fix lets just keep it the same, but if not the refactor will need to be done.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51671168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51808382", "body": "I have test version on this branch to try out [model_reader_to_ar](https://github.com/zeisler/active_mocker/tree/model_reader_to_ar). All High level tests are passing but many unit tests are still failing. In some cases of more complex associations foreign keys and classes are now correct because it is connected to active record. \n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51808382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51815121", "body": "I found the same thing to be true. I wonder if there is a way to stop rails from auto-loading the parent class. Stepping through the debugger it just jumps right to the parent class.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51815121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51818058", "body": "I mean to stop rails from auto-loading classes in that instance. So scenario 1 would be the same as scenario 2, but yes ultimately stoping the parent from loading would cause an `uninitialized constant` error and keep ActiveRecord::Base from loading.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51818058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51830772", "body": "Yes your are right, I just mean that the parent must be loaded manually so\nit can be sandboxed with in `ActiveMocker::ActiveRecord::Base`. Sorry if I\nam being confusing.\n\nOn Mon, Aug 11, 2014 at 12:12 PM, Josh Leitzel notifications@github.com\nwrote:\n\n> Well then the problem becomes that the mock for Child will be incomplete\n> when there are things defined on Parent that Child should be inheriting.\n> Also think about things like concerns. If Child includes a concern, that\n> concern might define associations, validations, etc that the Child mock\n> should know about.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zeisler/active_mocker/issues/10#issuecomment-51826293\n> .\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51830772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51843682", "body": "The project really does both, it work as a replacement in a test for some things like attributes and associations, but methods on the model need to be stubbed. Those methods are on the mock as a form of contract holding the method's name and argument list. Using Rspec 3's [verifying-doubles](https://relishapp.com/rspec/rspec-mocks/docs/verifying-doubles) to stub will enforce the contract so the  mock is being interfaced with correctly.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51843682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51955837", "body": "I pushed up warning that single table inheritance is not supported yet. This should allow the mock generation to continue by skipping that model for now.\n\nhttps://github.com/zeisler/active_mocker/commit/084ff529658b226b853966719fa2dc6c2faf1403\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51955837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/52193474", "body": "Test this out with your project. [08e266f](https://github.com/zeisler/active_mocker/commit/08e266f73576c786cf867a2eafb99b96e14ab314). If there are no problems found I'll push out a new version at the end of the week.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/52193474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/52267491", "body": "Version 1.6.3 should resolve this issue.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/52267491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/52341296", "body": "I was unaware of that being a use case. With the changes I have made that should not be a very difficult fix.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/52341296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/52342501", "body": "Does your `ApplicationModel`ultimately inherit form ActiveRecord?\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/52342501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/52645696", "body": "Closing this and open a new issue for the non standard base class.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/52645696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/52647040", "body": "After thinking about this I am not going to continue with this approach. I am going to have it copy the collection and add a Singleton method to limit what attributes that can be accessed. \n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/52647040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/53977773", "body": "Thank you for your detail and examples it's very helpful.\n\nTo address the `pseudo-models` I can't see the use case for creating mocks out of those classes. It looks like those type of model could be used in units tests. Maybe there is something I am not considering, at a minimum it should pass over the models and ignore them.\n\nI agree with your last example in preserving the object hierarchy. I think this is a much better design and would like to go forward with it. This will take some reworking of things, but I don't see any technical barriers l like I had with the last change (having to use ruby parse and unparse to modify the source code before eval). Where I am employed I would like to refactor some of our models to use STI, so I will have some real use cases to work from.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/53977773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/53977881", "body": "Also when setting `model_base_classes` the default setting have not been loaded yet, so it breaks. You can try adding `require 'active_mocker/railtie'` to the top of `config/initializers/active_mocker.rb` but it will it need some refining.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/53977881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/54409906", "body": "Test out the latest commit https://github.com/zeisler/active_mocker/commit/0ba96c759be6c078ececeef9d74050c4f11c38e1. All feature should be working let me know if not.\n\nUse `gem 'active_mocker', github: 'zeisler/active_mocker'`\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/54409906/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/54725620", "body": "Released 1.7.beta1\ngem 'active_mocker', '~>1.7.beta1'\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/54725620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/59076724", "body": "Fixed with release of 1.7\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/59076724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/61288474", "body": "if you use factory_girl and not factory_girl_rails it works great\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/61288474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/76574986", "body": "This is not good, I am sorry that this happened. I would of gotten to it sooner, but I am in the middle of a move and didn't see it. I will make a patch asap.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/76574986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/76626325", "body": "With these commit I have put in several guards to keep this from ever happening again. https://github.com/zeisler/active_mocker/commit/86fb8bd129342e113f6fd1f0b295c5053170cfec https://github.com/zeisler/active_mocker/commit/db728d0d32b3b94c45770216d4f269f8a93aa378\n\nThis has been fixed by raising an error if mock_dir is not set. Also, it will never delete any directories, only files that match `*_mock.rb`.\n\nReleasing version 1.8.2 shortly. Due to the severity of this issue it highly recommended that everyone upgrade. \n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/76626325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/76630548", "body": "After testing this in a virtual machine I found it can only happen if you're running as root. So to make this happen you have to run as root and not have Rails in your gemfile. I would recommend only running as root when absolutely necessary as a general rule in Unix. Neverless the issue is fixed and will not happen no matter if your are running as root or not.\n\nRepeatable Test Steps\nDO NOT TRY ON YOUR PERSONAL COMPUTER!\n\n``` ruby\n$ sudo irb\nirb(main):002:0> require 'fileutils'\n=> true\nirb(main):003:0> FileUtils.rm_rf(\"#{nil}/\")\n```\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/76630548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/76732558", "body": "Again I apologize for this happening, it's a complete over sight in my part. Hopefully you had backups. \n\nIf you find that ActiveMocker brings value to you consider contributing. There are places that need documentation, feature request, code clean up and optimizations that would all be welcome. \n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/76732558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/99553308", "body": "I'm sorry your having this problem. Currently active mocker is dependent on the schema.rb. One way around that I think that may work would be just to get the information from each ActiveRecord models This would take some time to do and I would be open to a pull request for this feature.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/99553308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/104981703", "body": "After some consideration I would like to remove the schema.rb dependency for version 2.0.0. I am setting a goal to release version 2 in 3-6 months.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/104981703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/133067350", "body": "I'm curious how your experience is using this gem on a non rails app.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/133067350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/153460500", "body": "Can you provide an example?\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/153460500/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/153461097", "body": "Are you using db/structure.sql? If so I am working on version 2.0 so that it will not require the schema.rb. I don't have know when it will be done, but I'm working hard on it. \n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/153461097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/161188510", "body": "I am happy to announce version 2.0.0.beta1. No schema.rb file required. [rubygems](https://rubygems.org/gems/active_mocker/versions/2.0.0.beta1)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/161188510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/161189029", "body": "New DB types can be registered with this API.\n\n[active_record_schema_scrapper/attributes.rb](https://github.com/zeisler/active_record_schema_scrapper/blob/master/lib/active_record_schema_scrapper/attributes.rb)\n\n``` ruby\nActiveRecordSchemaScrapper::Attribute.register_type(name: :array, klass: Array)\n```\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/161189029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/161189184", "body": "I don't know how to reproduce this. If you can provide the code of the line where it's failing I will reopen the issue.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/161189184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/165297761", "body": "Thanks for letting me know that you need it. I will prioritize it higher.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/165297761/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/171051936", "body": "@krimsonkla can you send me your `access_token_mock.rb` file. What version of active_mocker are you using?\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/171051936/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/174212538", "body": "If you can provide more information I'd be glad to reopen this issue.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/174212538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/174212682", "body": "@semikolon if you use `gem \"active_mocker\", github: \"zeisler/active_mocker\"` you can try out this feature. I am not able to release a new version yet because of some environment differences in Travis that cause the build to fail. \n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/174212682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/181651177", "body": "it's released: https://rubygems.org/gems/active_mocker/versions/2.1.0\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/181651177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/214555493", "body": "Are you asking to be able to generate mocks from a custom path? That can be set by `ActiveMocker::Config.model_dir=\"app/models/some/path/to/**/*.rb\"`\n\nOR\n\nFrom rake:\n`MODEL_DIR=\"app/models/some/path/to/my_model.rb\" rake active_mocker:build`\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/214555493/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/214560244", "body": "@markburns and @tonyxyz what version of active_mocker are you using?\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/214560244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/214611550", "body": "active_mocker v1.7.3 came out Dec 1, 2014. Migrating your project to v2.1.x should fix your issue since the generation engine has been completely rewritten. I will accept the change to reduce the rake dependancy and that will most likely be v2.1.4  \n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/214611550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/214754440", "body": "Can isolate this down to the minimum ActiveRecord model code that causes the issue?\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/214754440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/214756277", "body": "This was mostly just for debugging and I made the assumption that the model_dir would only contain ActiveRecord models. I could add a flag to ignore such cases. \n\nIn my past projects I would put classes as you are mentioning in the lib directory. \n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/214756277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215142167", "body": "I think the bast way to deal with this is to only have these show up when in debug mode and they should not count as a failure. Since this is not a blocking issue and only a nice to have I'm going to prioritize less than the other issues you've have raised.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215142167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215450001", "body": "I've deleted all the style violations about line length.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215450001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215619310", "body": "Thank you for your pull request. I will have time to review it this weekend. \n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215619310/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 1, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215888767", "body": "I agree this is not very clear. I will work to clarify it in the future. This is how it is done.\n\n`ERROR_VERBOSITY=3 rake active_mocker:build`\n\nAnd it also documented here:\n\nhttps://github.com/zeisler/active_mocker/blob/master/lib/active_mocker/public_methods.rb#L7\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215888767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215893642", "body": "puts this in config/initializers/active_mocker.rb\n\n`ActiveRecordSchemaScrapper::Attributes.register_type(name: :jsonb, klass: Hash)`\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215893642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215893937", "body": "This is a current PR open for this.\n\nhttps://github.com/zeisler/active_mocker/pull/43\n\nI expect resolution by within the next day or so.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215893937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215895783", "body": "I did not map out every possible DB type to the Ruby type. `klass:` refers to `Class` \n\nSo `klass:` can be any Ruby type or a Virtus::Attribute\nhttps://github.com/solnic/virtus#custom-coercions\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215895783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215895888", "body": "for rails\n\nconfig/initializers/active_mocker.rb\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215895888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215900056", "body": "Any included modules are assumed to be mock compatible code if is not then you may need to disable that feature with this line.\n`ActiveMocker::Config.disable_modules_and_constants = true`\n\nIt seem like you are having a more specific issue, I will look into to it, but for now that line should get you past the error.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215900056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215901470", "body": "I failed to mention that you need to run `rake active_mocker:build` again after adding that to config/initailizers/active_mocker.rb\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215901470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215911384", "body": "If you run the rake command you should get some additional Gemfile.lock files for the test rails app. That may fix the broken spec issue.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215911384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215911559", "body": "Once my comments as addressed I would gladly merge. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215911559/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216003186", "body": "I'd prefer to only test the latest on every 2.x version. ie 2.1.8, 2.2.5, 2.3.1\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216003186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216003218", "body": "Fixed with https://github.com/zeisler/active_mocker/pull/43\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216003218/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216003260", "body": "@markburns It needs manually rebase off of master.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216003260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216003734", "body": "Thanks for the repo steps. The change will need to be made in [dissociated_introspection](https://github.com/zeisler/dissociated_introspection). This should not be a difficult change.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216003734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216004067", "body": "This is known limitation of active_mocker. To add this feature it would take adjustments in the generation code as well the in-memory query engine. If you like assist with the process what would make things move faster would a PR with all the needed models and a failing testing in [active_record_compatible_api.rb](https://github.com/zeisler/active_mocker/blob/master/test_rails_4_app/spec/active_record_compatible_api.rb)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216004067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216004443", "body": "This will also most likely be a change in [dissociated_introspection](https://github.com/zeisler/dissociated_introspection). I think the best approach to this would be to ignore unknown methods like these, by using method_missing or some other means.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216004443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216004743", "body": "The solution here is make all modules fully specify there namespace. These changes will take place in both/either https://github.com/zeisler/active_mocker/blob/master/lib/active_mocker/mock_creator.rb or https://github.com/zeisler/dissociated_introspection.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216004743/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216004789", "body": "The error message should be changed to reflect this to make it easier for the next person.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216004789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216005405", "body": "ActiveMocker does no auto loading . It made to be as fast as possible so you require the things that you need to keep it that way.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216005405/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216016699", "body": "@fatuhoku It may work just work with `factory_girl_rails`. I suggested plain `factory_girl` only because I like to run my active_mocker tests without the rails framework loaded, to increase it's speed, but there's nothing keeping you from loading it and using `factory_girl_rails`. Again I don't use factory_girl and don't plan to provide any special support for it, but there's reason why it shouldn't work.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216016699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216016835", "body": "The reason this is happening is because in dissociated_introspection the module inclusion is being done in complete isolation without any context of where things are defined. There is no good reason to keep doing it that way, I should be able to compare the dissociated_introspection class version and the real model to determine the full name of included modules.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216016835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216045462", "body": "There are two explicit phases of ActiveMocker the generation phase and running of the mocks phase. For the generation phase rails is loaded, it's necessary to get the schema information, because not everyone has a schema.rb. The purpose of dissociated_introspection is because of the difficulty to know what methods are user defined and what are ActiveRecord defined, through meta programming. So removing ActiveRecord from the picture is what dissociated_introspection does. The reason I think it may be necessary to use dissociated_introspection version of module inclusion is because ActiveRecord may include any number of modules dynamically. (There may be a way other than a blacklist to find the user defined modules in the hierarchy, worth looking into.) So I am suggesting that a fuzzy search be done from dissociated_introspection module list to the included modules on the ActiveRecord to obtain the correct namespace. That being the case the change would take place in `ActiveMocker::MockCreator` class and no change would be needed in `dissociated_introspection`.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216045462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216593690", "body": "@markburns can you try this out on latest master? I made a change that could at least allow it to not fail.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216593690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216658369", "body": "With this PR https://github.com/zeisler/active_mocker/pull/62 it should address @markburns example not sure if it will also fix @fatuhoku issue. Let me know.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216658369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216918052", "body": "I am unable to reproduce this error\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216918052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216953874", "body": "I am using `bundle exec` and was testing it with the [example_rails_app](https://github.com/zeisler/active_mocker/tree/master/example_rails_app)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216953874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216954731", "body": "Yes `attr_*` methods are not added to the mock. I've never yet needed them, but there is no reason we can't do them the same way I just added `alias_attribute`.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216954731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216955709", "body": "DisplayErrors class really did need some work, thanks for refactoring it. Tests are failing currently so once you get those fixed up I'll take a deeper look at this.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216955709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/217059924", "body": "Supporting user defined method would mean you'd need to support the entire active record api, even running SQL strings. This would be an infinite amount of work. There is an assumption that included modules are safe to run, an assumption that I know is not always true, but non the less the way I've used it. \n\nYou could try moving your methods in modules.   \n\nMaking this gem a drop in replacement for active record is not what I'm interested in, the support cost, besides the developer time would be to great. \n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/217059924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/217073523", "body": "Let me think about importing user defined methods into the mock. It's a big change in the current paradigm, but the functionally it's the same as running user defined method from modules in the mock. Really this would most likely leek over for the need for `scope`s too.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/217073523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/217179564", "body": "Should fix the issue, going to add test coverage before merging.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/217179564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/217302240", "body": "Should be fixed with this merged PR https://github.com/zeisler/active_mocker/pull/67\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/217302240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/227258084", "body": "It does not make sense to put this test in the example app, nor do I think this test makes a lot of sense given a understanding how active mocker works.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/227258084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/230556196", "body": "Willing to accept a PR for this, but it does not provide any benefit for my self or enough benefit for the general user for me to develop.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/230556196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/230557307", "body": "I'm thinking that this should be a testing specific method. So considering adding it to the `rspec_helper`.\n\n``` ruby\nactive_mocker.find(\"User\").create_mock_relation([UserMock.new, UserMock.new]) }\n```\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/230557307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/230617037", "body": "As possible solution create an inclusive or exclusive config file as the source for generating mocks.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/230617037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/239584041", "body": "Hey @jdcalvin nice to hear from you. I'll take a look at this.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/239584041/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/239630148", "body": "Fix merged with https://github.com/zeisler/active_mocker/pull/82 \nWill release v2.2.4\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/239630148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/239631176", "body": "Released https://rubygems.org/gems/active_mocker/versions/2.2.4\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/239631176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/239631464", "body": "@jdcalvin Let me know if you have other issues and I try to address them ASAP. Also if you have any reasonable feature requests they'll be high priority.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/239631464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/243002570", "body": "https://github.com/zeisler/active_mocker/issues/84\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/243002570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/243002572", "body": "https://github.com/zeisler/active_mocker/pull/85\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/243002572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/243003567", "body": "https://github.com/zeisler/active_mocker/pull/86\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/243003567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/243004283", "body": "This is currently available and works just fine.\n`UserMock::ScopeRelation.new([UserMock.new, UserMock.new])`\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/243004283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/352105120", "body": "Thank for your contribution. @tiagofsilva ", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/352105120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/352105268", "body": "This got merged in with another feature", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/352105268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/352954645", "body": "Thanks for your interest. Because it\u2019s just ruby you can use it just fine with minitest.  The only thing you won\u2019t get is the automatic constant stubbing. You\u2019ll need to use \u2018UserMock\u2019 instead of \u2018User\u2019. An intergration for auto stubbing is also possible but the code needs to be written. I\u2019d be  willing to work with anyone to make a PR. ", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/352954645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61658722", "body": "I like this at 120\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61658722/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61658853", "body": "don't like this one.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61658853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61658888", "body": "I like the period at the start of the new line.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61658888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61677100", "body": "[String#constantize](https://github.com/zeisler/active_mocker/pull/43) can cause a `NameError`, what's the case for `LoadError`. I know StandardError will be a catch all, but I like the thought of calling out specific know failure scenarios.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61677100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61677115", "body": "Can you do the same thing you did on line 12 with only using `File.expand_path`?\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61677115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61677123", "body": "`File.expand_path`\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61677123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61677127", "body": "`File.expand_path`\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61677127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61677136", "body": "I would like this addressed. :)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61677136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61687857", "body": "Just merged in your RuboCop config\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61687857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62146955", "body": "Sometimes it's 120 and sometimes it's still 80. strange.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62146955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "markburns": {"issues": [{"url": "https://api.github.com/repos/zeisler/active_mocker/issues/46", "title": "Support polymorphic associations", "body": "Usage of polymorphic associations results in an exception\n\ne.g.\n\n```\nMissing model Bar for association Foo.belongs_to :bar, polymorphic: true\n```\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/46/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/zeisler/active_mocker/commits/cf9c4f02722cb99ecb12dc217df4983b316bc37d", "message": "fix rubocop suggestions"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/2bd483dcae25ccf11755b43def3407920b829e7a", "message": "refactor to reduce complexity of DisplayErrors class\n\nsimplify Mock::Queries#delete_all\n\nfix spec\n\nfix rubocop suggestions"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/6f83d71740a3875b712e54d085ddc64fd37437cd", "message": "run rake integration: update gemfiles in test rails app"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/7a082adf329607163ac4bd12ce0e09323a10aab8", "message": "address stylistic issues"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/8fecabd5fb9c0b426399364aa6abe6c2a95cf883", "message": "fix hound suggestions"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/b6bfd2e2c7b4e84d0dca5519b5fa1b65fdeedd83", "message": "move extracted class into own file"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/da7e169725972b456e9e612a0db7b3d4b41c4a79", "message": "fix hound error"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/9c94f170986f545f927651b3899b7311827ed3ff", "message": "fix hound suggestion"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/d3a5c2f1a621c14dffff01a1130eef79a8011482", "message": "make get_model_const private, rename to constant_from"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/4054285f45dcf07d65805624f37a4b734ebb52e8", "message": "fix some hound suggestions"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/011979cf69a5cf7305b1647a8e721677c32d6b44", "message": "extract class refactor"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/212291fd333332745218a7bc64edfe440e51d5ac", "message": "Ignore non ActiveRecord sub classes - fixes #44, #47, #48"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/0336136609085dfc3ff2d699f06c8421fb74d045", "message": "rerun rubocop with suggestions"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/7fa107314aa24a5b4416203ea80a0c4271439339", "message": "add description for rake tasks and run rake setup"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/ec928305c1e706e6cd964650b5a10d57d3a0a636", "message": "add rubocop config and run rubocop --auto-correct"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/9f0c87fc646c5884101b64a671b8094236c314c3", "message": "add help info to Rake tasks and update appraisal bundles\nYou can now run rake -T to get insight into available tasks"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/commits/7ddf210aba533a4a98cc8a15c7b6b5e35adb892d", "message": "Make rake dependency less strict"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/214559438", "body": "I'm picking this up from @tonyxyz in a different time zone. From reading his email it sounds like it's not about loading in a custom folder but rather picking up correctly all files defined in any sub directory of app/models.\n\nTo paraphrase:\n\nWe have Foo.  This inherits from Bar, which includes Bar::Baz amongst other things.\n\nWe think this is failing because Bar::Baz is never loaded.\n\nThe log reports that it cannot load Baz - actually it finds the file okay but does not complete the class loading process.\n\n---\n\nI will be having a look in detail today, but maybe that helps realise and or fix the problem sooner\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/214559438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/214571618", "body": "Good shout. I would guess this issue is based on version `1.7.x` due to our app dependencies.\nWhich looking at it now looks like it is because of `active_mocker`'s dependency on `rake` `~> 10.0` and we have a dependency on `~> 11.0` elsewhere.\n\nWill try a looser dependency in a fork of this gem to see if it allows an upgrade and fixes the issue, then a PR if so.\n\nBTW does this sound like something you fixed since 1.7?\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/214571618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/214578151", "body": "https://github.com/zeisler/active_mocker/pull/43 fixes rake issue. But I believe this issue still remains. Will update with more info if/when I find out.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/214578151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/214589033", "body": "Not sure about the failure. It passes locally.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/214589033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/214629172", "body": "@tonyxyz - when you come online I'd suggest we close this particular issue and determine more relevant PRs/issues as appropriate.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/214629172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/214634971", "body": "BTW, happy to help contribute to the project if you can give pointers. We have a bit of time to look at improving our test suite, and one option is to look at using active_mocker to speed things up, if we can get it to work\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/214634971/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215046645", "body": "That's not the case for us, and not an option really as the project is huge. Model doesn't necessarily mean the Active Record design pattern. It also doesn't necessarily mean ActiveRecord, the Rails gem.\nYou can have models that are not persisted. Or persistence related classes that are not necessarily domain concepts or 'models'.\n\nI think it would make sense that the project defaults to just skipping over non AR subclasses. Would you agree? It would also solve the problem with `concerns` modules causing exceptions.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215046645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215060080", "body": "Closing as have seen working in an isolated app and am guessing it is down to some very specific peculiarity of our app\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215060080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215073425", "body": "Managed to replicate. I mean, it is a bit crazy code, so not sure how easy it is to support, but here it is:\n\n``` ruby\nActiveRecord::Schema.define(version: 20160427124939) do\n  create_table \"bars\", force: :cascade do |t|\n    t.integer  \"foo_id\"\n    t.string   \"some_other_attribute\"\n  end\n\n  create_table \"foos\", force: :cascade do |t|\n    t.string   \"some_attribute\"\n  end\nend\n\nclass Foo < ActiveRecord::Base\n  has_one :bar\n\n  def bar_with_default\n    bar = bar_without_default\n    return bar if bar\n    Bar.new(some_other_attribute: \"Some default bar attribute\")\n  end\n  alias_method_chain :bar, :default\nend\n\nclass Bar < ActiveRecord::Base\nend\n\n```\n\n```\nERROR_VERBOSITY=3 spring rake active_mocker:build                                                                                                                                                                    [2.3.0]\nRunning via Spring preloader in process 35809\nGenerating Mocks |======================================================>>| 100%\nFoo has the following errors:\nundefined method `bar' for class `#<Module:0x007f895ddfc648>::Foo'\nerror\nundefined method `bar' for class `#<Module:0x007f895ddfc648>::Foo'\n/Users/markburns/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/activesupport-4.2.6/lib/active_support/core_ext/module/aliasing.rb:32:in `alias_method'\n/Users/markburns/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/activesupport-4.2.6/lib/active_support/core_ext/module/aliasing.rb:32:in `alias_method_chain'\n/Users/markburns/code/delete_me/app/models/foo.rb:10:in `<class:Foo>'\n/Users/markburns/code/delete_me/app/models/foo.rb:1:in `call'\n/Users/markburns/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/dissociated_introspection-0.4.1/lib/dissociated_introspection/eval_sandbox.rb:13:in `module_eval'\n/Users/markburns/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/dissociated_introspection-0.4.1/lib/dissociated_introspection/eval_sandbox.rb:13:in `call'\n/Users/markburns/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/dissociated_introspection-0.4.1/lib/dissociated_introspection/inspection.rb:90:in `load_sandbox'\n/Users/markburns/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/dissociated_introspection-0.4.1/lib/dissociated_introspection/inspection.rb:86:in `get_sandbox_class'\n/Users/markburns/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/dissociated_introspection-0.4.1/lib/dissociated_introspection/inspection.rb:15:in `get_class'\n/Users/markburns/code/active_mocker/lib/active_mocker/mock_creator.rb:132:in `constants'\n(erb):2:in `block in partials'\n/Users/markburns/.rbenv/versions/2.3.0/lib/ruby/2.3.0/erb.rb:864:in `eval'\n/Users/markburns/.rbenv/versions/2.3.0/lib/ruby/2.3.0/erb.rb:864:in `result'\n/Users/markburns/code/active_mocker/lib/active_mocker/mock_creator.rb:103:in `block in partials'\n/Users/markburns/code/active_mocker/lib/active_mocker/mock_creator.rb:99:in `each'\n/Users/markburns/code/active_mocker/lib/active_mocker/mock_creator.rb:99:in `each_with_object'\n/Users/markburns/code/active_mocker/lib/active_mocker/mock_creator.rb:99:in `partials'\n(erb):7:in `template_creator_default'\n/Users/markburns/.rbenv/versions/2.3.0/lib/ruby/2.3.0/erb.rb:864:in `eval'\n/Users/markburns/.rbenv/versions/2.3.0/lib/ruby/2.3.0/erb.rb:864:in `result'\n/Users/markburns/code/active_mocker/lib/active_mocker/template_creator.rb:15:in `render'\n/Users/markburns/code/active_mocker/lib/active_mocker/mock_creator.rb:29:in `create'\n```\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215073425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215148646", "body": "I've got a local fix for this, so will get a test for it and do a PR\ntomorrow and see what you think.\nOn Thu, 28 Apr 2016 at 01:39, Dustin Zeisler notifications@github.com\nwrote:\n\n> I think the bast way to deal with this is to only have these show up when\n> in debug mode and they should not count as a failure. Since this is not a\n> blocking issue and only a nice to have I'm going to prioritize less than\n> the other issues you've have raised.\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly or view it on GitHub\n> https://github.com/zeisler/active_mocker/issues/44#issuecomment-215142167\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215148646/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215284801", "body": "My first encounter with the hound bot. It seems quite useful, but I wonder if you've thought of using rubocop with --autocorrect?\n\nA lot of these issues were already present, but I'm happy to fix them. \nShall I add some rubocop config so you can tweak to your preferred style?\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215284801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215653635", "body": "BTW, the main changes were done in https://github.com/zeisler/active_mocker/pull/50/commits/137dae1988825bbf1924acebb684b4ee461b3ec8\n\nIt is probably worth reviewing that as the intent of the PR. The other stuff is refactoring work mainly to make method simpler/classes shorter etc triggered by hound/rubocop.\n\nI can re-do a PR with just those commits if you like\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215653635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215943844", "body": "We've been seeing this with any of our modules in a namespace too. Was going to maybe look at what the fix was next week.\n\ne.g.\n\n``` ruby\n#app/models/product.rb\nclass Product < ActiveRecord::Base\n  # implicit -> Product::SomeNamespacedModule\n  include SomeNamespacedModule\nend\n\n#app/models/product/some_namespaced_module.rb\nclass Product\n  module SomeNamespaceModule\n    def some_method\n    end\n  end\nend\n```\n\nWe've hacked a fix which is to edit the actual models to say `include Product::SomeNamespacedModule`. But that is obviously temporary whilst we look into the real solution.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215943844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215945448", "body": "Great, thanks! Passing now, and added `desc` to the rake tasks to make them easier to find with `rake -T`.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215945448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215946757", "body": "OK rerun with those suggestions \ud83d\ude04 \n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215946757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215946888", "body": "Fixes #52 \n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215946888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216021741", "body": "OK the issues have been addressed in https://github.com/zeisler/active_mocker/pull/50/commits/524fa38a2e451dff42c030327ea8ef9dd56e3524\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216021741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216022718", "body": "Sweet. So @zeisler I'm guessing this project is something you look at on weekends? We'll probably be wanting to fix (and provide a PR) for this issue during the next week. Do you have any particular pointers to look at for a fix? I've had a glance over the `dissociated_introspection` gem and it seems like it might be tricky.\n\nThe thing that makes me uncomfortable is the cyclic dependencies.\nSo in this scenario the Rails app depends on the gem, but also provides code which the gem (would) depend on. The `dissociated_introspection` gem seems like a really sweet solution to a tricky dependency problem.\n\nI like the philosophy (and speed) of explicit dependencies. What I don't want to do is end up triggering loads of unnecessary (read slow) Rails autoloading at any point. But perhaps it is unavoidable with implicit module namespaces.\n\nDo you have any thoughts on the matter, or a particular solution in mind?\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216022718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216048639", "body": "Interesting idea. I'll take a good look at it next week.\nIt may be possible to use source location info too to determine user code vs framework code\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216048639/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216082516", "body": "This is rebased against latest master, but the history is getting messy. If you've reviewed it and are interested in merging it in I can squash if you like?\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216082516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216947347", "body": "Are you running bundle exec? Maybe using in a rails app that includes the colorized gem itself?\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216947347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/217054437", "body": "I think your goals and our goals may be slightly different. Not misaligned, just we are probably coming from completely different angles to different problems. We have a huge application with a test suite that takes (non-parallelized) about 2.5-3hrs. We still haven't successfully gotten active_mocker to get one of our full specs files to pass, but it is looking promising the tests we have seen passing are 100s or 1,000s of times faster.\n\nNow I think I understand the goal of this project more, as I hadn't noticed the idea of mocking out user-defined methods until we had invested quite a bit of time in it.\n\nIdeally if we can get active_mocker to copy across our application defined methods (and accessors etc) then we may be closer to cutting hours from the test suite time and retaining the same level of confidence. This will hopefully open up a completely different paradigm of development style and make everyone much happier. And ideally make a fantastic tech blog post too.\n\nNow I would prefer to be in a situation where we have a smaller test suite where every unit test is a genuine unit test and dependencies are clearly defined and coupling is tiny. But the reality is we are looking for a drop-in replacement for AR on a large app that spins up lots of factories that spin up more factories etc. I'm a consultant and this pattern seems to be the most common on lots of Rails apps I've worked on. Probably because development of new features is easy that way, and it only gradually becomes a problem.\n\nIt seems feasible to pull in user defined methods by using `Method#source_location` and a configurable setting that just looks in app,lib etc. I've done something very similar before in https://github.com/markburns/delfos \n\nWould you be open to a PR that supports copying these methods across into the mocks (maybe as an overridable thing)?\n\nWe'll probably be going ahead anyway with it, but it's always nicer where possible to stay aligned with the original author's thoughts on how/if something should be done.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/217054437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/217063550", "body": "My apologies. Oversight due to running just rspec instead of the full rake command. Green now\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/217063550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/217065017", "body": "Rather than e.g. SQL strings, which I agree would be painful to support. \nWhat I'm really thinking of is being able to test methods like the ones you might suggest putting into modules.\nThings that might depend on an associated object built with a factory and say iterate over and join some fields or something like that. Basically, simple methods only doing things with attributes and associations. \n\nAs far as I can see, all stuff that is supported already, but instead of mocking out methods allowing them to execute against the mocks and factory generated attributes and associations.\n\nThen we can just run the specs, determine the ones that passed, then move these over to be our new active_mocker specs. Slash some test run times and allow focusing more time on improving other slower tests in other ways.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/217065017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/217065440", "body": "Maybe you are right that if it gets the 80% done and is really useful, then the support burden would become huge as the expectation to do the remaining 20% may be great\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/217065440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/217074911", "body": "Absolutely. Actually it makes sense for us to at least try out putting some of the instance methods into modules to see how far we get with that approach. If it is only e.g. 2% of tests that end up passing this way then we'll probably want to rethink the strategy completely, and there is little incentive for us to try and drive this project in that direction. If it is 80% then there is a clear benefit (at least for us) to going down this route.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/217074911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/zeisler/active_mocker/comments/17345705", "body": "Nice\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/comments/17345705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61666597", "body": "You may have already thought about this, but I'll just play the devil's advocate to see what you think:\n\n``` ruby\nclass Maybe\n  def method_missing(*args)\n    self.class.new\n  end\nend\n\nm = Maybe.new\n\nm.some_line. #you can put comments in\n  #this comment is also possible\n  some_continuation.\n  #and this one too\n  some_more()\n\nm.some_line #you can do this comment but\n  #this comment is a syntax error\n  .some_continuation\n  #and this one too\n  .some_more()\n\n```\n\nI'll switch them back to start of line if you still prefer that, as I'd rather spend time on code and design concepts than syntax, but just wanted to surface this point about start of line periods.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61666597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61666620", "body": "Neither do I. I'll work out which rule does that\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61666620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682195", "body": "I agree. I don't want to be a smart-ass, but you'd have to answer that yourself :) \nhttps://github.com/zeisler/active_mocker/blob/fec07efe1650f36c44f7b795225a4cbd4faeaa80/lib/active_mocker/generate.rb#L39\n\nSome of the renaming I've done here was just for clarifying, and obviously makes the PR a little harder to parse, so apologies about that.\n\nFor reference: http://blog.nicksieger.com/articles/2006/09/06/rubys-exception-hierarchy/\n\nSo having NameError, LoadError instead makes sense. The previous code was just not as precise as it could have been.\n\nI'll add that change in here, as it absolutely makes sense.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682496", "body": "Seems like this bot is still set to complain at 80 characters\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682522", "body": "The above issue has been addressed, but is not showing up in the Github UI as a comment on an outdated diff.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61979173", "body": "There's a typo in this filename\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61979173/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62143706", "body": "Realised this PR is a bit hard to parse with the mock generation and hound dog comments.\nThe main gist of the PR is from this point down. `example_rails_app/spec/models/user_spec.rb` and `example_rails_app/spec/rails_helper.rb`\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62143706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "olleolleolle": {"issues": [], "commits": [{"url": "https://api.github.com/repos/zeisler/active_mocker/commits/5c05fd38a7497824f8b5ab4d467d577e1489cc2f", "message": "README: Use SVG build badges [ci skip]"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tiagofsilva": {"issues": [], "commits": [{"url": "https://api.github.com/repos/zeisler/active_mocker/commits/35230cac441fdb5dc032b0c7abedcc2d4d5483a8", "message": "Fixes a couple of problems in README"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "seanhussey": {"issues": [], "commits": [{"url": "https://api.github.com/repos/zeisler/active_mocker/commits/47f51a7dabd6e47ca1206351ee9ea541791ef3c9", "message": "Update README.md\n\nUpdate the link to the blog post to use the Internet Archive. The original post has been removed."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "joshleitzel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51363281", "body": "Thanks! That did resolve my issue, I'll open a different issue for the new error I'm seeing. :thumbsup: \n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51363281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51406972", "body": "Yeah, the issue seems to be the `ModelReader` method that evals the file, which is logging this error:\n\n```\nError loading Model: child\n  `uninitialized constant #<Module:0x00000101307b20>::Parent`\n```\n\nNot sure how to go about solving this, but I imagine this will be a problem for apps that have model sub-classes of any kind.\n\nWhat about rescuing the `uninitialized constant` error and then trying to look up that constant in the model directory? Would that be a good approach?\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51406972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51494896", "body": "Cool, I'll take a stab at it!\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51494896/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51814400", "body": "Hmm, I think I'm confused. Rails _is_ loaded inside the Rake task, isn't it?\n\nI think the error I reported before, `uninitialized constant #<Module:0x00000101307b20>::Parent`, might have been in the context of RSpec instead of the Rake task. In RSpec, the example app is not actually loaded, so `Parent` is unknown. Note the differences between running the Rake task and running RSpec:\n\n**Scenario (1): when running `rake active_mocker:build`**\n\n```\n# after parsing app/models/account.rb\n    35:       Logger.error \"ActiveMocker :: Error loading Model: #{model_name} \\n \\t\\t\\t\\t\\t\\t\\t\\t`#{e}` \\n\"\n    36:       Logger.error \"\\t\\t\\t\\t\\t\\t\\t\\t #{file_path}\\n\"\n    37:       failure = true\n    38:     end\n    39:   klass = failure ? 'failure' : m.const_get(m.constants.first)\n => 40:   binding.pry\n    41:   return klass unless failure\n    42:   return false\n    43: end\n\n[1] pry(#<ActiveMocker::ModelReader>)> klass\n=> #<Module:0x00000101c862f0>::Account\n[2] pry(#<ActiveMocker::ModelReader>)> klass.respond_to? :get_named_scopes\n=> true\n[3] pry(#<ActiveMocker::ModelReader>)> klass.ancestors\n=> [#<Module:0x00000101c862f0>::Account,\n ActiveMocker::ActiveRecord::Base,\n Object,\n ActiveSupport::Dependencies::Loadable,\n PP::ObjectMixin,\n JSON::Ext::Generator::GeneratorMethods::Object,\n Kernel,\n BasicObject]\n[4] pry(#<ActiveMocker::ModelReader>)> Rails\n=> Rails\n\n# after parsing app/models/child.rb\n\n[1] pry(#<ActiveMocker::ModelReader>)> klass\n=> #<Module:0x0000010133ce10>::Child (call '#<Module:0x0000010133ce10>::Child.connection' to establish a connection)\n[2] pry(#<ActiveMocker::ModelReader>)> klass.respond_to? :get_named_scopes\n=> false\n[3] pry(#<ActiveMocker::ModelReader>)> klass.ancestors\n=> [#<Module:0x0000010133ce10>::Child (call '#<Module:0x0000010133ce10>::Child.connection' to establish a connection),\n #<Module:0x00000103cb3528>,\n Parent (call 'Parent.connection' to establish a connection),\n #<Module:0x000001013472e8>,\n ActiveRecord::Base,\n ActiveRecord::Store,\n ActiveRecord::Serialization,\n ActiveModel::Serializers::Xml,\n...\n```\n\n**Scenario (2): when running `rspec spec/lib/active_mocker/model_reader/generate_spec.rb:23`**\n\n```\n# after parsing app/models/account.rb\n[1] pry(#<ActiveMocker::ModelReader>)> klass\n=> #<Module:0x00000101dff118>::Account\n[2] pry(#<ActiveMocker::ModelReader>)> klass.respond_to? :get_named_scopes\n=> true\n[3] pry(#<ActiveMocker::ModelReader>)> klass.ancestors\n=> [#<Module:0x00000101dff118>::Account, ActiveMocker::ActiveRecord::Base, Object, PP::ObjectMixin, JSON::Ext::Generator::GeneratorMethods::Object, Kernel, BasicObject]\n[4] pry(#<ActiveMocker::ModelReader>)> Rails\nNameError: uninitialized constant ActiveMocker::ModelReader::Rails\nfrom (pry):4:in `eval_file'\n\n# after parsing app/models/child.rb\n\n[1] pry(#<ActiveMocker::ModelReader>)> klass\n=> \"failure\"\n```\n\nSo in scenario 1 (the behavior users of the gem actually see), the problem is not that the parent class can't be loaded, it's that it _is_ loaded and therefore the real `ActiveRecord::Base` is used, not `ActiveMocker::ActiveRecord::Base`. In scenario 2 (the gem's test suite), it causes a failure because of the `uninitialized constant` error.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51814400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51817309", "body": "You mean stop `Child` from loading `Parent`, or stop `Parent` from loading `ActiveRecord::Base`?\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51817309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51826293", "body": "Well then the problem becomes that the mock for `Child` will be incomplete when there are things defined on `Parent` that `Child` should be inheriting. Also think about things like concerns. If `Child` includes a concern, that concern might define associations, validations, etc that the `Child` mock should know about.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/51826293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/52336100", "body": "Thanks for your help with this. Your new version does silence the STI problems by printing debug messages, but the generator's now running into a problem with my [omniauth-identity](https://github.com/intridea/omniauth-identity) model:\n\n```\nErrno::ENOENT: No such file or directory @ rb_sysopen - ~/rails_app/app/models/omni_auth/identity/models/active_record.rb\n~/.rvm/gems/ruby-2.1.0@gemset/gems/active_mocker-1.6.3/lib/active_mocker/file_reader.rb:6:in `initialize'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/active_mocker-1.6.3/lib/active_mocker/file_reader.rb:6:in `open'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/active_mocker-1.6.3/lib/active_mocker/file_reader.rb:6:in `read'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/active_mocker-1.6.3/lib/active_mocker/model_reader.rb:74:in `read_file'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/active_mocker-1.6.3/lib/active_mocker/model_reader.rb:37:in `load_parent_class'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/active_mocker-1.6.3/lib/active_mocker/model_reader.rb:30:in `sandbox_model'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/active_mocker-1.6.3/lib/active_mocker/model_reader.rb:22:in `klass'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/active_mocker-1.6.3/lib/active_mocker/model_reader.rb:16:in `parse'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/active_mocker-1.6.3/lib/active_mocker/model_schema/generate.rb:168:in `get_model'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/active_mocker-1.6.3/lib/active_mocker/model_schema/generate.rb:38:in `block in run'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/active_mocker-1.6.3/lib/active_mocker/model_schema/generate.rb:36:in `map'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/active_mocker-1.6.3/lib/active_mocker/model_schema/generate.rb:36:in `run'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/active_mocker-1.6.3/lib/active_mocker/generate.rb:43:in `generate_model_schema'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/active_mocker-1.6.3/lib/active_mocker/generate.rb:66:in `create_template'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/active_mocker-1.6.3/lib/active_mocker/generate.rb:23:in `initialize'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/active_mocker-1.6.3/lib/active_mocker/task.rake:5:in `new'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/active_mocker-1.6.3/lib/active_mocker/task.rake:5:in `block (2 levels) in <top (required)>'\n```\n\nThe model looks like this:\n\n``` ruby\nclass Identity < OmniAuth::Identity::Models::ActiveRecord; end\n```\n\nUnfortunately since the gem isn't able to process models that don't directly inherit from `ActiveRecord::Base`, I won't be able to use it. All of my models inherit from either `ApplicationModel`, an STI class, or\u2014as here\u2014a different class like `OmniAuth::Identity::Models::ActiveRecord`.\n\nThanks for the help though! :smiley: Hopefully a future version will support less straightforward class hierarchies like mine.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/52336100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/52403641", "body": "Yep!\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/52403641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/53766185", "body": "Sorry for the delay in getting back to you on this.\n\nThe generator now works for the most part, but it fails for models that don't inherit from `ApplicationModel` (my base model that inherits from `ActiveRecord::Base`). I realize I previously told you that all my models inherit from ApplicationModel, but that's actually not true\u2014my apologies.\n\nI've got a few \"pseudo-models\" that don't inherit from any class, that just act as models for certain purposes in my application. One such pseudo-model looks like this:\n\n``` ruby\nclass UserRegistration\n  include ActiveModel::Validations\n  include ActiveModel::Conversion\n  extend ActiveModel::Naming\n...\n```\n\nFor what it's worth, this is not a fringe case: it's something I've seen other devs do and there are many blog posts and StackOverflow questions about it.\n\nThe other failure I'm seeing is my omniauth-identity model, which looks like this:\n\n``` ruby\nclass Identity < OmniAuth::Identity::Models::ActiveRecord\n...\n```\n\nThese models all produce errors like this:\n\n```\nErrno::ENOENT: No such file or directory @ rb_sysopen - ~/app/models/.rb\n~/.rvm/gems/ruby-2.1.0@gemset/bundler/gems/active_mocker-e5c2285ad9c4/lib/active_mocker/file_reader.rb:6:in `initialize'\n~/.rvm/gems/ruby-2.1.0@gemset/bundler/gems/active_mocker-e5c2285ad9c4/lib/active_mocker/file_reader.rb:6:in `open'\n~/.rvm/gems/ruby-2.1.0@gemset/bundler/gems/active_mocker-e5c2285ad9c4/lib/active_mocker/file_reader.rb:6:in `read'\n~/.rvm/gems/ruby-2.1.0@gemset/bundler/gems/active_mocker-e5c2285ad9c4/lib/active_mocker/model_reader.rb:69:in `read_file'\n~/.rvm/gems/ruby-2.1.0@gemset/bundler/gems/active_mocker-e5c2285ad9c4/lib/active_mocker/model_reader.rb:31:in `load_parent_class'\n~/.rvm/gems/ruby-2.1.0@gemset/bundler/gems/active_mocker-e5c2285ad9c4/lib/active_mocker/model_reader.rb:23:in `sandbox_model'\n~/.rvm/gems/ruby-2.1.0@gemset/bundler/gems/active_mocker-e5c2285ad9c4/lib/active_mocker/model_reader.rb:15:in `klass'\n~/.rvm/gems/ruby-2.1.0@gemset/bundler/gems/active_mocker-e5c2285ad9c4/lib/active_mocker/model_reader.rb:10:in `parse'\n~/.rvm/gems/ruby-2.1.0@gemset/bundler/gems/active_mocker-e5c2285ad9c4/lib/active_mocker/model_schema/assemble.rb:161:in `get_model'\n~/.rvm/gems/ruby-2.1.0@gemset/bundler/gems/active_mocker-e5c2285ad9c4/lib/active_mocker/model_schema/assemble.rb:36:in `block in run'\n~/.rvm/gems/ruby-2.1.0@gemset/bundler/gems/active_mocker-e5c2285ad9c4/lib/active_mocker/model_schema/assemble.rb:35:in `map'\n~/.rvm/gems/ruby-2.1.0@gemset/bundler/gems/active_mocker-e5c2285ad9c4/lib/active_mocker/model_schema/assemble.rb:35:in `run'\n~/.rvm/gems/ruby-2.1.0@gemset/bundler/gems/active_mocker-e5c2285ad9c4/lib/active_mocker/generate.rb:17:in `generate_model_schema'\n~/.rvm/gems/ruby-2.1.0@gemset/bundler/gems/active_mocker-e5c2285ad9c4/lib/active_mocker/generate.rb:40:in `create_template'\n~/.rvm/gems/ruby-2.1.0@gemset/bundler/gems/active_mocker-e5c2285ad9c4/lib/active_mocker/generate.rb:11:in `initialize'\n~/.rvm/gems/ruby-2.1.0@gemset/bundler/gems/active_mocker-e5c2285ad9c4/lib/active_mocker/task.rake:5:in `new'\n~/.rvm/gems/ruby-2.1.0@gemset/bundler/gems/active_mocker-e5c2285ad9c4/lib/active_mocker/task.rake:5:in `block (2 levels) in <top (required)>'\n~/.rvm/gems/ruby-2.1.0@gemset/bin/ruby_executable_hooks:15:in `eval'\n```\n\nUsing the code on master, when I don't add an initializer to configure ActiveMocker, I am able to run the mock generation for the most part, except for these failures. However, when I add a configure block as you suggest, the generator immediately fails:\n\n``` ruby\nActiveMocker.configure do |config|\n  config.model_base_classes = %w[ ActiveRecord::Base ApplicationModel ]\nend\n```\n\n```\nrake aborted!\nActiveMocker::Config #schema_file must be specified!\n~/.rvm/gems/ruby-2.1.0@gemset/bundler/gems/active_mocker-e5c2285ad9c4/lib/active_mocker/config.rb:30:in `block in check_required_settings'\n~/.rvm/gems/ruby-2.1.0@gemset/bundler/gems/active_mocker-e5c2285ad9c4/lib/active_mocker/config.rb:29:in `each'\n~/.rvm/gems/ruby-2.1.0@gemset/bundler/gems/active_mocker-e5c2285ad9c4/lib/active_mocker/config.rb:29:in `check_required_settings'\n~/.rvm/gems/ruby-2.1.0@gemset/bundler/gems/active_mocker-e5c2285ad9c4/lib/active_mocker/config.rb:16:in `set'\n~/.rvm/gems/ruby-2.1.0@gemset/bundler/gems/active_mocker-e5c2285ad9c4/lib/active_mocker/public_methods.rb:27:in `configure'\n~/app/config/initializers/active_mocker.rb:1:in `<top (required)>'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/activesupport-4.1.1/lib/active_support/dependencies.rb:241:in `load'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/activesupport-4.1.1/lib/active_support/dependencies.rb:241:in `block in load'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/activesupport-4.1.1/lib/active_support/dependencies.rb:232:in `load_dependency'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/activesupport-4.1.1/lib/active_support/dependencies.rb:241:in `load'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/railties-4.1.1/lib/rails/engine.rb:648:in `block in load_config_initializer'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/activesupport-4.1.1/lib/active_support/notifications.rb:161:in `instrument'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/railties-4.1.1/lib/rails/engine.rb:647:in `load_config_initializer'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/railties-4.1.1/lib/rails/engine.rb:612:in `block (2 levels) in <class:Engine>'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/railties-4.1.1/lib/rails/engine.rb:611:in `each'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/railties-4.1.1/lib/rails/engine.rb:611:in `block in <class:Engine>'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/railties-4.1.1/lib/rails/initializable.rb:30:in `instance_exec'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/railties-4.1.1/lib/rails/initializable.rb:30:in `run'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/railties-4.1.1/lib/rails/initializable.rb:55:in `block in run_initializers'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/railties-4.1.1/lib/rails/initializable.rb:44:in `each'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/railties-4.1.1/lib/rails/initializable.rb:44:in `tsort_each_child'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/railties-4.1.1/lib/rails/initializable.rb:54:in `run_initializers'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/railties-4.1.1/lib/rails/application.rb:288:in `initialize!'\n~/app/config/environment.rb:5:in `<top (required)>'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/activesupport-4.1.1/lib/active_support/dependencies.rb:247:in `require'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/activesupport-4.1.1/lib/active_support/dependencies.rb:247:in `block in require'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/activesupport-4.1.1/lib/active_support/dependencies.rb:232:in `load_dependency'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/activesupport-4.1.1/lib/active_support/dependencies.rb:247:in `require'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/railties-4.1.1/lib/rails/application.rb:264:in `require_environment!'\n~/.rvm/gems/ruby-2.1.0@gemset/gems/railties-4.1.1/lib/rails/application.rb:367:in `block in run_tasks_blocks'\n~/.rvm/gems/ruby-2.1.0@gemset/bin/ruby_executable_hooks:15:in `eval'\n~/.rvm/gems/ruby-2.1.0@gemset/bin/ruby_executable_hooks:15:in `<main>'\n```\n\nAlso, looking at the mocks that were successfully generated, I think this behavior is not ideal. Take these two models:\n\n``` ruby\nclass ApplicationModel < ActiveRecord::Base\n  def to_s\n    name\n  end\nend\n\nclass UserModel < ActiveRecord::Base; end\n```\n\nActiveMocker will create a mock for each of these classes, but the `UserModel` mock does not know anything about `ApplicationModel#to_s`, so the mock is incomplete. This is a contrived example, of course, but the whole point of an `ApplicationModel` is to share core functionality throughout all the models\u2014functionality which is missing from all of the mocks.\n\nHere's a scheme I think might alleviate all of these inheritance problems and provide higher-fidelity mocks. Consider these models:\n\n``` ruby\n# base model\nclass ApplicationModel < ActiveRecord::Base; end\n\n# single-table inheritance models\nclass User < ApplicationModel; end\n\nclass Admin < User; end\n\nclass Moderator < User; end\n\n# pseudo-models\nclass UserRegistration; end\n\nclass AdminRegistration < UserRegistration; end\n```\n\nThe generator will consider the models in this order, because of their filenames: `Admin`, `AdminRegistration`, `ApplicationModel`, `Moderator`, `User`, `UserRegistration`.\n1. First, process `Admin` and see that it inherits from `User`, so we should first make the mock of `User`. In order to make the mock of `User`, we must first make the mock of `ApplicationModel`. So the first mock generated will actually be `ApplicationModelMock < ActiveMocker::Mock::Base`. Then `UserMock` will be generated, but its parent should be set to `ApplicationModelMock` so that it behaves just like the normal model would, inheriting from `ApplicationModel`. Finally, generate the `Admin` mock and set its parent to `UserMock`.\n2. Next, process `AdminRegistration`. To do so, first process `UserRegistration`. Since that class doesn't inherit from anything, we can stop processing it and stop processing `AdminRegistration`. I don't think anybody would expect a mock to be generated for a pseudo-model.\n3. Next, process `ApplicationModel`. It's already been processed and mocked, so move on.\n4. Next, process `Moderator`. It inherits from `User`, which has already been processed/mocked, so just generate the mock and set its parent to `UserMock`.\n5. Next, process `User`. It's already been processed mocked, so move on.\n6. Next, process `UserRegistration`. It's already been processed and ignored, so stop.\n\nAt the end you would have the following mocks:\n\n``` ruby\nclass AdminMock < UserMock; end\nclass ApplicationModelMock < ActiveMocker::Mock::Base; end\nclass ModeratorMock < UserMock; end\nclass UserMock < ApplicationModelMock; end\n```\n\nThis would preserve the object hierarchy and create better mocks that have all the mocked methods of their parents. I'm not sure how difficult this would be to implement with the current code base, but I think it would be an awesome improvement!\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/53766185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "GeekOnCoffee": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/54097381", "body": "Closing, as on further inspection it might need to be in development too\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/54097381/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/54097447", "body": "I'm also running into the /app/models/.rb issue, though I'm not completely sure what model it's hitting it on. I could see not wanting to generate them for non-ActiveRecord classes, but it should probably gracefully skip them. \n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/54097447/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "nightscape": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/75734330", "body": "Ok, turns out that if you run this thing without Rails then `Config.mock_dir` keeps its default `nil`:\nhttps://github.com/zeisler/active_mocker/blob/master/lib/active_mocker/config.rb#L34\n\nWow, so scare, much danger :p\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/75734330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jmtoball": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/76679964", "body": "Although you can still delete all files that belong to you as non-root. At least that's what happened to me and what @nightscape described in this issue. Thank you for fixing this so quickly :-)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/76679964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "pastDexter": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/133316607", "body": "It's really great. I had some problems with running build-in rake task so I wrote one with Siantra specific configuration in my project dir.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/133316607/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "krainboltgreene": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/153465537", "body": "Awesome!\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/153465537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/154498707", "body": "Yes, we're using `db/structure.sql` I can't wait for 2.0! :D\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/154498707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "semikolon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/165275881", "body": "I need this too. Would be awesome...\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/165275881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/182014590", "body": "Hey, thanks! :) Awesome, trying it out soon\ntis 9 feb. 2016 kl. 02:03 skrev Dustin Zeisler notifications@github.com:\n\n> Closed #28 https://github.com/zeisler/active_mocker/issues/28.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zeisler/active_mocker/issues/28#event-543751261.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/182014590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "tonyxyz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/214721182", "body": "Many thanks markburns, zeisler. This is working fine on the leading edge.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/214721182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "fatuhoku": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215892328", "body": "Thanks @zeisler I have made tiny progress. :P\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215892328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215893648", "body": "@zeisler where are you supposed to put this registration code?\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215893648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215893822", "body": "Awesome.\n\nRelated to #23. Wasn't clear from error message where you're supposed to put that line. Also, @zeisler why `klass: Hash` as opposed to `klass: Vehicle`?\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215893822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215894237", "body": "@zeisler \ud83c\udf7b  that's just awesome.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215894237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215898395", "body": "@zeisler Any ideas?\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215898395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215900232", "body": "I've attached the full stack trace if it helps here:\n\n```\nConcerns::Approval has the following errors:\nUnable to autoload constant Concerns::Approval, expected ~/myproj/app/models/concerns/approval.rb to define it\nwarn\nUnable to autoload constant Concerns::Approval, expected ~/myproj/app/models/concerns/approval.rb to define it\n~/.rvm/gems/ruby-2.2.4/gems/activesupport-4.2.5/lib/active_support/dependencies.rb:495:in `load_missing_constant'\n~/.rvm/gems/ruby-2.2.4/gems/activesupport-4.2.5/lib/active_support/dependencies.rb:184:in `const_missing'\n~/.rvm/gems/ruby-2.2.4/gems/activesupport-4.2.5/lib/active_support/inflector/methods.rb:276:in `const_get'\n~/.rvm/gems/ruby-2.2.4/gems/activesupport-4.2.5/lib/active_support/inflector/methods.rb:276:in `block in constantize'\n~/.rvm/gems/ruby-2.2.4/gems/activesupport-4.2.5/lib/active_support/inflector/methods.rb:259:in `each'\n~/.rvm/gems/ruby-2.2.4/gems/activesupport-4.2.5/lib/active_support/inflector/methods.rb:259:in `inject'\n~/.rvm/gems/ruby-2.2.4/gems/activesupport-4.2.5/lib/active_support/inflector/methods.rb:259:in `constantize'\n~/.rvm/gems/ruby-2.2.4/gems/activesupport-4.2.5/lib/active_support/core_ext/string/inflections.rb:66:in `constantize'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/generate.rb:38:in `get_model_const'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/generate.rb:17:in `block in call'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/generate.rb:15:in `each'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/generate.rb:15:in `call'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/public_methods.rb:30:in `create_mocks'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/task.rake:12:in `block (2 levels) in <top (required)>'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:240:in `call'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:240:in `block in execute'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:235:in `each'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:235:in `execute'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:179:in `block in invoke_with_call_chain'\n~/.rvm/rubies/ruby-2.2.4/lib/ruby/2.2.0/monitor.rb:211:in `mon_synchronize'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:165:in `invoke'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:150:in `invoke_task'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:106:in `block (2 levels) in top_level'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:106:in `each'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:106:in `block in top_level'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:115:in `run_with_threads'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:100:in `top_level'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:78:in `block in run'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:176:in `standard_exception_handling'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:75:in `run'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/bin/rake:33:in `<top (required)>'\n~/.rvm/gems/ruby-2.2.4/bin/rake:23:in `load'\n~/.rvm/gems/ruby-2.2.4/bin/rake:23:in `<main>'\n~/.rvm/gems/ruby-2.2.4/bin/ruby_executable_hooks:15:in `eval'\n~/.rvm/gems/ruby-2.2.4/bin/ruby_executable_hooks:15:in `<main>'\nLoadError\nConcerns::Approval has the following errors:\nundefined method `to_a' for false:FalseClass\nwarn\nundefined method `to_a' for false:FalseClass\n~/.rvm/gems/ruby-2.2.4/gems/dissociated_introspection-0.4.1/lib/dissociated_introspection/ruby_class.rb:34:in `class_name'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/parent_class.rb:57:in `class_name'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/parent_class.rb:16:in `call'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/mock_creator.rb:91:in `verify_class'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/mock_creator.rb:26:in `create'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/generate.rb:53:in `create_mock'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/generate.rb:24:in `block (2 levels) in call'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/generate.rb:22:in `open'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/generate.rb:22:in `block in call'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/generate.rb:15:in `each'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/generate.rb:15:in `call'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/public_methods.rb:30:in `create_mocks'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/task.rake:12:in `block (2 levels) in <top (required)>'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:240:in `call'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:240:in `block in execute'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:235:in `each'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:235:in `execute'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:179:in `block in invoke_with_call_chain'\n~/.rvm/rubies/ruby-2.2.4/lib/ruby/2.2.0/monitor.rb:211:in `mon_synchronize'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:165:in `invoke'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:150:in `invoke_task'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:106:in `block (2 levels) in top_level'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:106:in `each'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:106:in `block in top_level'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:115:in `run_with_threads'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:100:in `top_level'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:78:in `block in run'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:176:in `standard_exception_handling'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:75:in `run'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/bin/rake:33:in `<top (required)>'\n~/.rvm/gems/ruby-2.2.4/bin/rake:23:in `load'\n~/.rvm/gems/ruby-2.2.4/bin/rake:23:in `<main>'\n~/.rvm/gems/ruby-2.2.4/bin/ruby_executable_hooks:15:in `eval'\n~/.rvm/gems/ruby-2.2.4/bin/ruby_executable_hooks:15:in `<main>'\nNoMethodError\nConcerns::RecordChanges has the following errors:\nUnable to autoload constant Concerns::RecordChanges, expected ~/myproj/app/models/concerns/record_changes.rb to define it\nwarn\nUnable to autoload constant Concerns::RecordChanges, expected ~/myproj/app/models/concerns/record_changes.rb to define it\n~/.rvm/gems/ruby-2.2.4/gems/activesupport-4.2.5/lib/active_support/dependencies.rb:495:in `load_missing_constant'\n~/.rvm/gems/ruby-2.2.4/gems/activesupport-4.2.5/lib/active_support/dependencies.rb:184:in `const_missing'\n~/.rvm/gems/ruby-2.2.4/gems/activesupport-4.2.5/lib/active_support/inflector/methods.rb:276:in `const_get'\n~/.rvm/gems/ruby-2.2.4/gems/activesupport-4.2.5/lib/active_support/inflector/methods.rb:276:in `block in constantize'\n~/.rvm/gems/ruby-2.2.4/gems/activesupport-4.2.5/lib/active_support/inflector/methods.rb:259:in `each'\n~/.rvm/gems/ruby-2.2.4/gems/activesupport-4.2.5/lib/active_support/inflector/methods.rb:259:in `inject'\n~/.rvm/gems/ruby-2.2.4/gems/activesupport-4.2.5/lib/active_support/inflector/methods.rb:259:in `constantize'\n~/.rvm/gems/ruby-2.2.4/gems/activesupport-4.2.5/lib/active_support/core_ext/string/inflections.rb:66:in `constantize'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/generate.rb:38:in `get_model_const'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/generate.rb:17:in `block in call'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/generate.rb:15:in `each'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/generate.rb:15:in `call'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/public_methods.rb:30:in `create_mocks'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/task.rake:12:in `block (2 levels) in <top (required)>'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:240:in `call'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:240:in `block in execute'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:235:in `each'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:235:in `execute'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:179:in `block in invoke_with_call_chain'\n~/.rvm/rubies/ruby-2.2.4/lib/ruby/2.2.0/monitor.rb:211:in `mon_synchronize'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:165:in `invoke'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:150:in `invoke_task'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:106:in `block (2 levels) in top_level'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:106:in `each'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:106:in `block in top_level'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:115:in `run_with_threads'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:100:in `top_level'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:78:in `block in run'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:176:in `standard_exception_handling'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:75:in `run'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/bin/rake:33:in `<top (required)>'\n~/.rvm/gems/ruby-2.2.4/bin/rake:23:in `load'\n~/.rvm/gems/ruby-2.2.4/bin/rake:23:in `<main>'\n~/.rvm/gems/ruby-2.2.4/bin/ruby_executable_hooks:15:in `eval'\n~/.rvm/gems/ruby-2.2.4/bin/ruby_executable_hooks:15:in `<main>'\nLoadError\nConcerns::RecordChanges has the following errors:\nundefined method `to_a' for false:FalseClass\nwarn\nundefined method `to_a' for false:FalseClass\n~/.rvm/gems/ruby-2.2.4/gems/dissociated_introspection-0.4.1/lib/dissociated_introspection/ruby_class.rb:34:in `class_name'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/parent_class.rb:57:in `class_name'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/parent_class.rb:16:in `call'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/mock_creator.rb:91:in `verify_class'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/mock_creator.rb:26:in `create'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/generate.rb:53:in `create_mock'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/generate.rb:24:in `block (2 levels) in call'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/generate.rb:22:in `open'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/generate.rb:22:in `block in call'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/generate.rb:15:in `each'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/generate.rb:15:in `call'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/public_methods.rb:30:in `create_mocks'\n~/.rvm/gems/ruby-2.2.4/gems/active_mocker-2.1.3/lib/active_mocker/task.rake:12:in `block (2 levels) in <top (required)>'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:240:in `call'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:240:in `block in execute'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:235:in `each'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:235:in `execute'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:179:in `block in invoke_with_call_chain'\n~/.rvm/rubies/ruby-2.2.4/lib/ruby/2.2.0/monitor.rb:211:in `mon_synchronize'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/task.rb:165:in `invoke'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:150:in `invoke_task'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:106:in `block (2 levels) in top_level'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:106:in `each'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:106:in `block in top_level'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:115:in `run_with_threads'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:100:in `top_level'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:78:in `block in run'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:176:in `standard_exception_handling'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/lib/rake/application.rb:75:in `run'\n~/.rvm/gems/ruby-2.2.4/gems/rake-10.5.0/bin/rake:33:in `<top (required)>'\n~/.rvm/gems/ruby-2.2.4/bin/rake:23:in `load'\n~/.rvm/gems/ruby-2.2.4/bin/rake:23:in `<main>'\n~/.rvm/gems/ruby-2.2.4/bin/ruby_executable_hooks:15:in `eval'\n~/.rvm/gems/ruby-2.2.4/bin/ruby_executable_hooks:15:in `<main>'\nNoMethodError\nError Summary\nerrors: 0, warn: 4, info: 0\nFailed models: Concerns::Approval, Concerns::RecordChanges\n2 mock(s) out of 21 failed.\nTo see more/less detail set error_verbosity = 0, 1, 2, 3\n```\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215900232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215900549", "body": "@zeisler The line `ActiveMocker::Config.disable_modules_and_constants = true` doesn't seem to have helped with the error.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215900549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215955091", "body": "Also when I try to run my test I get:\n\n``` rb\n~/myproj/spec/mocks/booking_mock.rb:5:in `<class:BookingMock>': uninitialized constant BookingMock::RecordChanges (NameError)\n```\n\nHmm.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215955091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215960594", "body": "@zeisler I've updated the issue with another case, `inet`, where the generated mock is invalid because it's missing a `require` for the relevant library. I guess it's necessary to add that require manually for now.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215960594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215961088", "body": "Hmm. Any chance that `factory_girl_rails` could be supported?\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/215961088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216022323", "body": "@zeisler hmm I ran into various issues trying to get Rails to recognise my ActiveRecord constants and eventually gave up. I've come around to your thinking \u2014 there's really no need to have Rails kicking around for unit tests!  I ended up just going `MyEntity.create(...)` rather than using `factory_girl`.\n\nThanks for the response.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216022323/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216022411", "body": "Awesome.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/216022411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/227268950", "body": "I've switched over to using [Zeus](https://github.com/burke/zeus) to achieve fast tests for the time being. We also have been moving away from using Concerns :P\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/227268950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "vshjxyz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/217143100", "body": "hey guys, same error here using `ERROR_VERBOSITY=3 rake active_mocker:build`\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/217143100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jdcalvin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/239644177", "body": "Thanks Dustin!\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/issues/comments/239644177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "houndci-bot": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/37534118", "body": "Line is too long. [95/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/37534118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/51954065", "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/51954065/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/51954067", "body": "Add parentheses to nested method call `File.exist? File.join(mock_path, 'api/customer_mock.rb')`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/51954067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/51954069", "body": "Add parentheses to nested method call `File.exist? File.join(mock_path, 'micropost_mock.rb')`.<br>Space inside parentheses detected.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/51954069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/51954070", "body": "Add parentheses to nested method call `File.exist? File.join(mock_path, 'user_mock.rb')`.<br>Space inside parentheses detected.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/51954070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/51954071", "body": "Add parentheses to nested method call `File.exist? mock_path`.<br>Space inside parentheses detected.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/51954071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/51954072", "body": "Line is too long. [93/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/51954072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820594", "body": "Prefer `to_s` over string interpolation.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820595", "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820596", "body": "Line is too long. [114/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820597", "body": "Line is too long. [127/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820598", "body": "Line is too long. [87/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820599", "body": "Line is too long. [86/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820600", "body": "Line is too long. [95/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820601", "body": "`File.exists?` is deprecated in favor of `File.exist?`.<br>Add parentheses to nested method call `File.exists? current_mock_path`.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820602", "body": "`File.exists?` is deprecated in favor of `File.exist?`.<br>Add parentheses to nested method call `File.exists? current_mock_path`.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820603", "body": "`File.exists?` is deprecated in favor of `File.exist?`.<br>Line is too long. [107/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820685", "body": "Line is too long. [114/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820688", "body": "Line is too long. [127/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820689", "body": "Line is too long. [107/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820690", "body": "Line is too long. [86/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820692", "body": "Line is too long. [85/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/52820692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/56102076", "body": "Extra empty line detected at method body beginning.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/56102076/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/56102078", "body": "Extra empty line detected at class body end.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/56102078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/56102079", "body": "Unused block argument - `block`. If it's necessary, use `_` or `_block` as an argument name to indicate that it won't be used. Also consider using a proc without arguments instead of a lambda if you want it to accept any arguments but don't care about them.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/56102079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/56102080", "body": "Freeze mutable objects assigned to constants.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/56102080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/56102082", "body": "Line is too long. [123/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/56102082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/56602483", "body": "Line is too long. [105/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/56602483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/56908290", "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/56908290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/56908291", "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/56908291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/57229371", "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/57229371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/57229372", "body": "Extra empty line detected at block body end.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/57229372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/57229374", "body": "Extra empty line detected at block body beginning.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/57229374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/57229376", "body": "Line is too long. [120/80]<br>Redundant curly braces around a hash parameter.<br>Space inside { missing.<br>Space inside } missing.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/57229376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/57229379", "body": "Line is too long. [91/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/57229379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/57229380", "body": "Line is too long. [97/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/57229380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373624", "body": "Line is too long. [168/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373625", "body": "Line is too long. [81/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373626", "body": "Line is too long. [162/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373627", "body": "Line is too long. [85/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373629", "body": "Line is too long. [121/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373630", "body": "Line is too long. [127/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373631", "body": "Line is too long. [129/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373631/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373632", "body": "Line is too long. [102/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373633", "body": "Add parentheses to nested method call `File.exist? File.join(mock_path, \"nacis_mock.rb\")`.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373634", "body": "Add parentheses to nested method call `File.exist? File.join(mock_path, \"api/customer_mock.rb\")`.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373635", "body": "Add parentheses to nested method call `File.exist? File.join(mock_path, \"relationship_mock.rb\")`.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373636", "body": "Add parentheses to nested method call `File.exist? File.join(mock_path, \"micropost_mock.rb\")`.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373637", "body": "Add parentheses to nested method call `File.exist? File.join(mock_path, \"user_mock.rb\")`.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373638", "body": "Add parentheses to nested method call `File.exist? mock_path`.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373639", "body": "Line is too long. [83/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373639/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373640", "body": "Line is too long. [116/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61373640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61364188", "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61364188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61364189", "body": "Do not use `::` for method calls.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61364189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61364193", "body": "Line is too long. [86/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61364193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61364195", "body": "Line is too long. [81/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61364195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61364196", "body": "Line is too long. [131/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61364196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61364198", "body": "`File.exists?` is deprecated in favor of `File.exist?`.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61364198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61364200", "body": "`File.exists?` is deprecated in favor of `File.exist?`.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61364200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61364758", "body": "`Dir.exists?` is deprecated in favor of `Dir.exist?`.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61364758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61371011", "body": "Space missing inside }.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61371011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61371012", "body": "Line is too long. [106/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61371012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61371013", "body": "Line is too long. [102/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61371013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61371014", "body": "Line is too long. [104/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61371014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61371015", "body": "Line is too long. [81/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61371015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61371489", "body": "`Dir.exists?` is deprecated in favor of `Dir.exist?`.<br>Favor `unless` over `if` for negative conditions.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61371489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61371613", "body": "Favor `unless` over `if` for negative conditions.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61371613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61371614", "body": "Space missing inside }.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61371614/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61371615", "body": "Extra empty line detected at module body end.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61371615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61371616", "body": "Line is too long. [104/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61371616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61371617", "body": "Line is too long. [100/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61371617/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61371618", "body": "Line is too long. [102/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61371618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682283", "body": "Line is too long. [106/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682284", "body": "Line is too long. [118/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682285", "body": "Line is too long. [103/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682286", "body": "Line is too long. [84/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682287", "body": "Line is too long. [109/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682288", "body": "Line is too long. [81/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682471", "body": "Line is too long. [100/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682471/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682472", "body": "Line is too long. [91/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682473", "body": "Line is too long. [112/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682473/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682474", "body": "Line is too long. [103/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61682474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61695503", "body": "Line is too long. [91/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61695503/reactions", "total_count": 1, "+1": 0, "-1": 1, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698210", "body": "Extra blank line detected.<br>Extra empty line detected at block body end.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698211", "body": "Extra blank line detected.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698212", "body": "Space missing to the left of {.<br>Space missing inside {.<br>Space missing inside }.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698213", "body": "Line is too long. [103/80]<br>Space missing to the left of {.<br>Space missing inside {.<br>Space missing inside }.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698214", "body": "Final newline missing.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698215", "body": "Missing space after #.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698216", "body": "Extra empty line detected at class body end.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698217", "body": "Line is too long. [167/80]<br>Redundant `self` detected.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698218", "body": "Line is too long. [133/80]<br>Redundant `self` detected.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698218/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698219", "body": "Line is too long. [157/80]<br>Redundant `self` detected.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698220", "body": "Line is too long. [128/80]<br>Redundant `self` detected.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698221", "body": "Line is too long. [95/80]<br>Use `%w` or `%W` for an array of words.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698222", "body": "Line is too long. [138/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698224", "body": "Final newline missing.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698224/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698225", "body": "Missing space after #.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698226", "body": "Extra empty line detected at method body end.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698275", "body": "Extra empty line detected at method body end.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698315", "body": "Extra empty line detected at method body end.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698316", "body": "Extra empty line detected at class body end.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698524", "body": "Line is too long. [106/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698524/reactions", "total_count": 1, "+1": 0, "-1": 1, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698525", "body": "Extra empty line detected at method body end.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698526", "body": "Line is too long. [82/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61698526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61837588", "body": "Extra empty line detected at block body beginning.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61837588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61837597", "body": "Line is too long. [190/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61837597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61837598", "body": "Line is too long. [170/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61837598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61837599", "body": "Line is too long. [122/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61837599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61837600", "body": "Line is too long. [129/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61837600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61911206", "body": "Line is too long. [122/120](https://github.com/bbatsov/ruby-style-guide#80-character-limits)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61911206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61911207", "body": "Line is too long. [129/120](https://github.com/bbatsov/ruby-style-guide#80-character-limits)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61911207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61911208", "body": "Missing frozen string literal comment.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61911208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61949305", "body": "Line is too long. [136/120](https://github.com/bbatsov/ruby-style-guide#80-character-limits)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61949305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61949306", "body": "Variable `source` used in void context.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61949306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61949307", "body": "Do not use prefix `_` for a variable that is used.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61949307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61977520", "body": "Line is too long. [85/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61977520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61977521", "body": "Unnecessary spacing detected.<br>Operator `?` should be surrounded by a single space.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61977521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61977522", "body": "Line is too long. [92/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61977522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61977523", "body": "Line is too long. [83/80]\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61977523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61977525", "body": "Line is too long. [82/80]<br>Prefer single-quoted strings inside interpolations.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/61977525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62141836", "body": "Unnecessary spacing detected.<br>Operator `?` should be surrounded by a single space. (https://github.com/bbatsov/ruby-style-guide#spaces-operators)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62141836/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62141837", "body": "Do not write to stdout. Use Rails' logger if you want to log.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62141837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62141838", "body": "Do not write to stdout. Use Rails' logger if you want to log.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62141838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62141839", "body": "Do not write to stdout. Use Rails' logger if you want to log.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62141839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62141840", "body": "Do not write to stdout. Use Rails' logger if you want to log.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62141840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62141841", "body": "Do not write to stdout. Use Rails' logger if you want to log.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62141841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62141842", "body": "Do not write to stdout. Use Rails' logger if you want to log.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62141842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62141844", "body": "Do not write to stdout. Use Rails' logger if you want to log.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62141844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62141845", "body": "Do not write to stdout. Use Rails' logger if you want to log.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62141845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62141847", "body": "Do not write to stdout. Use Rails' logger if you want to log.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62141847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62141848", "body": "Do not write to stdout. Use Rails' logger if you want to log.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62141848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62141849", "body": "Do not write to stdout. Use Rails' logger if you want to log.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/62141849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/68636332", "body": "Unnecessary spacing detected.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/68636332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/68636333", "body": "Extra empty line detected at class body beginning.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/68636333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/68636335", "body": "Use the return of the conditional for variable assignment and comparison.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/68636335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/68636336", "body": "Missing frozen string literal comment.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/68636336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/68636337", "body": "Line is too long. [132/120](https://github.com/bbatsov/ruby-style-guide#80-character-limits)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/68636337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/68656711", "body": "Unnecessary spacing detected.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/68656711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/68656712", "body": "Use the return of the conditional for variable assignment and comparison.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/68656712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/68656714", "body": "Missing frozen string literal comment.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/68656714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/68656715", "body": "Line is too long. [132/120](https://github.com/bbatsov/ruby-style-guide#80-character-limits)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/68656715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/74688952", "body": "1 trailing blank lines detected. (https://github.com/bbatsov/ruby-style-guide#newline-eof)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/74688952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/74688954", "body": "1 trailing blank lines detected. (https://github.com/bbatsov/ruby-style-guide#newline-eof)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/74688954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/74689055", "body": "Extra empty line detected at class body beginning.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/74689055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/74689056", "body": "Favor `format` over `String#%`. (https://github.com/bbatsov/ruby-style-guide#sprintf)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/74689056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/74689057", "body": "Use snake_case for method names. (https://github.com/bbatsov/ruby-style-guide#snake-case-symbols-methods-vars)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/74689057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/74689058", "body": "Favor `format` over `String#%`. (https://github.com/bbatsov/ruby-style-guide#sprintf)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/74689058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/74689059", "body": "Favor `format` over `String#%`. (https://github.com/bbatsov/ruby-style-guide#sprintf)<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping. (https://github.com/bbatsov/ruby-style-guide#consistent-string-literals)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/74689059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/80542513", "body": "Extra empty line detected at module body end.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/80542513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/80542514", "body": "Surrounding space missing in default value assignment. (https://github.com/bbatsov/ruby-style-guide#spaces-around-equals)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/80542514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/80542517", "body": "Line is too long. [121/120](https://github.com/bbatsov/ruby-style-guide#80-character-limits)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/80542517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/80542519", "body": "Surrounding space missing in default value assignment. (https://github.com/bbatsov/ruby-style-guide#spaces-around-equals)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/80542519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/83728438", "body": "Missing frozen string literal comment.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/83728438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/83728439", "body": "Missing frozen string literal comment.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/83728439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/83729929", "body": "Align .select with class_introspector on line 260.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/83729929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/83729930", "body": "Align .class_macros with class_introspector on line 260.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/83729930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/83729932", "body": "Line is too long. [167/120](https://github.com/bbatsov/ruby-style-guide#80-character-limits)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/83729932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/83729934", "body": "Line is too long. [172/120](https://github.com/bbatsov/ruby-style-guide#80-character-limits)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/83729934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/83729936", "body": "Line is too long. [195/120](https://github.com/bbatsov/ruby-style-guide#80-character-limits)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/83729936/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215459", "body": "Missing frozen string literal comment.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215467", "body": "Align .map with class_introspector on line 7.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215469", "body": "Align .select with class_introspector on line 7.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215470", "body": "Align .class_macros with class_introspector on line 7.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215471", "body": "Missing frozen string literal comment.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215471/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215474", "body": "Keep a blank line before and after private.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215476", "body": "Extra blank line detected.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215479", "body": "Use the return of the conditional for variable assignment and comparison.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215481", "body": "Missing frozen string literal comment.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215483", "body": "Missing frozen string literal comment.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215485", "body": "Use delegate to define delegations.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215487", "body": "Missing frozen string literal comment.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215488", "body": "Align .select with class_introspector on line 45.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215489", "body": "Align .class_macros with class_introspector on line 45.\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215493", "body": "Line is too long. [167/120](https://github.com/bbatsov/ruby-style-guide#80-character-limits)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215493/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215495", "body": "Line is too long. [172/120](https://github.com/bbatsov/ruby-style-guide#80-character-limits)\n", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/85215495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509069", "body": "Missing frozen string literal comment.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509071", "body": "Align .map with class_introspector on line 7.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509072", "body": "Align .select with class_introspector on line 7.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509076", "body": "Align .class_macros with class_introspector on line 7.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509076/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509079", "body": "Missing frozen string literal comment.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509080", "body": "Keep a blank line before and after private.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509081", "body": "Extra blank line detected.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509083", "body": "Use the return of the conditional for variable assignment and comparison.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509085", "body": "Missing frozen string literal comment.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509087", "body": "Missing frozen string literal comment.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509089", "body": "Use delegate to define delegations.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509092", "body": "Missing frozen string literal comment.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509092/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509094", "body": "Align .select with class_introspector on line 45.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509095", "body": "Align .class_macros with class_introspector on line 45.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509096", "body": "Line is too long. [167/120] (https://github.com/bbatsov/ruby-style-guide#80-character-limits)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509096/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509097", "body": "Line is too long. [172/120] (https://github.com/bbatsov/ruby-style-guide#80-character-limits)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509436", "body": "Rename has_and_belongs_to_many to has_and_belongs_to_many?. (https://github.com/bbatsov/ruby-style-guide#bool-methods-qmark)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509438", "body": "Rename has_one to has_one?. (https://github.com/bbatsov/ruby-style-guide#bool-methods-qmark)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509439", "body": "Rename has_many to has_many?. (https://github.com/bbatsov/ruby-style-guide#bool-methods-qmark)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509441", "body": "Missing frozen string literal comment.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92509441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92511661", "body": "Missing frozen string literal comment.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92511661/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92512249", "body": "Align .select with class_introspector on line 46.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92512249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92512250", "body": "Align .class_macros with class_introspector on line 46.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92512250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92512251", "body": "Align .map with class_introspector on line 8.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92512251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92512253", "body": "Align .select with class_introspector on line 8.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92512253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92512254", "body": "Align .class_macros with class_introspector on line 8.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92512254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92512256", "body": "Unnecessary spacing detected.<br>Operator = should be surrounded by a single space. (https://github.com/bbatsov/ruby-style-guide#spaces-operators)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92512256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92512258", "body": "Freeze mutable objects assigned to constants.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/92512258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/106704324", "body": "Line is too long. [157/120] (https://github.com/bbatsov/ruby-style-guide#80-character-limits)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/106704324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/106704589", "body": "Line is too long. [130/120] (https://github.com/bbatsov/ruby-style-guide#80-character-limits)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/106704589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/106739517", "body": "Space between { and | missing.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/106739517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/106739518", "body": "Line is too long. [146/120] (https://github.com/bbatsov/ruby-style-guide#80-character-limits)<br>Space missing to the left of {.<br>Space missing inside {.<br>Space missing inside }.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/106739518/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/106739519", "body": "Incorrect indentation detected (column 8 instead of 10).", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/106739519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/106740003", "body": "Align .select with class_introspector on line 30.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/106740003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/106740004", "body": "Align .children with class_introspector on line 30.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/106740004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/106740005", "body": "Align .class_begin with class_introspector on line 30.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/106740005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/106740006", "body": "Align .parsed_source with class_introspector on line 30.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/106740006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/108003781", "body": "Line is too long. [149/120] (https://github.com/bbatsov/ruby-style-guide#80-character-limits)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/108003781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/123838241", "body": "Line is too long. [149/120] (https://github.com/bbatsov/ruby-style-guide#80-character-limits)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/123838241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/123838242", "body": "Add an empty line after magic comments. (https://github.com/bbatsov/ruby-style-guide#separate-magic-comments-from-code)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/123838242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/123838243", "body": "Extra empty line detected at module body end. (https://github.com/bbatsov/ruby-style-guide#empty-lines-around-bodies)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/123838243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/123838244", "body": "Extra empty line detected at module body beginning. (https://github.com/bbatsov/ruby-style-guide#empty-lines-around-bodies)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/123838244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/123838245", "body": "Missing magic comment # frozen_string_literal: true.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/123838245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/123841577", "body": "Incorrect indentation detected (column 12 instead of 10).", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/123841577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/123841578", "body": "Extra empty line detected at module body end. (https://github.com/bbatsov/ruby-style-guide#empty-lines-around-bodies)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/123841578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/123841579", "body": "Extra empty line detected at module body beginning. (https://github.com/bbatsov/ruby-style-guide#empty-lines-around-bodies)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/123841579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/141922367", "body": "Redundant self detected. (https://github.com/bbatsov/ruby-style-guide#no-self-unless-required)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/141922367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/141922369", "body": "Redundant self detected. (https://github.com/bbatsov/ruby-style-guide#no-self-unless-required)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/141922369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/141922370", "body": "Missing magic comment # frozen_string_literal: true.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/141922370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/141927272", "body": "Omit parentheses for ternary conditions.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/141927272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/151739725", "body": "Redundant use of Object#to_s in interpolation. (https://github.com/bbatsov/ruby-style-guide#no-to-s)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/151739725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/151739726", "body": "end at 16, 29 is not aligned with if at 8, 42.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/151739726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/151739727", "body": "Align else with if.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/151739727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/151739728", "body": "Align elsif with if.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/151739728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/151739730", "body": "Use 2 (not -11) spaces for indentation. (https://github.com/bbatsov/ruby-style-guide#spaces-indentation)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/151739730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/154404232", "body": "Line is too long. [155/120] (https://github.com/bbatsov/ruby-style-guide#80-character-limits)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/154404232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/154404234", "body": "Useless private access modifier.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/154404234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/154404236", "body": "Surrounding space missing in default value assignment. (https://github.com/bbatsov/ruby-style-guide#spaces-around-equals)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/154404236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/154404238", "body": "Line is too long. [142/120] (https://github.com/bbatsov/ruby-style-guide#80-character-limits)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/154404238/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/154404239", "body": "Line is too long. [155/120] (https://github.com/bbatsov/ruby-style-guide#80-character-limits)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/154404239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/154404240", "body": "Useless private access modifier.", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/154404240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/154404241", "body": "Surrounding space missing in default value assignment. (https://github.com/bbatsov/ruby-style-guide#spaces-around-equals)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/154404241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/154404242", "body": "Line is too long. [142/120] (https://github.com/bbatsov/ruby-style-guide#80-character-limits)", "reactions": {"url": "https://api.github.com/repos/zeisler/active_mocker/pulls/comments/154404242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}]}}}}