{"_default": {"1": {"kusma": {"issues": [], "commits": [{"url": "https://api.github.com/repos/grate-driver/grate/commits/3a21621ac7669a54189f39660042376a382a79d0", "message": "Merge pull request #56 from digetx/correct-frag-disasm-fmt\n\ngrate: fragment disasm: Correct ALU's disasm formatting"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/b30e05580ac6326a1ea5bac66cb11b04756bf498", "message": "Merge pull request #55 from digetx/3d-init-correction\n\nlibhost1x: correct 3d initialization"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/5852fb07c6311ebffaa8ddbc294baae0422c03e0", "message": "Merge pull request #54 from digetx/gles1-build-fix\n\ntests/gles1: fix compilation with newer mesa"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/a891fc5f9581c8b0e0f0e9ef1e32dac30877a85f", "message": "meson: ensure input is at the end\n\nSeems some versions of yacc requires this."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/a90f9034343bef5e50a3567dae5157fd84c93c09", "message": "Merge pull request #52 from kusma/fixup-libwrap\n\nFixup meson + libwrap"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/e49c36fd767b0ed306e996f1e947de670f009af1", "message": "meson: fix librnn-support\n\nThe old support was just broken, so let's fix it."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/75a9cf13f1430b34247b61f3a87a08eb970f223d", "message": "meson: avoid _FILE_OFFSET_BITS\n\nMeson always sets _FILE_OFFSET_BITS to 64, which replace references\nto open with open64. However, this also renames *our* open-symbol to\nopen64, which breaks things."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/ce78e073367c2da1a742dd29f67ff99fea15bb10", "message": "Merge pull request #51 from digetx/gr2d-cleanup\n\nGR2D cleanup"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/a509dcce4bf112e3317ad0c595e0b8cc10ffa49c", "message": "Merge pull request #49 from digetx/gr2d-ctx-test\n\nGR2D context switching test"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/047a996528cf9286ea1c889d3f57b00e0fe3ee9c", "message": "meson: detect and enable RNN"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/fe14011cfbb95d1ceec3a5e6d0df0f1081102268", "message": "meson: also build libwrap"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/3145ff935de4dd47adc286c836d0388ae2420933", "message": "libgrate: correct grammar in error message\n\nThis is clearly a typo, let's correct it."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/9f1d796c652e5c03deeaaaf351572771a9800a7e", "message": "libgrate: printf long long to avoid warning\n\noff_t doesn't have a designated format, so let's use uintmax_t\ninstead to prevent a warning."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/6d5a290b897e03d5555ebec75150810ccf4895a3", "message": "libhost1x: drop pointless init\n\nWe can't sensefully setup the viewport before knowing how big it\nis. So let's leave them as uninitialized until we later set them\nup for real."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/d42308831476029a1bfe79d7d3cf4dcc2a9a6671", "message": "libhost1x: remove two unused functions"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/09e4371e3f90e63062ad046cb19317c254c30a04", "message": "add meson build system\n\nMeson is quite a bit faster than Autotools, which seems like a good\nreason to try this out:\n\nFull rebuild, autotools:\n> real 300.18\n> user 235.32\n> sys 32.37\n\nFull rebuild, meson:\n> real 46.92\n> user 70.71\n> sys 11.24\n\nThe time above is the time './configure && make', and\n'meson . build && ninja -C build' took on my Toshiba AC100, measured\nusing '/usr/bin/time -p'.\n\nSo, less than a sixth of the time for a full rebuild, which is very\nneat. However, it's on partial rebuilds that it really shines:\n\nPartial rebuild, autotools:\n> real 30.60\n> user 21.07\n> sys 4.27\n\nPartial rebuild, meson:\n> real 2.27\n> user 1.92\n> sys 0.27\n\nIn this case, I touched src/libhost1x/host1x-gr3d.c, and rebuilt\nwith 'make' and 'ninja' respectively. And the result is pretty\nawesome, dropping to below a tenth of the build-time."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/70911fa4f71506e5d14eb38adb360374d1d3bca1", "message": "libgrate: rename lexer/parser sources\n\nThis seems to be a bit more traditional naming for these files, and\nwill make it a bit easier to create implicit rules for etc."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/2f28a90884c211358f3fc66ffa987e710bd65af0", "message": "cgc: drop pointless version-query\n\nThe version number has been 0.0.0 the whole time, and it's rather\nunlikely that we'll ever make real releases from grate. So let's\nget rid of this pretty pointless query."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/48429fc6118b74cb8a133cad6cc6251d77e83803", "message": "disambiguate gles-info programs\n\nHaving two programs with the same name is a bit confusing, and some\ntools have issues with it."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/b3721f0618b57736176218b9fa0b37fb0f4ef72f", "message": "sort gitignore"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/d94eb6bd87bca3dc7b869c1e2c29afa61bf0bfc7", "message": "libhost1x: add forgotten ifdef"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/bbc292575e660587999e3587b31eb302582db897", "message": "Merge pull request #44 from digetx/dump-raw-data-in-asmtool\n\nDump raw data in asmtool"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/6468d1a9f5bed1432bdf6b0dcd4e1de532bafb16", "message": "Merge pull request #42 from digetx/minimize-3d-initializtion\n\nlibhost1x: minimize 3d registers initialization"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/9633285004a3fd178b12662b8a17d8cebf0d75a1", "message": "Merge pull request #41 from digetx/master\n\nlibhost1x: setup display framebuffer offset"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/ba4dd19fdae41418350096b7fa0fd0f406644766", "message": "Merge pull request #40 from grate-driver/readme\n\nCreate README.md"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/c6dd55fb93a29218dd5b3e9fcff3f8f125926358", "message": "libwrap: restore memory-copying\n\nIn order to peek into command-buffers etc without re-mapping them,\nwhich can interfere with the user-space driver, we actually need to\ndo this.\n\nThis effectively reverts ca52e7b, and adds some spewing instead when\nwe try to write outside..."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/d59174b8120a7fe69b784e0873311a94d1a1352d", "message": "grate: factor out program-resetting\n\nWe know what these commands do, so let's facor them out properly."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/b177ffc767a020632351b3153a04c33a1b53aec5", "message": "grate: use IMM-writes to VP_UPLOAD_CONST_ID"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/84e31e8b73263c516229270a196077e3fc22f5ad", "message": "Merge pull request #36 from digetx/master\n\nSTORE opcode and fancier egl-x11-clear"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/0c3bcf461d4b280e6f18b44c09d3a36520d6abac", "message": "Merge pull request #35 from digetx/master\n\nPixbuf BO guard"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/b75c5a391fad4f9aff767c4ce35e44c569857708", "message": "Merge pull request #34 from digetx/master\n\nStencil buffer support and some more"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/332f5d3489f4132d3ffd82336d76131b53ddf157", "message": "Merge pull request #33 from digetx/master\n\nMake libgrate usable externally and some fixes along with it"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/cbea5b2961520192d8851205f039b1dd46c70544", "message": "Merge pull request #31 from digetx/master\n\nTexture filtering support, font rendering and some fixes"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/ca52e7bba5a7b830347864aaca2c5d17fdb5c1ff", "message": "libwrap: do not move memory\n\nWe're peeking into what the blob asks the kernel to do, not trying\nto take over the job. In this case, we're probably not equipped to\ndo it either, as this is probably intended to be done on physical\naddresses, not virtual ones."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/78dc8b8e04b04542dafad8440429f14c42813d62", "message": "Merge pull request #29 from digetx/master\n\nMore tests and some cleanup"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/fecdc437324be9ba014ced6cd58822edc9121bab", "message": "tests/grate: report failure without crashing\n\ngrate_program_new can fail, so let's report an error gracefully\ninstead of violating pre-conditions of the linker."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/20696969929e7fbb247c2ce2eceaedae1fa7e11b", "message": "grate: assert that program exists\n\nWhen building without the blob-compiler, some of the examples will\ncrash due to a null-pointer dereference right after this. Let's add\nan assert to show the pre-condition in this code a bit more clearly."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/ef2a2971427bccfeb62752f55808e4e332d87273", "message": "Merge pull request #27 from digetx/master\n\nCouple corrections"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/a0e20f510c931f4b178ab361e7b066d76212fe5f", "message": "Merge pull request #26 from digetx/master\n\nMore grate tests"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/7e642a9524fd10aee8dd005904fc110ed3060f41", "message": "Merge pull request #24 from digetx/master\n\nDepth buffer support and some refactoring"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/ffd98543d296fc6c6b00a387942144127ef14cbe", "message": "define symbolic constant for nvmap alloc heaps"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/7e0da4ed2ae21b4f7b861a160a7ffe66f2ff45fc", "message": "remove high-byte noise from alloc-flags\n\nInspecting the kernel-source, it's clear that these flags serve no\nreal purpose. Perhaps they are used when debugging the kernel or\nsomething along those lines. Either way, they don't seem to serve\nus any purpose."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/7a2d91ccb06c564e5a902481dd235f021fc6e91a", "message": "define symobilc constants for nvmap alloc flags"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/6a340df5716cb99f60cdc9f125d5ce59d6cac1e1", "message": "Merge pull request #22 from digetx/master\n\nSome fixes, cleanups and new features"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/414d6ea6ec3107fe2f16dfde5fdb6442c99e3414", "message": "Merge pull request #21 from digetx/master\n\nInitial textures support in the fragment asm and couple other changes"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/e2e27cd220b66d11fa046ef447e65f148c93e9c1", "message": "Merge pull request #20 from digetx/master\n\nMFU mul's and other syntax updates"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/4c160388a9917b5f90822ddfa7509b1ab9d2234d", "message": "libwrap: add forward-decl of __libc_realloc\n\nThis prevent a compile-time warning."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/5f99f0149e085e02803ec7bac9263042e6d58d7d", "message": "libwrap: fix argument name again\n\nLast time I fixed this argument, I forgot to update the\nforward-declaration. So let's update that now!"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/d207b9f6780436448c8c21fd586400dbeb572721", "message": "libcgc: add missing words to CgDrv\n\nFrom peeking at the allocation, it's clear that this struct is a\ncouple of words longer than previously thought."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/bf11c4fd7f378726810203b0bb477f7e587ab1ec", "message": "libwrap: wrap realloc as well"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/d263bcb7eca74703e954017d046ed0c2338e5979", "message": "libwrap: fix argument name"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/aaf0381580bcb3db14d7893227e5c2daaa9ad702", "message": "shaders: fixup inputs for min/max"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/347b0690b80662b9c70d358ea8de2701a9d99816", "message": "Merge pull request #15 from digetx/master\n\nUniforms in asm and some more"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/65f666e25df3c5d40b41bc8877bb899d1f7c225b", "message": "libcgc: mark pointers as pointers\n\nThese are clearly pointers, as they keep moving around when the\nheap moves. So let's mark them as such."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/49f1613c0aa5c346b732912ea7696303b46ac8b0", "message": "libcgc: factor out hexdumping"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/670ddc24283b72b23a86c5b7214a0951fc36b223", "message": "libwrap: use printf to print pointers\n\nThis code wrote bogus pointers for me. I'm guessing it's some\nattempt at avoiding calling libc in fundamental functions, but it\nlooks like it just got tripped over by libc itself (probably\nstdio-buffering, through puts).\n\nAny way, this should be no less of a problem in malloc than it is\nin free, so let's just ignore the problem and use printf. Seems\nto work just fine to me..."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/6646b9cf9bff6fcf3bd819b833b744f0b2d12ab2", "message": "libwrap: fix malloc/free wrappers\n\nI don't quite know why, but these just crashed deep inside libc\nfor me. But this is needlessly involved, let's just use the\nglibc-builtins for this instead. Which has the addede benefit of\nworking for me ;)"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/21b6dfb99c9c0eb6189eedffd46b120241e5978b", "message": "revert bad parts of 65442a10\n\nThe for-loops in these functions depend on being able to calculate\n-1 for the no-op cases.\n\nFixes crashes for me."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/2f311049192576da7df85ca0fe566f30dbe54ce7", "message": "grate: consolidate cull-flags\n\nThis allows us to use OpenGL semantics, and reduces the amount of\nfunction calls a tad."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/98b346a7320c1b24abfa4cd287ec94ff1ecec21a", "message": "Merge pull request #13 from digetx/master\n\nGrate 3d API, textures, refactoring and some fixes"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/8e4f985ed7f05243b0d40ae580d9316199eae1f7", "message": "tests/grate: cull back-faces for cube-textured"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/730e5e3a55e5b1ec24d140594ec31e8a5361d8ba", "message": "tests/grate: make triangle-winding consistent\n\nThis makes all triangles counter-clockwise, so we can start doing\nbackface culling."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/44728ff10a9122f50aa8bb6c0fe9071d29cff240", "message": "Merge pull request #12 from digetx/master\n\nDisplay support for nvhost, libwrap works under root and minor refactoring"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/dd1f4882331d8464cf3d4e33e61071f9738e7aa4", "message": "Merge pull request #11 from digetx/master\n\nTRAM swizzle fix, ALU KILL register + minor stuff"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/4f6156468540343670c1f74d6e9079c0adbd3885", "message": "add GL_EXT_Cg_shader example"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/76ca1eb1d7b16b715044e9aacb08c009f2c20d5c", "message": "Merge pull request #9 from digetx/master\n\nFragment asm fix + some cleanup"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/760058dbd05c91f524575acc2ac54f9e1a5ea134", "message": "Merge pull request #8 from digetx/master\n\nFragment/lnker asm/disasm + minor fixes"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/3bda66e362370cd49950b96af0b624830d843dca", "message": "add a gl_LastFragData shader"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/749623f0a7e8b503202afe24e7d438d578c6fefd", "message": "Merge pull request #7 from digetx/master\n\nVertex assembler"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/44083068", "body": "Hmm, interesting. I never installed grate, as it's not really useful for me installed. What was your motivation for you to install?\n\nPerhaps libwrap should be marked as noinst? @thierryreding, what do you think?\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/44083068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/44132613", "body": "Ah, true. Yeah, perhaps that's better.\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/44132613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71225821", "body": "Looks good, thanks!\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71225821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71385488", "body": "Looks good, thanks!\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71385488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71385999", "body": "I'm not quite sure what you're referring to...\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71385999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71386393", "body": "I think that's just artifacts from how the init-sequence was dumped from the proprietary driver.\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71386393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71386550", "body": "No, I don't know :/\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71386550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71387566", "body": "Aha. Is that emulator available somewhere? sounds useful!\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71387566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71388707", "body": "Nah, just curious. But please let me know when you decide to make it public :)\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71388707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71428467", "body": "Good call, thanks!\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71428467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71428545", "body": "Oooh, super-sweet :)\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71428545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71463940", "body": "I don't think I've done enough REing for it to be possible to do gr3d properly, I currently don't understand the linking-programs located on offset 0x300 and upwards (and it seems 0xe20 and 0xe21 somehow also plays a role). 0x300 seems to be a program that copies from the output buffer of the vertex shader into the TRAM (triangle ram) for the rasterizer/fragment shader to consume, but I haven't figured out it's ISA yet.\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71463940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71468211", "body": "Yeah, I noted that on https://github.com/grate-driver/grate/wiki/Shader-Linking\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71468211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71468329", "body": "(I did see clear patterns in every second dword)\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71468329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71569061", "body": "@digetx: Not that I know. I have two setups myself, one running the downstream kernel, and one running the upstream kernel.\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71569061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71569338", "body": "Oh, the xorg-driver, not the kernel-driver. I guess my answer is still no, but I mostly run tests using a pbuffer-context from a console. But I do need the x-server running, and to set DISPLAY to \":0\", so I don't actually have to deal with all the rendering-bugs...\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71569338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71569493", "body": "Oh, and I poked around a bit more tonight, and think I got somewhere with the 0x3xx registers, see https://github.com/grate-driver/grate/wiki/Shader-Linking for the details.\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71569493/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/72539184", "body": "Fixed.\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/72539184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/153163052", "body": "What was the problem with this approach?\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/153163052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/153167332", "body": "FWIW, this looks reasonable (and more importantly, correct) to me.\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/153167332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/153174938", "body": "Merged, thanks :)\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/153174938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/265167069", "body": "Yeah, the fragment shader really need some low-level peeking to figure out the timing etc :)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/265167069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/265396078", "body": "@digetx: A wiki page for the ASM syntax description would be nice, yeah :)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/265396078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/271547025", "body": "Awesome stuff!", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/271547025/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 1, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/272722302", "body": "Nice!", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/272722302/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/273933631", "body": "Nice!", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/273933631/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/276457873", "body": "I forgot to say, very nice work! My nits are very minor, and I really like the result :)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/276457873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/276503939", "body": "I really look forward to getting the cube-texture example transitioned to ASM-shaders, and we'll finally have a fully functional, blob-free, meaningful 3d example :)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/276503939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/276508399", "body": "Yeah. Or just enable backface culling ;)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/276508399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/276509285", "body": "Hmm, seems culling doesn't really work. Either that, or we've messed up the vertex-order. I'll have a look.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/276509285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/277820567", "body": "Apart from the detail above, I think this is pretty nice :)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/277820567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/278632843", "body": "Yeah, I think moving to your disasm for blob-generated disassembly would be a better move. I don't care much how it's done ;)\r\n\r\nI still want to figure out a bit more about the data-structures that the blob-compiler uses. Our libcgc-stuff is pretty hacky in figuring out where the binary code is etc. I have a feeling there's some more sane C-ism to it.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/278632843/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/278642836", "body": "Yeah, and swizzles for linking texture sampler-inputs", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/278642836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/280337423", "body": "While that's not a bad idea, I'm not sure it's really worth the hassle... The malloc/ioctl-tracing is pretty rarely used these days, at least by me.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/280337423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/288577102", "body": "Great stuff :)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/288577102/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/288585489", "body": "This is just a quick follow-up to the previous PR", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/288585489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/288849306", "body": "making a game? ;)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/288849306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/288849403", "body": "Looks good :)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/288849403/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/289295482", "body": "@digetx: Yeah, they do. I just wanted to be consistent in terms of API usage :)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/289295482/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/291535088", "body": "I didn't pull yet!", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/291535088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/291577898", "body": "Great stuff :)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/291577898/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/295647930", "body": "The naming here seems a bit confused to me... [\"guard band\"](http://developer.download.nvidia.com/assets/gamedev/docs/Guard_Band_Clipping.pdf) is already used as a term in 3D renderering, but not for something like this...", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/295647930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/298168240", "body": "Sorry, I kind of forgot about this one. I'm not crazy about it as-is... it seems like useful debugging functionality, but I'm not so sure about it being on always. Wouldn't it be OK to make it opt-in instead?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/298168240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/300635476", "body": "Hmm, I get an undefined symbol about `sinf@GLIBC_2.4` in egl-x11-clear after this change...  I need to link with `-lm` on my setup... ", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/300635476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/305432079", "body": "@digetx: Aha, interesting. I'll rework this later, then :)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/305432079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/309303206", "body": "@digetx: OK, dropped the code-removal in favor of just moving and naming things a bit more.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/309303206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/309309744", "body": "@digetx: Yeah. My understanding is that this is when the application calls the kernel-driver with incorrect parameters, and there's such a case in the GLES-driver. I'm not entirely sure what happens in the blob-case, apart from it not crashing...", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/309309744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/309501375", "body": "@digetx: Somehow doesn't seems like it. I'm not really sure, but this made this go away. I don't really care though, so if you don't like this, let's drop it.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/309501375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/309528646", "body": "I might have scanned the output too quickly. In either case, let's drop this.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/309528646/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/318217657", "body": "The only things I know of that this is lacking compared to the autotools-system is:\r\n- Generating pkgonfig-files. This is [not very hard to do](http://mesonbuild.com/Pkg-config-files.html), but I'm not very convinced it's really nessecary. @digetx, you added the pkgconfig-file generation initially... what do you use it for?\r\n- The ability to opt-out of building GLES-tests. Since meson is so much faster, I didn't feel like this was nessecary to support. It also wouldn't be the hardest thing ever to add if needed.\r\n\r\nI'm also not (yet?) proposing we remove the automake-files. I'd rather we test this out a bit in-tree before we do something drastic ;)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/318217657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/318361715", "body": "@digetx: Yeah, after trying and failing a bit to try to get a workable cross-compiling setup, I decided to just try to make my existing workflow better instead ;)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/318361715/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 1, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/318467730", "body": "@digetx: updated with some cleanups:\r\n- fixed the typo you pointed out (tests -> tools etc)\r\n- switched to implicit rules for parsers/lexers\r\n\r\nTo do the latter, I had to rename the sources. It's a bit boring, but matching artifact-names and source names seems reasonable to me, so whatever ;)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/318467730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/318499256", "body": "@digetx: Good call, fixed.\r\n\r\nI get the warning when building with meson. I believe meson use a bigger set of default warnings than autotools, perhaps that's why?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/318499256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/330948981", "body": "Nice catch! ", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/330948981/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/331706579", "body": "@digetx: I've patched my latest mesa-branch for this problem, thanks!", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/331706579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/95340490", "body": "I *think* I know what most of the unk-stuff here is, but I'll look into that after this PR!", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/95340490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/95341389", "body": "Nice. In the long run, I think this belongs in the kernel. though!", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/95341389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/95351123", "body": "Generally speaking, it seems to be some \"minor\" instructions, setting up barycentric interpolation coefficients. (there's some internal registers for this, it seems). The blob seems to pretty much set this up with constants, though.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/95351123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/95353147", "body": "It actually seems to be instructions (and use the RCP-instruction from the MFU unit for the division), but using some special register outputs for the weights.\r\n\r\nMy hope is that this can be used to implement things like flat-interpolation, for instance.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/95353147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/95365399", "body": "@digetx: Ah, I didn't yet see that. I was hoping for something like that, but my earlier experiments didn't reveal such a bit. I guess I made a mistake, this is much nicer!", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/95365399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/95662949", "body": "Whops, yeah. My memory is not all that great. I even tested it! ;)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/95662949/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98731318", "body": "Huh, is `?:` a valid C operator? Some googling didn't make this clear...", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98731318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98733588", "body": "Hmm, I'm not loving mixing the tiling into the pixel format, as those are completely orthogonal features... Tiling is the order the pixels are stored, whereas the pixel format is the order the components of the pixels are stored. IIRC, the hardware even tiles on byte-sizes, as opposed to pixel-sizes.\r\n\r\nI think we should instead have an `enum pixel_layout { PIX_BUF_LAYOUT_LINEAR = 0, PIX_BUF_LAYOUT_TILED = 1 }` or something.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98733588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98734476", "body": "I'm not 100% sure this is the best interface. We might want to allocate several miplevels in the same buffer, for instance. But, we don't need to do that *right now*, so maybe this is nice for the time being.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98734476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98735435", "body": "These should probably use `PIXEL_FORMAT_RGB565` etc from the rnndb-generated header, no?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98735435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98740083", "body": "This is a small nit, but \"actual\" sounds a bit too abstract to me. How about using OpenGL terms (draw-buffer), and say `grate_get_draw_pixbuf` instead?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98740083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98740931", "body": "If we want to play by OpenGL-rules, dithering is not a render-target state, but a general render-state; switching render-target keeps the current dither-state.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98740931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98741798", "body": "While this is the way OpenGL used to do things like this, bindless is now the new wine, where the texture object is specified directly. And especially for a low-level API, I think the following makes a lot more sense; perhaps we make it up to the callee to keep track of what object they want to modify (e.g pass `struct grate_texture *` to these functions instead of `struct grate_3d_ctx *`)? That would surely lead to less boiler-plate code...", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98741798/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98770004", "body": "Ah, I see.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98770004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98776698", "body": "Ah, I see. If it was just a global state, we wouldn't be able to change it per target. So yeah, I think I agree.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98776698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98776881", "body": "Cool.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98776881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/99498219", "body": "Yeah, that was my reasoning as well; this move can come later \ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/99498219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/99498250", "body": "And yeah, I guess it would make sense to print (or just assert) in default instead.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/99498250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/99688646", "body": "This seems like you're setting up a symobol per scalar value. Is that so? If so, I don't think it's a great idea.\r\n\r\nI think it'd be better if we used the types already defined in glsl_type, and augmented it with a precision-value. We could use location to device between GRATE_TYPE_FX10_LOW and GRATE_TYPE_FX10_HIGH, by requiring GRATE_TYPE_FP20 to be aligned to multiples of two, and letting the last bit of location as a differentiator for FX10...", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/99688646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/99689596", "body": "By the way, it'd be totally fine to just support GLSL_TYPE_FLOAT as a first approach.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/99689596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/99689821", "body": "And we might not want to keep the GLSL-prefixes here. There's no point in differentiating between GLSL-types and other types. IMO...", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/99689821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/99691040", "body": "The reason why I care about this, is that I don't want combinatory explosion here. Types like this explode very quickly...\r\n\r\nIn fact, we might want to have something like vector/matrix-sizes... Hmm, dunno, maybe I'm over-thinking this now...", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/99691040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108034213", "body": "Hmm, this looks like we need the transpose of what something like [GLM would produce](https://github.com/g-truc/glm/blob/e8962dda2a2652a6a97432449681a4366876fc84/glm/gtc/matrix_transform.inl#L274)... Perhaps we should just switch to using GLM for the computations, and make our upload-code transpose instead (or perform matrix multiplications the other way around in the shader)?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108034213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108035760", "body": "My thought was that it has kind of become the canonical OpenGL matrix library. But it being C++ is probably a show-stopper for that, didn't think of that. But I'm a bit confused that this doen't seem to match what GLM does. `Result[3][2]` seems like i would match `.wz`, not `.zw`... ", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108035760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108035827", "body": "Also column-major vs row-major is kind of irrelevant here, it's a notation-thing, not a memory-layout thing. The relevant information is row-vectors vs column-vectors.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108035827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108035948", "body": "Yeah, I think we've just doing the wrong memory-layout for all of our matrices.\r\n\r\nhttps://github.com/digetx/grate/blob/7ff314d7b7aa37a69a425232f1089a87463f218a/src/libgrate/matrix.c#L72\r\n\r\nThis corresponds to the fourth float:\r\n\r\nhttps://github.com/digetx/grate/blob/7ff314d7b7aa37a69a425232f1089a87463f218a/src/libgrate/matrix.h#L29\r\n\r\nHowever, it should be the twelfth float:\r\n\r\nhttps://github.com/mesa3d/mesa/blob/master/src/mesa/math/m_matrix.c#L1098", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108035948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108035974", "body": "At least this change makes us consistently wrong, so let's do this, and flip the matrices later (we can just change the order of the named components and update the shader-code accordingly, I guess).", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108035974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108036493", "body": "Row-major vs column-major only matters when you write matrices mathematically, it doesn't dictate the memory-layout of the matrix. It's a notation-thing, not a memory-layout thing.\r\n\r\nAn GLSL supports both column-vectors *and* row-vectors, you can do `mat4 * vec4` or `vec4 * mat4`, and they do different operations.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108036493/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108036835", "body": "And what we're doing doen't seem to match column-major even if we interpret column-major as meaning memory layout (which seems to be what the OpenGL specification and [Wikipedia claims](https://en.wikipedia.org/wiki/Row-_and_column-major_order), so I guess that part of argument was flawed), because OpenGL 2.1 defines:\r\n\r\n> LoadMatrix takes a pointer to a 4 \u00d7 4 matrix stored in column-major order as 16\r\n> consecutive floating-point values, i.e. as\r\n> a1 a5 a9 a13\r\n> a2 a6 a10 a14\r\n> a3 a7 a11 a15\r\n> a4 a8 a12 a16\r\n\r\nAnd:\r\n\r\n> The arguments to\r\n> void Translate{fd}( T x, T y, T z );\r\n> give the coordinates of a translation vector as (x y z)^T . The resulting matrix is a translation by the specified vector:\r\n> 1 0 0 x\r\n> 0 1 0 y\r\n> 0 0 1 z\r\n> 0 0 0 1\r\n\r\nWhich shows that the matrix is intended to be the transpose of what i.e mat4_translate produces.\r\n\r\nAlso, for this particular case, the glFrustum (which is the closest thing defined in OpenGL) is defined as:\r\n\r\n> The corresponding matrix is\r\n> (2n) / (r\u2212l), 0, (r+l) / (r\u2212l), 0\r\n> 0, (2n) / (t\u2212b), (t+b) / (t\u2212b), 0\r\n> 0, 0 -(f+n) / (f\u2212n), -(2fn) / (f\u2212n)\r\n> 0, 0, \u22121, 0\r\n\r\nWhich, according to the order defined in LoadMatrix, would mean \"wz\" would be the right memory location for `-2.0f * near * far / depth`.\u00a8", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108036835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108037374", "body": "Yeah. I'm fine with making things consistently row-major, though. I'd like if we could be consistent with OpenGL also, but it's less important ;)\r\n\r\nSo, let's do this as-is, and possibly change our layout later, OK?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108037374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109304509", "body": "The \"common\" way of doing this, is to consider these two different opcodes, [TEX](http://gallium.readthedocs.io/en/latest/tgsi.html#opcode-TEX) and [TXB](http://gallium.readthedocs.io/en/latest/tgsi.html#opcode-TXB)...", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109304509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109308483", "body": "TEX2 is about shadow cube-map arrays, though, how is that related?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109308483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109320270", "body": "This is a huge jump-table, using compiler-specific range-based case-statements... How about just doing __builtin_clz() instead? :)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109320270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109320428", "body": "This isn't really important, but I'm having a bit of difficulty liking this name-change. I know that I merged it in envytools, but I'm having a bit of second thought here... What's wrong with `mag`, `min`, `mip` names? These are the names that D3D uses for the filtering modes, I've never seen OpenGL refer to these apart from that wiki-site you listed (which is more of a textual explanation than \"terminology\")...\r\n\r\nBasically, every time I read these, I get a little bit confused. I guess I'm just so used to the old names...", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109320428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109321305", "body": "The \"min\"-filter is what happens to a single texture image when it's being minified (similar to magfilter), and the \"mip\"-filter is how the results of the min/mag-filters gets combined. So unless I'm confused, I think that would be:\r\n\r\nMINFILTER == MINFILTER_LINEAR_WITHIN\r\nMIPFILTER == MINFILTER_LINEAR_BETWEEN ", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109321305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109321538", "body": "Oh, OK. I still think a single instruction is slightly better, but it's not at all important. Let's just leave it like this for now.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109321538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109321584", "body": "@digetx: Nah, I think it all looks very reasonable. Sorry for being a bit nit-picky here ;)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109321584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109322224", "body": "Fair enough!", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109322224/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109599056", "body": "We already have a function in grate-3d.c called `log2_size` that has slightly different semantics. I find this a bit confusing, perhaps we could use a different name for one of the, or use this version for both and check `log2_width == pixbuf->width && log2_height == pixbug->height` instead of `log2_width >= 0 && log2_height >= 0` in `grate_3d_set_texture_desc`?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109599056/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110851358", "body": "Hmpf, this is a bit nasty IMO (having to worry about outer scopes just to avoid using an inline function, underscore identifiers being reserved by the compiler)... Maybe sticking the logic inside a static-inline helper is nicer? Something like\r\n\r\n```c\r\nstatic inline struct host1x_bo *host1x_bo_create_helper(struct host1x *host1x, size_t size, int flags, const char *file, int line)\r\n{\r\n\tstruct host1x_bo *bo = host1x_bo_create(host1x, size, flags);\r\n\tif (!bo)\r\n\t\tfprintf(stderr,\r\n \t\t\t\"ERROR: %s:%d: host1x_bo_create() failed\\n\",\r\n\t\t\tfile, line);\r\n\treturn bo;\r\n}\r\n#define HOST1X_BO_CREATE(host1x, size, flags) host1x_bo_create_helper(host1x, size, flags, __FILE__, __LINE__)\r\n```\r\ninstead?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110851358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110852261", "body": "maybe call this one `host1x_gr2d_clear_rect` instead?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110852261/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110852923", "body": "...and this one `grate_texture_clear_rect`?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110852923/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110853081", "body": "perhaps `grate_init_fd` (or `grate_init_with_fd`)?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110853081/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110856709", "body": "I think this function is needlessly complicated, because it seems to allow interpreting overlapping memory as wildly different things. Sure, sub-allocations will allow multiple allocations of different format/pitches inside the same BO. But those allocations will not overlap. There's some use-cases where untyped textures are used (but not on T20-class hardware, more like OpenGL 4.x hardware), but in these cases the texel-size is known (you can overlay float32 on int32 and rgba8888 etc, but not on int16 etc). Two separate sub-allocations shouldn't overlap in memory.\r\n\r\nSo, I think we can first early-out on `src_orig != dst_orig`, then on `src_orig->offset != dst_orig->offset` (different sub-allocations). Then we can assert that the sizes are the same (just in case we somehow botched a sub-allocation). After that, the rest becomes a lot easier, as we *know* that the format and pitch have to be the same. Basially, we need to do a rectangle overlap test, and finally compare the top-left points.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110856709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110885197", "body": "@digetx: Yeah, probably. But that feels like a separate change... Do as you like ;)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110885197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110885251", "body": "Yeah, just assert all the assumptions in case we ever change our minds ;)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110885251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110902384", "body": "TBH, I don't really care much for those macros myself. All they do is add some printing, they don't prevent the calling code from misbehaving as a result...", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110902384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110916627", "body": "Well, maybe we should add a call to abort here in that case?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110916627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110931306", "body": "Yeah, but then either the caller will have to deal with this (and in that case, it should probably do the error-reporting as well), or else we'll probably crash soon anyway", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110931306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110944049", "body": "Can't opentegra call the non-wrapped version of host1x_bo_create, then?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110944049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110944967", "body": "Just to be clear, these wrappers are not important to me, do as you please with them. If you want to keep this patch as-is, I'm fine with that. This was just a suggestion.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110944967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110957533", "body": "Right, and grate_create_texture already deals with this failing. Arguably, it wouldn't need to, it could call the un-wrapped version and print itself. But whatever ;) ", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110957533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110975415", "body": "Sure, I agree.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110975415/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/111941472", "body": "Huh, what happened here?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/111941472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/111943674", "body": "Hmm, looks a bit like we should namespace this, seem kinda risky for collisions (and inconsistent with other things here)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/111943674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/111946187", "body": "But these new urls are wrong, aren't they?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/111946187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/111946379", "body": "Yeah, that sounds reasonable to me...", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/111946379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/115856139", "body": "Why not `store rt1, r2, r3` and leave the TEX and ALU opcodes alone?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/115856139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/115870199", "body": "Ah, that's a good reason :)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/115870199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/129840100", "body": "Whops, yes! Good catch!", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/129840100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/129971003", "body": "I don't think it makes much sense. The viewport will have to be set to something useful before rendering anyway, leaving it at uninitialized seems easier.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/129971003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/131970332", "body": "I get a crash due to `dst` being `null` here on the downstream kernel...", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/131970332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/131974612", "body": "Maybe we can error out a bit more gracefully, though?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/131974612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/131979389", "body": "Since the rest of the code calls abort in case of trouble, perhaps just check if HOST1X_BO_EXPORT failed, and abort there also?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/131979389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "digetx": {"issues": [], "commits": [{"url": "https://api.github.com/repos/grate-driver/grate/commits/2a9d900321a5552b290266a8eff934b1874020ea", "message": "grate: fragment disasm: Correct ALU's disasm formatting\n\nThis minor typo seems harmless, nevertheless let's correct it."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/7a3c634e2c99780760f540fe8f46bed877cea768", "message": "libhost1x: correct 3d initialization\n\nOne register is mixed up, this fixes rendering if kernel driver resets\nall registers state to 0x0 on context initialization."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/80c834f6e97d25d9644d28d898f3ae02cfdef4d3", "message": "tests/gles1: fix compilation with newer mesa\n\nRecent mesa update broke GLES1 tests compilation, seems mesa's GLES includes\ngot some cleanup and 'GLchar' isn't provided by default anymore, glext.h\nshould be included explicitly. The offending type is defined in unused\nfunction prototype, let's remove it to fix the issue and some others for\ncleanup.\n\n../tests/gles1/common.h:78:44: error: unknown type name 'GLchar'\n GLuint glsl_shader_load(GLenum type, const GLchar *lines[], size_t count);"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/5a1708698d3152f46e5b4ed9bfafcc9980718288", "message": "Merge pull request #53 from kusma/meson-yacc-compat\n\nmeson: ensure input is at the end"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/28d2ac6ecd8632186967ea8651bfc7d6cb6bf3b3", "message": "libhost1x: remove EXTEND commands from GR2D\n\nThese commands are forbidden by a HW firewall on newer Tegra's and they\nwill be forbidden by a software firewall too. They are pointless as well."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/45cb051cb5d425e471b3bb9881f44d3166cb0523", "message": "libhost1x: remove GR2D reset\n\nThere is no need to reset GR2D because we are re-initializing HW for each\noperation and that reset definitely doesn't touch all of registers, it also\nignores SB mode."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/14b3aab15d6b38cf92e9ea277b9d454974ef0dc4", "message": "tests/host1x: add test for gr2d context switching\n\nTest draws several overlapping rectangles, each in a new context. At first\ncontexts are prepared and then executed, so on each execution context would be\nswitched, in the end the drawn result is verified and a message with a result\nis printed."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/9f121822cdef6e8e935fbb539bb6d05b75a2091b", "message": "libhost1x: support BO import / export\n\nImplement BO import /export hooks for DRM, it would be used for testing GR2D\ncontext switching."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/c7f45e70a663b10559508a345a52da1599d66c71", "message": "Merge pull request #48 from kusma/meson-libwrap\n\nMeson libwrap"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/f775673573f45377d46c7fd7c234333ace1530ff", "message": "Merge pull request #46 from kusma/cleanup-warning\n\nlibgrate: printf long long to avoid warning"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/8226466e16718d00c7b2da716f39f0e2198ef5b0", "message": "Merge pull request #47 from kusma/cleanup-cmdstream\n\nCleanup cmdstream"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/7578cb4f58d80cc0974787f3df5233e955c1c415", "message": "Merge pull request #45 from kusma/meson\n\nadd meson build system"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/79d27d1a70824d24899985bf60a6794653232b75", "message": "tools/assembler: dump raw data of compiled streams\n\nCompiled commands streams would be printed to the std output. Carrying the\nwhole asm parser from grate to opentegra isn't an option, we may use grate's\nasm tool to generate raw arrays of commands that could be cut-and-pasted to\nopentegra for a use. And of course that feature could be helpful with the\ndebugging of the asm-parser."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/a9ed912b1698644b043efea5fa5699502ee7516f", "message": "libhost1x: minimize 3d registers initialization\n\nThere are a lot of redundant stuff in the 3d initialization routine, let's\nget rid of it. Note that vertex/linker/fragment program cleanup with NOP's\nhas been removed from the 3d initialization routine because I think it is\nnot needed since a proper program that doesn't rely on a initial state would\nbe loaded anyway."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/02ac52dc65cca8798e0b19ecd1af8dc983e063dd", "message": "libhost1x: add a dummy host1x implementation\n\nIt might be useful to have an ability to run grate tools in a non-native\nenvironment, like assembler tool for example. Let's add a dummy host1x\nimplementation that would be used when DRM and NVHOST aren't present."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/5f03ba8f10589de071adc5fd3328477b158a264b", "message": "libhost1x: setup display framebuffer offset\n\nThis fixes tests/host1x displaying garbage at the bottom, it caused by commit\n4b0ef36 (setup BO guard on both sides) that prepends BO with a guard, guard\nis enabled by default globally, but disabled for grate tests by default, so\nthe garbage is also displayed by grate tests if guard is enabled (-g option)."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/c25c1d4e0661db47e3e15afb1fedd71fd6b54e66", "message": "Create README.md\n\nAdd a brief description about grate."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/334ea59e69cb8eb51bfe738dded9e4c2dd64f731", "message": "Merge pull request #38 from kusma/fix-nvhost-write\n\nlibwrap: restore memory-copying"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/999217b1bf005d0399cc55df14c31073a2527515", "message": "Merge pull request #37 from kusma/simplify-commands\n\ncleanup command stream"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/45765c839d26b30acddd22a9508c3069699ef9a1", "message": "libhost1x: correct swapped ARGB / ABGR formats in host1x_gr2d_surface_blit()\n\nThis doesn't affect any of the grate tests."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/fe7138f0bc97a2bd4c134360d6a9b5c17478ba99", "message": "tools/assembler: restrict framebuffer size to 256x256\n\nThe expected tests values are predefined for the 256x256 framebuffer, the\ntests failed in case of X11 display output as it overrides the default\nwindow width/height."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/4b0ef36de64a4dcd80b4d6e5eacc51b9517ab891", "message": "libhost1x: setup BO guard on both sides\n\nThe HW may write to memory in a backward direction, like in a case of a flipped\nsurface blit. Placing a guard behind a BO will sanitize that case."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/082ee3dbc4d0b46a938f09945422dfe96139f1a0", "message": "libhost1x: add missed BO offsetting to host1x_gr2d_surface_blit()\n\nThe dstba and srcba needs to be adjusted as well, otherwise the blit src/dst\ncoordinates are (0,0)."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/10280b6ec7397a975e051ae017bd4d7e3f494bfa", "message": "libhost1x: correct FLOAT_TO_FIXED macros\n\nCorrect negative values and values with integer part != 0 conversion to s2.7\nand s1.7. Grate is not affected by it, so this is a minor correction."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/b590d88478a8b2d3096940bf95c8a8758d758021", "message": "grate: fragment asm/disasm: Data Write STORE opcode\n\nAdd a STORE opcode that writes row registers or stencil data to the destination\nrender target.\n\nEXEC\n\tDW:\tstore rt1, r2, r3\n;\n\nEXEC\n\tDW:\tstore rt15, r0, r1\n;\n\nEXEC\n\tDW:\tstore stencil\n;"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/cab774b8a331e9c9fa9343cdc22a7c1c23207d63", "message": "tests/gles2: make egl-x11-clear fancier\n\nShimmer colors instead of static black."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/b43439509225763c418903ba1d3a244e01c92a10", "message": "grate: fix segfaulting on invalid cmdline option"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/55c1369e5c50d2571d483d9135e4c24daef23f2e", "message": "grate: disable pixbuf guard by default\n\nIt could be enabled via new grate cmdline option \"-g\" or \"--guard\"."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/77c408a5b0a7debb2e733c2931b702b95087740a", "message": "libhost1x: correct tiled pixbuf BO size\n\nThe tile size is 16x16 pixels, so the height needs to be aligned to 16. That\nfixes pixbufs BO guard area smashing."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/aefbd2ad9a839a48d85eb77399694f0c9cbec51a", "message": "detect writes past pixbufs BO\n\nAdd a guard area filled with a pattern to the end of a BO and after GR2D/GR3D\noperation completion check that pattern persists. If pattern was overwritten,\nerror message is printed and execution aborts."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/38b4dcc78e60ea32cf8e7c0aa683b193ad9d2256", "message": "grate: sync tgr_3d.xml.h (prepend defines with TGR3D_)"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/63b299191111a1fa1cffb28e75546a32873170f3", "message": "grate: move grate->hw enums mapping to 3d-ctx\n\nNo functional change, just refactoring."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/4e98e65465948a221b1aafb1fa8fb1c4cd93884d", "message": "grate: use unique values for the 3d-ctx enums\n\nC doesn't perform type checking of enums, so it is easy to make a mistake.\nI did it once and it took me awhile to find out what's wrong. Unique enums will\nhelp a bit."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/9f718fa9d8ed78e2504da52d42559887b23dcb4a", "message": "tests/grate: add stencil test\n\nFirstly, perform some basic stencil func-op checks and lastly display\n\"Stencil works works!\" text using *late* stencil test."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/10a8e930b19032f4f1a207382a42947aeff4a6a5", "message": "grate: stencil test support\n\nFor some unknown reason there is a stencil buffer distortion on a stencil write\nif a linear layout is used for the stencil buffer, while tiled works fine.\nThe grate-3d stencil setup takes into account the fragment discard, so both\nearly and late stencil buffer writes are performed as expected."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/e56253f75cb238fcffe113cc9c2bbdc47b655389", "message": "grate: fragment asm: take a note of fragment discard\n\nThat information is needed to disable early depth/stencil write if fragment might\nbe discarded by the program."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/5deef211228cf427ab5eb21bcb8f0a35712b94cf", "message": "grate: font: specify render target for grate_3d_printf()\n\nA render target other than display framebuffer will be used by grate/stencil test."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/332600ce0725bd619ff0f1ee59c3c629994f5dec", "message": "libhost1x: handle all Bpp's in host1x_gr2d_clear_rect()"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/f9eaac4a0578b23357475d909221d0f39f04287e", "message": "grate: add \"singlebuffered\" cmdline argument\n\nSingle-buffered output is useful for FPS measure as it is not bounded by display refresh rate."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/540cacc646140a45333c2e96c319aa67740d14a9", "message": "tests/gles2: add gles-stencil test\n\nThat's a fork of a gles2-quad-textured2 that I used for poking stencil params."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/6b0dc914bdf41cb797d4085fbcad23657e365219", "message": "libwrap: prepend printed hex values with 0x\n\nMy favorite calc program recognizes pasted hex only if it is prefixed with 0x."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/d26801181053b449bad8df800eee91c13104e10b", "message": "libgrate: print the path to test.png in grate_framebuffer_save()\n\nEvery time I'm getting confused where it got saved."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/de3d2cc1b804b0987f128010db2d33a8539666a1", "message": "tests: static linking of gles tests\n\nSame as da633d292ff5b6f73996b029f53860fe214bbe0a"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/cdd620160498d6d57c31379d294c7b47b89c959c", "message": "tests: add $(PNG_CFLAGS) to AM_CFLAGS\n\nFixes compiling with a specific libpng version."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/da5eb7975b5a7cd9951a7ef0ac456266f2db0a79", "message": "libhost1x: add coords sanity check to host1x_gr2d[_surface]_blit"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/fda544dd5ab6f27a0d2697355c29bb288228bea7", "message": "grate: handle Y flip in grate_texture_blit()\n\nThat was accidentally missed."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/546aed5de9d03fd41f704ca59bfcd3b8d863deba", "message": "add \"needs_explicit_vsync\" display parameter for x11-display\n\nThe x11-display doesn't display single-buffered grate tests as it requires explicit\nframebuffer flip. Grate will perform the flip if vsync option is set (disabled by default),\nnow it can check whether explicit vsync is needed and force-enable the vsync option."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/175df9683137ea57ca478a0bf308a95572e24f3a", "message": "remove *_pushbuf_create() definitions\n\nThese functions do not exist."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/5bd1d75d98cfc1d81fddfee0eabc20441a2b41a9", "message": "libhost1x: flip x11-display output\n\nThe image produced by GR3D is flipped vertically, now GR2D can unflip it."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/203412172d0267137f6f0832052a103ccd441eda", "message": "libhost1x: support Y flip in host1x_gr2d[_surface]_blit\n\nEnable Y flip if destination height argument is negative."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/da633d292ff5b6f73996b029f53860fe214bbe0a", "message": "static linking of tools and host1x-grate tests\n\nI run in a problem with a wrong path being resolved by a dynamic library loader inside\nbind-mounted directory over NFS. Don't know how to fix it correctly, static linking\nis a workaround."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/cb15a57225a5174317fec0954907236aca8fb846", "message": "grate: fragment disasm: fix swapped TEX/TXB instructions"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/2c09a9df8465d68ae7bf847420afffec8ffacc8b", "message": "grate: add grate_bo_create_and_map() helper\n\nThe mapping is optional and skipped if map argument is NULL."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/32c2cd2381389850d82e6db6304862d5517404ca", "message": "libhost1x: handle copy directions in host1x_gr2d_blit()"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/c86181ec3121e84ef96c40d58afe9bf075cc4821", "message": "grate: add grate_texture_blit()\n\nIt performs copy of source texture area to destination texture with a resize if necessary."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/209b25f0756a55eec74c309278dd21360277511c", "message": "grate: add grate_init_with_fd()\n\nIt takes DRM FD as an argument and passes to host1x_drm_open() for use."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/cf00b796fa942ff8667e0d6cf224e90c3565f6c2", "message": "libhost1x: handle tileness in host1x_gr2d_clear_rect()"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/72beecee148869216d66bb59f681bf50776cc631", "message": "grate: add grate_texture_clear_rect()\n\nIt uses host1x_gr2d_clear_rect()."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/4202d779b390ec23655e4e71dbed477c15eb65e8", "message": "libhost1x: add host1x_gr2d_clear_rect()\n\nIt takes position and size of a rect to be cleared."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/5ddf8de6176e662de6dc6ea41c47ddf4786fce8e", "message": "libhost1x: partially convert HOST1X() macros to inlined functions\n\nThis fixes -Wshadow compiler warning."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/0e34ec41800345568a9fba96bc28180a4fd4878f", "message": "grate: add \"nodisplay\" grate init option\n\nDisplay stuff won't be created when it's not needed."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/50ed5869849c22854100b2e82e1110b5dc7773ff", "message": "add .pc file for libgrate"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/e873ea0b0907b099a2c55a8e79a8a45ea80eb240", "message": "add missed header files to Makefile.am"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/5b7fbcc2c0109f8d134a18f793180475526f67ea", "message": "install libgrate.so and relevant headers"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/8a90f93e01e6cf1ebc71a0e6571263bdff967a38", "message": "grate: Makefile: prepend lex/yacc sources with $srcdir\n\nThis fixes cross-compilation by Gentoo's crossdev."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/25f76bb29e77b090402b8c0eb42418c333853a75", "message": "grate: use booleans for the texture warp modes\n\nThat is a bit nicer than a bitmask."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/49ca1d2d558478148ac9f86aef066e9a57fe3fad", "message": "tests/grate: add texture-filter test\n\nTest minify/magnify/mipmap texture filtering modes."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/59214eb5f1589dd377d9270b4218b4d8b208bb33", "message": "grate: display text using 3d\n\nIt should be handy to display some textual information for the grate tests.\nThe font texture was generated by \"Ultimate bitmap font generator\" tool."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/a10e66d7009e7fc5e1b3a621f19099c6d3b67d47", "message": "grate: add grate_create_texture2()\n\nThat one infers the pixbuf size from the loaded image. Will be used by grate-font."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/a7b684eeae413e59c5d7ecb19827ed7cc9fd6f96", "message": "grate: mipmap texture support\n\nBoth autogeneration and manual load of LOD levels are implemented. The autogen\nuses GR2D for texture scaling."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/84ecf1d2afd80ef33865414e8676bf41b8efc3a9", "message": "grate: correct 3d context uniforms location check\n\nThis fixes check for ~0u value which we are getting for a requested uniform that\nwasn't found."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/6e9886a199b75bc7cfca93fdbd93a383bf27a1e0", "message": "grate: asm: fix cgc symbols uniform name\n\nThe name must be copied from the parsed result. It happened that we haven't\nused two shader programs with different symbol names in one application for now."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/1cb1a7317113606e898bf81755aed075793a9651", "message": "grate: asm: destroy lexers\n\nThis resets lexers into initial state and frees previously allocated memory,\nso fixes memleak."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/c70cc1789b3ac5d7bc368e2384dadad057755bda", "message": "grate: remove unneeded 'static' declarations\n\nProbably they were cut-n-pasted by mistake."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/16346eac1f4c136df6666863a49e890ac79b06cb", "message": "grate: fragment asm/disasm: TEX instruction opcodes TEX/TXB\n\nThe TEX instruction now takes opcode to differentiate between LOD biased and\nun-biased texture sampling. We already implement the TEX opcode, so the opcode is\njust prepended to the instruction. TXB is the new opcode, it takes additional last\nsource-register, the LOD bias.\n\nEXEC\n\tTEX:\ttex r2, r3, tex14, r0, r1, r2\n;\n\nEXEC\n\tTEX:\ttxb r0, r1, tex3, r0, r1, r2, r3\n;"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/0b981307c78a371c71ceba0c01241a2242e0ec61", "message": "libhost1x: host1x_gr2d_surface_blit() fixes and feature\n\nHW is now set up properly, the feature-hack is scale of RGBA8888 format support."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/6c810325f2541a330599608b3f7927faa2b69db9", "message": "libhost1x: handle BO offset in GR2D and pixelbuffer\n\nSo the wrapped BO's are working correctly."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/c8ff14de4cbeb463c398923132f31d35dff9202a", "message": "libhost1x: add host1x_bo_wrap()\n\nIt will be used by a texture mipmap generator, helps to keep code clean."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/a219775d09bec04a855f8dd6288d7f9a4ea89bac", "message": "Merge pull request #30 from kusma/libwrap-no-memcpy\n\nlibwrap: do not move memory"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/6fd5c523095db0d975d2caaef3e8dbeca8c3b533", "message": "tests/grate: add texture-wrap test\n\nIt draws four textured quads with a different texture wrap mode each."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/e28b878f4ca1cf9dba4ee6919d7622c10073f14c", "message": "grate: enhanced texture wrap mode setter\n\nUse enum for grate texture wrap modes and utilize TEXTURE_DESC1 wrap mode bits."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/28c63c5b027913cc4f6ca7c37f4aaadb20ddcf59", "message": "grate: set texture NOT_POW2_DIMENSIONS bit\n\nIt is probably related to mipmaping, but maybe for something else too.\nBLOB sets it regardless of texture filtering mode."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/c57e6f9f210f9264f2ca0622c4125bb565e8e531", "message": "tests/gles2: add gles-quad-textured2 test\n\nThis is a bit modified version of gles-quad-textured that I used for poking\nmipmaps and wrap modes."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/a09cbbe1abbd64e809316f86552c3d5b7e438c70", "message": "tests/grate: interactive: non-linear cube movement/scale speed\n\nThis allows to move cube to the far plane in a reasonable time."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/a6067c92006919f1ed392f4305ab1f5797dbdb75", "message": "tests/grate: interactive: scale cube\n\nKey 's' to scale up, 'x' - opposite."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/11116148f18c72ffd893e0b71f48a1b815e58453", "message": "libhost1x: use NVHOST_BO_FLAG_* literals\n\nFor consistency."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/33a3be0c0c99377700c6792628e92941c93b16c1", "message": "grate: add grate_3d_ctx_set_fragment_float_uniform() helper\n\nWill be used by a further commit."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/b300077c4d2dc4d075c69f09564aec04871b301b", "message": "grate: add and use grate_3d_ctx_set_vertex_mat4_uniform() helper\n\nTo cleanup code a tad."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/6116ae425d04e41c93c2e1ff0a579c87bd26dbb5", "message": "grate: add and use grate_3d_ctx_vertex_attrib_float_pointer() macro\n\nTo cleanup code a tad."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/3ff2d2e46f2bc911675ceb731a71da120be01a89", "message": "grate: add and use grate_create_attrib_bo_from_data() macro\n\nTo cleanup code a tad."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/a22604964eeee562cc1a065d7f5162a045a13186", "message": "Merge pull request #28 from kusma/linker-crash\n\navoid linker-crash"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/02f1b9d6a72840c84f88688f291d510130c0ea1d", "message": "tests/grate: interactive: make escape exclusive exit key\n\nI'm hitting random keys occasionally, that's annoying."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/7ff314d7b7aa37a69a425232f1089a87463f218a", "message": "tests/grate: interactive: add depth function toggle"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/b1dca0936289ab95bab15bc4809862c997f2a810", "message": "tests/grate: interactive: fix cull face \"none\" mode toggle"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/bf5d6cbcc687aa13abc8ffb6b8ebb8da766982bb", "message": "grate: fix perspective projection matrix setup\n\nMatrix elements .zw and .wz were swapped. As result, cube positioned at the side\nof the frustum isn't skewed anymore in the interactive test."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/2b36b46031653e2aa45ff86a0ace7b8f5fe0a53a", "message": "grate: save/restore original terminal local mode flags\n\nOverriding flags isn't really correct."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/df8deab85d93c83a5e637d0e150cd9e9df387c74", "message": "tests/grate: add interactive test\n\nThe intention is to test different 3d context modes interactively. For the\n(easy) start a rotating cube is drawn, its position is adjustable via keyboard;\nthe adjustable 3d context modes are: face cull and front face direction."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/2e2e7c517cc436dcdb554c81e2713f158bc0db57", "message": "grate: add grate_key_pressed2() that returns pressed keycode"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/2ce7693bdbe96329a77717ae36c8dbc36b54ff16", "message": "Merge pull request #25 from kusma/cleanup-nvmap-heaps\n\ndefine symbolic constant for nvmap alloc heaps"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/aec1059567499a404d73bddf33707648156945ef", "message": "tests/grate: use depth buffer in cube-textured2 test\n\nOverlapped flying cubes are drawn in the correct order now."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/0aae4d358708e33db77861f559c8b0caf4ccb5cb", "message": "grate: depth buffer support\n\nBasic depth buffer support, exposed via 3d context API."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/ea94db18959de7606dbc70a38410ce20929f84c2", "message": "grate: add grate_texture_clear()\n\nThis will clear a texture pixbuf with a specified hex pattern (color in case of RGB texture)."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/9ce67f17892716ac0db6815927beebfa15dbd47f", "message": "libhost1x: make host1x_gr2d_clear() to take a raw color value\n\nThis will be used by a further commit."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/961418e1b24231c29b83373c3c97f226db085641", "message": "grate: move 3d ctx stuff out of grate.h into its own header\n\nFor easier navigation through the code."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/18f7d68e8b42e750b17b79ab0b50c82e95a438e6", "message": "grate: change cull_face enum prefix\n\nChange it to GRATE_3D_CTX_ to better reflect its attribution to 3d context state."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/a397a4450da8608f68388e355d00a216f9916377", "message": "Merge pull request #23 from kusma/cleanup-nvmap-flags\n\ncleanup nvmap flags"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/d2f6c003a3cf285044fadaad4e7ea06f6b645658", "message": "replace nvhost BO raw flags with literals to avoid confusion"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/e1e54dd905eb5776e68836bb5ccad90ca50e8542", "message": "libhost1x: added X11 display output support\n\nGrate tests will be display in a window under DRM+Xorg now. Well most of the tests,\ntests that use single buffered output will be displayed only if run with explicit\nVSYNC (-v option); that could be improved later if needed."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/fbdbb85f4f55ef5b5477baeba473692d0ff717f9", "message": "libhost1x: add host1x_gr2d_surface_blit()\n\nIt can perform surface scaling and surface format conversion. It was supposed\nto do rgba -> bgra conversion, unfortunately it cannot do it. I decided to keep it,\nmaybe will be useful later."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/e7c41e51e7c0f4da1b74f2d77625e017a2472d71", "message": "libhost1x: align tiled framebuffer pitch to 256 bytes\n\n2D HW blitter requires 256 bytes align, fixes 720 pixels wide blit."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/ed0e03c77598d7445cf1e7f27118f6e01dae60a1", "message": "libhost1x: use pixbuf provided pitch everywhere\n\nTill now they happened to match, but won't after further commit."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/649eee1314dfa97741c8f8e1e9ca1db8381a4c01", "message": "configure.ac: make GLES tests an enableable feature"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/9e25e40b2e5105c8f86af19fa3f24e2da0d60707", "message": "tests/grate: do not depend on implicit frame limit\n\nIn grate tests performing animation, the animation speed depends on the display\nrefresh rate."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/92414a4106b5cc5aee6fe6c97b05a43e973d6bca", "message": "grate: profile: add grate_profile_time_elapsed()\n\nWhich simply returns time elapsed since the start of profiling. It will be used\nby the further commit."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/6d4770f02c8232370ed19ee622595ad0d80781d0", "message": "tests/gles: fix gcc 6+ compilation warning\n\ngles-tex-combiners.c:41:22: warning: \u2018texcoords\u2019 defined but not used\n\nSince warnings are treated as errors with a default configure, it also fixes the building."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/bb5cc6e3adbeab3efb5b76701d50a1c82104deec", "message": "grate: fix grate_framebuffer_save() for double buffered tests\n\nFramebuffers swap happens before the saving, so a yet empty (swapped) buffer got saved."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/8ea57057bd0e81d4e9029e209a42f0ba14b67861", "message": "tests/grate: rotate second cube too in cube-textured2 test\n\nIt was intended to rotate. Also centre cubes along X axis to make rotation\nlook symmetrical."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/102eaf3515b97fdb98195e997e297c436e289b6a", "message": "tests/grate: correct comment in the cube2_grate_fs.txt\n\nThe discard logic was inverted in the comment."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/f2d131f47e0cd0cc9da7811d76fd3fdb37b4c3c5", "message": "tests/grate: add cube-textured2 test\n\nA bit more fancy variant of cube-textured test that doesn't use BLOBs\nshader compiler and uses new TEX asm instruction."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/460f9a0038bfa6d57a23f0748010f6378940e337", "message": "grate: fragment asm: ALU rD should be disabled when omitted\n\nFor brevity rD could be omitted from ALU instruction, it should be disabled\nthen and that was missed."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/e9f15453ca39e5fd52523a651417d7f1dbf9b79c", "message": "grate: fragment asm: change ALU syntax a tad\n\nPrepend \"ALU:\" to the ALU's instructions block, making syntax more flexible.\nNow ALUx could be omitted for brevity, it will be treated as NOP.\n\nEXEC\n\tALU:\n\t\tALU0:\tMAD  lp.lh,  #1,         #0,         #0,         #1\n\t\tALU1:\tMAD  lp.lh,  #1,         #0,         #0,         #1\n\t\tALU2:\tMAD  lp.lh,  #1,         #0,         #0,         #1\n\t\tALU3:\tMAD  lp.lh,  #1,         #0,         #0,         #1\n\tALU:\n\t\tALU0:\tMAD  r2.l*,  r3,         r2,         #0,         #1\n\t\tALU1:\tMAD  r2.*h,  r1,         r7,         #0,         #1\n\t\tALU3:\tMAD  r3.*h,  r6,         r4,         #0,         #1\n\tALU:\n\t\tALU0:\tNOP\n\t\tALU2:\tMAD  r3.l*,  r5,         r0,         #0,         #1\n;"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/cb082b3d8a7b1ed784cae232f7b5c4c3f55be2e2", "message": "grate: fragment asm/disasm: initial texture instruction support\n\nBasic texture sampling works, no LOD yet.\n\nTEX:\tr2, r3, tex0, r0, r1, r2"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/8e3ec972b846935f1ea5fffba9cd262b95f39340", "message": "grate: asm: single-line comment support\n\nHandy to have it."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/f6ca82db29ba2c26cc52d33846b63a44e8e6e607", "message": "grate: fragment disasm: correct MFU mul const 1.0 register name\n\nIt should be #1 as expected by assembler."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/92c6425975bf5f734b6896fdc6e1667efe2c4e58", "message": "grate: fix float_to_fp20(0.0f) resulting in 2.0 fp20"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/af7c21fe0cf60df34c2ba805a572078c452b4407", "message": "grate: fragment asm/disasm: MFU MUL's and updated syntax\n\nBefore:\n\n\tMFU:\tvar unk(0x104E51BA0) t0.fp20, t0.fp20, t0.fp20, t0.fp20\n\nAfter:\n\n\tMFU:\tsfu: rcp r4\n\t\tmul0: bar, sfu, bar0\n\t\tmul1: bar, sfu, bar1\n\t\tipl: t0.fp20, t0.fp20, t0.fp20, t0.fp20"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/9a871bcdd80a64f4f361c5e3bfe95a68e77f5698", "message": "grate: linker asm/disasm: new (z) modifier\n\nUsed to pass .z position components to the fragment program.\n\nLINK fp20, NOP, NOP, NOP, tram0.wxxx, export0 (z)"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/53f97786abb410dbf090769b176bd70ebc3028f0", "message": "grate: fragment asm/disasm: parse MFU fetch saturation modifiers in all cases\n\nIn order to fetch .z component, saturation should be applied to NOP'ed argument.\n\n\tMFU:\tfetch: NOP, NOP, NOP, sat(NOP)"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/faf683ef7e8fcf0fe28508973f4a77f5bc744bc2", "message": "grate: fragment disasm: change MFU scalar argument name \"v\" -> \"r\"\n\nThe assembler expects it to be named as \"r\". This just got unnoticed for a while."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/ca2595e9ab6da8659113f28c7ae2716c527c8f66", "message": "Merge pull request #19 from kusma/libwrap-cleanups\n\nLibwrap cleanups"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/1ed0a339d24bccbd585180287becc73251d4e26e", "message": "Merge pull request #18 from kusma/misc-fixes\n\nMisc fixes"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/fc4abf3b68b3402cca8fcbb5d564a772a6c85109", "message": "tools/assembler: cleanup getopt_long format\n\nHelp option doesn't require an argument."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/a46b2c0f895caec7086184e9fe0587065846cf79", "message": "tools/assembler: move grate_framebuffer_data()\n\nOtherwise a staled data may be retrieved from the CPU cache."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/0c9561e98efacafa60280963548422e8fdfb08a7", "message": "tools/assembler: use grate_shader_parse_*_asm_from_file() helpers"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/1a2fca8ea3cb0c293374f80ee4127609ac682eca", "message": "grate: add grate_shader_parse_*_asm_from_file()\n\nAdd asm shader load-and-parse helper routines."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/0e68909ddd26f8a26fdf7874f37995b46959c5e8", "message": "pass BO offset in HOST1X_BO_*()\n\nFor consistency."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/aa46d8b43165cfcb2d68c60a469a9ee68260b290", "message": "tests/grate: asm: add fragment uniform test"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/eb95e9123a31560c9793a1845ea6498b2fb6f5a5", "message": "grate: fix count of fragment uniforms in a shader program\n\nThere was a copy-paste typo in the grate_program_add_uniform()."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/71485aade6c0bfdaffb0d18dabfa6ef2cd2cf726", "message": "tools/assembler: parse fragment uniforms cmd line arguments\n\nAnd set fragment uniforms in the shader program."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/9d50d32e1bb66d94053bc6ce054b608dc1736c30", "message": "grate: more grate_error()\n\nReplace remaining fprint's with grate_error() for consistency."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/0d853de27f275dd011849d6d50dcc0e24b0e2bdb", "message": "grate: support fragment uniforms\n\nFragment shader uniforms, defined in the assembly, are exposed to the shader user.\n\nExample:\n\n.uniforms\n\t[1]   = \"uniform_1_fp20\";\n\t[2].l = \"uniform_2_fx10_low\";\n\t[2].h = \"uniform_2_fx10_high\";\n\nThe BLOB's symbol location encoding is reused, so grate_3d_ctx_set_fragment_uniform()\nalso works for the cgc-generated shaders."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/9d1e8ff2d094594900c94819727b6cc835d26f6f", "message": "host1x.h: cleanup whitespaces"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/8c348a255f0f7fd3d398592b8481864f8ba9dc0b", "message": "tests/grate: asm: add vertex uniform test"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/0b0967119fb530f6765a583d1f17c2b3320c1fe9", "message": "tools/assembler: parse vertex uniforms cmd line arguments\n\nAnd set vertex uniforms in the shader program."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/9106b9bcd0cfbefd5cc0c06272c233d01a7f009b", "message": "grate: vertex asm: support uniforms\n\nVertex shader uniforms, defined in the assembly, are exposed to the shader user.\n\nExample:\n\n.uniforms\n\t[33] = \"uniform_33\";"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/63510ad850d2dbd43545d977cc438c916a966db0", "message": "libhost1x: add nvhost_framebuffer_init()\n\nBLOB isnt't zero'ing allocated memory, resulting in a garbage being displayed\nfor a moment on start. Zero it in grate."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/c3ab0205f0479df00d288644f136b977896bdeb7", "message": "libhost1x: remove nvhost-display.h nvhost-gr2d.h nvhost-gr3d.h\n\nMove theirs stuff to nvhost.h, it's quite small."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/6d1ec39e1311ccc709a58aeac0fdfa10607cf508", "message": "libhost1x: add host1x_bo_flush() and use where necessary\n\nhost1x_bo_invalidate() marks mmap'ed range as \"read uncached\", that's not\nwhat we want when we are writing to memory."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/30cd244c417684a6693a7abf58f40442be23142f", "message": "Merge pull request #17 from kusma/cgc-cleanups\n\nCgc cleanups"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/ef73b3f0bc39b28e936eee44757a91ba6de7f673", "message": "Merge pull request #16 from kusma/fixup-crashes\n\nrevert bad parts of 65442a10"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/b649bc4d5efce525c4960a7d588651c4bf8b0641", "message": "Merge pull request #14 from kusma/cull-flags-v3\n\ngrate: consolidate cull-flags"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/714028e82dfda8ab5fff6831c21775eef0e140ed", "message": "grate: handle single buffered vsync correctly\n\nThe display plane update (\"show it\" call in our case) causes indirect wait\nfor VBLANK, since the plane update blocks until VBLANK. Simply don't invoke\noverlay/display show on grate_swap_buffers() in a single buffered mode\nif grate vsync option is disabled (enabled by a \"-v\" cmd line argument)."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/9d6eeb84f3e6738f5a36699caf9c21a58a4aeb4e", "message": "libhost1x: be more verbose on error\n\nIn some cases we fail silently, in others completely ignoring the failure,\nso at least printing a message in case of error should be handy."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/f53507e015acd8fbad63d7b5fc0833fc7faf332f", "message": "s/pb/pixbuf/ to avoid confusion with pushbuf\n\nFor better readability."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/fab1405085277a703cafb55d163d0a16474ba72a", "message": "grate: refactor texture handling a bit\n\nTexture params (LOD level, MIP filter...) now belongs to the texture object\nand not to the texture target. The texture creation/loading routines factored\nout from cube-textured test to grate-texture.c."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/dd36cc9c2ff025bf21c93126ce6277581243f433", "message": "grate: s/grate_get_actual_framebuffer_pixbuf/grate_get_draw_pixbuf/\n\nTo make it sound less abstract."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/2be262a766190eb8dd9d106daa86e8cfb6ea0b98", "message": "libhost1x: factor out pixel buffer layout\n\nIt's more consistent to have pixel format and data layout type separated.\nShould be useful in a longer run as well, once we will have to add more\ntiled layouts."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/5a7ca14cc551daaeced82da8e383adb4522605ad", "message": "grate: drop redundant FP counters reset in grate_3d_init()\n\nThe FP_UPLOAD_INST_ID_COMMON register should reset them at once."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/637ab5b0223bc81e8525ee9dea1c29cdd15c4564", "message": "sync envytools-generated tgr_3d.xml.h"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/66999b015d4fb584d0f98d8d770347a5f96fd6e9", "message": "tests: chdir to the grate dir in tests that use data/\n\nSo texture will be loaded in tests regardless of the current pwd."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/a943dbd1501c21236665efb0943f9aa340811ca6", "message": "tests/grate: cube-textured: print error message if texture load failed\n\nTo avoid confusion."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/693ff72536c23fec85666aab970625bcbfabbd91", "message": "libhost1x: blit if pitch/tiling mismatch in host1x_pixelbuffer_load_data()\n\nAnd use that feature for texture data load in cube-textured test."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/36a264aa909a43886798c3db885ece7974ccf872", "message": "grate: refactor grate_3d_ctx_create_texture\n\nFactor out texture state and use pixel buffer."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/b5facba99355b55d646cec1f3acf608fa1201683", "message": "tests/grate: return double buffering\n\nGrate API has all necessary bits for double buffering now."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/c05db08346a2d9e194b6324a13be6883de57f1dd", "message": "grate: refactor grate_3d_ctx_create_render_target\n\nReplace it with grate_3d_ctx_bind_render_target(), dither state now belongs\nto the target location, use pixel buffer."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/378ad2b8ee7a9a53254dc458f20429fb899310f3", "message": "grate: replace get_*_framebuffer_bo with get_actual_framebuffer_pixbuf"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/3c8da5845204cca47a542973bee5b68dbe8924ff", "message": "grate: drop grate_bo in favor of host1x_bo"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/fa802dfcbce74f858d42307694ec04b6daab1439", "message": "libhost1x: use HW for detiling of a saved framebuffer\n\nUse gr2d blit to detile pixel buffer."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/2211ad935ce7246e7989e1c4355172c96b25ebec", "message": "libhost1x: make host1x_bo public"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/c4cb4ae3894219ad633659630247b53792d988ee", "message": "libhost1x: make host1x_gr2d/3d_*() take pixbuffer instead of framebuffer"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/ff6325c755eb5c161edf86221621c595b27a1abc", "message": "libhost1x: make host1x_framebuffer/pixbuffer public"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/d77af7e0965276a3c6f235ee5c677369e3869d60", "message": "libhost1x: use pixel buffer depth info in host1x_gr2d_blit()\n\nIt should blit 16bit surfaces correctly now."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/4dac4e0b846607581bc7e4b89f731dea901aaac6", "message": "libhost1x: align tiled pixel buffer pitch to 16 bytes\n\nFixes distorted display output with non-aligned framebuffer width."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/b0eda858487b1c3a0e6af2246657b1b9cbcaaa68", "message": "libhost1x: handle tile'ness in host1x_gr2d_blit()\n\nPixel buffer format carries tiling info."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/cb325b1fa666df7f51a8c7290d23221ea07703b5", "message": "grate: drop grate_format in favor of pixel_format\n\nThe non-tiled framebuffer format could be set directly now, grate_format\nis unneeded intermediary."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/7333886e9131d75852582bda13fcb9353a99a4a7", "message": "libhost1x: make tiled display format optional"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/c8a2e3f45dcf4dba3031b4ff65cc52242382c93b", "message": "libhost1x: try to change display mode on drmModePageFlip() error\n\nPage flip IOCTL forbids changing framebuffer format, so format needs to be\nchanged first."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/f74a53b1e04e5c5a0431a6370e3376452cd3f698", "message": "libhost1x: provide CRTC pipe number on overlay VBLANK\n\nVSYNC works with a non-primary CRTC."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/dcb7a292d89c20dc25f8a1c1d171f0e4a514cea0", "message": "tests/grate: cube-textured: invert texture on load\n\nSo it is not inverted and matches the opengl convention."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/2dd41eb637a92949946da82c28de9414c9fd1b1c", "message": "libhost1x: invert vertically nvhost display output\n\nThe 3d render is not inverted now, DRM does the same."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/8cae8d8d84e5aa8de1cc1926a5f05e3380713413", "message": "grate: support RGB565 framebuffer format\n\nlibhost1x could handle it now."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/e524aed49dc82a326bbfb19f0e8d81af062f6ddc", "message": "host1x: introduce pixel buffer\n\nThe intention is to use it everywhere as a universal pixel storage."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/b8f98db417a9c542e19259b27d773ee917bd5544", "message": "tests/grate: add cube-textured test\n\nNew build dependency - libdevil."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/e75254af5fe1f19417e1d7add225d3b45dce5336", "message": "grate: initial texture support\n\nBasic texture support, exposed via 3d context API."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/6be5372be03240d541c322c8af00d0d8b44d3586", "message": "sync envytools-generated tgr_3d.xml.h"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/8c0bfda13d5b7d37b9f1983c8d34b7e64629d8d3", "message": "grate: add 3d context API\n\nGet rid of hardcoded 3d context params. It should be much easier now to\nimplement textures and other goodies. Double buffered display output is gone\nfrom grate tests for now, while single got fixed.\n\nSync envytools-generated tgr_3d.xml.h"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/a145ec25cb3c26b287349a655ff713f56e8d2956", "message": "grate: factor out 2d related functions to grate-2d.c\n\nLogical split, no functional change."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/2f7dbf3df57da10eae62c0e9587e9c58c924640e", "message": "grate: factor out 3d related functions to grate-3d.c\n\nLogical split, no functional change."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/09c8175ba576a074918b798fbb6b4754d8f147f4", "message": "libwrap: fix argument-less ioctl call\n\nThe _IOC_SIZE() macro doesn't represent the presence of an argument. There is\nalways an argument, even when it is absent, i.e. NULL."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/fafee71600028b1040a2aaf09284a2b78521324a", "message": "grate: derive asm related functions from shader-cgc.c to grate-asm.c\n\nThe shader-cgc got bloated too much, it's easier to navigate the separate files."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/65442a1068dd07efb257ccfd3f7b4c526aaf648e", "message": "partial type conversion cleanup\n\nI have been bitten several times by it and decided to cleanup, so we\ncould have -Wconversion in CFLAGS . Unfortunately, it's just too many\nplaces to fix, I gave up."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/c677b6e50171ecfdcb3815fc88237ec3ccc60532", "message": "grate: add grate_3d_*() helpers\n\nIt is more readable now. Start to use envytools-generated header."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/eca9f03a7d450dd4ec647fd9e583e2002c3d6f68", "message": "tests/grate: provide linker asm for the tests\n\nThat's more consistent and now we can drop the hardcoded linker code from\nthe grate_draw_elements()."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/75f600c43edc0d879ac0909fc7aa879976e60a56", "message": "import tgr_3d header generated by enytools\n\nThe plan is to use as the source of registers and bitfields literals."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/dcaf178b2b27d3304c87d2fdd95fb282fab38788", "message": "libcgc: compile all sources unconditionally\n\nProvide BLOB stubs instead of the libcgc's."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/cb6d6f32e1a4b74f1380579aa644aebdc6c3a8d0", "message": "Merge pull request #10 from kusma/cgshader\n\nadd GL_EXT_Cg_shader example"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/f42a472b1b3793f90c46afce55761bf7aca33b77", "message": "libwrap: try \"/dev/knvmap\" as well\n\nBLOB uses \"/dev/knvmap\" instead of \"/dev/nvmap\" under root."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/dcb9d60da5e76615dfe953057857069dab6f66b4", "message": "libhost1x: implement display output for nvhost\n\nThe grate tests now will be displayed with the downstream video driver."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/b594110e27881acd9fc456e3afb93680e901c9fa", "message": "tools: compile cgc unconditionally\n\nlibcgc is always available now, kinda useful for a compile-testing without\nthe BLOB."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/b7a55ae5afc5b95cf81254814222bb29ab0ebd6d", "message": "tools: move grate assembler test executor to tools\n\nThe assembler tests runner is more like a tool now, so it's more logical to\nhave it in tools."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/2553af0ccffe7c258bd4482caef7dee576252134", "message": "grate: disasm: silence the \"warning: Value stored to 'buf' is never read\"\n\nFixes clang-analyzer warnings."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/18fa8f2425c35971ebd559f37bcb70bb10f6cbd6", "message": "grate: move cgc stubs to libcgc\n\nThis allows to compile and use assembler without the BLOB being available\nin the system."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/cf70ee73564119da1294e61930ac9b8528f7a67d", "message": "tests/grate: asm: improve the vertex branching test a bit\n\nShould be more robust now."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/a5ea63d45cc835da3d5523d8859a13c8aae9edb7", "message": "tests/grate: assembler: Allow to run standalone code, decouple the tests\n\nThe assembler test is able to run standalone asm tests now.\n\nExample:\n\n./assembler --vs asm/vs.txt --fs asm/fs.txt --lnk asm/linker.txt\n\nWill compile the asm's, print the disassembly and show the rendered result."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/bf7bbe6f2fff082c54e817b615ef30e57dfbb0c6", "message": "grate: linker asm: fix the mixed up TRAM swizzle\n\nIt's actually the TRAM destination swizzle, not the vertex export source."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/57ffbf64070f81c6ad2fd3c77e11e38f6d3f3165", "message": ".gitignore: add hidden files and test.png"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/a37ffe4d25df2c249c2a3a51f58d47303997ed2c", "message": "tests/gles2: glActiveTexture() should be called before the glBindTexture()\n\nA minor correction, it happened to work because unit 0 is active by default."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/268e9b332b285f1bc4d1892fd31b91bbc4eef0c3", "message": "grate: fragment asm/disasm: introduce the ALU \"KILL\" register\n\nParse the \"KILL\" register."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/62b5eb9103f3d64818092623721e9028f80ccbcb", "message": "grate: fragment asm: fix ALU destination register bitfield\n\nThis was accidentally overlooked. Grrr..."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/af7cefc9b2cb892a3689e7052cbf6e0abd14762c", "message": "grate: fragment asm: write to PSEQ 0x500 after the instructions\n\nBLOB does it, so we too. Probably some kind of buffer flush?"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/0afd5ff18f9d05bdf1db55403e83704dac15638c", "message": "grate: linker asm: correct the TRAM row index check in the parser\n\nThe MFU can address 16 TRAM rows maximum, so the linker too."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/a3231c4a6746219d08e545de1dbb0b49ae537d50", "message": "grate: asm: don't set yydebug in the parsers reset\n\nSo it could be controlled by an external code."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/c72414256e5697b22184b11b310db6ca84300b4e", "message": "grate: asm: make yyerror a weak symbol\n\nThe tool I'm using for RE has a lame build setup and it's a quite cumbersome\nto re-do it (maybe later). This is solely to make Dmitry's life a bit easier\nright now, it has no effect on the grate."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/1e97639c10a90330a7f8939324cf63a813021548", "message": "grate: fragment asm: rename \"FRAG_*\" literals to \"FRAGMNET_*\"\n\nMinor cleanup."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/52e5575ebcd247be20dd8741c3f83cf746b9d8e8", "message": "grate: fragment asm: change MFU var operation arguments \"r%d\" -> \"t%d\"\n\n\"t\" for TRAM. Keep the \"r\" for other operations, since it's a row register\nin case of those operations."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/31454498d65771aa94d9179126fb2bd6156ebcc7", "message": "tests/grate: place assembler in alphabet order in Makefile.am\n\nJust for consistency."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/4a7ae65afca9623e052c87160352452c8edf9523", "message": "grate: vertex asm: change a negate modifier from neg() to \"-\" sign prefix\n\nThat feels more convenient."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/994204100c83cf2de696d36792543abbccb00d13", "message": "grate: change vertex asm/disasm license for consistency"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/dd4310ab953a0ecb98b7880cff7f1876755af0e8", "message": "tests/grate: make cube test draw a cube and not a triangle\n\nFix the number of vertices to draw."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/8772364e1ef9a1192758cb6aacd7afb1dbb65aa3", "message": "grate: add fragment and linker asm/disasm\n\nThey are made in a way the vertex asm/disasm is, lex+yacc. Nothing fancy :)\nLess hardcoded values in grate_draw_elements(), grate_program_new() now takes\none more argument, the linker .grate_shader; if it is NULL, the old-default\nlinker behaviour is preserved."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/01419366dad6a9bedf54640427cad3c590d98445", "message": "grate: move asm.* -> vertex_asm.* as a preparation for adding other asm's"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/bd55857a4a34d34b0d78650102958ccc8a789144", "message": "grate: a minor vertex asm parser cleanup"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/900ecfa1657741676cbd4c9f0e39c57481d9124b", "message": "libhost1x: reset gr3d hw on init\n\nThe only way to recover the hung 3D module is to reset it."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/ad8c49b96a37cb1f5a30339a93c63f0a1fe2a76d", "message": "grate: write to the PSEQ register 0x501\n\nMore than one fragment pipeline execution batch works now."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/976cb76db93a1fa911cfe93f830c352ae38df508", "message": "grate: set PSEQ instructions number"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/50c2c7bc33b8c41fe3fae3a9419c149675aac6e9", "message": "grate: disasm: add more \"consts\"\n\nSome compilers would error out on a missing \"const\", this makes code more\nportable."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/6a1e674eb7dc140a43b4a68dbc7fedc1357256dd", "message": "grate: asm: \"asm.h\" should be a local include"}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/c06b9cf70962cf437bc0f54b729b8156e92a99cb", "message": "grate: disasm: don't print dst-src registers for the RETs opcode\n\nIt was accidentally overlooked."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/06275d65b16715808a33e5115e42310d1e74ab5b", "message": "grate: asm: change address register notation A0-A3 to A0.[xyzw]\n\nIt's seems to be commonly used across the opengl specs, at least by nvidia."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/39068e9599290f927a140fafaa4b35600623d8de", "message": "grate: asm: disasm-compliant destination address register grammar\n\nWe are using A0 notation for the address register, while disasm would\nprint R[0-63] for a sake of debugging. Make asm syntax more permissive, so\nthat disasm code could be cut-n-pasted without a hassle."}, {"url": "https://api.github.com/repos/grate-driver/grate/commits/06415cc44c8bb76d533288f3cd2d38131094083a", "message": "libhost1x: don't fail host1x_drm_open() if display is unavailable\n\nDRM display is not available when xorg server is running and active.\nJust continue without it, so that grate tests could be run under xorg.\nRendering result will be saved to the \"test.png\"."}], "pull_requests": [{"url": "https://api.github.com/repos/grate-driver/grate/pulls/50", "title": "tests/host1x: gr2d-context: Move BO address and trigger setup to exec\u2026", "body": "In order to avoid use-after-free, kernel driver would reset address and\r\ntrigger registers prior to each jobs submission. So we have to adapt gr2d\r\ncontext switching test accordingly.", "author_association": "OWNER"}], "issue_comments": [{"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71385451", "body": "I had libhost1x excluded from compilation and hadn't noticed compilation breakage at first time, sorry :(\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71385451/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71385532", "body": "Hey, kusma!  Do you know what's the intention for download, surface blit, ctx gr2d classes?\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71385532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71385582", "body": "And is generic 0x51 also doing it all?\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71385582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71385761", "body": "I mean why those classes exists while there is 0x51.\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71385761/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71386134", "body": "For example, in tests/nvhost/gr2d.c nvhost_gr2d_init() you set class_id to 0x51 and then immediately change it to 0x52 (surface blit), why?\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71386134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71386391", "body": "Ah, it was added by tagr...\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71386391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71386513", "body": "Ok, I also asked tagr on irc, he'll probably answer tomorrow. Do you know what download class is?\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71386513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71386775", "body": "nvhost gr2fill_test failed in my tegra QEMU'lator because I haven't implemented 0x52 cause it's intention is obscure :( for now\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71386775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71387822", "body": "Currently it's on my machine locally only (with backup to private repo), it's in active development state. However, probably, I can push it to github as-is. Do you want it now?\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71387822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71393730", "body": "Okay.\n\nTeaser! Opentegra driver with EXA =). 2 cores + AVP, i.e . booting through uboot/fastboot works fine. Suspend, cpuidle works also found couple kernel bugs with it, fixes submitted upstream.\n![q11](https://cloud.githubusercontent.com/assets/1242749/5893300/52a67134-a4ef-11e4-840b-23b6dce8b019.jpeg)\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71393730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71460239", "body": "Yeah, it's a bobby dazzler! Very convenient for debugging and RE. I'm planning to start adding gr3d support soon, currently looking around and examining grate code/wiki =).\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71460239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71465398", "body": "It shouldn't be a problem, you know :) But I need to get big picture of how it all works first!\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71465398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71467976", "body": "0x300 is even instr halve, 0x301 odd, and etc\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71467976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71471002", "body": "0xe20 and 0xe21 is some set of pixel/raster and triangle attrs. I'll be able to tell exactly what it is once will reach that point in development of it or just ping me if you decide to become dirty =)\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71471002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71568504", "body": "Do you know if it is possible to run egl with nvhost and without downstream tegra xorg driver?\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71568504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71569640", "body": "I have that setup in qemu too now, but I get only black and gray screen since gr3d isn't implemented. So, egl is also working from console? I'm trying it now...\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71569640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71569809", "body": "You'll RE it quicker than I'll figure out what it all means from comments to those regs =)\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71569809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71574860", "body": "Use of \"DISPLAY=:0\" works fine, thanks! I reached indirect write from host1x module (to gr3d), which I haven't implemented yet, but it's trivial =)\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/71574860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/152757241", "body": "I'll try to re-do it in a cleaner way.\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/152757241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/153169860", "body": "I just started to move geometry load to a separate file (and was going to do it with the rest of the stuff) to make working with code a bit easier and decided that this change might become unnecessary.\n\nBut cleanup turned out to be a bit complicated, might return to it later. So re-opening.\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/153169860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/265165061", "body": "Great! \ud83d\udc4d\r\nI think it's time for the fragment shader, should be even more fun!", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/265165061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/265173643", "body": "I don't think that it uses delay slots or whatever timing constraints, should be couple staggered ALU's as described in the patents. I hope we could getaway with some bare minimum :) The good thing that there are much more public nvidia patents on the fragment shader pipeline than on vertex and they seems to be a bit useful, at least giving some insight.\r\n\r\nBTW,  you haven't answered regarding the asm syntax description. I think a wiki page should be good enough, I'll add it once will get too tired of the fragment stuff :) Anyway, syntax should be quite obvious by looking at the asm test samples, it was partially inspired by the freedreno's asm.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/265173643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/271874537", "body": "Heh, missed \"i\" in the linker three times, my keyboard needs a fix.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/271874537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/275651772", "body": "I think it's good enough. We can fix the render later if will be necessary.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/275651772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/276503041", "body": "Thank you a lot for looking though the code! I'll add patches to this series addressing the comments.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/276503041/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/276505627", "body": "That should be easy now. For a really meaningful example we will need to add a depth buffer, because now the rendered cube is missing sides :) ", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/276505627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/276508840", "body": "I tried, doesn't help :/ But maybe I missed something.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/276508840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/276960744", "body": "I added patches addressing the comments and couple more, please take a look. Also swapped texcoords in your \"triangle-winding\" commit, so cw sides are not inverted horizontally.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/276960744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/276963478", "body": "Nice!", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/276963478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/277516216", "body": "Great, thank you! I already merged envytools.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/277516216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/278621301", "body": "Ah, sorry about that!\r\n\r\nThe disasm in libcgc is a bit outdated, maybe we should re-use the disasm from libgrate for blob-generated disassembly? Or move it to libcgc? Or you have some other plan on it?\r\n\r\nI don't have a strong opinion, since I'm mostly using my tool + QEMU for looking at what assembly BLOB emits.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/278621301/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/278628845", "body": "I corrected \"libhost1x: add host1x_bo_flush()\" commit a bit and and added couple minor updates for  \ttools/assembler. Will do something about fragment uniforms ASAP \ud83e\udd12", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/278628845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/278637309", "body": "More stuff from BLOB would be good to have. It should store fragment texture samplers locations somewhere there.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/278637309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/278684253", "body": "Very good! Everything looks fine to me.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/278684253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/278961310", "body": "I squashed \"grate: refactor grate_3d_ctx_set_fragment_uniform*()\" and \"grate: fragment asm: support uniforms\" to \"grate: support fragment uniforms\". We are now use BLOB's symbol location encoding for fragment uniforms, so setting fragment uniform also works for cgc shaders. It is very similar to vertex uniforms, the difference is that BLOB supports only one type of fragment uniform - a vector and it's components enable mask. So a float uniform is a vector with 1 component enabled and mat4 is represented as four vec4's. Please take a look :)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/278961310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/279693420", "body": "Looks good \ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/279693420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/280336395", "body": "Maybe we should build two variants of libwrap? One with all hexdumps and BLOB malloc's/IOCTL tracing enabled and the other just envytools registers tracing. That solves build coverage and produces less noise when you just want to look at registers IO.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/280336395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/280352533", "body": "I don't mind.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/280352533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/288582653", "body": "Looks correct \ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/288582653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/288589502", "body": "Neat!", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/288589502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/288831579", "body": "BTW, seems perspective projection matrix is not correct. Cube gets skewed when drawn at the side of a screen (widescreen aspect). Just a note, I may check the mat a bit later.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/288831579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/288862307", "body": "Shouldn't take much effort to turn it into some trivial game eventually, but.... meeeh. Not a gamer :P ", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/288862307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/289283280", "body": "Yeah, a graceful error handling is always a good thing to do \ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/289283280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/289287915", "body": "I forgot to mention that cube-textured2 and interactive tests should work without CgDrv, aren't they?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/289287915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/289531317", "body": "Good catch \ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/289531317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/290998769", "body": "Re-spun, now with the TXB opcode. Please take a look =)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/290998769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/291332287", "body": "Changed the names, please take a look. \ud83d\udd0d :)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/291332287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/291530842", "body": "Consolidated log2_size() and switched to clz.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/291530842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/291534998", "body": "You are too fast! I was going to write that I shouldn't have removed the grate_texture_set_max_lod() :)\r\n\r\nWill re-add it.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/291534998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/291535301", "body": "Ah nice :) Will fix now then.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/291535301/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/291549706", "body": "Factored out grate_create_texture2() addition to a standalone commit and added test4_max_lod() to texture-filter test. Should be good now :)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/291549706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/293096649", "body": "I noticed couple issues, will re-open once they are fixed.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/293096649/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/293341824", "body": "Updated the patchset, please take a look.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/293341824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/293359411", "body": "Awesome! \ud83d\ude3a ", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/293359411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/295665550", "body": "Okay, I'll drop the \"band\". ", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/295665550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/295704354", "body": "Dropped ;)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/295704354/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/298166895", "body": "So?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/298166895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/298168898", "body": "Should be OK, I'll add grate cmdline option.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/298168898/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/298188744", "body": "Added the cmdline option.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/298188744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/300631437", "body": "Thank you ;)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/300631437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/300637875", "body": "Oh, good catch. I only compiled-tested it with the latest build environment which haven't complained about it, will fix it shortly.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/300637875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/300641161", "body": "Added -lm, compiles fine on 12.04 now ;)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/300641161/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/305423869", "body": "Unfortunately stencil test breaks without the magic init. Comment out `grate_wait_for_key` from the stenci.c and run `while :; do ./stencil -f || break; done`. Seems you removed too much :)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/305423869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/309307165", "body": "I've tested the case that crashed for me before `LD_PRELOAD=libwrap/.libs/libgrate-wrap.so.0.0.0 DISPLAY=:0 tests/gles2/gles-quad-textured2 -w 500 -h 500 --min GL_LINEAR_MIPMAP_NEAREST > /dev/null` and it indeed doesn't crash with this patch, however there are `BUG: writing outside buffer!` messages, is it okay?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/309307165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/309499891", "body": "Valgrind complains about all IOCTL's that it's not aware of. Probably it is not the only one it complains about, isn't it?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/309499891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/309509973", "body": "@kusma I have checked it on my side, indeed this is the first IOCTL which valgrind complains about. After applying your patch, valgrind complains about TEGRA_DC_EXT_SET_NVMAP_FD and so on. So yeah, not much sense in suppressing only one IOCTL of many.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/309509973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/309513545", "body": "I'm pretty sure you should get the same result as me.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/309513545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/317186779", "body": "I just re-tested this patch with updated grate's kernel that has memory \"securing\" enabled and it shows that memory fetching happens regardless of the texture dimensions.\r\n\r\n`tegra20-mc 7000f000.memory-controller: MC_DECERR (0x0000001b): 0x6ed5e900 csr_texsrd (read )`", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/317186779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/317186840", "body": "Ah, actually it's not securing but just some invalid memory address.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/317186840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/317186931", "body": "I even haven't tested it properly before :P", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/317186931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/318350363", "body": "I was experimenting with using libgrate for opentegra and haven't used pkgconfig since then, yeah it is not really needed.\r\n\r\nNinja is indeed much faster than automake, but it's not a problem for me since I'm crosscompiling.  I'll probably continue to use autotools, so have no objections ;) I made a test build with meson, works fine \ud83d\udc4d", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/318350363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/330917170", "body": "@kusma same applies to mesa as well.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/330917170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/331706696", "body": "@kusma Awesome :-)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/331706696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/95349513", "body": "That would be nice!", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/95349513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/95349839", "body": "Absolutely! However, it's very convenient to have it now in grate, since it's relatively easy to hang the GPU and rebooting each time it happens is annoying.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/95349839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/95352785", "body": "Yeah, it should contain barycentric weights. I don't think it's instructions by itself, but a part of the varying (load from TRAM and interpolate) operation. If they are always constant, we may derive it into a some modifier literal, like (setup) instead of unk(..), for convenience.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/95352785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/95358301", "body": "It could be so, I haven't looked at it much :)\r\n\r\nIsn't the flat-interpolation is what could be done in the lnker? The (dis) modifier https://github.com/grate-driver/grate/wiki/Assembler-syntax#linker-assembler\r\n\r\nMaybe noperspective\u200b interpolation is what could be done within that MFU operation?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/95358301/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/95581682", "body": "Well, we had those bits in the wiki for a while and you even wrote there that it will be useful :P Maybe you just forgot about it already? Or it wasn't working as expected?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/95581682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/95696344", "body": "Okay :)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/95696344/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98767532", "body": "It is GCC extension, works fine in the UNIX world. https://gcc.gnu.org/onlinedocs/gcc-4.6.4/gcc/Conditionals.html", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98767532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98769570", "body": "No, these formats are also used for the display framebuffer and they differ from the 3d stuff. The pixel buffer format is abstract, the corresponding hw value is picked by the pixel buffer user. The idea is that we can pass the \"pixel buffer\" around 3d <-> 2d <-> display without a hassle.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98769570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98772925", "body": "Factoring out layout format is also fine, I'll make it in the follow-up patch. We will probably end-up having multiple tiling formats because textures seems support several tiling formats and they differ from the display.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98772925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98773591", "body": "I'm not sure too, certainly it will evolve :)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98773591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98774173", "body": "No objections :)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98774173/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98774348", "body": "Yeah, I changed it in in the follow-up commit https://github.com/grate-driver/grate/pull/13/commits/c05db08346a2d9e194b6324a13be6883de57f1dd", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98774348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98777604", "body": "Sounds good to me, no objections.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/98777604/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/99487818", "body": "I'd print a error message and abort on unexpected \"default:\", that will avoid stupidity.\r\n\r\nAs I said before, it should be better to move all context params checks/mappings to the grate-3d-ctx.c, but that should be another patch. I think the current variant is good enough.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/99487818/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/99891959", "body": "Thank you very much for the suggestions. BLOB seems encode fragment uniform type-position in the symbol location, maybe we can re-use it. However, the type enum seem differ from the vertex uniforms.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/99891959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108034864", "body": "We are using column-major notation for the mats, but perspective matrix was defined as row-major (transposed).\r\n\r\nI'm not familiar with GLM, looks like its perspective matrix is same OpenGL-standard we had (row-major). What would be the benefits of switching to GLM? Seems it's C++ only.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108034864/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108035693", "body": "Well, column-major is the standard OpenGL mat, not row-major.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108035693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108036413", "body": "It's column-major notation. What's wrong about it? :) GLSL uses column-major notation.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108036413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108036616", "body": "Scratch it, I'll re-check it once more. Row-major vs column-major is annoying.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108036616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108036943", "body": "Yeah, you are right. So finally, we are using row-major notation in grate right now to define mats. But the de facto standard in OpenGL is column-major.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108036943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108037588", "body": "OK! \ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/108037588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109306064", "body": "Indeed, differentiating instructions by opcode should be more expressive and there will be more opcodes in the future. We should probably omit the 3-rd cubemap coord source register from the current TEX instruction and use it in the TEX2 instruction opcode (following TGSI ISA) once will add support for cubemaps. \r\n\r\n I'll re-spin the series.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109306064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109308739", "body": "Ah, okay :) I just quickly glanced through the TGSI ISA without paying much attention. So the TEX opcode is fine as it is now, no need to change anything about it.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109308739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109320964", "body": "That's not true. I checked disassembly and the generated code is tiny, actually it is compiled into\r\n\r\nif (size > 1024) {\r\n} else if (size > 512) {\r\n} ...", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109320964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109321130", "body": "I'm not used to any naming convention, so do not really care. Just tell me how to name them.\r\n\r\nMIPFILTER == MINFILTER_LINEAR_WITHIN ?\r\nMINFILTER == MINFILTER_LINEAR_BETWEEN ?\r\n\r\nIs that ^ correct?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109321130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109321500", "body": "Okay, I'll switch to these names. Let me know if there is anything else confusing :)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109321500/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109322005", "body": "clz would also work, but I like more expressive approach. It would be insane if any relatively modern compiler won't optimize that switch-case. And again, the worst performance bottle neck is memory management, BO allocation time in particular.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109322005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109322141", "body": "Since I'm not very familiar with OpenGL and related terminology in general, I'm expecting that from you :) Don't shy, always let me know if something feels clumsy.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109322141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109322411", "body": "Yeah, one obvious optimization would be getting rid of CMA allocation on each command submit in the kernel driver. That gave a noticeable boost in performance while I was tackling the opentegra driver, actually not so long time ago. Also the current in-kernel command stream validation code completely kills performance, I usually have it turned off while hacking-developing.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109322411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109691221", "body": "Here it is.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/109691221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110883448", "body": "Yeah, we probably won't ever need such unusual sub-allocations. \ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110883448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110883969", "body": "Probably we should rename grate_texture to grate_surface.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110883969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110884213", "body": "I don't mind, both clunky to me :)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110884213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110914950", "body": "I don't like when something fails silently.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110914950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110919744", "body": "Won't hurt, probably.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110919744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110930699", "body": "However it will hurt in case of opentegra use, as it may fail easily on OOM. CMA quickly gets fragmented.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110930699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110934253", "body": "In case of opentegra, it fallbacks to non-acceleratable allocation. I don't mind grate tests crashing, it's likely to be something much more severe than OOM.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110934253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110948282", "body": "Opentegra calls grate_create_texture(), which calls the macro.\r\n\r\nI already re-worked it based on your comments ;)", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110948282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110966598", "body": "I think the state of current error-handling in grate is good enough, at least you'll now if something gone wrong and where to start to look at. Grate is mostly a dev tool, graceful error-handling and avoiding of a tiny memleaks is always good to have but not necessary here IMO.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/110966598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/111944198", "body": "Seems envytools doesn't re-gen the header entirely on each update. I removed old tgr_3d.xml.h and it is fine now.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/111944198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/111945981", "body": "What about to prepend  them with TGR3D_ ?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/111945981/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/111946479", "body": "They are old :) And seem to be wrong now.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/111946479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/115867653", "body": "Solely to have a testcase of that, currently we are using r2,r3 elsewhere. It could be an asm_test though.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/115867653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/129830234", "body": "s/tests/tools/ ?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/129830234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/129966561", "body": "Maybe initialize viewport to 0x0?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/129966561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/129967908", "body": "Maybe incorporate s/get allocate/allocate/ here as well?", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/129967908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/129972899", "body": "Okay, 0x0 scissor would prevent rendering anyway.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/129972899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/131973581", "body": "This is expected because we do not implement import / export for nvhost.", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/131973581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/131981655", "body": "Good call, done \ud83d\udc4d", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/pulls/comments/131981655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "thierryreding": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/44128585", "body": "I don't think marking libwrap as noinst will work, since that typically results in automake building it as a static library, which will prevent it from being used with LD_PRELOAD. Perhaps namespacing it as libgrate-wrap.so would work?\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/44128585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "sarnold": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/44141836", "body": "The goal for the trimslice is a fully open source tegra build for xorg and weston/wayland.  Still using both the main portage tree and my overlays, but it's on full mainline kernel (using gentoo-sources) and device tree u-boot.  Of all my arm machines, this one is the only one close to \"fully open source\"...\n", "reactions": {"url": "https://api.github.com/repos/grate-driver/grate/issues/comments/44141836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}}}}