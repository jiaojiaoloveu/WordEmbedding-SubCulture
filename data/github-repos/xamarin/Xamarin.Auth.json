{"_default": {"1": {"MobileRez": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/259", "title": "Xamairn.Auth causing System.IO.FileNotFoundException when trying to build", "body": "# Xamarin.Auth Issue\r\n\r\nWhen building with a .net standard 2.0 project app errors with:\r\n\t\tException while loading assemblies: System.IO.FileNotFoundException: Could not load assembly 'Xamarin.Auth, Version=1.3.0.0, Culture=neutral, PublicKeyToken='. Perhaps it doesn't exist in the Mono for Android profile?\r\nFile name: 'Xamarin.Auth.dll'\r\n   at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve(AssemblyNameReference reference, ReaderParameters parameters) in /Users/builder/data/lanes/5749/ef47226b/source/xamarin-android/external/Java.Interop/src/Java.Interop.Tools.Cecil/Java.Interop.Tools.Cecil/DirectoryAssemblyResolver.cs:line 229\r\n   at Xamarin.Android.Tasks.ResolveAssemblies.AddAssemblyReferences(DirectoryAssemblyResolver resolver, ICollection`1 assemblies, AssemblyDefinition assembly, Boolean topLevel)\r\n   at Xamarin.Android.Tasks.ResolveAssemblies.Execute(DirectoryAssemblyResolver resolver)\tLvlUpHealth.Android\t\t\t\r\n\r\nyes its installed on all platforms. \r\n\r\n manually adding missing references to project cleaning, deleting obj and bin folders and rebuilding does not solve the issue\r\n\r\n*IF BUG, INCLUDE THIS PART:*\r\n\r\n### Version\r\n\r\n- [ ] nuget version = 4.5.0\r\n- [ ] component version = 1.5.0.3 \r\n- [ ] sample\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. make new .net standard 2.0 project\r\n2. add Xamarin.Auth.XamarinForms to project\r\n3. attempt to build\r\n\r\nPlatform:\r\n\r\n-\t[] .NET version = 4.7.02556\r\n-\t[] Xamairn version = 4.8.0.757 (7f9ec2a)\r\n\r\n\r\n### Expected behaviour\r\n\r\napp should build with out errors. \r\n\r\n### Actual behaviour\r\n\r\napp errors and refuses to build. installing nuget packages manually does not work\r\n\r\n\r\n\r\n*IF IT IS A NEW FEATURE REQUEST, INCLUDE THIS PART:*\r\n\r\n### Feature description\r\n\r\nWrite a description of the feature. How should it work? How should it look?\r\nInclude some graphics if this could help!\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Emixam23": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/258", "title": "Method 'Android.Support.CustomTabs.CustomTabsIntent.LaunchUrl' not found.", "body": "# Xamarin.Auth Issue\r\n\r\n### Version\r\n\r\n- [ ] nuget version = 1.5.0.3\r\n- [ ] component version = 26.0.1.0\r\n- [ ] xamarin forms version = 2.5.0.121934\r\n- .NET Core 2.0 & Android 8\r\n\r\n### Steps to reproduce\r\n\r\n1. Update Xamarin.Forms, Xamarin.Android.*, Xamarin.auth to the versions above\r\n2. create a Auth client with **isUsingNativeUI = true**\r\n\r\n        // An example of code\r\n        public OAuth2Authenticator Authenticator(Action<User> onCompleted, Action<string> onError)\r\n        {\r\n            OAuth2Authenticator authenticator = new OAuth2Authenticator(\r\n                clientId,\r\n                clientSecret,\r\n                Scope,\r\n                new Uri(AuthorizeUrl),\r\n                new Uri(redirectUri),\r\n                new Uri(AccessTokenUrl),\r\n                null,\r\n                isUsingNativeUI)\r\n            {\r\n                AllowCancel = true,\r\n                ShowErrors = false\r\n            };\r\n\r\n            authenticator.Completed += OnAuthCompleted;\r\n            authenticator.Error += OnAuthError;\r\n\r\n            OnCompleted = onCompleted;\r\n            OnError = onError;\r\n\r\n            return authenticator;\r\n        }\r\n\r\n3. Build & Deploy\r\n\r\n> System.MissingMethodException\r\n> Method 'Android.Support.CustomTabs.CustomTabsIntent.LaunchUrl' not found.\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/231", "title": "Xamarin.Auth UWP side", "body": "Hi,\r\n\r\nI would like to know how does work the redirection (OnSuccess) on UWP because I stay on google and I the webview doesn't get closed.. \r\n\r\nI know that, on Android, I need the following class :\r\n\r\n    using System;\r\n    using Android.App;\r\n    using Android.Content;\r\n    using Android.Content.PM;\r\n    using Android.OS;\r\n    using PROJECT.Sources.Components;\r\n\r\n    namespace PROJECT.Droid.Sources.DependencyServices\r\n    {\r\n    \t[Activity(Label = \"CustomUrlSchemeInterceptorActivity\", NoHistory = true, LaunchMode = LaunchMode.SingleTop)]\r\n    \t[IntentFilter(\r\n    \t\tnew[] { Intent.ActionView },\r\n    \t\tCategories = new[] { Intent.CategoryDefault, Intent.CategoryBrowsable },\r\n    \t\tDataSchemes = new[] { \"com.googleusercontent.apps.xxxxxxxxxx=xxxxxxxxxxxxxxx\", \"http://www.facebook.com/connect/login_success.html\" },\r\n    \t\tDataPath = \"/oauth2redirect\")]\r\n    \tpublic class CustomUrlSchemeInterceptorActivity : Activity\r\n    \t{\r\n    \t\tprotected override void OnCreate(Bundle savedInstanceState)\r\n    \t\t{\r\n    \t\t\tbase.OnCreate(savedInstanceState);\r\n\r\n    \t\t\t// Convert Android.Net.Url to Uri\r\n    \t\t\tvar uri = new Uri(Intent.Data.ToString());\r\n\r\n    \t\t\t// Load redirectUrl page\r\n    \t\t\tAuthenticationState.Authenticator.OnPageLoading(uri);\r\n\r\n    \t\t\tFinish();\r\n    \t\t}\r\n    \t}\r\n    }\r\n\r\nBut what about UWP?\r\n\r\nThank for any help !", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/224", "title": "Xamarin Auth - Facebook & GooglePlus", "body": "I'm currently begining to work with `Xamarin.Auth` and I'm facing 2 problems for which I'm stuck since 1 day and half..\r\n\r\nI have this piece of code :\r\n\r\n    public class OAuth\r\n\t{\r\n\t\tprivate Account account;\r\n\t\tprivate AccountStore store;\r\n\r\n\t\t// These values do not need changing\r\n\t\tpublic string Scope;\r\n\t\tpublic string AuthorizeUrl;\r\n\t\tpublic string AccessTokenUrl;\r\n\t\tpublic string UserInfoUrl;\r\n\r\n\t\tstring clientId;\r\n\t\tstring redirectUri;\r\n\r\n        private Func<JObject, User> OAuthParser;\r\n\r\n        private Action<User> OnCompleted;\r\n        private Action<string> OnError;\r\n\r\n        public OAuth()\r\n        {\r\n            account = null;\r\n            store = null;\r\n\r\n            Scope = \"\";\r\n            AuthorizeUrl = \"\";\r\n            AccessTokenUrl = \"\";\r\n            UserInfoUrl = \"\";\r\n\r\n            clientId = \"\";\r\n            redirectUri = \"\";\r\n        }\r\n\r\n\t\tpublic OAuth Facebook()\r\n\t\t{\r\n\t\t\t// These values do not need changing\r\n\t\t\tScope = \"public_profile\";\r\n\t\t\tAuthorizeUrl = \"https://m.facebook.com/dialog/oauth/\";\r\n\t\t\tAccessTokenUrl = \"\";\r\n\t\t\tUserInfoUrl = \"\";\r\n\r\n\t\t\tswitch (Device.RuntimePlatform)\r\n\t\t\t{\r\n\t\t\t\tcase Device.iOS:\r\n\t\t\t\t\tclientId = \"<insert IOS client ID here>\";\r\n\t\t\t\t\tredirectUri = \"<insert IOS redirect URL here>:/oauth2redirect\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase Device.Android:\r\n\t\t\t\t\tclientId = \"206316176526191\";\r\n\t\t\t\t\tredirectUri = \"http://www.facebook.com/connect/login_success.html\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tOAuthParser = ParseFacebookResponse;\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n        public OAuth GooglePlus()\r\n\t\t{\r\n\t\t\t// These values do not need changing\r\n\t\t\tScope = \"https://www.googleapis.com/auth/userinfo.email\";\r\n\t\t\tAuthorizeUrl = \"https://accounts.google.com/o/oauth2/auth\";\r\n\t\t\tAccessTokenUrl = \"https://www.googleapis.com/oauth2/v4/token\";\r\n\t\t\tUserInfoUrl = \"https://www.googleapis.com/oauth2/v2/userinfo\";\r\n\r\n\t\t\tswitch (Device.RuntimePlatform)\r\n\t\t\t{\r\n\t\t\t\tcase Device.iOS:\r\n\t\t\t\t\tclientId = \"<insert IOS client ID here>\";\r\n\t\t\t\t\tredirectUri = \"<insert IOS redirect URL here>:/oauth2redirect\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase Device.Android:\r\n\t\t\t\t\tclientId = \"548539660999-muighch5brcrbae8r53js0ggdad5jt45.apps.googleusercontent.com\";\r\n\t\t\t\t\tredirectUri = \"com.googleusercontent.apps.548539660999-muighch5brcrbae8r53js0ggdad5jt45:/oauth2redirect\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tOAuthParser = ParseGooglePlusResponse;\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tpublic OAuth2Authenticator Authenticator(Action<User> onCompleted, Action<string> onError)\r\n\t\t{\r\n\t\t\tOAuth2Authenticator authenticator = new OAuth2Authenticator(\r\n                clientId,\r\n                null,\r\n                Scope,\r\n                new Uri(AuthorizeUrl),\r\n                new Uri(redirectUri),\r\n                new Uri(AccessTokenUrl),\r\n                null,\r\n                false);\r\n\r\n        authenticator.Completed += OnAuthCompleted;\r\n        authenticator.Error += OnAuthError;\r\n\r\n            OnCompleted = onCompleted;\r\n            OnError = onError;\r\n\r\n            return authenticator;\r\n\t\t}\r\n\r\n        private async void OnAuthCompleted(object sender, AuthenticatorCompletedEventArgs e)\r\n        {\r\n\t\tOAuth2Authenticator OAuth2Authenticator = sender as OAuth2Authenticator;\r\n\t\tif (OAuth2Authenticator != null)\r\n\t\t{\r\n\t\t\tOAuth2Authenticator.Completed -= OnAuthCompleted;\r\n\t\t\tOAuth2Authenticator.Error -= OnAuthError;\r\n\t\t}\r\n\r\n\t\t//User user = null;\r\n\t\tif (e.IsAuthenticated)\r\n\t\t{\r\n\t\t\t// If the user is authenticated, request their basic user data from Google\r\n\t\t\t// UserInfoUrl = https://www.googleapis.com/oauth2/v2/userinfo\r\n\t\t\tvar request = new OAuth2Request(\"GET\", new Uri(UserInfoUrl), null, e.Account);\r\n\t\t\tvar response = await request.GetResponseAsync();\r\n\t\t\tif (response != null)\r\n\t\t\t{\r\n                    // Deserialize the data and store it in the account store\r\n                    // The users email address will be used to identify data in SimpleDB\r\n                    string str = await response.GetResponseTextAsync();\r\n                    JObject jobject = JObject.Parse(str);\r\n                    User user = OAuthParser(jobject);\r\n\r\n                    OnCompleted(user);\r\n\t\t\t}\r\n\r\n\t\t\tif (account != null)\r\n\t\t\t{\r\n\t\t\t\tstore.Delete(account, App.AppName);\r\n\t\t\t}\r\n\r\n\t\t\tawait store.SaveAsync(account = e.Account, App.AppName);\r\n\t\t}\r\n    }\r\n\r\n    private void OnAuthError(object sender, AuthenticatorErrorEventArgs e)\r\n    {\r\n            OAuth2Authenticator OAuth2Authenticator = sender as OAuth2Authenticator;\r\n\r\n\t\tif (OAuth2Authenticator != null)\r\n\t\t{\r\n\t\t\tOAuth2Authenticator.Completed -= OnAuthCompleted;\r\n\t\t\tOAuth2Authenticator.Error -= OnAuthError;\r\n\t\t}\r\n\r\n\t\tOnError(\"Authentication error: \" + e.Message);\r\n    }\r\n\r\n        private static User ParseGooglePlusResponse(JObject jobject)\r\n        {\r\n            try\r\n            {\r\n                User user = new User()\r\n                {\r\n                    Email = jobject[\"email\"].ToString(),\r\n                    Pseudo = jobject[\"name\"].ToString(),\r\n                    Firstname = jobject[\"given_name\"].ToString(),\r\n                    Surname = jobject[\"family_name\"].ToString(),\r\n                    Image = jobject[\"picture\"].ToString(),\r\n                    Password = \"girafe\"\r\n                };\r\n                return user;\r\n            }\r\n            catch (Exception e) \r\n            { Debug.WriteLine(e.ToString()); }\r\n            return null;\r\n        }\r\n\r\n\t\tprivate static User ParseFacebookResponse(JObject jobject)\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n                Debug.WriteLine(jobject);\r\n\t\t\t\tUser user = new User()\r\n\t\t\t\t{\r\n\t\t\t\t\tEmail = jobject[\"email\"].ToString(),\r\n\t\t\t\t\tPseudo = jobject[\"name\"].ToString(),\r\n\t\t\t\t\tFirstname = jobject[\"given_name\"].ToString(),\r\n\t\t\t\t\tSurname = jobject[\"family_name\"].ToString(),\r\n\t\t\t\t\tImage = jobject[\"picture\"].ToString(),\r\n\t\t\t\t\tPassword = \"girafe\"\r\n\t\t\t\t};\r\n\t\t\t\treturn user;\r\n\t\t\t}\r\n\t\t\tcatch (Exception e)\r\n\t\t\t{ Debug.WriteLine(e.ToString()); }\r\n\t\t\treturn null;\r\n\t\t}\r\n    }\r\n\r\nSo, I'm using this class like that:\r\n\r\n    private void FacebookAuthConnection()\r\n        {\r\n            AuthenticationState.Authenticator = OAuthService.Facebook().Authenticator(OAuthLoginCompleted, OAuthLoginError);\r\n            Presenter.Login(AuthenticationState.Authenticator);\r\n        }\r\n\r\nHowever, the problems are coming.. First, GooglePlus works, but I got an alert on my android phone that says *\"Chrome Custom Tabs Doesn't Close ...\"*, so the application crashes with an empty stack trace... I searched on the web and the only thing I got is to turn false the last parameter of `new OAuth2Authenticator();`, which doesn't work since google doesn't allow it from a webview...\r\n\r\nSo I was like, ok my code works, I get the user infos blablabla, let's try with facebook if it works from the native browser. However, I can't find the parameters URL...\r\n\r\n    Scope = \"\";\r\n    AuthorizeUrl = \"\";\r\n    AccessTokenUrl = \"\";\r\n    UserInfoUrl = \"\";\r\n\r\n - **Scope** seems to be `public_profile`\r\n - **AuthorizationUrl** would be `https://m.facebook.com/dialog/oauth/`\r\n\r\nBut what about the 2 others? I have them for Google+.\r\n\r\nI'm really stuck and I feel like, each new seconds that passes, I get more and more frustrated...\r\n\r\nThank !", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/224/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "anthonyliriano": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/256", "title": "Xamarin.Auth.AccountStoreException", "body": "[SOLVED]", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SuhanKoh": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/255", "title": "Is refreshing the page available in the api?", "body": "Hello, just wondering if there is something in the code that let me refresh the screen? or go back to the first page?", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/235", "title": "Capture the screen (prevent showing offline page)?", "body": "Is there a way to override the page when you call Authenticate while you're offline?\r\nRight now it will display the default offline page (android will show the whole URL on the screen).\r\n\r\n### Steps to reproduce\r\n\r\n1. Turn on airplane mode\r\n2. Call Xamarin.Auth authentication\r\n3. It should show the offline page.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/189", "title": "Login Screen for Android is not destroyed?", "body": "# Xamarin.Auth Issue\r\n\r\nOn Android, if using 'is_using_native_ui = false', while showing the login screen, rotate the screen to landscape, then back to portrait. Then Login. You will be required to login three time. (The non-native-ui is creating each instance on rotate while not destroying.)\r\nIs is an expected behavior?\r\n\r\n### Version 1.5.0\r\n\r\n- [x] nuget version = 1.5.0\r\n\r\n### Steps to reproduce\r\n\r\n1. Using'is_using_native_ui = false', while showing the login screen.\r\n2.  Rotate screen, login page will be created without destroying.\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/189/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Brosten": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/254", "title": "ClearCookiesBeforeLogin doesn't seem to work on UWP", "body": "- [x ] nuget version = 1.5.0.3\r\n- [ ] component version = 2.5.x\r\n\r\n....\r\nauth.ClearCookiesBeforeLogin = true;\r\nvar presenter = new Xamarin.Auth.Presenters.OAuthLoginPresenter();\r\npresenter.Login(auth);\r\n....\r\n\r\nThe second time I call presenter.Login() on UWP, I get redirected to the \"Successful login\" page (redirectUrl). This does NOT happen och Android or iOS. \r\nI guess the correct behaviour when ClearCookiesBeforeLogin =true is to show the auth-login page, without any knowledge of prior sessions?", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/250", "title": "UWP shows blank page in desktop, but works on phone", "body": "- [x ] nuget version = 1.5.0.3\r\n\r\nWe have our own OAuth2 server/provider.\r\nTo use it, we use this code in the UWP LoginPage-renderer\r\n```\r\n            var auth = new OAuth2Authenticator(\r\n               clientId: \"Our.ClientId\",\r\n               scope: \"Our.Scope\",\r\n               authorizeUrl: new Uri(\"https://ourUrl.se/connect/authorize\"),\r\n               redirectUrl: new Uri(\"https://ourUrl.se/loginsuccessful.html\")\r\n\r\n  Frame rootFrame = Window.Current.Content as Frame;\r\n            rootFrame.Navigate(auth.GetUI(), auth);\r\n```\r\n\r\nThis works great if used on a Windows Phone (10), but when running it local (on my desktop), I just end up on a blank screen. (Instead of the login screen provided by our Oauth2 server). iOS and Android works like a charm.\r\n\r\nAlso interesting is that using microsoft settings (https://login.live.com/oauth20_authorize.srf etc...) does work both on Windows phone and Desktop.\r\n\r\nSo... what differs between our Environment and Microsofts?\r\n- We don't use a ClientSecret or an AccessTokenUrl\r\n- Our oauth-server seems to do some kind of redirection... When given a url like this:\r\nhttps://ourOauth2Server.se/connect/authorize?client_id=xyz&redirect_uri=xyz&response_type=token&scope=xyz&state=xyz\r\nwe become redirected to something like this:\r\nhttps://ourOauth2Server.se/login?signin=someGuid\r\n- The url created by xamarin auth, for our server has _response_type=token_. Microsoft has _response_type=code_.\r\n\r\nAny id\u00e9a if the problem is on our oauth2-server or in Xamarin Auth ?\r\n\r\nRegards\r\nAndreas Brosten\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/243", "title": "Unable to pop AuthenticatorPage from the Navigationstack", "body": "# Xamarin.Auth Issue\r\n\r\n*IF BUG, INCLUDE THIS PART:*\r\n\r\n### Version\r\n**I'm trying this on a Samsung Galaxy S7 phone (running Android 7.0)**\r\n\r\n- [x ] nuget version = 1.5.0.3\r\n- [ ] component version = \r\n- [ x] sample\r\nJust in simple code behind...\r\n\r\n      private void Button_OnClicked(object sender, EventArgs e)\r\n      {\r\n         var auth = GetOAuth2Authenticator();\r\n         auth.Completed += AuthOnCompleted;\r\n         auth.Error += AuthOnError;\r\n         auth.ShowErrors = false;\r\n         var login_page = new AuthenticatorPage(auth);\r\n         Navigation.PushModalAsync(login_page);\r\n      }\r\n\r\n      private void AuthOnError(object sender, AuthenticatorErrorEventArgs authenticatorErrorEventArgs)\r\n      {\r\n         Navigation.PopModalAsync();\r\n      }\r\n\r\n      private void AuthOnCompleted(object sender, AuthenticatorCompletedEventArgs authenticatorCompletedEventArgs)\r\n      {\r\n         System.Diagnostics.Debug.WriteLine(\"AuthOnCompleted\");\r\n      }\r\n\r\n      private OAuth2Authenticator GetOAuth2Authenticator()\r\n      {\r\n         return new OAuth2Authenticator(\r\n            clientId: \"*****************\",\r\n            clientSecret: \"***************************\",\r\n            scope: \"wl.basic\",\r\n            authorizeUrl: new Uri(\"https://login.live.com/oauth20_authorize.srf\"),\r\n            redirectUrl: new Uri(\"https://login.live.com/oauth20_desktop.srf\"),\r\n            accessTokenUrl: new Uri(\"https://login.live.com/oauth20_token.srf\"),\r\n            isUsingNativeUI: false\r\n         );\r\n      }\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Start app\r\n2. Click the button wired to the \"button click event\"\r\n3. Click the back-button on the MS Auth page\r\n\r\nPlatform:\r\n\r\n-\t[x] .NET version = .Net framework 4.5\r\n-\t[x] mono version = v8.0 (Android target version)\r\n\r\n\r\n### Expected behaviour\r\nI'd like to come back to the page that Pushed the AuthenticatorPage (My MainPage).\r\n\r\n### Actual behaviour\r\nThe AuthenticatorPage seems to be popped from the ModalStack, but a page with title \"Authenticate\" is still shown on my screen.\r\n\r\nCan also add that the Error-event is raised four times, all of them saying:\r\n\"_OAuth Error = The user has denied access to the scope requested by the client application._\"\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mathieumack": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/253", "title": "Be able to add settings on the Android Web view", "body": "# Xamarin.Auth Issue\r\n\r\n### Feature description\r\n\r\nWhen we used the Xamarin.Android assembly for our application we have some errors on the page rendering Inside the webview.\r\nOur OAuth provider says that we need to update the webView object settings to add these lines :\r\nwebView.getSettings().setUseWideViewPort(true);\r\nwebView.getSettings().setLoadWithOverviewMode(true);\r\n(Java version of the code sample).\r\n\r\nHow can I change these settings of the WebView in order to manage this specific Oauth provider constraints ?\r\n\r\nIs it possible to change the webView property in the WebAuthenticatorActivity partial class to a public field (line 40 https://github.com/xamarin/Xamarin.Auth/blob/master/source/Core/Xamarin.Auth.XamarinAndroid/PlatformSpecific/WebAuthenticatorActivity.cs) ?\r\nBy the Intent sended when I call the GetUI() method, I will be able to cast the object as WebAuthenticatorActivity object, and change the webView settings.\r\n\r\nThanks for your help.\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/253/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "georgethms10": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/252", "title": "Showing  \"the user+denied+your+request\" Popup on clicking cancel in LinkedIn authentication screen", "body": "# Xamarin.Auth Issue\r\n\r\nShowing \"the user+denied+your+request\" Popup on clicking cancel in LinkedIn authentication screen\r\n\r\n### Version\r\n\r\n- [ ] nuget version = 1.5.0.3 IOS\r\n- [ ] nuget version = 1.3.1 ANDROID\r\n### Steps to reproduce\r\n\r\n1.Click the liked in login button \r\n2.In the linkedIn authentication page click cancel\r\n3.An error message is shown \"the user+denied+your+request\"\r\n\r\nPlatform:\r\n-   Android and IOS both this error message is shown\r\n-\t[] .NET version = \r\n-\t[] mono version = 5.4.1\r\n\r\n\r\n### Expected behaviour\r\nThe error message has no meaning. No need of that error message\r\nTell us what should happen\r\nThe error message has no meaning. No need of that error message. It should simply go back to the application with showing error message.\r\n### Actual behaviour\r\nIts shows error message  **\"the user+denied+your+request\"** and the cancel callback is hit two times\r\nTell us what happens instead\r\nCan you also include a screen shot?\r\n<img width=\"400\" alt=\"screen shot 2017-12-06 at 12 57 11 pm\" src=\"https://user-images.githubusercontent.com/6296111/33649904-c6c814ae-da85-11e7-8169-c17d6becdfa2.png\">\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mdonogma": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/251", "title": "please update the xamarin component store to indicate UWP / windows support", "body": "if this supports UWP then please ship a working build with UWP to the xamarin component store.\r\n\r\nafter hours of searching i cam across this repository however xamarin component store outdated.", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/260108902", "body": "this stopped working after November 1 2016 for google. check this out: https://developers.googleblog.com/2016/08/modernizing-oauth-interactions-in-native-apps.html\n\nwhen can we expect update to component\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/260108902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/260108932", "body": "UWP support please as part of standard component please. \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/260108932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ataparia": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/248", "title": "\"Error Authenticating - Invalid grant\" when you use the OAuth2Authenticator constructor with access token url parameter", "body": "# Xamarin.Auth Issue\r\n\r\n### Version\r\n\r\n- [ ] nuget version = 1.5.0.3\r\n- [ ] component version = \r\n- [ ] sample\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Construct OAuth2Authenticator object instance and pass in the AccessTokenUrl parameter. \r\nEg. \r\n var authenticator = new OAuth2Authenticator(\r\n                                        authServerInfo.ClientId,\r\n                                        null,\r\n                                        authServerInfo.Scope,\r\n                                        new Uri(authServerInfo.AuthorizationServerUrl),\r\n                                        new Uri(authServerInfo.RedirectUrl),\r\n                                        new Uri(authServerInfo.AccessTokenUrl),\r\n                                        null,\r\n                                        true)\r\n                {\r\n                    ShowErrors = false,\r\n                    AllowCancel = false\r\n                };              \r\n2.Subscribe to Completed and Error handlers on the authenticator object.\r\n3.Run the application\r\n\r\nNote: Once you authenticate and allow for the access, the code flow always comes to the Error handler with the following error - \"Error Authenticating - Invalid grant\". However if you construct the OAuth2Authenticator object without the AccessTokenUrl parameter, things work great but the code returns the access token directly instead of the code.\r\n\r\nPlatform:\r\n\r\n-\t[] .NET version = 4.5\r\n-\t[] mono version = \r\n\r\n\r\n### Expected behaviour\r\nNo matter how the OAuth2Authenticator object is constructed(with or without the AccessTokenUrl parameter), after successful authentication, \"Completed\" event should fire.\r\n\r\nTell us what should happen\r\nWhen OAuth2Authenticator object is constructed with the AccessTokenUrl parameter, Error even handler fires even after successful authentication.\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "benczuk": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/247", "title": "ComicBook.Droid 1.5.0 broken", "body": "# Xamarin.Auth Issue\r\n\r\n*IF BUG, INCLUDE THIS PART:*\r\n\r\n### Version\r\n\r\n- [ ] nuget version = 1.5.0.3\r\n- [ ] component version = 1.5.0.3\r\n- [ ] sample ComicBook.Droid\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Pull tag 1.5.0 (or commit 1.5.0.3) from git\r\n2. Build and run ComicBook.droid in Visual studio on physical android device\r\n3. Select native UI, Custom renderers, push modal async\r\n4. Press Google auth and complete process\r\n5. Browser is redirected to google.com, custom URL handler does not fire\r\n\r\nPlatform:\r\n\r\n-\t[] .NET version = \r\n-\t[] mono version = \r\n\r\n\r\n### Expected behaviour\r\n\r\ncustomer url handler triggered, process completes\r\n\r\n### Actual behaviour\r\n\r\ngoogle.com loaded in browser, break point on custom url activity not hit.\r\n\r\nSame behavior is observed in my App\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "FlashTek": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/246", "title": "Using OAuthLoginPresenter with OAuth1Authenticator on UWP causes Exception", "body": "# Xamarin.Auth Issue\r\n\r\nI am using this code to show a `OAuthLoginPresenter` on Android without any problem. \r\n\r\n    _authenticator = new Xamarin.Auth.OAuth1Authenticator(consumerKey, consumerSecret, requestTokenUrl, authorizeUrl, accessTokenUrl, callbackUrl, null, true);\r\n    _authenticator.ShowErrors = true;\r\n\r\n    var presenter = new Xamarin.Auth.Presenters.OAuthLoginPresenter();\r\n    presenter.Login(_authenticator);\r\n\r\nWhen I try to execute the same code on the UWP app, I get this error:\r\n\r\n    Unable to cast object of type 'Xamarin.Auth.OAuth1Authenticator' to type 'Xamarin.Auth.OAuth2Authenticator'.\r\n\r\nwhich is probably caused by the `OnNavigate` method inside `WebAuthenticatorPage.xaml.cs`. Is there another way to use the `OAuthLoginPresenter` with `OAuth1` on Android and the UWP? Is this a bug, or am I using the interface in a wrong way?\r\n\r\n*IF BUG, INCLUDE THIS PART:*\r\n\r\n### Version\r\n\r\n- [ ] nuget version = 1.5.0.3\r\n\r\nPlatform: Universal Windows, Windows 10 Fall Creators Update\r\n\r\n\r\nEdit: Possibly a duplicate of [this ](https://github.com/xamarin/Xamarin.Auth/issues/236) report?", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "TomQv": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/244", "title": "NullReferenceException in presenter.Login on Windows-desktop", "body": "I'm trying to use Xamarin.Auth 1.5.0.3 in a Windows.Forms app, but get NullReferenceException  in \r\n\r\nvar presenter = new Xamarin.Auth.Presenters.OAuthLoginPresenter();\r\npresenter.Login(authenticator);\r\n\r\nI followed [this tutorial](https://developer.xamarin.com/guides/xamarin-forms/cloud-services/authentication/oauth/) but I also need Windows.Forms and Xamarin.Mac. Most probably I need to change something because its desktop and not mobile, but was is the correct way to initialise the Login-UI on desktop?\r\n\r\nThanks\r\nTom\r\n\r\n\r\n\r\nSystem.NullReferenceException occurred\r\n  HResult=0x80004003\r\n  Message=Der Objektverweis wurde nicht auf eine Objektinstanz festgelegt.\r\n  Source=Xamarin.Auth\r\n  StackTrace:\r\n   at Xamarin.Auth.Presenters.OAuthLoginPresenter.Login(Authenticator authenticator)\r\n   at Test.Win.Form1.btnLoginGoogle_Click(Object sender, EventArgs e) in C:\\Users\\Tom\\QuoVadis\\QvxCloud\\Test.Win\\Form1.cs:line 50\r\n   at System.Windows.Forms.Control.OnClick(EventArgs e)\r\n   at System.Windows.Forms.Button.OnClick(EventArgs e)\r\n   at System.Windows.Forms.Button.OnMouseUp(MouseEventArgs mevent)\r\n   at System.Windows.Forms.Control.WmMouseUp(Message& m, MouseButtons button, Int32 clicks)\r\n   at System.Windows.Forms.Control.WndProc(Message& m)\r\n   at System.Windows.Forms.ButtonBase.WndProc(Message& m)\r\n   at System.Windows.Forms.Button.WndProc(Message& m)\r\n   at System.Windows.Forms.Control.ControlNativeWindow.OnMessage(Message& m)\r\n   at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message& m)\r\n   at System.Windows.Forms.NativeWindow.DebuggableCallback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)\r\n   at System.Windows.Forms.UnsafeNativeMethods.DispatchMessageW(MSG& msg)\r\n   at System.Windows.Forms.Application.ComponentManager.System.Windows.Forms.UnsafeNativeMethods.IMsoComponentManager.FPushMessageLoop(IntPtr dwComponentID, Int32 reason, Int32 pvLoopData)\r\n   at System.Windows.Forms.Application.ThreadContext.RunMessageLoopInner(Int32 reason, ApplicationContext context)\r\n   at System.Windows.Forms.Application.ThreadContext.RunMessageLoop(Int32 reason, ApplicationContext context)\r\n   at System.Windows.Forms.Application.Run(Form mainForm)\r\n   at Test.Win.Program.Main() in C:\\Users\\Tom\\QuoVadis\\QvxCloud\\Test.Win\\Program.cs:line 19\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "marcelinhovt": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/242", "title": "NativeUi for Instagram works?", "body": "I tried a lot of ways to implement a NativeUi for Instagram but is not working. Redirects me to my redirectpage and nothing works.\r\nIf nativeui = false, works perfect.", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/218", "title": "Exception using isUsingNativeUI: true ? For facebook", "body": "I am reading the doc, but if i set isUsingNativeUI: true i got a exception. If i set to false, works ! \r\nIts for facebook login...\r\nI am a begginer. Do i need to set something on MainActivity ? beside             global::Xamarin.Auth.Presenters.XamarinAndroid.AuthenticationConfiguration.Init(this, bundle);\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/218/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RadoslawKubas": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/240", "title": "Facebook NativeUi - how to change user?", "body": "I'm trying to implement Facebook NativeUI authentication in Xamarin.Forms PCL project for iOS, and have following problem.\r\n\r\nI created authenticator  in PCL library like this\r\n\r\n```\r\nauthenticator = new OAuth2Authenticator(\r\n                    clientId: ClientId,\r\n                    scope: \"\",\r\n                    authorizeUrl: new Uri(\"https://m.facebook.com/v2.10/dialog/oauth \"),\r\n                    redirectUrl: new Uri($\"fb{ClientId}://authorize\"),\r\n                    getUsernameAsync: null,\r\n                    isUsingNativeUI: true\r\n                )\r\n                {\r\n                    AllowCancel = true,\r\n                    ShowErrors = false\r\n                };\r\n\r\n            authenticator.Completed += OnFacebookAuthCompleted;\r\n            authenticator.Error += OnFacebookAuthError;\r\n\r\n            AuthenticationState.Authenticator = authenticator;\r\n\r\n            var presenter = new Xamarin.Auth.Presenters.OAuthLoginPresenter();\r\n            presenter.Login(authenticator);\r\n```\r\n\r\nIt works fine, user can login without any problem with his user and password.\r\n\r\nThe problem is when user want to login with another Facebook account. Next time login screen looks like that:\r\n\r\n![s1](https://user-images.githubusercontent.com/30774825/31774460-1871dc88-b4e6-11e7-8892-98042d112663.png)\r\n\r\nIt is perfect if user want to use same account, but if want to login with another and click \"Cancel\" application receive Error message (\"OAuth Error = Permissions+error\") and browser redirect to new blank page like that:\r\n\r\n![s2](https://user-images.githubusercontent.com/30774825/31774705-c68582ca-b4e6-11e7-8bd1-fa28c76c436d.png)\r\n\r\nAnd next time still offer login again to same account. \r\n\r\nThe only way to login to another account is to delete app and install it again.\r\n\r\nI guess, it is not a bug but some my mistake, but can't find any solution myself. When using Facebook not native or Google native everything works fine, but in this case have no idea what to do.\r\n\r\nHow can I force app to forget previous account?\r\n\r\nAnd another question, is there a way to close native browser page after unsuccessfully login? When user login successfully the page close itself but in case of error stay on blank page like in this example.\r\n ", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bartdkmediahuis": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/239", "title": "AndroidAccountStore - LoadEmptyKeyStore - KeyStore was not initialized", "body": "# Xamarin.Auth Issue\r\n\r\n### Version\r\n- [ ] nuget version = 1.5.0\r\n\r\n### Steps to reproduce\r\n\r\n1. Hard to reproduce this issue, since we only have exception logs of end-users facing this problem. \r\n\r\n```\r\nException: KeyStore was not initialized\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <506a42a3a126462eb26f593d3ae1120c>:0 \r\n  at Java.Interop.JniEnvironment+InstanceMethods.CallNonvirtualObjectMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniObjectReference type, Java.Interop.JniMethodInfo method, Java.Interop.JniArgumentValue* args) [0x00089] in <742a6edd960b4fb699cb9ccbd74061bf>:0 \r\n  at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeNonvirtualObjectMethod (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) [0x0001f] in <742a6edd960b4fb699cb9ccbd74061bf>:0 \r\n  at Java.Security.KeyStore.Aliases () [0x0000a] in <11c47835c3f94ca5b4ed0336efc2f1d9>:0 \r\n  at Xamarin.Auth.AndroidAccountStore.FindAccountsForServiceAsync (System.String serviceId) [0x00012] in <8f2237247f7844b1a995cb5465cdbfbe>:0 \r\n```\r\nWondering if this specific code is still required ? (**AndroidAccountStore**)\r\n\r\n<summary>Work around Bug https://bugzilla.xamarin.com/show_bug.cgi?id=6766 </summary>\r\nvoid LoadEmptyKeyStore(char[] password)", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/239/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "DVDPT": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/237", "title": "UWP, Desktop Back button not showing, when AllowCancel = true. [Fix Inside]", "body": "# UWP, Desktop Back button not showing\r\n\r\n\r\n### Version\r\n\r\nAny\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a Xamarin.Forms, app\r\n2. Initialize a `OAuth2Authenticator` (set AllowCancel to true) and run `OAuthLoginPresenter.PlatformLogin(auth)` on UWP Desktop\r\n3. Note that the back button does not show, forcing the user to close the app in order to go back.\r\n\r\nPlatform:\r\n\r\nUWP Any version on the Desktop\r\n\r\n\r\n### Expected behaviour\r\nWhen AllowCancel is set to true, the back button should appear\r\n\r\n\r\n### Actual behaviour\r\n\r\nThe back button doesn't appear\r\n\r\n\r\n### Fix source code\r\n\r\nToo lazy to clone and create a pull request for it, so I leave the source here, if you can't integrate it without a pull request let me know:\r\n\r\n```\r\n public class PlatformOAuthLoginPresenter\r\n    {\r\n        private readonly bool _hasHardwareButton;\r\n        private Frame _rootFrame;\r\n        private Authenticator _authenticator;\r\n\r\n        public PlatformOAuthLoginPresenter()\r\n        {\r\n            _hasHardwareButton = ApiInformation.IsTypePresent(\"Windows.Phone.UI.Input.HardwareButtons\");\r\n        }\r\n\r\n        public void Login(Authenticator authenticator)\r\n        {\r\n            _authenticator = authenticator;\r\n            authenticator.Completed += AuthenticatorCompleted;\r\n            System.Type pageType = authenticator.GetUI();\r\n\r\n            _rootFrame = Window.Current.Content as Frame;\r\n            _rootFrame.Navigate(pageType, authenticator);\r\n\r\n\r\n            if (!_hasHardwareButton && _authenticator.AllowCancel)\r\n            {\r\n                var navManager = SystemNavigationManager.GetForCurrentView();\r\n                navManager.AppViewBackButtonVisibility = AppViewBackButtonVisibility.Visible;\r\n                navManager.BackRequested += MyPlatformOAuthLoginPresenter_BackRequested;\r\n            }\r\n        }\r\n\r\n        private void MyPlatformOAuthLoginPresenter_BackRequested(object sender, BackRequestedEventArgs e)\r\n        {\r\n            if (_rootFrame.CanGoBack)\r\n            {\r\n                _rootFrame.GoBack();\r\n                _authenticator.OnCancelled();\r\n            }\r\n        }\r\n\r\n        void AuthenticatorCompleted(object sender, AuthenticatorCompletedEventArgs e)\r\n        {\r\n            if (!_hasHardwareButton && _authenticator.AllowCancel)\r\n                SystemNavigationManager.GetForCurrentView().BackRequested -= MyPlatformOAuthLoginPresenter_BackRequested;\r\n\r\n            ((Authenticator)sender).Completed -= AuthenticatorCompleted;\r\n        }\r\n    }\r\n```\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Kookpot": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/236", "title": "WebAuthenticatorPage not working with OAuth1Authenticator in UWP", "body": "https://github.com/xamarin/Xamarin.Auth/blob/c584e5395f598b98b82bd22cfe079f135b0ffeda/source/Xamarin.Auth.UniversalWindowsPlatform/WebAuthenticatorPage.Events.xaml.cs#L28", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "DuarthVader": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/234", "title": "../iOS/MTOUCH: Error MT2002: Failed to resolve \"System.Json.JsonValue\" reference from \"Xamarin.Auth, Version=1.5.0.0, Culture=neutral, PublicKeyToken=null\" (MT2002) (project_name.iOS)", "body": "# Xamarin.Auth Issue\r\n### Version\r\n\r\n- [ ] nuget version = 4.3.0.2418\r\n- [x] component version = 1.5.0.3\r\n- [ ] sample\r\n\r\n\r\n### Steps to reproduce\r\nRelease:\r\n1. Compile iOS project\r\n\r\nDebug:\r\n1. Click play to run app in simulator.\r\n2. Perform any login atempt (in my app: Facebook, Google, Linked In)\r\n3. Fails due to error seen in screenshot below.\r\n\r\nPlatform:\r\n\r\n-\t[] .NET version = .NET Core\r\n                                     Runtime: /usr/local/share/dotnet/dotnet\r\n                                     Runtime Version: 2.0.0\r\n                                     SDK: /usr/local/share/dotnet/sdk/2.0.0/Sdks\r\n                                     SDK Version: 2.0.0\r\n                                     MSBuild SDKs: \r\n                                     /Library/Frameworks/Mono.framework/Versions/\r\n                                     5.2.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n-\t[] mono version = 5.2.0.224 (d15-3/14f2c81) (64-bit)\r\n\r\n### Expected behaviour\r\n\r\nRelease: Compile project in order to generate .ipa\r\nDebug: Get auth login response, convert into JsonValue in order to deserialize response.\r\n\r\n### Actual behaviour\r\n\r\nRelease: Compilation error\r\n\r\n![captura de pantalla 2017-09-26 a las 13 27 40](https://user-images.githubusercontent.com/1272447/30858123-89100530-a2be-11e7-8b52-24e3ab7f2e6d.png)\r\n\r\nDebug: When app is about to come back to my LoginViewModel I receive this exception:\r\n\r\n![captura de pantalla 2017-09-26 a las 13 32 24](https://user-images.githubusercontent.com/1272447/30858283-51c86792-a2bf-11e7-9ca9-9d11e818f616.png)\r\n\r\n![captura de pantalla 2017-09-26 a las 13 32 40](https://user-images.githubusercontent.com/1272447/30858289-5b3f169a-a2bf-11e7-863a-8d5bb1e87798.png)\r\n\r\nIf it helps I'm coding my project in visual studio community 2017 for Mac.\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Clemon-R": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/233", "title": "Bug size of the window with Facebook Authentificator on IOS", "body": "# Xamarin.Auth Issue\r\n\r\nHello,\r\n\r\nI have a problem with facebook authentificator, \"the window is too small to continue.\"\r\n![image001](https://user-images.githubusercontent.com/23109272/30797218-6e8afa2e-a1d5-11e7-8bc3-29524daf6030.png)\r\n\r\n\r\nwith this code:\r\nOAuth2Authenticator authenticator = new OAuth2Authenticator(\"XXXXXXXXXXXX\",\r\n                \"public_profile,publish_actions,manage_pages,publish_pages\",\r\n                new Uri(\"https://m.facebook.com/dialog/oauth\"),\r\n                new Uri(\"https://www.facebook.com/connect/login_success.html\"));\r\n\r\nThis bug happen only on IOS\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dagostinelli": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/229", "title": "Can't actually add a reference to Xamarin.Auth.Extensions in the PCL", "body": "# Xamarin.Auth.Extensions Issue\r\n\r\nThis might be related to this https://github.com/xamarin/Xamarin.Auth/issues/171\r\n\r\n### Version\r\n```\r\n<package id=\"Xamarin.Auth\" version=\"1.5.0.3\" targetFramework=\"portable45-net45+win8+wp8+wpa81\" />\r\n<package id=\"Xamarin.Auth.Extensions\" version=\"1.5.0.3\" targetFramework=\"portable45-net45+win8+wp8+wpa81\" />\r\n<package id=\"Xamarin.Forms\" version=\"2.3.4.270\" targetFramework=\"portable45-net45+win8+wp8+wpa81\" />\r\n```\r\n\r\n### Steps to reproduce\r\n\r\n1. Attempt to install the Xamarin.Auth.Extensions package after already installing Xamarin.Auth nuget package.  Do this in a PCL.\r\n2. Look at your project References.  Notice anything missing?  What's missing is the extensions dll.  \r\n\r\nI attempted to add the DLL manually.  It turns out that the DLL in the Xamarin.Auth.Extensions package is called Xamarin.Auth.  Bug?\r\n\r\nNeedless to say, the result is that and object called `OAuth2AuthenticatorExtensions` is not available for use in source code.\r\n\r\n### Comments\r\n\r\nWhile we are on it...\r\n- Having this whole refresh token stuff outside of the main Xamarin.Auth project seems really odd.  [It's part of the spec](https://tools.ietf.org/html/rfc6749#section-1.5)  Maybe it wasn't part of the spec at one time?  I read [this link](https://github.com/xamarin/Xamarin.Auth/pull/79) and [this link](https://lostechies.com/jimmybogard/2014/11/13/mobile-authentication-with-xamarin-auth-and-refresh-tokens/) about the rationale behind separating it.  Still... seems a like this needs to get merged now.\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dschneid85": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/228", "title": "oAuth2 with implict flow for OpenID", "body": "Hello,\r\n\r\nI use your oauth framework to authenticate with our own oauth server.\r\nThis server is an connect2id server which implement the openid standard.\r\nWe would like to use the oauth2 implict flow with your framework but this isn't possible.\r\nThe connect2id server required for the implict flow the response_type=id_token or response_type=id_token%20token.\r\nTherefore the nonce parameter is also required. So I have to set this parameter if I use the implict flow.\r\nCheck this in the open id standard https://openid.net/specs/openid-connect-core-1_0.html#ImplicitFlowAuth. I think your oAuth framework should be worked according to the open id standard.\r\nWhat I have did I checked out your github project and changed a bit the class OAuth2Authenticator.cs.\r\nI added the nonce parameter and changed the response_type to id_token token. Then your code works fine for me.\r\nAnother problem what I have is how can I change the title page of the embedded webview. The title can I changed (authenticator.Title ) but not the icon and the background color.\r\nIs there any way to change this?\r\n\r\nBest regards,\r\n\r\nDaniel", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "patsadow2": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/227", "title": "Toolbar", "body": "Hello,\r\n Is there any magic way to remove ugly toolbar ??\r\n\r\nBr ;)", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/227/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zati-": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/226", "title": "Browser doesn't close itself on Android with native renderers", "body": "# Xamarin.Auth Issue\r\n\r\n*IF BUG, INCLUDE THIS PART:*\r\n\r\n### Version\r\n\r\n- [ ] nuget version = 1.5.0.3\r\n- [ ] Xamarin Forms = 2.3.4.270\r\n \r\n\r\n### Steps to reproduce\r\n\r\nCall OAuth2Autenticator on Android with native renderers, using presenter or AuthenticatorPage. \r\nCustom URL scheme is registered\r\n \r\n```\r\n     OAuth2Authenticator authenticator = new OAuth2Authenticator(\r\n              \"mobile\",\r\n              \"secret\",\r\n              \"openid profile api1\",\r\n              new Uri(Settings.Server + \"/connect/authorize\"),\r\n              new Uri(\"myapplogin://localhost/oauth2redirect\"),\r\n              new Uri(Settings.Server + \"/connect/token\"),\r\n              null,\r\n              true);\r\n            authenticator.Completed += Authenticator_Completed;\r\n            var presenter = new Xamarin.Auth.Presenters.OAuthLoginPresenter();\r\n            presenter.Login(authenticator);\r\n```\r\n``\r\nCustom URL scheme interceptor Activity and `Authenticator_Completed` are called. \r\n\r\n\r\nPlatform:\r\n\r\n-\t[] .NET version = Xamarin 4.6.0.299\r\n-\t[] Android SDK = 7.1\r\n-\t[] Authentication server : custom platform using IdentityServer4\r\n-\t[] Android : tested on Moto X Android 6.0 with Chrome, and Visual Studio Android Emulator with Android 6.0 and Browser\r\n\r\n### Expected behaviour\r\n\r\nWeb browser should close itself after authentication\r\n\r\n### Actual behaviour\r\nThe web browser doesn't close itself after authentication. This is working well on IOS (both native and not) and on Android when `isUsingNativeUi=false`\r\n\r\n![image](https://user-images.githubusercontent.com/10127729/30133675-0340e6d6-9355-11e7-98eb-46c7bc4c5fd9.png)\r\n\r\n\r\n\r\n ", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/226/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Vandersteen": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/223", "title": "KeyStore was not initialized", "body": "# Xamarin.Auth Issue\r\n\r\nRecently I am getting KeyStore was not initialised exception when trying to do anything with the AccountStore (in Xamarin Forms).\r\n\r\n*IF BUG, INCLUDE THIS PART:*\r\n\r\n### Version\r\n\r\n- [ ] nuget version = 1.5.0.3\r\n- [ ] Forms = 2.3.4.267\r\n\r\n### Steps to reproduce\r\n\r\n```\r\n\r\nclass App : Application\r\n{\r\n       public App()\r\n       {\r\n               MainPage = ...;\r\n\r\n               var accountStore = AccountStore.Create(Forms.Context);\r\n               var account = accountStore.FindAccountsForService (\"x\").FirstOrDefault ();\r\n       }\r\n}\r\n```\r\n\r\n### Actual behaviour\r\n\r\n```\r\n  at Java.Interop.JniEnvironment+InstanceMethods.CallNonvirtualObjectMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniObjectReference type, Java.Interop.JniMethodInfo method, Java.Interop.JniArgumentValue* args) [0x00089] in <6cd960837cc24c26bab2a0a29b597627>:0 \r\n  at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeNonvirtualObjectMethod (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) [0x0001f] in <6cd960837cc24c26bab2a0a29b597627>:0 \r\n  at Java.Security.KeyStore.Aliases () [0x0000a] in <d278c06ad5684d6882c743a94a93ebc2>:0 \r\n  at Xamarin.Auth.AndroidAccountStore.FindAccountsForServiceAsync (System.String serviceId) [0x00011] in <347784a7d58c449896f76cefd9e360c2>:0 \r\n  at Xamarin.Auth.AndroidAccountStore.FindAccountsForService (System.String serviceId) [0x00000] in C:\\cxa\\source\\Xamarin.Auth.LinkSource\\Evolve16.Labs\\Security\\CryptoUtilities.cs:19 \r\n  --- End of managed Java.Security.KeyStoreException stack trace ---\r\njava.security.KeyStoreException: KeyStore was not initialized\r\n\tat java.security.KeyStore.throwNotInitialized(KeyStore.java:96)\r\n\tat java.security.KeyStore.aliases(KeyStore.java:424)\r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/223/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jigneshbodarya": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/222", "title": "Object reference not set to an instance of an object ", "body": "# Xamarin.Auth Issue\r\nXamarin.Forms/Evolve16Labs/Droid/ComicBook.Droid.csproj: Object reference not set to an instance of an object \r\n*IF BUG, INCLUDE THIS PART:*\r\nWhile trying to run android project in xamarin forms getting this error\r\n### Version\r\n=== Xamarin Studio Community ===\r\n\r\nVersion 6.3 (build 864)\r\nInstallation UUID: 5d3a5d5e-7841-46a7-8ad3-61c053d98ea2\r\nRuntime:\r\n\tMono 5.2.0.215 (d15-3/da80840) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 502000215\r\n\r\n=== NuGet ===\r\n\r\nVersion: 3.5.0.0\r\n\r\n=== Xamarin.Profiler ===\r\n\r\n'/Applications/Xamarin Profiler.app' not found\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 7.4.0.21 (Xamarin Studio Community)\r\nAndroid SDK: /Volumes/Untitled 2/04/sdk\r\n\tSupported Android versions:\r\n\t\t2.3    (API level 10)\r\n\t\t4.2    (API level 17)\r\n\t\t4.3    (API level 18)\r\n\t\t4.4    (API level 19)\r\n\t\t4.4.87 (API level 20)\r\n\t\t5.0    (API level 21)\r\n\t\t5.1    (API level 22)\r\n\t\t6.0    (API level 23)\r\n\t\t7.0    (API level 24)\r\n\t\t7.1    (API level 25)\r\n\r\nSDK Tools Version: 25.2.5\r\nSDK Platform Tools Version: 26\r\nSDK Build Tools Version: 26.0.1\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_144\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_144-b01)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.144-b01, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nNot Installed\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 8.3.1 (12170)\r\nBuild 8E1000a\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 3.6.0.19 (Xamarin Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 10.12.0.20 (Xamarin Studio Community)\r\nHash: 80b8487d\r\nBranch: d15-3\r\nBuild date: 2017-08-18 16:07:26-0400\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 603000864\r\nGit revision: 6c2f6737278ccc3e81e12276d49c0d92f975f189\r\nBuild date: 2017-04-24 11:26:01-04\r\nXamarin addins: d8d46e577d8507c35260ce9d73df3c33415bb214\r\nBuild lane: monodevelop-lion-d15-1\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.12.4\r\nDarwin Maliks-iMac.local 16.5.0 Darwin Kernel Version 16.5.0\r\n    Fri Mar  3 16:52:33 PST 2017\r\n    root:xnu-3789.51.2~3/RELEASE_X86_64 x86_64\r\n\r\n\r\n- [ ] nuget version = 3.5.0.0\r\n- [ ] component version =   7.4.0.21\r\n- [ ] sample\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. download code from repo\r\n2. extract it update and restore package\r\n3. run android project\r\n\r\nPlatform: Android\r\n\r\n-\t[] .NET version = 6.3\r\n-\t[] mono version = Mono 5.2.0.215\r\n\r\n\r\n### Expected behaviour\r\nProject need to should be run\r\nTell us what should happen\r\nwhole compiling it returns error\r\n### Actual behaviour\r\nProject giving compile error\r\nTell us what happens instead\r\nCan you also include a screen shot?\r\n\r\n\r\n\r\n*IF IT IS A NEW FEATURE REQUEST, INCLUDE THIS PART:*\r\n\r\n### Feature description\r\n\r\nWrite a description of the feature. How should it work? How should it look?\r\nInclude some graphics if this could help!\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "XzaR90": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/221", "title": "Conflict:  TypeCode exists in both Xamarin.Auth and System.Runtime", "body": "# Xamarin.Auth Issue\r\n\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0433\tThe type 'TypeCode' exists in both 'Xamarin.Auth, Version=1.5.0.0, Culture=neutral, PublicKeyToken=null' and 'System.Runtime, Version=4.0.20.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n### Version\r\n\r\n{\r\n  \"dependencies\": {\r\n    \"Fody\": \"2.1.2\",\r\n    \"FreshMvvm\": \"2.2.0\",\r\n    \"Microsoft.NETCore.UniversalWindowsPlatform\": \"5.4.0\",\r\n    \"Newtonsoft.Json\": \"10.0.3\",\r\n    \"PCLCrypto\": \"2.0.147\",\r\n    \"PInvoke.BCrypt\": \"0.5.97\",\r\n    \"PInvoke.Kernel32\": \"0.5.97\",\r\n    \"PInvoke.NCrypt\": \"0.5.97\",\r\n    \"PInvoke.Windows.Core\": \"0.5.97\",\r\n    \"PropertyChanged.Fody\": \"2.1.4\",\r\n    \"Validation\": \"2.4.15\",\r\n    \"Xam.Plugin.Connectivity\": \"3.0.2\",\r\n    \"Xamarin.Auth\": \"1.5.0.3\",\r\n    \"Xamarin.Forms\": \"2.3.4.267\"\r\n  },\r\n  \"frameworks\": {\r\n    \"uap10.0.10586\": {}\r\n  },\r\n  \"runtimes\": {\r\n    \"win10-arm\": {},\r\n    \"win10-arm-aot\": {},\r\n    \"win10-x86\": {},\r\n    \"win10-x86-aot\": {},\r\n    \"win10-x64\": {},\r\n    \"win10-x64-aot\": {}\r\n  }\r\n}\r\n\r\n\r\n### Steps to reproduce\r\n\r\nUsing the enum System.TypeCode anywhere in shared project.\r\n\r\n### Expected behaviour\r\n\r\nTo build successfully.\r\n\r\n### Actual behaviour\r\n\r\nCannot build.\r\n\r\n\r\n### Code:\r\n\r\n```\r\n            switch (Convert.GetTypeCode(type))\r\n            {\r\n                case TypeCode.Int32:\r\n                    return PropertyBaseModel.INT32;\r\n                case TypeCode.Int64:\r\n                    return PropertyBaseModel.INT64;\r\n                case TypeCode.Single:\r\n                    return PropertyBaseModel.FLOAT;\r\n                case TypeCode.Double:\r\n                    return PropertyBaseModel.DOUBLE;\r\n                case TypeCode.Decimal:\r\n                    return PropertyBaseModel.DECIMAL;\r\n                case TypeCode.Boolean:\r\n                    return PropertyBaseModel.BOOL;\r\n                case TypeCode.DateTime:\r\n                    return PropertyBaseModel.DATETIME;\r\n                case TypeCode.String:\r\n                    return PropertyBaseModel.STRING;\r\n                default:\r\n                    return PropertyBaseModel.NULL;\r\n            }\r\n```\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hardcodet": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/217", "title": "Google/Android: Cancelling from account selection doesn't fire event", "body": "# Xamarin.Auth Issue\r\n\r\n### Version\r\n\r\n- [ ] nuget version = Android, 1.5.0.3\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Go to account selection\r\n2. Cancel instead of selecting an account by tapping the \"x\" icon (marked in the screenshot)\r\n3. No event fires\r\n\r\n\r\n### Expected behaviour\r\n\r\nLooking at the source, I assume `OnCancelled` should be invoked and the `Completed` event should fire.\r\n\r\n### Actual behaviour\r\n\r\nNo event fires and my app remains to wait for the login process to complete.\r\n\r\n<img src=\"https://user-images.githubusercontent.com/873009/28959843-82f77e12-78fc-11e7-8caa-6dddd98acff6.png\" width=\"300\"></img>\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dgerding": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/215", "title": "Contributors, Please Clarify: Does this version work with Azure Mobile Client or Not?", "body": "Hi,\r\nI've been trying to figure out if I am supposed to be using this Nuget for Xamarin.Auth with mobile app on Azure (using Azure Mobile App Client and Server libraries) or am I supposed to be using this one\r\n[\"Auth for Azure\"](https://github.com/azure/azure-mobile-services-xamarin-auth/tree/46aa4f283caaef23beb1b0786e6837f4bc29fe66) ?\r\n\r\nI am targeting Xamarin.Forms \"235.Pre6\" using .Net Standard project for the Xam Forms project and trying, unsuccessfully, to use either 4.0.0 or 4.0.1 of [Azure Mobile Client](https://github.com/Azure/azure-mobile-apps-net-client)\r\n\r\n**I am only trying to use Xamarin.Auth for secure account and token storage abstract.**  What ever the \"right\" way to get authentication working again for Azure and Xamarin on 4.x will someone please respond?\r\n\r\nThanks, sincerely.\r\nDave G\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MichelaR": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/213", "title": "CustomUrlSchemeInterceptor does not redirect back to app", "body": "# Xamarin.Auth Issue\r\n\r\n\r\n\r\n### Version\r\n\r\n- [ ] nuget version = 4.0.0.2323\r\n- [ ] component version = 1.5.3.0\r\n- [ ] sample\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. I've created a Xamarin.Forms project with a login page, where I want to use an OAuth2Authenticator.\r\n \r\n2. I created all the Events (OnCompleted etc.)\r\n\r\n3. I've set 'isUsingNativeUI' to true (redirect_uri is : \"http://localhost/callback\"\r\n\r\n4. I've created a CustomUrlSchemeInterceptor according to your examples\r\n\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nAfter successful authentication in the native browser, the interceptor should initialize the return to the app.\r\n\r\n### Actual behaviour\r\n\r\nI'm getting a 'this site can't be reached' in the browser and I don't get redirected to the app, but when I then choose 'open in my_app_name' or sometimes 'open in browser' the interceptor is working.. \r\n\r\n\r\nDo you have any ideas on why this is happening?\r\n\r\nThank you very much in advance!\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dannyratna562": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/212", "title": "How do i add query parameters too OAuth2Authenticator?", "body": "RequestParameters.Add() crashes since RequestParameters is not initialized.\r\ni simply need to add promp=none to my request.", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zBrianW": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/211", "title": "AuthState grows on serialisation/deserialisation", "body": "# Xamarin.Auth Issue\r\n\r\n*IF BUG, INCLUDE THIS PART:*\r\n\r\n### Version\r\n\r\n- [ ] nuget version = \r\n- [x] component version = 1.5.0 (also replicated with 1.5.3)\r\n- [ ] sample\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. as per this [issue identified in openid AppAuth-Android](https://github.com/openid/AppAuth-Android/issues/224), the same is experiencing with Xamarin.OpenId.AppAuth.Android.\r\n2.\r\n3.\r\n\r\nPlatform:\r\n\r\n- [x] .NET version = .NETStandard 1.4\r\n- [ ] mono version = \r\n\r\n\r\n### Expected behaviour\r\n\r\nThe AuthState's \"mLastTokenResponse\" > \"additionalParameters\" node's additionalParameters should not continue to grow after each request.\r\n\r\n### Actual behaviour\r\nThe AuthState's \"mLastTokenResponse\" > \"additionalParameters\" node's additionalParameters grows after each request.\r\n\r\nCan you also include a screen shot?\r\nplease see [issue identified in openid AppAuth-Android](https://github.com/openid/AppAuth-Android/issues/224)\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "joaomello": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/210", "title": "Use IdentityModel.OidcClient2", "body": "Would not be a good idea, if Xamarin.Auth use https://github.com/IdentityModel/IdentityModel.OidcClient2? (:", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alexlopespereira": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/209", "title": "Send state to facebook on login request", "body": "# Xamarin.Auth Issue\r\n### Feature description\r\nIt would be nice if we could send the state (as described here https://developers.facebook.com/docs/facebook-login/manually-build-a-login-flow?locale=en_US) to facebook. This \"state\" is part of the facebook api and is not supported by Xamarin.Auth.\r\n\r\nIn order to implement this new feature, it would be as simple as adding another parameter to the URL, like this:\r\n\r\nhttps://www.facebook.com/v2.9/dialog/oauth?client_id={app-id}?&redirect_uri={redirect-uri}&state={state_arbitrary_data}\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "HyoseopSong": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/207", "title": "How to set aud property in Google ID Token as my server client ID?", "body": "Is it possible to set the 'aud' property of Google ID token as my server client ID?\r\nI can get google ID token by below code snippet.\r\n\r\n```\r\nasync void OnAuthCompleted(object sender, AuthenticatorCompletedEventArgs e)\r\n        {\r\n           ...\r\n            if (e.IsAuthenticated)\r\n            {\r\n                ...\r\n                var id_token = e.Account.Properties[\"id_token\"];\r\n                ...\r\n            }\r\n            ...\r\n        }\r\n```\r\n\r\nThe problem is the 'aud' property of token is my Mobile App client ID and  same with the 'azp' property. What I want is the 'aud' property is my backend client ID.\r\n\r\nIn google document, the 'aud' property can be set as below code line.\r\n\r\n```\r\nGoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n        .requestIdToken(getString(R.string.server_client_id))\r\n        .build();\r\n```\r\n\r\nOn the other hands, I think OAuth2Authenticator constructor doesn't have any parameter that deliver my backend client ID.\r\n\r\n```\r\nvar authenticator = new OAuth2Authenticator(\r\n                clientId,\r\n                null,\r\n                Constants.Scope,\r\n                new Uri(Constants.AuthorizeUrl),\r\n                new Uri(redirectUri),\r\n                new Uri(Constants.AccessTokenUrl),\r\n                null,\r\n                true);\r\n```\r\nHow can I pass my backend client ID to google ID token?\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "arctouch-oberdanbitencourt": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/206", "title": "Webview won't dismiss if \"Not Now\" is tapped in facebook", "body": "# Xamarin.Auth Issue\r\n\r\n### Version\r\n\r\n- [X] nuget version = 1.5.0.3\r\n\r\n### Steps to reproduce\r\nI'm using the following code in my Xamarin.Forms (PCL) project:\r\n```csharp\r\nOAuth2Authenticator auth = new OAuth2Authenticator\r\n(\r\n                clientId: \"\", //ommited for security reasons\r\n                scope: \"\",\r\n                authorizeUrl: new Uri(\"https://m.facebook.com/dialog/oauth/\"),\r\n                redirectUrl: new Uri(\"https://mycustomuri.com/signin-facebook\"), //ommited for security reasons\r\n                isUsingNativeUI: false\r\n            )\r\n            {\r\n                ShowErrors = false,\r\n            };\r\n\r\n            auth.Completed += OnAuthenticationCompleted;\r\n            auth.Error += OnAuthenticationFailed;\r\n            AuthenticationState.Authenticator = auth;\r\n\r\n            var presenter = new Xamarin.Auth.Presenters.OAuthLoginPresenter();\r\n            presenter.Login(auth);\r\n```\r\n\r\n1. In the Facebook webview, tap on the \"Not Now\" link\r\n2. auth.Error event is called but webview is not dismissed.\r\n\r\nPlatform:\r\n\r\n- [x] mono version = 5.2.0.196 (2017-04/478c04a) (64-bit)\r\n- [x] XCode version = Xcode 8.3.3 (12175.1)\r\n- [x]  Xamarin.iOS Version = 10.12.0.12 \r\n- [x]  Xamarin.Android Version = 7.4.0.13\r\n- [x]  Android SDK Tools Version = 26.0.2\r\n- [x]  Android SDK Platform Tools Version = 26.0.0\r\n- [x]  Android SDK Build Tools Version = 26.0.0\r\n- [x]  Java SDK version = 1.8.0_121\r\n\r\n### Expected behaviour\r\n\r\nI excpect when an error occurs in the webviews, the auth flow should be cancelled and the webview (UIViewController or Activity) should be dismissed/closed.\r\n\r\n### Actual behaviour\r\n\r\nThe webview doesn't get closed - page remains the same.\r\nError message from AuthenticatorErrorEventArgs.Message: `OAuth Error = Permissions+error`\r\n\r\nCan you also include a screen shot?\r\n![xamarinauthfacebookbug](https://user-images.githubusercontent.com/11648468/27969256-89dc15ea-6320-11e7-8d06-1f5c5d3d68ed.gif)", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dazinator": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/205", "title": "Integrate accounts with android account manager?", "body": "### Feature description\r\n\r\nAndroid has a concept of an [AccountManager](https://developer.android.com/reference/android/accounts/AccountManager.html), and Authenticator services which are platform level services.\r\n\r\nDoes Xamarin Auth integrate with these two components? Ideally, i'd like for my accounts to show up under android's \"accounts and sync\" screen, and for other non-xamarin apps (we have some native android apps) to be able to retreive these accounts and access tokens. Am I right in thinking Xamarin Auth has it's own implementation of this stack, and doesn't integrate here with the android platform?\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/205/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/258878908", "body": "+1 for a sample that utilises refresh tokens please!\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/258878908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "EthanHitGub": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/204", "title": "Xamarin.Auth not clearing cookies", "body": "On Android, I am having an issue where the WebView is storing auth cookies even after user logout. I have tried using WebAuthenticator.ClearCookies() and ClearCookiesBeforeLogin = true, and many other tricks but nothing seems to have an effect. I can, however, clear the cookies while debugging through Chrome and I get expected behaviour (user token is removed from cookies). Am I doing something incorrectly here?\r\nDoes Android persist cookies to disk after an app's lifetime?", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "madcreep": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/203", "title": "Application crash on iOS 8.1", "body": "# Xamarin.Auth Issue\r\n\r\n*IF BUG, INCLUDE THIS PART:*\r\n\r\nSystem.NullReferenceException: Object reference not set to an instance of an object\r\n  at ObjCRuntime.BlockLiteral.SetupBlock (System.Delegate trampoline, System.Delegate userDelegate) [0x00102] in /Users/builder/data/lanes/4991/494fcbcf/source/xamarin-macios/src/ObjCRuntime/Blocks.cs:132 \r\n  at (wrapper managed-to-native) UIKit.UIApplication:UIApplicationMain (int,string[],intptr,intptr)\r\n  at UIKit.UIApplication.Main (System.String[] args, System.IntPtr principal, System.IntPtr delegate) [0x00005] in /Users/builder/data/lanes/4991/494fcbcf/source/xamarin-macios/src/UIKit/UIApplication.cs:79 \r\n  at UIKit.UIApplication.Main (System.String[] args, System.String principalClassName, System.String delegateClassName) [0x00038] in /Users/builder/data/lanes/4991/494fcbcf/source/xamarin-macios/src/UIKit/UIApplication.cs:63 \r\n  at Electron.iOS.Application.Main (System.String[] args) [0x0004c] in /Users/roman/\u0420\u0430\u0431\u043e\u0442\u0430/Projects/Electron/iOS/Main.cs:30\r\n\r\nThere's also something wrong with alignment on iOS 8.1\r\n\r\n![photo_2017-06-30_15-28-03](https://user-images.githubusercontent.com/2410787/27735551-dd9114f6-5da8-11e7-980b-ecdd3d13c0e2.jpg)\r\n\r\n### Version\r\n\r\n- [ ] nuget version =\r\n- [x] component version =  1.5.0.3\r\n- [ ] sample\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. On iOS 8.1 call global::Xamarin.Auth.WebViewConfiguration.IOS.UserAgent = \"moljac++\";\r\n2.\r\n3.\r\n\r\nPlatform:\r\n\r\n-\t[] .NET version = \r\n-\t[] mono version = 5.2.0.196\r\n\r\n\r\n### Expected behaviour\r\n\r\nTell us what should happen\r\n\r\nThere shouldn't be an exception.\r\n\r\n### Actual behaviour\r\n\r\nTell us what happens instead\r\nCan you also include a screen shot?\r\n\r\nException is produced which leads to application crash.\r\n\r\n*IF IT IS A NEW FEATURE REQUEST, INCLUDE THIS PART:*\r\n\r\n### Feature description\r\n\r\nWrite a description of the feature. How should it work? How should it look?\r\nInclude some graphics if this could help!\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ExtremeSwat": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/202", "title": "App resets itself on Xamarin.UWP after succesfully logging in..", "body": "# Xamarin.Auth Issue\r\n- [ ] nuget version = 1.5.0.3\r\n\r\n### Steps to reproduce\r\n\r\n1.Successfully login by using OAuth2 with a provider (such as Google)\r\n2. Handle the Completed event\r\n\r\nPlatform: UWP\r\n-\t[] .NET version = 10.0 - Build 15063\r\n\r\n\r\n### Expected behaviour\r\n\r\nThe control should be taken back to the caller instead of resetting the app and losing any info, right ?\r\n\r\n### Actual behavior\r\n\r\nAfter the Completed event finishes (or if I have an await within it) the application gets restarted as in the App class (Xamarin Forms) gets instantiated, reinitializing the components and the MainPage\r\n\r\nThis is the point where I handle the Completed event\r\n\r\n![panda1](https://user-images.githubusercontent.com/9104188/27732682-1311b94a-5d9b-11e7-9aed-b56df9a69d88.png)\r\n\r\nAfter the previous statement gets finished  the app itself gets resetted...\r\n\r\n![panda2](https://user-images.githubusercontent.com/9104188/27732688-1ba4c0d4-5d9b-11e7-801b-134a45600158.png)\r\n\r\nWhat am I not handling ?\r\n\r\nI've attached the Main Xamarin Forms project\r\n\r\n[XamarinTestApp.zip](https://github.com/xamarin/Xamarin.Auth/files/1114877/XamarinTestApp.zip)\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "xrkolovos": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/200", "title": "Implement log out/sing off", "body": "OAuthLoginPresenter should have a method to log out/sing off. \r\n\r\nThe user is still sing in the authority. OidcClient has a method to logout.\r\nhttps://github.com/IdentityModel/IdentityModel.OidcClient/blob/73a56fdef54009ed471445079ef2fdeb6e4159ea/src/Shared/OidcClient.cs\r\n\r\nThat is a security issue as said in #113 ", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "biapar": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/197", "title": "error XA2006: Could not resolve reference to 'System.Void Android.Support.CustomTabs.CustomTabsIntent::LaunchUrl(Android.Content.Context,Android.Net.Uri)'", "body": "I've this error on Android release mode after update to last Xamarin.Auth version\r\n\r\nJava.Interop.Tools.Diagnostics.XamarinAndroidException: error XA2006: Could not resolve reference to 'System.Void Android.Support.CustomTabs.CustomTabsIntent::LaunchUrl(Android.Content.Context,Android.Net.Uri)' (defined in assembly 'Xamarin.Auth, Version=1.5.0.0, Culture=neutral, PublicKeyToken=null') with scope 'Xamarin.Android.Support.CustomTabs, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'. When the scope is different from the defining assembly, it usually means that the type is forwarded. ---> Mono.Cecil.ResolutionException: Failed to resolve System.Void Android.Support.CustomTabs.CustomTabsIntent::LaunchUrl(Android.Content.Context,Android.Net.Uri)\r\n\r\nHow to solve?\r\n\r\nXamarin.Forms 2.3.4.231\r\nXamarin.Auth 1.5.0.3\r\nCustomTabs 23.3.0\r\nAndroid 6", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sanjogs": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/195", "title": "possible issue in documentation showing how to register custom scheme for Android", "body": "# CustomURLSchemeInterceptor documentation Issue\r\nUsing code from following section of the documentation did not produce expected behavior\r\nhttps://github.com/xamarin/Xamarin.Auth#code\r\n\r\nChanging LaunchMode to **LaunchMode.SingleTask** instead of  LaunchMode.SingleTop produced the expected behavior for me.\r\n\r\nTried on Android 5.1.1\r\n\r\n### Expected behaviour\r\nCustom Tabs should close (UI should return back to app) if user cancels, or Signs in with the third party.\r\n\r\n### Actual behaviour\r\nUI does not return back to app after hitting cancel or after successful sign in.\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/195/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dansiegel": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/194", "title": ".NET Standard Support", "body": "### Feature description\r\n\r\nWith the transition to .NET Standard it would be great if Xamarin.Auth were updated to support .NET Standard. This would also eliminate the need for the BCL dependency which results in the need to add an app.config to fix the bindings in a Xamarin Project that is consuming other .NET Standard libraries or is a .NET Standard library itself. ", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/194/reactions", "total_count": 23, "+1": 23, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "HelenMamalaki": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/193", "title": "WP8.1 Fails Store Certification because of Xamarin.Auth's dependency on PCLCrypto 2.x", "body": "# Xamarin.Auth Issue\r\n- [ ] nuget version = 1.3.1.1 >\r\n\r\n### Steps to reproduce\r\n\r\nUsing Xamarin.Auth in PCL and Windows Phone8.1 project. App fails Windows Store certification with an unsupported APIs error (see zip file for certification report). The issue is with APIs used by PCLCrypto which Xamarin.Auth is dependent on. There is an issue open for PCLCrypto since last year with no resolution; https://github.com/AArnott/PCLCrypto/issues/97\r\n[Certification Report.zip](https://github.com/xamarin/Xamarin.Auth/files/1098154/Certification.Report.zip)\r\n\r\nPlatform:\r\n\r\n-\t[] .NET version = .NET Framework 4.5\r\n-\t[] mono version = \r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ruchiverma6": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/191", "title": "How to avoid showing redirect url on screen while using xamarin.auth For linkedin sign-in", "body": "# Xamarin.Auth Issue\r\n\r\n*IF BUG, INCLUDE THIS PART:*\r\n\r\n### Version\r\n\r\n- [ ] nuget version = Xamarin.auth 1.5.0\r\n- [ ] component version = \r\n- [ ] sample\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. For Xamarin Forms, on android device once user gets successfully authenticated for LinkedIn sign in, redirect url screen is coming for 2 seconds instead of directly going in app, then after 2 seconds user lands to app screen.\r\n\r\nI m using xamarin.auth library and using below code:\r\n\r\nvar authenticator = new OAuth2Authenticator(\r\nStringConstants.LinkedInClientId,\r\nStringConstants.ClientSecret,\r\nStringConstants.Scope,\r\nnew Uri(StringConstants.AuthorizeUrl),\r\nnew Uri(redirectUrl),\r\nnew Uri(StringConstants.AccessTokenUrl));\r\n\r\n//redirectUrl is valid website url.\r\n\r\nauthenticator.Completed += OnAuthCompleted;\r\nauthenticator.Error += OnAuthError;\r\nauthenticator.ShowErrors = false;\r\nvar presenter = new Xamarin.Auth.Presenters.OAuthLoginPresenter();\r\npresenter.Login(authenticator);\r\n\r\nAfter above log-in call I get call back in following method:\r\n\r\nvoid OnAuthCompleted(object sender, AuthenticatorCompletedEventArgs e)\r\n{\r\nAccount account = \r\nstore.FindAccountsForService(DeploymentConstants.AppTitle).FirstOrDefault();\r\nvar authenticator = sender as OAuth2Authenticator;\r\nif (authenticator != null)\r\n{\r\nauthenticator.Completed -= OnAuthCompleted;\r\nauthenticator.Error -= OnAuthError;\r\n}\r\nif (e.IsAuthenticated)\r\n{\r\nvar values = e.Account.Properties;\r\nvar access_token = values[\"access_token\"];\r\nSettings.AuthData = access_token;\r\nif (account != null)\r\n{\r\nstore.Delete(account, DeploymentConstants.AppTitle);\r\n}\r\nstore.Save(account = e.Account, DeploymentConstants.AppTitle);\r\n}\r\n\r\n}\r\n\r\nThen in further flow I m calling:\r\nawait Navigation.PopModalAsync();\r\n\r\n\r\nPlatform: Xamarin forms, Android device\r\n\r\n-\t[] .NET version = 4.5\r\n-\t[] mono version = \r\n\r\n\r\n### Expected behaviour\r\n\r\nOnce user authenticates successfully using xamarin.auth for LinkedIn sign-in, user should go to app screen instead of showing redirect url on screen.\r\n\r\n### Actual behaviour\r\n\r\nFor Xamarin forms, on android device once user gets successfully authenticated, redirect url screen is coming for 2 seconds instead of directly going in app, then after 2 seconds user lands to app screen.\r\n\r\nTell us what happens instead\r\nCan you also include a screen shot?\r\n\r\n\r\n\r\n*IF IT IS A NEW FEATURE REQUEST, INCLUDE THIS PART:*\r\n\r\n### Feature description\r\n\r\nWrite a description of the feature. How should it work? How should it look?\r\nInclude some graphics if this could help!\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JakubHolovsky": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/187", "title": "System.Net.WebException: Error: NameResolutionFailure", "body": "# Xamarin.Auth Issue\r\n\r\n### Version\r\n\r\n- [ ] nuget version = 1.5.0\r\n- [ ] component version = \r\n- [ ] sample\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Can't reproduce (it's coming from our crash analytics), one off bug but might lead you to potentially fixing the issue.\r\n\r\n> Android: 5.1.1\r\n> Android Build: LMY48B.J500GXXU1AOL1\r\n> Manufacturer: samsung\r\n> Model: SM-J500G\r\n> Thread: Thread-2666-2666\r\n> CrashReporter Key: A6142E57-3598-E073-FC61-BF4DDEFDCB44BD56B087\r\n> Start Date: Mon Jun 05 23:56:02 GMT+08:00 2017\r\n> Date: Tue Jun 06 00:04:28 GMT+08:00 2017\r\n> Format: Xamarin\r\n> \r\n> Xamarin caused by: android.runtime.JavaProxyThrowable: System.AggregateException: A Task's exception(s) were not observed either by Waiting on the Task or accessing its Exception property. As a result, the unobserved exception was rethrown by the finalizer thread. ---> System.AggregateException: One or more errors occurred. ---> System.Net.WebException: Error: NameResolutionFailure\r\n>   at System.Net.HttpWebRequest.EndGetResponse (System.IAsyncResult asyncResult) [0x00058] in <e9eb39db51e4425891101ef19f46bc76>:0 \r\n>   at System.Threading.Tasks.TaskFactory`1[TResult].FromAsyncCoreLogic (System.IAsyncResult iar, System.Func`2[T,TResult] endFunction, System.Action`1[T] endAction, System.Threading.Tasks.Task`1[TResult] promise, System.Boolean requiresSynchronization) [0x0000f] in <a83cd6d69e484f55bdb92ebf1dda2881>:0 \r\n>    --- End of inner exception stack trace ---\r\n>   at System.Threading.Tasks.Task.ThrowIfExceptional (System.Boolean includeTaskCanceledExceptions) [0x00011] in <a83cd6d69e484f55bdb92ebf1dda2881>:0 \r\n>   at System.Threading.Tasks.Task`1[TResult].GetResultCore (System.Boolean waitCompletionNotification) [0x0002b] in <a83cd6d69e484f55bdb92ebf1dda2881>:0 \r\n>   at System.Threading.Tasks.Task`1[TResult].get_Result () [0x0000f] in <a83cd6d69e484f55bdb92ebf1dda2881>:0 \r\n>   at Xamarin.Auth.OAuth1Authenticator.<GetInitialUrlAsync>m__0 (System.Threading.Tasks.Task`1[TResult] respTask) [0x00000] in <bae572ba45754aac977da65c58a52c3b>:0 \r\n>   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2[TAntecedentResult,TResult].InnerInvoke () [0x00024] in <a83cd6d69e484f55bdb92ebf1dda2881>:0 \r\n>   at System.Threading.Tasks.Task.Execute () [0x00010] in <a83cd6d69e484f55bdb92ebf1dda2881>:0 \r\n>    --- End of inner exception stack trace ---\r\n> ---> (Inner Exception #0) System.AggregateException: One or more errors occurred. ---> System.Net.WebException: Error: NameResolutionFailure\r\n>   at System.Net.HttpWebRequest.EndGetResponse (System.IAsyncResult asyncResult) [0x00058] in <e9eb39db51e4425891101ef19f46bc76>:0 \r\n>   at System.Threading.Tasks.TaskFactory`1[TResult].FromAsyncCoreLogic (System.IAsyncResult iar, System.Func`2[T,TResult] endFunction, System.Action`1[T] endAction, System.Threading.Tasks.Task`1[TResult] promise, System.Boolean requiresSynchronization) [0x0000f] in <a83cd6d69e484f55bdb92ebf1dda2881>:0 \r\n>    --- End of inner exception stack trace ---\r\n>   at System.Threading.Tasks.Task.ThrowIfExceptional (System.Boolean includeTaskCanceledExceptions) [0x00011] in <a83cd6d69e484f55bdb92ebf1dda2881>:0 \r\n>   at System.Threading.Tasks.Task`1[TResult].GetResultCore (System.Boolean waitCompletionNotification) [0x0002b] in <a83cd6d69e484f55bdb92ebf1dda2881>:0 \r\n>   at System.Threading.Tasks.Task`1[TResult].get_Result () [0x0000f] in <a83cd6d69e484f55bdb92ebf1dda2881>:0 \r\n>   at Xamarin.Auth.OAuth1Authenticator.<GetInitialUrlAsync>m__0 (System.Threading.Tasks.Task`1[TResult] respTask) [0x00000] in <bae572ba45754aac977da65c58a52c3b>:0 \r\n>   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2[TAntecedentResult,TResult].InnerInvoke () [0x00024] in <a83cd6d69e484f55bdb92ebf1dda2881>:0 \r\n>   at System.Threading.Tasks.Task.Execute () [0x00010] in <a83cd6d69e484f55bdb92ebf1dda2881>:0 \r\n> ---> (Inner Exception #0) System.Net.WebException: Error: NameResolutionFailure\r\n>   at System.Net.HttpWebRequest.EndGetResponse (System.IAsyncResult asyncResult) [0x00058] in <e9eb39db51e4425891101ef19f46bc76>:0 \r\n>   at System.Threading.Tasks.TaskFactory`1[TResult].FromAsyncCoreLogic (System.IAsyncResult iar, System.Func`2[T,TResult] endFunction, System.Action`1[T] endAction, System.Threading.Tasks.Task`1[TResult] promise, System.Boolean requiresSynchronization) [0x0000f] in <a83cd6d69e484f55bdb92ebf1dda2881>:0 <---\r\n> <---\r\n> \r\n\r\nPlatform:\r\n\r\n-\t[] .NET version = \r\n-\t[] mono version = 5.0.1.1\r\n\r\n\r\n### Expected behaviour\r\n\r\nThe app should not crash if \"resolution failure\" happens.\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/153", "title": "System.ObjectDisposedException on WebAuthenticatorActivity in onBackPressed", "body": "Package: com.psonar.android\r\nVersion Code: 19797\r\nVersion Name: 4.17.0\r\nAndroid: 6.0\r\nAndroid Build: MRA58K release-keys\r\nManufacturer: TCL\r\nModel: 5045T\r\nThread: main-1\r\nCrashReporter Key: 7E4686C5-10E5-9F5D-A510-8B884A8ACD84C63E8143\r\nStart Date: Mon Mar 13 15:06:23 GMT+08:00 2017\r\nDate: Mon Mar 13 15:25:08 GMT+08:00 2017\r\nFormat: Xamarin\r\n\r\nXamarin caused by: android.runtime.JavaProxyThrowable: System.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'Psonar.Apps.Droid.PayPerPlay.LoginActivity'.\r\n\tat md5a104545e4d19c4ffe9ec3d5074a3b979.WebAuthenticatorActivity.n_onBackPressed(Native Method)\r\n\tat md5a104545e4d19c4ffe9ec3d5074a3b979.WebAuthenticatorActivity.onBackPressed(WebAuthenticatorActivity.java:49)\r\n\tat android.app.Activity.onKeyUp(Activity.java:2511)\r\n\tat android.view.KeyEvent.dispatch(KeyEvent.java:2669)\r\n\tat android.app.Activity.dispatchKeyEvent(Activity.java:2764)\r\n\tat com.android.internal.policy.PhoneWindow$DecorView.dispatchKeyEvent(PhoneWindow.java:2366)\r\n\tat android.view.ViewRootImpl$ViewPostImeInputStage.processKeyEvent(ViewRootImpl.java:4637)\r\n\tat android.view.ViewRootImpl$ViewPostImeInputStage.onProcess(ViewRootImpl.java:4593)\r\n\tat android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:4106)\r\n\tat android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:4159)\r\n\tat android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:4125)\r\n\tat android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:4271)\r\n\tat android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:4133)\r\n\tat android.view.ViewRootImpl$AsyncInputStage.apply(ViewRootImpl.java:4328)\r\n\tat android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:4106)\r\n\tat android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:4159)\r\n\tat android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:4125)\r\n\tat android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:4133)\r\n\tat android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:4106)\r\n\tat android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:4159)\r\n\tat android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:4125)\r\n\tat android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:4304)\r\n\tat android.view.ViewRootImpl$ImeInputStage.onFinishedInputEvent(ViewRootImpl.java:4474)\r\n\tat android.view.inputmethod.InputMethodManager$PendingEvent.run(InputMethodManager.java:2330)\r\n\tat android.view.inputmethod.InputMethodManager.invokeFinishedInputEventCallback(InputMethodManager.java:1934)\r\n\tat android.view.inputmethod.InputMethodManager.finishedInputEvent(InputMethodManager.java:1925)\r\n\tat android.view.inputmethod.InputMethodManager$ImeInputEventSender.onInputEventFinished(InputMethodManager.java:2307)\r\n\tat android.view.InputEventSender.dispatchInputEventFinished(InputEventSender.java:141)\r\n\tat android.os.MessageQueue.nativePollOnce(Native Method)\r\n\tat android.os.MessageQueue.next(MessageQueue.java:328)\r\n\tat android.os.Looper.loop(Looper.java:164)\r\n\tat android.app.ActivityThread.main(ActivityThread.java:5774)\r\n\tat java.lang.reflect.Method.invoke(Native Method)\r\n\tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:789)\r\n\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:679)", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/254158743", "body": "Is this still relevant? They seem to have added the try + catch:\n\n```\ntry\n      {\n        AlertDialog.Builder builder = new AlertDialog.Builder((Context) activity);\n        builder.SetMessage(message);\n        builder.SetTitle(title);\n        builder.SetNeutralButton(\"OK\", (EventHandler<DialogClickEventArgs>) ((s, e) => ((Dialog) s).Cancel()));\n        builder.Create().Show();\n      }\n      catch (Exception ex)\n      {\n        string message1 = ex.Message;\n        Log.Error(\"Xamarin.Auth\", \"Error: {0}:{1} - {2}\", (object) title, (object) message, (object) message1);\n      }\n```\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/254158743/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "DFerenczi": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/185", "title": "V 1.5.0 Stable: Error executing task LinkAssemblies: error XA2006: Could not resolve reference to CustomTabs", "body": "Hello again! \r\n\r\nI'm have the same problem as #167, wrote some comments there but thought that I should probably open a new one after doing some research. When I use stable version of 1.5.0 I still get this:\r\n\r\nError: Error executing task LinkAssemblies: error XA2006: Could not resolve reference to 'Android.Support.CustomTabs.CustomTabsClient/ExtraCallbackDelegate' \r\n(defined in assembly 'Xamarin.Auth, Version=1.3.0.0, Culture=neutral, PublicKeyToken=null') with scope 'Xamarin.Android.Support.CustomTabs, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'. \r\nWhen the scope is different from the defining assembly, it usually means that the type is forwarded. (MyApp.Droid)\r\n\r\nwhen trying to build in release.\r\n\r\nFrom #167 I got the information that version 1.5.0 is pinned to CustomTabs version 23.3.0. So I started testing alpha versions and noticed that building in Release worked from 1.5.0-alpha-03 up to 1.5.0-alpha-08. Then when I updated to 1.5.0-alpha-09 it stopped working and does give me the error for every version over 09 (including stable). \r\n\r\nSo I checked the commits and found this:\r\n\r\nhttps://github.com/xamarin/Xamarin.Auth/commit/9e5117f6397bffd86ccfc9d7d9124f361e6d60fd#diff-f6026efe6e14c1b09646b2ba065b7706\r\n\r\nSo you upgraded the CustomTabs package right? Does this mean that we need to update to 25.3.1? \r\n\r\nI'm currently running Xamarin.Forms 2.3.4.247 and CustomTabs 23.3.0. \r\n\r\nThanks in advance! \r\n\r\n/Ferenczi\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/185/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 1, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "LocalJoost": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/176", "title": "Using this on Xamarin Forms on iOS gives popup on LinkedIn", "body": "I am using this on Xamarin Forms on iOS. I successfully login, but as soon as I navigate away from the login page:\r\n![image](https://cloud.githubusercontent.com/assets/4129183/25700094/5b9187ce-30c6-11e7-8a42-8fcf39077061.png)\r\nCode works fine on Android, access token comes in fine, but I have spent two days now trying to prevent this stupid useless popup appearing. Can this be fixed?\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "piotrekas1": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/169", "title": "Invalid Cast Excepition on Native UI", "body": "Hi, I have problem with Xamarin.Auth.\r\nI'm making a Xamarin.Forms Application and I want to implement Login with Google. I read details from repository and my application end with invalid cast exception. \r\n\r\n`[assembly: ExportRenderer(typeof(ProviderLoginPage), typeof(LoginRenderer))]\r\nnamespace MyApp.Droid\r\n{\r\n    public class LoginRenderer : PageRenderer\r\n    {\r\n        bool showLogin = true;\r\n        protected override void OnElementChanged(ElementChangedEventArgs<Page> e)\r\n        {\r\n            base.OnElementChanged(e);\r\n            try\r\n            {\r\n                var loginPage = Element as ProviderLoginPage;\r\n                string providerName = loginPage.ProviderName;\r\n                var activity = Context as Activity;\r\n                if (showLogin)\r\n                {\r\n                    showLogin = false;\r\n                    OAuthProviderSetting oauth = new OAuthProviderSetting();\r\n                    var auth = oauth.LoginWithProvider(providerName);\r\n                    auth.Completed += (sender, eventArgs) =>\r\n                    {\r\n                        if (eventArgs.IsAuthenticated)\r\n                        {\r\n\r\n                        }\r\n                    };\r\n                    System.Object uiObject = auth.GetUI(activity);\r\n                    if (auth.IsUsingNativeUI)\r\n                    {\r\n                        System.Uri uriNetfx = auth.GetInitialUrlAsync().Result;\r\n                        Android.Net.Uri uriAndroid = Android.Net.Uri.Parse(uriNetfx.AbsoluteUri);\r\n                        CustomTabsIntent.Builder ctib = (CustomTabsIntent.Builder) uiObject;\r\n                        CustomTabsIntent ctIntent = ctib.Build();\r\n                        ctIntent.LaunchUrl(activity, uriAndroid);\r\n                    }\r\n                    else\r\n                    {\r\n                        Android.Content.Intent i = null;\r\n                        i = (Android.Content.Intent) uiObject;\r\n                        activity.StartActivity(i);\r\n                    }\r\n                }\r\n            }\r\n            catch (System.Exception a)\r\n            {\r\n                System.Console.WriteLine(a);\r\n            }\r\n        }\r\n    }\r\n}`\r\n\r\nProblem take place int this line\r\n`CustomTabsIntent.Builder ctib = (CustomTabsIntent.Builder) uiObject;`\r\nI use newest alpha version on Xamarin.Auth\r\nI have installed CustomTabs.\r\nOAuthProviderSetting class implement OAuth2Authentificator and return it to variable.\r\nCan you help me?", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jelmarlaunchlabs": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/168", "title": "It does not work if used in a dependency service implemenation from PCL?", "body": "I've tried using this in a dependency service implementation by setting isUsingNativeUI = true and:\r\n\r\nvar authenticator = new OAuth2Authenticator(/*setting clientId and other parameters here*/, isUsingNativeUI = true);\r\n\r\nvar context = Forms.Context;\r\ncontext.StartActivity(authenticator.GetUI(context));\r\n\r\nThe login or whatever it is doesn't even open, however if isUsingNativeUI = false, it normally opens a WebView which is also NOT ALLOWED if you are using the OAuth2 to login to Google Sign-in.\r\n\r\nThe point is I am using this for Google Sign-in, and it does not work.", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mdekrey": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/165", "title": "Error while building Android: Could not load PCLCrypto", "body": "I recently upgraded my application to Xamarin.Auth 1.4.1, and am getting a new error while building my Android application:\r\n\r\n    Exception while loading assemblies: System.IO.FileNotFoundException: Could not load assembly 'PCLCrypto, Version=2.0.0.0, Culture=neutral, PublicKeyToken=d4421c8a4786956c'. Perhaps it doesn't exist in the Mono for Android profile?\r\n    File name: 'PCLCrypto.dll'\r\n       at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve(AssemblyNameReference reference, ReaderParameters parameters)\r\n       at Xamarin.Android.Tasks.ResolveAssemblies.AddAssemblyReferences(DirectoryAssemblyResolver resolver, ICollection`1 assemblies, AssemblyDefinition assembly, Boolean topLevel)\r\n       at Xamarin.Android.Tasks.ResolveAssemblies.Execute(DirectoryAssemblyResolver resolver)\r\n\r\nI have tried adding PCLCrypto, but it leads to further errors.\r\n\r\nI am using Xamarin.Auth with a .netstandard library which is referenced my Android Xamarin project, and the error occurs in the Android project.\r\n\r\nWhat is the correct process for referencing Xamarin.Auth via a cross-platform library reference?\r\n\r\n# Update w/ Workaround\r\nWhile I ran into this again today with `Xamarin.Auth 1.5.0.3` (and finding my own open issue was discouraging), I was able to solve this problem by following [@nolanblew's suggestion](https://github.com/xamarin/Xamarin.Auth/issues/165#issuecomment-330961312) - add an explicit reference to `PCL Crypto 2.0.147` directly to the Android project. This is not an ideal solution, so I hope this is solved in the future... and that the workaround doesn't change in the meantime.", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/165/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Kacpur": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/161", "title": "Cannot fire completed event second time", "body": "I implemented Xamarin.Auth both on Android and iOS. When I hit button and the Authenticator View is presented for the first time there is no problem. I can cancel it or log in and then it disappears. But when I do it second time, I cannot cancel it (back button does nothing) and after successful log in I get an error page and cannot dismiss it. This is how my code looks like on Android Page Renderer (i cannot check it for iOS yet):\r\n\r\n```\r\npublic class AuthViewRenderer : PageRenderer, IAuthPage\r\n    {\r\n        public void PushLoginPage()\r\n        {\r\n            var auth = App.FBAuth;\r\n\r\n            var activity = Context as Activity;\r\n            activity.StartActivity((Intent)auth.GetUI(activity));\r\n        }\r\n    }\r\n```\r\n\r\nPushLoginPage is a DependencyService method fired when I hit the login button.", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/161/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bradlol": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/160", "title": "WebView SetAcceptThirdPartyCookies", "body": "Hi,\r\nI'm creating an app for WordPress site, using REST API and WP OAuth Server to auth users. \r\nProblem is that there's login page also with Facebook login and it works fine on iOS and Android below Lollipop, but in Lollipop and above third party cookies are disallowed by default. That makes impossible to login with Facebook JS API.\r\nSo is there anyway of exposing WebView? Or any other way of working around it?", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bpBily": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/159", "title": "OAuth 1.0a (One Legge)", "body": "hi,\r\nOn OAuth1 i don't have token before beginning registered. And when i used OAuth1.getsignature without token secret the method return me a empty signature.\r\nCan you help me?\r\nthx", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ajpinedam": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/147", "title": "Android 1.3.2.2 GetUI()", "body": "Xamarin.Auth version 1.3.2.2 \r\n\r\nGetUI method is returning `object`.\r\n\r\nPrevious code:\r\n\r\n```\r\nvar intent = auth.GetUI(context);\r\nStartActivity(intent);\r\n```\r\n\r\nnot working anymore.", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/147/reactions", "total_count": 6, "+1": 6, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jssuthahar": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/146", "title": "How to use Xamarin.Auth for UWP Login PageRenderer", "body": "Xamarin.Auth 1.3.2 version was support UWP app. I have created and implemented app in Android and IOS like below\r\n\r\n**PresentViewController (auth.GetUI (), true, null);**\r\n\r\nand for Android:\r\n\r\n**StartActivity (auth.GetUI (this));**\r\n\r\nI want to get know how to use auth.GetUI() in xamarin.Form UWP PageRenderer.", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ammarMheir": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/144", "title": "Simple OAuth2 Facebook authentication freezing UIWebView", "body": "##Issue Defniniton\r\nCreating a new single view Xamarin.iOS application and adding the following code will hang the UIWebView right after inputting username and password (on page asking for permissions):\r\n\r\n##Steps to replicate\r\n1) go to https://developers.facebook.com/\r\n2) Create a New app\r\n3) Copy Client ID\r\n4) Use following code with newly create Client ID\r\n\r\nvar auth = new OAuth2Authenticator(\r\n                clientId: \"REPLACE WITH CLIENT ID\",\r\n                scope: \"\",\r\n                authorizeUrl: new Uri(\"https://m.facebook.com/dialog/oauth/\"),\r\n                redirectUrl: new Uri(\"http://www.facebook.com/connect/login_success.html\"));\r\n\r\n            auth.AllowCancel = true;\r\n            auth.Completed += Auth_Completed;\r\n            PresentViewController(auth.GetUI(), true, null);\r\n\r\nWas just following exactly how it was being setup using the \"Getting Started\" page. The authenticator will run as expected however as soon as pressing the login button and the next page appears as so: http://imgur.com/a/ptxg3 \r\n\r\nThe UIWebView will become unresponsive not allowing any sort of interaction. However canceling still works.\r\n\r\nThe same login is being used on Android with no issues at all. Tested on physical device as well.\r\n\r\n##Version Info\r\nMicrosoft Visual Studio Enterprise 2015\r\nVersion 14.0.25431.01 Update 3\r\nMicrosoft .NET Framework\r\nVersion 4.6.01586\r\n\r\nXamarin   4.2.2.11 (00fa5cc)\r\nXamarin.iOS   10.3.1.8 (7beaef4)\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "saryuwahi": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/143", "title": "Getting InvalidOperationException ", "body": "I am getting a System.InvalidOperationException: The current SynchronizationContext may not be used as a TaskScheduler.\r\n\r\n**Stacktrace below**:\r\n\r\n---> (Inner Exception #0) System.InvalidOperationException: The current SynchronizationContext may not be used as a TaskScheduler.\r\n\r\nSystem.Threading.Tasks.SynchronizationContextTaskScheduler.SynchronizationContextTaskScheduler()<a67c5439364a4a4992cd952d9010b635>:0\r\nSystem.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext()<a67c5439364a4a4992cd952d9010b635>:0\r\nXamarin.Auth.WebAuthenticatorActivity.BeginLoadingInitialUrl()<fb4933d771d243b68420bc88c470530c>:0\r\nXamarin.Auth.WebAuthenticatorActivity.<OnCreate>m__1(object s, AuthenticatorErrorEventArgs e)<fb4933d771d243b68420bc88c470530c>:0\r\nXamarin.Auth.Authenticator.<RaiseErrorEvent>c__AnonStorey1.<>m__0()<fb4933d771d243b68420bc88c470530c>:0\r\nXamarin.Auth.Authenticator.BeginInvokeOnUIThread(Action action)<fb4933d771d243b68420bc88c470530c>:0\r\nXamarin.Auth.Authenticator.RaiseErrorEvent(AuthenticatorErrorEventArgs args)<fb4933d771d243b68420bc88c470530c>:0\r\nXamarin.Auth.Authenticator.OnError(Exception exception)<fb4933d771d243b68420bc88c470530c>:0\r\nXamarin.Auth.OAuth1Authenticator.<OnPageLoaded>m__1(Task getTokenTask)<fb4933d771d243b68420bc88c470530c>:0\r\nSystem.Threading.Tasks.ContinuationTaskFromTask.InnerInvoke()<a67c5439364a4a4992cd952d9010b635>:0\r\nSystem.Threading.Tasks.Task.Execute()<a67c5439364a4a4992cd952d9010b635>:0", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "adussarpsbcg": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/134", "title": "add nonce to request", "body": " Hi, I don't find a way to add a nonce to my request. I'm kind of new to xamarin and nugets package, so if you can send me to the implementation of OAuth2Authenticator of the version 1.3.0 it would be nice.\r\n\r\nI'm trying to use request parameter as : \r\n'auth.RequestParameters.Add(\"nonce\", Guid.NewGuid().ToString(\"N\"));'\r\n but i keep running in the nonce invalid error from okta.\r\n\r\n If any of you has an idea how to fix it.\r\nI'm new to xamarin and i would be happy to contribute too!", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aandino-dev": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/132", "title": "requestParams does nothing", "body": "I need to add custom parameters to the querystring\n\nXamarin.Auth -Version 1.3.1.1\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thomasvdb": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/130", "title": "java.io.EOFException - Invalid Xamarin.Social.Accounts file", "body": "We're seeing some crash reports in Xamarin Insights with the following details.\n\n```\nJava.IO.IOExceptionException of type 'Java.IO.IOException' was thrown.\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\nJava.Interop.JniEnvironment.InstanceMethods.CallNonvirtualVoidMethod(JniObjectReference instance, JniObjectReference type, JniMethodInfo method, JniArgumentValue* args)\nJava.Interop.JniPeerMembers.JniInstanceMethods.InvokeNonvirtualVoidMethod(string encodedMember, IJavaPeerable self, JniArgumentValue* parameters)\nJava.Security.KeyStore.Load(Stream stream, char[] password)\nXamarin.Auth.AndroidAccountStore.AndroidAccountStore(Context context)\nXamarin.Auth.AccountStore.Create(Context context)\n...\njava.io.EOFException\nat libcore.io.Streams.readFully(Streams.java:83)\nat java.io.DataInputStream.readInt(DataInputStream.java:103)\nat com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi.engineLoad(BcKeyStoreSpi.java:805)\nat java.security.KeyStore.load(KeyStore.java:590)\n```\n\nI can reproduce this EOFException by manually clearing the contents of the Xamarin.Social.Accounts file so I assume that at some point empty data is written in the Save method in the AndroidAccountStore class.\n\nUnfortunately I could not reproduce this yet in the app itself.\nAny ideas what could cause this issue/empty file/corrupt file?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/265124302", "body": "We've added this logic inside our own app.\r\n\r\nI can create a PR but was wondering if it's still necessary because of the complete rework which is happening?", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/265124302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/265256562", "body": "```\r\npublic UserAccount GetUserAccount()\r\n{\r\n    try\r\n    {\r\n        var storeAccount = Store.FindAccountsForService(ServiceId).FirstOrDefault();\r\n        if (storeAccount == null)\r\n        {\r\n            return null;\r\n        }\r\n\r\n        return new UserAccount(storeAccount.Username, storeAccount.Cookies, storeAccount.Properties);\r\n    }\r\n    catch (EOFException endOfFileException)\r\n    {\r\n        // https://github.com/xamarin/Xamarin.Auth/issues/130\r\n        Logger.Warning(endOfFileException, \"Could not read StoreAccount due to corrupt or empty file.\");\r\n\r\n        try\r\n        {\r\n            DeleteKeystoreFile();\r\n        }\r\n        catch (Exception exp)\r\n        {\r\n            Logger.Warning(exp, \"Could not delete Xamarin.Social.Accounts (Delete was requested because of corrupted StoreAccount).\");\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nprivate void DeleteKeystoreFile()\r\n{\r\n    // As there is no way to clear the keystore without running into the same EOFException, we remove the file ourselves.\r\n    // https://github.com/xamarin/Xamarin.Auth/blob/9c19d90e52994188def9e12e0bbc981a3943a752/src/Xamarin.Auth.Android/AndroidAccountStore.cs\r\n    //\r\n    // If we update this library, we need to verify if this workaround is still needed.\r\n    var fileDeleted = Application.Context.DeleteFile(\"Xamarin.Social.Accounts\");\r\n    if (fileDeleted)\r\n    {\r\n        Logger.Trace(\"Xamarin.Social.Accounts file is deleted.\");\r\n    }\r\n}\r\n```", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/265256562/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "BleyChen": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/125", "title": "how to use Xamarin.Auth to get refresh token?", "body": "```\nMy app use windows live id to login ,so i want to use Xamarin.Auth  ,now it works fine , but now  i want to implement that when user login once ,he didn't login anymore .\n```\n\n  In order to implement up scenario, so i want to save token in local ,but token will expired , anyone know how to use Xamarin.Auth to get refresh token which can be used to get latest token ? thanks\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/125/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kazo0": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/121", "title": "Cannot display login page for Microsoft Live Connect", "body": "MS recently changed their app registration (https://apps.dev.microsoft.com/) and now whenever I try to display the login UI through the `OAuth2Authenticator` I get an error message on Android and iOS telling me: \n\n> The provided value for the input parameter 'response_type' is not allowed for this client. Expected value is 'code'.\n\nI am providing  `OAuth2Authenticator` with my ClientId from the Microsoft Application Registration Portal, which is now in the form of a GUID. Along with the authorizeUrl of `https://login.live.com/oauth20_authorize.srf` and redirectUrl of `https://login.live.com/oauth20_desktop.srf`\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/248311080", "body": "@sushihangover the issue is that we no longer need to send the `client_secret` when requesting the `access_token`.\n\nIn my case specifically I just extended the `OAuth2Authenticator` and overrode `OnRedirectPageLoaded` \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/248311080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "adamhewitt627": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/118", "title": "ArgumentNullException When Loading Accounts", "body": "Fair warning - I have no experience with the Keychain API, beyond looking at this to understand my crashes. \n\nIn version 1.3.0, I get `System.ArgumentNullException Value cannot be null. Parameter name: collection` when I load accounts. Suggested explanation (links are to current source, not 1.3, but the code is largely the same)\n1. Occurs here: https://github.com/xamarin/Xamarin.Auth/blob/portable-bait-and-switch/source/Xamarin.Auth.XamarinIOS/PlatformSpecific/KeyChainAccountStore.Aync.cs#L147\n2. For `accounts_fixed` to be null, either `.Count()`, `.LongCount()` or `GetAccountFromRecord` has to throw an exception. (And then be swallowed by the `catch` block)\n3. Building from source, we find another `ArgumentNullException` here: https://github.com/xamarin/Xamarin.Auth/blob/portable-bait-and-switch/source/Xamarin.Auth.XamarinIOS/PlatformSpecific/KeyChainAccountStore.Aync.cs#L160\n4. If I undefined `TEST_MARK_T` and load the `SecRecord.Generic` my app works.\n\nAs noted earlier, I don't understand the API, but it appears to me that these load from different parts of the keychain. Thus, if an earlier version of the library used `.Generic` then this update breaks loading those keychains. Decompiling 1.2.2 shows this to be the case: `return Account.Deserialize((string) NSString.FromData(r.Generic, NSStringEncoding.UTF8));`.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/119", "title": "Correct access from ValueData", "body": "When loading an older keychain entry that has the password in Generic (version 1.2.2, at the very least) we can't just use ValueData. It being null (since 1.2.2 didn't set it) throws ArgumentNullException inside NSString.FromData.\n\nGoes with #118.\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/240515398", "body": "Trying to update iOS to this gives `Package Validation 2.0.4.14103 is not compatible with xamarinios10 (Xamarin.iOS,Version=v1.0). Package Validation 2.0.4.14103 supports: portable-monoandroid+monotouch+net40+sl5+win8+wp8+wp81+wpa81 (.NETPortable,Version=v0.0,Profile=windows8+net40+sl5+wp8+wpa81+wp81+MonoAndroid+MonoTouch)`\n\nStaying at 1.3.1 then fails a release build with the PCLCrypto dependency.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/240515398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/241287987", "body": "I can't confirm until Tuesday when I'm back at work, but I know this much:\n- iOS won't update to 1.3.1.1 (gives the error message above)\n- iOS at 1.3.1 fails AOT in release build on PCLCrypto dependency\n\nI think Android might've still failed AOT compile without including PCLCrypto myself (also did that as a workaround for iOS) but I don't remember for sure.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/241287987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "deepinderCognitive": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/114", "title": "Endless loop to POST \u201c/oauth/token\u201d after successful login (Android only)", "body": "I am building an app using **_Xamarin forms_** and first step of app is to validate user using **_OAuth2_**. In order to achieve this I am using **_Xamarin.Auth_** library (1.3.0) and implemented it exactly how xamarin docs have recommended. Note: I have tried Xamarin.Auth 1.2.2 also and same issue is there too. Now when I run the app everything works fine, as expected in iOS app. But on Android app when I login I get successful authentication flag with access token and application moves to next screen, but in background library keeps making call to POST \"/oauth/token\" which I have no idea why its happening and this POST call is happening only once for iOS (expected behaviour).\n\nWhen I dig little bit more in server logs and compared what iOS and Android server calls look like and found that once Android had completed validation and got success callback it creates another call for POST \"**_/oauth/token_**\" with \"**_access grant code_**\" that was already used and hence returns \"**_401 Unauthorized_**\". Now at this point Xamarin.Auth library gets in bad state keeps trying to do the same thing again and again. Eventually after some time app goes out of memory and crashes.\n\nIs this the Xamarin.Auth issue? Has anyone else encountered same issue? Is there a solution for this?\n\nI have tried to find out solution online but without any luck. Any help will be highly appreciated.\n\nJust an FYI - server side we have Oauth2 implemented using [Doorkeeper Gem.](https://github.com/doorkeeper-gem/doorkeeper)\n\nHere is the [server log for Android.](https://drive.google.com/open?id=0B8R82VrIDmL5cmFwdUdUdTJROVU)\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/231856688", "body": "@jbogard / @moljac - any update on this?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/231856688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/232981193", "body": "Did anyone got chance to look into this?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/232981193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "remiroyc": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/108", "title": "Facebook policies", "body": "Facebook policies (https://developers.facebook.com/docs/facebook-login/checklist) clearly states that native iOS and Android apps are REQUIRED to use the native SDK for login.\n\nAzure mobile app xamarin client uses Xamarin.auth and it's not accepted by fb (app review).\n\n> Mobile apps (iOS, Android, and Windows) must use the latest Facebook SDK. Mobile apps developed with Unity should upload a dummy build and include a screencast of the integration.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/106", "title": "Authenticate label header", "body": "It would be great if we need customize label header (Authenticate) or better.. just hide it.\n\nhttp://image.noelshack.com/fichiers/2016/07/1455899042-screenshot-2016-02-19-17-17-17.png\n\n``` C#\n        /// <summary>\n        /// Initializes a new instance of the <see cref=\"Xamarin.Auth.Authenticator\"/> class.\n        /// </summary>\n        public Authenticator ()\n        {\n            Title = \"Authenticate\";\n            HasCompleted = false;\n            AllowCancel = true;\n        }\n```\n\nand add a timeout connection.\n\nhttp://image.noelshack.com/fichiers/2016/07/1455899042-screenshot-2016-02-19-17-16-55.png\n\nThank you. Best regards,\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vinodh06": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/107", "title": "Authentication issue in twitter android.", "body": "After successfully authenticated in twitter using xamarin.auth,My app getting crashed and the eror message is \"Android.Views.WindowManagerBadTokenException: Unable to add window -- token android.os.BinderProxy@41ac6788 is not valid; is your activity running?\".\nPlease help me to fix these.\nThanks\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/107/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Narnain": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/105", "title": "Support Azure AD B2C", "body": "It would be great to add support for Azure AD B2C including the ability to sign in via social providers, and retrieve refresh and bearer tokens for communicating with a secured WebAPI endpoint.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/105/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "marktap": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/102", "title": "OAuth2Authenticator.RequestRefreshTokenAsync could raise the Error event?", "body": "The OAuth2Autheticator.RequestRefreshTokenAsync method currently throws an exception if the refresh fails. This is different behavior than the initial authentication/authorization flow that raises the Error event.\n\nWe could modify the code to raise the Error event? This would be an interface change; however, it would make the interface more consistent so it might be worth doing. It is easier to learn if we can say \"errors are always reported via the Error event\" rather than \"sometimes errors are reported via the Error event and sometimes it throws exceptions\".\n\nHere's a possibility for an updated implementation:\n\npublic async virtual Task<int> RequestRefreshTokenAsync(string refreshToken)\n        {\n            var queryValues = new Dictionary<string, string>\n            {\n                { \"refresh_token\", refreshToken    },\n                { \"client_id\",     this.ClientId   },\n                { \"grant_type\",    \"refresh_token\" }\n            };\n\n```\n        if (!string.IsNullOrEmpty(this.ClientSecret))\n        {\n            queryValues[\"client_secret\"] = this.ClientSecret;\n        }\n\n        try\n        {\n            var accountProperties = await RequestAccessTokenAsync(queryValues).ConfigureAwait(false);\n\n            this.OnRetrievedAccountProperties(accountProperties);\n\n            return int.Parse(accountProperties[\"expires_in\"]);\n        }\n        catch (Exception e)\n        {\n            OnError(e);\n\n            throw; // maybe don't need this? this will throw the exception in order to maintain backward compatibility, but maybe could just return -1 or something instead?\n        }\n    }\n```\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/101", "title": "Authenticator.BeginInvokeOnUIThread may need WinPhone support added?", "body": "In Authenticator.cs, the BeginInvokeOnUIThread method currently has iOS and Android support. I think this will need WinPhone support added unless invoking the action directly will work (i.e. the last '#else')? Here's the current code:\n\nvoid BeginInvokeOnUIThread (Action action)\n{\n            #if PLATFORM_IOS || **IOS**\n            #if !**UNIFIED**\n            MonoTouch.\n            #endif\n            UIKit.UIApplication.SharedApplication.BeginInvokeOnMainThread \n                (\n                    delegate { action (); }\n                );\n            #elif PLATFORM_ANDROID || **ANDROID**\n            var a = context as Android.App.Activity;\n            if (a != null) {\n                a.RunOnUiThread (action);\n            }\n            else {\n                action ();\n            }\n            #else\n            action ();\n            #endif\n}\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/173301280", "body": "Xamarin.Auth does not get the username for you since I think that is server-specific. You can write a function to get the username and pass it as a constructor argument to OAuth2Authenticator and the authenticator will call your function after authorization is completed. The authenticator will pass your function the auth results (including the access_token). Then your code can get the username as appropriate (perhaps going back to the facebook api). The string your function returns will be used to populate the Account.Username property.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/173301280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/173305513", "body": "I realize this is a pretty old submission :-( sorry for the delay. This will be fixed in the next release.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/173305513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "dzolnjan": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/99", "title": "Pinterest Auth2 throwing error only on iOS", "body": "Pinterest Auth2 is throwing error on web browser startup > Invalid state from server. Possible forgery!\n\nIt works fine with exactly same auth details on Android !\n\n```\nvar auth = new OAuth2Authenticator(\n      clientId: \"4811462802426315117\",\n      scope: \"\",\n      authorizeUrl: new Uri(\"https://api.pinterest.com/oauth/\"),\n      redirectUrl: new Uri(\"https://danielztestapp.com/\"));\n```\n\nhttps://github.com/xamarin/Xamarin.Auth/blob/master/src/Xamarin.Auth/OAuth2Authenticator.cs#L250\n\n![pinterest auth error](https://cloud.githubusercontent.com/assets/3109244/12224897/f045d450-b7fb-11e5-9e74-15b0c19880d0.png)\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/99/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ltaljaard": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/98", "title": "Problem specific to Android Marshmallow - error \"The authentication or decryption has failed\"", "body": "Method OAuth2Request works fine on iOS and Android Lollipop (Google API 22) and under iOS 9. However it returns the following error on Android Marshmallow (Google API 23).\n\nI have created a test project to demonstrate the issue: https://github.com/ltaljaard/FacebookLoginTest\n\nAll you need to do is to enter a valid Facebook App ID on line 100 of the Renderers\\LoginPageRenderer.cs, (in the Droid project) and enter a valid Azure site in line 103 of the same file. Then first run the app using Lollipop to confirm that everything works, then run it using Marshmallow to confirm that this is a Marshmallow-specific issue.\n\nHere are the details of the exception:\n\n[MonoDroid] UNHANDLED EXCEPTION:\n[MonoDroid] System.AggregateException: One or more errors occurred. ---> System.AggregateException: One or more errors occurred. ---> System.Net.WebException: Error: SendFailure (The authentication or decryption has failed.) ---> System.IO.IOException: The authentication or decryption has failed. ---> System.NullReferenceException: Object reference not set to an instance of an object\n[MonoDroid] at System.Net.Sockets.NetworkStream.BeginWrite (System.Byte[] buffer, Int32 offset, Int32 size, System.AsyncCallback callback, System.Object state) [0x00088] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/System/System.Net.Sockets/NetworkStream.cs:255\n[MonoDroid] at Mono.Security.Protocol.Tls.RecordProtocol.BeginSendRecord (ContentType contentType, System.Byte[] recordData, System.AsyncCallback callback, System.Object state) [0x00026] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/Mono.Security/Mono.Security.Protocol.Tls/RecordProtocol.cs:765\n[MonoDroid] at Mono.Security.Protocol.Tls.RecordProtocol.BeginSendRecord (HandshakeType handshakeType, System.AsyncCallback callback, System.Object state) [0x00017] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/Mono.Security/Mono.Security.Protocol.Tls/RecordProtocol.cs:727\n[MonoDroid] at Mono.Security.Protocol.Tls.SslClientStream.BeginNegotiateHandshake (System.AsyncCallback callback, System.Object state) [0x0004c] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/Mono.Security/Mono.Security.Protocol.Tls/SslClientStream.cs:411\n[MonoDroid] at Mono.Security.Protocol.Tls.SslStreamBase.BeginNegotiateHandshake (Mono.Security.Protocol.Tls.InternalAsyncResult asyncResult) [0x00021] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/Mono.Security/Mono.Security.Protocol.Tls/SslStreamBase.cs:488\n[MonoDroid] --- End of inner exception stack trace ---\n[MonoDroid] at Mono.Security.Protocol.Tls.SslStreamBase.BeginNegotiateHandshake (Mono.Security.Protocol.Tls.InternalAsyncResult asyncResult) [0x00067] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/Mono.Security/Mono.Security.Protocol.Tls/SslStreamBase.cs:503\n[MonoDroid] at Mono.Security.Protocol.Tls.SslStreamBase.BeginWrite (System.Byte[] buffer, Int32 offset, Int32 count, System.AsyncCallback callback, System.Object state) [0x0007f] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/Mono.Security/Mono.Security.Protocol.Tls/SslStreamBase.cs:847\n[MonoDroid] at System.Net.WebConnection.BeginWrite (System.Net.HttpWebRequest request, System.Byte[] buffer, Int32 offset, Int32 size, System.AsyncCallback cb, System.Object state) [0x0005f] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/System/System.Net/WebConnection.cs:1054\n[MonoDroid] --- End of inner exception stack trace ---\n[MonoDroid] at System.Net.HttpWebRequest.EndGetResponse (IAsyncResult asyncResult) [0x0005e] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/System/System.Net/HttpWebRequest.cs:944\n[MonoDroid] at System.Threading.Tasks.TaskFactory`1[TResult].FromAsyncCoreLogic (IAsyncResult iar, System.Func`2 endFunction, System.Action`1 endAction, System.Threading.Tasks.Task`1 promise, Boolean requiresSynchronization) [0x00014] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/external/referencesource/mscorlib/system/threading/Tasks/FutureFactory.cs:552\n[MonoDroid] --- End of inner exception stack trace ---\n[MonoDroid] at System.Threading.Tasks.Task.ThrowIfExceptional (Boolean includeTaskCanceledExceptions) [0x00014] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/external/referencesource/mscorlib/system/threading/Tasks/Task.cs:2168\n[MonoDroid] at System.Threading.Tasks.Task`1[TResult].GetResultCore (Boolean waitCompletionNotification) [0x00034] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/external/referencesource/mscorlib/system/threading/Tasks/Future.cs:568\n[MonoDroid] at System.Threading.Tasks.Task`1[TResult].get_Result () [0x00000] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/external/referencesource/mscorlib/system/threading/Tasks/Future.cs:535\n[MonoDroid] at Xamarin.Auth.Request.<GetResponseAsync>m__0 (System.Threading.Tasks.Task`1 resTask) [0x00000] in <filename unknown>:0\n[MonoDroid] at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2[TAntecedentResult,TResult].InnerInvoke () [0x00027] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/external/referencesource/mscorlib/system/threading/Tasks/TaskContinuation.cs:207\n[MonoDroid] at System.Threading.Tasks.Task.Execute () [0x00016] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/external/referencesource/mscorlib/system/threading/Tasks/Task.cs:2523\n[MonoDroid] ---> (Inner Exception #0) System.Net.WebException: Error: SendFailure (The authentication or decryption has failed.) ---> System.IO.IOException: The authentication or decryption has failed. ---> System.NullReferenceException: Object reference not set to an instance of an object\n[MonoDroid] at System.Net.Sockets.NetworkStream.BeginWrite (System.Byte[] buffer, Int32 offset, Int32 size, System.AsyncCallback callback, System.Object state) [0x00088] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/System/System.Net.Sockets/NetworkStream.cs:255\n[MonoDroid] at Mono.Security.Protocol.Tls.RecordProtocol.BeginSendRecord (ContentType contentType, System.Byte[] recordData, System.AsyncCallback callback, System.Object state) [0x00026] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/Mono.Security/Mono.Security.Protocol.Tls/RecordProtocol.cs:765\n[MonoDroid] at Mono.Security.Protocol.Tls.RecordProtocol.BeginSendRecord (HandshakeType handshakeType, System.AsyncCallback callback, System.Object state) [0x00017] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/Mono.Security/Mono.Security.Protocol.Tls/RecordProtocol.cs:727\n[MonoDroid] at Mono.Security.Protocol.Tls.SslClientStream.BeginNegotiateHandshake (System.AsyncCallback callback, System.Object state) [0x0004c] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/Mono.Security/Mono.Security.Protocol.Tls/SslClientStream.cs:411\n[MonoDroid] at Mono.Security.Protocol.Tls.SslStreamBase.BeginNegotiateHandshake (Mono.Security.Protocol.Tls.InternalAsyncResult asyncResult) [0x00021] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/Mono.Security/Mono.Security.Protocol.Tls/SslStreamBase.cs:488\n[MonoDroid] --- End of inner exception stack trace ---\n[MonoDroid] at Mono.Security.Protocol.Tls.SslStreamBase.BeginNegotiateHandshake (Mono.Security.Protocol.Tls.InternalAsyncResult asyncResult) [0x00067] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/Mono.Security/Mono.Security.Protocol.Tls/SslStreamBase.cs:503\n[MonoDroid] at Mono.Security.Protocol.Tls.SslStreamBase.BeginWrite (System.Byte[] buffer, Int32 offset, Int32 count, System.AsyncCallback callback, System.Object state) [0x0007f] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/Mono.Security/Mono.Security.Protocol.Tls/SslStreamBase.cs:847\n[MonoDroid] at System.Net.WebConnection.BeginWrite (System.Net.HttpWebRequest request, System.Byte[] buffer, Int32 offset, Int32 size, System.AsyncCallback cb, System.Object state) [0x0005f] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/System/System.Net/WebConnection.cs:1054\n[MonoDroid] --- End of inner exception stack trace ---\n[MonoDroid] at System.Net.HttpWebRequest.EndGetResponse (IAsyncResult asyncResult) [0x0005e] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/System/System.Net/HttpWebRequest.cs:944\n[MonoDroid] at System.Threading.Tasks.TaskFactory`1[TResult].FromAsyncCoreLogic (IAsyncResult iar, System.Func`2 endFunction, System.Action`1 endAction, System.Threading.Tasks.Task`1 promise, Boolean requiresSynchronization) [0x00014] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/external/referencesource/mscorlib/system/threading/Tasks/FutureFactory.cs:552 <---\n[MonoDroid] --- End of inner exception stack trace ---\n[MonoDroid] at ImAvailMobileApp.Droid.LoginPageRenderer+<OnElementChanged>c__async0+<OnElementChanged>c__AnonStorey1.<>m__1 (System.Object sender, Xamarin.Auth.AuthenticatorCompletedEventArgs eventArgs) [0x001a1] in /Users/louistaljaard/Documents/Projects/Azure/ImAvailMobileApp/Droid/Renderers/LoginPageRenderer.cs:145\n[MonoDroid] at (wrapper delegate-invoke) System.EventHandler`1[Xamarin.Auth.AuthenticatorCompletedEventArgs]:invoke_void_object_TEventArgs (object,Xamarin.Auth.AuthenticatorCompletedEventArgs)\n[MonoDroid] at Xamarin.Auth.Authenticator+<OnSucceeded>c__AnonStorey0.<>m__0 () [0x00024] in <filename unknown>:0\n[MonoDroid] at Java.Lang.Thread+RunnableImplementor.Run () [0x0000b] in /Users/builder/data/lanes/2098/3efa14c4/source/monodroid/src/Mono.Android/src/Java.Lang/Thread.cs:36\n[MonoDroid] at Java.Lang.IRunnableInvoker.n_Run (IntPtr jnienv, IntPtr native__this) [0x00009] in /Users/builder/data/lanes/2098/3efa14c4/source/monodroid/src/Mono.Android/platforms/android-23/src/generated/Java.Lang.IRunnable.cs:71\n[MonoDroid] at (wrapper dynamic-method) System.Object:f651e514-fdf8-49f3-98a6-c75aae9ffdb4 (intptr,intptr)\n[MonoDroid] ---> (Inner Exception #0) System.AggregateException: One or more errors occurred. ---> System.Net.WebException: Error: SendFailure (The authentication or decryption has failed.) ---> System.IO.IOException: The authentication or decryption has failed. ---> System.NullReferenceException: Object reference not set to an instance of an object\n[MonoDroid] at System.Net.Sockets.NetworkStream.BeginWrite (System.Byte[] buffer, Int32 offset, Int32 size, System.AsyncCallback callback, System.Object state) [0x00088] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/System/System.Net.Sockets/NetworkStream.cs:255\n[MonoDroid] at Mono.Security.Protocol.Tls.RecordProtocol.BeginSendRecord (ContentType contentType, System.Byte[] recordData, System.AsyncCallback callback, System.Object state) [0x00026] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/Mono.Security/Mono.Security.Protocol.Tls/RecordProtocol.cs:765\n[MonoDroid] at Mono.Security.Protocol.Tls.RecordProtocol.BeginSendRecord (HandshakeType handshakeType, System.AsyncCallback callback, System.Object state) [0x00017] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/Mono.Security/Mono.Security.Protocol.Tls/RecordProtocol.cs:727\n[MonoDroid] at Mono.Security.Protocol.Tls.SslClientStream.BeginNegotiateHandshake (System.AsyncCallback callback, System.Object state) [0x0004c] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/Mono.Security/Mono.Security.Protocol.Tls/SslClientStream.cs:411\n[MonoDroid] at Mono.Security.Protocol.Tls.SslStreamBase.BeginNegotiateHandshake (Mono.Security.Protocol.Tls.InternalAsyncResult asyncResult) [0x00021] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/Mono.Security/Mono.Security.Protocol.Tls/SslStreamBase.cs:488\n[MonoDroid] --- End of inner exception stack trace ---\n[MonoDroid] at Mono.Security.Protocol.Tls.SslStreamBase.BeginNegotiateHandshake (Mono.Security.Protocol.Tls.InternalAsyncResult asyncResult) [0x00067] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/Mono.Security/Mono.Security.Protocol.Tls/SslStreamBase.cs:503\n[MonoDroid] at Mono.Security.Protocol.Tls.SslStreamBase.BeginWrite (System.Byte[] buffer, Int32 offset, Int32 count, System.AsyncCallback callback, System.Object state) [0x0007f] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/Mono.Security/Mono.Security.Protocol.Tls/SslStreamBase.cs:847\n[MonoDroid] at System.Net.WebConnection.BeginWrite (System.Net.HttpWebRequest request, System.Byte[] buffer, Int32 offset, Int32 size, System.AsyncCallback cb, System.Object state) [0x0005f] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/System/System.Net/WebConnection.cs:1054\n[MonoDroid] --- End of inner exception stack trace ---\n[MonoDroid] at System.Net.HttpWebRequest.EndGetResponse (IAsyncResult asyncResult) [0x0005e] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/System/System.Net/HttpWebRequest.cs:944\n[MonoDroid] at System.Threading.Tasks.TaskFactory`1[TResult].FromAsyncCoreLogic (IAsyncResult iar, System.Func`2 endFunction, System.Action`1 endAction, System.Threading.Tasks.Task`1 promise, Boolean requiresSynchronization) [0x00014] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/external/referencesource/mscorlib/system/threading/Tasks/FutureFactory.cs:552\n[MonoDroid] --- End of inner exception stack trace ---\n[MonoDroid] at System.Threading.Tasks.Task.ThrowIfExceptional (Boolean includeTaskCanceledExceptions) [0x00014] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/external/referencesource/mscorlib/system/threading/Tasks/Task.cs:2168\n[MonoDroid] at System.Threading.Tasks.Task`1[TResult].GetResultCore (Boolean waitCompletionNotification) [0x00034] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/external/referencesource/mscorlib/system/threading/Tasks/Future.cs:568\n[MonoDroid] at System.Threading.Tasks.Task`1[TResult].get_Result () [0x00000] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/external/referencesource/mscorlib/system/threading/Tasks/Future.cs:535\n[MonoDroid] at Xamarin.Auth.Request.<GetResponseAsync>m__0 (System.Threading.Tasks.Task`1 resTask) [0x00000] in <filename unknown>:0\n[MonoDroid] at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2[TAntecedentResult,TResult].InnerInvoke () [0x00027] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/external/referencesource/mscorlib/system/threading/Tasks/TaskContinuation.cs:207\n[MonoDroid] at System.Threading.Tasks.Task.Execute () [0x00016] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/external/referencesource/mscorlib/system/threading/Tasks/Task.cs:2523\n[MonoDroid] ---> (Inner Exception #0) System.Net.WebException: Error: SendFailure (The authentication or decryption has failed.) ---> System.IO.IOException: The authentication or decryption has failed. ---> System.NullReferenceException: Object reference not set to an instance of an object\n[MonoDroid] at System.Net.Sockets.NetworkStream.BeginWrite (System.Byte[] buffer, Int32 offset, Int32 size, System.AsyncCallback callback, System.Object state) [0x00088] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/System/System.Net.Sockets/NetworkStream.cs:255\n[MonoDroid] at Mono.Security.Protocol.Tls.RecordProtocol.BeginSendRecord (ContentType contentType, System.Byte[] recordData, System.AsyncCallback callback, System.Object state) [0x00026] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/Mono.Security/Mono.Security.Protocol.Tls/RecordProtocol.cs:765\n[MonoDroid] at Mono.Security.Protocol.Tls.RecordProtocol.BeginSendRecord (HandshakeType handshakeType, System.AsyncCallback callback, System.Object state) [0x00017] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/Mono.Security/Mono.Security.Protocol.Tls/RecordProtocol.cs:727\n[MonoDroid] at Mono.Security.Protocol.Tls.SslClientStream.BeginNegotiateHandshake (System.AsyncCallback callback, System.Object state) [0x0004c] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/Mono.Security/Mono.Security.Protocol.Tls/SslClientStream.cs:411\n[MonoDroid] at Mono.Security.Protocol.Tls.SslStreamBase.BeginNegotiateHandshake (Mono.Security.Protocol.Tls.InternalAsyncResult asyncResult) [0x00021] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/Mono.Security/Mono.Security.Protocol.Tls/SslStreamBase.cs:488\n[MonoDroid] --- End of inner exception stack trace ---\n[MonoDroid] at Mono.Security.Protocol.Tls.SslStreamBase.BeginNegotiateHandshake (Mono.Security.Protocol.Tls.InternalAsyncResult asyncResult) [0x00067] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/Mono.Security/Mono.Security.Protocol.Tls/SslStreamBase.cs:503\n[MonoDroid] at Mono.Security.Protocol.Tls.SslStreamBase.BeginWrite (System.Byte[] buffer, Int32 offset, Int32 count, System.AsyncCallback callback, System.Object state) [0x0007f] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/Mono.Security/Mono.Security.Protocol.Tls/SslStreamBase.cs:847\n[MonoDroid] at System.Net.WebConnection.BeginWrite (System.Net.HttpWebRequest request, System.Byte[] buffer, Int32 offset, Int32 size, System.AsyncCallback cb, System.Object state) [0x0005f] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/System/System.Net/WebConnection.cs:1054\n[MonoDroid] --- End of inner exception stack trace ---\n[MonoDroid] at System.Net.HttpWebRequest.EndGetResponse (IAsyncResult asyncResult) [0x0005e] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/mcs/class/System/System.Net/HttpWebRequest.cs:944\n[MonoDroid] at System.Threading.Tasks.TaskFactory`1[TResult].FromAsyncCoreLogic (IAsyncResult iar, System.Func`2 endFunction, System.Action`1 endAction, System.Threading.Tasks.Task`1 promise, Boolean requiresSynchronization) [0x00014] in /Users/builder/data/lanes/2098/3efa14c4/source/mono/external/referencesource/mscorlib/system/threading/Tasks/FutureFactory.cs:552 <---\n[MonoDroid] <---\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/98/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/211075544", "body": "Ok I've finally found the reason for this bug. As soon as you upgrade from the current stable version of the Xamarin.Forms package (version 2.1.0.6529) to the pre-release version 2.2.0.5-pre2 the Android login screen disappears (iOS works both under the stable and pre-release version).\n\nNote that in my search for the underlying problem I also tried the non-Xamarin.Auth approach which uses the platform-specific LoginAsync() method instead of relying on the OAuth2Authenticator class to render the Facebook login page, here's a link to this approach: https://azure.microsoft.com/en-us/documentation/articles/app-service-mobile-xamarin-forms-get-started-users/\n\nAnd the same bug actually occurs in the above non-Xamarin.Auth approach as well! So this is not a bug in Xamarin.Auth, rather it has something to do with either the Xamarin.Forms pre-release version or with the new version of the Xamarin.Android dependency packages that come with the pre-release version (the stable Xamarin.Forms version uses Android packages 23.0.1.3 and the pre-release Xamarin.Forms version uses Android packages 23.1.1.1 - I'm talking about the Droid project within the Xamarin.Forms solution - the iOS project is unaffected by this as I've already mentioned). So even through this is not a Xamarin.Auth bug I'm asking you to kindly bring it to the attention of the Xamarin.Forms team, before merely closing this issue.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/211075544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/218516911", "body": "The bug has been fixed in the latest pre-release version of Xamarin.Forms\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/218516911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "bpress": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/95", "title": "SSL on iOS9", "body": "Hello.\n\nI'm using Xamarin.Auth to add \"Login with Facebook\" functionality to my app.\nWhen running in iOS 9, immediately after presenting the GetUI() View Controller, I get an SSL error alert dialog. The application log is reporting \"NSURLSession/NSURLConnection HTTP load failed (kCFStreamErrorDomainSSL, -9802)\".\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/95/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/141899294", "body": "Hi,\nI saw that codes, and it looks like some https call is complaining about invalid ssl certificates.\nHowever I cannot pinpoint which call is failing.\nI should debug using the source code rather than the compiled assembly.\nStrange enough, the very same app is working in ios 8 (both simulator and real device),\nbut fails under ios 9.\n\n[cid:566BD339-1A17-483F-ADC0-ECC106D6CA47]http://www.msoft.it/\n\nSupporto Tecnico\nsupporto@msoft-italia.commailto:supporto@msoft-italia.com\n\nB-Press S.r.l.\nPiazzale Lombardia, 4 - 28100 Novara (NO)\nT. +39 0321 499508 - F.+39 0321 492974\n\nDa: Thibault Durand\nRisposta: \"xamarin/Xamarin.Auth\"\nData: luned\u00ec 21 settembre 2015 09:04\nA: \"xamarin/Xamarin.Auth\"\nCc: Supporto MSoft\nOggetto: Re: [Xamarin.Auth] SSL on iOS9 (#95)\n\nDocumentation here:\nhttps://developer.apple.com/library/mac/documentation/CoreFoundation/Reference/CFStreamConstants/#//apple_ref/doc/constant_group/CFStream_Error_Domain_Constants_CFHost_\n\nSays the StreamErrorDomainSSL error codes are defined in:\nSecurity/SecureTransport.h\n\nThat you can find in XCode or here:\nhttp://www.opensource.apple.com/source/libsecurity_ssl/libsecurity_ssl-36800/lib/SecureTransport.h\n\n-9802 would be errSSLFatalAlert, which doesn't help much I guess.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xamarin/Xamarin.Auth/issues/95#issuecomment-141895330.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/141899294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/141925827", "body": "Hi.\nI've tried to debug the source code, and it looks like the error is thrown by the UIWebView inside the WebAuthenticationController, while trying to load this url:\n\nhttps://m.facebook.com/dialog/oauth/?client_id=1658202597727497&redirect_uri=http%3A%2F%2Fwww.facebook.com%2Fconnect%2Flogin_success.html&response_type=token&scope=email&state=jyeybgpamkrsaodc\n\nI've tried to completely disable ATS by adding the following keys to Info.plist, but with no success at all:\n\n`<key>NSAppTransportSecurity</key>\n<dict>\n    <key>NSAllowArbitraryLoads</key>\n    <true/>\n</dict>`\n\nAgain, this occurs only in iOS 9\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/141925827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "durandt": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/92", "title": "AD FS 3.0 and OAuth", "body": "Hi,\n\nDid anyone get Xamarin.Auth to work with AD FS using OAuth?\n\nOne thing that strikes me is that Xamarin.Auth uses the \"scope\" parameter, where it seems that AD FS would rather have a \"resource\" parameter. (see http://blog.scottlogic.com/2015/03/09/OAUTH2-Authentication-with-ADFS-3.0.html)\n\n```\n I found that most OAUTH2 libraries expect to pass a scope but not a resource parameter.\n```\n\nRegards,\n\nThibault D\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/92/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/141895330", "body": "Documentation here:\nhttps://developer.apple.com/library/mac/documentation/CoreFoundation/Reference/CFStreamConstants/#//apple_ref/doc/constant_group/CFStream_Error_Domain_Constants_CFHost_\n\nSays the `StreamErrorDomainSSL` error codes are defined in:\n`Security/SecureTransport.h`\n\nThat you can find in XCode or here: \nhttp://www.opensource.apple.com/source/libsecurity_ssl/libsecurity_ssl-36800/lib/SecureTransport.h\n\n-9802 would be `errSSLFatalAlert`, which doesn't help much I guess. \n\nMaybe this may help?\nhttp://stackoverflow.com/questions/32203479/nsurlsession-nsurlconnection-http-load-failed-kcfstreamerrordomainssl-9802-e?lq=1\nhttp://stackoverflow.com/questions/30720813/cfnetwork-sslhandshake-failed-ios-9\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/141895330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rkshnair": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/89", "title": "Issue with Yammer Authentication ", "body": "The authentication is working fine with iPhone 5, 6 etc but When viewed on an iPhone 4 screen the Approve and Deny buttons are off the bottom of the screen(the screen appear after authentication), and the page isn't scrollable, so you can never get to them.\n\nAre we missing something, or is this process completely impossible in a browser of that resolution. Any workarounds ?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/89/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "siacomuzzi": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/83", "title": "New component version with ShowUIErrors feature", "body": "Hi,\n\nCould you please submit a new component version? I need the `ShowUIErrors` feature: https://github.com/xamarin/Xamarin.Auth/blame/master/src/Xamarin.Auth/WebAuthenticator.cs#L62\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/83/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Dzoge": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/75", "title": "Unhandled Android.Views.WindowManagerBadTokenException in Xamarin.Utilities.Android.ActivityEx", "body": "I'm currently facing the following unhandled exception \n`\"Android.Views.WindowManagerBadTokenException: Unable to add window -- token android.os.BinderProxy@6564d270 is not valid; is your activity running?\"`\n\nThat is being raised when `alert.Show ();` is called in `Xamarin.Utilities.Android.ActivityEx.ShowError (this Activity activity, string title, string message)` method.\n\nThere is no way to catch the exception from the application itself so it causes my app to crash.\n\nIn my application I\n- create a TaskCompletionSource\n- add Completed handler to Authenticator\n- get UI with GetUI()\n- start the intent\n- await until TaskCompletionSource returns (assigned in Completed event handler)\n\nas soon as I receive the result I exit the function. The error is called back later, when OnRedirectPageLoaded tries to call my callback page. So the error is raised and application crashes. \n\nIn order to make it work I cloned the source, wrapped the `alert.Show ();` with exception handler and now I'm using locally built DLL file instead.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/75/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/60569671", "body": "@BrunoVT1992 There is a clone URL on the right side of the page (this is the project page: https://github.com/xamarin/Xamarin.Auth).\nGit clone URL is: https://github.com/xamarin/Xamarin.Auth.git\nIn case you have subversion, checkout with: https://github.com/xamarin/Xamarin.Auth\n\nOnce you checkout, there is a **src** sub folder that contains a Visual Studio solution.\n- Open the solution\n- Make the appropriate changes (see below)\n- Build the solution\n- Copy built DLL file to your project's folder\n- Remove the existing Xamarin.Auth reference\n- Reference the newly built DLL\n\nBy \"appropriate changes\", do whatever you think will best fit you. I just wrapped the `alert.show()` with try/catch so that I don't get my app crash: `try { alert.show(); } catch { }`. I think was it two methods in the same class and I changed at both places.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/60569671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/64945770", "body": "@BrunoVT1992 , sorry for the late reply.\n\nIf you take the latest version, there is a class called \"ActivityEx\" in \"Xamarin.Utilities.Android\" namespace. It Contains method \"ShowError\" that looks like this (at it's current branch version):\n\n```\npublic static void ShowError(this Activity activity, string title, string message)\n{\n    var b = new AlertDialog.Builder(activity);\n    b.SetMessage(message);\n    b.SetTitle(title);\n    b.SetNeutralButton(\"OK\", (s, e) =>\n    {\n        ((AlertDialog)s).Cancel();\n    });\n    var alert = b.Create();\n    alert.Show();\n}\n```\n\nthe last line, `alert.Show();` is the one causing the problem. So I just wrapped it with try/catch. So that instread of `alert.Show();` you get `try { alert.Show(); } catch { }`.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/64945770/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ryan10328": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/71", "title": "Problems with Strava API integration", "body": "I'm trying to integrate with Strava API(OAuth2.0)\n\nbut something error happened when the authentication webview\n\nit pops up \n\n> Authentication Error - unknow_user\n\n![2014-10-7 08-59-12](https://cloud.githubusercontent.com/assets/8080037/4535937/7e7e2e16-4dbd-11e4-83eb-6467bf81db4c.png)\n\n**I found the reason of this error**\n\nRequest the \"code\" - Webview loads https://www.strava.com/oauth/authorize?client_id=xxx&scope=write&redirect_uri=http://xxx.xxx.xxx.xxx/&response_type=code\n\nbut it will redirect ... finally I print the url of ShouldStartLoad method in Xamarin.Auth source code\n\n``` csharp\npublic override bool ShouldStartLoad(UIWebView webView, NSUrlRequest request, UIWebViewNavigationType navigationType)\n{\n    var nsUrl = request.Url;\n    if (nsUrl != null && !controller.authenticator.HasCompleted)\n    {\n        Uri url;\n        if (Uri.TryCreate(nsUrl.AbsoluteString, UriKind.Absolute, out url))  {\n            Console.WriteLine(url);  // I add this code to print the url\n            controller.authenticator.OnPageLoading(url);\n        }\n    }\n    return true;\n}\n```\n\nthe last url printed by console will be \"http://xxx.xxx.xxx.xxx/xxxx.xxx?error=unknown_user\n\nso ... when xamarin.auth recieved error in url parameter, it keeps pop up error\n\n**solution**\n\nI add some code to avoid this happened\n\nWebRedirectAuthenticator.cs - OnPageEncountered method\n\n``` csharp\nif (all.ContainsKey (\"error\")) \n{\n                var description = all [\"error\"];\n     if (all.ContainsKey (\"error_description\")) \n     {\n               description = all [\"error_description\"];\n     }\n     if(description == \"unknown_user\")\n     {\n           // do nothing.....\n     }\nelse\n{\n      OnError (description);\n}\n    return;\n}\n```\n\n**I thought it is a workaround but not a formal solution**\n\nthanks !\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/71/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "coreyperkins": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/70", "title": "Facebook success.html displays instead of going back to previous page", "body": "Authentication is successful but I an redirected to a white page with the following red text.\n\n\"SECURITY WARNING: Please treat the URL above as you would your password and do not share it with anyone. See the Facebook Help Center for more information.\"\n\nI have only tried this on iOS at this point. It seems as if Xamarin.Auth needs to know to ignore this.\n\nI also documented this at: http://forums.xamarin.com/discussion/25183/xamarin-forms-xamarin-auth-and-facebook?new=1\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/70/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mbuthiagrg": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/68", "title": "Sample/Reference implementation of FormAuthenticator", "body": "I would like to request a reference implementation of the FormAuthenticator Abstract class.\n\nThe main issue being if authentication fails should the SignInAsync() method throw an exception, return null or return an empty Account result or what should it return? Please provide guidance.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/68/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ruffin--": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/67", "title": "Unable to authenticate against Feedly -- chained authentication issue?", "body": "It looks like the multi-logon option on the first page of Feedly's login is messing with Xamarin.Auth.  \n\nHere's a brief depiction of what I'm seeing (four screenshots from iOS in order of what you have to click away):\n\n![first](https://cloud.githubusercontent.com/assets/5659878/3715141/8325d9b0-15d1-11e4-9417-64ae547dc3c9.png)\n![second](https://cloud.githubusercontent.com/assets/5659878/3715142/85850460-15d1-11e4-8e3a-e0904fc107d0.png)\n![third](https://cloud.githubusercontent.com/assets/5659878/3715143/87817fb4-15d1-11e4-9630-c4af80b6061e.png)\n![fourth](https://cloud.githubusercontent.com/assets/5659878/3715144/892da144-15d1-11e4-8339-f028b5b96532.png)\n\nBasically, since the first page of the signin allows a user to pick from five different identify providers (Google, Facebook, Twitter, Microsoft, or Evernote), the user is leaving that first page without a complete login having completed.  Xamarin.Auth thinks they're done (it seems), and gives me the \"Authentication Error: Invalid state from server. Possible forgery!\", above.\n\nIf I continue anyhow, I get a second set of errors in the third and fourth images, \"Authentication Error: Could not connect to the server\" and the \"(405) Method Not Allowed\" following it.\n\nThat second set of errors sounds a little like what's reported in issue #49  \n\nJust fwiw, here's the code I'm using to set up the Feedly authentication request.\n\n```\nvar auth = new OAuth2Authenticator(\n    clientId: \"sandbox\",\n    clientSecret: \"YDRYI5E8OP2JKXYSDW79\",\n    scope: \"https://cloud.feedly.com/subscriptions\",\n    authorizeUrl: new Uri (\"https://sandbox.feedly.com/v3/auth/auth\"),\n    redirectUrl: new Uri (\"http://localhost\"),\n    accessTokenUrl: new Uri(\"https://sandbox.feedly.com/v3/auth/auth\")\n);\n```\n\nClient id and secret are from the developer forum: https://groups.google.com/forum/#!forum/feedly-cloud\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/67/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kobynet": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/65", "title": "WebAuthenticator.ClearCookies() in droid removes all cookies", "body": "This is wrong since there might be cookies saved by other services, this for example it deletes cookies saved by  facebook sdk webview and might cause unexpected errors.\n\nThe solution might be to delete service specific cookies, an example on how facebook does it can be seen here: \nhttps://github.com/facebook/facebook-android-sdk/blob/master/facebook/src/com/facebook/internal/Utility.java \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/65/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/25678420", "body": "Having the same issue, makes it totally unusable at the moment when error is raised. error event should be handled by the caller, \nby the way, the problem with facebook is that it's default redirect page \"http://www.facebook.com/connect/login_success.html\" also has a redirect in it so this error can be avoided by redirecting to you own url.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/25678420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kevin-brown": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/61", "title": "OAuth2 token should be passed in the header", "body": "As specified in RFC 6750, OAuth2 bearer tokens may be passed into a request using the `Authorization` header, request body, or url parameter.  This has been mentioned in https://github.com/xamarin/Xamarin.Auth/issues/53, but that issue is primarily for something unrelated.\n\n---\n\nThe `Authorization` header must be supported by all servers (and in my experience, it is), as specified in the RFC:\n\n> Clients SHOULD make authenticated requests with a bearer token using the \"Authorization\" request header field with the \"Bearer\" HTTP  authorization scheme.  Resource servers MUST support this method.\n> -- [RFC 650 - 2.1](http://tools.ietf.org/html/rfc6750#section-2.1)\n\nIn the project I'm working on, we use [DOAC](https://github.com/Rediker-Software/doac) which does not implement the url parameter.  For now, this is because it isn't required and there are some challenges associated with it that we don't want to deal with.\n\n> Because of the security weaknesses associated with the URI method (see Section 5), including the high likelihood that the URL containing the access token will be logged, it SHOULD NOT be used unless it is impossible to transport the access token in the \"Authorization\" request header field or the HTTP request entity-body Resource servers MAY support this method.\n> -- [RFC 650 - 2.3](http://tools.ietf.org/html/rfc6750#section-2.3)\n\n---\n\nInterestingly, the [function for generating the header](https://github.com/xamarin/Xamarin.Auth/blob/ab74344adf08035c661db8dbc84b691c560a0632/src/Xamarin.Auth/OAuth2Request.cs#L105-L115) is implemented, but it is not used anywhere.  Instead, the url parameter is used by default, and there does not appear to be an easy way (without subclassing the request) to use the header over the query parameter.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/61/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/262297100", "body": "Back in 2014, we solved this by subclassing `OAuth2Request` and overriding `GetResponseAsync` in order to inject the token.\r\n\r\n```csharp\r\npublic override Task<Response> GetResponseAsync (CancellationToken cancellationToken)\r\n{\r\n    // Make sure we have an account\r\n    if (Account == null) {\r\n        throw new InvalidOperationException (\"You must specify an Account for this request to proceed\");\r\n    }\r\n\r\n    // Sign the request before getting the response\r\n    var req = GetPreparedWebRequest ();\r\n\r\n    // Authorize it\r\n    var authorization = GetAuthorizationHeader (Account);\r\n\r\n    req.Headers [HttpRequestHeader.Authorization] = authorization;\r\n\r\n    return base.GetResponseAsync (cancellationToken);\r\n}\r\n```\r\n\r\nIt's been two years and we've changed enough on our side (and `Xamarin.Auth` has changed as well) that I have no idea if this patch still works.", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/262297100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ermau": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/47", "title": "Refresh tokens", "body": "We need to provide built in support for dealing with refresh tokens. \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/47/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/16", "title": "Argument checks for public methods", "body": "The public API needs a set of argument checks\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/16/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13405613", "body": "> Eric, do we still need this patch?\n\nYes.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13405613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14819206", "body": "Is the addition of proxy support integral to DropBox support?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14819206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14823252", "body": "Would you mind separating it into two clean pull requests, with corrected spacing?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14823252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14850232", "body": "You need to supply the OAuth2Authenticator with a `GetUsernameAsyncFunc` method with something like what @ybigus has posted. This is an optional argument to the constructor. It's just a generic authenticator, it does not know how to retrieve the username.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14850232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/17362640", "body": "I'm thinking this was the wrong approach after all. If you already have an `Account` object, why would you be going through the auth process again? You can just start making requests at that point. The original behavior of just clearing the cookies seems like the best idea, now that I understand the reasoning behind it.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/17362640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/17401861", "body": "I wonder if perhaps the better approach would be to automatically preserve cookies, and have an explicit ClearCookies() for the dev to use when the user wants to change accounts.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/17401861/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18426246", "body": "Hi @gaearon,\n\nCould you please split this into two separate pull requests? These are two very unrelated features and there's already a proposal for Json responses in the issues section.\n\nAlso, while not required, it'd be nice if we could avoid unrelated commits like 32b8b7e and a5eaea0 and squash commit/reverts like 4f57a32 and 49020e1.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18426246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18426969", "body": "> I'm not sure how split pull request and/or get rid of unrelated commits except for branching from origin and cherry-picking them one by one, which is what I plan to do a bit later.\n\nThis is basically what you'd have to do since it's after the fact. Branch per feature is a habit that's good to get into.\n\n> Meanwhile, can you please let me know if you plan to add the Safari thing, so I don't waste time if not?\n\nFair enough. There was a little confusion on my part about what exactly you were trying to accomplish original (forums & stackoverflow), but your description here made it click. Let me review the API and code some more and I'll come back to this.\n\n> Also, I'm still not sure about the license (see last paragraph).\n\nI'll leave this for @migueldeicaza to respond to.\n\n> Also, I suppose it's better to somehow rewrite history before submitting the pull request?\n\nYes, absolutely (although it's a bit trickier if multiple people are working on the branch/feature you mean to push). A cleaner commit history is always more likely to get accepted in any open source project, as it's easier to review and adds less cruft to the project. \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18426969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18427071", "body": "> As for Dictionary, I later changed this to be a utility method in WebEx, so I suppose it doesn't matter (because it's still internal).\n\nAha, apologies, I was looking at an individual commit instead of the end result.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18427071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18427514", "body": ">  I'm not sure how it can be implemented in Android\n\nThis will be an issue, we'll have to ensure that this functionality can be implemented across the board before we'll add it to the public API. It may be possible, but we'll have to be sure first.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18427514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18933254", "body": "@gaearon Was a little quick on the merge, can you state what license you're submitting this under?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18933254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18938653", "body": "@gaearon Can you add to the pull requests what license they are submitted under (including the one I merged already) ?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18938653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18939996", "body": "> I updated all pull requests with \"(This pull request is submitted under MIT/X11)\" in the beginning. Please let me know if there's something else I need to do!\n\nThis will do for now, but in the future you should include it in the commit message (it can go in the under the subject).\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18939996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18941162", "body": "@gaearon This works great, thanks!\n\nSome general git tips:\n\nYou might consider putting it in the body of the commit message. Note that git commit messages can be multiple lines, and as a result you tend to want to keep the first line short (like the subject of an email) and explain (if needed) in further detail in the body of the message. This is where you can also add extras like the license of a commit, or a bug # reference, etc.\n\nIf you're using `git commit -m \"Add foo feature\"` note that you can just do `git commit` instead, and it will bring up your default text edtior to write the message in.\n\nExample commit message:\n\n```\nAvoid blocking in GetResponseAsync\n\nThe scheduler in Task.FromAsync does not allow more than a few concurrent tasks\nand as a result can deadlock when later the Result property is accessed. Switching\nall this to use TaskCompletionSources has solved the problem.\n\nCommit licensed under MIT/X11\n```\n\nThe first line becomes the summary of the commit, and everything below becomes details as can be seen in 7fe6793.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18941162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19000620", "body": "Hey @gaearon,\n\nI've been looking at this and I believe there's a far simpler change. Could you verify that it solves your deadlocking problem?\n\n``` diff\nindex b92229f..efe12a9 100644\n--- a/src/Xamarin.Auth/Request.cs\n+++ b/src/Xamarin.Auth/Request.cs\n@@ -214,8 +214,8 @@ namespace Xamarin.Auth\n                                                                        .FromAsync<WebResponse> (request.BeginGetResponse, request.EndGetResponse, null\n                                                                        .ContinueWith (resTask => {\n                                                return new Response ((HttpWebResponse)resTask.Result);\n-                                       }, cancellationToken).Result;\n-                               }, cancellationToken);\n+                                       }, cancellationToken);\n+                               }, cancellationToken).Unwrap();\n                        } else if (Method == \"POST\" && Parameters.Count > 0) {\n                                var body = Parameters.FormEncode ();\n                                var bodyData = System.Text.Encoding.UTF8.GetBytes (body);\n@@ -234,8 +234,8 @@ namespace Xamarin.Auth\n                                                                .FromAsync<WebResponse> (request.BeginGetResponse, request.EndGetResponse, null)\n                                                                        .ContinueWith (resTask => {\n                                                return new Response ((HttpWebResponse)resTask.Result);\n-                                       }, cancellationToken).Result;\n-                               }, cancellationToken);\n+                                       }, cancellationToken);\n+                               }, cancellationToken).Unwrap();\n                        } else {\n                                return Task.Factory\n                                                .FromAsync<WebResponse> (request.BeginGetResponse, request.EndGetResponse, null)\n```\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19000620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19009686", "body": "I'm going to wait on this one until I've had a chance to review #26. If we're going to add a System.Json reference, we should rewrite this method to use a proper parser.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19009686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19010945", "body": "This pull request no longer merges, can you rebase on our `master` please?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19010945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19046989", "body": "Is there a reason you couldn't just do something like:\n\n``` csharp\n public Request CreateBatchRequest (params Request [] requests)\n {\n     var session = EnsureLoggedIn ();\n     JArray jsonRequests = new JArray ();\n\n     foreach (var request in requests) {\n         var jsonRequest = new JObject {\n             {\"method\", request.Method},\n             {\"relative_url\", BaseUri.MakeRelativeUri (request.Url).ToString ()}\n         };\n\n         if (request.Parameters.Count > 0) {\n             var body = request.Parameters.FormEncode();\n             jsonRequest [\"body\"] = body;\n         }\n\n         jsonRequests.Add (jsonRequest);\n     }\n\n     var batchRequest = session.Service.CreateRequest (\"POST\", BaseUri, session.Account);\n     batchRequest.Parameters[\"batch\"] = jsonRequests.ToString ();\n\n     return batchRequest;\n }\n```\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19046989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19049397", "body": "> Still, FormEncode is internal, so I'd need to copy it in my library\n\nSo it is! I checked that it was public, but I forgot to check the type it was contained in (it's still early :)\n\nI'm concerned with the API as submitted for a few reasons:\n- In reality, there's no difference between the parameters of a request and its body, and so I'd expect the `Body` property to update when `Parameters` does, and vice versa.\n- The API adds members that have no meaning for a GET request, and yet the user can use, even though they'll have no effect.\n- I think the goal is achievable with one or zero API additions, and messing with the API is always a dangerous game.\n\nI think we can accomplish this more simply in one of two ways:\n1. Add an extension method that returns the form encoding of the parameters\n   \n   This would avoid adding APIs directly to Request and would avoid ambiguity with GET requests. Although form encoding isn't really useful to a GET request, the behavior is clearly defined and will be the same regardless.\n2. Expose the FormEncode() extension\n   \n   I think this perhaps is the best approach. I don't see any particular need to keep this internal as it's obviously useful. Even Xamarin.Social ends up just re-including WebEx.cs as it needs access to what's there.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19049397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19199801", "body": "We have two options:\n1. Use System.Json and use the Mono implementation for Windows Phone / Windows 8\n2. Use Json.Net or some other 3rd party library.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19199801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19290840", "body": "`FormEncode` is now available in `Xamarin.Auth.WebUtilities`\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19290840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/20703019", "body": "This runs into the same issue as #26 which is that there is no System.Json on Windows Phone or Windows 8 which we'd like to support at some point.\n\nWe have two options:\n1. Use System.Json and use the Mono implementation for Windows Phone / Windows 8\n2. Use Json.Net or some other 3rd party library.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/20703019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/21273640", "body": "> It's a small dependency that can easily be broken if/when Windows is\n> supported. I don't see any reason to hold up a bug fix in anticipation of\n> future features.\n\nI have a Windows Phone branch right now that I'm trying to get ready, so I'm trying to avoid causing it more problems.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/21273640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/21273856", "body": "> Yep, OK. So we can use a tailored made JSON reader then. There might even be one in that code base. I hate the thought of depending on another lib. :-(\n\nThere's GetValueFromJson or something like that, it scares me. And me too, it's why I haven't already dropped in Json.NET (and the lack of dependency support in components).\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/21273856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/21273966", "body": "I will investigate.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/21273966/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/21755232", "body": "@praeclarum This is missing System.Json references to the Android and Desktop library projects.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/21755232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22267396", "body": "This is being discussed in and is covered by #33 \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22267396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22272000", "body": "Hi @icnatejackson and thanks for the pull request!\n\nAlthough you've pointed out what changes you've made, unfortunately rewriting the line endings of a file causes too many other problems to accept. If you note what changes you made, you can checkout the original file (`git checkout HEAD~1 src/Xamarin.Auth.Android/WebAuthenticatorActivity.cs`) and reapply your changes without rewriting the line endings. You can then just amend your commit (`git commit --amend`), and force push it (`git push --force`) to update your pull request. You might also consider double checking your git setup with regards to line endings for your platform (https://help.github.com/articles/dealing-with-line-endings).\n\nYou may find that you need to also rebase your commits as they currently can no longer can be automatically merged.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22272000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22275358", "body": "Fixed in 237e3f30a0\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22275358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22284615", "body": "> I'm not sure why a git environmental issue on my side would affect 1 of 10 files in the commit. When I saw that, I just assumed that 1 file was in error within the repo. I'm simply using all the defaults with Xamarin Studio and Github for Mac. \n\nI'm not sure either, I was just suggesting it as something to double check.\n\n> I'm new to git, so most of what you said to do is greek to me. But, I'd like for this feature to be in the component, so I'll work through what I need to in order to get the pull request through.\n\nI'm happy to help. You mentioned you were using GitHub for Mac, but for the fixes you'll want to actually use a command line client. I believe GitHub for Mac includes one with it, but I'm not sure. I generally laid out the commands you need to execute, but I'll describe them in a bit more detail. You may want to make a copy of your folder just in case things go south.\n- `git checkout HEAD~1 src/Xamarin.Auth.Android/WebAuthenticatorActivity.cs`\n\nHEAD is your current latest commit. ~1 is 1 previous of that. So this command will take the version of `src/Xamarin.Auth.Android/WebAuthenticatorActivity.cs` that was in the repository before your latest commit (with the changes and the line endings).\n- From this point, you should re-apply your actual changes to `WebAuthenticatorActivity` without rewriting the line endings.\n- Now that you've made the changes required, you'll want to get them into the repository. First you'll want to stage the new version of WebAuthenticatorActivity: `git add src/Xamarin.Auth.Android/WebAuthenticatorActivity.cs`\n- Instead of making a new commit (since this won't fix the history), you'll want to update your existing commit. To do this you'll do: `git commit --amend`. As it sounds, this just amends the last commit with any further changes you've staged.\n\nUnder normal circumstances when you're working on the main repository you'll want to avoid rewriting history, but since you just have a fork to make changes for upstream (that is to say, submit to the main repository, Xamarin's) it's ok.\n- Now, as the commit can no longer be merged automatically, you'll need to rebase your commit on the new master.\n  - First, add the Xamarin repository as a remote: `git remote add xamarin https://github.com/xamarin/Xamarin.Auth.git`\n  - Now, you'll want to pull in the latest changes from the Xamarin repository, with a rebase: `git pull xamarin master --rebase`\n    \n      What this means is that it will temporarily remove your commits, bring in all the latest commits, and then reapply your commits as if you'd just made them. This may cause a merge conflict that you will have to resolve before moving forward.\n- Now that you have an updated and freshly rebased commit, you need to push it. Since you've already pushed another version of this commit though, you'll need to force it: `git push --force`.\n\nAgain, under normal working circumstances you'll not want to use --force as you're rewriting history (which causes problems for other people working in the same repository), but in this case we're cleaning up a commit before it makes it in.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22284615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22285033", "body": "I forgot to mention, before you do your `git commit --amend`, run `git status` and make sure that `WebAuthenticatorActivity.cs` is the only thing staged. If not, do `git reset` and stage it again.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22285033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22328895", "body": "> The total time it'd take me to fork from the current code and make the very simple changes was way less than the time I felt it take me to get my existing repo in a condition where it could be merged back to Xamarin's.\n\nFair enough, if you ran into problems I was going to offer to do the fix for you to get the changes in, but since you've already recreated your fork that's no longer an option :)\n\n> Unfortunately, the current code from Xamarin doesn't even compile for me as the newly added JSON code is missing XML comments and the compiler is treating the warnings as errors. I'm not sure how the other contributors are compiling the projects as checked in.\n\nInteresting, I see what you're talking about but oddly neither VS or CI are failing to compile it for me. Nevertheless I'll go ahead and correct it.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22328895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22329928", "body": "> I can include it in a commit as well. I've already set Xamarin.Auth to not generate XML docs like the other projects in the solution. I guess that sorta implies that my upcoming pull request would get merged :) haha\n\nI already corrected it by adding the missing XML comment. If you haven't made any changes yet you can just add xamarin as a remote again and pull from it.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22329928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22332577", "body": "This is quite odd. Visual Studio tells me GenerateDocumentation is disabled, I see it enabled in the csproj on github though.. yet I have no pending changes for that file. Furthermore, CI doesn't complain about it when building it.\n\nFor now I would just disable documentation generation (don't include that change in your commits), and I'll look into what's going on.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22332577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22334389", "body": "I see what's going on. It appears that Xamarin Studio has a different generate documentation option than Visual Studio. The XS one is enabled, the VS one isn't.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22334389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22334735", "body": "Does the sample produce the same error? I haven't been able to reproduce the issue on a GB simulator.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22334735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22351063", "body": "Congrats, this has been merged!\n\nNote though that `WebAuthenticator` is not the only base `Authenticator`, so `FormAuthenticator` also had to be updated to respect `Authenticator.AllowCancel`, but I went ahead and did this for you.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22351063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22580239", "body": "Really this is a bug in Mono's System.Json implementation, `JsonValue`'s implicit conversion to a string does a cast instead of .ToString().\n\nHowever, since we're about to drop a release, I'll include a workaround for this.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22580239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22888822", "body": "Hi @slackshot,\n\n> I really just want you guys to get a component out that handles the token refresh and works for JSON responses.\n\nThe current version in source (it has not been released to the component store yet) does support JSON authentication responses. I agree the lack of token refresh support is quite painful.\n\n> I know that this deployment was a big deal.. but with the change on Google's side.. that doesn't allow a client secret.. you can't actually implement Xamarin.Auth for google now. For Android and IOS, I had to use an older APIConsole account. -sighs- \n\nI'm not quite sure what change you're referring to, but it's still entirely possible to create a web client ID and authenticate using Xamarin.Auth. I did go ahead and try it, worked perfectly. What issues are you running into?\n\n> I wish I didn't have to prompt my users for OAuth credentials as frequently as it will happen.\n\nIt should be fairly straightforward to modify `OAuth2Authenticator.RequestAccessTokenAsync` to include `access_type=offline` and use the refresh token which should now be in the account to issue a refresh request before the expiration time. I realize this is not ideal, and we should definitely support this out of the box.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22888822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/23103879", "body": "@roostersoap As @ksmithfl stated, you'll need to use the constructor that takes `clientSecret` and `accessTokenUrl`. These parameters are required for the `code` response type, and so Xamarin.Auth will automatically select it when using this constructor.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/23103879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/25895895", "body": "Duplicate of #43 \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/25895895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/25908763", "body": "> When will this be rolled into source that is shipped?\n\nThe component? Shortly.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/25908763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/25910047", "body": "I've created a separate enhancement issue for dealing with refresh tokens, since there's been no response I'm closing this.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/25910047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/25924268", "body": "This seems to assume that your app will not be killed before you return to it. If it is, any task you had created will be gone and launching the app from the browser will do nothing leading to a poor experience for the user.\n\nI'm inclined to suggest this be left up to the user if they wish to pursue this route, I don't see any reason that it **has** to be part of the core, all the API used is public.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/25924268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/25928999", "body": "> Well, why would it? I mean, I see the system might kill the app, but in practice I've never seen this happen during the last year.\n\niOS is a little better about it, but you'd be amazed at how quick Android can be to kill off backgrounded apps, it's what drove me to deprecating the task based API for Xamarin.Mobile's `MediaPicker` for Android.\n\n> This is exactly the same method Facebook SDK uses if no native login or app is available. It's not like I'm inventing something new here.\n\nNot quite, the overall methodology is the same, but the code is not identical. In your code, if the app was killed you're simply ignoring the opened URI. If the URI is valid, maybe we could automatically save the account to an `AccountStore`, regardless of the task?\n\n> I guess this pull request can get closed in this case.\n\nWell, I didn't close it originally because further discussion was warranted as we might work out the issues I brought up.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/25928999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/25981681", "body": "> Even if something like SafariUrlHandler \u201creceives\u201d a URL without the corresponding task, how can it know which service to save it for?\n\nThe redirect URI could contain the service ID in the query string. \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/25981681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/26081927", "body": "I'm a little confused by your mention of \"an unauthenticated request\". If you're making a request that's unauthenticated, you shouldn't be using the OAuth mechanisms. However, if it was authenticated, you wouldn't have an auth_token.\n\nThe preferred way of making an OAuth1 request is by using the `OAuth1Request` type. You'll pass in the `Account` instance you got from authenticating and it'll handle the rest.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/26081927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/26082418", "body": "> I'm making a request using my API key and token,\n\nTo get the token you must have authenticated at some point though, or am I missing something?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/26082418/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/26082501", "body": "Looking at the Vimeo documentation, I see they provide xAuth as a way of getting the token, is that what you used?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/26082501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/26083391", "body": "I re-read your stackoverflow post and figured out what's going on. The oauth_token is not used because you are not supplying it. There is no parameter for it on OAuth1.CreateRequest. The `OAuth1Request` class adds it automatically to requests just as you have done manually.\n\nIf you've got your oauth_\\* properties from elsewhere than authenticating normally, you can manually create a new `Account` instance and provide the `oauth_consumer_key`, `oauth_consumer_secret`, `oauth_token` and `oauth_token_secret` to it via the ctor or the `Properties` property. Then you can pass this `Account` instance to `OAuth1Request` and have all this handled for you.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/26083391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/32809121", "body": "The project defines PLATFORM_IOS: https://github.com/xamarin/Xamarin.Auth/blob/master/src/Xamarin.Auth.iOS/Xamarin.Auth.iOS.csproj#L32\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/32809121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/40934319", "body": "Adding the parameter where you have is a breaking change for anyone who supplied `getUsernameAsync`. We should move the param to the end or make it a property. I'm thinking it should become a property instead, if we have to add more toggles like this in the future, the ctor is going to become polluted very fast.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/40934319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/40935085", "body": "I don't see any related changes to Android, does it work as-is?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/40935085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/41059507", "body": "Thanks for your pull request! Can you amend your commit message to state the license this is being contributed under?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/41059507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/41059852", "body": "I'm thinking maybe we should be more strong-armed about this. Something like:\n- Remove the non-passworded create call altogether\n- Attempt to decode with the new password\n- If that fails, decode with the old hardcoded one, and re-save with the new user provided one.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/41059852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/41091650", "body": "> Sure, is it sufficient if I refer to the Apache license that this repo falls under?\n\nWe'd rather it was stated directly in the commit message (it can be in the extra details section, not the \"subject\" line). You can include it in a new commit for further changes mentioning the previous commit if you don't want to amend the existing one.\n\n> Personally I'd rather not have the component contain a fallback like this though because it's bound to stay in for a long time since you won't know when developers will upgrade.\n> \n> If you want to be strong armed - which I agree with-, I'd deprecate and remove the hard coded password immediately and provide good upgrade guidance for developers: have them do the recoding and keep the component clean (and secure).\n\nThat I can think of, there's two end goals we can get to one of:\n1. End-users stored logins continue to work.\n2. End-users have to re-login.\n\nOption # 1 requires decoding the existing keystore and copying it into a new one. This will require keeping the hardcoded password around and some form of upgrade logic. If this is the goal, I wouldn't want to put the pressure of implementing that code on the component-user.\n\nOption # 2 has obvious user experience issues. It has the advantage of completely nuking the password, but we'd still need some logic to delete the old keystore if it exists because otherwise the login information is still exposed under the hardcoded password.\n\nI'm still leaning towards option 1 with my original proposed approach, but am open to alternatives.\n\n---\n\nOn another note, we also have to consider how this is going to affect Xamarin.Social, because `Service` creates its own `AccountStore` internally. It's probably sufficient to simply add the password argument to the relevant `SaveAccount` and `DeleteAccount` methods, as they already take the `Context`.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/41091650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/41172467", "body": "> About Xamarin.Social: will you change that component?\n\nAs in will it be changed, or will I specifically change it? Yes and yes, I will update it for this change.\n\n> BTW, I've amended the commit message. Will include the license in all following commits.\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/41172467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/44581134", "body": "Hi @roycornelissen, sorry for the delay. As you might have noticed, there were some big things in the works that had priority for me. I will review this shortly.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/44581134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/comments/3352624", "body": "@jonlipsky,\n\n> First, Are there any plans to add proxy support into Xamarin.Auth? I have a major customer that needs this, so I could never use the standard release of Xamarin.Auth unless I can specify a proxy and I can't figure out a way to add proxy support without customizing it.\n\nNo \"plans\", but we'll look into this.\n\n> Without \"OnPageFailed\", I can watch for that URL in \"OnPageLoading\" to know that I authenticated successfully; however when the web view fails to load that URL (after OnPageLoading get's called), a series of UIAlert's are shown.\n\nI see, the original need wasn't clear because there was already an error mechanism, but it was not being used (corrected in ad0eacf). However, in cde10c4ec, `OnPageLoaded` was changed to `OnPageEncountered` and is before the page starts loading on iOS, using this may solve your issue. We might need to make tweaks since it tells iOS it's ok to load the page, but it's a start and a better place to handle this.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/comments/3352624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/comments/7859452", "body": "There is no official Xamarin NuGet package for Xamarin.Auth.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/comments/7859452/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/3348184", "body": "Did you mean `\"&\" : \"?\"` ?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/3348184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/11861026", "body": "This needs an null argument check for `password`\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/11861026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/11904506", "body": "Whoops, you're right! I think I saw the one and assumed it was for `context`, even though it's in green. Sorry about that.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/11904506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "brendanzagaeski": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/44", "title": "Add a way to change the Authenticator error handler added by WebAuthenticatorActivity", "body": "[Retrying immediately after an error in WebAuthenticatorActivity authentication](https://github.com/xamarin/Xamarin.Auth/blob/master/src/Xamarin.Auth.Android/WebAuthenticatorActivity.cs#L70-L78) might be undesirable in some cases. For example, in Xamarin.Social's FacebookService, if the user does not have a `username` (`username` is optional on Facebook), [GetUsernameAsync()](https://github.com/xamarin/Xamarin.Social/blob/master/src/Xamarin.Social/Services/FacebookService.cs#L43-L60) throws an exception. The WebAuthenticatorActivity then repeatedly retries and fails, rapidly producing [many error message pop-ups](http://www.screencast.com/t/3DI7v8zwC), with no way to stop them. Currently there's no easy way to change this default behavior.\n\nFor the particular case of FacebookService, another option might be to change GetUsernameAsync() to try the `name` field if accessing the `username` field fails.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/44/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ErikSchierboom": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/7", "title": "Add support for the non-browser based OAuth 2 workflows", "body": "At the moment, this library supports three-legged authentication. However, there are also OAuth 2 servers that support two-legged authentication. It would be great if these could also be included in your library.\n\nThe three workflows are:\n- Resource owner credentials grant (http://tools.ietf.org/html/rfc6749#section-4.3)\n- Client credentials grant (http://tools.ietf.org/html/rfc6749#section-4.4)\n- Refreshing access tokens (http://tools.ietf.org/html/rfc6749#section-6)\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/7/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13425611", "body": "You're welcome. What a great library you have made, kudos!\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13425611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "moljac": {"issues": [], "commits": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/b834fae17c5547a1cf9dd4ffe7f8abc745fca883", "message": "build.cake setting ANDROID_HOME based on search results"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/72cd6256ca5489fa070bbbb9e9da584bd31451bc", "message": "build.cake script - search for common Android SDK locations"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/eb0eb1804ed33aa69b282c236abfea83a4a30902", "message": "build.cake attepmt search for AndroidSDK location"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/791401e29e83d3e072f68e35521d9c931bb99bc3", "message": "upcomming changes"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/3d1f1f34e1b95433ee7467a1633795d1a42b8a72", "message": "Environment variables dump added to cake script"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/cf856305f18d9977634c9381021410326b760a1f", "message": "AndroidSDKManager api and dump added"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/920f78291fd6ce2b2964b483eecbc4d11eef7e0a", "message": "Merge branch 'master' of https://github.com/xamarin/Xamarin.Auth\n\n# Conflicts:\n#\tsource/XamarinForms/Xamarin.Auth.Forms.UniversalWindowsPlatform/Xamarin.Auth.Forms.UniversalWindowsPlatform.nuget.props"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/6de802d93b24be411492e78e2ffee56b5e84d632", "message": "cake fix attempts for CI"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/be334bb769164d95d11df0e74574bc46aa921489", "message": "new solutions"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/8fa489858130b5c46f3f90c77dc8e288f473319d", "message": "samples updates"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/2546422c3dd21b413efe16e39683e718eb782a06", "message": "packages updates"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/61e106c9e7b81885f6d3363934e7ddee5715866c", "message": "updates for MacOSX build"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/82854f5785f66592ae74a79d4a121428c2de3a01", "message": "Crypto removal"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/f99b70cb684ed52b2672fa3c13b9f7810d3ad33c", "message": "cake updates"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/4d6c4b96ab3fbae2e92f1a2e1f7efa4ac8729f7e", "message": "project updates Android TargetFramework"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/abe15efa24a989654c1c6f5ea6b99b761680595b", "message": "Merge branch 'master' of https://github.com/xamarin/Xamarin.Auth"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/45b4494668a25f53ec49837b20ffc8ebf0eaddfd", "message": "moved triaging repro sample"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/4ef22eb86085fa879f45d28e17a9989f2a5e7818", "message": "projects updates"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/e50f1e80b753c536e2b8824701f7674d545f8d8d", "message": "moved bug repro project to bugs-triaging folder"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c0e760dba63de3e9c70e62766f887b02657f8aff", "message": "Flickr 3 AppTypes added"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/02a264c26504bfb8a3f1734a1ad8c3e7aac880b9", "message": ".NET Standard does not like <Name /> tag for project reference[s]"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/811b17c9218c321535d152298f2143ca15996b54", "message": "Merge branch 'master' of https://github.com/xamarin/Xamarin.Auth\n\n# Conflicts:\n#\tsource/XamarinForms/Xamarin.Auth.Forms.NetStandard16/Xamarin.Auth.Forms.NetStandard16.csproj"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/53484ae13cd7d8357b0e8c92c2d243e170e696ee", "message": "reference fixes for .NET Standard - detected in Xamarin.Social builds"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c4596409d67b9662900771ed5c18f2263e983bd3", "message": "Merge branch 'master' of https://github.com/xamarin/Xamarin.Auth\n\n# Conflicts:\n#\tsource/Extensions/Xamarin.Auth.Extensions.NetStandard16/Xamarin.Auth.Extensions.NetStandard16.csproj\n#\tsource/XamarinForms/Xamarin.Auth.Forms.NetStandard16/Xamarin.Auth.Forms.NetStandard16.csproj"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/00e1282cc930ffb36d24af9ff18ecaedb2c8dfeb", "message": "conditional references (projects nugets)"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c8320589263b243fb7675dcdcb2fa76d0c8f63da", "message": "NetStandard removed from Mac Solutions"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/1067b9659cee8f2abccc1fb4d3ca1981a0b02f9f", "message": "Merge branch 'master' of https://github.com/xamarin/Xamarin.Auth"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/16037ea584983aedb3e26ddd6092ffca21e5a114", "message": "cake build update (removed fixes for various nuget issues)"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/44194d03287db1966b28f2c74a7dd6063fe2e5e1", "message": "solution update for CI build tests"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/e63ee630d5ae7d85865334f0dde38763c4db47e7", "message": "UWP updates"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/636a66492fcc46c0cffb054e58d47fb5e8eaeb32", "message": "Merge branch 'master' of https://github.com/xamarin/Xamarin.Auth"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/a4ee9fb83f221ef63fdfe566ac2ce4a36d2036e8", "message": "build.cake update"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/abc6cac6797484aaf7237a9b7533f849b2491362", "message": "project references path fix"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/08adf2157e122465829e00a8eede8009c053c5f4", "message": "build cake updates"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/bbe1216700fe2ae5c229b8153637d67229207a0d", "message": "Merge branch 'master' of https://github.com/xamarin/Xamarin.Auth"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/5a34b10535d7a479a623db3598450d48579e057a", "message": "samples/bugs-triaging/ folder added for repros\nsome samples moved to samples/bugs-triaging/ folder"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c22c401482b29887f9a65c2231a9d7f8e74f4051", "message": "cake build script fixes for new structure"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/8abb4f49c11593402ebf5918de37451bf7062bb9", "message": "Solutions fixed for new paths"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c39acd0f4c977d7ee5f00aad2351b3d472951f12", "message": "Xamarin.Forms projects' paths fixed to match new structure with Core/"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/faa34ec6850ce979801accee76a5dab31f81f76a", "message": "Extensions projects fixed to match new paths"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/820c0388beae316e2750de823f2084c5a845de4c", "message": "code restructuring for .NET STandard and vNext\nCore/ folder created\nOAuth core projects moved to Core/ folder"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c4d561094edd84be543e752099b42520c535794e", "message": "old stale guid for iOS project removed"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/e4b8e8f18f574487c77b97fae2538277357feb7b", "message": "old uwp project removed"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c06a0408affd239a263f250f413e7f1ee591c687", "message": "UWP CI project recreation to fix nuget restore error on CI windows bot."}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/b7599a0c91f1b8fc600fbb4f884a65bcf35ba40d", "message": "Android Target Framework update\nMissing OAuth2 new refactored files for .NET Standard added"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/e0275c295298c18e28a662fcd3b735148f503b9a", "message": "Merge branch 'master' of https://github.com/xamarin/Xamarin.Auth\n\n# Conflicts:\n#\tsource/Extensions/Xamarin.Auth.Extensions.NetStandard16/Xamarin.Auth.Extensions.NetStandard16.csproj\n#\tsource/Xamarin.Auth.LinkSource/OAuth2Authenticator.cs\n#\tsource/XamarinForms/Xamarin.Auth.Forms.NetStandard16/Xamarin.Auth.Forms.NetStandard16.csproj"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/21265f86daf435ac204c698a899e557f33eef792", "message": "Multiple fixes and refactoring:\n\n1. CustomTabs\n   1.  removed some utilities available in Xamarin.Android.Support.CustomTabs nuget\n       fixed - warnings about ambiguity\n   2.  refactoring CustomTabs Utilities API (packages, etc)\n2. UWP fixes\n3. iOS crash fix - WebView User-Agent API\n4. build scripts improvements/fixes\n   1.  custom preprocessor define implementation v.2\n   2.  CI UWP nuget restore fix attempt\n5. packages update"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/5b449b3b294ab5672237115ca18ed7f5e8b68265", "message": "moved portable to subfolder AccountStore"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/46a061abf183e35a942b04077c20d4e1c66da564", "message": "System.Runtime.Extensions added to .NET Standard projects"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/afbd1f0a6f4d14c3cae5259b19c626810ed489e4", "message": "token revocation methods."}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/4d02e98f400730aba4dbe246bb3d031e34105465", "message": "Merge branch 'master' of https://github.com/xamarin/Xamarin.Auth"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/6e32af1e7ac4c23f58a814b8ee6a8ed0d01bfa16", "message": "project files with improved solution for Custom Preprocessor defines"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/89efc6225efe621eafa27a0b38ab86b6d63de35d", "message": "open issue - closing custom tabs"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/d3d51d3e03a35e7185b1c39a1a96bb330b376433", "message": "Merge branch 'master' of https://github.com/xamarin/Xamarin.Auth"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/892fb1ae1f2d2623c4466cca864dc1a7b7ba2347", "message": "ComibBook refactored sample"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/4d3175eb72ecd4b2e3995db2dc3419d49435e8ad", "message": "WebView iOS 8x crash sample"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/1a340ec7e6131c44d1ad864c076d897c9200d24d", "message": "AuthenticatorPage in dump in DEBUG mode crash fix"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/0646fb2c325057526ecb3af95547180558c7e3fc", "message": "System.Runtime.Serialization missing reference fix"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/b266b2395033e63f87c3e68518c1044a694f5d45", "message": "iOS 8.x WebViewConfiguration crash fixes"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/4da1f49933ebf6720b5662acc17fbe67a05fb973", "message": "CustomTabs fixes and improvements"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/be9b0c402ab0cc45bfdfbbb0b9892a452668bcdf", "message": "refactoring OAuth2 classes State, ResponseType, GrantType\nUWP Presenter namespaces fix for navigating back"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/0e4e425beed1523a90f2c2d04f14dd3c5e4ac070", "message": "oauth2-token-introspection.md added"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/7dcafd091069c820c6d6285341ba30f283f3cffe", "message": "readme-detailed.md update"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/03db5a234746fb9e184d0d04db1fa23c4be6730a", "message": "openid.md update"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/be3b7dff871e8a40a179740d7affda92feb169d9", "message": "oauth update"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/38606f12ebbbd4cd99ed5a94d31b648138f19f41", "message": "OAuth2 helper classes State, ResponseType, GrantType\nfor flexibility (algorithms for State string - JWT encoded)and easier maintenance."}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/f80076e20702d4b3afbb223522b89dfef123808a", "message": "Fix for github issue #237\nUWP, Desktop Back button not showing\nhttps://github.com/xamarin/Xamarin.Auth/issues/237"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/b4870c7823f03e0d3fa893d6e7e56a206e1c9cca", "message": "google and FB links added"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/b87f141537c633387872366a609ef0ddba655015", "message": "oauth.md comparison started"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/b65e8ec6b6c2687f00a875031726a9073d2db377", "message": "troubleshooting doc update"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c46c53dd9a3519a775df9f081fdc1484c0b5ec9e", "message": "class activation utilities"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/def51dc4f2cb66c53b2b5f68cbc475dcae01cb35", "message": "Merge branch 'master' of https://github.com/xamarin/Xamarin.Auth\n\n# Conflicts:\n#\tsource/Xamarin.Auth.XamarinIOS/PlatformSpecific/WebViewConfiguration.cs"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/db29c568bd0179f49906808e857a9b0f78d46dee", "message": "AZURE_MOBILE_SERVICES define for namespace fixed"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/94acaa342c05287897681160f85f39cfcd07728d", "message": "Fixes for WARNINGs"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/80fe110b6e0892fa3313b8b6bfef31ae14adf174", "message": ".NETStandard defines for removed types"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/5042a446163843ddc1b513d48a6755fdfb860162", "message": "System.TypeCode (Core.TypeCode) removed from NETStandard project to reduce warnings about conflicts"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c2451bf641db9ecea0da4d7851a561fb34e10016", "message": "gitlink reference removed"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/090b8a605fa52ee4c8b78c11d265027dc8c74fcb", "message": ".NET Standard fixes for JSON primitives that are used."}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/635fee83a3934ddce4713d454d47aa53af0795e4", "message": "UWP VS2015 changes nuget.props and nuget.targets"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c1785162419c6f50bc5d348bab5fef6ee968bc44", "message": "UWP builds OK\nVS2017 changes in <ProjectName>.nuget.targets an <ProjectName>.nuget.props"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/2a49b15644bd82af1475f23d79f2174c90d7958b", "message": "UWP builds fixed for VS2015"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/eacbeabf48c6e4180d18fc7740a6cd54ab663604", "message": "nuget props ??"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/86d5734b774a4f2c73c486fa51d38455a176c66f", "message": "UWP compile clean update\nafter updates everything was messed up (polite version)"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/2349dea0bb8de5c3e715bce63e3c821190da5a20", "message": "improved conditional referencing"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/d7e4718362f05d0bd7a319719875dba3b9ce638c", "message": "providers Traditional update\ndeep linking on Windows platforms"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/3d4dcd4900d0b343d7f14be240a8fc326e91012e", "message": "no traget frameworks specified - fix attempt"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/4ec1ab46706327ed00f436682a6bc9362d7c5072", "message": "uwp CI bot builds attempt for voodoo fix"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/f9b6379067fa40c223fc2484f844a3c2ba76fb37", "message": "win10 project.json voodoo attempt for CI servers"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/088e3bbeb7ece8386bb35230f4c894a40d0b4c54", "message": "fix for UWP CI builds\nUWP project.json with runtime item - \"win10\": { }"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/3680a0663b66347af4d900402e3a0f278f3bd1ff", "message": "define typos fixed"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/2b48f0631816336f1c64c48032ca4aad43740654", "message": "Cake.build Diagnostic output"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/4da4721be07c0c1859c5a4410feb1a6166a2ff81", "message": "Android fix attempt for CI servers with explicit ToolVersion"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/44c317890d2ded306c9ade4d50c7afb5ee94d856", "message": "cake.config comments and formatting added"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/496a93731d7fdc5f73ef0b7b0aa1f9c4a01b91fb", "message": "MsBuild 64b path fixes for Xamarin.Android errors on CI server"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/1e7e981bcf3cbb8f3022125b489764a8c666aa1b", "message": "cake.config with verification disabled"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/5056e66fc36c9efa9331201cdbea5dfabb809750", "message": "cake build version bumped back to 0.21.1\ncake.config added to disable assembly verification"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/26c1597bb132a25b453078696d67028c7ae582e7", "message": "cake version downgraded to 0.17"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/b20b7c4abbcc6ad3ff1e82a65b008b005ab16a84", "message": "moving references to test cake"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/6228bf169052756c659a79f27fa80ea679c7b8d3", "message": "cake version fix attempt"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/faa363a75ce8d7163607bf07bddc8db63d2e4d58", "message": "build cake fixes for VS2017 and Xamarin.IOS"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/9763730cb46a2312f56827a1b1482a73d8bded4a", "message": "badges nicer formatting"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/8a4b43eb0b6156a1df966269f11fdd0f3a7e12f8", "message": "readme badges"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/5aaa92eaf7a0bcd0ab7873c33ed9e313ab74a0fd", "message": "VS solutions split into VS2015 and VS2017 to make builds possible"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/f9041d4e5812b631e8cb15bd0ae9836eca1ed273", "message": ".NET Standard projects added"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/4b9b5f99f90cc4111bf935845643a1407adec8b9", "message": "namespace fix for Azure Mobile Services team"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/9e41fff0153b5f946f6b307f48e03241de9dad1f", "message": ".NET Standard fixes"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/156e2cd6d6e0c01b77c42c62a2d3af304ec1a12e", "message": "build.cake with .NET Standard 1.6 support and build on Windows and Mac"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/f0ca8e3ecf3e9cd3a8e8a336727fbb56fa3934a1", "message": "Merge branch 'master' of https://github.com/xamarin/Xamarin.Auth\n\n# Conflicts:\n#\tsource/Xamarin.Auth.LinkSource/PlatformSpecific/FileHelper.cs"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/51ff708b14a2125fbd2d0289e2ef1b7d31f8caa2", "message": "troubleshootinh docs - LaunchUrl - error more info"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/7cd6666985e5e0150262d68a930b06e52bc63762", "message": ".NET Standard support - defines"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/d3e55c43e1dcf146589b20e22458d1a7536e2ee8", "message": "cake with preprocessor defines"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/b4691f08cbf4ac3ab758accc261a9feee14e4194", "message": "AZURE_MOBILE_SERVICES preprocessor define for namespaces\n(used by Azure Mobile Services Client in their fork)"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/8233dff82f541c62594e296ff24d498c7c22e66c", "message": "more info on LaunchUrl issue"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/7e6c2d7df522f5e91279a8360210b9e3552b7c60", "message": "Merge branch 'master' of https://github.com/xamarin/Xamarin.Auth"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/7020a445bb11e3744d05516920c35b8824a02d60", "message": "CustomTabs closing implementation"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/d888025915dcab391a60b8463e913919c5c35d72", "message": "Merge branch 'master' of https://github.com/xamarin/Xamarin.Auth"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/a7344340ea34ed8595aa74549916deca187262cd", "message": "readme-detailed intro update"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/318cca2cd5c8a6afc05f91a197cc4ffe8fed9825", "message": "adb command added"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/f6eb38793bbb08106385ebdc9430a0387f672f40", "message": "troubleshooting"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/6a6b54b8af8adac1b785533fe599b6149260255c", "message": "Merge branch 'master' of https://github.com/xamarin/Xamarin.Auth"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/bc38be779e37520971232acce5ad4e644b5c9071", "message": "server side setup"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/ddbe29802274528fbb66a932ed8e5e5578c4422a", "message": "xamarin.auth troubleshooting doc"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/a551486ba60d528b6f1caa21e0a7169a287bc659", "message": "cake script with for loops for stress compiling"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/4b61a8bc3e003d832443a0c02795ea28e68683cb", "message": "25 samples integrated in ComicBook for testing"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/2786ebf2761522e3abebbbf8f92d8c32c6fefeec", "message": "openid doc added - user requests"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/d4733a8102944cb67e055b2fc03b32e4af65f52f", "message": "links update"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/10adb71ad706b434352b76387116e2302167c86e", "message": "OoenId IdentityServer data added"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/af7802715589545aca6abfaf40b8dbca16a6dc0e", "message": "roadmap OpenID providers added"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/dc4b934a2c27dfe49e936f367b6d8ee2a61fd4c2", "message": "nuget nuspecs for 1.5.0.4"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/076322583dfc35bcd7327a26823da2bb207aea13", "message": "Providers samples ListView instead of Buttons"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/7b918a81bd5d3d46d162f50e7fd35cb2d0dd5d27", "message": "UWP platform specific AccountStore"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c42c05aa087af910274be773683ecd0342477267", "message": "GetInitialUrlAsync preparations for Custom parameters\nrefactoring\nEvovle16 folder renamed to Presenters"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/65c5134ec2a2af767faf4f3b2ae5609aa1cb22d0", "message": "Folders restructurung for new samples"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/43e7fa806e32899796ea7af814b71033de9bec8a", "message": "Evolve16 ComicBook sample refactored"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/bb6222044818d9e1d4901526e7014f3458ce0ed2", "message": "Traditional/Standard Providers sample refactored"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/2264e0bd9fd8c157012b12bdc4023b5a133ed1ca", "message": "samples doc update"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/5db37bca56c5a93d74d4b9964fbb32120539e353", "message": "xamarin forms snippets"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/7dbd1ec81aa41587b15cb1e43acea7a6b0edbc7e", "message": "Xamarin.Forms snippets added paralled with Traditional/Standard"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/6bc183656872637c45b58a7d5014903a35ab2169", "message": "Android snippet fix"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/0a87c908f3a74b9b40c0c65d3a719a6876da8107", "message": "Portable snippet for conditional references added to csproj"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/7aaa09bf9ebcc5fc0a51960013c88c853efc36fa", "message": "refactoring/restructuring AccountStore for extraction\nAccountStore files moved to AccountStore folder (and CryptoAccountManager)\nPresenters folder added (old Evolve16 renamed)\nsome AccountStore related files from PlatformSpecific/ folder moved to AccountStore/ folder"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/1b0947122932603989440eed539aa70535ea15da", "message": "samples with \"smart\" reference snippets added"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/050e36132e2fd109fd8ddac8aa2eab5540e373c3", "message": "Merge branch 'master' of https://github.com/xamarin/Xamarin.Auth"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/2521f0dfd6bd948d03987520757b15f6c4d237a6", "message": "Merge branch 'master' of https://github.com/xamarin/Xamarin.Auth\n\n# Conflicts:\n#\tREADME.md"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/6c70b62f7687048119351736bb2453d2c17fc3ab", "message": "Merge pull request #190 from ytn3rd/master\n\nAdded two properties to allow a developer to specify when to call OnP\u2026"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/840d1c65e75aee405263d4aa84171663bb6a074b", "message": "Merge pull request #216 from K232/patch-1\n\nFixed 2 typing errors"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/2953f293f0f9489a5006a777f33f4586bc495bcf", "message": "table update"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/38ef0b0ecc4ab9af819a6a1cc2e69add419626ea", "message": "table formatting again"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/ddee7f6f4b24fde55096ecfa5811bc9eed41f6f8", "message": "Table formatting"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/81b557452c3b1800bafcbf6e7220b3f950df8ca6", "message": "table formatting fixed"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/8f6ad6ce328d00f74b2ba8041af1f31e22babbec", "message": "windows builds badge"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/ee140cb1560147652ad627dba7b80875402c42bb", "message": "SFSafariViewController links update"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/5773d45b506ccdb9e27c0dabb706628ec8a33eca", "message": "updated script with fixes for msbuild and parallel VS installations (vswhere used)"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/ae7acb5a5b5fd8f65fd0a2ae5e89cfcecc5e42ab", "message": "UWP nuget targets updated"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/d406cecb3acb9fccc61e560f82bce8ab8f05323d", "message": "iOS ceck for SafariViewController and WKWebView availabilities (iOS versions)"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/3a99b2b7ee97ada69b95c1bf02bdac430fa141b8", "message": "pdb generation in Release mode fix for Xamarin.iOS"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/22184f609441a7ee788dfc981cb3853796caee77", "message": "cake packages - cake pinned to 0.21.1"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/8910f39549f940c92015ab0e1e04192a80575b50", "message": "cake build script - working with parallel VS2015 and VS2017 installations"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/877f25089c567d1f6eb43768d4488af9fd4afd6c", "message": "cake build script updates"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/44555962510f38cf50e0b44b04afdd07c1449382", "message": "XAMARIN_AUTH_INTERNAL Windows Phone fixes"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/ac9318368b161515de7be830f57cca7ff438bbce", "message": "Merge branch 'master' of https://github.com/xamarin/Xamarin.Auth\n\n# Conflicts:\n#\tbuild.cake"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/677561ccee856d353e0b5d37a44b11333ae5051f", "message": "nuget-fixes traget removed (not needed anymore)"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/926b458af760eb15de576cbcd261dfd3606f639b", "message": "update\nformatting"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/e6cb38d492303e4512ad435514e61b4b7aa66329", "message": "Oauth notes update"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/9319a700d111fb0914a6cdba672d696240820c68", "message": "MacOSX nuget version fix refactored"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/23f8433324ce0147cb4bc53e58edb48a2ef54499", "message": "Azure AD B2C parameters"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/02e832cf60bd0ed206ab03650b437b2b287f3b46", "message": "Google OpenID parameters"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/7605aa22ec2bec0123dd94fd373e39350194cd26", "message": "reordering"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/078d00088320e7e8d1595aeada597c7226549ceb", "message": "Google Token and RefreshToken leg/step parameters"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/0bae4d803f9633ce71a36f551e01f6971f153a28", "message": "Azure Active Directory Token and Refresh Token legs params"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/a9be8e1261cb227a2d6bbd61a68ecba6f5e9df88", "message": "Azure Active Directory authorization parameters"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/f9636126c023fbaf176f0084f98e5f574b638343", "message": "unused files removed"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/292124f4ae4516304d511ef115199d6557ed5cfd", "message": "roadmap"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/9004797da3bbcea1f95616b9706be5d88e7758ad", "message": "roadmap added"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c5a2d5ec2a94eb611523b2fc25431480c9a0fcbb", "message": "test html for testing custom scheme loading - app linking / deep linking"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/0a73fd8e67f1f9631e106df2226a95fae487ca5d", "message": "Azure Mobile Services Client fixes manually added\nmostly XAMARIN_AUTH_INTERNAL\nhttps://github.com/xamarin/Xamarin.Auth/compare/master...MatkovIvan:azms-changes"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/a13fc96b3f933b0db2870de944fca65d77624bb9", "message": "Oauth Providers as Shared Library and PCL\nrestructuring project/folders\n(migration for component packaging)"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c1d9cf8bbe12290914930df783e16288edf21c6c", "message": "doc Android CustomTabs"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/6f4a5f1f4d832d54c232e52643d099d7eb47f664", "message": "doc SafariViewController details"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/164b5e1f76dba1ecd6601f4e1eb72f4b3c42cef3", "message": "1.5.0.3 nuspec with UserAgent iOS fixes"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/fdec998d4752c9b705c81b8c8c6ff97913b95d8c", "message": "WebView UserAgent for iOS"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/e20d5948f5a0693e4f3e27190df169fd5785c72a", "message": "1.5.0.2 nuspecs"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/b5e110ff2b883f02cbe2e1f9ebc33347d000ace5", "message": "CustomTabs IsUsingPrefetch and IsUsingWarmUp\nCustomTabs ActivityFlags\nWebView User-Agent implementation"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/6c6cb64e1b1d73d23a4555f989dca4cc4ff8d326", "message": "CustomTabs API"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/21cfde7ef498bda2bf12269d022df3e77c0130a3", "message": "Extensions possible fix for resoources issue (Default Namespace)"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/6ff10beae4f5343ef681f52335c729a1befb4af1", "message": "1.5.0.1\nminor Custom Renderers fixes"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/689e74d9f24f2f3c3f7b4093857c84838b73eacd", "message": "samples updates"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/69998023d1e72314b712252979f9a82ff0fda099", "message": "stale file removal"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/41eead6e443ebe70219f7038f43b4314a1a6eaf2", "message": "packages update\nminor fixes for Custom Renderers"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/74a2b76e572af2d2e27eacc860a54dc562342579", "message": "cake build update"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/49fbeb2be33c11ff24134a69e964b785feb92f4b", "message": "ios 10 simlator keychain error doc"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/dd37f0cb5ddf039f3d84cba82a992370488975cd", "message": "Facebook update"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/2659e9da9c0735b83370fccb64c2534cb44ac7cb", "message": "redundant sample projects removed"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/6856e26a81a831d6fd800d2b17892f3c36790205", "message": "component packaging (Sample Data issue still)"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/d0a47dbb1d47b20c5a9b54fa4cc184cda1eb2e38", "message": "docs update (FB with custom schemes)"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/aba310e08b35dac9920232d429ebfdbbbc2e748e", "message": "oauth links for readers."}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/4b9cdc4d804aedee3ea7e840d66b413d6b3e5907", "message": "embedded webviews v native ui docs"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/411b87bc7459846bc2021e3ed9e5f4b086fc18bf", "message": "Xamarin.Auth.XamarinForms.nuspec fix"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/49ab7ceac7d1d608d861de87fadac00d9f8290bc", "message": "build.*scripts for Cake added"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/928c7a4e3a9908ac16372d8a6a2c839ec5135346", "message": "Wiki submodule removed from master"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c584e5395f598b98b82bd22cfe079f135b0ffeda", "message": "1.5.0 release"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/bd471c57bd8f52d533d45fd8b0c2420dff519141", "message": "docs updates"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/85d6efc313ba6d22832c133bf3780cf2edde6032", "message": "docs added to the root GettingStarted.md, Details.md and License.md\nremoved old xml docs"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/2cf62dce769b6eb0995ddae5861d3f69f03c7198", "message": "Merge branch 'portable-bait-and-switch'"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/4ff762237bd13420f20c9fcd56a9e890fd09f690", "message": "sample for CustomTab customization"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/2b62e402e0b0b4687adf07a50587c2273b1bd5e6", "message": "uwp deep linking notes"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/b0a17b0fe1d891a4ead4813ec259a52400e2f505", "message": "1.5.0-alpha-16 CustomTabs customization API"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c03ce44b9ed389818beb62fd78175abfa31a57d6", "message": "CustomTabsConfiguration primitive API initial version"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/e75c78d307dbaabceb02effc3feddb1e836e7f75", "message": "1.5.0 release"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/e2f1e354c1f97f04b9ed1d970dff7005560c3e3a", "message": "docs update"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/e33eb221db5038c79c051e7e9a04130adc1d3f28", "message": "tabs fixes"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/63e48f3691004124279e2565f36609a351f9105b", "message": "whitespace cleanup"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/664e134e7ef4a8ccd485a6127b36aceb7353c43d", "message": "repo root readme = GettingStarted"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/10b0dc23754e0bc3eccf4432b6a3dfbc71720a8f", "message": "sample comments"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/3d6c424e6707b1ab3161895dfe5adc4348452178", "message": "GettingStarted update"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/140eefba790fbd16e169161c6379b2b68db6adbb", "message": "docs update"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/4dc2fcc990aedbbe2af507d8b9ac032a4d085f6e", "message": "docs readme.md in the root"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/d28485f4d63a827f75c15b4e02efed4111dcaf0d", "message": "docs restructuring"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/b63c8bd0f859cdd757a7e4320cb263d14e0c1c0b", "message": "docs restructuring"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/9ad4b567fcd9f06a7e9797ced1b7852bf4b7104b", "message": "IsUsingNative setter fix"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/fe4afb14395b61384b6f722e13e9d9878cd86318", "message": "newlines??\nVisual Studio or .editorconfig"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/0fd211e4421864ef358c7adb84961ec708f4033a", "message": "New Lines?"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/88f4a125cbdad8251045e2438234fc3edd08e43d", "message": "1.5.0 nuget bump\nDetails"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/d8e42d5739a12ea24e894eb6e6399d7b108263e0", "message": "jenkins status"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/8bc4b793f244a9e8f1c61f76ce7be07c334260b7", "message": "1.5.0 docs initial commit\nremoved old versions"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/54e6f1580ba502470ffb568dede09682c2b5c73e", "message": "Providers sample code comments"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/a645292ea91127f0c57af52ed33fd2426cc6b315", "message": "Xamarin.Forms-like namespaces"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/02798074ae4078cd3ba990873d1db1b2aa9495a4", "message": "nuget 1.5.0-alpha-14 version bump\nIsUSinfNativeUI setter removed\nXamarin.Forms initializers for WinRT and WInPhone"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/dc2248d7d28f5adaa7eb74717c4a83c4c335ffa1", "message": "IsUsingNativeUI setter removed - some users were confused"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/e2be8dcd1223e05b37849265270ae88ec2c17bab", "message": "ComicBook Sample - Windows fix in PCL\npackages updates"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/10e44f1647e2b1068a1952675687a484172139a5", "message": "cake fixes for GitLink on macOSX"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/3ac4be5648dfbc380b472435e0c9b5dd826eb7d0", "message": "samples update"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/5be4aa6d2b277f6d2c87da5e9e19d52551bb5a58", "message": "old renderers cleanup\nnew renderers added\npresenters for windows"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c64791b2a6c2c28b953cd174cb2e1382edecb805", "message": "Samples project refs ComicBook"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/eff88db3323a16aedd083d0a5198243b560c7f05", "message": "gitlink attempt 1.5.0-alpha-13"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/9cafa48aa640f9eb23a9f1198af6c9f5732038c1", "message": "Evolve16Labs nuget refs samples with new Windows platforms"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/9922d64bd3dc4d382a999c49f0f2029534fe2931", "message": "ComicBook WIndows samples added"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/93cf36695670d1634b37b9fa14d33d50c79a431a", "message": "gitlink attempts in Cake"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/f7517bde4b107ade02907e555b6bdf8cd576d540", "message": "package consolidation"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/91d73fa4309abfa8f5b523bf877bd06dab18ca00", "message": "Windows Phone 8 SL AccountStore tests, package updates"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/44dffc5cabc11d1229de8fa6a1ee86e68a0c57ab", "message": "gitlink doc"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/b19d347447bd39f03e40663e0fae9ae0c4b6021c", "message": "samples fixes"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/37ec9ccecac7a318b9be0be84cb9541b8435d6f3", "message": "sources fixes UWP (and other Windows platforms) Button"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/5380a7be1312a2d78ecb868f90f48de9443ed662", "message": "build cake - gitlink attempt"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/909939b0299bd00d061e398c3c3a6a3ddf46c0bc", "message": "github templates added - Issue and PR template"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/5af8bf92c6c863f7c58f621c15c23f043fb99294", "message": "Testing updates"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/fbe55211d604a951eec9d83b00117ec33da574d1", "message": "ios 10 simulator bug fix for the sample with Entitlements.plist"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/1af84cb41fe6817e1e17b980d50e0e86af996dd5", "message": "1.5.0-alpha-12 nuspec with symbols, OAuth1 fixes, prepared Presenters and Renderers"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/2e212e7de9eaaafee35975eef334fab36e2361fe", "message": "Renderers Files added to projects"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/e6cceb405ad16f8c318fc7892e19387ceb5a40e0", "message": "UIWebViewDelegate fixes for OAuth1 (is not WebRedirectAuthenticator, but only WebAuthenticator)"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c66c06df558067b5fd75136428dd4073b02787b0", "message": "Native Activity fix for release"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/ffb3b0fef62e1c744d296d1071f8b83de9d24e0c", "message": "Windows.* Presenters added to project files"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/09a627507d221bd4266ebdd9afa74acdbdbc1c24", "message": "OAuth1 fixes"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/10312121514b24e51e488f81bf7ffdc8c2d1d5f8", "message": "Merge branch 'portable-bait-and-switch' of https://github.com/xamarin/Xamarin.Auth into portable-bait-and-switch"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/d48f99974a6e7e56f3f4a14c623d80f051dcbb7a", "message": "Windows Presenters implementation started"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/953b908da2be42ea8b43d5e1cafb0aafbb760186", "message": "Editorconfig added"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/65491d8d8d6af3881c87e2492c4d041fd961b982", "message": "Twitter sample fixes"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/f7fbf68d15df3504cb07683f3843c1517d114971", "message": "Merge pull request #174 from sgade/portable-bait-and-switch\n\nFixed always showing error message alert regardless of setting."}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/21a96d5d25ca093a4c2680203006cc5a7685a10c", "message": "samples nuget refs"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/2afda5800ec7f7971c0d598307f9a3f07db2aac7", "message": "samples project refs NativeUI"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/0c6e020088bc1af79a01db73130884bd33fe7c79", "message": "samples update Traditional/Standard project refs"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/a6c30c0929a1e1c4009341db13852d2582ccd0ff", "message": "1.5.0-alpha-11"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/1de707c885a1fe5e8b622dfff6325a792bf0c71c", "message": "Closing CustomTabs code"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/8f4545d8a3959091fdc0510c449b0a39aadb50b6", "message": "Xamarin.Forms Windows projects added"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/9be8ae0ecd80b0c6c538a808fcc4347813bb043b", "message": "Xamarin.Forms Dependency Service for iOS IEmbeddedWebViewConfiguration.cs"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/97497a918dc201a39d9cdde0628964243f503dd2", "message": "Merge branch 'portable-bait-and-switch' of https://github.com/xamarin/Xamarin.Auth into portable-bait-and-switch"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/ee5766d414bf3688dbfb0c7837b74b6526ceaf54", "message": "Xamarin.Forms bait and switch - fixes for [accidental?] removal of some files."}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c40041888cbff4c50ff428beb55f57068291a361", "message": "Merge pull request #166 from JakubHolovsky/xamarin/portable-bait-and-switch\n\nWindowManagerBadTokenException"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/90db530d713cc652e03b79da83718e65003966c0", "message": "1.5.0-alpha-10\nDebug output for UIWebView and WKWebView\nDependency Service for WebView switching on iOS"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/02ee628074bfc14631293bd7166dd28f340ada86", "message": "packages update"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/a9e02f806a0a4b47ddc18d4d6b0140c8f4746f9d", "message": "project samples updates"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/b2cd2778b13daf5bd49363e3a347656e3855e1fb", "message": "docs restructuring"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/5bbfa82b7cd064a8f5becd4ba0d209860942e939", "message": "Sample cleanup and custom scheme update"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/fa9e744ccc7048a35afc163de96b5d9d5b70ecbf", "message": "1.5.0-alpha-09 CustomTabs customizations turned off"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/9e5117f6397bffd86ccfc9d7d9124f361e6d60fd", "message": "1.5.0-alpha-09\nCustomTabs customization turned off"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/ccc79731e6d4200c4d40344e2538dbf03a18849e", "message": "Traditional Standard samples update"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/8f7aaa42aaba44cb3a5b268c5dee4d73210dfcb3", "message": "1.5.0-alpha-08\nGoogle Authorization Code Grant w/o ClientSecret fix!"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/dd1ef81d71d03109f5b97431382c32dd6c061a9f", "message": "google extended tests for Native UI"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/087633eaca801e3b3a07f0c1ae04c39fc892ac1a", "message": "1.5.0-alpha-07\nXamarin.Forms - PreserveAttribute\nAndroid resources cleanup\niOS - WebRedirectAuthenticatorCast in parsing custom URLs"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/8506bac8c6568fb10d2861c0fba7dbd3002d68cb", "message": "UIWebDelegate fixes foWebRedirectAuthenticator cast\ngithub issue #164\nSystem.InvalidCastException: Specified cast is not valid. at Xamarin.Auth.WebAuthenticatorController+UIWebViewDelegate.ShouldStartLoad\nhttps://github.com/xamarin/Xamarin.Auth/issues/164"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/b972ed4e1faa6c68b43df57c6b3d5758694301ee", "message": "Android duplicate resource files cleaned packages update"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/8b8a020fb7e2265c885fedd405e9febb4d1e78ae", "message": "PreserveAttribute for Xamarin.Forms (cannot resolve and type loading)"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/0c6d9173c7225a380e6d7be5922f7f5260c823be", "message": "1.5.0-alpha-06\nXamarin.Auth.XamarinForms dependency on Xamarin.Auth 1.4.1 (1.3.x ctor missing isUsingNativeUI)"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/03b57f405d9e4e898a30500fe30d07d1f2644681", "message": "less restrictive Xamarin.Auth dependency for Xamarin.Forms"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/0ec5c2d3832204982420582f51dcbb7a8a14b0e9", "message": "Presenters (Dependency Service/Injection) implementation sample\nEvolve16 Labs samples refactored"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c7a4aeb2661b90510767162e5bad84b14fcde539", "message": "AssemblyInfo.cs update to 1.5.0.0"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/d6b50773d92c905d59ca341ffa0eb41d5e373966", "message": "1.5.0-alpha-04 version bump\nCustomTabs >=23.3.0 weaker dependency"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/55c421194418710d36f025ddee26c0ac13d1bd5b", "message": "nuspec 1.5.0-alpha-03 Xamarin.Forms packages versions clean up"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/99df98f3d550b6a50dd6350dc3ad40b3f07f2c49", "message": "cake update nuget fix"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/6f93a7d4f2cc7fd6eb0f5beb3ef97ce53435c55a", "message": "packages update[s] for Xamarin.Forms"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/4b83c9b2e2ca64ee6b506ddadc1143ffe265fb1e", "message": "packages downgrade to 23.3.0 because of Xamarin.Forms"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/ee6a25a7e34272690fe632e31154fac7bbc79c8f", "message": "Providers sample with nuget references"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/22c854556de8627dc3d82420572caa9e896707d1", "message": "code formatting tabs to spaces"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/156943760", "body": "Hi Jimmy\n\nDo you have sample (minimal) sample for this pull request, please?\n\nthanks\n\nMel\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/156943760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/157067692", "body": "Hey Jimmy\n\nDo not worry about iOS9. I have already changed info.plist for all samples. I just need to have sample for refresh token.\n\nregards\n\nMel\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/157067692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/228108865", "body": "@roycornelissen The PR was merged into portable-bait-and-switch branch a month ago, but I was struggling with new samples and other issues.\n\nThe code:\nhttps://github.com/xamarin/Xamarin.Auth/blob/portable-bait-and-switch/source/Xamarin.Auth.XamarinAndroid/PlatformSpecific/AndroidAccountStore.cs\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/228108865/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/230997186", "body": "We have problems with our CI bots, the 1.3.1-alpha release is matter of hours.\n\nThe only thing that might be missing is UWP, it is already implemented, but cake build on CI bot is crashing. Update might help.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/230997186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/231976301", "body": "Jimmy's code was added while ago, but during the work on the Evolve16 labs it was decided to be extracted into separate nuget Xamarin.Auth.Extensions which will depend on Xamarin.Auth. This decision was made based on discussion that Refresh Token requesting is not part of the standard and for some users it may raise security issues.\n\nThe code is here:\nhttps://github.com/xamarin/Xamarin.Auth/tree/portable-bait-and-switch/source/Extensions\n\nJimmy's method:\nhttps://github.com/xamarin/Xamarin.Auth/blob/portable-bait-and-switch/source/Extensions/Xamarin.Auth.Extensions.LinkSource/OAuth2AuthenticatorExtensions.cs\n\nNuget nuspec:\nhttps://github.com/xamarin/Xamarin.Auth/blob/portable-bait-and-switch/nuget/Xamarin.Auth.Extensions.nuspec\n\nMissing:\n-   sample (minimal) for testing\n-   Windows platforms (IN PROGRESS)\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/231976301/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239618548", "body": "Investigating.\n\nSeems that nuget packaging on CI bot which is Mac has issues with '\\' and '/'. Thanks for the screenshot that helped us to track the '\\' issue. I will change nuspec ASAP and publish 1.3.1-alpha-02 and will ask you kindly to report if that fixes the issue.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239618548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239620526", "body": "1.3.1-alpha-02 pushed/published few secs ago\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239620526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239764594", "body": "From previous comment I cannot deduce if the nuget is working or not? Can it be loaded?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239764594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239764684", "body": "From issue #122 seems like nuget is loaded:\n\nhttps://github.com/xamarin/Xamarin.Auth/issues/122\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239764684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239781304", "body": "alpha-03 published \nPlease try it out and see if this version fixes the issue.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239781304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239781584", "body": "Can you test if 1.3.1-alpha-03 fixes this problem. \n\nMaybe XS caches the dll somewhere. We are investigating this one.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239781584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239916558", "body": "Can you check 1.3.1 alpha-03 please and confirm if it is solved, so this issue can be closed.\n\nthanks\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239916558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/240327356", "body": "Adding this dependency in 1.3.1.1 right now.\n\n1.3.2-alpha-01 with some fixes for older bugs will be published prior to 1.3.1.1 \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/240327356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/240345190", "body": "1.3.1.1 published. Test it please and reportif issue persists.\n\nIf everything is OK. I'll kindly ask you to close thid issue.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/240345190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/240372172", "body": "@lirkki No need to thank me. It is my duty to fix it ASAP.\n\nOK. I did not specify dependency version in nuspec, so this is a bit odd. We'll check if nuget on Mac (and packaging) causes problems (again).\n\nI did use 2.x\n\nhttps://github.com/xamarin/Xamarin.Auth/blob/portable-bait-and-switch/source/Xamarin.Auth.XamarinAndroid/packages.config#L7\n\nAnd there is another odd thing - only Xamarin.Android was influenced by this problem (Xamarin.University team reported)\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/240372172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/241247532", "body": "@adamhewitt627 Can you test 1.3.1.1 please and let me know if it was fixed.\n\n@lirkki Can this issue be closed in your case?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/241247532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/241326891", "body": "Can you try 1.3.2-alpha-01 nuget please and let me know if the fix in there solves this issue.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/241326891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/241690242", "body": "@adamhewitt627 No problems at all for confirmation.\n\nRegarding update: seems like Xamarin10 (unified) support is not in that PCL Profile. Can I ask why are you using 2.0.4.14103?\nFrom this one the latest version is 2.0.147?? I'm a bit confused.\n\nhttps://www.nuget.org/packages/pclcrypto\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/241690242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/241690334", "body": "@lirkki Is this issue solved for Android?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/241690334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/242904293", "body": "@adamhewitt627 Is this issue solved in your case?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/242904293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/242940387", "body": "Don't close it yet please.\n\nDo you have this old sample? I'd like to add it to the samples.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/242940387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/243095335", "body": "@hvaughan3 \nI'm confused, because I tried to reproduce this problem and cannot, because I do not need to update PCLCrypto package or any other (after iOS app creation). \n\nThere is no version constraint on nuget package dependency:\n\nhttps://github.com/xamarin/Xamarin.Auth/blob/portable-bait-and-switch/nuget/Xamarin.Auth.nuspec#L83\n\nSo, nuget should grab the latest version and this should be:\n\nhttps://www.nuget.org/packages/PCLCrypto\nhttps://www.nuget.org/packages/PCLCrypto/2.0.147\n\nAnd this is in Xamarin.Auth iOS too:\n\nhttps://github.com/xamarin/Xamarin.Auth/blob/portable-bait-and-switch/source/Xamarin.Auth.XamarinIOS/packages.config#L7\n\nThis seems like nuget problem. I currently work on using this Xamarin.Auth version in Xamarin.Social and some other packages/components and will try to reproduce this problem - if I can\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/243095335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/253568288", "body": "@jimnorth55 The Component store version does not match, because samples became more complex and packaging is not trivial. We are working on that.\nCurrent version is on nuget\nhttp://www.nuget.org/packages/Xamarin.Auth/1.3.1.1\n\nThe reason that it has not been merged to master is simple - a lot changed (Windows platforms mostly) and we need more time for testing.\n\n@mstrong Seems that there is a bug in iOS10 simulator.\n\nFrom hockeyapp team:\n\nhttps://www.hockeyapp.net/blog/2016/09/13/hockeysdk-ios-4-1-1-macos-tvos-4-1-0.html\nhttps://support.hockeyapp.net/discussions/problems/63710-the-authentication-token-could-not-be-stored-due-to-a-keychain-error\n\nSeems like firebase is hit by the same problem:\nhttps://firebase.googleblog.com/2016/08/ios-10-xcode-8-and-swift-3.html\nhttp://stackoverflow.com/questions/38456471/secitemadd-always-returns-error-34018-in-xcode-8-in-ios-10-simulator\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/253568288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/253854706", "body": "@tbenum @sushihangover\n\nThe cause is CryptoPCL package dependency Validation and we are trying to find a fix. Probably add Validation dependency in Xamarin.Auth package. \nXamarin.Auth nuspec does not specify CryptoPCL version at all, so the latest version should be installed.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/253854706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/259461448", "body": "@joseprl89 \n\n> \"security hole looked obvious and I checked issues\"\n\nTrue. Initial code was written with security bug. It was fixed in March/April and published as nuget.\n\n> \"release according to the Github releases tab is 1.2.2.\"\n\nOne of the nuget.org problem is that there is no verification process, so anybody can submit Xamarin.Auth package. The version 1.2.2 is not listed here:\nhttps://www.nuget.org/packages/Xamarin.Auth\nVersion 1.2.2 was taken out of component from component store and submitted here for those that do not need samples and docs. It is not supported.\n\n> Master branch is not up to date.\n\nTrue.\n\n> Windows test branch being also years old.\n\nTrue. This was experimental Windows Phone branch. In the meantime several Windows Platforms have been added, even UWP. The problem is that the whole publishing goes through CI servers and there were issues with UWP builds. Additionally merging hardware with Microsoft added some delay into the process.\n\n> A non obvious branch contains now all the development and is somewhat up to date.\n\nTrue. It is obvious as windows-phone-experimental. We are still working on it. If you clone/checkout those you will see a lot of changes. For a lot of bugfixes we never got feedback.\n\n> there's still the password, but I believe it is only used to migrate from the old password to the new one old clients. Is that the case?\n\nExactly. Yes there are some bugs in the code and we try to maintain backward compatibility.\n\n> Close the issue as resolved if it is.\n\nThere is 2 approaches: close-n-dont-care or leave-it-open-until-someone-confirms-it-is-solved.\nI prefer 2nd approach. I did not receive any notification that the fix fixes the issue. Believe me I would be more than happy to close it.\n\n> \"found the version 1.3.1.1 in Nuget, which I assume is newer than 1.3.1-alpha\"\n\nAccording to semantic versioning used by nuget 1.3.1-\\* comes before 1.3.1 and thus 1.3.1.1.\nCheck the nuget list please. (Correct list, correct package).\n\n> Bring Master up to date containing the last stable release.\n\nWe are working on it.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/259461448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/267907888", "body": "@bholmes @jamesmontemagno \r\nSeems OK. I did minimal tests.\r\nMerging", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/267907888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "bholmes": {"issues": [], "commits": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/7d7f6f83649f9515882138b44f3c5b5a0e80fb93", "message": "Update Cake script to use string.Format\n\nThe new C# feature is not available on the Windows bot yet."}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/a894290feb7fe418c35cf674c5e8f24624459942", "message": "Updates to Cake scripts to output build bot info\n\nThe Environment Variables as well as some installed tools version info\nwill be in the build output."}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/3c8fd509733308af75e95246e509b10a6c54fc7b", "message": "Adding my review of the Getting Started Guide."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/267797573", "body": "I think this makes sense now.  After a quick chat on Slack.  @moljac can you look into this?", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/267797573/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "K232": {"issues": [], "commits": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/72e4109069c9a0ec0043e18e789011385f28b0bc", "message": "Fixed 2 typing errors"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ytn3rd": {"issues": [], "commits": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/e83c68602150de9cca65382766271b695f69b07a", "message": "Added two properties to allow a developer to specify when to call OnPageEncountered"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/248786596", "body": "@mstrong64 , your answer fixed it for me. Our debug builds on our new Xamarin.Forms app was missing the Entitlements.plist\n\nEDIT: \n@jimnorth55 , I think the code updates are committed in their bait and switch branch, not in the master branch.\nhttps://github.com/xamarin/Xamarin.Auth/tree/portable-bait-and-switch\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/248786596/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 1, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sgade": {"issues": [], "commits": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/90726781e1ad3c3f4b90c80c50cb3b586d134503", "message": "Fixed always showing error message regardless of setting."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Pandalink": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/260", "title": "Make iOS Native-UI http redirect_uri warning conditional", "body": "Warning for Redirect URL containing http only useful where a redirect_uri exists (such as OAuth2). OAuth1 implementations currently crash when loading the native UI as they do not have a redirect_uri key in the query_parts dictionary, but otherwise work fine if this warning flow is skipped.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dlemstra": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/249", "title": "Added option to use a bearer token instead of query string parameters in OAuth2Request", "body": "# Xamarin.Auth Pull Request\r\n\r\nFixes #61.\r\n\r\n### Checklist\r\n\r\n- [ ] I have included examples or tests\r\n- [ ] I have updated the change log\r\n- [ ] I am listed in the CONTRIBUTORS file\r\n- [x] I have cleaned up the commit history (use rebase and squash)\r\n\r\n### Changes proposed in this pull request:\r\n\r\n- Added option to use a bearer token instead of query string parameters in the OAuth2Request, for more details see #61.\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mattleibow": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/192", "title": "Updated the projects to use shared projects instead of file linking", "body": "Instead of using file linking, which is error prone, use a single shared project for each group.", "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/180", "title": "Refactor Project Files", "body": "This PR has 2 main aims:\r\n\r\n 1. Replace all the linked files with a single Shared Project\r\n 2. Collapse the Windows projects into the minimal required.\r\n\r\n## 1. Shared Projects\r\nSwitching to Shared Projects reduces the overhead of managing the individual file links. Also, it removes the need for the \"unused\" LinkSource class library.\r\n\r\n## 2. Windows Projects\r\nCollapsing the Windows projects into 3 projects reduces overhead. Previously, there were quite a few (10 for just the core source). This has been reduced to just 3 for the core source:\r\n\r\n 1. Windows Phone 8.x (Silverlight)\r\n 2. Windows 8.1 (Phone & Store)\r\n 3. Windows 10\r\n\r\nFor the Xamarin.Forms projects, there is now just 4:\r\n\r\n 1. Windows Phone 8.x (Silverlight)\r\n 2. Windows 8.1 (Phone)\r\n 3. Windows 8.1 (Store)\r\n 4. Windows 10\r\n\r\nIn addition to the platform projects, the Extensions project is now just the single PCL.\r\n\r\nFinally, as a result of shared projects, I was able to remove a few files that had the same code by using them in the Shared Project. Most notably were the platform specific code for Windows.\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MrXemiu": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/145", "title": "Updates to OAuth2Request regarding alternative values for the access token's parameter name", "body": "\u2026f the optional argument 'accessTokenParameterName';\r\n\r\nUpdated OAuth2Request.GetAuthorizationHeader() to accept an optional argument 'accessTokenParameterName' to create auth headers from non-standard access token value names.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "AlecDTucker": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/94", "title": "Marshalled NavigationService.GoBack to UI Thread", "body": "Added code to marshal the NavigationService.GoBack call to the UI thread\nto avoid an invalid cross thread access exception when using OAuth1 on\nWindows Phone\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "anthonyresq": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/93", "title": "wp8 silverlight implementation - with openid client", "body": "the current experimental-winphone branch doesn't easily allow for a cross platform solution.\n\nI've taken most of the code from it, but change the GetUI to return a user control. This way a ViewRenderer can SetNativeControl to the returned UserControl in the windows phone renderer.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nzaugg": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/91", "title": "OAuth2Authenticator changes to work with joind.in OAuth", "body": "Joind.in OAuth implimentation is somewhat non-standard. For example, they require a URL parameter of \"api_key\" and send the access code back on the URL. These changes were required to work with this API, but they do not break any other previously working sites.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "YoupHulsebos": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/88", "title": "Added IsAuthenticated check", "body": "Added ability to check if there already is a authenticated user when the\nauthentication resumes.\nThis enables scenario's where multiple applications use the same\naccounts (and login screen). Now the login screen can be cancelt if a\ndifferent application already signed in.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ddobrev": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/84", "title": "Replaced catching FileNotFoundException with a check", "body": "", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/189329801", "body": "Is there a problem with this pull? Checking a file for existence is much faster than handling an exception.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/189329801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "srgb": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/82", "title": "Some OAuth2 providers do not work with the redirect_uri being sent", "body": "The OAuth2 redirect_uri is an optional parameter - see https://tools.ietf.org/html/rfc6749#section-4.1.1\nI have added a new SendRedirectUrl property (defaulting to true for compatibility) that allows turning off   sending the redirect_uri parameter in the authorization request. The reason for this is that I am trying to integrate with a provider that returns 400 if this parameter is supplied as they mandate that the only URI used is the oine set in their developer dashboard.\nObviously naming of the property is subjective so could be changed, but hopefully you can see what I'm trying to achieve.\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/68626651", "body": "Sorry, I now realise the source is for 8.6, I've installed from the alpha channel and have it building now.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/68626651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "braneworks": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/80", "title": "Changed SecAccessible.WhenUnLocked to AfterFirstUnLocked", "body": "Change allows for keychain access when the screen is locked (needed for ibeacons if you are also accessing the keychain for use auth, etc)\n(this is recommended method by Apple)\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jbogard": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/79", "title": "Adding method to request a refresh token", "body": "Closes #47. You still typically need to subclass and override GetInitialUrlAsync:\n\n```\npublic override Task<Uri> GetInitialUrlAsync()\n{\n    string uriString = string.Format(\n        \"{0}?client_id={1}&redirect_uri={2}&response_type={3}&scope={4}&state={5}&access_type=offline&approval_prompt=force\",\n        this.AuthorizeUrl.AbsoluteUri,\n        Uri.EscapeDataString(this.ClientId),\n        Uri.EscapeDataString(this.RedirectUrl.AbsoluteUri),\n        this.AccessTokenUrl == null ? \"token\" : \"code\",\n        Uri.EscapeDataString(this.Scope),\n        Uri.EscapeDataString(this.RequestState));\n    var url = new Uri(uriString);\n\n    return Task.FromResult(url);\n}\n```\n\nBut I found that method varied per OAuth provider a bit, and I still want other changes so I didn't bother messing with the URI.\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/57560365", "body": "We've implemented this in a local fork, is that something worth looking at?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/57560365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/62623846", "body": "Just created a PR instead, it's the Right Thing (tm)\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/62623846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/157039162", "body": "Well, I did, but now it's broken because of #95. I'll see if I can't get a minimum example.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/157039162/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/242765297", "body": "Anything I need to do on my side, or should I close this?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/242765297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/245940391", "body": "Nah, this was from an internal app. Just trying to get some time to build a\nsample :)\n\nOn Tue, Sep 6, 2016 at 2:08 AM, Erlend Angelsen notifications@github.com\nwrote:\n\n> @jbogard https://github.com/jbogard: Do you have the sample laying\n> around somewhere?\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/xamarin/Xamarin.Auth/pull/79#issuecomment-244867288,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AAGYMkVbN0yPRCdUsMWeBAKi-OLvfzKuks5qnRFkgaJpZM4C5zds\n> .\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/245940391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/267990143", "body": "I finally have some time this week for a usage sample, hooray!\n\nOn Mon, Dec 19, 2016 at 5:01 AM, Vinicius C\u00e2ndido <notifications@github.com>\nwrote:\n\n> Hi @jbogard <https://github.com/jbogard> @moljac\n> <https://github.com/moljac> ! How have going this implementation? Could\n> please give a usage sample?\n> Thanks!\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/xamarin/Xamarin.Auth/pull/79#issuecomment-267937700>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAGYMomU9x1ZqEp4tHZydx7b9hAvbhwZks5rJmP2gaJpZM4C5zds>\n> .\n>\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/267990143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kevbowl": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/78", "title": "winphone + enhancements", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "KrisVandermotten": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/76", "title": "bug fix in SslCertificateEqualityComparer", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "saramgsilva": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/64", "title": "Sample: Using Xamarin.Auth.OAuth2Authenticator with async/await", "body": "The Xamarin.Auth don\u00b4t allow to authenticate using async/await, a feature that is fundamental in C# apps, this pull request add a sample for Xamarin.Android and Xamarin.IOS that uses async/await solution.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hardye": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/63", "title": "Fix : Android password field now hides the user input in FormAuthenticatorActivity", "body": "In Android, when using fields configured with type `FormAuthenticatorFieldType.Password` in a `FormAuthenticatorActivity`, they display their values just like regular text fields. This pull request fixes the issue and gets password fields to hide their input values as expected.\n\nSubmitted under an [Apache 2.0 license](http://www.apache.org/licenses/LICENSE-2.0.html).\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jsauve": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/62", "title": "Add new property to disable the escaping of scope parameter.", "body": "By default, the OAuth2Authenticator escapes the scope parameter. When multiple scopes are provided (example: \"basic+comments+relationships+likes\"), some OAuth2 providers (such as Instagram) return an HTTP 400 BAD REQUEST on authentication. This is because the encoding of the \"+\" character to \"%2B\" is not accepted by some OAuth2 providers (such as Instagram). This commit adds a property named DoNotEscapeScope that can be set to true to circumvent the issue.\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/40934776", "body": "Good point. Property is better. Thanks for considering my request.\nOn Apr 21, 2014 8:14 AM, \"Eric Maupin\" notifications@github.com wrote:\n\n> Adding the parameter where you have is a breaking change for anyone who\n> supplied getUsernameAsync. We should move the param to the end or make it\n> a property. I'm thinking it should become a property instead, if we have to\n> add more toggles like this in the future, the ctor is going to become\n> polluted very fast.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/xamarin/Xamarin.Auth/pull/48#issuecomment-40934319\n> .\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/40934776/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/41614953", "body": "Re-worked as a better solution by using a property instead. See pull request #62 .\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/41614953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "iouri-s": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/59", "title": "MakeSecretOptional", "body": "Make client secret == null a valid scenario for authentication code\ngrant. The changes are submitted under the Apache license and were made to provide support for authenticating with Azure Active Directory.\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/58", "title": "IgnoreErrorsWhenCompleted", "body": "Add a protected property IgnoreErrorsWhenCompleted to ignore errors when\ncompleted.\nDerived classes need to set it to true when redirecting an OAuth flow to an unreachable URL, e.g.\nhttp://localhost.\nThe changes are submitted under the Apache license and were made to provide support for authenticating with Azure Active Directory\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/57", "title": "OnCreatingInitialUrl virtual method", "body": "Add a new protected virtual method to allow derived classes to alter initial page parameters. The changes are submitted under the Apache license and were made to provide support for authenticating with Azure Active Directory.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "roycornelissen": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/56", "title": "Added option for providing your own KeyStore password", "body": "Fix for issue #55:\n\nInstead of using a hard coded KeyStore password, the application should\nprovide its own from a safe origin. Otherwise the\nXamarin.Social.Accounts keystone in all apps that use the Xamarin.Auth\ncomponents can be easily breached by just looking at the source code on\nGitHub.\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/40198078", "body": "We have it working with Azure AD. I'll have a look to see if I can make this a PR.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/40198078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/41087326", "body": "Sure, is it sufficient if I refer to the Apache license that this repo falls under?\n\nYour approach sounds like a good upgrade scenario. Personally I'd rather not have the component contain a fallback like this though because it's bound to stay in for a long time since you won't know when developers will upgrade.\n\nIf you want to be strong armed - which I agree with-, I'd deprecate and remove the hard coded password immediately and provide good upgrade guidance for developers: have them do the recoding and keep the component clean (and secure).\n\nEither way, let me know your preferred solution.\n\nCheers!\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/41087326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/41126454", "body": "I see your points and agree on the end user implications. Let's go for the fallback route (your original suggestion). While the hard coded password is ugly, it's only useful for attack until the next time the new version of AndroidAccountStore is called.\n\nAbout Xamarin.Social: will you change that component? I'm also using Symplified.Auth, which will also be affected by this change. I've already contacted Michael Gile from Symplified about this.\n\nBTW, I've amended the commit message. Will include the license in all following commits.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/41126454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/41284259", "body": "Made the change so that a custom password is always required and that the AndroidAccountStore automatically migrates the old keystore.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/41284259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/42277411", "body": "Hi, any updates on this PR? Please let me know if you have any open issues.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/42277411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/228018166", "body": "@moljac was working on merging this PR into the https://github.com/xamarin/Xamarin.Auth/tree/portable-bait-and-switch branch. @moljac any update on when this branch will be finished and published?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/228018166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/230983035", "body": "@AhmedWarreth the fix is merged into the upcoming 1.3.1 alpha version (see https://github.com/xamarin/Xamarin.Auth/commit/0cb978ae823701abc856a22dae728a353dcb2adb) I think it'll be released soon.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/230983035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/11871905", "body": "Correct, I will add this.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/11871905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/11887316", "body": "A null check was already in there but I've changed the notation to match the coding style of the rest of the codebase. Will come along in next commit.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/11887316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "anton-makarevich": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/52", "title": "Wp local", "body": "*attenpt to serialize cookies on WP (not sure whether it actually works)\n*Xamarin.Auth support for Windows 8 (Windows Store) apps. The big issues with it is win8 webview can't clear cookies... but it's working - tested on facebook.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "livetocode": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/49", "title": "Bug fix when using GoogleApps authentication", "body": "Hi,\n\nThanks for your excellent component. However, I had an issue when using it with Google Apps:\nthe authentication workflow worked great except that it was always displaying an error dialog that could simply get dismissed.\nAfter a lot of investigation, I was able to narrow down the problem to just a few lines of code to fix it:\nGoogle was redirecting to the registered callback (localhost) but the WebView was not able to connect to the host, as of course, our application is not a server!\nSo, I simply forced the WebView to ignore any redirect to a localhost server. I had to do it after your OnPageLoading processing, to let it detect the redirect containing the authorization code.\nAlso, I had to check in the LoadFailed event that the error code was not a 102, because this what the WebView throws when a navigation is stopped.\n\nI extended your sample app to demonstrate the behaviour, using a custom Google app created in my domain.\nIf you want to verify what happens without my fix, just comment my code in the ShouldStartLoad event.\n\nHope this helps,\n\nMorgan\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/40967459", "body": "Yep.\nLe 2014-04-21 09:27, \"Eric Maupin\" notifications@github.com a \u00e9crit :\n\n> I don't see any related changes to Android, does it work as-is?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/xamarin/Xamarin.Auth/pull/49#issuecomment-40935085\n> .\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/40967459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "migueldeicaza": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/11246309", "body": "It works if you open the README.md file\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/11246309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13405448", "body": "@praeclarum  Frank, would you mind reviewing this patch?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13405448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13405479", "body": "@praeclarum Frank, would you mind checking this one too?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13405479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13405500", "body": "Eric, do we still need this patch?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13405500/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14843954", "body": "I reformatted the source code already and committed it.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14843954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "michaeljgray": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/11269749", "body": "So it does. That's really silly.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/11269749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "praeclarum": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13411554", "body": "Sorry for the delay! Thanks for the commit.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13411554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13411593", "body": "Jon, would you mind resyncing with master to update this pull request?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13411593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/17376649", "body": ":-)\n\nYeah I guess I lost the train of my own reasoning. Should be easy to revert.\u00a0\n\u2014\nSent from Mailbox for iPhone\n\nOn Thu, May 2, 2013 at 10:28 PM, Eric Maupin notifications@github.com\nwrote:\n\n> ## I'm thinking this was the wrong approach after all. If you already have an `Account` object, why would you be going through the auth process again, you can just start making requests at that point. The original behavior of just clearing the cookies seems like the best idea, now that I understand the reasoning behind it.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/xamarin/Xamarin.Auth/pull/15#issuecomment-17362640\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/17376649/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/21148918", "body": "Seeing as though the lib only works on Android and iOS, I don't see what\nthe problem is taking a dep on System.Json.\n\nIt's a small dependency that can easily be broken if/when Windows is\nsupported. I don't see any reason to hold up a bug fix in anticipation of\nfuture features.\n\nOn Tue, Jul 9, 2013 at 1:29 PM, Eric Maupin notifications@github.comwrote:\n\n> This runs into the same issue as #26https://github.com/xamarin/Xamarin.Auth/issues/26which is that there is no System.Json on Windows Phone or Windows 8 which\n> we'd like to support at some point.\n> \n> We have two options:\n> 1. Use System.Json and use the Mono implementation for Windows Phone /\n>    Windows 8\n> 2. Use Json.Net or some other 3rd party library.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/xamarin/Xamarin.Auth/pull/33#issuecomment-20703019\n> .\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/21148918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/21273764", "body": "Yep, OK. So we can use a tailored made JSON reader then. There might even be one in that code base. I hate the thought of depending on another lib. :-(\n\nOn Jul 19, 2013, at 12:59 PM, Eric Maupin notifications@github.com wrote:\n\n> It's a small dependency that can easily be broken if/when Windows is\n> supported. I don't see any reason to hold up a bug fix in anticipation of\n> future features.\n> \n> I have a Windows Phone branch right now that I'm trying to get ready, so I'm trying to avoid causing it more problems.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/21273764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/21273934", "body": "I'm liking your idea of including Mono's System.Json in your WinPhone build.\n\nOn Jul 19, 2013, at 1:03 PM, Eric Maupin notifications@github.com wrote:\n\n> Yep, OK. So we can use a tailored made JSON reader then. There might even be one in that code base. I hate the thought of depending on another lib. :-(\n> \n> There's GetValueFromJson or something like that, it scares me. And me too, it's why I haven't already dropped in Json.NET (and the lack of dependency support in components).\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/21273934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/comments/2155581", "body": "This also fixes a bug on iOS 5 when the webView.Request.Url is null.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/comments/2155581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jonlipsky": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13416104", "body": "Sure, no problem.  When I get to my hotel tonight (I'm on my way to Seattle right now) I'll resync.\n\nSent from my iPad\n\nOn Feb 11, 2013, at 4:16 PM, \"Frank A. Krueger\" notifications@github.com wrote:\n\n> Jon, would you mind resyncing with master to update this pull request?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13416104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14823078", "body": "No, the proxy support has nothing to do with DropBox.  The proxy support is simply there because a large portion of my corporate user base is behind a proxy.\n\nOn Mar 12, 2013, at 10:04 PM, Eric Maupin notifications@github.com wrote:\n\n> Is the addition of proxy support integral to DropBox support?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14823078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14841390", "body": "Yes, I can try; however to be honest I don't use Git at all, so I'm not really sure how to do that.  (For all of my projects we still use Subversion and trying to get anything done with Git seems like speaking a foreign language.)\n\nOn Mar 12, 2013, at 10:59 PM, Eric Maupin notifications@github.com wrote:\n\n> Would you mind separating it into two clean pull requests, with corrected spacing?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14841390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/comments/3297275", "body": "Hi...  I finally wanted to switch over to the official version of Xamarin.Auth; however because these two additions weren't accepted (OnPageFailed and Proxy support) I can't switch over. \n\nFirst, Are there any plans to add proxy support into Xamarin.Auth?  I have a major customer that needs this, so I could never use the standard release of Xamarin.Auth unless I can specify a proxy and I can't figure out a way to add proxy support without customizing it.\n\nSecond, I can't find anyway to write a DropboxAuthenticator without having the support for \"OnPageFailed\" like I had added.  The reason is that when Dropbox successfully authenticates, it will redirect to a url formatted like \"db-<app id>://1/connect?oauth_token=<token>&oauth_token_secret=<secret>f&uid=<user id>\".  Obviously, this won't load in the browser; however if there was a support for OnPageFailed, then you could support OAuth authentication when it redirects to a non-web URL when successfully authenticated.\n\nWithout \"OnPageFailed\", I can watch for that URL in \"OnPageLoading\" to know that I authenticated successfully; however when the web view fails to load that URL (after OnPageLoading get's called), a series of UIAlert's are shown. \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/comments/3297275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/3353557", "body": "Yes, I meant \"&\" and \"?\".  That's what I have in my personal copy.\n\nOn Mar 12, 2013, at 11:00 PM, Eric Maupin notifications@github.com wrote:\n\n> In src/Xamarin.Auth/OAuth1Authenticator.cs:\n> \n> > @@ -141,12 +141,15 @@ public OAuth1Authenticator (string consumerKey, string consumerSecret, Uri reque\n> >                 token = r[\"oauth_token\"];\n> >                 tokenSecret = r[\"oauth_token_secret\"];\n> > -               var url = authorizeUrl.AbsoluteUri + \"?oauth_token=\" + Uri.EscapeDataString (token);\n> > -                string paramType = authorizeUrl.AbsoluteUri.IndexOf(\"?\") >= 0 ? \"&\" : \"&\";\n> >   Did you mean \"&\" : \"?\" ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/3353557/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "ybigus": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14787894", "body": "same for me...  but actually after:\nvar request = new OAuth2Request (\"GET\", new Uri (\"https://graph.facebook.com/me\"), null, eventArgs.Account);\nrequest.GetResponseAsync().ContinueWith (t => {\n    if (t.IsFaulted)\n        Console.WriteLine (\"Error: \" + t.Exception.InnerException.Message);\n    else {\n        string json = t.Result.GetResponseText();\n        Console.WriteLine (json);\n    }\n});\nyou shoud have all this data\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14787894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "gaearon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18425053", "body": "I should've used a branch for this\u2014sorry, this is my first time sending a pull request.\nI'll recreate it now.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18425053/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18426480", "body": "@ermau Thanks for taking a look.\n\nI'm not sure how split pull request and/or get rid of unrelated commits except for branching from origin and cherry-picking them one by one, which is what I plan to do a bit later.\n\nMeanwhile, can you please let me know if you plan to add the Safari thing, so I don't waste time if not?\nAlso, I'm still not sure about the license (see last paragraph).\n\nThanks again!\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18426480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18426540", "body": "Also, I suppose it's better to somehow rewrite history before submitting the PR? The code in earlier commits is very different from the later commits, and so it doesn't really make sense to include it?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18426540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18426845", "body": "As for `Dictionary`, I later changed this to be a utility method in `WebEx`, so I suppose it doesn't matter (because it's still internal).\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18426845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18427073", "body": "Got it, thanks.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18427073/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18936347", "body": "Um, sorry\u2014I checked and this is not how we actually did it in the end.  \n\nThe problem is, we wanted batch requests to work both with `FacebookService` and `Facebook6Service` (which uses iOS 6), so instead of subclassing `Request` we just made `Body` configurable from the outside, like `Parameters`.\n\nI'll create another pull request for that.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18936347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18937909", "body": "Re-submitted as #28.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18937909/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18938834", "body": "@ermau I'm submitting under MIT/X11, what do I need to do? Will stating it in the description do?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18938834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18938970", "body": "@ermau MIT/X11\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18938970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18939079", "body": "I updated all pull requests with \"(This pull request is submitted under MIT/X11)\" in the beginning. Please let me know if there's something else I need to do!\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18939079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18940329", "body": "@ermau Thanks. I included \"Licensed under MIT/X11\" in commit for #30, hope I got it right this time!\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18940329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18941377", "body": "@ermau I see now. Thanks for taking time to explain!\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18941377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19000836", "body": "@ermau Unfortunately I don't think `Unwrap` is available in 6.2.X, which is what I'm working with (6.3.X is too unstable). I'll double-check though.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19000836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19001014", "body": "@ermau To my great surprise, it seems like it actually _is_ available in 6.2.X. I was sure it wasn't! I guess it should solve the problem since it's doing the same thing.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19001014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19009818", "body": "Right, I haven't thought about that.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19009818/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19012325", "body": "@ermau Just rebased.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19012325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19047410", "body": "@ermau Perhaps I could, I need to check. Still, `FormEncode` is internal, so I'd need to copy it in my library, I presume... This doesn't smell exactly right.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19047410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19049614", "body": "I'm all for (2).\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19049614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19208285", "body": "If I had a choice, I'd use Newtonsoft.Json. It supports deserialization to `Dictionary<string, string>` out of the box, and it's definitely correct (which I can't say about System.Json which doesn't escape newlines, for example).\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/19208285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/23016243", "body": "We support Google refresh tokens in [Stampsy.Social](https://github.com/stampsy/Stampsy.Social). It's a library on top of Xamarin.Social and Xamarin.Auth.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/23016243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/25928318", "body": "> This seems to assume that your app will not be killed before you return to it.\n\nWell, why would it? I mean, I see the system might kill the app, but in practice I've never seen this happen during the last year. This is _exactly_ the same method Facebook SDK uses if no native login or app is available. It's not like I'm inventing something new here.\n\n> I'm inclined to suggest this be left up to the user if they wish to pursue this route, I don't see any reason that it has to be part of the core, all the API used is public.\n\nI was sure it was impossible to implement something like [Stampsy.Social](https://github.com/stampsy/Stampsy.Social) without having a variant of this as part of the core.\n\nHowever, now that I took a second look at it, indeed, even OnPageLoaded and OnCancelled are public methods. Perhaps I really can implement this as an extension instead.\n\nThank you for taking another look and bringing this to my attention! I'm somewhat busy right now with a different project, but I definitely will look into it in the future.\n\nI guess this pull request can get closed in this case.\nCheers!\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/25928318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/25961001", "body": "> In your code, if the app was killed you're simply ignoring the opened URI. If the URI is valid, maybe we could automatically save the account to an AccountStore, regardless of the task?\n\nTrue, I haven't thought about it. However I'm not sure how it'd look architecturally\u2014right now it's up to service and authenticator to do the saving. Even if something like `SafariUrlHandler` \u201creceives\u201d a URL without the corresponding task, how can it know which service to save it for?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/25961001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/26216064", "body": "+1 on this one, would love to see it fixed.  \n@ermau Do you have some design ideas about how this can be implemented? I'm sure somebody could take it if you point out the design direction.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/26216064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Iyashu5040": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/21486390", "body": "I've tweaked the solution, it now presents the user with an error message and prompts them to continue or cancel. (Tested working on an HTC Desire running CyanogenMod 7.2.0.1 - Android 2.3.7)\n\n```\npublic override void OnReceivedSslError(WebView view, SslErrorHandler handler, SslError error)\n            {\n                AlertDialog.Builder builder = new AlertDialog.Builder(this.activity);\n                AlertDialog ad = builder.Create();\n                string message = \"Certificate error.\";\n                switch (error.PrimaryError)\n                {\n                    case SslErrorType.Untrusted:\n                        message = \"Certificate is untrusted.\"; break;\n                    case SslErrorType.Expired:\n                        message = \"Certificate has expired.\"; break;\n                    case SslErrorType.Idmismatch:\n                        message = \"Certificate ID is mismatched.\"; break;\n                    case SslErrorType.Notyetvalid:\n                        message = \"Certificate is not yet valid.\"; break;\n                }\n                message += \" Do you want to continue anyway?\";\n                ad.SetTitle(\"SSL Certificate Error\");\n                ad.SetMessage(message);\n                ad.SetButton(\"OK\", (sender, args) =>\n                                       {\n                                           handler.Proceed();\n                                       });\n                ad.SetButton2(\"Cancel\", (sender, args) =>\n                                            {\n                                                handler.Cancel();\n                                                activity.Finish();\n                                            });\n                ad.SetIcon(Android.Resource.Drawable.IcDialogAlert);\n                ad.Show();\n            }\n```\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/21486390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "icnatejackson": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22282469", "body": "Hey Eric,\n\nI'm not sure why a git environmental issue on my side would affect 1 of 10 files in the commit.  When I saw that, I just assumed that 1 file was in error within the repo.  I'm simply using all the defaults with Xamarin Studio and Github for Mac.  I'm new to git, so most of what you said to do is greek to me.  But, I'd like for this feature to be in the component, so I'll work through what I need to in order to get the pull request through.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22282469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22327969", "body": "I very much appreciate the detailed and helpful git guidance Eric.  Unfortunately, things fell down for me at the \"git pull xamarin master --rebase\" command as that failed in my Mac Terminal.  I poked around for a while with various tips from stackoverflow, spent some time in vim trying to merge etc.  In the end, I had to cut my losses.  The total time it'd take me to fork from the current code and make the very simple changes was way less than the time I felt it take me to get my existing repo in a condition where it could be merged back to Xamarin's.  So, I closed the pull request and I'll submit a new one against my new fork/repo.  I'll have to tackle git \"for real\" another day...\n\nUnfortunately, the current code from Xamarin doesn't even compile for me as the newly added JSON code is missing XML comments and the compiler is treating the warnings as errors.  I'm not sure how the other contributors are compiling the projects as checked in.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22327969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22329484", "body": "I can include it in a commit as well.  I've already set Xamarin.Auth to not generate XML docs like the other projects in the solution.  I guess that sorta implies that my upcoming pull request would get merged :)  haha\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22329484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22331510", "body": "I did see your checkin... unfortunately, that only fixed one of the issues I'm seeing.  I show 119 error(s) on compile.\n\nyou just fixed:\nXamarin.Auth/src/Xamarin.Auth/OAuth2Request.cs(80,21): error CS1573: \nWarning as Error: Parameter `accessTokenParameterName' has no matching param tag in the XML comment for`Xamarin.Auth.OAuth2Request.GetAuthenticatedUrl(Xamarin.Auth.Account, System.Uri, string)'\n\nbut others exist:\n\nXamarin.Auth/src/Xamarin.Auth/OAuth2Authenticator.cs(301,46): error CS1591: Warning as Error: Missing XML comment for publicly visible type or member `Xamarin.Auth.OAuth2Authenticator.RequestAccessTokenAsync(System.Collections.Generic.IDictionary<string,string>)'\n\nXamarin.Auth/src/Xamarin.Auth/WebUtilities.cs(25,22): error CS1591: Warning as Error: Missing XML comment for publicly visible type or member `Xamarin.Auth.WebUtilities'\n\nXamarin.Auth/src/Xamarin.Auth/WebUtilities.cs(27,24): error CS1591: Warning as Error: Missing XML comment for publicly visible type or member `Xamarin.Auth.WebUtilities.FormEncode(this System.Collections.Generic.IDictionary<string,string>)'\n\nthe entire Xamarin.Auth/src/Xamarin.Auth/System.Json/JsonArray.cs file\nthe entire Xamarin.Auth/src/Xamarin.Auth/System.Json/JsonObject.cs file\nthe entire Xamarin.Auth/src/Xamarin.Auth/System.Json/JsonPrimitive.cs file\nthe entire Xamarin.Auth/src/Xamarin.Auth/System.Json/JsonType.cs file\nthe entire Xamarin.Auth/src/Xamarin.Auth/System.Json/JsonValue.cs file\n\nLocally,I decided to just set that project to not generate xml documentation.  I guess you could just fix the Xamarin authored files and then add the #pragma warning disable 1591 to the tops of those Json files...  FYI, the Xamarin.Auth.Android and Xamarin.Auth.iOS projects are already set to _not_ generate XML documentation.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22331510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22335908", "body": "I think the GenerateDocumentation element in the csproj file should be removed to match that of the iOS and Android projects.  Thoughts?   (sorry to be having this conversation on this closed pull request thread :) )\n\nsorry... just saw your commit from (ahem) 20 mins ago.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22335908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22351256", "body": "Thanks for the coverage Eric!\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/22351256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "ksmithfl": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/23101423", "body": "Did you try to use the constructor that requires a clientSecret and accressTokenUrl?  That is what I had to do to get the response_type=code.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/23101423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "SilverRrain": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/23210992", "body": "good work and very fast))\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/23210992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "chrisriesgo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/25887620", "body": "When will this be rolled into source that is shipped? I have version 1.2.1 on my machine, but the new code snippets are missing.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/25887620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "StephaneDelcroix": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/26082151", "body": "I'm making a request using my API key and token, but without using any username/password. That's what I meant by unauthenticated. That's why I don't have an `Account` and then I use the OAuth1 class directly.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/26082151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/26082254", "body": "I can share more details on a private channel if you need help reproducing this. You know my email address.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/26082254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/26082703", "body": "they also give you an auth_token and secret with your api keys.\n\nhere's an example of an request with an auth_token, but without user/password authentication\n\nhttps://developer.vimeo.com/apis/advanced/methods/vimeo.albums.getAll/playground\n\n(provide a username at random)\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/26082703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/26082850", "body": "(note: you might be totally right, and I might be misusing the protocol or the API)\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/26082850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/26083462", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/26083462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "pyromanci": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/35438018", "body": "I just started playing around with the Xamarin.Auth and my first time using google's api's.\nI ran into a issue with saved Accounts and ran into a expired authentication. Doing some diging i released I should really be using a refresh token as I want/need a long term authentication.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/35438018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dbelcher": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/39770434", "body": "+1 for adding built-in support for refresh tokens.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/39770434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jdluzen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/47456393", "body": "Looking forward to this getting merged. I currently get a brief error page on Android.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/47456393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jpmock": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/51489546", "body": "I am also having these issues.  I will try the proposed fix and report back.  I guess the fix hasnt been merged yet?  Just added the component last week.\n\nupdate - just downloaded this source, compiled the dll's and added Xamarin.Auth.iOS.dll to my iOS project and Xamarin.Auth.Android.dll to my android project and now I no longer get the \"Could not connect to the server\" error.  \n\nGreat find livetocode!\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/51489546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "runeborg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/56554951", "body": "Any progress on this issue? I tried this following Ben's comment here: http://gograemefoster.blogspot.se/2014/01/azure-active-directory-xamarin-and.html and modified OAuth2Authenticator to accept a resource and access token url which got me a proper access token which is enormous on azure, resulting in a too long request url.\n\nI then also modified OAuth2Request to set the Bearer token as a Authorization header which solved all obvious issues. But when issuing a request with this token to a Azure AD (WIF) protected web api the request is redirected to the login page. This is then where I am stuck.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/56554951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "paulbatum": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/58968114", "body": "I am thinking that one way to implement this is to put a SuppressUIErrors bool on WebAuthenticator that is passed into the controller/activity and used to determine whether the error should actually be shown. What do you think?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/58968114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/59442853", "body": "Resolved by 1e51e86c73eae7a45211ad01c485d47b7c20be52\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/59442853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "BrunoVT1992": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/60567257", "body": "Hi,\nI have the exact same problem. Can you tell me in detail how you cloned the source and used it in your project?\n\nthx\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/60567257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/60571095", "body": "Thx, Is it possible to put an example of this on github?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/60571095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jacksierkstra": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/61826307", "body": "I would really like to see this implementation! @jbogard, can you publish that fork and send the url?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/61826307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/63966252", "body": "Sorry, this has been a configuration error on my side.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/63966252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "whitneyland": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/78358027", "body": "May I ask what the ETA is on this, since the PR is already available?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/78358027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "vineelsunny": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/99345524", "body": "I'm also facing the same problem but in cordova firefox OS,can anyone please provide any solution.Thank you!!\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/99345524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "fa15073": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/130829877", "body": "assume you are using oauth2, the real problem seems to be OnRedirectPageLoaded are called twice (both on page loading and on page loaded) and the 2nd RequestAccessTokenAsync fails (triggering ShowError)\nnot sure what Commit cde10c4e was the right fix or the fix should be in oauth2 authenticator\nbut you can always override the current implementation to fix this\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/130829877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "LithiumToast": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/148297420", "body": "Add this to your plist\n\n```\n<key>NSAppTransportSecurity</key>\n<dict>\n  <key>NSExceptionDomains</key>\n  <dict>\n    <key>facebook.com</key>\n    <dict>\n      <key>NSIncludesSubdomains</key> <true/>        \n      <key>NSThirdPartyExceptionRequiresForwardSecrecy</key> <false/>\n    </dict>\n    <key>fbcdn.net</key>\n    <dict>\n      <key>NSIncludesSubdomains</key> <true/>\n      <key>NSThirdPartyExceptionRequiresForwardSecrecy</key>  <false/>\n    </dict>\n    <key>akamaihd.net</key>\n    <dict>\n      <key>NSIncludesSubdomains</key> <true/>\n      <key>NSThirdPartyExceptionRequiresForwardSecrecy</key> <false/>\n    </dict>\n  </dict>\n</dict>\n```\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/148297420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mws580": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/153782758", "body": "I made the info.plist changes and now I get \n\"Given URL is not allowed bt the Application configuration.  One or more given URLs is not allowed by Apps settings. \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/153782758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/153902861", "body": "Opting out using the keys above still gives me the error\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/153902861/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jamesmontemagno": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/153852253", "body": "Opt out with until you figure out all the urls.\n\n```\n<key>NSAppTransportSecurity</key>\n<dict>\n    <key>NSAllowsArbitraryLoads</key>\n    <true/>\n</dict>\n```\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/153852253/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "gramland": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/155394994", "body": "I have the same problem in ios.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/155394994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kevinkraemer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/165795927", "body": "Have been running into exception \"Could not save account to KeyChain: InteractionNotAllowed\".  This change should address it.  Is there any timeline on when this would be merged and released?\nthanks.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/165795927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "boblautenbach": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/165844030", "body": "There is pull request I submitted about 8 months ago that fixes this.  \n\n```\n    public override void Save (Account account, string serviceId)\n    {\n        var statusCode = SecStatusCode.Success;\n        var serializedAccount = account.Serialize ();\n        var data = NSData.FromString (serializedAccount, NSStringEncoding.UTF8);\n\n        //\n        // Remove any existing record\n        //\n        var existing = FindAccount (account.Username, serviceId);\n\n        if (existing != null) {\n            var query = new SecRecord (SecKind.GenericPassword);\n            query.Service = serviceId;\n            query.Account = account.Username;\n\n            statusCode = SecKeyChain.Remove (query);\n            if (statusCode != SecStatusCode.Success) {\n                throw new Exception (\"Could not save account to KeyChain: \" + statusCode);\n            }\n        }\n\n        //\n        // Add this record\n        //\n        var record = new SecRecord (SecKind.GenericPassword);\n        record.Service = serviceId;\n        record.Account = account.Username;\n        record.Generic = data;\n        record.Accessible = SecAccessible.AfterFirstUnlock; ////THIS IS THE FIX\n\n        statusCode = SecKeyChain.Add (record);\n\n        if (statusCode != SecStatusCode.Success) {\n            throw new Exception (\"Could not save account to KeyChain: \" + statusCode);\n        }\n    }\n```\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/165844030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/237697319", "body": "I hope so..submitted it some time ago\n\n-b\n\n> On Aug 4, 2016, at 5:54 PM, Mike Gottlieb notifications@github.com wrote:\n> \n> Is there any plan to merge this in and release an update? This is a pretty huge problem for any app that wakes up in the background and needs to communicate with a service.\n> \n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/237697319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/237730016", "body": "@MikeG..Thanks \u2026completely agree.\n\nBob Lautenbach\n_Pluralsight_Author\nhttps://www.pluralsight.com/courses/using-ibeacons-xamarin-ios\n@boblautenbach\n\nOn August 4, 2016 at 6:14:11 PM, Mike Gottlieb (notifications@github.com)\nwrote:\n\n@boblautenbach https://github.com/boblautenbach Yes thank you for that. I\nam using your example to work around things, but it would be nice to get\nthis in since it is a pretty critical thing for a lot of apps. It is\namazing how many very normal scenarios are deeply affected by Apple's data\nprotection API and it is also incredible that there is so little\ndocumentation on accounting for it.\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/xamarin/Xamarin.Auth/pull/80#issuecomment-237699627,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AEcNP6jciqobQPnmv8ORlgoFhbziOPQUks5qcmQzgaJpZM4DKzHs\n.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/237730016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "darrellbooker": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/166165982", "body": "@jbogard  any luck on getting a sample?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/166165982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "tuath": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/183949597", "body": "Yep, any news ? authorization is the first step in a client-server system !!!\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/183949597/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "tylerstelzer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/199891207", "body": "If you derive a class from OAuth2Authenticator, you can make it work with B2C with a couple modifications/overrides.  The initial url will need to be overriden to include the signinpolicy as a query string parameter.  You will also need to change \"access_token\" to \"id_token\" as B2C decided to change it.  Hope that helps.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/199891207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "matpag": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/207473161", "body": "@ermau i think that this PR should be reviewed, even if are past 2 years from it's initial proposal\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/207473161/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "JKennedy24": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/208795437", "body": "Any progress on this?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/208795437/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ali4ever4": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/213692774", "body": "so is there any solution other than i do like what @Dzoge  said putting alert.show() in try catch after getting the whole source code into my machine ?!\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/213692774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dengere": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/219079444", "body": "how we can display login page on UWP? never?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/219079444/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/223646646", "body": "@ermau  when i try constructor that takes clientSecret and accessTokenUrl,  completed delegation eventArgs has access_token and id_token.\nhow can i get \"short code\" instead of tokens?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/223646646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ravensorb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/220771771", "body": "Would be great to see an update for Windows Mobile\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/220771771/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/220771822", "body": "Would love to see this merged in to the main branch\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/220771822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "JoeM-RP": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/221626423", "body": "Would love to see this for UWP too\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/221626423/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "theVietCoder": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/222403033", "body": "Hi everyone, any update on this?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/222403033/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/245001024", "body": "Thanks @hvaughan3 \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/245001024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sp3ci": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/223275363", "body": "I have tried to use Xamarin.Auth and the Facebook SDK for Android and in my experience neither works at the moment.\n\nIt seems that the web view or similar gets closed before it has given a response to the Xamarin application.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/223275363/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "gabog": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/223426072", "body": "@tylerstelzer would you be able to provide more details on the overrides (or some sample code) I am trying this approach and can't get it to work. \nThanks\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/223426072/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jzeferino": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/223901833", "body": "I'm only using the Xamarin.Auth. But i don't want to use Facebook SDK.\nWith Xamarin.Auth i can authenticate with facebook or other entity using OAuth protocol.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/223901833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dei79": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/227020146", "body": "Thanks for this issue, it looks like I have the same problem with my own identity provider. My identity provider supports Azure Active Directory and Microsoft Accounts and the component just drops errors when I redirect to the auth chain.   \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/227020146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dot-ly": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/230908555", "body": "any fix for this??\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/230908555/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/231021770", "body": "Thanks guys. So what's the work around for the hardcoded password? do i need to prompt the user for input? Opened this topic in http://stackoverflow.com/questions/38234603/xamarin-android-secure-strorage-keystore \n\nWill be happy to post any updates once this is resolved. \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/231021770/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "nhinze": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/233758259", "body": "I'm seeing the same issue. Also using doorkeeper gem\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/233758259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239627610", "body": "Thank you. It works now.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239627610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239629867", "body": "This issue appears resolved with Xamarin.Auth 1.3.1 alpha-2 and using the XA_HTTP_CLIENT_HANDLER_TYPE environment variable:\n\nhttps://developer.xamarin.com/guides/cross-platform/transport-layer-security/\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239629867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239673743", "body": "Same happens when trying to build an Android Release actually. Debug config is fine.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239673743/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239678036", "body": "Actually, it appears that there is still a problem with the nuget package. The portable package has the wrong slash issue still:\n\n![image](https://cloud.githubusercontent.com/assets/1156143/17649928/169ded7e-620e-11e6-8111-a33b4bee51ec.png)\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239678036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239765245", "body": "I looked at the commit. You forgot to change one of the two slashes for the portable dll.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239765245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239765728", "body": "This is also happening for Debug after I do a \"Clean All\". Only way to remedy it is to remove 1.3.1, install Xamarin.Auth 1.3.0, build, and update to 1.3.1 again.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239765728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239766179", "body": "target=\"lib/portable-net45+wp8+wpa81+win8+MonoAndroid10+MonoTouch10+XamarinIOS10\\Xamarin.Auth.dll\"\n\nshould be:\n\ntarget=\"lib/portable-net45+wp8+wpa81+win8+MonoAndroid10+MonoTouch10+XamarinIOS10**/**Xamarin.Auth.dll\"\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239766179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239787311", "body": "Thanks. Fixed.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239787311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239787436", "body": "Thanks. Fixed after cleaning and rebuilding.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239787436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239917867", "body": "Xamarin.Auth is not really at fault here. To get it to work with TLS 1.2 and Android you need to set:\n- XA_HTTP_CLIENT_HANDLER_TYPE environment variable: https://developer.xamarin.com/guides/cross-platform/transport-layer-security/\n- Select \"AndroidClientHandler\" in HttpClient implementation in the XS Android Build options.\n- If using the Linker, you need to add \"using Xamarin.Android.Net;\" somewhere in your Android project so that the linker does not remove this library.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/239917867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/240576787", "body": "This can be fixed by pre-encoding your parameters that contain special characters with:\n\nSystem.Net.WebUtility.UrlEncode()\n\nThen, on the webserver side you will have to decode/unescape it again.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/240576787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/255773108", "body": "I got this to work just fine by using:\n\nXamarin.Auth 1.3.1.1\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/255773108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/256919130", "body": "I think I did have the issue using the \"access grant code\" flow. After some reading, mobile apps should use the \"implicit flow\", because the secret key can't be store securely in the code.\nAlso, if you use HTTPS, Android has many issues and you have to use Android 5+.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/256919130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "herbutant": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/233991815", "body": "+1 \nwhat's up with v1.3.0 in that respect?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/233991815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "nmanichev": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/235528856", "body": "@moljac  could you please provide an information when this branch will be merged into master?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/235528856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "yufeih": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/236063688", "body": "On UWP, you can use WebAuthenticationBroker https://msdn.microsoft.com/en-us/library/windows/apps/dn608116.aspx\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/236063688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rgccomtec": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/237119867", "body": "Yes we did use Xamarin with ADFS by extending OAuth2Authenticator. I've blogged it below. Let me know if I can help.\n\nhttp://comtecblog.azurewebsites.net/2016/08/03/xamarin-and-oauth2-with-adfs/\n\nRahul Gangwar\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/237119867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mikegottlieb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/237695452", "body": "Is there any plan to merge this in and release an update? This is a pretty huge problem for any app that wakes up in the background and needs to communicate with a service.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/237695452/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/237699627", "body": "@boblautenbach Yes thank you for that. I am using your example to work around things, but it would be nice to get this in since it is a pretty critical thing for a lot of apps. It is amazing how many very normal scenarios are deeply affected by Apple's data protection API and it is also incredible that there is so little documentation on accounting for it.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/237699627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "MirzaSikander": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/237732437", "body": "I am running into the same issue. Why has this not been merged in?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/237732437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/237981083", "body": "Why do you think that embedding a client secret is insecure? Even if somebody gets access to it, all they can do is impersonate your app, but nothing more. If they create a malicious app then its the users fault for installing it. If they create a webservice then your redirect URL would prevent them from getting the Auth token. \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/237981083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/238174918", "body": "According to Googles own [article,](https://developer.android.com/training/id-auth/authenticate.html) \"A client id and **client secret**, which are strings that **identify** your app to the service\" \n\nEven if you are able to achieve what you mentioned, in the future if you need to support OAuth platforms apart from Google, you would have to implement the same functionality again.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/238174918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "golfguy0082": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/238014277", "body": "Someone else impersonating my app is still not ideal, right (even if the impact is maybe minimal)?  Perhaps the answer is \"there is no other way right now\", and that's an acceptable answer.  I'm really looking for confirmation one way or the other, but I don't want to give up without pursuing the best path possible.  If this were a native android app, I wouldn't have to embed a client secret (instead it uses a SHA-1 hash of your signing cert.  This seems better because Google can verify that it was me that made the request without ever embedding a secret).  Since this is possible in native Android, I was hoping it would also be possible with Xamarin.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/238014277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lirkki": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/240356045", "body": "Cannot reproduce in 1.3.1.1 anymore. Thanks @moljac for quick action!\n\nJust as a sidenote: PCLCrypto version that gets installed with 1.3.1.1 is 0.5.0.14108 which seems rather old (current latest version 2.0.147). It also installs version 2.0.4.14103 of Validation dependency which is not the latest (currently 2.3.7).\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/240356045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/241692053", "body": "@moljac Yes this is ok on Android :+1: \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/241692053/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "poohzrn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/242481357", "body": "See https://github.com/xamarin/Xamarin.Auth/pull/79 \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/242481357/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "hvaughan3": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/242999018", "body": "@moljac I am still getting the iOS error that adam talked about. I tried installing the latest Xamarin Auth nuget, got the error, updated PCLCrypto to the latest version which also update Validation. Then I was able to go back and install Xamarin Auth without errors.\n\nThough I am not sure yet if updating PCLCrypto to the latest version will cause issues later on since some method signatures were changed in the latest versions of PCLCrypto. Working on testing everything now and will report back or edit this post if I run into issues.\n\nFor completeness these are the versions of libraries I now have installed:\n\nPCLCrypto - 2.0.147\nValidation - 2.2.8\nXamarin Auth - 1.3.1.1\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/242999018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/243115504", "body": "@moljac That is indeed weird. I do not know nearly enough about NuGet to be very helpful, unfortunately, but please let me know if there is anything I can do to help.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/243115504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/244615457", "body": "See [#79](https://github.com/xamarin/Xamarin.Auth/pull/79)\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/244615457/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "reubenkcoutinho": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/244520615", "body": "I'm also facing the same issue with uber authetication. Trying the workaround, but it doesn't seem to work.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/244520615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rahul-sivalenka-wtc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/244531727", "body": "You have to modify your request URL in the OAuth2Request to include the fields that you need. You can refer the [facebook graph api guide](https://developers.facebook.com/docs/graph-api/using-graph-api/) - **Choosing Fields** section to get started.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/244531727/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "DamianMehers": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/244623131", "body": "Until it is supported, I've put together this example using WebAuthenticationBroker with Xamarin.Auth http://damianblog.com/2016/09/04/uwp-oauth-in-xamarin-forms-using-xamarin-auth/\n\nComplete example here https://github.com/DamianMehers/XamFormsUWPOAuth\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/244623131/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "modplug": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/244867288", "body": "@jbogard: Do you have the sample laying around somewhere?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/244867288/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sshanthakumar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/244909795", "body": "Can anyone give solution to fix this problem? I am also facing the same issue with Android\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/244909795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "aweFalafel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/247616152", "body": "I to am having this issue. Here's a bit more detail:\n\n```\nSystem.ArgumentNullException: Value cannot be null.\nParameter name: data\n  at Foundation.NSString.FromData (Foundation.NSData data, Foundation.NSStringEncoding encoding) [0x00026] in /Users/builder/data/lanes/3426/6c3fee4d/source/xamarin-macios/src/Foundation/NSString2.cs:94 \n  at Xamarin.Auth.KeyChainAccountStore.GetAccountFromRecord (Security.SecRecord r) [0x00006] in <402cf9b3716845b3bdddef581cb33a3e>:0 \n  at System.Linq.Enumerable+WhereSelectArrayIterator`2[TSource,TResult].MoveNext () [0x0004d] in <45ddf04144214dd89fc1e7215a8a94aa>:0 \n  at System.Collections.Generic.List`1[T]..ctor (System.Collections.Generic.IEnumerable`1[T] collection) [0x0008b] in <cc958e60dbab45a48329f27123804526>:0 \n  at System.Linq.Enumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T] source) [0x00011] in <45ddf04144214dd89fc1e7215a8a94aa>:0 \n  at Xamarin.Auth.KeyChainAccountStore.FindAccountsForService (System.String serviceId) [0x00034] in <402cf9b3716845b3bdddef58\n1cb33a3e>:0\n```\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/247616152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/247627556", "body": "I've reverted to 1.3.0 from Nuget and all seems to be working properly.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/247627556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/247629550", "body": "Xamarin.Auth\n\nhttps://www.nuget.org/packages/Xamarin.Auth/1.3.0\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/247629550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jimnorth55": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/247628849", "body": "Pardon, but it was not clear... 1.3.0 of which Nuget package? \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/247628849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/247639420", "body": "Interesting that this repository shows the latest release as 1.2.2 dated back in 2013.  I had installed as a Component from the Xamarin site a couple of months ago and was running 1.2.3.1.   Is this not the repository for the Xamarin.Auth package?  It seems not.\n\nAt any rate, I removed the Component and installed from Nuget, first the latest 1.3.1.1 and got the Exception as expected.   Reverted to 1.3.0 as suggested. Still fails with the -34018 code.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/247639420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sushihangover": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/248118483", "body": "@kazo0 Every find a workaround for this issue? \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/248118483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/248366176", "body": "@kazo0 Thanks, I wrote a new constructor that uses an accessTokenUrl without a client secret and changed the implicit/explicit auth-flow logic as it is currently broken for a lot of oauth2 sites. The fact that the current code does not support explicit  `code`-based auth flow is strange.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/248366176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/248733179", "body": "@tbenum _Assuming_ you are using Xamarin Studio. If so add the Validation Nuget first and then add the Xamarn.iOS. You have to this to add Auth to PCL-Based Libraries (111, 78, ...), this is an Xamarin Studio issue.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/248733179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/260963324", "body": "@ericbrunner You need to enable \"Enable Keychain Access Groups\" \n\n> Just make sure you enable the keychain access in Entitlements and select the entitlements for Simulator (Debug) builds too. By default this is not set.\n\nref: http://stackoverflow.com/questions/39487368/xamarin-auth-store-keychain-not-working-after-ios10-upgrade\nref: http://stackoverflow.com/questions/39492752/xamarin-error-code-34018\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/260963324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mstrong64": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/248164469", "body": "I did all the updates and the problem still occurred, but only on the simulator. The device works fines which is strange. However, I have managed to fix this on the simulator by adding Entitlements.plist to the iOS project (File -> New file -> iOS -> Entitlements.plist). When you edit that file you will be able to select \"Enable Keychain Access Groups\". You will also need to add the entitlements.plist to the custom entitlements entry in the project options. (Project Options -> iOS Bundle Signing, then select Configuration: Debug / Platform: iPhoneSimulator and enter \"Entitlements.plist\" into the Custom Entitlements field.)\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/248164469/reactions", "total_count": 15, "+1": 13, "-1": 0, "laugh": 0, "hooray": 2, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "NPadrutt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/249623491", "body": "I have the same issue in Visual Studio 2015 aswell..\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/249623491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rafaleonbb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/250541786", "body": " add the Validation Nuget? I don't understand what I have to do.\nCan you help me, please?\nThanks\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/250541786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "aaronsalt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/250805618", "body": "So, I had the same issue. The Dependency behavior is set to \"lowest\". I went in to my Installed packages, selected \"Validation\" > checked the iOS project > changed version from 2.0.4.14103 to 2.3.7. This installed the Validation Nuget for my iOS project, and then when I went to install Xamarin.Auth, it worked like a champ. Hope this helps!\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/250805618/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "tbenum": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/251038282", "body": "Thanks!! That worked.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/251038282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "MarcBruins": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/251898492", "body": "Hi @rgccomtec, your link is down. Would be nice to see the blogpost however!\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/251898492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "zengable": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/253369522", "body": "I used to use the component store version of Xamarin.Auth without problems but since iOS 10 came out it cannot save accounts anymore. As the component store version is outdated I wanted to update via nuget but then the project did not compile anymore, I had PCLCrypto related issues as well:\n\nMTOUCH: error MT2002: Failed to resolve \"System.Byte[] PCLCrypto.ICryptographicBuffer::GenerateRandom(System.Int32)\" reference from \"PCLCrypto, Version=2.0.0.0, Culture=neutral, PublicKeyToken=d4421c8a4786956c\"\n1. Xamarin.Auth can't be installed by default via nuget. I have to manually add the Validation nuget first.\n2. PCLCrypto 0.5.0.14108 gets installed by default when I install Xamarin.Auth, this is causing the error stated above. So the PCLCrypto package has to be manually update as well.\n3. Now the project compiles but I guess I need to open a separate issue ticket as the lib still can't save the Account\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/253369522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/253451503", "body": "This helped me out as well, thanks!\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/253451503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "MathildeRoussel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/253462429", "body": "Same here, sorry I can't help but if anyone else got a clue it would be great\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/253462429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rashidovich": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/253526411", "body": "Hey Guys,\n\nI faced with same issue, steps to reproduce:\n1. Create PCL project\n2. Add iOS, Android specific projects based on PCL project\n3. Add Xamarin.Auth reference.\n\nEverything works fine except when I deploy iOS directly to IPhone, then PCLCrypto reference issue arises. Previous suggestions help me to overcome this but then I'm facing with another problem: Failed to resolve \"System.Json.JsonValue System.Json.JsonValue::Parse(System.String)\" reference from \"Xamarin.Auth, Version=1.3.0.0, Culture=neutral, PublicKeyToken=null\". I repeat, only when deploy to IPhone directly, on emulator works like a charm.\n\nIt's killing me.\nAppreciate any help.\n\nThanks.   \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/253526411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "diongerritzen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/253743086", "body": "@MarcBruins, I managed to find the blogpost: http://blogs.comtecinfo.com/xamarin-and-oauth2-with-adfs/\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/253743086/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rg42": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/253837816", "body": "I'm sorry @MarcBruins, the blogpost was moved to official site of company. \nThanks @Diongerritzen for providing the correct link.\nFeel free to contact me directly at RG@outlook.in\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/253837816/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "SirLanceLang": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/253849361", "body": "Mathilde, if you look in issues, then:\nPrevent duplicate handling of redirect page loaded #127\n\nhas actually solved the problem (For me at least)\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/253849361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "maftrapp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/255086763", "body": "@rashidovich \n\nI got it working by first uninstalling Xamarin.Auth and then installing PCLCrypto 0.5.0.14108 for iOS and the general project, then I reinstalled Wamarin.Auth 1.3.1 for iOS and the general project. Once I set the entitlements.plist it worked :)\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/255086763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "miiitch": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/255769988", "body": "Same issue for me. endless loop. \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/255769988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/256918048", "body": "I have the issue in 1.3.1.1 \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/256918048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/256920037", "body": "This is not so simple (https://leastprivilege.com/2016/01/17/which-openid-connectoauth-2-o-flow-is-the-right-one/). authorization code allows you to connect with third party provider this is a good thing for security \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/256920037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Beej126": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/256238670", "body": "in my case this error came from referencing the compiled DLL from \"PCLProj\" in an \"iOSProj\", where iOSProj was referencing a different version of PCLCrypto than PCLProj...  the **build error messages offered zero clues to this underlying issue**\\* from what i can see, even with full debug output enabled in VSTS... \n\nand interestingly, this build error **did not happen on Visual/Xamarin Studio to iOS Simulator builds**, only in VSTS.\n\nit turns out i actually didn't actually need to reference PCLCrypto in iOSProj for now so i might've been able to stick with precompiled DLL reference... but given general preference to follow evolving package versions, and might wind up needing those libs directly in iOSProj, and forget about this hidden \"sharp edge\", i decided to go ahead and include full PCLProj code in iOSProj's solution.\n\nafter ironing that out, i was able to nuget reference latest versions of all dependencies solely in PCLProj - Xamarin.Auth v1.3.1.1, Validation v2.3.7 and PCLCrypto v2.0.147\n\ni can also confirm even though it's a Xamarin Forms iOS/Android solution and latest PCLCrypto nuget pulls in several Windows'y looking nugets (PInvoke.Kernel32, PInvoke.Windows.Core, etc), the app runs fine on iOS... presumably they get dropped out accordingly through conditional linking or some such.\n\nfor the record, PCLProj in this case is [Auth0Client](https://github.com/auth0/Xamarin.Auth0Client) ... they do provide a prepackaged [Xamarin Component](https://components.xamarin.com/view/auth0client) (sortof a NuGet alternative) but it has references to older versions of the aforementioned dependencies which winds up wonky.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/256238670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "LuigiMaestrelli": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/257120547", "body": "Any news about this issue?\nI'm facing the same problem.\nI'm testing on iOS 10.1. \nTesting on 9.3 works\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/257120547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "aimore": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/257813052", "body": "@mstrong64 I did this, now it creates a new keychain, but still one issue to delete the keychain after logout... and to retrieve stored accounts does not work properly.\nPS: just on iOS 10.0\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/257813052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "fbencosme": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/257987944", "body": "Any updates on this?\nI am having the same issue =/\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/257987944/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 1, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "joseprl89": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/259451531", "body": "Has this been solved or not?\n\nI am rather confused on this because:\n- When I looked around the codebase, the security hole looked obvious and I checked issues.\n- This led me to this issue, which refers to 1.3.1-alpha.\n- The last release according to the Github releases tab is 1.2.2.\n- Had to look through the history, which pointed me to:\n- \\- Master branch being years old.\n- \\- Windows test branch being also years old.\n- \\- A non obvious branch contains now all the development and is somewhat up to date.\n\nAfter looking into the code on the branch that looks to be the latest, I see that there's still the password, but I believe it is only used to migrate from the old password to the new one old clients. Is that the case?\n\nJust to help people following my path in the future, could you:\n- Close the issue as resolved if it is. I believe it is since I found the version 1.3.1.1 in Nuget, which I assume is newer than 1.3.1-alpha\n- Tag the releases that are not tagged between 1.2.2 and 1.3.1.1.\n- Bring Master up to date containing the last stable release.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/259451531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ericbrunner": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/261119318", "body": "@sushihangover Thanks . \n\nAccording to the 1st SO ref it was enough to add an empty entitlements file to the bundle signing configuration:\n\n```\n<PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Debug|iPhoneSimulator' \">\n\n <CodesignEntitlements>Entitlements.plist</CodesignEntitlements>\n</PropertyGroup>\n```\n\nEmpty Entitlements.plist file:\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-  1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n</dict>\n</plist>\n```\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/261119318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "djonpereira": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/262294082", "body": "Hi Kevin,\r\nDid u manage to solve this issue?\r\nI'm having the same problem... \r\nMy implementation works fine in Postman... but when i try to get something directly from my app i get no response... I need to use the Authorize filter... and it's getting blocked on the server or not getting there at all...", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/262294082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/262470300", "body": "Thanks Kevin,\r\nI manage to make a call using a HttpClient like so...\r\n\r\nHttpClient client = new HttpClient();\r\n            client.DefaultRequestHeaders.Accept.Clear();\r\n            client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue(\"application/json\"));\r\n            client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", access_token);\r\n\r\n            HttpResponseMessage response = await client.GetAsync(new Uri(getUserUrl));\r\n            if (response.IsSuccessStatusCode)\r\n            {\r\n                var responseString = await response.Content.ReadAsStringAsync();\r\n                responseString = responseString.Replace(@\"\\\", string.Empty).Trim(new char[] { '\\\"' });\r\n                var responseJson = JObject.Parse(responseString);\r\n\r\n                builder.SetTitle(\"Logged in\");\r\n                builder.SetMessage(\"AccessToken: \" + responseJson[\"access_token\"]);\r\n            }\r\n            else {\r\n                builder.SetTitle(\"Error\");\r\n            }\r\n\r\nI'll take a look at your solution...", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/262470300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "fschwiet": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/265011903", "body": "I got into this situation while instrumenting my code to hit some stress scenarios.  This seems pretty nasty though since users need to clear application data to get past it.  We could probably write code to detect this then delete the platform-specific file that would have been corrupted (forcing the user to login in again).  This hasn't shown up in our customer logs though to justify putting in such code.  It seems more appropriate for Xamarin.Auth to detect when the account store is corrupted and remove the corrupted file, rather than crash the application.", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/265011903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/265186987", "body": "@thomasvdb Personally I could use a copy of the code if you could share a snippet.  I haven't looked into how to locate the file, it would save me some time.", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/265186987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "JonDouglas": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/265800111", "body": "@moljac I believe the easiest fix would be to require the `Xamarin.Auth` package to depend on a stable or greater version of PCLCrypto. Currently it pulls in the first-ever stable of PCLCrypto which is:\r\n\r\nhttps://www.nuget.org/packages/PCLCrypto/0.5.0.14108\r\n\r\nAnd thus tries to install `Validation 2.0.4`. \r\n\r\nIt needs to support `Validation 2.2.8` at minimum for `Xamarin.iOS10` support. Thus a `>=` to the https://www.nuget.org/packages/PCLCrypto/2.0.147 would resolve this problem.\r\n\r\nhttps://www.nuget.org/packages/xamarin.auth", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/265800111/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/265800505", "body": "To work around this. You would need to install the `PCLCrytpo` latest Stable NuGet first and then `Xamarin.Auth`. The package should be fixed to not have to do this.", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/265800505/reactions", "total_count": 4, "+1": 3, "-1": 0, "laugh": 0, "hooray": 1, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "yngndrw-sage": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/266056763", "body": "> @moljac: Jimmy's code was added while ago, but during the work on the Evolve16 labs it was decided to be extracted into separate nuget Xamarin.Auth.Extensions which will depend on Xamarin.Auth. This decision was made based on discussion that Refresh Token requesting is not part of the standard and for some users it may raise security issues.\r\n\r\nSorry for the rather late response on this, but I don't believe refresh tokens should be outside of the scope of Xamarun.Auth.\r\n\r\nFirst of all, refresh tokens are included in the main OAuth 2.0 specification / framework: https://tools.ietf.org/html/rfc6749#section-1.5\r\n\r\nRefresh tokens are an integral part of the security that OAuth 2.0 offers. Without them you have to resort to access tokens with a long expiry and as access tokens cannot always be revoked, this potentially leaves a hole where an attacker could perform operations against a user's data without a way of resolving the issue.\r\n\r\nTo clarify on my statement that access tokens cannot always be revoked, if you look at the OAuth 2.0 token revocation document (https://tools.ietf.org/html/rfc7009#section-2) you'll see that while you **must** be able to revoke refresh tokens, you only **should** be able to revoke access tokens.\r\n\r\nGoogle allow revocation of access tokens but they are a special case where the resource application is controlled by the identity provider. The OAuth 2.0 token revocation document goes into further details about the implementation of this (https://tools.ietf.org/html/rfc7009#section-3), but one of the key selling points of OAuth is that the access token can be self contained and therefore the resource server does not need to go back to the authorisation server in order to verify the token. This means that in a generic OAuth 2.0 implementation, the only point at which we can guarantee that the identity provider will be able to revoke a token is during a refresh.\r\n\r\nFor this reason and because this library is a generic implementation and not Google / Facebook specific, there are a couple of things that I believe Xamarin.Auth should do in order to help users of this library ensure the security of their applications:\r\n1) Ensure that refresh token support is a first class citizen of the library - This means not putting it in a separate extension method / namespace.\r\n2) Do not support persistence of access tokens and never demonstrate this in the samples - As a best practice, access tokens should be requested with a short lifetime (8 hours maximum ?) and held in memory only for the duration of the process. In order to prevent the user from having to log in every time they start the application, refresh tokens should be persisted (Securely, in an encrypted form) and exchanged for an access token on startup if available. Encrypting an access token and storing it in a device key-store or similar is, in my opinion, always an \"OAuth anti-pattern\".\r\n3) Provide example usage which includes refresh token handling in the main getting started samples.\r\n\r\nIf implemented correctly, refresh tokens increase security rather than decreasing it.\r\n\r\n-Andrew.", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/266056763/reactions", "total_count": 6, "+1": 6, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/268572250", "body": "This should be the version of ```OAuth2Authenticator``` as of the v1.3.0 NuGet release:\r\nhttps://github.com/xamarin/Xamarin.Auth/blob/ad7f6d6453506ced0ab3af499a7492f13973e3a3/source/Xamarin.Auth.LinkSource/OAuth2Authenticator.cs\r\n\r\nYou could probably override ```OnCreatingInitialUrl```:\r\nhttps://github.com/xamarin/Xamarin.Auth/blob/ad7f6d6453506ced0ab3af499a7492f13973e3a3/source/Xamarin.Auth.LinkSource/OAuth2Authenticator.cs#L322\r\n\r\nThe ```RequestParameters``` property doesn't look to be used from what I can see, or at least not in that version.\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/268572250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dnfclas": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/267796705", "body": "Hi __@jamesmontemagno__, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\r\n    <span>You've already signed the contribution license agreement. Thanks!</span>\r\n        <p>The agreement was validated by .NET Foundation and real humans are currently evaluating your PR.</p>\r\n\r\nTTYL, DNFBOT;\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/267796705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "candidodmv": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/267937700", "body": "Hi @jbogard @moljac ! How have going this implementation? Could please give a usage sample?\r\nThanks!", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/267937700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "giggio": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/comments/7857880", "body": "I just pulled down the nuget for version 1.2.2.0, and this is not available yet. Any idea of when this is being published?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/comments/7857880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "Lapinou42": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/comments/22698189", "body": "Hello, \r\nsince you added the NoHistory flag, when the user start the custom tabs to sign in, if he closes the app (to background) then launch again, the custom tab is closed. The thing if we use authentication with phone number. So something, users switch to app Messages to see his code number then go back to the app. ", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/comments/22698189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "Therzok": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/18812044", "body": "Style: Space before parentheses `(`.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/18812044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/18812050", "body": "Style: Space before parentheses `(`.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/18812050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}}}}