{"_default": {"1": {"erisrayanesh": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/846", "title": "parameters argument for partial is missed", "body": "https://github.com/phalcon/incubator/blob/eb7d17522cb4037c3359faa6a32a11f4387b83c3/Library/Phalcon/Mvc/View/Engine/Twig.php#L58\r\n\r\nHi there. \r\nI think parameters argument for partial is missed", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bestirani2": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/817", "title": "Database adapter for session", "body": "I get error after using regenerateId for database session\r\nmy problme solved after remove session_destroy()  at line 208\r\nhttps://github.com/phalcon/incubator/blob/master/Library/Phalcon/Session/Adapter/Database.php\r\nI think it is a loop.\r\n\r\n\r\n### Details\r\n* Phalcon Framework version:3.2\r\n* Phalcon Incubator version: 3.2\r\n* PHP Version: 7\r\n* Operating System: Ubuntu\r\n* Server: Nginx \r\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/817/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Jenselme": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/815", "title": "Slug doesn't revert locale correctly", "body": "### Expected and Actual Behavior\r\n\r\nI am using [Slug.php](https://github.com/phalcon/incubator/blob/master/Library/Phalcon/Utils/Slug.php) to generate slugs in a phalcon project. The project is configured to display the dates in French. However, after I generate a slug, the dates are in English. If I don't create a slug, the dates are in French as expected.\r\n\r\nI expect the date to be always in French.\r\n\r\nLocale value (from `setlocale(LC_ALL, '0');`):\r\n```\r\nLC_CTYPE=C;LC_NUMERIC=C;LC_TIME=fr_FR.utf8;LC_COLLATE=C;LC_MONETARY=C;LC_MESSAGES=C;LC_PAPER=C;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=C;LC_IDENTIFICATION=C\r\n```\r\n\r\nI use the Slug like this:\r\n\r\n```php\r\n$slug = SlugGenerator::generate($str);\r\n```\r\nSample controller:\r\n\r\n```php\r\n<?php\r\n\r\nnamespace Controllers;\r\n\r\nuse Phalcon\\Utils\\Slug;\r\n\r\nclass TestController extends Base\\ViewController\r\n{\r\n    public function indexAction()\r\n    {\r\n        $this->view->setVars(['slug' => Slug::generate('\u00e0 moi')]);\r\n    }\r\n}\r\n```\r\n\r\nSample view\r\n```volt\r\n<div class=\"row page-content sale\">\r\n    {{ slug }}\r\n\r\n    <div class=\"date\">\r\n        <span class=\"day-string\">{{ strftime(\"%a\", strtotime('2017-10-22T08:00:00.000Z')) }}</span>\r\n        <span class=\"day\">{{ strftime(\"%d\", strtotime('2017-10-22T08:00:00.000Z')) }}</span>\r\n        <span class=\"month\">{{ strftime(\"%b\", strtotime('2017-10-22T08:00:00.000Z')) }}</span>\r\n    </div>\r\n</div>\r\n```\r\n\r\nI was able to track  the error to [this line](https://github.com/phalcon/incubator/blob/master/Library/Phalcon/Utils/Slug.php#L81): if I comment it, the locales are correctly restaure. Is the operation it does really required?\r\n\r\n### Details\r\n\r\n* Phalcon Framework version: 3.2.1\r\n* Phalcon Incubator version: v3.2.2\r\n* PHP Version: 7.1.6\r\n* Operating System: Linux inside docker\r\n* Server: Nginx\r\n* Other related info (Database, table schema): NA\r\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "galki": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/814", "title": "graphql support", "body": "graphql is getting popular. after using graphql in a python project i dont want to go back to REST anymore. however phalcon is my only choice in php. i thus desire graphql support. also, i believe support will be inevitable in the near future as graphql overtakes rest/routing/acl - although this is a personal assumption.\r\n\r\nthere is [various php support](https://github.com/chentsulin/awesome-graphql#lib-php) and as you can see from that list frameworks like laravel and symphony already provide custom support.\r\n\r\nplease consider creating orm support for graphql (if you dont ill have to learn python/django)", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/814/reactions", "total_count": 5, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tkroll": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/808", "title": "MongoCollection::find now requires fields param to be associative array", "body": "Old code using the fields param as an array now fails with only the _id returned.\r\n\r\n`$blah = Blah::find([`\r\n `'fields' => ['a', b', c'],`\r\n `'conditions' => ['a' => 1]`\r\n`]);`\r\n\r\nField parms now works when expressed with the field as the key and 1 as the value:\r\n\r\n`$blah = Blah::find([`\r\n `   'fields' => [`\r\n`        'a' => 1,`\r\n`        'b' => 1,`\r\n `       'c' => 1`\r\n `   ],`\r\n`    'conditions' => ['a' => 1]`\r\n`]);`\r\n\r\nNot sure why this changed. It does match Mongo shell syntax properly.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sergeyklay": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/801", "title": "[NFR] PostgreSQL row sorting: implement [NULLS { FIRST | LAST }]", "body": "_From @globalundo on April 15, 2013 13:36_\n\nCurrently, on executing following piece of code:\r\n\r\n``` php\r\n$robots = Robots::find(array(\r\n    \"order\" => \"name DESC NULLS LAST\"\r\n));\r\n```\r\n\r\nException rises:\r\n\r\n``` php\r\nPhalcon\\Mvc\\Model\\Exception: Syntax error, unexpected token IDENTIFIER(NULLS), near to ' LAST'\r\n```\r\n\r\n\n\n_Copied from original issue: phalcon/cphalcon#548_", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/796", "title": "Oracle auto incremented ID column is empty after model->save()", "body": "_From @skaosYan on June 8, 2015 9:58_\n\nI have Phalcon 2.0.2 and Oracle 12c. I have created sequence and set getSequnceName() function for my model. But model->save() still raises an error \"ORA-01400: cannot insert NULL\" for a primary key.\n\n\n_Copied from original issue: phalcon/cphalcon#10485_", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/7a51b8e6392d3861384d5372d3121dfe625893a3", "message": "Merge pull request #847 from phalcon/3.2.x\n\nv3.2.6"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/5571692e9b18f7d7d42b7ff9682df70b7b895433", "message": "Merge pull request #845 from sergeysviridenko/3.2.fix_mongo_test\n\nFix undefined method in collection trait"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/eb7d17522cb4037c3359faa6a32a11f4387b83c3", "message": "Merge pull request #844 from phalcon/3.2.x\n\nFixed Travis CI building"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/48d0fdfcff2b748d948e37cf37bbdd27cb82e7f3", "message": "Merge pull request #843 from sergeysviridenko/3.2.fix_test\n\nFixed Travis Ci build"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/3362a5058f7b46b5da27d6905b90b4878b0a7655", "message": "Merge pull request #837 from phalcon/3.2.x\n\n3.2.5"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/042d5257c596deb021e44e5873cd2ad920f2bf98", "message": "Merge pull request #836 from rabrowne85/3.2.x\n\n#835 - Rename of EventManagerTrait.php to EventManagerAwareTrait.php"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/c93c6399a274d74c0b1c00e566b6c65e2d86afb7", "message": "Merge pull request #833 from sergeysviridenko/3.2.mailer_fix\n\nFixed view engines in mailer"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/f8595b41b8d452bddb91d4d2d6adfb0b2b3528db", "message": "Merge pull request #834 from phalcon/3.2.x\n\n3.2.4"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/158a247eb576fd048ebe919b2665790d1140c494", "message": "Merge pull request #832 from sergeysviridenko/3.2.event_nested_set\n\nAdded event manager to nestedSet"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/8cf7cf252b082aa302a038f4a63f1eecd9a42e74", "message": "Merge pull request #824 from sergeysviridenko/3.2.yaml_ext\n\nFixed yaml extension in tests"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/331c5e54a429a309c545b7ed464902785f76e202", "message": "Merge pull request #818 from sergeysviridenko/3.2.iban\n\nAdded IBAN validator"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/08fc3efe2a19f5ac5f2d53a2c2ac96f52aecef85", "message": "Merge pull request #820 from sergeysviridenko/3.2.aerospike_fix\n\nFix aerospike tests"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/a17fd7b5457d05b6e600675c68e698c48b9f7f38", "message": "Merge pull request #819 from ruudboon/patch-1\n\nUpdate README.md"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/6513c03986fd46db163a8c5e7bc5dbc6f6843e95", "message": "Merge pull request #813 from hisune/master\n\nminor mistake of syntax"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/d00e9531440c0ef8ac017fb7ecabb53e724dfd4e", "message": "Merge pull request #811 from baychae/master\n\nAdd Explicit and Implicit Deep Inherits to Phalcon\\Acl\\Adapter\\Redis::addInherit"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/52766a4334e5af8e022cb8b1fc0d85626d623cdd", "message": "Merge pull request #807 from phalcon/3.2.x\n\n3.2.2"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/ff0536134140d66b86b687aa353ab9da9b9e57a7", "message": "Merge pull request #806 from stefanchiriac/master\n\nfix view when engines are objects"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/cf8efed5284f5bbd330b6eaefb9ff6f8b29526d3", "message": "Merge pull request #804 from thesnews/3.2.x\n\nmerges PR #753 onto 3.2.x branch"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/3759821b8c3464a375947390ee7ce436fda45dd8", "message": "Merge pull request #802 from sergeysviridenko/3.2.update_session_adapter\n\nChange query in read method of Session adapter"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/22dd2150899a9b4a8bae8b707b00c97426705c67", "message": "Merge pull request #803 from kideny/master\n\nfixed function's name error"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/d532e31a81d644ba2a7791d2e9277dc50b6f8b36", "message": "Merge pull request #800 from sergeyklay/3.2.x\n\nUse latest stable Phalcon"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/9f155e6e6982373e1a099167e98913abbe298924", "message": "Use latest stable Phalcon"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/e746415cee33086cbb9b876bb418b1acd0dea380", "message": "Merge pull request #795 from Jurigag/3.2.x-collection-id-fix\n\nAvoid double toArray"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/4913dc021fb9ff9569eeb9ee82025b86de1fe6f5", "message": "Merge pull request #792 from phalcon/3.2.x\n\n3.2.0"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/703f51f9cb8bdaa0c60e82611203ce747d088d41", "message": "Merge pull request #790 from sergeyklay/3.2.x\n\nFixed tests"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/2826ae342e4426561f81c9d06708a666aa498fae", "message": "Disabled broken tests (2)"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/d929ffe765bfc0b180a010344ca1dbf232382b84", "message": "Disabled broken tests"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/27e2eba97b180ec7ceaf5b637150627dbdffa5f0", "message": "Disabled Phalcon\\Test\\Mvc\\Model\\EagerLoading\\EagerLoadingTest::testShouldLoadChildOfEmptyParentWithoutException for PHP 5.5\n\nRefs: https://github.com/phalcon/cphalcon/pull/12911\nCc: @michanismus"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/4fe1be48bad21ee7bcf550d99b3e6ccb7f156675", "message": "Cleaned .travis.yml"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/b46a00e35564ad7e6d90ade43f4fc18808c6b93f", "message": "Fixed Travis build step"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/baf3c3619544dbe7bb3d2fce556bc5772d64859e", "message": "Fixed composer.json syntax"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/b3f4a083be56646a0cbc9c1ecf08fd3d7867f965", "message": "Updated the docs"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/a5bff2805be8b3be4843f53d8f7f6ef85e1f6613", "message": "Updated Travis CI build config"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/c6ff55bc9168e28070b5d89ae31557bbd21885f5", "message": "Use latest stable Phalcon"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/d4f6fb9e9cd281c14da2e23a81bd85380e73d0ee", "message": "Updated deps"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/14940c28899acfcf705857b83e3e34bd7f705bf1", "message": "Link authors [ci skip]"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/7193e7a779adcf556e1e4a0a7496abc235fb7ee5", "message": "Update the docs [ci skip]"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/dca302e4744b4ca0e62fc6d44c40a05eaa2f8975", "message": "Improved Phalcon\\Utils\\Slug (#774)\n\n* Improved Phalcon\\Utils\\Slug\r\n\r\n* Update Slug.php"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/6d7d5ba21e9a9b15579e436373ed06b343ddc0ca", "message": "Improved build & test process"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/9ecc83570791768a515c583cf3451a4db712ea64", "message": "Skip Collections tests\n\n* testCollectionsSave\n* testCollectionsAggregate\n\n(cherry picked from commit 113c70d)"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/5142017985b1a3172fce81aca442d46964d5690b", "message": "phalcongelist/dd => phalcon/dd\n\n(cherry picked from commit 89884fd)"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/788c7fa95163ee282a04ab2942b03d937a415396", "message": "Improved build & test process"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/3f39a270e47e162a3e06140a337be6acc07aa6a4", "message": "Merge pull request #751 from phalcon/3.1.x\n\n3.1.1"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/9ccde9b72459e20110883e8929ae7a3bef1d28eb", "message": "Do not use the Fork Helper for tests\n\nFor nearly six months, the tests are falling regularly.\nFork is the only dependence, which is constantly fails tests\nIn the future we will deprecate the Fork Helper in favor of\nReactPHP, Promises, etc.\n\nCc: @duncan3dc"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/38047f2ca6d4196bed4499f016e6fbaf72172012", "message": "Do not get Zephir for test PHP"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/f3a7e16f0d8e1c857e62778617e93d36471a473c", "message": "Small improvements and docs changes"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/7a82021f2bfad0f00f308703f153607ba6abdb0b", "message": "We have to test Incubator but not Phalcon"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/8be210ba6a3e1fa63c9ed2f38dc837f26c54e591", "message": "Update .travis.yml"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/0d66e9e65cd180ee018123822850d3a1c9640021", "message": "Merge branch 'master' into 3.1.x"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/de9ecc77199d259e0b069e249b137b05a7374355", "message": "Improved Phalcon\\Tests\\Queue\\Beanstalk\\ExtendedTest"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/f8290cd046d50549c953b987b92830f944cf3b22", "message": "Cleaned Beanstalk ExtendedTest"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/d8962d80a5d0fc537ad197fdedde70a966990912", "message": "Be verbose on tests"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/03aaa4df18de241c33d23ec3c53bc3e7fa510189", "message": "Fixed tests (#741)\n\n* Small cleanup\r\n\r\n* Be verbose on tests\r\n\r\n* Cleaned Beanstalk ExtendedTest"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/6d36f41173c49df87e628c9da01aeb1663ef185c", "message": "Improved Phalcon\\Tests\\Queue\\Beanstalk\\ExtendedTest"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/df4d5728c0708a14cb7fdb4b5d0d3347bbe841c7", "message": "Use latest Phalcon"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/c7929af8c3a9cce137c21784f40ecb676e9df44a", "message": "Speed up Travis CI build"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/7003d798264652f3c819ad8ce34c8debafc5d040", "message": "Introduced install_common.sh"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/ed218d34d434f2939a4723a44861ebc9ba342080", "message": "Fixed install_prereqs"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/32df937d2ea0cfd810a940afd75ff760560ccae9", "message": "Fixed Travis CI build"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/1810882aa5cec0a2beb0a4825f776001e8112fad", "message": "Install Imagick"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/a28c7068b3e220c459fa1f529efe5afb8a6b82c3", "message": "Used latest Phalcon"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/ac3d8c1abe92b56899a6b72c5f902ac25af616ab", "message": "Fixed tests (#741)\n\n* Small cleanup\r\n\r\n* Be verbose on tests\r\n\r\n* Cleaned Beanstalk ExtendedTest"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/442879abe50197e599361d392e03553d9d627f1d", "message": "Improved Phalcon\\Tests\\Queue\\Beanstalk\\ExtendedTest"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/bce53a03210aa055a3d4cabb75cf2b56244b72f1", "message": "Use latest Phalcon"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/5565f87b8e6220c1e6b8c0ea390788e489792725", "message": "Merge pull request #724 from cottton/patch-4\n\nCurl::initPostFields checks for \\CURLFile"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/800d264581acbe32a43564daa6c82ad1d5f09f27", "message": "Merge pull request #719 from ulfims/master\n\nFixing #718 : Dialect Oracle not working"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/be09ffdabe38a5c87a3a579a0c002a769659650b", "message": "Merge pull request #721 from sergeyklay/3.0.x\n\nUsed latest Phalcon"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/34bbcedfc685907035f01afbbd91788ab82845d4", "message": "Speed up Travis CI build"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/b59d6c2367ce6c0b766a4f0dbd4578afa5a320ca", "message": "Introduced install_common.sh"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/2f6fca92f0201f11e24b9c9b7ef65cfd9803e107", "message": "Fixed install_prereqs"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/5007552850c8cf4966563bc8c6f2851d4971d266", "message": "Fixed Travis CI build"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/93085adfe7814f0a499db47f530281187eeecae5", "message": "Install Imagick"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/4326f767f726920f52c477b6cebf53473de741ef", "message": "Used latest Phalcon"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/d34e982db3c754712328f5bfff69611fd9a675f1", "message": "Merge pull request #709 from phalcon/3.0.x\n\n3.0.3"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/1fa47bc9820e93f6ec7445ca4e52a08f676c1eeb", "message": "Merge pull request #715 from sergeyklay/feature/extend/annotations\n\nAdded Phalcon\\Annotations\\Extended\\Adapter"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/b0fb51c3d97200b007f84faa7d278b49361a52d0", "message": "Introduced Phalcon\\Annotations\\Extended\\Adapter"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/a553d80718a2072976b6b27757be50f188c0df9a", "message": "Merge pull request #717 from sergeyklay/3.0.x\n\nFixed ConfigurableTrait"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/4a34aa6122cdb825a4b62efd662e33cad97f087c", "message": "Fixed ConfigurableTrait"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/b722efee1c3c0e8a8447515040631e4f2da687a5", "message": "Merge pull request #716 from arielallon/3.0.x\n\nreplacing preg_match with a strpos. lighter weight."}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/14a0e8826ba5cd5fa9d530f3bc338f6b05626007", "message": "Merge pull request #713 from sergeyklay/fixes/http/client/curl\n\nFixed Phalcon\\Http\\Client\\Header::get"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/9ffbbcc88dc1cc063ec721b35744b7550bab6a85", "message": "Fixed #685 issue"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/1cd3fd6e6a9ddd73ff2f0d58b110a88eb0fdf802", "message": "Merge pull request #712 from sergeyklay/fixes/http/client/curl\n\nPhalcon\\Http\\Client\\Provider\\Curl::send"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/0cb33e474c3c935c78f8f515141d6d41f19d8a57", "message": "Fixed #687 issue"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/7e3e0fa6e597e63644ed8d95724568c019796952", "message": "Merge pull request #711 from sergeyklay/feature/traits\n\nAdded Traits namespace"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/c12d5e17c02901240816d8c8e13b7bc19e0588bc", "message": "Updated README.md [ci skip]"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/96ee552a791f1fa352d04623c65e3111ba0de5cc", "message": "Added Traits namespace"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/7a22996420e4a36720820ea4df893d5114786547", "message": "Merge pull request #710 from sergeyklay/3.0.x\n\nCleaned Mongo classes"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/56e8c5e9a604c1613fce0286e2b08f24ff295676", "message": "Cleaned Mongo classes"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/10d884d8d6d3a2054b407731d1036a907fc5d6c5", "message": "Merge pull request #708 from sergeyklay/fixed/mongo-collection\n\nFixed MongoCollection"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/ed49fd72a6fd732d091041b06030fbf95585911c", "message": "Fixed Aerospike::exists"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/038321d4b9b5e965d10ad2707b1a5475193f6cb6", "message": "Fixed issue #696"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/2512f5df84d6a9507a2d3dc0aa7ef2563c7f8b9d", "message": "Cleaned PasswordStrengthTest"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/fdde4b6c884b94cfdd43c69bbde76b909a415381", "message": "Cleaned MongoCollection test"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/136fc323e4e0c4047d7c0cae7ee1dd12f7d9ee38", "message": "Cleaned MongoCollection"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/d0caa2a8b56287f67a57cfec00e18af01521d1cb", "message": "Merge pull request #706 from sergeyklay/3.0.x\n\nCheck for DI in error handler"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/3df086e275b76dccb22ad2c5f1328348716a9d79", "message": "Check for DI in error handler"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/014b532a290cf1524aa20ad012b1989fc21ab685", "message": "Merge pull request #705 from sergeyklay/feature/mongo-translation-adapter\n\nAdded Mongo translation adapter to work with collections."}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/514326f781d2f58b6fde880026a81db7db85717a", "message": "Merge pull request #703 from sergeyklay/feature/aerospike/flush\n\nAdded flush method to Aerospike"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/898eccdb5f2d8decd949f3337b06cafbf1ece209", "message": "Merge pull request #699 from sergeyklay/3.0.x\n\nRefacrored tests, minor Aerospike improvements"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/027587dc068a00d2f1026d6f085fe92ebc87c19f", "message": "Refacored build steps on Travis CI"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/e35352e27fb25521686da4acc82bbffa208c206b", "message": "Merge pull request #671 from phalcon/3.0.x\n\n3.0.2"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/0fcc3225af108312a00efc45b75271bb3aaad477", "message": "Merge pull request #697 from sergeyklay/3.0.x\n\nAdded Phalcon 3.0.2 test support"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/bee79f53b2726fe95cb11dde30d805935ac7a542", "message": "Fixed Aerospike tests"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/8cd7521340261949d58326cce416c3286ae18e89", "message": "Added Phalcon 3.0.2 test support"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/fe4cac6511e10cb87b80fb679dfec8a34c364e86", "message": "Merge pull request #691 from sgenov/master\n\nFix an issue with double quotes"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/bbeebb273f0980c5904b5b5e3bedf7d611396c3b", "message": "Merge pull request #695 from sergeyklay/3.0.x\n\nUpdated Db docs"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/de71a6deb0a636d46d9f32112c95142ba04ddaaf", "message": "Updated Db docs [ci skip]"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/e00a73319c481f7321afded127578f917c6cce64", "message": "Merge pull request #693 from sergeyklay/3.0.x\n\nFixed #689 issue"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/b835a627cb5a1889161ba5e4176d7514558d2fea", "message": "Fix codeception bug"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/65de9998c7c44babc14159fe07443b121cd11326", "message": "Fixed #689 issue"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/1bed06cd538c321837e146df44cdf33c6fe242cb", "message": "Merge pull request #692 from sergeyklay/3.0.x\n\nFixed #684 issue"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/5569a8e839a24f839061d78705ae6e658dbca3ac", "message": "Fixed #684 issue"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/c0bc41761b0747ca5e13888bb4a7a2f591f7947a", "message": "Merge pull request #688 from cottton/patch-2\n\nImproving usage of parameter 1 \"customHeader\"."}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/f234a70cf02643fb3c5fb0f374e120178ad89001", "message": "Merge pull request #680 from SidRoberts/patch-1\n\nFixed recursive method call"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/6d4cbb8a7859b54ce83b5a76230e39dea1d635e9", "message": "Merge pull request #676 from pantaovay/3.0.x\n\nBug Fix: curl response content contains header"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/768f09c55c8f7f50165aea4610e2058d0161a965", "message": "Merge pull request #679 from Ark4ne/3.0.x\n\nfix(Http\\Client\\Provider\\Curl): CURLOPT_HEADER doesn't need to be set\u2026"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/a1d4fd00857734191bb4ab07c461fbde86b13413", "message": "Merge pull request #673 from sergeyklay/3.0.x\n\nFixed Phalcon\\Acl\\Adapter\\Redis"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/9ac9440dcb71c99a9d8df9a1b76e33645ede268e", "message": "Fixed Phalcon\\Acl\\Adapter\\Redis"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/f2938aa99ab39be2eeb8bc70d9cb37d7d0a7404e", "message": "Merge pull request #672 from duncan3dc/fork-helper-2.0\n\nUpdate the beanstalk queue to use duncan3dc/fork-helper:2.0"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/953d69ecb6e71a5dda8f402c8eee43cf68c7244a", "message": "Merge pull request #670 from sergeyklay/3.0.x\n\nFixed issue #438"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/21e18b2436c60a77d6c1555d902b58ba447459b2", "message": "Fixed issue #438 [ci skip]"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/afbff883347e6afe2dff305017579a90a281296c", "message": "amended README.md"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/4ddd06b2305f47674383b39062f7eb863a515fcd", "message": "Update license"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/46c30f214ffcf2dcb03fea2c3a7dac845a71fe7a", "message": "Merge pull request #669 from sergeyklay/3.0.x\n\nImproved testing process"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/280c0111b18a6484d8becf061b032fac809e5673", "message": "Silent mode"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/3559c3b75ab9099090db701a817b3cca02171257", "message": "Cleaned build.sh"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/8bf6e404b28fc0f2507f7299cda30e7a6518da09", "message": "Merge pull request #666 from sergeyklay/3.0.x\n\nCleaned tests"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/7a17eb2768b3824c5f1b500ab475cf27ec1af6d0", "message": "Cleaned tests"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/b511bda08a7e6bdcefb17c97e9be15b1a356778f", "message": "Merge pull request #662 from mctekk/3.0.x\n\nfix issue with queue failing after 1 call"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/acdfcbb3c14af995372f52c5c2da2543f173aeff", "message": "Merge pull request #665 from metaliciouz/master\n\nFix `getConfig` function in `UnitTestCase` class"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/82aa8c7d23272b164a1d24989c6b3a25d94be589", "message": "Merge pull request #657 from phalcon/3.0.x\n\n3.0.1"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/5b6f377072ff5a3bceebe24b7afd747e5abe6785", "message": "Merge pull request #660 from sergeyklay/3.0.x\n\nCleaned tests"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/1bbc26659d734c90fcc9ea92514159dbc7c60a6b", "message": "Cleaned tests"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/937a0cbc7af79de11d95317fe13327577ea068d7", "message": "Merge pull request #658 from sergeyklay/3.0.x\n\nEnabled tests for Phalcon 3.0.1"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/ea50f74b76fb22c891d56cac1dadfd639158ea87", "message": "Enabled Aerospike tests for PHP 7"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/de11965f8c79a5b3550e1a649a790bff47bee083", "message": "Enabled tests for Phalcon 3.0.1"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/0d429cdcf52efa41cc4b2b911ad3eaa5f00f99da", "message": "Merge pull request #655 from sergeyklay/3.0.x\n\nSupport of PHP 7 (Phalcon\\Error\\Handler)"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/be497e988731bf18770ebfdaa850b712efd10ee9", "message": "Support of PHP 7 (Phalcon\\Error\\Handler)"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/f10580800b9b4cc7b507d93700e896eecda69466", "message": "Merge pull request #654 from sergeyklay/3.0.x\n\nAmended MysqlExtended description"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/719f5b4200bd534ff5877e782d3ef47c4b1af772", "message": "Amended MysqlExtended description"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/a72891bce0d5107f12ce8bc36c2e556fac2cb46a", "message": "Merge pull request #652 from phalcon/3.0.x\n\nBump version"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/e9f83b88d5b1cadaf37fe9946467e47a9e1861a4", "message": "Merge pull request #653 from sergeyklay/3.0.x\n\nFixed PSR errors"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/2b0dba9da16bb1cc9182837e577f41409d7f180f", "message": "Fixed PSR errors"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/263fd7546fae266c9cb2f864a4d3225939027b5d", "message": "Test stable Phalcon"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/7cd0e91aadce7229c1d1c5732e4bb52cd74d2e17", "message": "Bump version"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/93935d23484588632e28918ac132b2ff13f7eaa3", "message": "Updated dependencies"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/f43c3949ee10a348d30baa7fc0599a9f45cc6857", "message": "Updated doc"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/b8eeee9011fd67fa73b238dceb04d56a44dbfe81", "message": "Cleaned Phalcon\\Db\\Dialect\\MysqlExtended"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/be78e8e644ca4822eacadd3b75b009ba8553a77a", "message": "Used original class names"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/b4da84a0191f427cb8090ca4d5571a643b2cfbe6", "message": "Added Phalcon\\Db\\Adapter\\Pdo\\Oracle"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/5faae102bd87b7a506d255778bd17a33e04e0ba7", "message": "Implemented Phalcon\\Db\\Dialect\\Oracle"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/7c4fbf65f94e1eeb5585ba97af8a3e7152587d73", "message": "Fixed Phalcon\\Test\\Db\\Adapter\\FactoryTest"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/0743ec9ff9cb7f9738c1d6b6adc9ce1bb55fe2f2", "message": "Fixed PSR errors"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/460be57fe3756ab824cfe989235f530c92f76f50", "message": "Added ability to use \"exclude\" option in Uniqueness Validator"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/f472c75148f26236906cf6bd55b662fe09e823d1", "message": "Amended Phalcon\\Http\\Client\\Provider\\Curl. Added setAuth and setCookies"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/ebed6fc5b48ab3eaac83f7dadc6a8d39927d5512", "message": "Update Zephir runner"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/2119c433aa57d52e4a0812f6ad71f669d710fb17", "message": "Improved Phalcon build"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/b57bd08e54129ed828f531d2edbb864c44c3b8c7", "message": "Amended authors"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/f9535ff260ef31271b037d39d694f8933b8c7b9b", "message": "Fixed PHP  7 tests"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/d0ad7fb4e735e69d4dfc0302827417e870df8e50", "message": "Build Phalcon on PHP 7"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/9ff61d709be21db047990712e7ff9dee38362f8d", "message": "Disable Aerospike tests on PHP 7"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/c0ddbe65de594fe67a4523d89e7ac6f9813de1f9", "message": "Improved Travis CI build"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/93892ce775481587843608544022571f89fbc84c", "message": "Code cleanup"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/cd5bf25ca8912103b9df0c94ccf3fc0126f4535b", "message": "Fix installing Phalcon"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/comments/13858634", "body": "Don't use `sudo`.\nWe use  [container-based infrastructure](http://docs.travis-ci.com/user/workers/container-based-infrastructure/) like Docker.\nFor container-based infrastructure Travis disallow to use `sudo`.\n\nInstead of this use in .travis.yml\n\n``` yaml\nservices:\n  - mongodb\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/comments/13858634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/comments/21382146", "body": "Is it changed by mistake? Could you please open a new issue with code to reproduce the problem", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/comments/21382146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/comments/21424695", "body": "Anyway we need an issue. Could you please open a new one?", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/comments/21424695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/23128121", "body": "Fix it for compliance with the PSR-2 and in order to avoid the warning from Travis CI\n\n``` php\nreturn $this->db->execute(\n    'INSERT INTO ' . $this->table . ' VALUES(NULL, ?, ?, ?, ?, ?)',\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/23128121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/23128129", "body": "Fix it for compliance with the PSR-2 and in order to avoid the warning from Travis CI\n\n``` php\nif (!$this->db) {\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/23128129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/23461179", "body": "``` php\n$message = $this->getOption('message') ?: 'IPv4 is incorrect';\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/23461179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/24515234", "body": "Can you please use 8 spaces here to avoid Travis Ci build warnings?\n\nNote. We run tests with PSR-2 check:\n\n``` sh\nphp vendor/bin/phpcs --standard=PSR2 --encoding=utf-8 Library/\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/24515234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/27488470", "body": "@Green-Cat Can u fix this?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/27488470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29548196", "body": "aliasing is accomplished with the `use` operator, see above:\n\n``` php\nuse Phalcon\\DiInterface;\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29548196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29548200", "body": "`\\Phalcon\\DiInterface` \u2192 `DiInterface`\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29548200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29603983", "body": "Return back indents please\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29603983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29603992", "body": "Return back indents please\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29603992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29604013", "body": "Return this back please\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29604013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29604215", "body": "Return `options` and `userFunctions` back please.\n\nSee http://stackoverflow.com/questions/15413829/why-does-php-allow-incompatible-constructors\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29604215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29604272", "body": "Return indents back please\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29604272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29783164", "body": "``` php\n@param \\Phalcon\\DiInterface $dependencyInjector\npublic function __construct($view, DiInterface $di = null, $options = array(), $userFunctions = array())\n```\n\nand here\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29783164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29783170", "body": "``` php\n @param \\Phalcon\\DiInterface $di\n\npublic function __construct($view, DiInterface $dependencyInjector = null)\n```\n\n$di or $dependencyInjector ?\nFor what purpose you rename it? What are the benefits?\n\nreturn back `$di` please\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29783170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29783303", "body": "return back $options please\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29783303/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29783327", "body": "Why?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29783327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29920789", "body": "Line exceeds 120 characters; contains 126 characters.\nCan u do something with this?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29920789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31576171", "body": "Can you fix this? \nWe use PSR-2 and tests too\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31576171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31576201", "body": "and this\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31576201/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31576717", "body": "`TRUE` \u2192 `true`\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31576717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31576758", "body": "`NULL` \u2192 `null`\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31576758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31576889", "body": "`if (! $` \u2192 `if (!$`\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31576889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31576915", "body": "`empty (` \u2192 `empty(`\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31576915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31600219", "body": "http://www.php-fig.org/psr/psr-2/\n\n> Opening parentheses for control structures MUST NOT have a space after them, and closing parentheses for control structures MUST NOT have a space before.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31600219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31600340", "body": "This is not the same, but usually all follow this rule\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31600340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31600992", "body": "Correct PSR CS:\n\n``` php\nuse Phalcon\\Mvc\\Model\\Relation;\nuse Phalcon\\Mvc\\Model\\Resultset;\nuse Phalcon\\Mvc\\Model\\Query\\Builder;\n```\n\n`use` per line\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31600992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31601329", "body": "@stibiumz \nOk. Let's test this:\n\n``` sh\n$ cat test.php \n```\n\n**Test 1:**\n\n``` php\n<?php namespace Foo\\Bar;\n/**\n * Doc\n *\n * PHP version 5\n *\n * @category Bar\n * @package  Foo\n * @author   Display Name <username@example.com>\n * @license  MIT http://mit.com\n * @link     http://site.com\n */\n\nif (!false) {\n\n}\n```\n\nrun test\n\n``` sh\n$ phpcs test.php  # phpcs \u2014 Is a PHP Code Sniffer\n\n\nFILE: /srv/http/test/test.php\n----------------------------------------------------------------------\nFOUND 1 ERROR AFFECTING 1 LINE\n----------------------------------------------------------------------\n 1 | ERROR | Missing file doc comment\n----------------------------------------------------------------------\n\nTime: 23ms; Memory: 1.5Mb\n\n```\n\n**Test 2:**\n\n``` sh\n$ cat test.php \n```\n\n``` php\n<?php\n/**\n * Doc\n *\n * PHP version 5\n *\n * @category Bar\n * @package  Foo\n * @author   Display Name <username@example.com>\n * @license  MIT http://mit.com\n * @link     http://site.com\n */\n\nnamespace Foo\\Bar;\n\nif (!false) {\n\n}\n```\n\nrun test\n\n``` sh\n$ phpcs test.php  # phpcs \u2014 Is a PHP Code Sniffer\n# ok\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31601329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31601794", "body": "@stibiumz \nYou're right. But:\n\n> This is not the same, but usually all follow this rule\n\nThis is just common incubator style.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31601794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/32204364", "body": "PSR-2\n`No space found after comma in function call`\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/32204364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/35952705", "body": "Expected 1 newline at end of file; 0 found\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/35952705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/39349862", "body": "Can you please rename alias to `DbAdapter`?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/39349862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/39349866", "body": "`DbAdapter|null`\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/39349866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/39349874", "body": "add please `@throws` annotation\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/39349874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/39350693", "body": "How about something like this? :grinning: \n\n``` php\n$this->db = $this->db ?: $model->getDi()->has('db') ? $model->getDi()->get('db') : null;\n\nif (!$this->db) {\n    throw new \\Exception('Undefined database handler.');\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/39350693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/39351031", "body": "Okay. Now just squash please all commits into a single commit to keep the history clean.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/39351031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/41738600", "body": "Also fix please PSR-related issue here\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/41738600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/42482331", "body": "`.tavis.yml` :stuck_out_tongue: \n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/42482331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/42482695", "body": "Adapter in future can be named as `ExTenSion`, or something like `ExtendedYaml` ;) \nIn any case, I don't expect a universal solution. `switch` is needed only for multiple extensions\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/42482695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/42483121", "body": "None of the specs may not impose restrictions on the file extension. It would be quite short sighted. The current changes just introduced flexibility in the Loader. Flexibility is good ;)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/42483121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/42485281", "body": "`protected  static $adaptersMap` you mean? In any case, the design is bulky and will still have to edit `$adaptersMap` manually every time.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/42485281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/42485364", "body": "Agile solution vs static properties and `isset`\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/42485364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/42851124", "body": "If you try to install `php5-mongo` at Ubuntu 14.0.4 LTS by using `sudo apt-get install php5-mongo` you will receive 1.4.5 version. But actually `MongoId::isValid` was introduced in 1.5.0.\n\nAlso presently PHP.net provide manual for [legacy PHP driver](http://php.net/manual/en/book.mongo.php).\n\nIf nothing is done you will get an exception stating that there `MongoId` does not have `isValid` method.\n\nCan you please explain a bit more, how exactly you wish to use `Phalcon\\PhpExtension\\Mongo` with `Phalcon\\Validation\\Validator\\MongoId` by each validation?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/42851124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/42892351", "body": "@Kachit Returned back in #455\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/42892351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/45471758", "body": "Why?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/45471758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/45475778", "body": "mb `getHeaderLen` ? anyway this must be protected\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/45475778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/45476001", "body": "use `[ ]` instead `array( )` please. We are in the 21st century :)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/45476001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/45476172", "body": "Why? If this really not needed, remove it. Don not  leave dirty code (e.g. commented code blocks ) here\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/45476172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/45476223", "body": "Why?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/45476223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/45530454", "body": "rollback this please\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/45530454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/45530474", "body": "what about this\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/45530474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/45530527", "body": "why?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/45530527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/46003190", "body": "Also return this back please. We're in the 21st century\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/46003190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/46003223", "body": "See requirements in [`composer.json`](https://github.com/phalcon/incubator/blob/master/composer.json#L15):\n\n``` json\n    \"require\": {\n        \"php\": \">=5.4\",\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/46003223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/46003275", "body": "use please PSR-like style\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/46003275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/46003362", "body": "and refer to Phalcon [Validator](https://github.com/phalcon/cphalcon/blob/master/phalcon/validation/validator.zep):\n\n``` zephir\nabstract class Validator implements ValidatorInterface\n{\n    ...\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/46003362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/46003389", "body": "`if (` instead `if(`\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/46003389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/54322713", "body": "@Zaszczyk Really, you found a logic error. But you didn't see another one. Error exactly here. This is why this is not completely solution. I'll try to fix it. \n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/54322713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/62352439", "body": "```\n<?php\n/*\n  +------------------------------------------------------------------------+\n  | Phalcon Framework                                                      |\n  +------------------------------------------------------------------------+\n  | Copyright (c) 2011-2016 Phalcon Team (http://www.phalconphp.com)       |\n  +------------------------------------------------------------------------+\n  | This source file is subject to the New BSD License that is bundled     |\n  | with this package in the file docs/LICENSE.txt.                        |\n  |                                                                        |\n  | If you did not receive a copy of the license and are unable to         |\n  | obtain it through the world-wide-web, please send an email             |\n  | to license@phalconphp.com so we can send you a copy immediately.       |\n  +------------------------------------------------------------------------+\n  | Authors: Vitaliy Panait <panait.vi@gmail.com>                          |\n  +------------------------------------------------------------------------+\n*/\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/62352439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/62353073", "body": "``` php\n$this->logs[] = compact('message', 'type', 'time', 'context');\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/62353073/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/62379270", "body": "> Expected 1 newline at end of file; 0 found\n\nCould you please fix this PSR warning?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/62379270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/62379391", "body": "![selection_153](https://cloud.githubusercontent.com/assets/1256298/15084138/40ae76d8-13da-11e6-9b3e-245eb8737ed7.png)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/62379391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/67134315", "body": "> var source, mongoCollection, conditions, base, documentsCursor,\n\nwhat is?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/67134315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/67134383", "body": "> //var id, mongoId; \n\n?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/67134383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379416", "body": "First of all  use please Codeception tests:\n\n``` php\n<?php\n\nnamespace Phalcon\\Test\\Mvc;\n\nuse Codeception\\TestCase\\Test;\n\nclass CollectionsTest extends extends Test\n{\n    // ...\n}\n```\n\nSee for example: `tests/unit/Validation/Validator/MongoIdTest.php`\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379421", "body": "``` php\n    protected function _before()\n    {\n        if (!extension_loaded('mongo')) {\n            $this->markTestSkipped(\n                'The Mongo extension is not available.'\n            );\n        }\n    }\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379431", "body": "Why? Here is Composer autoloader. Codeception use it\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379446", "body": "Not needed. Just use Composer autoloader from vendor and namespaces. See: `composer.json` `\"autoload-dev\"`\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379453", "body": "Jut use here namespace\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379456", "body": "Add please port to the constant plase\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379481", "body": "Hm.. Okay\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379724", "body": "``` php\ndefine('TEST_MONGODB_PORT', getenv('TEST_MONGODB_PORT') ?: '27017' );\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379727", "body": "Also add new constants to the `docs/TESTING.md`\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379729", "body": "TEST_MONGODB_PORT\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379739", "body": "Could you please use common code style? Before `$car->value = 500000;`,\nbut here `$car->value=450000;`\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379750", "body": "Could you please follow PSR code style?\n\n``` php\nif (!extension_loaded('MongoDB')) {\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69381216", "body": "Fine! I suggest to move this file for example to `tests/_data/collections` with `Phalcon\\Test\\Collections` and amend composer.json:\n\n``` js\n    \"autoload\": {\n        \"psr-4\": {\n            \"Phalcon\\\\Test\\\\\": \"tests/unit/\",\n            \"Phalcon\\\\Test\\\\Collections\\\\\": \"tests/_data/collections/\"\n        }\n    }\n```\n\nAlso cpuld you please follow PSR:\n\n``` php\nclass Cars extends \\Phalcon\\Mvc\\MongoCollection\n{\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69381216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69381243", "body": "I suggest to move all test-related info and todo to the `docs/TESTING.md`\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69381243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/86052715", "body": "if not needed :)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/86052715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/91851209", "body": "In general this will cause in a fatal error. I corrected it in my merge request. You have to use at least:\r\n```php\r\n$collection = $this->collection;\r\n$collection::findFirst([['key' => $translateKey]]);\r\n```", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/91851209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/91851235", "body": "The ` ?? ` syntax will broke applications for PHP 5.5 - 5.6. I corrected it in my merge request.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/91851235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/91851315", "body": "The ` ?? ` syntax will broke applications for PHP 5.5 - 5.6. I corrected it in my merge request.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/91851315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93789535", "body": "what is it? this code is no longer needed?", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93789535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93789606", "body": "why", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93789606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93826354", "body": "Could you please remove all commented code? ", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93826354/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/97094449", "body": "` or ` -> ` || `", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/97094449/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/97094511", "body": "` and ` => ` && `", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/97094511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/97094718", "body": "Strict Standards: `is_a()` Deprecated", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/97094718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/97094951", "body": "protected initPostFields should call protected canUseEncoding", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/97094951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/97302261", "body": "`or ` => `||`", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/97302261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/105281216", "body": "In this case the `$email` object must be iterable. Right? ", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/105281216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/105282190", "body": "Yes. Also I would to note: The `3.0.x` branch is not longer supported. You have to submit to the 3.1.x branch", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/105282190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/105220736", "body": "Could you please remove this", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/105220736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/105220836", "body": "`Phalcon\\Test\\Mvc\\Collection`", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/105220836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/105250647", "body": "Could you please remove this", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/105250647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/105250833", "body": "Could you please remove this", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/105250833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93793623", "body": "Could you please use proper DocBlock or remove this at all", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93793623/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93793643", "body": "`unit\\Test\\Traits` => `Unit\\Test\\Traits`", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93793643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93793652", "body": "`NULL` => `null`", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93793652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93793702", "body": "```php\r\nuse Phalcon\\Mvc\\Model\r\n\r\n$mockModel = $this->getMockBuilder(Model:class)\r\n```", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93793702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93793923", "body": "```php\r\nPhalcon\\Mvc\\Model\\Resultset\\Simple;\r\n\r\n$mockResultset = $this->mockResultset([], Simple::class);\r\n```", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93793923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93794031", "body": "`public function testCanMockEmptyResultSet() {`\r\n\r\n=> \r\n\r\n```\r\npublic function testCanMockEmptyResultSet()\r\n{\r\n```", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93794031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93794048", "body": "\ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93794048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93794198", "body": "```php\r\nuse Phalcon\\Mvc\\Model\\Resultset;\r\n\r\npublic function mockResultSet(array $dataSet, $className = Resultset::class)\r\n{\r\n```", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93794198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/94360735", "body": "Yes", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/94360735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/117297068", "body": "Actually this is autogenerated file by Codeception", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/117297068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/117297345", "body": "bash ?", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/117297345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/117297392", "body": "?", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/117297392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/117456287", "body": "`Phalcon\\Test\\unit5x\\Mvc` => `Phalcon\\Test\\Unit5x\\Mvc`", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/117456287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/117456347", "body": "`Phalcon\\Test\\unit5x\\Validation\\Validator` =>  `Phalcon\\Test\\Unit5x\\Validation\\Validator`", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/117456347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/117456477", "body": "`\"Phalcon\\\\Test\\\\unit5x\\\\\": \"tests/unit5x/\",` => `\"Phalcon\\\\Test\\\\Unit5x\\\\\": \"tests/unit5x/\",`", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/117456477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/118191833", "body": "it is **OR**: `<condition> OR <condition>`:\r\n\r\n```\r\n- (is it php 7) OR (run php 5 related tests)\r\n```", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/118191833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/118193370", "body": "which ones?", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/118193370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/118223776", "body": "The `tests/unit5x` tests uses PECL `mongo` extension. This extension is deprecated and no longer supported in PHP 7", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/118223776/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/118262697", "body": "Hm, yes `MongoCollectionTest` moved by mistake. But `MongoIdTest` uses mongo extension: https://github.com/phalcon/incubator/blob/3.2.x/tests/unit5x/Validation/Validator/MongoIdTest.php#L53", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/118262697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/118262797", "body": "@sergeysviridenko  Could you please roll back `MongoCollectionTest`?", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/118262797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/139962748", "body": "must be either an array or Traversable", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/139962748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140346302", "body": "I agree with @Jurigag and vote for sameness.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140346302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140853868", "body": "`AD` or `'AD'` ?", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140853868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140853944", "body": "`false` => `false,` ", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140853944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140854172", "body": "```php\r\n__construct(array $options = [])\r\n```", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140854172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140854531", "body": "If you don't care about null values, use isset which is faster because it is a language construct, not a function. The main difference when working on arrays is that array_key_exists returns true when the value is null , while isset will return false when the array value is set to null ", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140854531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140856074", "body": "Why does the function which should return boolean or should perform internal validation called so not obvious? I mean `errorMessageCode`. I prefer something like that:\r\n\r\n```php\r\n$status = $this->performValidation($validation, $attribute);\r\n\r\nif ($status === true) {\r\n    return true;\r\n}\r\n\r\n// the rest of code ...\r\n```", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140856074/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140858220", "body": "Could you please use Codeception Fixtures instead of trait", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140858220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140858398", "body": "Move all this code to the fixtures.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140858398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140858647", "body": "dataProvider, fixtures, etc. we don't need any foreach here", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140858647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140858810", "body": "extra lines", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140858810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140874441", "body": "Okay", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140874441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140999364", "body": "Let's use getErrorMessageCode", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140999364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/151113621", "body": "```\r\nFILE: .../build/phalcon/incubator/Library/Phalcon/Mvc/MongoCollection.php\r\n\r\n----------------------------------------------------------------------\r\n\r\nFOUND 4 ERRORS AFFECTING 2 LINES\r\n\r\n----------------------------------------------------------------------\r\n\r\n 235 | ERROR | [x] Expected 1 space after IF keyword; 0 found\r\n\r\n     |       |     (Squiz.ControlStructures.ControlSignature.SpaceAfterKeyword)\r\n\r\n 235 | ERROR | [x] Expected 1 space after closing parenthesis; found\r\n\r\n     |       |     0\r\n\r\n     |       |     (Squiz.ControlStructures.ControlSignature.SpaceAfterCloseParenthesis)\r\n\r\n 237 | ERROR | [x] Expected 1 space after closing brace; 0 found\r\n\r\n     |       |     (Squiz.ControlStructures.ControlSignature.SpaceAfterCloseBrace)\r\n\r\n 237 | ERROR | [x] Expected 1 space after ELSE keyword; 0 found\r\n\r\n     |       |     (Squiz.ControlStructures.ControlSignature.SpaceAfterKeyword)\r\n\r\n----------------------------------------------------------------------\r\n\r\nPHPCBF CAN FIX THE 4 MARKED SNIFF VIOLATIONS AUTOMATICALLY\r\n\r\n----------------------------------------------------------------------\r\n```", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/151113621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/153078488", "body": "To use `Codeception\\*` we'll need to move Codeception from `require-dev` to `require`", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/153078488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "Jurigag": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/794", "title": "MongoCollection doesn't have update method", "body": "Not sure if this is correct or not but there is `Phalcon\\Mvc\\Collection::update` but yet `Phalcon\\Mvc\\MongoCollection` doesn't override this method. I think we should have update method with proper code for php 7/7.1 too.\r\n\r\nIf someone doesn't know what's the difference between update and save - update just updates already existing instance only, save creates or updates instance, depending on operation(if collection exists).", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/752", "title": "Db Factory", "body": "https://github.com/phalcon/incubator/blob/master/Library/Phalcon/Db/Adapter/Factory.php\r\n\r\nThis class could be removed for 3.2.x since it will be built-in in phalcon 3.2.0 though in diffrent namespace - `Phalcon\\Db\\Adapter\\Pdo\\Factory` so maybe just change this class to call phalcon built-in factory and deprecate this one?", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/558", "title": "ACL Adapters in 3.0.x", "body": "How about implementing https://github.com/phalcon/docs/blob/master/en/reference/acl.rst#function-based-access in acl adapters ?\n\nDont know how exactly it should be working - i guess serializing/unserializing function ? But default serialize/deserialize methods in php cant serialize Closures so we would need to add/implement some library which will allow us such a thing.\n\nThere are some code for serializing/deserializing closures in php : http://www.htmlist.com/development/extending-php-5-3-closures-with-serialization-and-reflection/\n\nThat would need to implement additional class for ACL Functions i guess to make them serializable(they would be just objects).\n\n@sergeyklay\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/34db963ab6eae653654aa49360b5296d3f69de76", "message": "Merge pull request #823 from phalcon/3.2.x\n\nv3.2.3"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/2bdb6fc46d38819f441b2b797b58586859d3020e", "message": "Merge pull request #799 from phalcon/3.2.x\n\n3.2.1"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/e36c4db55974dc23387dd5f415d2be85269b1d39", "message": "Merge pull request #798 from Jurigag/3.2.x-blameable\n\nUpdate Blameable for Phalcon 3.2.x"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/c9732521064da31d84f0bb3f4908576a7217be39", "message": "Update Blameable for Phalcon 3.2.x"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/75a64b01c0072ea1cd309ad0cb9de34cd6a681b5", "message": "Avoid double toArray"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/77718de9b3005213f2bd202c0f2089aaa9204c45", "message": "Merge pull request #793 from Jurigag/3.2.x-collection-id-fix\n\nTest collection save, fix mod on _id"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/ccb65b5c31887da980b25eefbe896a2b5a1851b1", "message": "Test collection save, fix mod on _id"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/2feb8b57a6a9d9d43fd76f04cc6eb757a5d8ee72", "message": "Merge pull request #783 from phalcon/3.1.x\n\n3.1.2"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/0c3324bc3602ac82558dc962444533d2b48805d4", "message": "Merge pull request #772 from Jurigag/3.1.x-blameable\n\nUpdate Blameable for Phalcon 3.1.x"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/9eef508502c0468078052bcf31105c72d5c1b074", "message": "Update Blameable for Phalcon 3.1.x"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/691bd90a6e8fea575f3192430da011e99868b119", "message": "Add MongoCollection Uniqueness compatibility"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/116213964", "body": "I totally don't like this thing like this. I think we should add optional parameter:\r\n\r\n```php\r\nnew Blameable([\r\n    'userCallback' => function($di) {\r\n        return $di->getDI()->get('session')->get('user);\r\n    }\r\n])\r\n```", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/116213964/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/117209825", "body": "Yea know empty($columnMap) will be hitted in each loop iteration.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/117209825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/118184055", "body": "Well, shouldn't this unit name be unit7x if we check php_major version against 7? @sergeyklay ", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/118184055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/118193229", "body": "But those tests are php 7 related.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/118193229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/118219856", "body": "`tests/unit5x`", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/118219856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/118229310", "body": "It's not true, ti's uses mongodb extension:\r\n\r\n```\r\nMongoDB\\Client\r\n\r\nEnables the use of the new MongoDB PHP extension.\r\n\r\nThis will enable use of a mongo database using PHP7 with Phalcon 2.1\r\n```\r\n\r\n`MongoCollectionTest.php` which is testing `Phalcon\\Mvc\\MongoCollection` is moved there.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/118229310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140015795", "body": "There won't be this exception produced under any conditions", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140015795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140018790", "body": "Use `$this->prepareMessage($validation, $attribute, \"Iban\", \":field has invalid IBAN number\")`\r\n\r\nAlso there is another parameter in prepareMessage which is key from options where message is stored, so in other words use it for other messages like `messageNotSupported` etc", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140018790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140019208", "body": "Add `:field` here in message contents to make it possible to be replaced.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140019208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140019438", "body": "Use `$this->prepareMessage` here too.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140019438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140019491", "body": "Use `$this->prepareMessage` here too.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140019491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140019511", "body": "Use `$this->prepareMessage` here too.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140019511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140019564", "body": "Use `$this->prepareMessage` here too.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140019564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140020391", "body": "Add label and code:\r\n\r\n`$label = $this->prepareLabel($validation, $attribute);`\r\n`$code = $this->prepareCode($attribute);`\r\n\r\nAnd also replace pairs:\r\n\r\n`$replaceParis = [\":field\"=> $label]`\r\n\r\nAnd all Message objects should look like this:\r\n\r\n```php\r\nnew Message(\r\n\t\t\t\t\tstrtr($message, $replacePairs), // $message is just example here\r\n\t\t\t\t\t$attribute,\r\n\t\t\t\t\t\"Iban\",\r\n\t\t\t\t\t$code\r\n\t\t\t\t)\r\n```", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140020391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140020822", "body": "Not sure about this, any example? We just don't use Traversable as parameter in any of validators, why introduce it in this specific validator?", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140020822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140021443", "body": "Also add option to set custom message for this error like in options key `messageNotSupported`", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140021443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140021636", "body": "Also add option to set custom message for this error like in options key `messageSepaNotSupported`", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140021636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140021713", "body": "Also add option to set custom message for this error like in options key `messageFalseFormat`", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140021713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140021765", "body": "Also add option to set custom message for this error like in options key `messageCheckFailed`", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140021765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140022258", "body": "If iban is valid you shouldn't add any message and return true.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140022258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140022924", "body": "Also could we stick just to one appendMessage? Like just do in all conditions:\r\n\r\n```php\r\n$message = $this->prepareMessage();\r\n```\r\n\r\nand if $message isn't empty then just appendMessage.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140022924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140023219", "body": "Also add option to set custom message for this error like in options key `messageNotSupported`", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140023219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140326821", "body": "Then this change needs to be done to all validators include built-in in phalcon, so make it first in zephir, and then do it here. Just remove this thing now. Just making it only for one validator is kind of stupid.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140326821/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140870523", "body": "And i guess no one will pass null really so we can use isset here.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140870523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140870720", "body": "This actually return messageCode if validaton fails which is later used to retrieve actual message. I think it's fine really.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140870720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "scottf-tvw": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/787", "title": "allowDiskUse in aggregate ", "body": "Possible? can't seem to find a way to pass options when using `model::aggregate([pipeline])` \r\n\r\ncannot add options array to static method, even though the constructor allows it at the Aggregate class.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dereckmartin": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/766", "title": "MongoDB Uniqueness Validation Model::Update()", "body": "### Expected and Actual Behavior\r\n\r\nOn model validation, uniqueness validation is applied to a field.  In this case 'email'.  If the unique field value in the collection for the given id is same as the record id being updated, the validation should not fail.\r\n\r\n```php\r\n\r\n// Model\r\nclass Users extends MongoCollection\r\n    public $email;\r\n\r\n    public function validation()\r\n    {\r\n        $validator = new Validation();\r\n        $validator->add('email', new Uniqueness([\r\n            \"message\" => \"The email is already used\"\r\n            ])\r\n        );\r\n\r\n        return $this->validate($validator);\r\n    }\r\n}\r\n\r\n// Example Action\r\n//\r\n// Mongo Document:\r\n// { \"_id\" : ObjectId(\"5910b857d2a57d04844adca8\"), \"firstname\": \"test\", \"lastname\":\"user\", \"email\":\"tuser@example.tld\" }\r\n// JSON body:\r\n// { \"firstname\": \"test\", \"lastname\":\"user\", \"email\":\"tuser@example.tld\" }\r\n//\r\n    public function updateAction($id)\r\n    {\r\n        try {\r\n            $result = Users::findById($id);\r\n            $request_body = $this->request->getJsonRawBody();\r\n\r\n            $result->firstname = $request_body->firstname;\r\n            $result->lastname = $request_body->lastname;\r\n            // added if statement to show validation error when record has the same value for email\r\n            if ($result->email != $request_body->email) {\r\n                $result->email = $request_body->email;\r\n            }\r\n            $result->update();\r\n\r\n            $messages = $user->getMessages();\r\n\r\n            $m = [];\r\n            if (count($messages)) {\r\n                foreach ($messages as $msg) {\r\n                    array_push($m, $msg->getMessage());\r\n                }\r\n            }\r\n\r\n            $response = Phalcon\\Http\\Response();\r\n            $response->setJsonContent( [ 'messages' => $m ]);\r\n\r\n            return $response;\r\n        } catch (\\Exception $e) {\r\n\r\n        }\r\n    }\r\n\r\n```\r\n\r\nCurrently, validation is failing when updating a record with a uniqueness field when the old and new value are the same.\r\n\r\n### Details\r\n\r\n* Phalcon Framework version: (`php --ri phalcon`)\r\n\r\nWeb framework delivered as a C-extension for PHP\r\nphalcon => enabled\r\nAuthor => Phalcon Team and contributors\r\nVersion => 3.1.2\r\nBuild Date => Apr  6 2017 14:16:21\r\nPowered by Zephir => Version 0.9.7-1fae5e50ac\r\n\r\n* Phalcon Incubator version: (branch, composer version)\r\n\r\nIncubator: ^3.1\r\nComposer version @package_branch_alias_version@ (1.0.0-beta2) 2016-03-27 16:00:34\r\n\r\n* PHP Version: (`php -v`)\r\n\r\nPHP 7.0.18-1+deb.sury.org~xenial+1 (cli) (built: Apr 11 2017 14:36:44) ( NTS )\r\nCopyright (c) 1997-2017 The PHP Group\r\nZend Engine v3.0.0, Copyright (c) 1998-2017 Zend Technologies\r\n    with Zend OPcache v7.0.18-1+deb.sury.org~xenial+1, Copyright (c) 1999-2017, by Zend Technologies\r\n\r\n\r\n* Operating System: Ubuntu 16.04 LTS\r\n* Server: Nginx\r\n* Database: MongoDB v3.4.4\r\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "armonb": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/750", "title": "MongoCollection datatypes", "body": "Since v3.0.4 (commit 898ea411565091f33d9249c429674dfcccaf36a4)\r\n\r\nWhen retrieving documents from a mongo database using Phalcon\\Mvc\\MongoCollection ,  all objects are now retrieved as arrays ignoring the data type originally specified.\r\n\r\nI assume this is due to the change on line 303.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/comments/21374142", "body": "Why has the type map changed from object to array on Line 303 of MongoCollection.php?", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/comments/21374142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/comments/21412658", "body": "I think it is a mistake. You can test by creating an object inside a mongo document, fetching the document using this class. The returned document now contains an array instead of the original object.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/comments/21412658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "terax6669": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/749", "title": "Phalcon\\Mailer - Missing spool transport", "body": "This is a feature request. Are there any plans to add spool support?", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dercoder": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/739", "title": "Aerospike Cache prepare content part missing", "body": "The content will not be prepared like here:\r\nhttps://github.com/phalcon/cphalcon/blob/master/phalcon/cache/backend/redis.zep#L226\r\nhttps://github.com/phalcon/cphalcon/blob/master/phalcon/cache/backend/redis.zep#L173", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RayHughes": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/735", "title": "Session adapter cookie not encrypted", "body": "When using https://github.com/phalcon/incubator/tree/master/Library/Phalcon/Session/Adapter , the session token cookie is not encrypted as it should be. Rather, the raw value is provided to the users browser.\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ulfims": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/718", "title": "Dialect Oracle not working on Oracle Express 11.2", "body": "> Questions should go to https://forum.phalconphp.com\r\n> Documentation issues should go to https://github.com/phalcon/docs/issues\r\n\r\n### Expected and Actual Behavior\r\n\r\n> **Query table get Error result**\r\n\r\nORM Generate:\r\n```php\r\nSELECT [Orders].* FROM [Orders]\r\n```\r\nError Message:\r\n```\r\nOCIStmtExecute: ORA-00904: \"ORDERS\": invalid identifier\r\n (/home/ulfi/php-7.0.8/ext/pdo_oci/oci_statement.c:159)\r\n\r\n```\r\n> Provide minimal script to reproduce the issue\r\n\r\n```php\r\n$transactions = $app->modelsManager->createBuilder()->from('Orders');\r\n```\r\n\r\nConfiguration database:\r\n```\r\n     array(\r\n        'adapter'   => 'Oracle',\r\n        'username'  => 'user',\r\n        'password'  => 'password',\r\n        'dbname'    => '(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.7.43)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=xe)(FAILOVER_MODE=(TYPE=SELECT)(METHOD=BASIC)(RETRIES=20)(DELAY=5))))',\r\n        'options' => array(PDO::ATTR_CASE => PDO::CASE_UPPER, PDO::ATTR_PERSISTENT => TRUE,),\r\n        'dialectClass' => Phalcon\\Db\\Dialect\\Oracle::class,\r\n),\r\n\r\n```\r\n### Details\r\n\r\n* Phalcon Framework version: \r\n\r\n```\r\nWeb framework delivered as a C-extension for PHP\r\nphalcon => enabled\r\nAuthor => Phalcon Team and contributors\r\nVersion => 3.0.2\r\nBuild Date => Nov 27 2016 13:38:57\r\nPowered by Zephir => Version 0.9.4a-dev\r\n\r\nDirective => Local Value => Master Value\r\nphalcon.db.escape_identifiers => On => On\r\nphalcon.db.force_casting => Off => Off\r\nphalcon.orm.events => On => On\r\nphalcon.orm.virtual_foreign_keys => On => On\r\nphalcon.orm.column_renaming => On => On\r\nphalcon.orm.not_null_validations => On => On\r\nphalcon.orm.exception_on_failed_save => Off => Off\r\nphalcon.orm.enable_literals => On => On\r\nphalcon.orm.late_state_binding => Off => Off\r\nphalcon.orm.enable_implicit_joins => On => On\r\nphalcon.orm.cast_on_hydrate => Off => Off\r\nphalcon.orm.ignore_unknown_columns => Off => Off\r\n\r\n```\r\n* Phalcon Incubator version: \r\nincubator Version: `\"phalcon/incubator\": \"^3.0\"`\r\nComposer version: `Composer version 1.2.4 2016-12-06 22:00:51`\r\n* PHP Version: \r\n```\r\nPHP 7.0.8-0ubuntu0.16.04.3 (cli) ( NTS )\r\nCopyright (c) 1997-2016 The PHP Group\r\nZend Engine v3.0.0, Copyright (c) 1998-2016 Zend Technologies\r\n    with Zend OPcache v7.0.8-0ubuntu0.16.04.3, Copyright (c) 1999-2016, by Zend Technologies\r\n\r\n```\r\n* Operating System: `Ubuntu 16.04`\r\n* Server: `Apache 2.4`\r\n* Other related info : ", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/33909d95345756e172afa657f5c5c680531a3dd1", "message": "Rebuild Travis"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/06d9016c4c36f073333e12948a2821ac3f515685", "message": "Rebuild Travis"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/fa5d0d7984feb478b48961a2388dbcfd0f05d183", "message": "Rebuild Travis"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/6c25e7251a7f7911f5e378e219e5970c82e46b00", "message": "Rebuild Travis"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/03029569db86144b1a85d63cea8523b3d719cf96", "message": "Fix Travis Build #1546"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/5b39102e226d907e70c9642753317ce60e4cd537", "message": "Fix Travis CI build"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/9c8bfffc27df07e7b778d483edede4b78dd7ad08", "message": "Remove commented code"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/3e334a22fa67cf08b0789687fa6e60728850fc8e", "message": "Fixing #718 : Dialect Oracle not working"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/9d4a205fb4de01f7b849a3d272f70c187927a7e2", "message": "Rebuild Travis"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/7748745a30f5afbd49cae3f89c6ff7baecf281d6", "message": "Rebuild Travis"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/ab1fadd2492a74289133b75ab72698374b53dd85", "message": "Fix Travis Build #1546"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/a7d2f3a3711601379efb5ea5a341a865c88b0c4f", "message": "Fix Travis CI build"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/f8be862a08738153e50fd07efe2e33073a86897c", "message": "Remove commented code"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/77ec891ea7ac14f96dd7ad59fa66fb5466c81877", "message": "Fixing #718 : Dialect Oracle not working"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93823009", "body": "Because the parameter given was not number but : APL0. It will give $limit value always  0 (zero) ", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93823009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93823011", "body": "Same as my previous comment", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93823011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93823428", "body": "If not comment, it will return string:\r\n` WHERE ROWNUM <= 0`\r\nif comment, it will return string:\r\n` WHERE ROWNUM <= :APL1:`\r\n(where :APL1: is bindParam )\r\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93823428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93827047", "body": "sure", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/93827047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "dschissler": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/702", "title": "The entire Firebug extension has been discontinued", "body": "Is there any other potential technology in any browser that could provide the header based logging that was possible with Firebug + Firelogger?", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/702/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 1, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/2c957cba8ad96466d9b8b404b6f7cbce8a298b49", "message": "Fix Exception message to reference correct class."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "blm14": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/659", "title": "Is there any way to apply this to PHQL and view of records not just changes?", "body": "topic says it all. I want to be able to use this to also log changes coming from PHQL and also to log views of records and which fields were viewed. \n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "XartIrok": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/610", "title": "[2.1.x] twig problem with render action", "body": "when i try use twig in my project i get problem with render diffrent action\n1. try\nloader engine\n\n``` php\n        '.twig' => function($view, $di) {\n            @mkdir(APP_PATH . '/cache/twig/' . APP_ENV);\n            $options = array();\n//            if (APP_ENV == 'prod')\n//                $options = array('cache' => APP_PATH . '/cache/twig/' . APP_ENV );\n            return new TwigEngine($view, $di, $options);\n        }\n```\n\nmain view path: view/admin/index.php\n\n``` twig\n        <div class=\"container\">\n            {% block content %}{% endblock %}\n        </div>\n```\n\naction view path: view/admin/login/index.php\n\n``` twig\n{% extends \"index.twig\" %}\n\n{% block content %}\n    test\n    {{ form() }}\n        {{ form.render('logon') }}\n    {{ endForm() }}\n{% endblock %}\n```\n\non this try nothing render null\ntry second a change only the main view\n\n``` twig\n        <div class=\"container\">\n            {{ content() }}\n        </div>\n```\n\nthis try end render but only text input was render by a string not as it should\n\na that moment i try use a stadard **volt**\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/610/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mynumbercrunching": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/586", "title": "phalcon Twig", "body": "I have twig working except for the Twig_Extension_Debug.  \n\nThis is required to use the dump().\n\n``` php\n$twig->addExtension(new Twig_Extension_Debug());\n```\n\nam i missing something?\n\ncheers.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hisorange": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/560", "title": "Eagerloading alias to lower", "body": "Aye is there a need for [this](https://github.com/phalcon/incubator/blob/2.1.x/Library/Phalcon/Mvc/Model/EagerLoading/EagerLoad.php#L68) to be strtolower?\n\nCuz this almost drove me nuts, my many2many relations are named in camelCase fashion so shopProducts will be loaded under shopproducts with eagerloading.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Wayne-Wen": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/501", "title": "Why there is not model id for Audit in Blameable behavior?", "body": "When I'm looking into the code of \"Blameable\" behavior, I found:\n\n```\n$audit->model_name = get_class($model);\n```\n\nLooks like it only stores the name of model. If I have two Products (Production A and Product B). And I have made changes on these two products. How can I know what are the changes of product A and what are the changes of product B. Because their model name are the same-----\"Product\", and there is not model id to distinguish them.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sergeysviridenko": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/2019931cbe6ca1fe56ac4495bfbba7397361309f", "message": "Fix undefined method in collection trait"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/90e5a6d516d10f10c6ae2b47e254e3193b1c109a", "message": "fix_test"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/d6e0782e1636b7ea391723baeb2a1d7e0e899c09", "message": "Fixed view engines in mailer"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/df9a839f079356ce01578ed9daf66a63a7950b23", "message": "Added event manager to nestedSet"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/4d4f2e577e077f43f4b835ee8551798b5287a231", "message": "fix yaml extension"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/151af08411550431e39b2189796c25db7710f837", "message": "Added IBAN validator"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/b47c1a9a5a3caa3da77be2aad7520eb67e5e83bf", "message": "Added fix aerospike test"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/365a9d6b32d493d0e2ec3989777a4978b2910317", "message": "Change query in read method of Session adapter"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/1672e8cd4d47db2acbff13283c8e316e9f480485", "message": "insert instruction for successfully running unit tests in README [ci skip]"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/a38662a9b660da88ea94934674e96976c694168d", "message": "NestedSet deleteNode method fix"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/042cbb24c5a9971993291b1f1bbf7cbac015c7df", "message": "MongoCollectionTest moved in unit directory"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/44bf86b60007ce956240f2860f89427cbdfaca61", "message": "issue 759"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/b6afeb141a1677a0a75f1bf0c8a9a8f76b3287c3", "message": "suite - unit5x"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/34197e0646d706c3de327b01785e57627c050000", "message": "suite - aerospike"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/0cefd286d8b51dfe05dbeeeac9e7cd0cb98d6483", "message": "fixed locale in Library/Phalcon/Utils/Slug.php"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140226509", "body": "@Jurigag I guess we shouldn't restrict users in type of parameter. I guess it can be useful.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140226509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140762431", "body": "@sergeyklay, @Jurigag then I'll add iterator support in validator to cphalcon. After I'll add iterator here.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140762431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140971840", "body": "@Jurigag is right. En idea was return error message code which use in message that must be returned. Maybe `getErrorMessageCode` is better? How do you think, @sergeyklay?", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/140971840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "rabrowne85": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/ca7bc06d1a182c7b77d80f5b84c518c75863d4e5", "message": "#835 - Rename of EventManagerTrait to EventManagerAwareTrait"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ruudboon": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/73fc40c35de28cb26acd207ac7962aad4a070b68", "message": "Update README.md\n\nPrevent message: You are using the deprecated option \"dev\". Dev packages are installed by default"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hisune": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/61fd0e36827d8f5f44083f80260ecd96afac64f4", "message": "minor mistake of syntax\n\nminor mistake of syntax"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "baychae": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/561adebbcfc23bea5b40f30ec77a4c7535ceb2cf", "message": "Adding example usage to @inheritdoc"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/72d8cb46c09f274491c9ca805a39cc2b708c92f4", "message": "Code to PSR2 Standards"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/a0c2fb670acf765626b77b534ecd81442a1f186e", "message": "Recurse through inheritance chain for implicit role inheritance."}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/e2a658bb8de149fbe5896032ce982cd378e1bca8", "message": "Add deep inherits when array passed to addInherit"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mikejoseph": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/0544482f3a99fd824b31162c8772f59ae3e3b844", "message": "merges PR #753 onto 3.2.x branch"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kideny": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/37353f0eadd67b5b7f64b0232ccb929a5db9ac3f", "message": "fixed function's name error"}], "pull_requests": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/840", "title": "add a param , we can custom collection name before getResultset()", "body": "Hello!\r\nnew feature\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/incubator/blob/master/CONTRIBUTING.md)?\r\n- [ ] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "linxlad": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/c350e044de9aefecf22ee81581503c2c014624c7", "message": "Update README.md\n\nUndefined variable $config, it should be $options."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "emiliodeg": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/a0b285f8f53061239cb5978d7ff0472c624ce969", "message": "Loss the context\n\nWhen the message have any variable from context \"{user} lost in {place} \" the information in context is losed\r\nModify formatter default template to store only the message. Type and time are stored in different columns.\r\nThen in the message column, I add the result of the formatter to store the right value"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/54e302eab243ad4c0f7bf5f81bf9839e3dba18d1", "message": "Update MysqlExtended.php"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/cc49461ea443b3ac02fab18a8c150889e88cccd4", "message": "Update MysqlExtended.php\n\nAdd support to REGEXP\r\nSimilar implementation https://forum.phalconphp.com/discussion/7793/error-custom-dialect"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fatcrobat": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/c840f5a3a842853a2e2379eaccfcdb020aed5b66", "message": "Phalcon\\Db\\Adapter\\MongoDB\\Operation:createCommand does not support collation option (#767)\n\n* add collation support\r\n\r\n* Update Aggregate.php\r\n\r\n* Update Aggregate.php\r\n\r\n* Update Aggregate.php"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "micheleangioni": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/1bb92bc4f6fdf964bd8b635f530a9d9948296afc", "message": "Fixed PHP_CodeSniffer warnings in new Validators"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/fbd7854ab683be53e475e3a9de099f6b683e20af", "message": "Code style fixed in new Validators"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/e5bdc50e9b83c5940ee4050091132eb608c891cd", "message": "Updated readme with Validators"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/5f315c41265af10b26b9d27bf5210de9fa744233", "message": "Added tests for new Validators"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/731d126ad496ab99310047659d54fda766ed533a", "message": "Added new Validators"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cottton": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/6b60b37ca29a4e68c9ab8f526f736c36c0c7f382", "message": "Fixing Curl head request stuck\n\nAdded curl option `CURLOPT_NOBODY => true` to on ::head method"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/314840c68dcc23a23225ec4f9d0c8414d50b7edc", "message": "Fixed lost curl error (#726)\n\n* Fixed lost curl error\r\n\r\nMoving __destruct -fix (\"release\" Curl instance from header function) to bottom -- before return.\r\n\r\n* Fixed no space found after comma\r\n\r\n* Fixed no space found after comma"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/349bfb0668d8f0fc3fa9ed6aa89f46c6c7e733b4", "message": "Added ::setOption ::setOptions CURLOPT_XXX alias (#730)\n\n* Added ::setOption ::setOptions CURLOPT_XXX alias \r\n\r\nAddded simple check if given option key is a curlopt_xxx string\r\n\r\n* Fixed no space found after comma\r\n\r\n* Fixed no space found after comma"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/bf999949d0214b4f510c2fd50011cad6cc7be6c5", "message": "fixed new line / white spaces"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/fc81a3f28334b4e294a93cfa0b06dfce7cc65763", "message": "::canUseEncoding to protected"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/2f6896c8c5970d744f4f88e8d31bef1499e2fd68", "message": "fixed || instead of or"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/5263c585e77a10cd5e8ef257e4f002af3dd21141", "message": "fixed stuff =)"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/5275684e11f4939be5c94c0bd16e32ae37975454", "message": "::initPostFields checks for \\CURLFile\n\nShould check each param is is a `\\CURLFile` f.e. created via `curl_file_create($file)`.\r\n\r\nExample:\r\n\r\n    $provider = \\Phalcon\\Http\\Client\\Request::getProvider();\r\n\r\n    // POST a file\r\n    $file = '/home/mine/myimage.jpg';\r\n    $response = $provider->post('me/upload', [\r\n        'access_token' => 1234,\r\n        'file'         => curl_file_create(realpath($file)),\r\n    ]);\r\n\r\n    echo $response->header->statusCode;\r\n\r\nReason:\r\nSee `CURLOPT_SAFE_UPLOAD` http://php.net/manual/en/function.curl-setopt.php\r\n\r\n`Added in PHP 5.5.0 with FALSE as the default value. PHP 5.6.0 changes the default value to TRUE.`\r\n_and disabled with PHP 7_"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/5e77047268b5a280ca3b1663d9f30fe242505f31", "message": "Fixed lost curl error (#726)\n\n* Fixed lost curl error\r\n\r\nMoving __destruct -fix (\"release\" Curl instance from header function) to bottom -- before return.\r\n\r\n* Fixed no space found after comma\r\n\r\n* Fixed no space found after comma"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/7bc3ae96b2d1bda66be153faf4929620e6a74daf", "message": "Added ::setOption ::setOptions CURLOPT_XXX alias (#730)\n\n* Added ::setOption ::setOptions CURLOPT_XXX alias \r\n\r\nAddded simple check if given option key is a curlopt_xxx string\r\n\r\n* Fixed no space found after comma\r\n\r\n* Fixed no space found after comma"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/1d0497b1f872e81263ef0dd0de2447b0a842750c", "message": "fixed new line / white spaces"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/178d8fab93ea9152598d8b6ad257340f5f5b95bd", "message": "::canUseEncoding to protected"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/aa197021f7c47d85d62d26ecb28d0eca4c879ddd", "message": "fixed || instead of or"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/a5a264a50a9cdf255b1df4376780cd5718b898e5", "message": "fixed stuff =)"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/321d2237bc2efce196becaf3d60bcdcf9839911a", "message": "::initPostFields checks for \\CURLFile\n\nShould check each param is is a `\\CURLFile` f.e. created via `curl_file_create($file)`.\r\n\r\nExample:\r\n\r\n    $provider = \\Phalcon\\Http\\Client\\Request::getProvider();\r\n\r\n    // POST a file\r\n    $file = '/home/mine/myimage.jpg';\r\n    $response = $provider->post('me/upload', [\r\n        'access_token' => 1234,\r\n        'file'         => curl_file_create(realpath($file)),\r\n    ]);\r\n\r\n    echo $response->header->statusCode;\r\n\r\nReason:\r\nSee `CURLOPT_SAFE_UPLOAD` http://php.net/manual/en/function.curl-setopt.php\r\n\r\n`Added in PHP 5.5.0 with FALSE as the default value. PHP 5.6.0 changes the default value to TRUE.`\r\n_and disabled with PHP 7_"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/9227d5d0ed0561d511d6f25d3e118f907e7549fa", "message": "Improving usage of parameter 1 \"customHeader\".\n\nParameter 1 `$customHeader` must be type of array.\r\n\r\nTry to include `'Expect:`' also in `$customHeader` to get correct response.\r\n\r\nNote: providing `$customHeader` without field `'Expect:`' currently messes up the response if the server sends a 100 continue. \r\nF.e. the status code on a 200 OK response would be 100."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Fenikkusu": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/4d99f7b5f0faeb8063539096baee9d990861745c", "message": "...Yet More PSR..."}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/e6afa38f824e4e621c3549f3268985c5f6d176ad", "message": "...PSR Updates..."}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/8ec82b907b3e008a465d3c56b99983986a89eff0", "message": "PSR Fixes\n\nPSR Fixes"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/4a2a2b6dbc157f3470fd8c28d0d9174de1e5afb5", "message": "Removing Missed Method"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/3c93044c6962a0b2f4c1e245a73b0cd3c87d49ea", "message": "Updating UnitTestCase To Include New ResultSet Trait"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/e70250d45d82bc025f244dfcf8168ca2f3e909f8", "message": "Adding ResultSet Trait and Relative Testing (...Testing For A Test...Hmm...)"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/3e20d89f71838694093a59bf1c2ab2e2f1152893", "message": "Adding Extension Check To _after To Prevent Cleanup Errors When Extension was already skipped in _before."}], "pull_requests": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/839", "title": "Converting Testing To Allow Either Codeception Based Testing or PHPUnit", "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/incubator/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nThere's a lot going on here, but it's actually fairly simple. Currently, the Phalcon Test Classes are all built specifically for PHPUnit. Even if you are using Codeception to run your tests, your limited to using the PHPUnit setup and you loose some of the extra benefits of using the Codeception base instead (IE: _before shorthand, Test Helpers, DB Methods, etc). This PR is an attempt to bridge that gap while also maintaining some backwards compatibility. In order to accomplish this, a number of changes were made:\r\n\r\n1) Each of the test cases were converted to traits and moved to Library\\Test\\Traits.\r\n2) Slight changes were made to the new traits to make the platform independent (Renamed setUp/tearDown to setUpPhalcon/tearDownPhalcon respectively).\r\n3) New classes were created in Library\\Test\\PHPUnit that use the new traits and call the setUp/tearDown functions appropriately.\r\n4) New classes were created in Library\\Test\\Codeception that also use the new traits and call the setUp/tearDown functions appropriately.\r\n5) Placeholder classes replaced the original TestCases that just extend the appropriate PHPUnit edition of the class.\r\n\r\nI've added a number of Unit Tests in place to help ensure this logic is working correctly and thus far I've had no issues. I'm going ahead and creating the PR so others can look over the tests while I run more direct tests to ensure everything is working as intended.\r\n\r\nI should mention that while I've done my best to make these changes backwards compatible, there is one scenario where they will not be backwards compatible. If someone were to ever use an 'instanceof' command on the placeholder TestCases, then these may break. This seems highly unlikely, but I wanted to make sure to mention it. For example:\r\n\r\n```\r\n$testCase = new \\Phalcon\\Test\\FunctionalTestCase(); //Abstract Class, Not Technically Possible\r\nif ($testCase instance of \\Phalcon\\Test\\UnitTestCase) {\r\n  //This will never be reached now.\r\n}\r\n```\r\n\r\nPS: Way to many 'Test's - UnitTestCase, UnitTestCase, UnitTestCase, & UnitTestCaseTest", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/94145748", "body": "After double checking this (comparing other files), I believe this should actually be 'Phalcon\\Test\\Test\\Traits'?", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/94145748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/153685923", "body": "The only problem I have with that is that PHPUnit is and has been a require-dev for a while anyways. Plus I don't really see the need. They are both only needed when running the incubator's testing and the rest of the time it's up to the user to install it. Additionally such a change would force codeception to always be installed, even if a person does --no-dev, would it not? I think that would upset people. I myself wouldn't want codeception in a production environment.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/153685923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jturbide": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/29e6cb8c723fa6d2ad0823a1a5c11f3b2ba6ebf9", "message": "Allow a traversable object in normalizeEmail\n\nFix for: Warning: preg_match() expects parameter 2 to be string, object given\r\nAllow a traversable object for the $email parameter for the normalizeEmail function"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/59f26eef4b0957fbd998f18471c70ac073b20f4c", "message": "Update Slug.php\n\nfix attempt for Warning: setlocale(): Specified locale name is too long\r\nneeds to be tested deeper"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/fab56222fdcf112b2597b1fa14af4ae05c07c260", "message": "Update Slug.php\n\nfix attempt for Warning: setlocale(): Specified locale name is too long\r\nneeds to be tested deeper"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/105281803", "body": "right, maybe \"instanceof \\Traversable\" would do the trick?", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/105281803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "AnzeDspot": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/25e06962e847189ea4087984fe10b8ebfb297457", "message": "Revert increasing of PHPUnit version, #727"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/7cc09cd2c34d9d201820cbef7e8f660f0e189908", "message": "Use new PHPUnit class autoloader, increase PHPUnit version to ^5, #727"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/3cc50bc3bade89caa43f2b19deaecd9ff6e1da4e", "message": "Revert increasing of PHPUnit version, #727"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/86518443d8688ef5eefdf8c117355d54cd2b2ddc", "message": "Use new PHPUnit class autoloader, increase PHPUnit version to ^5, #727"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kdays": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/898ea411565091f33d9249c429674dfcccaf36a4", "message": "Fix MongoCollection::find missing $base class"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/4e43e64024a705699137e760c41c909283f634a6", "message": "Fix MongoCollection::find missing $base class"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "arielallon": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/29aadd029f4a76c630ad5a2b9cdfd0a024e4b66e", "message": "replacing preg_match with a strpos. lighter weight."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sgenov": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/503124a7134eb7831ab9590d6d1f93aa74bfc915", "message": "Added flush method to Aerospike"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/fb06311eb89053041aa6cc8e7f26637b25af9882", "message": "Update AerospikeTest.php"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/75d421316deece74f798d00eb646117d9b0dde84", "message": "Data is being serialized twice"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/87d0536b929c37db793c48fde28d760fd2cf297e", "message": "Update AerospikeTest.php\n\nFixing the test's checking parameters, since serialization is removed for Aerospike in Backend Caching"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/71021d367b05ced97d015e85be3f5d32d442d51a", "message": "Update composer.json"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/6609210756420b5c2f704c3a8188cc409aa731bd", "message": "Update composer.json"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/e9582ae6bf814644a2791189fdc803cfb60a73d3", "message": "Fix an issue with double quotes\n\nThe storage type of the field is Bin, which means it does not need to be serialized. This simplifies things and saves a few CPU clicks."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SidRoberts": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/045e40a01685542b833860007febaa983b642f5f", "message": "Fixed recursive method call (see phalcon/cphalcon#12328)."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Ark4ne": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/494fbca6311a958d43ce2b2aacb0c25b89d93482", "message": "fix(Http\\Client\\Provider\\Curl): CURLOPT_HEADER doesn't need to be set to true when CURLOPT_HEADERFUNCTION is used.\n\n(cherry picked from commit 884909f)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pantaovay": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/4fb5a57591ba964a6b73c0d82770c233eeca5822", "message": "Bug Fix: curl response content contains header"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "duncan3dc": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/9a1776152f43bd04ccfef60fa6f4508dd70c5efb", "message": "Update the beanstalk queue to use duncan3dc/fork-helper:2.0"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "metaliciouz": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/fff2b3ec04b9be7c092b3fbfacc15b9d2a53cb89", "message": "Fix `getConfig` function in `UnitTestCase` class\n\nNow, return the Config object if service 'config' was found in the dependency injection container and variable $config not set."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kaioken": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/aa17277cecc438a7b27e062c47b3a231006e66d0", "message": "fix issue with queue failing after 1 call"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tigerstrikemedia": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/72e309cce856ca039bcc4a2252fd9ba259e4fc90", "message": "Reset the DI after data cleared."}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/77fdde32e3d56f93831eddf195df980ff0947615", "message": "Update TESTING.md and remove unnecessary comments from MongoCollection.php"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/34fa958d69a02c1ea162322a2e98ee17520457f7", "message": "Clean up code styling, directory structure and add  TEST_MONGODB_PORT"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/42dd99293479e5de63cd881179b3c066f4af6669", "message": "Fix sloppy namespacing and requested updates."}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/928084aebfd5c185bb8bae7428734d03c6069bd6", "message": "-- Added MongoDB Instance to docker-compose to test with\n\n-- Fixed bug in specifying fields found in unit testing\n\n-- Added TEST_MONGODB_HOST to tests bootstrap\n\n-- Removed duplicated line in the build arguments of build.sh\n\n-- Added a model class to use and unit tests for the following functions: save() delete() find() findById() findFirst() and aggregate()\n\n-- Removed unused `use` lines in MongoCollection.php"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/507781452ada544adba0ab5ee9e67e90d1cc0c9a", "message": "Fix sloppy namespacing and requested updates."}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/34d657a50057787662b0458333a296fd1fdc13d4", "message": "-- Added MongoDB Instance to docker-compose to test with\n\n-- Fixed bug in specifying fields found in unit testing\n\n-- Added TEST_MONGODB_HOST to tests bootstrap\n\n-- Removed duplicated line in the build arguments of build.sh\n\n-- Added a model class to use and unit tests for the following functions: save() delete() find() findById() findFirst() and aggregate()\n\n-- Removed unused `use` lines in MongoCollection.php"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/694dfdc175058a07b8273151e38fc82e6d8bcfd4", "message": "$success=true; not $success==true;"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/505b4c419b88d239567ba9ee65cda5018e6e9c8a", "message": "Throw an exception on Collection::summatory as it is not implemented."}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/8dcc69d32d0d7a8b3de39751b507c313ef51a621", "message": "Fix findById('idasastring') not finding the collection."}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/01bade5a71b52ec256f360f48689a9744afbac01", "message": "Pass changes through PHPCS"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/4018bc2397b484809792989ce7a5b4d3f0a10b41", "message": "Fix the following errors:\n\nUndefined Constant eventName attempting to trigger an event\n\nCursors cannot yield multiple iterators when no results are found\n\nAfterFetch() not triggered when loaded from bsonUnserialize()\n\nduplicate key error when attempting to update a document."}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/f31ad0f229af3402e8b63d2dc2f153a22fc6fa29", "message": "Keep alphabetical order in readme"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/abc35b8e097870f5e559f137bdb9790723f6c692", "message": "Update Readme.md files"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/877075a5a3b5c0894be2e7e9a479942e4d1e059d", "message": "Remove commented zephyr relics from MongoCollection.php"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/18cc047cabaa180fff5c74eabc411e8535cdf44c", "message": "Ignore coding standards where they cannot be adhered to."}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/6a3d7a6d1afa5ead5f385df1916c5a62ed99fdfe", "message": "Fix Invalid Namespaces"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/808ebf6c84da1b5866a6faf9f4fe44ab3790fd63", "message": "Another attempt at the errors in Travis."}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/a80158c3a03d6feebd97047b7a6ef923886b757f", "message": "Another attempt at the formatting issues from Travis CI"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/cd4779b8c4a05ea6f37060e685cd3f8c56e7c34b", "message": "Fix Exceeds 120 Char Warnings"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/77d716fc57e265520484de5f21939d38edd45707", "message": "Rename functions in Functions class."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379470", "body": "It is a duplicate of a line before it. \n\nline 72:\n`-v ${TRAVIS_BUILD_DIR}/vendor:/app/vendor \\`\n\nHappy to add it back in if it is needed.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/69379470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "pflorek": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/70598266c8dd9396a96a05a7aca03f7fd5b2ad41", "message": "Applied coding standards"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/3bb682efbe9f886044b95b92e7e2606c0bc578d3", "message": "Added reCAPTCHA form validator"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "an8val66": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/848", "title": "Added createIfNotExist function", "body": "Hello!\r\n\r\n* Type: bug fix | new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/incubator/blob/master/CONTRIBUTING.md)?\r\n- [X] I have checked that another pull request for this purpose does not exist.\r\n- [X] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nI tried using this function did not work, so it was just changing the findandmodify function to findoneandupdate.\r\n\r\nThanks\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wolftankk": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/827", "title": "Fix MongoCollection doesn't have update method", "body": "Hello!\r\n\r\n* Type: bug fix\r\n* #760 #794 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/incubator/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\n\r\nThanks", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Surt": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/754", "title": "Update _related property so Phalcon avoids to make a lazy loading", "body": "I need to know in phlacon model if the relationship is loaded. Actually it's impossible witthout something like this https://github.com/phalcon/cphalcon/pull/12772 because calling the property launchs the lazy loading.\r\n\r\nThen, I need the eagerload library to fill that protected property in the model (impossible by any means, so we need to push changes to phalcon: a new method or more arguments in getRelated or something so we can fill the _related array with the eager loaded results from the Loader class);\r\n\r\nReferences: https://github.com/stibiumz/phalcon.eager-loading/issues/12\r\n\r\nHello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/stibiumz/phalcon.eager-loading/issues/12\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/incubator/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Zaszczyk": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/723", "title": "fix setlocale() when diffrent locale types have diffrent values", "body": "Hello!\r\n\r\n* Type: bug fix \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/incubator/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n`setLocale()` returns string:\r\n```\r\nLC_CTYPE=en_GB;LC_NUMERIC=C;LC_TIME=C;LC_COLLATE=C;LC_MONETARY=C;LC_MESSAGES=C;LC_PAPER=C;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=C;LC_IDENTIFICATION=C\r\n```\r\nwhich must be parsed\r\n\r\nThanks\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/54348084", "body": "@sergeyklay exactly! it caused errors, because it is raw sql and it didnt fire events on my models, so cache wasn't flushed. I spent 2 days with this class, but I fixed all in this PR :)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/54348084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "phalcon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/10767681", "body": "Thanks Wojtek!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/10767681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/11004763", "body": "Amazing, thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/11004763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/11015970", "body": "Hey, @Xrymz, can you add some usage instructions to the readme? https://github.com/phalcon/incubator/tree/master/Library/Phalcon/Session/Adapter#handlersocket\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/11015970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13064532", "body": "thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13064532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13064550", "body": "the partial doesn't need to include the .twig extension, are you passing that in $partialPath\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13064550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13253768", "body": "I added a fix for this in 0.9.0 stable, could you try with this version?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13253768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13260534", "body": "ok! thanks! but the adapter has a bug! this part is missing: https://github.com/phalcon/cphalcon/blob/master/unit-tests/ViewEnginesTest.php#L81\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13260534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13262100", "body": "I updated the adapter, can you check it out?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13262100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13265709", "body": "https://github.com/phalcon/incubator/blob/master/Library/Phalcon/Mvc/View/Engine/Twig.php#L28\n\nSorry, we don't speak polish :)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13265709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13266506", "body": "I added other changes, please highlight me the exact lines I'm missing or please submit a pull request: https://help.github.com/articles/using-pull-requests\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13266506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13266975", "body": "ok I updated the whole method, thanks\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13266975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/14935807", "body": "Thanks Fedor, can you please change $record->$fieldConfirmation by $record->readAttribute($fieldConfirmation). This method can read the value of the field even if it is declared as protected.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/14935807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/14936369", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/14936369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/16005507", "body": "Incubator is now available via composer, check README, regards\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/16005507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/16005520", "body": "The adapter is now available, thanks\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/16005520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/18553457", "body": "Thank you Alexey :)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/18553457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/19423465", "body": "Thank you Daniel!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/19423465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/23342364", "body": "Thanks!!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/23342364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/23495283", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/23495283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/24895979", "body": "thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/24895979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/26423239", "body": "Sorry, I forgot merge this\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/26423239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27155052", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27155052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/28634982", "body": "Thanks Richard\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/28634982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/28652860", "body": "Thanks Gasim\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/28652860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30020967", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30020967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30021282", "body": "Could you please rebase this against master?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30021282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30021300", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30021300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30021320", "body": "Could you please rebase this against master?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30021320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30023052", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30023052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30951109", "body": "Could you please rebase this against master/head?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30951109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30951305", "body": "Currently, this PR cannot be merged due to conflicts with the current code in master.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30951305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/31328096", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/31328096/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/31483832", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/31483832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/31483854", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/31483854/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/31483877", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/31483877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32109874", "body": "Yes please!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32109874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32218603", "body": "Thanks for this!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32218603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32424324", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32424324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32437296", "body": "Yes, that could fix the problem, could you please submit a PR with it?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32437296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/comments/5705716", "body": "There's no difference\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/comments/5705716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "Xrymz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/11008420", "body": "checked the set, get, has. works fine :)  I hope it will help someone. ps - my first pull request :))\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/11008420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/11050675", "body": "okey, in 2-3 days I will try to write :)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/11050675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "niden": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/11009188", "body": "Good stuff!!!\n\nThe contents of this message may contain confidential or privileged\ninformation and is intended solely for the recipient(s). Use or\ndistribution to and by any other party is not authorized. If you are not\nthe intended recipient, copying, distribution or use of the contents of\nthis information is prohibited.\n\nOn Tue, Dec 4, 2012 at 1:18 PM, Xrymz notifications@github.com wrote:\n\n> checked the set, get, has. works fine :) I hope it will help someone. ps -\n> my first pull request :))\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/phalcon/incubator/pull/3#issuecomment-11008420.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/11009188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/11619746", "body": "Thank you Eugene :)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/11619746/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/12271220", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/12271220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/12599426", "body": "Thank you!!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/12599426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/12601923", "body": "If you don't mind can you change the readme file to reflect this?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/12601923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/12604374", "body": "Thanks!!!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/12604374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/19045514", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/19045514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/21045270", "body": "Thank you\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/21045270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/21134853", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/21134853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/22060793", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/22060793/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/22208585", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/22208585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/22221677", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/22221677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/23483684", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/23483684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/23937114", "body": "Thank you\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/23937114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27696203", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27696203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27696244", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27696244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27696346", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27696346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27696389", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27696389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27696657", "body": "We could definitely add this for 2.0 once Zephir is ready :)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27696657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27698019", "body": "Not at the moment. We are still in alpha stage and our primary focus is to port the whole of Phalcon to Zephir. \n\nFollowing that we will have a lot more to work with such as making Zephir more mature (releasing alpha/beta versions) and adding more functionality to Phalcon itself.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27698019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/28659188", "body": "Thank you\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/28659188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29422613", "body": "Done\n\nThe contents of this message may contain confidential or privileged\ninformation and is intended solely for the recipient(s). Use or\ndistribution to and by any other party is not authorized. If you are not\nthe intended recipient, copying, distribution or use of the contents of\nthis information is prohibited.\n\nOn Wed, Nov 27, 2013 at 4:41 PM, Olivier Garb\u00e9 notifications@github.comwrote:\n\n> it's here : https://github.com/phalcon/incubator/releases and create new\n> release v1.2.4\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/phalcon/incubator/pull/64#issuecomment-29422517\n> .\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29422613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30133170", "body": "@ogarbe So you need a new branch for this or a new tag for 1.3.0?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30133170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30134716", "body": "OK. I will create for the moment a branch 1.3.0 so that we can work on it, since Phalcon 1.3.0 is still under development. Once 1.3.0 is ready we merge to the master and create the relevant tag.\n\nI am branching this now so effectively 1.3.0 will have the same code as master\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30134716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30136141", "body": "Done.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30136141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30139037", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30139037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30139056", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30139056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30147394", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30147394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32373377", "body": "Can you try again? I think it was because the incubator did not have the\n1.2.5 tag/release on.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32373377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32377415", "body": "@KonstantinMirin Can you please try one more time. I changed the composer.json file to map to 1.2.5\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32377415/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32386230", "body": "OK it should be fine now. The tag had to be updated.\n\nCan you please try one more time?\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32386230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/5345596", "body": "@geekcode Could you please open a pull request with the correction?\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/5345596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "tmihalik": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/12604355", "body": "Ok, changed readme file: https://github.com/tmihalik/incubator/commit/d16599a3b7fa4c0d355ceab54312d02e41425d81\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/12604355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29513160", "body": "I screwed it up\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29513160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30785647", "body": "yes, ca04086d95fdf9bc359f39d800b1e0738ff96a00\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30785647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30822577", "body": "It is true for the other branches too.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30822577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Cmssspl": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13065006", "body": "You add first v. im change it, look https://gist.github.com/4690638, in the current declarations are incorrect $ data = null and no options.\n\nhttps://gist.github.com/4690638\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13065006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13065118", "body": "Yes, im use only partial('catalogName / nameFile'), im change expand in files.\n\nPatch is certainly correct (if the change expands [files no patch in partial] starts to work ). The same problem occurs when the cache, cache is empty. :/\n\n'm currently using the cache built into the twig and function include(), it would be nice, however, that it started to work properly and do not have to use these to get around.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13065118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13259170", "body": "{{ partial('templates/top') }} is fixed. \n\nThx\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13259170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13261082", "body": "Hmmm, do not change the render (). This error is not related to problem # 12?\n\nMaybe 35-37 line id bad or unnecessary for test? I am using this code, the only problem is # 12 -> bad fix -> # 13.\n\nPs. https://github.com/phalcon/incubator/blob/master/Library/Phalcon/Mvc/View/Engine/Twig.php has error...\n\nDeclarate:\nprivate function _registryFunctions($view)\n\nUse:\n$this->_registryFunctions()\n\nWher is $view? ;-)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13261082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13265617", "body": "https://github.com/phalcon/incubator/blob/master/Library/Phalcon/Mvc/View/Engine/Twig.php This?\n\n_registryFunctions($view) need $view...\n\nOk, im change my file:\nhttps://gist.github.com/Cmssspl/4690638\n\nYou can use it instead of the current as a whole. He fixes a bug, does not enforce use {{content () | raw}} add method partial () and fix default value is not correct.\n\nEdit: sorry. :P\n\nThx for speed fix. ;-)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13265617/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13266032", "body": "Yes, this is error.\n\nLook my gist.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13266032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13266274", "body": "He wanted to know why you not added other changes?\n1. add partial()\n2. change default var\n3. is_safe\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13266274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13266828", "body": "https://gist.github.com/Cmssspl/4690638#file-twig-php-L32-L109\n\n;-)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13266828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "suxxes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/14936340", "body": "You are welcome and there you go.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/14936340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "dVaffection": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/17739698", "body": "Please add to your composer.json autoload path:\n\n``` json\n\"psr-0\": {\n    \"Phalcon\": \"Library/\"\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/17739698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "matusch": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/19424003", "body": "I will be happy if it is needed later :)\n\nThanks for merge!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/19424003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "xboston": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/19607818", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/19607818/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/20178066", "body": "Thank you\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/20178066/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/23402335", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/23402335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/23630117", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/23630117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/24325751", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/24325751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/25225542", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/25225542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/26242143", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/26242143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/26491655", "body": "Thanks you!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/26491655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27761930", "body": "Thanks you!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27761930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27896910", "body": "may be close?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27896910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30222832", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30222832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30811145", "body": "Thanks you! =)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30811145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30830387", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30830387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30830432", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30830432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30830442", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30830442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/31337431", "body": "Thanks @Precea!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/31337431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/31852217", "body": "Thanks @digitronac !\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/31852217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32009272", "body": "Awesome!\nPlease add README for Library/Phalcon/Logger/Adapter/File/Multiple.php\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32009272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32035416", "body": "Excellent! Thanks @rlaffers !\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32035416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32035637", "body": "Please rebase to latest master\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32035637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32035932", "body": "Good =)\n@endeveit , please check this?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32035932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32038159", "body": "Why closed? ;-)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32038159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32038831", "body": "Now all good, thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32038831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32039561", "body": "@digitronac what for composer.lock ?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32039561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32041208", "body": "composer.lock is automatically generated for the current user. m.b. add composer.lock to .gitignore?\n\n\"sneakybobito/phalcon-stubs\": \"1.2.3\" - why?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32041208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32042427", "body": "For autocomlete https://github.com/phalcon/phalcon-devtools/tree/master/ide  ;) should be removed from the composer\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32042427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32042697", "body": "composer.lock generated after installing all dependencies on the user's machine, it is not needed in the project\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32042697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32042964", "body": "Ok ;-)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32042964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32043629", "body": "Thanks ;)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32043629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32053926", "body": "You right! Thanks @digitronac \n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32053926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32090571", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32090571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32090588", "body": "@endeveit  good?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32090588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32095443", "body": "Thanks guys!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32095443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32105446", "body": "Started https://github.com/phalcon/incubator/commit/c4a62a14e3744c31c985bcdd972e6c141fad3127\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32105446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32117530", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32117530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32210041", "body": "Nice!\nMay be use Phalcon master branch?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32210041/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32898807", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32898807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33863719", "body": "Thanks @ianbytchek !\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33863719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35856674", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35856674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "thecodeassassin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/21135080", "body": "Np :+1: \n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/21135080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "endeveit": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/23402832", "body": "You're welcome!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/23402832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/23502616", "body": "This fixed in a8452ab23e9a5a95c0c581f01c55f890cbe23c86\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/23502616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/23502659", "body": "Fixed in 2a12f7f56963abc4d31c6b19b1013cc8b37b994a\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/23502659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/24865513", "body": "Example of usage https://github.com/endeveit/incubator/tree/paginator-pager/Library/Phalcon/Paginator\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/24865513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27696464", "body": "You're welcome!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27696464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27696576", "body": "Not at all! Maybe sometime this will be included to the cphalcon :)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27696576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27697558", "body": "Oh, I'm keeping a close watch on Zephir.\nDid you know when the beta should be released?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27697558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27931812", "body": "I think yes\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/27931812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/31643850", "body": "addJs() and addCss() works with internal Phalcon assets implementation.\nHave you read the [docs](https://github.com/phalcon/incubator/tree/master/Library/Phalcon/Mvc/View/Engine#twig)?\nTo output assets you must call assetsOutputCss() and assetsOutputJs() functions in base template.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/31643850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32088725", "body": "Everything seems well except code style.\n1. The name of method \u00abgetResponseLinesText\u00bb is not semantic maybe it should be named something like \u00abgetWatchingResponse\u00bb\n2. There is no phpDoc type named \u00abtext\u00bb only \u00ab[string](http://www.phpdoc.org/docs/latest/references/phpdoc/types.html)\u00bb\n3. In #79 the code style indentation was changed to tabs\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32088725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32088779", "body": "This pull request violates [PSR-2](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md#1-overview) isn't it?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32088779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32090749", "body": "Here is the unified diff for additional code style fixes https://gist.github.com/endeveit/8368438\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32090749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32091037", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32091037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32094729", "body": "I'm using Intellij Idea with PHP plugin.\nBut source code formatting i do with [php-cs-fixer](https://github.com/fabpot/PHP-CS-Fixer).\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32094729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32094880", "body": "@xboston now everything is good\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32094880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32115132", "body": "@xboston thanks!\nI will fix the PHP_CodeSniffer's errors and submit pull request today.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32115132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32116878", "body": "@xboston @phalcon done in #101 \n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32116878/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32117565", "body": "This is fixed now\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32117565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32122885", "body": "Adding new template engines is a quite simple.\nIf you have experience with this template engines you can fork the incubator repository and add support yourself by looking at the implementation of the [existing libraries](https://github.com/phalcon/incubator/tree/master/Library/Phalcon/Mvc/View/Engine).\nAfter this just submit pull request.\nPhalcon team like contributions from the community.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32122885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32123027", "body": "I suppose it will be hard because many production-ready projects already uses ConfirmationOf.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32123027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32123221", "body": "@chiefGui maybe it would be better to port ZF [pluralization implementation](https://github.com/zendframework/zf1/blob/master/library/Zend/Translate/Plural.php#L46)?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32123221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32123264", "body": "Or like that :smile: \nI think this issue can be closed.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32123264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32232001", "body": "@xboston in composer.json we have dependency on 1.2.4\n@phalcon you're welcome\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32232001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32374442", "body": "This violates polymorphism isn't it?\nAll cache backends implements \\Phalcon\\Cache\\BackendInterface which doesn't contains method \u00abhexists\u00bb.\nAlso your commit broke the build: https://travis-ci.org/phalcon/incubator/builds/16994857\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32374442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32436964", "body": "> Although it does not stop us to create further required methods.\n\nYes they don't but you must be aware that the extensions should not break framework api.\n\nLet's look at the following example.\nYou have a production-ready project which works and earns money.\nDI looks like this: https://gist.github.com/endeveit/263dbd4904eadc8abce6#file-di-in-prod-environment-php\nIn one day developer decided to use redis cache driver, instead of memcache:\nHe changed DI in dev-environment: https://gist.github.com/endeveit/263dbd4904eadc8abce6#file-di-in-dev-environment-php\nAnd added some new business logic: https://gist.github.com/endeveit/263dbd4904eadc8abce6#file-logic-php\nWhat happens if a developer or system administrator forgets to change the production environment configuration?\nYou'll get fatal error \u00abCall to undefined method hexists()\u00bb on production and company loose the clients.\n\nI think such features shouldn't be in library instead of this developer must write his code in this way:\nDI https://gist.github.com/endeveit/263dbd4904eadc8abce6#file-di-new-php\nBusiness logic https://gist.github.com/endeveit/263dbd4904eadc8abce6#file-logic-new-php\n\nP.S. You pull request failed because PHP_CodeSniffer doesn't allow extra new line characters at the end of the class (line 179).\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32436964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32437241", "body": "@niden I've looked to the changelist between 1.2.4 and 1.2.5 there is no incompatible changes between them.\nMaybe we should change composer.json from\n\n> \"ext-phalcon\": \"1.2.5\"\n\nto\n\n> \"ext-phalcon\": \">=1.2.4,<1.3\"\n\n?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32437241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32437422", "body": "Ok I test it and if everything work well I'll submit PR.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32437422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32441590", "body": "@KonstantinMirin please try again\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32441590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32442466", "body": "Hm, package on packagist.org still not updated\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32442466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32467752", "body": "I've tested it again.\nEverything works with phalcon 1.2.4 and 1.2.5\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32467752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32472258", "body": "I'll close it myself\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32472258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32472341", "body": "Done in #97 \n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32472341/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32490245", "body": "@tmihalik this is not a typo.\nWe can pass integer placeholders in binding: http://docs.phalconphp.com/en/latest/reference/models.html#binding-parameters\nAlso your PR haven't passed travis ci build.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32490245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32608102", "body": "Hello.\nPlease fix build errors and I'll merge your PR.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32608102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32608450", "body": "Also maybe you should extend Phalcon\\Cache\\Frontend\\Data and only redeclare \u00abbeforeStore\u00bb and \u00abafterRetrieve\u00bb methods?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32608450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32672217", "body": "Hi!\nYou've added codeception to mandatory requirements, i think it should be in require-dev.\nAlso you've added autogenerated files codeception/acceptance/WebGuy.php, codeception/functional/TestGuy.php and codeception/unit/CodeGuy.php.\nDo we really need them under the source control?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32672217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32681222", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32681222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32748242", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32748242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32994564", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32994564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33091573", "body": "I'll take it\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33091573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33131774", "body": "@ianbytchek thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33131774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33131946", "body": "@wojewsky please test this\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33131946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33134633", "body": "Forgot about this.\nPlease try now.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33134633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33135436", "body": "@wojewsky check this please\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33135436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33136085", "body": "Why did you call \u00abqueryKeys\u00bb with configuration prefix?\nYou should call it something like this: $cache->queryKeys() or $cache->queryKeys('key')\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33136085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33136196", "body": "Thank you too\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33136196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33138002", "body": "The argument of method \u00abqueryKeys\u00bb named \u00ab$prefix\u00bb is not the same as object property $option['prefix'].\n$option['prefix'] is internal data.\nThis is just a little misunderstood in variables naming.\nYou've provided a correct link.\nWhen i setup cache backend I may know nothing about the value of prefix in options, the library must do all dirty work for me.\nE.g:\n\n``` php\n$cache = new \\Phalcon\\Cache\\Backend\\Redis($frontend, array(\n  'redis'  => $redis,\n  'prefix' => someFuncThatGeneratesDynamicPrefixForApplication(),\n));\n\n// redis> \"SETEX\" \"generatedPrefix_key1\" \"1\" \"s:5:\\\"value\\\";\"\n$cache->save('key1', 'value');\n\n// Here I don't know anything about the value \"generatedPrefix_\" in options\n// but I want to get my entry with \"key1\":\n// redis> \"KEYS\" \"generatedPrefix_key*\"\nforeach ($cache->queryKeys('key') as $key) {\n    var_dump($key);\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33138002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33138560", "body": "You're welcome\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33138560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33556085", "body": "Hi.\nPlease fix build errors and I'll merge your PR.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33556085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33590324", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33590324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33773299", "body": "I agree\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33773299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33864572", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33864572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/34063968", "body": "Hi.\nWhy this should be in incubator?\nid2Dir is a project specific function besides it can be rewritten much simpler.\nSomething like this.\n\n``` php\nfunction id2Dir($uniqueId)\n{\n    $result = str_pad($uniqueId, 10, '0', STR_PAD_LEFT);\n    $result = substr($result, 0, 7) . '/' . substr($result, -3);\n    $result = substr($result, 0, 4) . '/' . substr($result, 4);\n\n    // id2Dir(123456) outputs \"0000/123/456\"\n\n    return $result;\n}\n```\n\nAlso your implementation of truncateText doesn't work properly with multibyte strings.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/34063968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/34069760", "body": "I've found \u00abtruncateText\u00bb implementation in my project.\nMaybe you test it and make new PR with it?\n\n``` php\n/**\n * Smart string truncate.\n * Splits string with max $maxNbWords or $maxNbChars.\n *\n * @param  string  $value\n * @param  integer $maxNbWords\n * @param  integer $maxNbChars\n * @param  string  $suffix\n * @return string\n */\npublic function getTruncated($value, $maxNbWords, $maxNbChars = 35, $suffix = '\u2026')\n{\n    $unwantedCharsAtTheEnd = '#[\\s\\.\\,]*$#u';\n    $charset               = 'UTF-8';\n    $suffixLength          = mb_strlen($suffix, $charset);\n\n    $tokens    = preg_split('#[/\\\\\\\\\\_\\s]+#u', $value, $maxNbWords + 1);\n    $nbTokens  = count($tokens);\n    $padSuffix = false;\n\n    if ($nbTokens > $maxNbWords) {\n        $nbTokens  = $maxNbWords;\n        $tokens    = array_slice($tokens, 0, $maxNbWords);\n        $padSuffix = true;\n    }\n\n    $result = preg_replace($unwantedCharsAtTheEnd, \"\", implode(' ', $tokens)) . ($padSuffix ? $suffix : '');\n    if ($maxNbChars <= $suffixLength || mb_strlen($result, $charset) <= $maxNbChars) {\n        return $result;\n    }\n\n    while ($nbTokens > 1) {\n        $last   = array_pop($tokens);\n        $length = mb_strlen($result, $charset) - mb_strlen($last, $charset) - 1 - $suffixLength;\n        $result = preg_replace($unwantedCharsAtTheEnd, \"\", mb_substr($result, 0, $length, $charset)) . $suffix;\n\n        if (mb_strlen($result, $charset) <= $maxNbChars) {\n            return $result;\n        }\n\n        --$nbTokens;\n    }\n\n    $result = preg_replace(\n        $unwantedCharsAtTheEnd,\n        \"\",\n        mb_substr($result, 0, $maxNbChars - $suffixLength, $charset)\n    ) . $suffix;\n\n    return $result;\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/34069760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/34402620", "body": "Hi.\nCould you please provide some examples?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/34402620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/34727008", "body": "Hi.\nPlease fix build errors and I'll merge your PR.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/34727008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/34831803", "body": "Hello again.\nI've re-runned build.\nPlease check now.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/34831803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/34863068", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/34863068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35059046", "body": "@calinrada check now please\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35059046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35073309", "body": "@kbsali I suppose the signature of method \u00ablogInternal\u00bb should be changed to logInternal($message, $type, $time, $context = array()) for backwards compatibility.\nAnd calling $this->getFormatter()->format() in Library/Phalcon/Logger/Adapter/File/Multiple.php and Library/Phalcon/Logger/Adapter/Firelogger.php should be changed too.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35073309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35074384", "body": "Here https://github.com/kbsali/incubator/blob/master/Library/Phalcon/Logger/Adapter/File/Multiple.php#L83 and here https://github.com/kbsali/incubator/blob/master/Library/Phalcon/Logger/Adapter/Firelogger.php#L145\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35074384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35075556", "body": "OK, I'll fix it myself :)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35075556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35076358", "body": "@calinrada please check\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35076358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35080098", "body": "@sjinks hi\nThe problem is that composer.json was changed a couple weeks ago and phalcon version in dependencies was set to \">=1.2.4,<2\"\nSo we must port these changes to current branch.\nBut I'll check branches again to find differences.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35080098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35147885", "body": "@sjinks @calinrada I've merged 1.3.0 with master, please check\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35147885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35824956", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35824956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35976008", "body": "Hi!\nPlease fix build errors and I'll merge your PR.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35976008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/36588892", "body": "Hi!\nI cannot merge your PR to master because incubator supports PHP 5.3 but \\SessionHandlerInterface appeared in PHP 5.4\nCould you please make your changes compatible with PHP 5.3?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/36588892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/36595548", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/36595548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/36709063", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/36709063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/36709090", "body": "Hi.\nCould you please provide more information?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/36709090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/36816474", "body": "Did you try \"require\": {\n\"phalcon/incubator\": \"dev-master\"\n}\n?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/36816474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/37371911", "body": "Why don't you add this to master branch?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/37371911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/37400250", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/37400250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/13955091", "body": "This is MySQL specific statement, it will not work with PostgreSQL for example\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/13955091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/14655180", "body": "It would be better if you escape identifiers such as \"value\", \"language\" and \"key_name\" with $db->escapeIdentifier()\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/14655180/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/14655213", "body": "Backticks for escaping `count` works only in MySQL\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/14655213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/14655276", "body": "Why did you renamed class?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/14655276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/13956219", "body": "You have a type here in col_modifiad_at\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/13956219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038324", "body": "Agree\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038329", "body": "Ok\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038703", "body": "You think big. Maybe you should propose these ideas for cphalcon project?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17434341", "body": "Why did you delete this function?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17434341/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/19856203", "body": "You should use method \u00abexecute\u00bb.\nMethod \u00abquery\u00bb used only when the statement returns rows.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/19856203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/21444976", "body": "Please make the $options optional to not break compatibility\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/21444976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/21444988", "body": "And here too\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/21444988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/41851226", "body": "Please add space after \"if\"\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/41851226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "nexik": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/23925996", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/23925996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32679830", "body": "I made changes. Please check and write comment if something more is needed to change\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32679830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "ThePixelDeveloper": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/23927737", "body": ":thumbsup: \n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/23927737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "gsouf": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/23938710", "body": "Thanks niden\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/23938710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/comments/4742190", "body": "Please make a tag for older incubator for ext-phalcon. Or i will have to delete it and pull request by myself. Thanks \n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/comments/4742190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "ghost": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/25666410", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/25666410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29382766", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29382766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29385970", "body": "Could you please rebase against the latest master as your pull request does not merge cleanly?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29385970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29422478", "body": "@phalcon or @niden could you please do that?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29422478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30964564", "body": "@chiefGui \n\n``` bash\ngit fetch --all\ngit checkout master\ngit rebase upstream/master\ngit push -f\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30964564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32123158", "body": "``` php\nclass EqualsTo extends ConfirmationOf\n{\n}\n```\n\n:smile: \n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32123158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32305541", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32305541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32847766", "body": "Did you try `SHOW FULL PROCESSLIST`? It could be that the table is locked for some reason.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32847766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33856196", "body": "~0 = -1 = a value with all bits set.\n\n`~` is a binary NOT operation (bit inversion).\n\nAs far as I understand, the intention of `error_reporting(~0);` is to set error reporting level that includes absolutely all error types, including those that will be added in future.\n\nBut personally I prefer `error_reporting(-1);`\u00a0\u2014 this is less obscure and is documented in the PHP manual.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33856196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35078825", "body": "@endeveit check 1.3.0 branch of the incubator.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35078825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35078905", "body": "Guys, shouldn't you be using 1.3.0 branch of the Incubator with Phalcon 1.3.0? I thought this was the purpose of multiple branches here\u2026\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35078905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35078917", "body": "Guys, shouldn't you be using 1.3.0 branch of the Incubator with Phalcon 1.3.0? I thought this was the purpose of multiple branches here\u2026\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35078917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35982718", "body": "Merged, thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35982718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ogarbe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29422306", "body": "Thanks @sjinks ! We need one last thing, it's to create the tag 'v1.2.4' for this version.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29422306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29422517", "body": "it's here : https://github.com/phalcon/incubator/releases and create new release v1.2.4\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29422517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29423395", "body": "Thank you !\n\nConcerning this package, i recommend you to follow Packagist recommandation concerning update schedule, so that the package https://packagist.org/packages/phalcon/incubator will be updated automatically.\n\nRegards\n\nOlivier\n\nhttps://packagist.org/about\n\nNew packages will be crawled immediately after submission if you have JS enabled.\n\nExisting packages without auto-updating (GitHub hook) will be crawled once a day for updates. When the GitHub hook is enabled packages are crawled whenever you push, or at least once a week in case the crawl failed. You can also trigger a manual update on your package page if you are logged-in as a maintainer.\n\nIt is highly recommended to set up the GitHub service hook for all your packages. This reduces the load on our side, and ensures your package is updated almost instantly. To do so you can go to your GitHub repository, click the \"Admin\" button, then \"Service Hooks\". Pick \"Packagist\" in the list, and add the API key you will find on your profile, plus your Packagist username if it is not the same as on GitHub. Check the \"Active\" box and submit the form.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29423395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29428397", "body": "Sorry again, after most reading, it seems puting the version in the composer.json is a bad idea...\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29428397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29428597", "body": "#66 to change this.\n\nSorry for inconvenience...\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29428597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29466215", "body": "so we must create an 1.3.0 stable incubator version too\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29466215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30134405", "body": "Logically, we should create a tag/branch for each phalcon version\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30134405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30134897", "body": "Great\n\nCan you create also a branch 1.2.x so that users not using 1.2.4 can use it ?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30134897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30137793", "body": "https://github.com/phalcon/incubator/pull/73 for pre 1.2.4\n\nhttps://github.com/phalcon/incubator/pull/74 for 1.3.0\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30137793/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30139374", "body": "https://github.com/phalcon/incubator/pull/73 and https://github.com/phalcon/incubator/pull/74 are more secure from my point of view.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30139374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32380318", "body": "@niden seems ko look here : https://github.com/phalcon/incubator/blob/v1.2.5/composer.json#L16\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32380318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35867768", "body": "Can you commit this request ? thanks !\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35867768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35982661", "body": "I think it's not my PR, it's a pb in 1.2.x branch : \n\nWARNING: We were unable to find a .travis.yml file. This may not be what you\n  want. Build will be run with default settings.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35982661/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/37298619", "body": "Please merge (as 1.2.x is not travis testable...)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/37298619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/37374236", "body": "because it's done in Phalcon 1.3.0 so it's unneeded for incubator >= 1.3.0\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/37374236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17214720", "body": "so we should suppress it from incubator instead of renaming.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17214720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17511172", "body": "i'm not fan of this namespace : your main class is \\Phalcon\\Mailer\\Mailer() ...\n\nthe namespace could be Mails (as we have Assets, Models, Events)\nand your main class could be called : \n\\Phalcon\\Mails\\Manager()\n\nas it is used to manage messages (send them)\n\nand as we have Assets / Models / Collections / Events ... managers\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17511172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17511232", "body": "Because at first quite all namespaces in Phalcon where about things they were working with : Assets, Models, Events, ...\nThe manager is an Assets manager or a Models manager ... The namespace naming is logical\nSo having something which manage mails (creates them, send them, (and perhaps parse received ones ?)) should be named (in my point of view) Mails\\Manager\n\nNow we have Translate and Logger namespaces, i don't like this as it's not the same point if view, for loggers, i would have prefered a Logs namespace and a Translations one. @phalcon what do you think about this ?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17511232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "calinrada": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29449832", "body": "This is not ok. I am using 1.3.0 and i need adapters from incubator.  \n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29449832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29579452", "body": "Can anyone just click on Merge button for this PR ?? Or i should just clone this and use mine ?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29579452/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35069151", "body": "Works fine. I will open another one for Phalcon\\Logger\\Adapter\\Database::logInternal()\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35069151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35082361", "body": "Related to the issue, is fixed. Related to the branch i agree with @sjinks .\n\nThx\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35082361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "iskandar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29838417", "body": "> Please make a tag for older incubator for ext-phalcon\n\nAgreed, please make a set of 1.2.x tags or remove [the `ext-phalcon` line here](https://github.com/phalcon/incubator/blob/4c2599f361da1f632e9490c3aa077cc2e8ad6b37/composer.json#L17).\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29838417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "chiefGui": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29924426", "body": "I can't wait for answers, then I created a simple solution by myself. To know what I did, just take a look here (https://github.com/phalcon/incubator/pull/70) to see what I'm proposing.\n\nIf the solution doesn't sound consistent, please, let me know why.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/29924426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30017260", "body": "Hey! Thanks about your entries!\n\nSo, I'm using \"language\" with that type (CHAR(5)) because it's compatible with the users agents of modern browsers. I think it's more important and relevant than Intl's functions from PHP \u2014 don't you think?\n\nFor instance, I've never used these \"Intl functions\", neither heard about (am I making a mistake?)\n\nAbout your table structure: actually, I thought to use an auxiliary table to store the languages and make a connection through foreign key, but I don't want to make heavy changes in the database and consequently affect the user's experience and facilities.\n\nFinally, I have to agree with you \u2014 the `id` column is unnecessary. I'm so used to work with that type that is automatic to give life to it.\n\nAnyway, your suggestion is very welcome aboard and let's wait too see what other experts have to say! :smile: \n\nThank you for contribute again.\n\nCheers!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30017260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30082765", "body": "Hey, [moderndeveloperllc](https://github.com/moderndeveloperllc), I agree with you in this part:\n\n```\nI wouldn't worry too much about backwards compatibility as the current adapter is just really bad and I doubt ANYONE would use it as is.\n```\n\nHehe.\n\nAnyway, pull your suggestions to the incubator to improve it!\n\nAnd [phalcon](https://github.com/phalcon), you're welcome! Tomorrow I'll enhance the documentation to support the new scheme.\n\nCheers!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30082765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30123034", "body": "I made some corrections in the (2) version. Ignore the first one.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30123034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30263120", "body": "Guys, now that I saw: the documentation is wrong. I'll fix it up in a while.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30263120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30309443", "body": "I will submit another Pull Request with the right changes.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30309443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30899731", "body": "Guys?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30899731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30918441", "body": "Lets improve, then!\n\nI just don't understand your way to pluralize words. Maybe can you implement this on my forked repository? I can't _combine_ russian plural with others \u2014 can you do this for us?\n\nThanks in advance.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30918441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30951233", "body": "\"rebase this against master/head\"... What do you mean? Push?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30951233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "moderndeveloperllc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30015534", "body": "I think you should have the language column should be a more generic \"locale\". It should also be a varchar(15) as some may want to either use locales with script identifications. For instance, this would be a valid locale for use with PHP Intl functions: vai_Latn_LR (Vai written in Latin script in Liberia). Right now locales are only up to 11 characters, but might as well pass a few extra as it doesn't take up any more space.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30015534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30016177", "body": "Oh, you can also drop the id column, have a compound primary key (locale, key_name), and unrestrict the key_name column a bit (no real need to restrict it):\n\n``` sql\nCREATE TABLE IF NOT EXISTS `translations` (\n  `locale` varchar(15) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,\n  `key_name` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,\n  `value` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,\n  PRIMARY KEY (`locale`,`key_name`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30016177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30020009", "body": "I few quick comments. if you want to use the Accept-Language header as as a quick default for the language to set, you will need to make it a varchar(17) as the the [W3 spec](http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.10) allows 8-8 codes. Using just the Accept-Language codes as the sole determination of the user's language [is not recommended](http://www.w3.org/International/questions/qa-accept-lang-locales). Best practice is to have a switcher so that the user can indicate which language to use. Check out [Goal.com](http://www.goal.com/) as a good example of how to change languages (I did a bit of the I18n and L10n work there back in the day). When I was there, they actually did a bit of GeoIP lookup in addition to Accept-Language headers to pick a default.\n\nAs far as using the intl functions - if you are serious about doing it right - yes, you should absolutely be using at least [IntlDateFormatter](http://lv1.php.net/manual/en/class.intldateformatter.php) and [NumberFormatter](http://lv1.php.net/manual/en/class.numberformatter.php). Many countries write their dates, times, numbers, and currencies differently. I would create a few [view filters](https://phalcon-php-framework-documentation.readthedocs.org/en/latest/reference/volt.html#id4) to make things easier. Just getting those four things right will go a long way towards making your app feel more professional. There is also a function to help [convert from Accept-Headers into a real locale](http://www.php.net/manual/en/locale.acceptfromhttp.php) to help make the switch.\n\nI wouldn't worry too much about backwards compatibility as the current adapter is just really bad and I doubt ANYONE would use it as is.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30020009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Plaputta": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30022814", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30022814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/comments/5433126", "body": "Yeah well, I had named it \"Memcached\" because Phalcon already has a Memcache Adapter, but Phalcon's implementation is very buggy. See https://github.com/phalcon/cphalcon/issues/1550 - Renaming it to \"Memcache\" made endeveit delete it in commit https://github.com/phalcon/incubator/commit/24e5d5b086709ae1790978d91965060b9e2fe9fd and now it's gone and we're left alone with the buggy version again :(\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/comments/5433126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/comments/5457702", "body": "Oh great, didn't see that. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/comments/5457702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "MatejBalantic": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30152705", "body": "Good point, I should have looked better. I didn't notice that Incubator has \"phalcon-1.3.0\" branch.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30152705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ovr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30911885", "body": "Your code support only eng language\nfor russian example\n\n``` php\nclass Helpers\n    extends \\Phalcon\\Tag\n{\n    /**\n     * @param int $n\n     * @param string $form1\n     * @param string $form2\n     * @param string $form3\n     *\n     * @return string\n     */\n    static public function plural($n, $form1, $form2, $form3)\n    {\n        $plural = ($n % 10 == 1 && $n % 100 != 11 ? 0 : ($n % 10 >= 2 && $n % 10 <= 4 && ($n % 100 < 10 or $n % 100 >= 20) ? 1 : 2));\n        switch($plural) {\n            case 0:\n            default:\n                return $form1;\n            case 1:\n                return $form2;\n            case 2:\n                return $form3;\n        }\n    }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/30911885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jmaitrehenry": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/31348855", "body": "No problem!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/31348855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/31350975", "body": "How I try to use the asset tag:\n    {% assets addJs('//code.jquery.com/jquery-1.10.2.min.js') %}\n    {% assets addJs('//netdna.bootstrapcdn.com/bootstrap/3.0.3/js/bootstrap.min.js') %}\nHow I use the stylesheetLink:\n{{ stylesheetLink(\"//netdna.bootstrapcdn.com/bootstrap/3.0.3/css/bootstrap.min.css\", false) }}\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/31350975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/31675244", "body": "Oh, didn't see the assetsOutputCss and assetsOutputCss function... \nThanks !\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/31675244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "tilleps": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/31897918", "body": "Appears that the Phalcon\\Loader is (now?) PSR-0 compliant:  http://docs.phalconphp.com/en/latest/reference/loader.html\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/31897918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "digitronac": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32038595", "body": "oh i thought i have to, to make new one :)\n\nnot very experienced with this :)\n\nOn Fri, Jan 10, 2014 at 4:48 PM, boston notifications@github.com wrote:\n\n> Why closed? ;-)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/phalcon/incubator/pull/96#issuecomment-32038159\n> .\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32038595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32038900", "body": "oh, great, not familiar with rebasing :)\n\nOn Fri, Jan 10, 2014 at 4:54 PM, boston notifications@github.com wrote:\n\n> Now all good, thanks!\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/phalcon/incubator/pull/96#issuecomment-32038831\n> .\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32038900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32040494", "body": "when executing \"composer.phar install\" , composer reads what to install\nfrom composer.lock\n\nOn Fri, Jan 10, 2014 at 5:02 PM, boston notifications@github.com wrote:\n\n> @digitronac https://github.com/digitronac what for composer.lock ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/phalcon/incubator/pull/96#issuecomment-32039561\n> .\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32040494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32041993", "body": "when doing update it is generated, when using install it reads from lock\ncomposer recommends that composer.lock is commited ->\nhttp://getcomposer.org/doc/01-basic-usage.md#composer-lock-the-lock-file\n\"Commit your application's composer.lock (along with composer.json) into\nversion control.\"\n\nsneakybobito/phalcon-stubs is there to provide IDE autocompletion for\nphalcon code\n\nOn Fri, Jan 10, 2014 at 5:20 PM, boston notifications@github.com wrote:\n\n> composer.lock is automatically generated for the current user. m.b. add\n> composer.lock to .gitignore?\n> \n> \"sneakybobito/phalcon-stubs\": \"1.2.3\" - why?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/phalcon/incubator/pull/96#issuecomment-32041208\n> .\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32041993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32042522", "body": "oh sorry, didnt know about it, i will remove it right away\n\nOn Fri, Jan 10, 2014 at 5:33 PM, boston notifications@github.com wrote:\n\n> For autocomlete\n> https://github.com/phalcon/phalcon-devtools/tree/master/ide ;) should be\n> removed from the composer\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/phalcon/incubator/pull/96#issuecomment-32042427\n> .\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32042522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32042878", "body": "okay, remvoing it also now :)\n\nOn Fri, Jan 10, 2014 at 5:36 PM, boston notifications@github.com wrote:\n\n> composer.lock generated after installing all dependencies on the user's\n> machine, it is not needed in the project\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/phalcon/incubator/pull/96#issuecomment-32042697\n> .\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32042878/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32043098", "body": "https://github.com/phalcon/incubator/pull/98\n\nhere, sorry and thanks :)\n\nOn Fri, Jan 10, 2014 at 5:39 PM, boston notifications@github.com wrote:\n\n> Ok ;-)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/phalcon/incubator/pull/96#issuecomment-32042964\n> .\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32043098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32102910", "body": "excellent idea\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32102910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32202014", "body": "awesome :)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32202014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32846394", "body": "unfortunately this didn't solve problem, will need to investigate bit more. closing this pull request\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32846394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32863121", "body": "good idea :)\nstate is \"Waiting for table metadata lock\", i guess some transaction in my\napplication code is causing that, will investigate\n\nthanks!\n\nOn Tue, Jan 21, 2014 at 12:36 PM, Vladimir Kolesnikov <\nnotifications@github.com> wrote:\n\n> Did you try SHOW FULL PROCESSLIST? It could be that the table is locked\n> for some reason.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/phalcon/incubator/pull/117#issuecomment-32847766\n> .\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32863121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/34068336", "body": "i use that solution regulary so thought it might be useful, if not, you can just close it.\n\nif you think truncateText might be useful i can modify it to be multibyte aware.\n\nthanks for feedback!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/34068336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/34071842", "body": "cool, why not. only idk how fast is that implementation with while loop and preg_replaces. but i guess for normal usage it is more then fine.\n\nill test it out a bit and submit PR.\nthanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/34071842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/34075594", "body": "they work quite differently if im not mistaking. \nyour implemenation breaks on word limit, and implemenation that i sent in PR breaks on defined character.\n\ni did some very dirty and crude speed test. this code http://fixee.org/paste/7he7n9u/ outputs\n\nTruncateText1: 0.0032517910003662\nTruncateText2: 0.15376806259155\n\nfor my projects first truncateText solution, with added mb support, is more useful. quite possible that for community solution number 2 is better so ill make some tests and submit PR with it.\n\nanyways not gonna waste anymore of your time :) \n\nthank you for your help and support!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/34075594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "tapan-kumar-thapa": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32090342", "body": "1. method name getResponseLinesText has been changed to getWatchingResponse to make best practice in place. \n2. Code formatting has been changed from SPACES to TAB. \n3. Correct phpdoc has been set on getWatchingResponse method from text to string.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32090342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32091017", "body": "patched applied.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32091017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32093244", "body": "Also would like to know which text editor you are using with which formatting plugin. I am using sublime text 2.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32093244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32094838", "body": "Thanks for the info. Let me know if my code looks ok now. If yes than please merge it or confirm if any deviation.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32094838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32095615", "body": "Your welcome...\nI am glad that i have given something back to community.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32095615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32389329", "body": "In regards to polymorphism, it may create issue as parent class (redis) is having a method by same name. Should i change method name from hExists to may be isExitsInHash?\nas far as i know about interfaces, it tells us to implement the required methods. Although it does not stop us to create further required methods.\ni really don't know how come my provided method has broken Travis build. Pls suggest.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32389329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32470555", "body": "Thanks for the gr8 idea.. I got your idea of registering redis service/class individually so that i can access all the methods provided by that service/class. \n\n$di->set('redis', function () {\nreturn new \\Redis();\n}, true);\n\nAwesome...\n\nShould i cancel my pull request?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32470555/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rlaffers": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32093944", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32093944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/34203904", "body": "Please try: https://github.com/rlaffers/incubator/commit/7e27019dcc6a30732d525e9b1ed843dee1e04a58\n\nYou may use new methods: nquery(), cnquery(), and dnquery().\nI will make a pull request once tested and documented in README.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/34203904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/34754045", "body": "I reformatted the code but now Travis says \"No output has been received in the last 10 minutes, this potentially indicates a stalled build or something wrong with the build itself\". The code itself is functional. Can you please re-run the build to see if it builds?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/34754045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/34868850", "body": "This feature has been merged into master branch. This FR can be closed.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/34868850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "KonstantinMirin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32355263", "body": "Guys, I've installed phalcon 1.2.5 and now can't install incubator via composer, it says it's incompatible. How can I fix this?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32355263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32375314", "body": "In composer.json I have\n\"require\": {\n         \"phalcon/incubator\": \"v1.2.4\"\n     }\n\nIn console:\n$ composer.phar install\nLoading composer repositories with package information\nInstalling dependencies (including require-dev)\nYour requirements could not be resolved to an installable set of packages.\n\n   Problem 1\n     - Installation request for phalcon/incubator v1.2.4 -> satisfiable \nby phalcon/incubator[1.2.4].\n     - phalcon/incubator 1.2.4 requires ext-phalcon 1.2.4 -> the \nrequested PHP extension phalcon has the wrong version (1.2.5) installed.\n\nSo no, it didn't get fixed...\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32375314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32418787", "body": "Guys, I can see that there is a tag 1.2.5 and in composer.json you've set 1.2.5 for the framework, but when I run installation, it still gives the same error. Any ideas why it may still fail? I could not find any composer's cache, checked composer.lock, there is nothing about incubator there...\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32418787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "PyYoshi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32771614", "body": "Thanks, you, too!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/32771614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "wojewsky": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33133069", "body": "It works.\nBut the method queryKeys should not add the prefix twice (method parameter and getPrefixedIdentifier). The result of queryKeys cannot be used with get or delete becaus of the prefix.\nThis could be solved like this:\n\n``` php\nprotected function getPrefixedIdentifier($id)\n    {\n        $options = $this->getOptions();\n\n        if ((!empty($options['prefix'])) && (strpos($id, $options['prefix']) === false)) {\n            return $options['prefix'] . $id;\n        }\n\n        return $id;\n    }\n```\n\nand \n\n``` php\npublic function queryKeys($prefix = null)\n    {\n        $options = $this->getOptions();\n        if ($prefix === null) {\n            return $options['redis']->getKeys($this->getPrefixedIdentifier('*'));\n        } else {\n            return $options['redis']->getKeys($prefix . '*');\n        }\n    }\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33133069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33135540", "body": "the result of getQueryKeys looks good, but you shoul change line 147 to:\n\n``` php\n$result = $options['redis']->getKeys($prefix . '*');\n```\n\nFor example:\n\n``` php\n$cache = new \\Phalcon\\Cache\\Backend\\Redis($frontend, array(\n  'redis'  => $redis,\n  'prefix' => 'testPrefix',\n));\n$cache->save('key1', 'value');\nforeach ($cache->queryKeys('testPrefix') as $key) {\n  echo $cache->get($key);\n}\n```\n\nThe foreach has null entries...\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33135540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33135802", "body": "it works.\n\nThank you a lot.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33135802/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33136623", "body": "the param name is \"prefix\". Is it a prefix behind the prefix defined in the options?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33136623/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33136926", "body": "please look here:\nhttp://docs.phalconphp.com/en/latest/reference/cache.html#querying-the-cache\n\nin this example they've used the prefix as param....\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33136926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33138320", "body": "ok, now i understand.\nThen ereything looks fine.\n\nThank you a lot.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33138320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "quasipickle": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33142688", "body": "Nothing like leaving a public declaration of ignorance to help you find the problem...\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33142688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "nazwa": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33590067", "body": "Try now. \n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33590067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "ianbytchek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33860830", "body": "Thanks for the heads up!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/33860830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kbsali": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35074177", "body": "@endeveit just commits the default $context value.\nConcerning the format() signature... i'm not sure where i can check this out!?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35074177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35075466", "body": "sorry, not sure what you want me to do there :)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/35075466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "fabfuel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/36595364", "body": "Yes, sure! I have removed the interface \n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/36595364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "shruthi-ananth": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/36781367", "body": "Hi endeveit,\n\nI have the following in my project's composer.json. \n\"require\": {\n                \"phalcon/incubator\": \"v1.2.5\"\n    }\n}\n\nPhalcon module version for my environment is 1.2.6. So when I do 'composer udpate' to install incubator, I receive the following error and the install won't go through.\n\n<code>\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\nYour requirements could not be resolved to an installable set of packages.\n  Problem 1\n    - Installation request for phalcon/incubator v1.2.5 -> satisfiable by phalcon/incubator[v1.2.5].\n    - phalcon/incubator v1.2.5 requires ext-phalcon 1.2.5 -> the requested PHP extension phalcon has the wrong version (1.2.6) installed.\n</code>\n\nI do not wish to downgrade Phalcon from 1.2.6 to 1.2.5. Is there a way to get it to work with 1.2.6? I tried putting \"phalcon/incubator\": \"*\" / \"phalcon/incubator\": \"1.3.0\" in composer.json but didn't find any success. \n\nThe reason for using incubator is to offload model's metadata to a redis server. I hope I can do that instead of using apc or memory. \n\nThanks,\nShruthi\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/36781367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/36902723", "body": "Hi, \n\nThat worked! Thank you so much for the help. I appreciate it.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/36902723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "andersonamuller": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/comments/5705684", "body": "The namespace is wrong, it should be `Phalcon\\Db\\Dialect`\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/comments/5705684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/comments/5705686", "body": "Same problem with the namespace\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/comments/5705686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/comments/5705711", "body": "Shouldn't the class be without the preceding `\\`?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/comments/5705711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "busyfree": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/5339051", "body": "key name is error ,it's should be 'port'\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/5339051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "thehe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038283", "body": "because \"Yaml\" is already in MAIN Phalcon-Project?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038308", "body": "why we should escape these? they're hardcoded (which is very bad indeed) - it's just a \"slightly better version\" of the class... we should rewrite a LOT of components to allow dynamic column names (via options) etc...\nimho escapeIdentifier is not needed here - not injectable.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038315", "body": "oh really? i'll fix it the next days (i'm in \"short before deadline mode\" sry)...\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038431", "body": "is it possible to have a discussion-platform for incubator? i have some GENERAL IDEAS and approaches to discuss... for me it's strange to name a \"mysql/postgres\"-adapter \"Database\", because there are so many db's out there... the abstraction layer in phalcon lacks of rewrite-support for queries against mssql etc. so that we should use the following pattern instead:\n\nabstract class for sql99-based adapters:\n--> instance class for mysql, postgresql etc.. which INHERIT sql99-adapter where we can \"change small things if they won't work for a special db-system\"...\n\ni mean - when we generalize the database-things, we should categorize and provide a) a general STANDARD class (sql99) and some specific classes for alternation of standard\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17821973", "body": "afaik the impl of Phalcon's \"Yaml\" is broken or has some limitations - so \"Ex\" (suffixed: Extended) would be sufficent here?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17821973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "rwilbert-digitec": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17442818", "body": "My apologies for my ignorance of github. I thought merge requests were \nto the commit not the branch\n\nI removed it because it didn't fit our needs.  The file @ the time of \nmerge should of been \nhttps://github.com/rwilbert-digitec/incubator/blob/d5aeaef34b091d0aefcc7261f1a1eaafc84d8fb2/Library/Phalcon/Mvc/View/Engine/Twig.php \n\nOn 09/11/2014 01:22 PM, Nikita Vershinin wrote:\n\n> In Library/Phalcon/Mvc/View/Engine/Twig.php:\n> \n> > ```\n> >          }, $options),\n> > ```\n> > -            new \\Twig_SimpleFunction('url', function ($route) use ($di) {\n> \n> Why did you delete this function?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub \n> https://github.com/phalcon/incubator/pull/213/files#r17434341.\n\n## \n\nDigitec Signature\n\nJR Wilbert\nSr. Software Engineer | Hardware Engineer | Network Engineer\n\nDigitec Interactive http://digitecinteractive.com     Digitec Interactive\nOffice: 407.299.1800\nFax: 407.294.1431\nhttp://www.digitecinteractive.com/\nTwitter https://twitter.com/digitec Facebook \nhttps://www.facebook.com/digitecinteractive Gooogle + \nhttps://plus.google.com/u/0/103061874895109226124/posts Linked In \nhttp://www.linkedin.com/company/digitec Feed \nhttp://www.knowledgedirectweb.com/feed/\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17442818/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "KorsaR-ZN": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17511206", "body": "@ogarbe, About the renaming of the main class in \"Manager\", I agree, a good decision. \nBut renaming namespace think not a good solution. Why do you think so?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17511206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "parshikov": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/23462429", "body": "Oops\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/23462429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "Green-Cat": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/27473325", "body": "Please use array() instead of the short array syntax, to support php 5.3.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/27473325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29665712", "body": "@sergeyklay On it :+1: \n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/29665712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31585036", "body": "as QueryBuilder;\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31585036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31585093", "body": "NULL -> null\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31585093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31586382", "body": "FALSE -> false\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31586382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31586392", "body": "TRUE -> true\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31586392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31586525", "body": "New line\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31586525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "stibiumz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31599978", "body": "This is not specified in PSR2\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31599978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31600034", "body": "This also is not specified in PSR2, `empty` is not a function, lt's a [language construct](http://php.net/manual/en/reserved.keywords.php)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31600034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31600051", "body": "Already in use\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31600051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31600058", "body": "Not specified in PSR2\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31600058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31600491", "body": "And where's the space after the opening parenthesis?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31600491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31603713", "body": "I answered late, I'll fix it then :+1: \n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31603713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31605550", "body": "Shouldn't it be `$ phpcs --standard=PSR2 test.php`?\n\nIf so:\n\n![](http://i.imgur.com/dkCx1Ko.png)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/31605550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "temuri416": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/39350462", "body": "Done.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/39350462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/39350955", "body": "Sure. I avoid nested ternaries because execution path is not clear when using remote debugging.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/39350955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/39351219", "body": "Done. Let me know if I squashed smth wrong :)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/39351219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "Kachit": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/42481402", "body": "Why? Switch case is not agile. When you add new config adapter. You must modify config loader code\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/42481402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/42481847", "body": "Yml is not a config file: https://yandex.ru/support/partnermarket/yml/about-yml.xml\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/42481847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/42484744", "body": "Maybe hashmap\n\n``` php\nprotected $adaptersMap = [\n'yml' => 'yml',\n'yaml' => 'yml',\n'php5' => 'php',\n//other\n];\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/42484744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/42485439", "body": "As you wish )\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/42485439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/42834657", "body": "This code is not a validator logic. For other mongo classes you must write this code twice. Maybe extract this code into Phalcon\\PhpExtension\\Mongo::check() ?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/42834657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "Ak-Army": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/45472786", "body": "Cause there is a lot of problem with it:\nCURLOPT_FOLLOWLOCATION cannot be activated when safe_mode is enabled or an open_basedir is set in\n\nSo i think, if somebody want to use it, he know how they can turn it on,..\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/45472786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/45480011", "body": "Cant be protected cause it called by the curl.\n\nCURLOPT_HEADERFUNCTION A callback accepting two parameters. The first is the cURL resource, the second is a string with the header data to be written. The header data must be written by this callback. Return the number of bytes written. \n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/45480011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "vitalypanait": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/62411919", "body": "@sergeyklay done\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/62411919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "AsterAI": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/117290321", "body": "i think this is extra", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/117290321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "virgofx": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/116348460", "body": "The if check was outside for performance ... moved inside to ternary ... need to cache this otherwise this loses performance for sake of readability.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/116348460/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}}}}