{"_default": {"1": {"bby-bishopclark": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6741", "title": "knife wildcard search for attrs with values containing spaces doesn't work", "body": "\r\n## Description\r\nKnife search for attrs with spaces gives unexpected behaviour, like issue 2467\r\n\r\n## Chef Version\r\nchefdk-2.0.28-1.el7.x86_64\r\nchef-server-core-12.17.15-1.el7.x86_64 on server\r\n\r\n## Platform Version\r\nclient: Enterprise Linux 7 (rhel/centos)\r\nserver: Enterprise Linux 7 (rhel/centos)\r\n\r\n## Replication Case\r\ncd ~/chef-repo/knife/prod/\r\n### on 12 nodes\r\nknife node attribute set testbox updates.sched '0200 sun' \r\n### on 8 other nodes:\r\nknife node attribute set nodeXX updates.sched '0200 wed' \r\n\r\n### and search\r\n1. knife search node  'updates_sched:0200*sun' -a updates.sched\r\n2. knife search node  'updates_sched:0200?sun' -a updates.sched\r\n3. knife search node  'updates_sched:0200' -a updates.sched\r\n4. knife search node  'updates_sched:0200*' -a updates.sched\r\n5. knife search node  'updates_sched:0200?' -a updates.sched\r\n\r\n## Client Output\r\n(vv-output included for one; I can include for the others.  I'm also taking some license in truncating the output, but I can always repeat the searches and add then in and I'm hoping I made the output clear)\r\n\r\n1.\r\nsearch with '*' to cover the space: no results\r\n:\r\nDEBUG: Initiating POST to https://chef.our.org/organizations/org/search/node?q=updates_sched:0200*sun&start=0\r\n:\r\n0 items found\r\n\r\n2.\r\nSearch with '?' to cover the space.  No hits\r\n:\r\n0 items found\r\n\r\n3.\r\nSearch for the first 4 letters and find all the test subjects - test pass.\r\n:\r\ntstel7-01:\r\n  updates.sched: 0200 sun\r\n\r\ntstel7-02:\r\n  updates.sched: 0200 wed\r\n:\r\n20 items found\r\n\r\n4.\r\nSearch for 0200* and find the same expected list - test pass\r\n:\r\n20 items found\r\n\r\n5.\r\nSearch for 0200? to cover the space again\r\n:\r\n0 items found\r\n\r\n\r\nThe debug output (chef-client -l debug) may be useful, but please link to a gist, or truncate it. -->\r\n\r\n```\r\n\r\n```\r\n\r\n## Stacktrace\r\n<!--- Please include the stacktrace.out output or link to a gist of it, if there is one. -->\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/issues/6516", "title": "knife ssh half-ignores -P if -i given", "body": "## Description\r\n\r\nif one specifies a password on the command line, and also specifies an identity file, knife ssh will ask for the password again.\r\n\r\n## Chef Version\r\n\r\nchefdk-2.0.28-1.el7.x86_64\r\n\r\n## Platform Version\r\n\r\nRHEL/CentOS7 (up to date)\r\n\r\n## Replication Case\r\n\r\ncd ~/chef-repo ; knife ssh -m 10.1.2.3-x temp -i ~/.ssh/id_chef -P Tempp@ss -- uptime\r\n\r\n## Client Output\r\n\r\ntemp@10.1.2.3's password:\r\n\r\n## Stacktrace\r\n\r\n### NOTE: CHEF CLIENT BUGS ONLY\r\n\r\nhttps://github.com/chef/chef/blob/master/lib/chef/knife/ssh.rb#L263\r\nprobably \r\n   sed -i '263s/elsif/end\\nif/'  \r\n   that file and we're good. \r\n\r\nI think the elsif is inhibiting the *saving* of the password in the invocation, and a second bit of code sees the commandline '-P' with no password saved, and helpfully prompts the user.\r\n\r\nIf I'm not on crack.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bws0013": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6740", "title": "Knife share ERROR: Description can't be blank", "body": "<!--- \r\n!!!!!! NOTE: CHEF CLIENT BUGS ONLY !!!!!!\r\n\r\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\r\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\r\n\r\n* Requests for new or alternative functionality should be made to [feedback.chef.io](https://feedback.chef.io/forums/301644-chef-product-feedback/category/110832-chef-client)\r\n* [Chef Server issues](https://github.com/chef/chef-server/issues/new)\r\n* [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\r\n* Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\r\n\r\n-->\r\n\r\n## Description\r\n<!--- Briefly describe the issue -->\r\nI am getting the an error `ERROR: Description can't be blank` when attempting to upload a cookbook to the supermarket. \r\n## Chef Version\r\n<!--- Tell us which version of chef-client you are using (see below for Server+ChefDK bugs). -->\r\n```\r\nChef Development Kit Version: 2.4.17\r\nchef-client version: 13.6.4\r\ndelivery version: master (73ebb72a6c42b3d2ff5370c476be800fee7e5427)\r\nberks version: 6.3.1\r\nkitchen version: 1.19.2\r\ninspec version: 1.45.13\r\n```\r\n## Platform Version\r\n<!--- Tell us which Operating System distribution and version chef-client is running on. -->\r\nOSX 10.11.6\r\n## Replication Case\r\n<!--- Tell us what steps to take to replicate your problem.  See [How to create a Minimal, Complete, and Verifiable example](https://stackoverflow.com/help/mcve)\r\nfor information on how to create a good replication case. -->\r\n`knife cookbook site share go_chef \"Programming Languages\" -V`\r\nI have already berks installed and uploaded and can see my metadata file there too. My knife.rb is pointing to this directory as the one hosting my cookbooks so that isn't the issue and my metadata.rb file has a description in it. \r\nhttps://github.com/bws0013/go_chef/blob/master/metadata.rb\r\n## Client Output\r\n<!--- The relevant output of the chef-client run or a link to a gist of the entire run, if there is one.\r\nThe debug output (chef-client -l debug) may be useful, but please link to a gist, or truncate it. -->\r\n\r\n```\r\nINFO: Using configuration from /Users/bensmith/.chef/knife.rb\r\nINFO: Validating ruby files\r\nINFO: Validating templates\r\nINFO: Syntax OK\r\nGenerating metadata for go_chef from /var/folders/xf/q135cl3j00s959bx902md6fr0000gn/T/chef-go_chef-build20180114-68259-1z0anem/go_chef/metadata.rb\r\nMaking tarball go_chef.tgz\r\nERROR: Description can't be blank\r\n```\r\n\r\n## Stacktrace\r\n<!--- Please include the stacktrace.out output or link to a gist of it, if there is one. -->\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6740/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jaymzh": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6734", "title": "ohai reload resets Chef::Log.level", "body": "## Description\r\n\r\nIf you dynamically set the log level in your run using `Chef::Log.level = :debug`, and then later notify the `ohai` resource, the loglevel will be reset to `info`.\r\n\r\n## Chef Version\r\n12.21.26\r\n\r\n## Platform Version\r\nCentOS 7\r\n\r\n## Replication Case\r\nUsing this recipe:\r\n\r\n```\r\nohai 'etc' do\r\n    plugin 'etc'\r\n    action :nothing\r\nend\r\nChef::Log.level = :debug\r\nlog 'test 1' do\r\n    level :debug\r\n    notifies :reload, 'ohai[etc]', :immediately\r\nend\r\nlog 'test 2' do\r\n    level :debug\r\nend \r\n```\r\n\r\nYou can see the log level resets after the ohai reload:\r\n\r\n```\r\n[2018-01-04T17:03:46-08:00] INFO: Processing ohai[etc] action nothing (fb_util::test line 1)\r\n[2018-01-04T17:03:46-08:00] DEBUG: Skipping ohai[etc] due to action :nothing\r\n[2018-01-04T17:03:46-08:00] INFO: Processing log[test 1] action write (fb_util::test line 6)\r\n[2018-01-04T17:03:46-08:00] DEBUG: Providers for generic log resource enabled on node include: [Chef::Provider::Log::ChefLog]\r\n[2018-01-04T17:03:46-08:00] DEBUG: Provider for action write on resource log[test 1] is Chef::Provider::Log::ChefLog\r\n[2018-01-04T17:03:46-08:00] DEBUG: test 1\r\n[2018-01-04T17:03:46-08:00] INFO: log[test 1] sending reload action to ohai[etc] (immediate)\r\n[2018-01-04T17:03:46-08:00] INFO: Processing ohai[etc] action reload (fb_util::test line 1)\r\n[2018-01-04T17:03:46-08:00] DEBUG: Providers for generic ohai resource enabled on node include: [Chef::Provider::Ohai]\r\n[2018-01-04T17:03:46-08:00] DEBUG: Provider for action reload on resource ohai[etc] is Chef::Provider::Ohai\r\n[2018-01-04T17:03:46-08:00] DEBUG: Running Ohai with the following configuration: ***REDACTED***\r\n[2018-01-04T17:03:46-08:00] INFO: The plugin path /etc/chef/ohai/plugins does not exist. Skipping...\r\n[2018-01-04T17:03:46-08:00] WARN: Plugin Definition Error: </etc/chef/ohai_plugins/shard.rb>: collect_data already defined on platform darwin\r\n[2018-01-04T17:03:46-08:00] WARN: Plugin Definition Error: </etc/chef/ohai_plugins/linux/hostnamectl.rb>: collect_data already defined on platform linux\r\n[2018-01-04T17:03:46-08:00] WARN: Plugin Definition Error: </etc/chef/ohai_plugins/linux/machineid.rb>: collect_data already defined on platform linux\r\n[2018-01-04T17:03:46-08:00] INFO: [ohai] Loading HP BIOS plugin\r\n[2018-01-04T17:03:48-08:00] INFO: ohai[etc] reloaded\r\n[2018-01-04T17:03:48-08:00] INFO: Processing log[test 2] action write (fb_util::test line 10)\r\n[2018-01-04T17:03:48-08:00] WARN: Skipping final node save because override_runlist was given\r\n[2018-01-04T17:03:48-08:00] INFO: Chef Run complete in 3.176964345 seconds\r\n```\r\n\r\n\r\n## Client Output\r\nSee above.\r\n\r\n## Stacktrace\r\nN/A\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/chef/chef/issues/6704", "title": "`file` can't handle enforcing permissions on special devices", "body": "## Description\r\n\r\n`file` resource bails out on char, block, socket files, etc. - even if not context is specified.\r\n\r\nHowever, a `file` resource is the logical way to enforce file ownership and permissions on such files. Cause they're files, because unix.\r\n\r\n## Chef Version\r\n12.21.26\r\n\r\n## Platform Version\r\nRHEL\r\n\r\n## Replication Case\r\n```\r\nchef-apply -e 'file \"/dev/zero\" do owner \"root\" end'\r\n```\r\n\r\n## Client Output\r\n```\r\nFile /dev/zero exists, but is a char device, set force_unlink to true to remove\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/chef/chef/issues/6653", "title": "dnf_package doesn't handle multiarch properly", "body": "## Description\r\n\r\nGiven two arches, it gets confused\r\n\r\nExample:\r\n\r\n```\r\ndnf_package 'glib2' do\r\n  package_name ['glib2'] * 2\r\n  arch ['x86_64', 'i686']\r\n  action :upgrade\r\nend\r\n```\r\n\r\nWhat you will find is that it will always try to install glib2-${version}.x86_64 and glib2-${version}.i686 because it compares both to the string it gets back from the helper which doesn't include the arch.\r\n\r\nOutput:\r\n\r\n```\r\n[2017-12-08T17:32:33-08:00] INFO: Processing dnf_package[glib2] action install (... line 47)\r\n[2017-12-08T17:32:33-08:00] DEBUG: Providers for generic dnf_package resource enabled on node include: [Chef::Provider::Package::Dnf]\r\n[2017-12-08T17:32:33-08:00] DEBUG: Provider for action install on resource dnf_package[glib2] is Chef::Provider::Package::Dnf\r\n[2017-12-08T17:32:35-08:00] DEBUG: sending '{\"action\":\"whatinstalled\",\"provides\":\"glib2\",\"release\":\"4.el7\",\"version\":\"2.46.2\",\"arch\":\"x86_64\"}' to python helper\r\n[2017-12-08T17:32:36-08:00] DEBUG: got 'glib2 0:2.46.2-4.el7 x86_64' from python helper\r\n[2017-12-08T17:32:36-08:00] DEBUG: parsed glib2-0:2.46.2-4.el7.x86_64 from python helper\r\n[2017-12-08T17:32:36-08:00] DEBUG: discarding output on stderr from python helper: No handlers could be found for logger \"dnf\"\r\n[2017-12-08T17:32:36-08:00] DEBUG: sending '{\"action\":\"whatinstalled\",\"provides\":\"glib2\",\"release\":\"4.el7\",\"version\":\"2.46.2\",\"arch\":\"i686\"}' to python helper\r\n[2017-12-08T17:32:36-08:00] DEBUG: got 'glib2 nil nil' from python helper\r\n[2017-12-08T17:32:36-08:00] DEBUG: parsed glib2-. from python helper\r\n[2017-12-08T17:32:36-08:00] DEBUG: sending '{\"action\":\"whatavailable\",\"provides\":\"glib2\",\"release\":\"4.el7\",\"version\":\"2.46.2\",\"arch\":\"x86_64\"}' to python helper\r\n[2017-12-08T17:32:36-08:00] DEBUG: got 'glib2 0:2.46.2-4.el7 x86_64' from python helper\r\n[2017-12-08T17:32:36-08:00] DEBUG: parsed glib2-0:2.46.2-4.el7.x86_64 from python helper\r\n[2017-12-08T17:32:36-08:00] DEBUG: sending '{\"action\":\"whatavailable\",\"provides\":\"glib2\",\"release\":\"4.el7\",\"version\":\"2.46.2\",\"arch\":\"i686\"}' to python helper\r\n[2017-12-08T17:32:36-08:00] DEBUG: got 'glib2 0:2.46.2-4.el7 i686' from python helper\r\n[2017-12-08T17:32:36-08:00] DEBUG: parsed glib2-0:2.46.2-4.el7.i686 from python helper\r\n[2017-12-08T17:32:36-08:00] DEBUG: dnf_package[glib2] glib2 0:2.46.2-4.el7.x86_64 needs updating to 2.46.2-4.el7\r\n[2017-12-08T17:32:36-08:00] DEBUG: dnf_package[glib2] glib2  needs updating to 2.46.2-4.el7\r\n[2017-12-08T17:32:56-08:00] INFO: dnf_package[glib2] installed [\"glib2\", \"glib2\"] at [\"2.46.2-4.el7\", \"2.46.2-4.el7\"]\r\n```\r\n\r\nNote here: `glib2 0:2.46.2-4.el7.x86_64 needs updating to 2.46.2-4.el7`\r\n\r\n## Chef Version\r\n\r\n12.21.16\r\n\r\n## Platform Version\r\n\r\nCentOS7\r\n\r\n## Replication Case\r\nSee above\r\n\r\n## Client Output\r\nSee above\r\n## Stacktrace\r\n\r\n\r\n\r\n### NOTE: CHEF CLIENT BUGS ONLY\r\n\r\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\r\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\r\n\r\n* Requests for new or alternative functionality should be made to [feedback.chef.io](https://feedback.chef.io/forums/301644-chef-product-feedback/category/110832-chef-client)\r\n* [Chef Server issues](https://github.com/chef/chef-server/issues/new)\r\n* [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\r\n* Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/chef/chef/issues/5935", "title": "yum_package: multipackage sees \"downgrade\" on a mix of missing and installed packages as mixing upgrade/downgrade", "body": "## Description\r\n\r\nMultipackage prevents both upgrading and downgrading in the same transaction for good reasons. It throws an error akin to:\r\n\r\n```\r\nChef::Exceptions::Package: Multipackage rule [\"libguestfs\", \"libguestfs-tools\", \"libguestfs-tools-c\", \"perl-Sys-Guestfs\"] has a mix of upgrade and downgrade packages. Cannot proceed.\r\n```\r\n\r\nHowever, if only half of those packages are already installed and need to be downgraded and the other half are not yet installed, this can work in a single transaction safely, and we should probably allow that.\r\n\r\n## Chef Version\r\n\r\n12.13.37 (I know, old, but the latest version doesn't support it either afaict)\r\n\r\n## Platform Version\r\n\r\nCentOS 7\r\n\r\n## Replication Case\r\n\r\nSee above.\r\n\r\n## Client Output\r\n\r\nSee above.\r\n\r\n## Stacktrace\r\n\r\nN/A", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/chef/chef/issues/5375", "title": "chef-shell doesn't seem to understand `ohai.config`", "body": "## Description\n\nchef-shell chokes on all of these:\n\n```\nohai.config[:plugin][:foo] = bar\nohai.plugin[:foo] = bar\nohai[:plugin][:foo] = bar\n```\n\nLeaving us to have to use the old Ohai::Config syntax which spews deprecation warnings during normal runs.\n\nThis also means I can't use the autovivification, even this doesn't worK:\n\n```\nOhai::Config[:plugin][:shard_seed] = {:sources => [:fqdn]}\n```\n\nand I must use:\n\n```\nOhai::Config[:plugin] = {:shard_seed => {:sources => [:fqdn]}}\n```\n\nHow is chef-shell not using the same parser as chef-client?!\n## Chef Version\n\n12.13.37\n## Platform Version\n\nCentOS7\n## Replication Case\n\nPut modern ohai configs in your client.rb and run 'chef-shell -z' and watch it vomit.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/chef/chef/issues/4992", "title": "[file resource] `force_unlink` and `manage_link_source` don't work", "body": "## Description\n\nsetup the test:\n\n```\necho 'foo' > /tmp/foo\nln -s /tmp/foo /tmp/link\n```\n\nSample recipe:\n\n```\n$ cat /tmp/test.rb\nfile '/tmp/link' do\n  force_unlink true\n  content 'fuckidy'\nend\n```\n\nTry it:\n\n```\n[phild@dev8344 tmp]$ chef-apply /tmp/test.rb\nRecipe: (chef-apply cookbook)::(chef-apply recipe)\n  * file[/tmp/link] action create[2016-06-03T06:27:18-07:00] WARN: File /tmp/link managed by file[/tmp/link] is really a symlink. Managing the source file instead.\n[2016-06-03T06:27:18-07:00] WARN: Disable this warning by setting `manage_symlink_source true` on the resource\n[2016-06-03T06:27:18-07:00] WARN: In a future Chef release, 'manage_symlink_source' will not be enabled by default\n\n    - update content in file /tmp/link from b5bb9d to 2f7925\n    --- /tmp/link   2016-06-03 06:26:47.705361719 -0700\n    +++ /tmp/.link20160603-2039507-1qjlpa5  2016-06-03 06:27:18.526023383 -0700\n    @@ -1,2 +1,2 @@\n    -foo\n    +fuckidy\n    - restore selinux security context\n```\n\nWhat did it do?\n\n```\n$ ls -l /tmp/link\nlrwxrwxrwx. 1 phild users 8 Jun  3 06:25 /tmp/link -> /tmp/foo\n```\n\nNope still a link. OK, so what about if we tell it to manage symlink sources while we're at it?\n\n```\n$ cat /tmp/test.rb \nfile '/tmp/link' do\n  force_unlink true\n  manage_symlink_source true\n  content 'fuckidy'\nend\n$ chef-apply /tmp/test.rb\nRecipe: (chef-apply cookbook)::(chef-apply recipe)\n  * file[/tmp/link] action create\n    - update content in file /tmp/link from b5bb9d to 2f7925\n    --- /tmp/link   2016-06-03 06:29:10.992437914 -0700\n    +++ /tmp/.link20160603-2044816-v4dg9o   2016-06-03 06:29:17.541578521 -0700\n    @@ -1,2 +1,2 @@\n    -foo\n    +fuckidy\n    - restore selinux security context\n```\n\ndid that do it?\n\n```\n[phild@dev8344 tmp]$ ls -l /tmp/link\nlrwxrwxrwx. 1 phild users 8 Jun  3 06:25 /tmp/link -> /tmp/foo\n```\n\nNope.\n## Chef Version\n\n12.6.0\n## Platform Version\n\nCentOS 6 and 7\n## Replication Case\n\nsee above\n## Client Output\n\nSee above.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4992/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/chef/chef/issues/4816", "title": "cookbook name not taken into account in local mode or chef-zero", "body": "## Description\n\nIn local mode, the directory name is used as the name of the cookbook, not the `name` in metadata.rb\n\nSo if you have a cookbook called `foo`, but the dir name is `foo_test` and inside of `foo` you do `include_recipe 'foo::some_recipe'` it'll complain that:\n\n```\nCookbook foo not found. If you're loading foo from another cookbook, make sure you configure the dependency in your metadata\n```\n\nFrankly, I was a proponent of adding a Foodcritic rule that required to be the same but @lamont-granquist  (I think) chimed in that having them able to be separate is super important. I ended up using this to test something and it turns out not to work.\n## Chef Version\n\n12.8.1\n## Platform Version\n\nCentOS 7\n## Replication Case\n\nSee above.\n## Client Output\n\nSee above.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4816/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/chef/chef/issues/4599", "title": "`file` resource's `inspect_existing_fs_entry` prevents managing permissions on char/dev files", "body": "## Description\n\nIt is desired to use the `file` resource to manage permissions on files we are not creating, ala:\n\n```\nfile '/dev/foo' do\n  mode '0644'\nend\n```\n\nThe `inspect_existing_fs_entry` check in the `file` provider prevents this saying that it's the wrong type and can't manage it. This makes sense if we're trying to write contents, but otherwise, it doesn't.\n## Chef Version\n\n12.6.0\n## Platform Version\n\nCentOS 6 and CentOS7\n## Replication Case\n\n```\nfile '/dev/vcs1' do  # pick any char device here\n  mode '0640'\nend\n```\n## Client Output\n\n```\nChef::Exceptions::FileTypeMismatch: file[/dev/vcs] ((irb#1) line 1) had an error: Chef::Exceptions::FileTypeMismatch: File /dev/vcs exists, but is a char device, set force_unlink to true to remove\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/4005672", "body": "This is... absurd.\n\nChild and parent process are standard terminology in the computing world. We are sacrificing technical accuracy here for some perceived concern that someone with a 12-year old sense of humor might get offended?\n\nThese are child processes, not \"instances.\". We forked, and the result of a fork is a child. Per the man page and 30 years of OS history.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/4005672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/chef/chef/comments/7650267", "body": "You don't need this flushcache, read_user_info does one right off the bat.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7650267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/chef/chef/comments/7650291", "body": "Can we make this comment something like.\n\n```\n# read_user_info will flush the cache before loading the plist\n# but on a newly created user, we found that the dscl cache hasn't even\n# populated (from what?) and thus won't properly flush out to the plist file.\n# so in this specific case, we sleep before flushing the cache.\n# This is odd and should probably be investigated further.\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7650291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/chef/chef/comments/7650302", "body": "Can we add a comment here so it never gets accidentally removed?\n\n```\n# Before we read from the on-disk storage, we must clush the dscl\n# cache to disk or we get stale data\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7650302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "tstuber": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6729", "title": "Chef_gem installation from custom source does not reset source list properly", "body": "## Description\r\nGiven the following setup: \r\n* Air-gapped environment\r\n* Local ruby gem repository (linked to rubygems.org)\r\n* `client.rb` has a defined `rubygems_url` to the lokal rubygems repository\r\n \r\nThis works so far. But whenever we install a ruby gem via `chef_gem` resource, it always takes 3 minutes until completion. The only way it works immediatly is, if we use the `clear_sources` flag to set it to true.\r\n\r\nOur investigations showed that whenever an installation source is specified, the default `rubygems url` (rubygems.org) is used. It would be possible to set the `clear_sources` flag to clean the `rubygems_url` list and to avoid this problem, but that can not be made for shared cookbooks (such as push_jobs, etc). \r\n\r\n## Chef Version\r\nClient: 13.6.4\r\n\r\n## Platform Version\r\nLinux, Red Hat 7.4\r\n\r\n## Replication Case\r\n\r\n* Ensure an air-gapped client\r\n* Define a custom `rubygems_url` (via `client.rb`)\r\n* Run the following snipped that installs a not existing ruby gems\r\n\r\n```\r\nchef_gem 'chef-ruby-lvm' do\r\n  action [ :remove, :install ]\r\n  # clear_source true # uncomment to fix the 3min timeout. \r\nend\r\n```\r\n\r\nThe same behaviour can be faced by using `gem install` directly.\r\n\r\n**3 Minutes installation duration:**\r\n```\r\ngem install --source http://rubygems.mycustomer.local/repository/rubygems mixlib-install --verbose\r\n...\r\nunable to pull data from https://rubygems.org/': timed out (https://api.rubygems.org/specs.4.8.gz)\r\n1 gem installed\r\n```\r\n\r\n**Instant installation duration:** \r\n```\r\ngem install --clear-sources --source http://rubygems.mycustomer.local/repository/rubygems mixlib-install --verbose\r\n```\r\n\r\n## Client Output\r\n\r\nThe behaviour without the `clear_sources` (with 3 minutes duration) is as follows:\r\n\r\n```\r\n[2017-12-14T12:19:26+01:00] DEBUG: chef_gem[chef-ruby-lvm] no installed version found for chef-ruby-lvm (>= 0)\r\n[2017-12-14T12:19:26+01:00] DEBUG: found gem chef-ruby-lvm version 0.3.0 for platform ruby from \r\n[2017-12-14T12:19:26+01:00] DEBUG: chef_gem[chef-ruby-lvm] chef-ruby-lvm not installed, installing 0.3.0\r\n[2017-12-14T12:22:26+01:00] INFO: chef_gem[chef-ruby-lvm] installed chef-ruby-lvm at 0.3.0\r\n[32m- install version 0.3.0 of package chef-ruby-lvm[0m\r\n[0m[2017-12-14T12:22:26+01:00] DEBUG: chef_gem[chef-ruby-lvm] resetting gem environment to default\r\n```", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "martinmosegaard": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6724", "title": "Catch Errno::EINVAL in ConfigFetcher", "body": "<!--- \r\n!!!!!! NOTE: CHEF CLIENT BUGS ONLY !!!!!!\r\n\r\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\r\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\r\n\r\n* Requests for new or alternative functionality should be made to [feedback.chef.io](https://feedback.chef.io/forums/301644-chef-product-feedback/category/110832-chef-client)\r\n* [Chef Server issues](https://github.com/chef/chef-server/issues/new)\r\n* [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\r\n* Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\r\n\r\n-->\r\n\r\n## Description\r\n<!--- Briefly describe the issue -->\r\nWe can call `chef-client` with `-j` and a file path. But if we try passing a JSON string instead, on Windows, we get an exception trace mentioning `Errno::EINVAL`. In the source code, there are already checks for `Errno::ENOENT` and `Errno::EACCES`, so perhaps we could report a nice error here as well?\r\n\r\nI understand from https://github.com/chef/chef/issues/6721 that this behavior is not supported, but it would be nice with a better error message.\r\n\r\n## Chef Version\r\n<!--- Tell us which version of chef-client you are using (see below for Server+ChefDK bugs). -->\r\nChef v12 and v13\r\n\r\n## Platform Version\r\n<!--- Tell us which Operating System distribution and version chef-client is running on. -->\r\nWindows Server 2012 R2 and 2016\r\n\r\n## Replication Case\r\n<!--- Tell us what steps to take to replicate your problem.  See [How to create a Minimal, Complete, and Verifiable example](https://stackoverflow.com/help/mcve)\r\nfor information on how to create a good replication case. -->\r\n\r\nI used a cookbook `testjson` with a recipe and attribute like this:\r\n\r\n```\r\n>type recipes\\default.rb\r\nattr1_value = node['testjson']['attr1']\r\nfile 'C:\\Users\\Administrator\\generated-by-chef.txt' do\r\n  content attr1_value\r\nend\r\n\r\n>type attributes\\default.rb\r\ndefault['testjson']['attr1'] = 'default value'\r\n```\r\n\r\nObserve that `chef-client -z -o \"recipe[testjson::default]\"` works as expected.\r\n\r\nCreate a JSON file like this:\r\n```\r\necho {\"testjson\": {\"attr1\": \"value from file\"}} > myattr.json\r\n```\r\n\r\nObserve that `chef-client -z -o \"recipe[testjson::default]\" -j myattr.json` works.\r\n\r\nThen try with inline JSON:\r\n\r\n`chef-client -z -o \"recipe[testjson::default]\" -j '{\"testjson\": {\"attr1\": \"inline value\"}}'`\r\n\r\n\r\n## Client Output\r\n<!--- The relevant output of the chef-client run or a link to a gist of the entire run, if there is one.\r\n\r\nThe debug output (chef-client -l debug) may be useful, but please link to a gist, or truncate it. -->\r\n\r\n## Stacktrace\r\n<!--- Please include the stacktrace.out output or link to a gist of it, if there is one. -->\r\n\r\nAbbreviated output:\r\n```\r\n.../config_fetcher.rb:47:in `read': Invalid argument @ rb_sysopen - {\"testjson\":{\"attr1\":\"value from json\"}} (Errno::EINVAL)\r\n```\r\n\r\nwhich comes from `read_local_config` in lib/chef/config_fetcher.rb\r\nhttps://github.com/chef/chef/blob/master/lib/chef/config_fetcher.rb\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/issues/6708", "title": "gem_package gem_binary cannot be omitted with Chef client v13", "body": "<!--- \r\n!!!!!! NOTE: CHEF CLIENT BUGS ONLY !!!!!!\r\n\r\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\r\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\r\n\r\n* Requests for new or alternative functionality should be made to [feedback.chef.io](https://feedback.chef.io/forums/301644-chef-product-feedback/category/110832-chef-client)\r\n* [Chef Server issues](https://github.com/chef/chef-server/issues/new)\r\n* [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\r\n* Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\r\n\r\n-->\r\n\r\n## Description\r\nThe documentation for the `gem_package` resource, https://docs.chef.io/resource_gem_package.html , makes it sound like the `gem_binary` property is optional:\r\n\r\n```\r\nA property for the gem_package provider that is used to specify a gems binary.\r\nBy default, the same version of Ruby that is used by the chef-client will be installed.\r\n```\r\n\r\nI have a recipe with a block like this:\r\n\r\n```\r\ngem_package 'my_gem' do\r\n  action :install\r\n  source 'my-artifact-repository'\r\nend\r\n```\r\n\r\nI can run kitchen converge fine with Chef client 12. But with Chef client 13, I get an error like this:\r\n\r\n```\r\nChef::Exceptions::ValidationFailed: Property gem_binary must be one of String!  \r\nYou passed false.\r\n```\r\n\r\nI have tested with Chef client 13.2.20-1 and 13.4.19-1.\r\n\r\nSee also https://github.com/chef/chef-web-docs/issues/1169\r\n<!--- Briefly describe the issue -->\r\n\r\n## Chef Version\r\n<!--- Tell us which version of chef-client you are using (see below for Server+ChefDK bugs). -->\r\nI have tested with Chef client 13.2.20-1 and 13.4.19-1.\r\n\r\n## Platform Version\r\n<!--- Tell us which Operating System distribution and version chef-client is running on. -->\r\nWindows Server 2012 R2, both workstation and Kitchen instances\r\n\r\n## Replication Case\r\n<!--- Tell us what steps to take to replicate your problem.  See [How to create a Minimal, Complete, and Verifiable example](https://stackoverflow.com/help/mcve)\r\nfor information on how to create a good replication case. -->\r\n^^\r\n\r\n## Client Output\r\n<!--- The relevant output of the chef-client run or a link to a gist of the entire run, if there is one.\r\n\r\nThe debug output (chef-client -l debug) may be useful, but please link to a gist, or truncate it. -->\r\n\r\n```\r\n\r\n```\r\n\r\n## Stacktrace\r\n<!--- Please include the stacktrace.out output or link to a gist of it, if there is one. -->\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6708/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jakauppila": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6716", "title": "Add remove_account_right function to win32/security", "body": "## Description\r\n#4321 introduced the ability to add and get account rights; it'd be great if they could be removed as well\r\n\r\nI'm working on https://github.com/chef-cookbooks/windows/issues/228 but the resource will be limited to only adding rights until this is implemented.\r\n\r\n## Chef Version\r\n13.6.4\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/6300", "title": "converge_if_changed does not check desired_state of property with default that has not been accessed", "body": "## Description\r\n\r\nWhen using `converge_if_changed`, Chef will not detect a change if a property is configured with a `default` and is `desired_state` if it is not explicitly defined in the resource usage.\r\n\r\nThe following line defines which properties to watch the desired state: \r\n- https://github.com/chef/chef/blob/264e3c5c12e1f8c15ed37aea3964957585c23601/lib/chef/provider.rb#L247\r\n\r\nAnd ultimately utilizes the `is_set?` method which returns true if `The user explicitly set the value` and `The property has a default, and the value was retrieved.`\r\n- https://github.com/chef/chef/blob/master/lib/chef/property.rb#L400\r\n\r\nSo in the event that a property has a default value, but the user has not retrieve the value, it will not be checked against the desired state.\r\n\r\nA workaround is to simply access the value prior to `converge_if_changed` was executed, but leads to unnecessary code.\r\n\r\n## Chef Version\r\n\r\nChef 12.21.3\r\n\r\n## Platform Version\r\n\r\nCentOS 7.2\r\n\r\n## Replication Case\r\n\r\nTo replicate:\r\n1. `git clone https://github.com/jakauppila/myTestCookbook`\r\n2. `kitchen converge`\r\n3. `kitchen exec -c \"echo 'Goodbye World.' >> /home/vagrant/myfile.txt\"`\r\n4. `kitchen converge`\r\n\r\n## Client Output\r\n\r\n```\r\n  [2017-07-31T03:09:40+00:00] DEBUG: Converging node default-centos-72\r\n  Recipe: test::default_value\r\n    * my_provider[/home/vagrant/myfile.txt] action add[2017-07-31T03:09:40+00:00] INFO: Processing my_provider[/home/vagrant/myfile.txt] action add (test::default_value line 1)\r\n  [2017-07-31T03:09:40+00:00] INFO: my_provider[/home/vagrant/myfile.txt] already installed - nothing to do.\r\n  (up to date)\r\n    * my_provider[/home/vagrant/myfile.txt] action config[2017-07-31T03:09:40+00:00] INFO: Processing my_provider[/home/vagrant/myfile.txt] action config (test::default_value line 1)\r\n  [2017-07-31T03:09:40+00:00] DEBUG: Skipping update of my_provider[/home/vagrant/myfile.txt]: has not changed any of the specified properties .\r\n  (up to date)\r\n```\r\n\r\n## Expected Output\r\n\r\n```\r\n  [2017-07-31T03:12:37+00:00] DEBUG: Converging node default-centos-72\r\n  Recipe: test::default_value\r\n    * my_provider[/home/vagrant/myfile.txt] action add[2017-07-31T03:12:37+00:00] INFO: Processing my_provider[/home/vagrant/myfile.txt] action add (test::default_value line 1)\r\n  [2017-07-31T03:12:37+00:00] INFO: my_provider[/home/vagrant/myfile.txt] already installed - nothing to do.\r\n  (up to date)\r\n    * my_provider[/home/vagrant/myfile.txt] action config[2017-07-31T03:12:37+00:00] INFO: Processing my_provider[/home/vagrant/myfile.txt] action config (test::default_value line 1)\r\n  [2017-07-31T03:12:37+00:00] DEBUG: Resources for generic file resource enabled on node include: [Chef::Resource::File]\r\n  [2017-07-31T03:12:37+00:00] DEBUG: Resource for file is Chef::Resource::File\r\n\r\n      - update /home/vagrant/myfile.txt\r\n      -   set contents to \"Hello World.\" (was \"Hello World.Goodbye World.\\n\")\r\n      * file[/home/vagrant/myfile.txt] action create[2017-07-31T03:12:37+00:00] INFO: Processing file[/home/vagrant/myfile.txt] action create (/tmp/kitchen/cache/cookbooks/myTestCookbook/providers/my_provider.rb line 23)\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6300/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/5711", "title": "Chef Client not installing PowerShell Module", "body": "## Description\r\n\r\nWhen installing the Chef Client and selecting 'Chef Client PowerShell wrappers' ('ChefPSModuleFeature' via cli), it does not copy the PowerShell module to 'C:\\opscode\\chef\\modules\\' from the gem.\r\n\r\nThe module itself exists within the gem: \"C:\\opscode\\chef\\embedded\\lib\\ruby\\gems\\2.3.0\\gems\\chef-12.17.44-universal-mingw32\\distro\\powershell\\chef\\chef.psm1\"\r\n\r\nI can see that 'C:\\opscode\\chef\\modules\\' was added to the PSModulePath environment variable.\r\n\r\n## Chef Version\r\n\r\n12.17.44\r\n\r\n## Platform Version\r\n\r\nWindows Server 2012 R2\r\n\r\n## Replication Case\r\n\r\n```\r\nInvoke-WebRequest https://packages.chef.io/files/stable/chef/12.17.44/windows/2012r2/chef-client-12.17.44-1-x64.msi -Outfile C:\\chef-client-12.17.44-1-x64.msi\r\nmsiexec /qn /i C:\\chef-client-12.17.44-1-x64.msi ADDLOCAL=\"ChefClientFeature,ChefPSModuleFeature\"\r\n```\r\n\r\n## Client Output\r\nN/A - Client installation\r\n\r\n## Stacktrace\r\n\r\nN/A - Client installation\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lamont-granquist": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6712", "title": "Change default behavior of non-interval runs to --no-fork", "body": "If we're only running in any sort of one-shot mode, we don't need to fork.\r\n\r\nCauses issues and needless complexity with things like chef_client_updater and automate.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/6634", "title": "Fix NodeMap to last-writer-wins for ties in the class", "body": "in NodeMap#compare_matchers it orders classes which tie alphanumerically by class name.  which means that two classes which both `provide :package` identically get sorted by class name, so if a class is AAABestClassName it'll always win over any class that alphabetically comes later.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/6575", "title": "Merged ImmutableMash objects incorrect stlll allow #store API to write to the merged object", "body": "We're not throwing a correct ImmutableAttributeModification for Hash#store:\r\n\r\n```\r\nnode['bar']['foo']['tokens'].each do |key, values|\r\n  # puts \"key: #{key}, values: #{values}\"\r\n  # puts '---'\r\n  node['foo']['bar']['additional_attributes'].store(key, values)\r\nend\r\n```\r\n\r\nThat should behave the same way as `[]=`:\r\n\r\n```\r\nnode['bar']['foo']['tokens'].each do |key, values|\r\n  # puts \"key: #{key}, values: #{values}\"\r\n  # puts '---'\r\n  node['foo']['bar']['additional_attributes'][key] = values\r\nend\r\n```\r\n\r\nSomewhat unclear how that API got missed since it does date back to ruby 1.8.7.\r\n\r\nProbably need a re-audit of all the new Hash + Array methods that have been introduced at least in ruby 2.0 to look for writers and block them as well.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/6495", "title": "Remove precedence levels from the NodeMap aka provides lines aka \"make cookbooks always win\"", "body": "Right now more specific provides lines always take precedence \r\n\r\n```\r\n# this in core\r\nprovides :whatever do\r\n  which(\"whatever\")\r\nend\r\n\r\n# will always by design beat this in cookbooks\r\nprovides :whatever, platform :rhel\r\n\r\n# leading to things like\r\nprovides :whatever, platform :rhel do\r\n  true\r\nend\r\n```\r\n\r\nTo avoid warfare in cookbooks descending into always decorating provides lines with always-true blocks, we should probably rethink this design and go back to some form of last-writer-wins strategy.  This is also confusing for users since its fairly lightly documented.  Once you grok it, its pretty easy to figure out, but it constantly bites people, and it bit us internally when we started shipping core resources that were more specific than cookbook resources and were suddenly 'surprised' that cookbooks stopped winning.\r\n\r\nThis will be a disruptive breaking change though.\r\n\r\nMuch work probably needs to be done to lay the groundwork for this, including deprecation warnings and possibly an RFC.  Issuing correct deprecation warnings for the changing behavior may be...  interesting...  and might rise to the level of 3694 warnings.\r\n\r\nThis is currently a placeholder issue to track the fact that we've talked about this problem and acknowledged that it is a problem.  Since the solution is inherently disruptive this issue may linger for quite some time (the fact that it's sort of high impact vs high effort and likely high disruptive impact to fix means the cost/benefit and time analysis is somewhat fuzzy).", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/6484", "title": "Chef-14:  flip allow_downgrade options on all package resources to true", "body": "", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/6099", "title": "Chef 13.1:  add a flag to core chef resource properties to eventually ban overriding them", "body": "`property :retries, String` on a resource should explode in the same place as where we check for overriding methods with properties.\r\n\r\nwe probably need to include a flag on the property so that it can be marked non-overridable by child classes.  then we should mark `:retries`, `:retry_delay`, `:sensitive`, etc with this flag.  in 13.1 it should spit out a deprecation that warns that it will be a raise and then in 14.0 it should raise.\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/6036", "title": "Chef-13 mid-cycle cleanup of custom resources API", "body": "The `current_value_does_not_exist!` API sets the `current_resource` to nil which seems bad.  The purpose of this is to have better checking around the object-does-not-exist-yet case.  So for example in the file resource now we build a current_resource but expect the mode, owner, group, etc to be 'nil' when the file simply doesn't exist yet.  It would seem to be better to build a default resource and then set a property like `exist` to false, and then have a `current_resource.exist?` helper to handle this case.  Right now I suspect that there are going to be lingering bugs in the resource reporter and data collector code (and possibly server-side in automate, etc) if anyone starts really using this feature and setting current_resource to nil.  I suspect that most people are not doing this.   The fact that it is hidden under the load_current_value and converge_if_changed api suggests that we can change this without changing the shape of the API.\r\n\r\nI'd also like to work on creating an after_resource to solve all the horrible new_resource mutation issues we have where we're abusing the desired state with the final state and then trying to pass that into the resource_reporter/data_collector.  We really need to simply call a function to load an `after_resource` and let reporting diff `current_resource` and `after_resource` and then we can leave the `new_resource` alone.  In order to do that, though, we can't use `load_current_resource` because that function updates the current_resource as a side effect, we need to have a function which can load either the current_resource or the after_resource depending on how it is called.  The `load_current_value` function does that (and apparently even will optionally call itself with the resource as an argument).\r\n\r\n#5974, #5980 are related, #5992 could probably use being looked at as well.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/5980", "title": "Chef 13.1: properly deprecate Chef::Resource's `state_attrs` and `identity_attr` methods", "body": "killing the word `attributes` as applied to resources with fire.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/5975", "title": "Chef-13.1:  Deprecate Chef::Search::Query positional parameters", "body": "I think we can throw a deprecation warning in hashify_args once the user hits the positional arg mangling:\r\n\r\nhttps://github.com/chef/chef/blob/d648136085c4061eaefa04ad823c49a14282a749/lib/chef/search/query.rb#L107\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/5969", "title": "Knife search node should have a case insensitive option", "body": "At the very least we need to support adding case insensitivity as an option:\r\n\r\nhttps://feedback.chef.io/forums/301644-chef-product-feedback/suggestions/17347648-provide-a-mechanism-to-disable-case-sensitivity-on\r\n\r\nThe fuzzifier (which I may move around in the code):\r\n\r\nhttps://github.com/chef/chef/blob/388e33923ca50688e0aea546a6fdd815d2ef05ab/lib/chef/knife/search.rb#L154-L158\r\n\r\nCould be extended so that knife search node would use case-insensitivity by default.\r\n\r\nKnife ssh already should use the same fuzzifier as knife search node and we should fix that.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5969/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/5965", "title": "Deprecate and Remove Chef::File::Edit", "body": "People actually try to use it and get sad:\r\n\r\nhttps://feedback.chef.io/forums/301644-chef-product-feedback/suggestions/18487798-chef-file-edit-needs-controls-for-backup-file-ha\r\n\r\nIt needs to get removed and right now people should get pointed at the [line cookbook](https://github.com/someara/line-cookbook) and we should think about a better solution for a file editing resource for core.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/5771", "title": "Chef::Platform.windows? needs to inspect the node.", "body": "We should also inject that method into the universal DSL.\r\n\r\nIt may be possible to have it optionally inspect the node if its mixed into a context which has a node or else fall back to the RUBY_PLATFORM based inspection.\r\n\r\nThe problem right now is that everyone blindly uses this instead of `node[\"platform_family\"] == \"windows\"` but chefspec/fauxhai can mock the former but not the latter.  Most of the time we'll have a node object and should inspect that.  There are legit reasons why we'd need to inspect RUBY_PLATFORM before we have the node object and in other low level stuff that chefspec should never invoke so we probably do need both methods.  I'll bet 90% of the time we use this method the caller doesn't care though and we need to make it easy to get it right, not easy to get it wrong.\r\n\r\nI guess technically chefspec could monkeypatch the `windows?` method directly but BAAAARF.\r\n\r\nI don't see where chefspec is monkeypatching this now, but i might be wrong.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/5766", "title": "create chef-utils gem to contain common base utility code", "body": "- the use case i'm considering is the `which` mixin that gets reused all over the place\r\n- not necessarily copypasta of Chef::Utils a lot of which tends to be chef-client specific\r\n- some of the chef-config utils routines could be extracted to this so that both chef-client and chef-config could depend on this gem?\r\n\r\nmarking this as major for chef-13, even though i think we could do it in a minor release, but chef-13 would be a good time to introduce it.  i'm thinking that only the which utility gets extracted first, and we can move other things later.\r\n\r\nthis would probably need a big warning banner in the gemspec not to have it depend on anything else in the chef/mixlib ecosystem to avoid circular deps.\r\n\r\nas an example:  moving the shell_out mixin to this gem would be inappropriate because mixlib-shellout is going to depend upon this gem for 'which' while the shell_out mixin has to depend on mixlib-shellout.   that implies that the shell_out mixin MUST not go into this gem and needs to go into a different gem (either chef-shell-out or more likely directly into mixlib-shellout itself -- after disentangling it from chef-config).  \r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/5760", "title": "apt_package should support local installation of deb packages providing a less horrible interface than apt itself", "body": "see #5685\r\n\r\nthe typical way that ubuntu/debian admins install a local package on the command line and get depsolving is to either:\r\n\r\n- `apt-get install -f ./package.deb` and have that fail\r\n- `apt-get -yf install` when the former fails\r\n\r\nor to:\r\n\r\n- copy the deb to /var/cache/apt/archives/ \r\n- `apt-get install package`\r\n\r\nsee https://unix.stackexchange.com/questions/159094/how-to-install-a-deb-file-by-dpkg-i-or-by-apt\r\n\r\nwe should fix it so that users can just:\r\n\r\n```ruby\r\napt_packge ./package.deb\r\n```\r\n\r\nand have it work the same way that yum supports `localinstall` of rpms transparently.\r\n ", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/5520", "title": "Fix edge conditions in Node Attributes", "body": "Potentially breaking edge conditions that need fixing in Chef 13:\r\n\r\n- #to_hash should deep-dup strings and other data:  https://github.com/chef/chef/blob/master/spec/unit/node/attribute_spec.rb#L462-L470\r\n- assignment should always deep-dup via convert_value, even assigning node objects to node objects to avoid duplication in the tree:    discussion in https://github.com/chef/chef/pull/5378#issuecomment-249382290 and i've come around to the view that we should be consistent in duping objects on assignment.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/5454", "title": "Using a Template Resource in an Accumulator using `with_run_context :root` gets the cookbook_name wrong sometimes", "body": "Seems we're picking up the cookbook_name from the root run_context sometimes and looking for the template source in the calling cookbook, not the cookbook_name the resource was in.\n\nWorkaround looks something like this (from the ssh_known_hosts cookbook):\n\n```\n  r = with_run_context :root do\n    # XXX: remove log resource once delayed_actions lands in compat_resource\n    find_resource(:log, 'force delayed notification') do\n      notifies :create, 'template[update ssh known hosts file]', :delayed\n    end\n    find_resource(:template, 'update ssh known hosts file') do\n      source \"ssh_known_hosts.erb\"\n      path node['ssh_known_hosts']['file']\n      owner new_resource.owner\n      group new_resource.group\n      mode new_resource.mode\n      action :nothing\n      backup false\n      variables(entries: [])\n    end\n  end\n\n  # messing with the run_context appears to cause issues with the cookbook_name\n  r.cookbook_name = \"ssh_known_hosts\"\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/5436", "title": "knife node/client delete should delete multiple nodes", "body": "we could delete multiple nodes in one line\n\n```\n% knife client delete -y 104.131.130.64 cereal.scriptkiddie.org deleteme foo02.scriptkiddie.org\nDeleted client[104.131.130.64]\n%\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/5425", "title": "remove config[:ssh_password_ng] from knife ssh", "body": "config[:ssh_password] should be changed to work like config[:ssh_password_ng] and the latter should be dropped\n\nChef 13 breaking change.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/5158", "title": "FreeBSD ports package provider improvements", "body": "- needs to support multipackage\n- needs to use provides on the provider correctly in order to know if it should use port/pkg/pkgng\n- get the package name without the version properly from PKGNAME\n\nsee #4890\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/4978", "title": "resource_block to lazy a notifying_block", "body": "notifying_block is a DSL method so at compile-time it creates a subresource collection and eagerly converges it.\n\nto lazy the execution of the subcollection we could offer a primitive like this:\n\n``` ruby\nresource_block \"stuff\" do\n  block do\n    template \"/etc/whatever/thing.conf1\" do\n      source \"thing.conf1.erb\"\n      notifies :restart, \"service[whatever]\"\n    end\n    template \"/etc/whatever/thing.conf2\" do\n      source \"thing.conf2.erb\"\n      notifies :restart, \"service[whatever]\"\n    end\n    service \"whatever\" do\n      action :start\n    end\n  end\n  action :run\nend\n```\n\nof course i believe this is entirely equivalent to:\n\n``` ruby\nwhyrun_safe_ruby_block \"stuff\" do\n  block do\n    nofiying_block do\n      template \"/etc/whatever/thing.conf1\" do\n        source \"thing.conf1.erb\"\n        notifies :restart, \"service[whatever]\"\n      end\n      template \"/etc/whatever/thing.conf2\" do\n        source \"thing.conf2.erb\"\n        notifies :restart, \"service[whatever]\"\n      end\n      service \"whatever\" do\n        action :start\n      end\n    end\n  end\n  action :run\nend\n```\n\nBut I can potentially see a lot of repetitive conversations about the 'right' way to do the latter and it might be simpler to just be able to say `use a resource_block, it does exactly what you need...`\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/4662", "title": "Line endings and file resources", "body": "## Description\n\nThe way we handle line endings is mildly terrible and inconsistent and confusing.  When we upload cookbooks we use 'binmode' so we get no conversion of line endings.  When we download cookbooks [MOST of the file resources will use binmode](https://github.com/chef/chef/blob/20e5d3309e075feefbe01d67b408f207786bd3a5/lib/chef/file_content_management/tempfile.rb#L54-L57) so that users will get whatever they uploaded.  However [the template resource will do line ending conversion](https://github.com/chef/chef/blob/20e5d3309e075feefbe01d67b408f207786bd3a5/lib/chef/mixin/template.rb#L166-L180) so will behave like binmode is false.\n## Chef Version\n\n11.8.0-ish through 12.7.2\n## Issues\n- Sometimes users push files to Windows hosts which are then consumed ultimately on Linux hosts (the windows host may be the TFTP server or whatever for $REASONS).\n- Sometimes users push files to Linux hosts which are then consumed ultimately on Windows hosts.\n- When we weren't using binmode on file resources people would push binaries through cookbook_file or remote_file resources which would then be mangled by binmode settings.\n- Users that aren't using the template resource get the line ending of whatever was uploaded -- so you can't edit Windows cookbook_file resources on Linux hosts and vice-versa\n- Does anyone want to edit on Linux, push to Linux via chef but to deploy with Windows line endings?  (and vice versa)\n## Proposal One\n-  Add a binmode flag on all the file resources.\n-  Most file resources will default to binmode false, while template resources will default to binmode true.  This is necessary for backcompat and is in many ways arguably 'correct'.\n-  The 'binmode true' flag on cookbook_file/etc resources will mean the line endings will convert to agree with the target O/S\n-  The 'binmode' on the template resource will need to work around erubis converting everything to windows line ending.  \n\nThis has at least one issue that the ability to edit on linux, push to linux, but consume windows line endings becomes a lot more difficult.  You could still save the file as windows on the linux workstation and upload it and then use 'binmode true' though.  But its not 'delightful'.\n## Proposal Two\n-  Add a `line_ending` property (note: awkward) that is quadruple valued:\n- `nil` means no conversion (binmode = true, and this would be the default for cookbook_file, etc)\n- `:target` means to convert to the target host (binmode = false, and this would be the default for template resource)\n- `:windows` means to convert to windows, even if you're on a linux host\n- `:unix` means to convert to unix endings, even if we're running on windows\n\nThe benefit of this is its much more clearly descriptive, and would allow writing a file resource which would deploy windows line endings to a linux host -- without having to both set binmode to true _and_ to make damn certain to upload the file to the chef server with windows line endings.\n## Note\n\nWe treat files and templates differently by default right now.  I'm not sure we should fix this, however.  When someone wants to deploy a binary they will _never_ use a template and will _always_ use a cookbook_file.  They will _never_ want line ending conversion.  The default for cookbook_file gets this use case correct.\n\nOn the other hand templates are _never_ going to be binaries, and by default you almost always want the line endings to match the target host -- otherwise if someone edits the /etc/resolv.conf on a windows host and uploads it you blow it out with windows line endings, which is what you never want.\n\nOf course cookbook_files that are text files are treated like binaries by default, while cookbook_files are still more often text files than binaries[*].  I guess I could see the argument that both cookbook_files and template files should be considered text files by default and should get the target O/S line endings by default -- but that requires everyone pushing out a binary cookbook_file to have a flag day and drop 'binmode true' onto their resources.\n\nThe way I proposed solving this in https://tickets.opscode.com/browse/CHEF-4746 was to inspect the file and determine if it looked like a binary or not and then set binmode based on if the first X thousand bytes of the file looked binary or text.\n\nEither way if we pick proposal #1 or #2 we'd need to think this issue through as well.  There are three sub-options here:\n1.  Templates default to text files, cookbook_files default to binaries (this would not be a breaking change, and i'd assumed we'd do one of the proposals above and implement it with this first)\n2.  Templates and cookbook_files default to text files, all binaries need to be denoted as such on the resource (this would be hella breaking change)\n3.  Magical binary detection nirvana with the option to override in the edge case we guess wrong (this might not be a breaking change except in edge conditions)\n\n[*] binaries are always cookbook_files, cookbook_files are predominantly text files\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/chef/chef/commits/3ac1a79d775a691e5871417213e73ac86830cae5", "message": "Merge pull request #6762 from chef/lcg/remove-node-set\n\nRemove node.set and node.set_unless attribute levels"}, {"url": "https://api.github.com/repos/chef/chef/commits/232b7d17c572708c66d8d7f0cbefa52ac10a0b2f", "message": "Merge pull request #6763 from chef/revert-6595-feature/add-action_create-to-windows_service\n\nRevert \"add create and delete actions for windows_service\""}, {"url": "https://api.github.com/repos/chef/chef/commits/277563eb909f8b29055067d62a4ddad9e99aaa5c", "message": "Revert \"add create and delete actions for windows_service\""}, {"url": "https://api.github.com/repos/chef/chef/commits/34a09206c12e0bb8b658ebd8a64a76411a17afd6", "message": "Chef-14 Breaking:  remove node.set and node.set_unless\n\nbeen deprecated since late-12.\n\nSigned-off-by: Lamont Granquist <lamont@scriptkiddie.org>"}, {"url": "https://api.github.com/repos/chef/chef/commits/56568c01e38202dc853011efd50812e441c933fc", "message": "Merge pull request #6515 from dimsh99/fix_for_6242\n\nConvert actions in Chef::Resource::Notification to symbols to prevent double notification"}, {"url": "https://api.github.com/repos/chef/chef/commits/1417310f306571c90977cbe1c4e145d18f0f13d8", "message": "fix double-logging bug\n\nsomehow we're getting an IO object here which is a STDOUT wired up to\nfile descriptor 10 which is not the same as \"STDOUT\" which is wired up\nto file descriptor 1.\n\ni can't track down where or how this is happening.\n\nthis works around the problem by just inspecting if the log_location is\nset to an IO object which is a tty or not which should be broadly\nequivalent (and perhaps more correct than the old code?  not sure if\nthe edge cases matter or not).\n\nalso i'm not smart enough right now to figure out how to test this\nadequately, particularly in ways that would actually catch if it\nreally breaks in the future (particularly due to the gnarliness of\nwanting to have a functional test which constructs a tty when run on\ntravis without a tty....)\n\nSigned-off-by: Lamont Granquist <lamont@scriptkiddie.org>"}, {"url": "https://api.github.com/repos/chef/chef/commits/ab202d708839ad58a85b0dff8b5108b1cd890459", "message": "spec fixes for ruby 2.5\n\nSigned-off-by: Lamont Granquist <lamont@scriptkiddie.org>"}, {"url": "https://api.github.com/repos/chef/chef/commits/676cd84530c84e2b595c61b810e6204d9257b44f", "message": "Merge pull request #6745 from chef/lcg/fix-non-daemonized-umask\n\nfix non-daemonized umask"}, {"url": "https://api.github.com/repos/chef/chef/commits/36041e110eb21fe1f930f7f2ca1a962dab985746", "message": "Merge pull request #6748 from chef/lcg/hardocde-tmpdir-aix-spec\n\nuse TMPDIR correctly in initscript"}, {"url": "https://api.github.com/repos/chef/chef/commits/746562d6358c27b838c95ea27b2a2bd82c03cefe", "message": "prepping for rubocop 0.52.1\n\nSigned-off-by: Lamont Granquist <lamont@scriptkiddie.org>"}, {"url": "https://api.github.com/repos/chef/chef/commits/de1f572fc441143244792afd6575111cb9ec48cf", "message": "missed one\n\nSigned-off-by: Lamont Granquist <lamont@scriptkiddie.org>"}, {"url": "https://api.github.com/repos/chef/chef/commits/8eb8345b425ebac6b407a5ffa1db8d095508a81c", "message": "fix bff tests for tmpdir\n\nSigned-off-by: Lamont Granquist <lamont@scriptkiddie.org>"}, {"url": "https://api.github.com/repos/chef/chef/commits/dff5ee18debb328ca95a0140ec18576de9d91598", "message": "use TMPDIR correctly in initscript\n\nSigned-off-by: Lamont Granquist <lamont@scriptkiddie.org>"}, {"url": "https://api.github.com/repos/chef/chef/commits/e2154e25a5e411d79c27f194d89e0b8185d005d6", "message": "Merge pull request #6637 from chef/lcg/cleanup-node-map\n\nsimplify node_map logic"}, {"url": "https://api.github.com/repos/chef/chef/commits/1de28175ef2018f49c74e2887fbd2dfca3c8a143", "message": "fix non-daemonized umask\n\nWe are ignoring this setting in non-daemonized (--no-fork) runs.\n\nSigned-off-by: Lamont Granquist <lamont@scriptkiddie.org>"}, {"url": "https://api.github.com/repos/chef/chef/commits/334264b3372c8e577ba630cd90c886b11d557e78", "message": "Merge pull request #6730 from chef/acceptance\n\nUpdate the acceptance chef-config pin for chef 14"}, {"url": "https://api.github.com/repos/chef/chef/commits/6d6b3390ec2f5db4d527b4a7b0d0123a959a5204", "message": "Merge pull request #6732 from chef/deprecations\n\nEnable the deprecation for use_inline_resource"}, {"url": "https://api.github.com/repos/chef/chef/commits/1f8350beb539d0e9f892f20ea5424422114abc01", "message": "Merge pull request #6701 from chef/lcg/chef-http-inject-tempfile\n\nAllow injecting tempfiles into Chef::HTTP"}, {"url": "https://api.github.com/repos/chef/chef/commits/a909fe71842b874305a3ca5aa2767a4986bcd4c1", "message": "allow injecting tempfiles into Chef::HTTP\n\nuse this to inject the tempfile from\nChef::FileContentManagement::Tempfile\n\ncloses #2401\n\nSigned-off-by: Lamont Granquist <lamont@scriptkiddie.org>"}, {"url": "https://api.github.com/repos/chef/chef/commits/cbabef7ea2f197a7e7b9b8a238ad2388d3570a2c", "message": "Merge pull request #6673 from chef/shain/move_git_and_docker_cookbook_tests\n\nMove docker and git top cookbook tests to travis"}, {"url": "https://api.github.com/repos/chef/chef/commits/74903a467bbff0a28600f54764ca6e24d17e6f8b", "message": "Merge pull request #6675 from chef/windows_task_ruby23\n\nDon't use .match? which is Ruby 2.4+ only in windows_task"}, {"url": "https://api.github.com/repos/chef/chef/commits/e8c0ebd2483c0a4a060bedc043d301e1ebe2dcb7", "message": "fix priority array order\n\nSigned-off-by: Lamont Granquist <lamont@scriptkiddie.org>"}, {"url": "https://api.github.com/repos/chef/chef/commits/9620ba27646edf81782e643c3ad04be4a7bc8a35", "message": "simplify node_map logic\n\nflattens out the internal data structure and removes some excessive\ndefensive coding.\n\nSigned-off-by: Lamont Granquist <lamont@scriptkiddie.org>"}, {"url": "https://api.github.com/repos/chef/chef/commits/030266db26be2f307e554c48244283ada7c9e364", "message": "fix alphabetic sorting of classes\n\nbut we really shouldn't do this...\n\nSigned-off-by: Lamont Granquist <lamont@scriptkiddie.org>"}], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6766", "title": "Fail on interval runs on windows", "body": "closes #4824\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/pulls/6765", "title": "Convert node map to last-writer-wins for ties", "body": "We still bind preferentially by specificity, but for ties with\r\nspecificity we now prefer last-writer-wins instead of the alphabetic\r\nby class name method we had before (that was never documented and I'm\r\npretty certain nobody understood).\r\n\r\nSo now `provides(:whatever) { true }` in a cookbook should always win\r\nover core.\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/pulls/6661", "title": "memoize some work in the package class", "body": "This is a 10% perf gain for lightweight use of package resources like `build_resource(:yum_package, 'lsof').current_value.version`\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/pulls/6540", "title": "Yum refactor", "body": "- removes yum-dump.py\r\n- halves peak memory utilization\r\n- removes the YumCache\r\n- introduces a long-lived python helper that does most of the work of RPM comparisons, etc on the python side using the actual RPM libs\r\n- implements things like `yum_package \"foo < 1.2.3\" do allow_downgrade true end` correctly\r\n- implements things like `yum_package \"perl(Git)\"` correctly (impossible with the old YumCache)\r\n- closes most of the old yum_package issues", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/pulls/4982", "title": "add recipe resource", "body": "\ud83d\udea7 \n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/pulls/3508", "title": "lazier coupling of Chef::HTTP to Chef::Config", "body": "- remove Chef::Config symbol outside of `#config` lazy initializer\n- allow for dep injecting a different hash completely for Chef::Config\n- allow for updating `@config` or any of the config values from attr_writers\n- move chef/config dep to the bottom\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/3529747", "body": "@jkeiser is this what you intended here, because this test actually works on ruby 1.9 and fails on ruby 2.0 and i'm wondering if i just found a ruby 2.0 bug with the knife-exec code?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3529747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/3649424", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3649424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/3778275", "body": "you need to save and restore this when you're done\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3778275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/3778297", "body": "these feel more like they should be uppercase constants defined closer to the top of the file...\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3778297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/3778707", "body": "you might want to include a comment here that you may wind up running in a different language and may be localized, so that consumers of run_noninteractive need to make sure not to use the output as an API.\n\ne.g. we had a case in the diff stuff where we were stripping a localized-string off of the diff output that broke if you did LANG=de_DE.UTF-8 or whatever...\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3778707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/5219235", "body": "no, just cargo culted it all forwards...\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/5219235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/5232966", "body": "(removed in 9a236897480d7ad5fa13d1d3b5d4a91b6c072a61)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/5232966/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/5263123", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/5263123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/5489575", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/5489575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6282839", "body": "is there any way to get any unit tests around this?  make sure that the template renders certain things even though its difficult to func test the template?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6282839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6463806", "body": "could just be \"sleep delta\"\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6463806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6463966", "body": "it seems like this will always be brittle, particularly \"elapsed_time.should < 6*delta\", particularly on MRI with the global lock and a loaded system.  what action do you take if it took longer than 6 seconds?  is that supposed to be an indication that the tests might have run sequentially and not in parallel?   feels like there should be a better way to figure this out than than relying on sleeping threads.\n\ni could also see you occasionally getting [ 3_delta, 1_delta, 5*delta] back from this if the system is loaded just because threads do strange shit sometimes.  maybe add some retry logic here?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6463966/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6464018", "body": "yeah similar comment here and elsewhere that you've got a lot of tests which are using timing to try to show that the threads ran in parallel.  that ups the probability that any one of them will fail on a particular run through CI which means more likelihood of sunspots.   i'm not convinced that you need to assert this on every test.  i'd rather see an isolated test or two to prove parallelism.  all of the elapsed time checks are completely freaking me out that they'll break.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6464018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6468246", "body": "yeah that looks cool, like the comments.  i had a little bit of dog-tilt-head over the \"parts[n]\" stuff, but the comments helped..  URI.split + URI::Generic.build seem fairly nifty, even if someone forgot to make the port argument work correctly...\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6468246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6468273", "body": "could probably break these lines up into one-arg-per-line, they're getting pretty dense and long.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6468273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6468274", "body": "yeah, LGTM\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6468274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6802704", "body": "or:\n\n```\nargs ||= { ... }\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6802704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/7333326", "body": "slightly confused as to what this is for if its an exception for the cookbook metadata to not have a name field...\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7333326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/7333397", "body": "'k you might want to just note that:\n\n``` ruby\n# The cookbook's name as inferred from its directory (as a fallback for exceptions when the name in \n# the metadata cannot be parsed).\n```\n\nThat is what it looked like to me from the code but I wasn't certain I was missing something.  I think the TODO: about strict mode also confused me a bit...\n\nI would vote to rip out cookbook overlays.  Its largely used by a small nice of chef-solo users, and if they want to compose their cookbook repos from multiple sources I think they could script it up themselves.  I really don't think its worthwhile.  It'll hurt a few people but I think we need to rip the bandage off.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7333397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/7482957", "body": "note this was repeated 3 times, so this is the second deletion.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7482957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/7482960", "body": "this is listed in the prior release.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7482960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "andybrucenet": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6682", "title": "Checksum problem (similar to #4746?) - case-sensitivity", "body": "## Description\r\nInstalling SQL Server Express 2016 via chef-client fails due to case-sensitive SHA256 checksum match.\r\n\r\n## Chef Version\r\n12.7.2\r\n\r\n## Platform Version\r\nWindows Server 2016\r\n\r\n## Replication Case\r\nFollow the instructions to add a SQL Server database recipe as documented on https://learn.chef.io/modules/create-a-web-app-cookbook/windows/virtualbox/configure-sql-server#/.\r\n\r\nMy recipe looks like:\r\n```\r\n# recipes/database.rb\r\ninclude_recipe 'sql_server::server'\r\n\r\n```\r\n\r\nAttributes are:\r\n```\r\n# attributes/default.rb\r\ndefault['sql_server']['accept_eula'] = true\r\ndefault['sql_server']['version'] = '2016'\r\n```\r\n\r\n## Client Output\r\n\r\nThe chef-client output is:\r\n```\r\nRecipe: sql_server::server\r\n         * template[C:\\Users\\CHEF-U~1\\AppData\\Local\\Temp\\kitchen\\cache\\ConfigurationFile.ini] action create\r\n         * windows_package[Microsoft SQL Server 2016 (64-bit)] action install\r\n         Recipe: <Dynamically Defined Resource>\r\n           * remote_file[C:\\Users\\CHEF-U~1\\AppData\\Local\\Temp\\kitchen\\cache\\package\\SQLEXPR_x64_ENU.exe] action create\r\n\r\n             ================================================================================\r\n             Error executing action `create` on resource 'remote_file[C:\\Users\\CHEF-U~1\\AppData\\Local\\Temp\\kitchen\\cache\\package\\SQLEXPR_x64_ENU.exe]'\r\n             ================================================================================\r\n\r\n             Chef::Exceptions::ChecksumMismatch\r\n             ----------------------------------\r\n             Checksum on resource (2a5b64) does not match checksum on content (2a5b64)\r\n\r\n             Compiled Resource:\r\n             ------------------\r\n             # Declared in\r\n\r\n             remote_file(\"C:\\Users\\CHEF-U~1\\AppData\\Local\\Temp\\kitchen\\cache\\package\\SQLEXPR_x64_ENU.exe\") do\r\n        provider Chef::Provider::RemoteFile\r\n        action [:create]\r\n        retries 0\r\n        retry_delay 2\r\n        default_guard_interpreter :default\r\n        source [\"https://download.microsoft.com/download/9/0/7/907AD35F-9F9C-43A5-9789-52470555DB90/ENU/SQLEXPR_x64_ENU.exe\"]\r\n        use_etag true\r\n        use_last_modified true\r\n        checksum \"2a5b64\"\r\n        path \"C:\\\\Users\\\\CHEF-U~1\\\\AppData\\\\Local\\\\Temp\\\\kitchen\\\\cache\\\\package\\\\SQLEXPR_x64_ENU.exe\"\r\n        atomic_update true\r\n             end\r\n\r\n\r\n           ================================================================================\r\n           Error executing action `install` on resource 'windows_package[Microsoft SQL Server 2016 (64-bit)]'\r\n           ================================================================================\r\n\r\n           Chef::Exceptions::ChecksumMismatch\r\n           ----------------------------------\r\n           remote_file[C:\\Users\\CHEF-U~1\\AppData\\Local\\Temp\\kitchen\\cache\\package\\SQLEXPR_x64_ENU.exe] (dynamically defined) had an error: Chef::Exceptions::ChecksumMismatch: Checksum on resource (2a5b64) does not match checksum on content (2a5b64)\r\n\r\n           Resource Declaration:\r\n           ---------------------\r\n           # In C:/Users/CHEF-U~1/AppData/Local/Temp/kitchen/cache/cookbooks/sql_server/recipes/server.rb\r\n\r\n            68: package package_name do\r\n            69:   source package_url\r\n            70:   checksum package_checksum\r\n            71:   timeout node['sql_server']['server']['installer_timeout']\r\n            72:   installer_type :custom\r\n            73:   options \"/q /ConfigurationFile=#{config_file_path} #{passwords_options}\"\r\n            74:   action :install\r\n            75:   notifies :request_reboot, 'reboot[sql server install]'\r\n            76:   returns [0, 42, 127, 3010]\r\n            77: end\r\n            78:\r\n\r\n           Compiled Resource:\r\n           ------------------\r\n           # Declared in C:/Users/CHEF-U~1/AppData/Local/Temp/kitchen/cache/cookbooks/sql_server/recipes/server.rb:68:in `from_file'\r\n\r\n           windows_package(\"Microsoft SQL Server 2016 (64-bit)\") do\r\n             package_name \"Microsoft SQL Server 2016 (64-bit)\"\r\n             action [:install]\r\n             retries 0\r\n             retry_delay 2\r\n             default_guard_interpreter :default\r\n             declared_type :package\r\n             cookbook_name \"sql_server\"\r\n             recipe_name \"server\"\r\n             source \"https://download.microsoft.com/download/9/0/7/907AD35F-9F9C-43A5-9789-52470555DB90/ENU/SQLEXPR_x64_ENU.exe\"\r\n             checksum \"2a5b64\"\r\n             timeout 1500\r\n             installer_type :custom\r\n             options \"/q /ConfigurationFile=C:\\\\Users\\\\CHEF-U~1\\\\AppData\\\\Local\\\\Temp\\\\kitchen\\\\cache\\\\ConfigurationFile.ini \"\r\n             returns [0, 42, 127, 3010]\r\n           end\r\n\r\n\r\n       Running handlers:\r\n       [2017-12-15T16:46:26-05:00] ERROR: Running exception handlers\r\n       Running handlers complete\r\n       [2017-12-15T16:46:26-05:00] ERROR: Exception handlers complete\r\n       Chef Client failed. 2 resources updated in 01 minutes 50 seconds\r\n       [2017-12-15T16:46:26-05:00] FATAL: Stacktrace dumped to C:/Users/CHEF-U~1/AppData/Local/Temp/kitchen/cache/chef-stacktrace.out\r\n       [2017-12-15T16:46:26-05:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report\r\n       [2017-12-15T16:46:26-05:00] FATAL: Chef::Exceptions::ChecksumMismatch: windows_package[Microsoft SQL Server 2016 (64-bit)] (sql_server::server line 68) had an error: Chef::Exceptions::ChecksumMismatch: remote_file[C:\\Users\\CHEF-U~1\\AppData\\Local\\Temp\\kitchen\\cache\\package\\SQLEXPR_x64_ENU.exe] (dynamically defined) had an error: Chef::Exceptions::ChecksumMismatch: Checksum on resource (2a5b64) does not match checksum on content (2a5b64\r\n```\r\n\r\n## Stacktrace\r\n\r\n```\r\nGenerated at 2017-12-15 16:46:26 -0500\r\nChef::Exceptions::ChecksumMismatch: windows_package[Microsoft SQL Server 2016 (64-bit)] (sql_server::server line 68) had an error: Chef::Exceptions::ChecksumMismatch: remote_file[C:\\Users\\CHEF-U~1\\AppData\\Local\\Temp\\kitchen\\cache\\package\\SQLEXPR_x64_ENU.exe] (dynamically defined) had an error: Chef::Exceptions::ChecksumMismatch: Checksum on resource (2a5b64) does not match checksum on content (2a5b64)\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/provider/file.rb:348:in `do_validate_content'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/provider/file.rb:151:in `action_create'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/provider.rb:144:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/resource.rb:596:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/provider/package/windows.rb:212:in `download_source_file'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/provider/package/windows.rb:127:in `action_install'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/provider.rb:144:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/resource.rb:596:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/runner.rb:73:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/runner.rb:105:in `block (2 levels) in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/runner.rb:105:in `each'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/runner.rb:105:in `block in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/resource_collection/resource_list.rb:83:in `block in execute_each_resource'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:116:in `call'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:116:in `call_iterator_block'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:104:in `iterate'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/resource_collection/resource_list.rb:81:in `execute_each_resource'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/runner.rb:104:in `converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/client.rb:668:in `block in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/client.rb:663:in `catch'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/client.rb:663:in `converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/client.rb:702:in `converge_and_save'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/client.rb:280:in `run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/application.rb:252:in `run_with_graceful_exit_option'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/application.rb:228:in `block in run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/local_mode.rb:44:in `with_server_connectivity'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/application.rb:211:in `run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/application/client.rb:433:in `block in interval_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/application/client.rb:423:in `loop'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/application/client.rb:423:in `interval_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/application/client.rb:412:in `run_application'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/lib/chef/application.rb:58:in `run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.0.0/gems/chef-12.7.2-universal-mingw32/bin/chef-client:26:in `<top (required)>'\r\nC:/opscode/chef/bin/chef-client:60:in `load'\r\nC:/opscode/chef/bin/chef-client:60:in `<main>'\r\n```\r\n\r\nI have a workaround - I simply ran:\r\n\r\n```\r\nC:\\Users\\chef-user>certutil -hashfile C:\\Users\\chef-user\\Downloads\\SQLEXPR_x64_ENU.exe SHA256\r\nSHA256 hash of file C:\\Users\\chef-user\\Downloads\\SQLEXPR_x64_ENU.exe:\r\n2a 5b 64 ae 64 a8 28 5c 02 48 70 ec 46 43 61 7a c5 14 68 94 dd 59 dd 56 0e 75 ce a7 87 bf 93 33\r\nCertUtil: -hashfile command completed successfully.\r\n```\r\n\r\nNote that the checksum is the same - but all lower case.\r\n\r\nSo I modified my attributes:\r\n\r\n```\r\n# attributes/default.rb\r\ndefault['sql_server']['accept_eula'] = true\r\ndefault['sql_server']['version'] = '2016'\r\n# ABr: bug in chef - checksum is not matching (case mismatch problem??)\r\ndefault['sql_server']['server']['checksum'] = '2a5b64ae64a8285c024870ec4643617ac5146894dd59dd560e75cea787bf9333'\r\n```\r\n\r\nThen re-ran chef-client and all is well.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "marseille": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6668", "title": "knife Bootstrap permissions error is misleading", "body": "## Description\r\nOn bootstrapping a windows node , the message \r\n\r\nERROR: You authenticated successfully to https://'''chef-server-url''' as '''user''' but you are not authorized for this action.\r\nResponse:  missing create permission\r\n\r\nis displayed. This is not because <user> authenticated correctly or because the <user> is missing the create permission. It is because using user-credentials on a bootstrap, recreates the client and node -- stripping permissions of the existing client and node. When the \"clients\" group is not part of the READ+CREATE ACL of the nodes container, the recreated client cannot create the new node required for the bootstrap. Thus the missing create permission message. \r\n\r\nThe error message is very misleading and cost me over two days of developer time -- it should be rewritten to provide more detail to what exactly is missing permission. Instead of indicating that the user authenticated correctly and display a missing permissions error interpreted as relevant to the user specified. This is very confusing as the user can be part of the admins group and seemingly have their permissions stripped from them.\r\n\r\n## Chef Version\r\n13.6.4 ( chefdk - 2.4.17-1_amd64.deb)\r\n\r\n## Platform Version\r\nUbuntu 14.04\r\n\r\n## Replication Case\r\nReference stackoverflow - https://stackoverflow.com/questions/47780723/cant-bootstrap-node-when-user-is-in-admin-group/47819382#47819382\r\n\r\nRemove the clients group from the READ+CREATE ACL of containers nodes.\r\n\r\nAttempt to bootstrap a remote node with user credentials.\r\n\r\n## Client Output\r\nERROR: You authenticated successfully to https://'''chef-server-url''' as '''user''' but you are not authorized for this action.\r\nResponse:  missing create permission\r\n\r\n## Stacktrace\r\nhttps://gist.github.com/marseille/9eb5ba3a79b353fbeb75855ebab38ae7#file-gistfile1-txt-L3\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jauling": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6667", "title": "knife bootstrap first 3 lines are always outputted to STDERR", "body": "<!--- \r\n!!!!!! NOTE: CHEF CLIENT BUGS ONLY !!!!!!\r\n\r\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\r\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\r\n\r\n* Requests for new or alternative functionality should be made to [feedback.chef.io](https://feedback.chef.io/forums/301644-chef-product-feedback/category/110832-chef-client)\r\n* [Chef Server issues](https://github.com/chef/chef-server/issues/new)\r\n* [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\r\n* Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\r\n\r\n-->\r\n\r\n## Description\r\nknife bootstrap outputs the first 3 lines to STDERR, which seems improper\r\n\r\n## Chef Version\r\n12.21.4\r\n\r\n## Platform Version\r\nRed Hat Enterprise Linux Server release 6.2 (Santiago)\r\n\r\n## Replication Case\r\nRun knife bootstrap, with some typical parameters, and redirect the STDOUT and STERR outputs to separate files. Then cat the STDERR file, and you'll see something like:\r\nCreating new client for NODENAME\r\nCreating new node for NODENAME\r\nConnecting to IPADDRESS\r\n\r\n## Client Output\r\n<!--- The relevant output of the chef-client run or a link to a gist of the entire run, if there is one.\r\n\r\nThe debug output (chef-client -l debug) may be useful, but please link to a gist, or truncate it. -->\r\n\r\n```\r\n\r\n```\r\n\r\n## Stacktrace\r\n<!--- Please include the stacktrace.out output or link to a gist of it, if there is one. -->\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mascarua": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6662", "title": "env resource fails to create an environment variable when not using a literal to define its value", "body": "## Description\r\n\r\nThe env resource is not creating an environment variable if its value is defined using string interpolation.\r\n\r\n## Chef Version\r\n\r\n- Chef Development Kit Version 2.4.17\r\n- chef-client version: 13.6.14\r\n- delivery version: master (73ebb72a6c42b3d2ff5370c476be800fee7e5427)\r\n- berks version: 6.3.1\r\n- kitchen version: 1.19.2\r\n- inspec version: 1.45.13\r\n\r\n## Platform Version\r\n\r\nWindows 10\r\n\r\n## Replication Case\r\n\r\nPlease see the attached cookbook; the README.md file contains a description to replicate the problem.\r\n[SimpleCookbook.zip](https://github.com/chef/chef/files/1553717/SimpleCookbook.zip)\r\n\r\n\r\n## Client Output\r\n\r\nNone so far; the result is observed in the results of the application above.\r\n\r\n## Stacktrace\r\n\r\nNot applicable.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tas50": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6650", "title": "Port homebrew_tap to core", "body": "This was identified in https://blog.chef.io/2017/11/01/coming-soon-chef-client-14-chef-development-kit-3/", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/6649", "title": "Port homebrew_cask to core", "body": "This was identified in https://blog.chef.io/2017/11/01/coming-soon-chef-client-14-chef-development-kit-3/", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6649/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/6648", "title": "port dmg_package to core", "body": "This was identified in https://blog.chef.io/2017/11/01/coming-soon-chef-client-14-chef-development-kit-3/", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/6647", "title": "port powershell_module to core", "body": "This was identified in https://blog.chef.io/2017/11/01/coming-soon-chef-client-14-chef-development-kit-3/", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/6646", "title": "Port windows_font to core", "body": "This was identified in https://blog.chef.io/2017/11/01/coming-soon-chef-client-14-chef-development-kit-3/", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/6645", "title": "Port docker_exec to core", "body": "This was identified in https://blog.chef.io/2017/11/01/coming-soon-chef-client-14-chef-development-kit-3/", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/6644", "title": "Port docker_registry to core", "body": "This was identified in https://blog.chef.io/2017/11/01/coming-soon-chef-client-14-chef-development-kit-3/", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/6643", "title": "Port docker_container to core", "body": "This was identified in https://blog.chef.io/2017/11/01/coming-soon-chef-client-14-chef-development-kit-3/", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/6642", "title": "Port chef_handler to core", "body": "This was identified in https://blog.chef.io/2017/11/01/coming-soon-chef-client-14-chef-development-kit-3/", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/6641", "title": "Port ohai_hint to core", "body": "This was identified in https://blog.chef.io/2017/11/01/coming-soon-chef-client-14-chef-development-kit-3/", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/6640", "title": "windows_task: Allow dates to be entered in the system's native format", "body": "We shouldn't force the world to use the US date format (MM/DD/YYYY) when most people use a different format (many actually). Instead we should investigate what it would take to determine the system's date format and just do the right thing. This is obviously a breaking change and something we'd want to do for Chef 14.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/6639", "title": "windows_task: switch from schtasks CLI to XML", "body": "If we directly manipulate the XML we get full control of the tasks. We should investigate what would be necessary to skip the CLI entirely", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6639/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/6629", "title": "windows_task: Support all priority levels possible in windows task", "body": "There are 10 priority levels in windows task, but none are available via the command line schtasks utility we use to setup tasks. We should figure out how to set these. Hint: It's probably via XML\r\n\r\nhttps://msdn.microsoft.com/en-us/library/aa383512.aspx", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/6562", "title": "dpkg_package doesn't do version comparisons on upgrade", "body": "dpkg_package just installs every time when you use the upgrade action even if the package is older than the currently installed package.\r\n\r\nThis results in scenarios like this:\r\n\r\n```\r\n       Recipe: apt_test::default\r\n         * apt_package[pollinate] action upgrade (up to date)\r\n         * dpkg_package[wget_1.13.4-2ubuntu1.4_amd64.deb] action upgrade\r\n           - upgrade package wget_1.13.4-2ubuntu1.4_amd64.deb from 1.17.1-1ubuntu1.3 to 1.13.4-2ubuntu1.4\r\n```", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/6548", "title": "Lazy evaluate properties in resources by default", "body": "An issues I've seen come up multiple times in resources is setting the default value for a resource to a node attribute, and then becoming confused when it doesn't behave exactly like you would expect. It seems to be a pretty common thing that people want to do, but they get confused when they override the attribute somewhere and it doesn't become the default in the resource. Currently the solution is to lazy the property default value, but it seems like we could just do this by default for all properties and avoid this stumbling block to writing resources entirely.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6548/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/6547", "title": "Provide better error messages for invalid properties", "body": "Currently if someone typos a property name or just makes up a typo they get a pretty unhelpful error message:\r\n\r\n```       \r\nCompiling Cookbooks...\r\n\r\n       ================================================================================\r\n       Recipe Compile Error in C:/Users/vagrant/AppData/Local/Temp/kitchen/cache/cookbooks/test/recipes/kill.rb\r\n       ================================================================================\r\n\r\n       NoMethodError\r\n       -------------\r\n       undefined method `verison' for Custom resource chef_client_updater from cookbook chef_client_updater\r\n\r\n       Platform:\r\n       ---------\r\n       x64-mingw32\r\n```\r\n\r\nIt would be super helpful if we could rescue this and provide more context as to what the user probably did since this is probably a pretty common thing when you're getting started in chef or not using a IDE with chef extensions.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/6089", "title": "Cookbook gem installs don't log in Chef 13", "body": "## Description\r\n\r\nWhen you define a gem to install in a cookbook metadata it doesn't actually log that the installation is occurring during the run\r\n\r\n## Chef Version\r\n\r\n13\r\n\r\n## Platform Version\r\n\r\nUbuntu 16.04\r\n\r\n## Client Output\r\n\r\nThis cookbook includes gem 'aws-sdk', '~> 2' in the metadata and does in fact install the gem, but it logs nothing\r\n\r\n```\r\n       Preparing to unpack .../chef_13.0.118-1_amd64.deb ...\r\n       Unpacking chef (13.0.118-1) ...\r\n       Setting up chef (13.0.118-1) ...\r\n       Thank you for installing Chef!\r\n       Transferring files to <instance-monitoring-ubuntu-1404>\r\n       Starting Chef Client, version 13.0.118\r\n       Creating a new client identity for instance-monitoring-ubuntu-1404 using the validator key.\r\n       resolving cookbooks for run list: [\"aws_test::instance_monitoring\"]\r\n       Synchronizing Cookbooks:\r\n         - aws_test (0.0.1)\r\n         - aws (5.0.1)\r\n       Installing Cookbook Gems:\r\n       Compiling Cookbooks...\r\n       Converging 2 resources\r\n       Recipe: aws_test::instance_monitoring\r\n         * aws_instance_monitoring[enable detailed monitoring] action enable\r\n```", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/6053", "title": "Deprecate attributes in metadata", "body": "## Description\r\n\r\nAttributes in metadata were something we never actually utilized similar to suggests and conflicts. We have a Foodcritic rule now which tells people not to include these in their metadata. We should actually remove it from Chef since they provide no value.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6053/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/4671", "title": "Knife exit codes and messaging are inconsistent", "body": "## Description\n\nWe're not very consistent with exit codes and error messaging in knife.  Some things just exit and show the usage banner while others show a warning about what the user failed to input. Some things exit with 1 while some exit with 0 even though they failed.  Others like knife help incorrectly exit with 1, which seems super odd. A simple method to toss up the usage banner, throw up a passed in failure message, and exit with 1 would really help keep this consistent everywhere.\n## Chef Version\n\n12.7.2\n## Platform Version\n\nAny\n## Replication Case\n\nRun some random knife plugins with bogus options and check stdout and the return code\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commits": [{"url": "https://api.github.com/repos/chef/chef/commits/8748c26bdc2225b89a9d04761166ed99c2abb860", "message": "Merge pull request #6764 from chef/openssl_fix\n\nRename the OpenSSL mixin to avoid name conflicts"}, {"url": "https://api.github.com/repos/chef/chef/commits/d310076da6fe246a413b82601c8a55cd0ebcef0b", "message": "Rename the OpenSSL mixin to avoid name conflicts\n\nThis way people don't have to refactor their code from OpenSSL::Whatever to ::OpenSSL::Whatever\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/80b52b6048b6e1e047a940f7e21a29e76497ea9b", "message": "Merge pull request #6445 from chef/knife_ssh_identity_file\n\nRemove deprecated knife ssh --identity-file option"}, {"url": "https://api.github.com/repos/chef/chef/commits/9ef5c2d239b2501cad5fc01bdfc9d617ddef5430", "message": "Merge pull request #6736 from chef/openssl_resources\n\nAdd dhparam, rsa_private_key and rsa_public_key resources"}, {"url": "https://api.github.com/repos/chef/chef/commits/bd666217aaf590f75b6f9d01a9b77867d2de4119", "message": "Remove useless class tests and cleanup specs\n\nWe create the class then instantly check that it's exactly what we created. There's not much value in that. This also converts more things over to let.\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/85d6b19f94efae5d554431fcfe7d5105aff92a29", "message": "Remove Travis config for chef-config\n\nThis isn't in its own repo anymore so this file does nothing\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/4db12430ba0c6c021b114c143aaea94f1f754d66", "message": "Remove erl_call and deploy resources\n\nWe deprecated these for removal in Chef 14.\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/cec87a86852b425a9af4362c4115fa0772386743", "message": "Actually bump the version to 14 and dep on chef-config / ohai 14\n\nWithout this the kitchen tests fail as there isn't a chef-config build at ~14.0. Ohai has been bumped to 14 and the chef-config dep updated to 14. For now we have to use builds from master since we don't have a gem. I left notes that we can remove those in the future.\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/5cd7ea958612241f7958ccc0e4a75351b1d150d4", "message": "Update the pending version to 14.1\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/9f70bbfd9a578f3a9faa3072b247074168b8c0c5", "message": "Revert \"Enable the deprecation for use_inline_resource\"\n\nThis reverts commit aab192e2b5df57d13213f8e89ce6fccc74a01db1."}, {"url": "https://api.github.com/repos/chef/chef/commits/13cde232cea583f029fa8fe630d5ec4586dd9f47", "message": "Revert \"Enable the spec use_inline_resoruces deprecation\"\n\nThis reverts commit dfc85c82105d2c7a5b03cf8cf60ba9e0a8fe51f9."}, {"url": "https://api.github.com/repos/chef/chef/commits/5ce0781456101fa437125080cde4cf9ed65938f8", "message": "Add additional deprecations, a few bugs, and some security updates\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/083ab943462e5b14503a67cfecd6b16e6d6be0ef", "message": "Merge pull request #6715 from chef/travis_25\n\nAdd Ruby 2.5 testing to Travis"}, {"url": "https://api.github.com/repos/chef/chef/commits/d3f5f8746e0a1cc2f121fb6963b915978192a591", "message": "Add Ruby 2.5 testing to Travis\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/3980045b2b269eba6a7ee66fe9b20f28b4b85b3d", "message": "Add the same logic to other actions\n\nMissed that entirely\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/3a5d4372f5d81078cf1631fafb6ca252e42c1d27", "message": "Fix yum_repository to properly reload chef's package cache post repo setup\n\nWithout this you cannot install a package that is in that repository. We already did this for the yum cache, but not  for the DNF cache.\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/f306c0edf623f84bb7f5acc9a107a844869da7f3", "message": "Merge pull request #6738 from cramaechi/CHEF-5055\n\nFix knife status to show seconds when needed #5055"}, {"url": "https://api.github.com/repos/chef/chef/commits/1a88d51c49b23365c8af5c6a6f5a9306eccae225", "message": "Chefstyle fix\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/274670360664fee1667787601a733319ae4ef18c", "message": "Remove node from the specs\n\nWe're not using this here anymore\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/4949304de73689367bfb88061262561977c521d5", "message": "Allow file to handle the OS specific values\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/0e0dec68c0651c0411a37c07cf68d3f677c086f6", "message": "Add some resource specs\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/25bdbc28c6a0e3e29feffaf6baeb60e74294016e", "message": "Make the private key mode be 600 by default\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/e871f2a39103fe5cc73c2a31fd903d1a30c4d136", "message": "Improve readability a tiny bit in the mixin\n\nPer the review\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/25123712d7db2be05b13c21b40eb8eacaa7f55dc", "message": "Add tests for the mixin\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/aad8ccf1263bc8848efec5140cc02ef593f0e1d4", "message": "Update to Ruby 2.4.3\n\nThis resolves this CVE https://www.ruby-lang.org/en/news/2017/12/14/net-ftp-command-injection-cve-2017-17405/\n\nIt also backports a few bugfixes from 2.5.0:\nhttps://github.com/ruby/ruby/compare/v2_4_2...v2_4_3\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/98223f0b0fdca5ae8d460738c8c01ca0e80ec2c8", "message": "Add dhparam, rsa_private_key and rsa_public_key resources\n\nPorted from the openssl cookbook. I've done all the major refactoring there to shake the bugs out. This is just reformatted to use the mixin instead of a cookbook helper and to be library style so it works in core chef.\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/90b263b605387f056e0754888e44475114823102", "message": "Merge pull request #6735 from get9/fix-dscl-home-exists\n\nCheck for set home property before file existence (fixes #5777)"}, {"url": "https://api.github.com/repos/chef/chef/commits/dfc85c82105d2c7a5b03cf8cf60ba9e0a8fe51f9", "message": "Enable the spec use_inline_resoruces deprecation\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/aab192e2b5df57d13213f8e89ce6fccc74a01db1", "message": "Enable the deprecation for use_inline_resource\n\nToss in some yard while I'm in here as well\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/1af63da7b7bcef79fd03f8f355e60062420c7110", "message": "Don't run sudo on every travis job\n\nWe already specify sudo where we need it. Enabling it everywhere just\nmeans we have to run full boxes that take longer to spin up.\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/5220da7e362dbb7eb1fa6b6373fa47b5ecec21eb", "message": "Update the acceptance chef-config pin for chef 14\n\nThere's no reason to exclude chef 13 at this point.\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/9690f25ee2458b904d3606a98feaf6629ada69a3", "message": "Remove knife index rebuild command that requires Chef < 11\n\nknife index rebuild only works on Chef Server < 11. We no longer support\nChef Server 10 and anyone still using 10 should use an older DK or gem\ninstall of chef for management.\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/d84c077e3cc20e2353eae3fa4e47f41e4f0872cc", "message": "Add a warning that Chef 11 server support in knife user is deprecated\n\nWe're currently shipping 2 of each of these plugins and rewriting the user input when we think they actually meant to support Chef 11 server. It's code that really needs to go away at this point.\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/c9caed52eeaec28b2e3bc52585dd80b8d2a71a48", "message": "Merge pull request #6726 from chef/new_knife_doc\n\nUpdate the knife editor error message to point to the correct document"}, {"url": "https://api.github.com/repos/chef/chef/commits/476013cbede26aa4bfe5c0ec373bd80b306e4540", "message": "Update the knife editor error message to point to the correct document\n\nI updated the structure of the knife documentation a while back and we have a dedicated doc for setting up knife now.\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/49dfa83f72a46428365fbc7f2b46d091edfc839e", "message": "Don't restrict the provides to os: windows\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/c70b98449da931c866863645e1706ae04e49ee0a", "message": "Merge pull request #6710 from chef/useless_regex\n\nRemove a useless regex in zypper_repository resource"}, {"url": "https://api.github.com/repos/chef/chef/commits/94d416d19e7758556f864c626b193d9765a223b8", "message": "Set smartos_package back to platform_family\n\nIt's the same thing and our tests are constructed in a way that\nplatform_family is necessary here. It's not worth unravelling that to\nuse platform here\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/5a1aef2ec875188e8c38288ad1c861712c0c63c8", "message": "Merge pull request #6720 from chef/deprecate_erl_call\n\nDeprecate erl_call resource"}, {"url": "https://api.github.com/repos/chef/chef/commits/8a4f189de35c9881b3e763bbbecfdde837010e39", "message": "Deprecate erl_call\n\nThis implements RFC 98 from https://github.com/chef/chef-rfc\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/eb492c8c51ecb8f0c247d18f0eeb56269808b62d", "message": "Remove deprecated -r option for Solo mode\n\nWe claimed we were going to remove this in Chef 13. Let's stop rewriting\nARGs now.\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/2cd379b12eac02246ecc12b5e3cbb51069c9cedc", "message": "Remove previously deprecated mixins and Chef::DSL::Recipe::FullDSL\n\nWe wired these up previously with deprecations. They've been deprecated for a long time and are pretty rarely used on the Supermarket. Additionally we have Foodcritic rules to detect their usage:\n\nFC102: Deprecated Chef::DSL::Recipe::FullDSL class used\nFC100: Deprecated Chef::Mixin::Language mixin used\nFC099: Deprecated Chef::Mixin::LanguageIncludeRecipe mixin used\nFC098: Deprecated Chef::Mixin::RecipeDefinitionDSLCore mixin used\nFC097: Deprecated Chef::Mixin::LanguageIncludeAttribute mixin used\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/601c2cabf9cd3101c624e86602a52df58d7b5d11", "message": "Improve property warnings in resources\n\nGive more details on why people are seeing these problems so they can fix them.\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/09d9df80012faf6586c3fcd9a8aa5c968f3fbd3f", "message": "Merge pull request #6709 from chef/integration_docs\n\nRemove lock files and test github masters in Kitchen Tests"}, {"url": "https://api.github.com/repos/chef/chef/commits/87c4cacff38b82c88fb158042229f87724a2402c", "message": "Remove the Gemfile.lock and Berksfile.lock for kitchen tests\n\nWe're probably going to see some more failures with this change, but that's a good thing. If we have a bad kitchen change or a bad cookbook change we'll know now earlier. Less impact == better.\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/1473703b3490091052f1f9d76c1e564a1d055d03", "message": "Just use platform for smartos as well\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/b07bb9003130d5d920ebb00f22bd3d5036976c9d", "message": "Don't check both platform_family / os in provides when platform_family will do\n\nWe're already going specific enough here to identify the platform_family. Debian is always going to be on Linux and SmartOS on Solaris2. Don't both checking both.\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/66d2ebe5b8b9c4a6f7b3ca69d6a92eb48c0e0358", "message": "Remove a useless regex in zypper_repository\n\nPretty sure I mistakenly copied this from yum_repository. There's no real point and it's just going to slow things down.\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/31c8fb12bb4d4ae5a853cf25e2b80843c00bf918", "message": "Add the missing provides\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/bbd9888e5347708a976492a11e0e18be3a6ba158", "message": "Modernize windows_path resource\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/3d46256c31fab1227cf8b494e17d8c103229b2f0", "message": "Merge pull request #6706 from chef/speed_up_appveyor\n\nSpeed up Appveyor testing with bundler caching"}, {"url": "https://api.github.com/repos/chef/chef/commits/c20caa0232c30c645b90439daaa9dfeaea6394b3", "message": "Remove unnecessary dependencies for kitchen integration testings\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/71a596ec29d98030653f83dc13221593cc80d948", "message": "Merge pull request #6695 from bloomberg/bootstrap-strings\n\nEscape single-quoted strings from the context in knife bootstrap"}, {"url": "https://api.github.com/repos/chef/chef/commits/96f4072dbb009348076bdd03af6f745461693e3b", "message": "Enable bundler caching\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/f1eca855ec92756c2ecea689802916033cc2c99f", "message": "Shuffle our appveyor config around\n\nThis makes it easier to follow and matches their Ruby guide\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/8980bb3847c2bc9dd511bd8923066718b57217d2", "message": "Merge pull request #6705 from chef/speed_up_travis\n\nBreak out unit tests into their own jobs in Travis to speed things up"}, {"url": "https://api.github.com/repos/chef/chef/commits/3533dcb85c2698bc45166d9009fdc577385cd6ce", "message": "Break out unit/integration/functional tests in travis and test chef-config\n\nAdd the chef-config unit tests to the unit testing group\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/8cdd87b19f9b2431189fbd661ede7dc6ac421d51", "message": "Fail if we can't modify the sudoers file\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/0007d3f817c4103e2520e8ae531ee4b137120f47", "message": "Merge pull request #6697 from chef/yum_repo_cleanup\n\nFix yum_repository allowing priority of 0 and remove string regexes"}, {"url": "https://api.github.com/repos/chef/chef/commits/0ebf198dd0a8788fcc536ea31e4b01a89fa63522", "message": "Merge pull request #6696 from chef/yard\n\nAdd descriptions and yard @since comments to all resources"}, {"url": "https://api.github.com/repos/chef/chef/commits/64014cb9830b8da7123e01212c5dd3d8fe6617a0", "message": "Fix priority to accept 1-99 not 0-99\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/9dc874ef1559cb390d64b4746024ca7c9aa9038a", "message": "Remove the regex from every string property\n\nWe copied this in from the cookbook and I assume at one point there was a reason for it, but I can't think of one now.\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/17488942f10938664ae642d7a56531665d77c14f", "message": "Merge pull request #6692 from chef/resource_specs\n\nCleanup to some of the resource specs"}, {"url": "https://api.github.com/repos/chef/chef/commits/012b653ae800847e6ef6babad31e8e7f41ef3299", "message": "Merge pull request #6652 from sandratiffin/CHEF-3058\n\nfix for data bag names partially matching search reserved words"}, {"url": "https://api.github.com/repos/chef/chef/commits/62068b35f7a03c1c0da9c8f213159c08a266d6f8", "message": "Move zypper_repo tests out of linux only and cleanup\n\nThe alias tests I added don't actually work, but everything was in linux\nonly so I didn't notice. Move the things out of linux only that can run\non any platform and remove the alias tests for now.\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/8f51bec4799e32784af6d0f790145906deb5c52c", "message": "Modernize launchd resource\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/034f00f6c466c3924e5fdb069b484d1961283c76", "message": "Add descriptions and @since comments to all resources\n\nFrom the docs site\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/01a801e1caa39a8aee63c569d2c6df41c59da1f7", "message": "Merge pull request #6693 from chef/cleanup\n\nModernize directory resource"}, {"url": "https://api.github.com/repos/chef/chef/commits/dfa996aeb1ca89e8fd6b3c6aa5a45629ef4d81e3", "message": "Chefstyle fix\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/087809b8b75051a7294a908f64cc1a0aad6fedf0", "message": "Modernize directory resource\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/7402a236b6128776387e1914d75ece748c0eafa8", "message": "Fix identity on device property\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/a0e844d3b7d47047ca14b8d306db071975000717", "message": "Modernize the ifconfig resource\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/078b027bac17f0caf550290cd3adad5585e78f2b", "message": "Add a test for the name property in subversion resource\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/703e3a06e2962fa7de0b53b0c1db169ef7393dc2", "message": "Improve the windows_path specs\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/98eee03ef7649475bf0a1fa1dba574732078b391", "message": "Improve the yum_repository resource specs\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/13581a1c2e30950d68682bea2a9e36f9b51bc0ca", "message": "Improve the zypper_repository resource specs\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/17f85426ed747ce7ba3e56a2bce241b317fb99ae", "message": "Cleanup for resource specs\n\nConvert everything to let and update the tense\n\nNothing real magical here, but gets us one step closer to uniformity in\nthe specs\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/3bc234908d800189739653f2ea1d1eabeaa28df8", "message": "Merge pull request #6685 from chef/osx_profile\n\nModernize osx_profile resource"}, {"url": "https://api.github.com/repos/chef/chef/commits/7556053a3cc06db5ef778526a025e408f5e1b397", "message": "Merge pull request #6689 from chef/resource_provider_magic\n\nModernize cookbook_file resource and expand specs"}, {"url": "https://api.github.com/repos/chef/chef/commits/5941e88cb4864bee96b9e4e673fef53de7f4b332", "message": "Update lazy usage per code review\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/e58fec5cb80b212bb4900954a23d5f7b0a0c4570", "message": "Modernize cookbook_file and expand specs\n\nDon't hardcode the provider since the provider already has a provides line\n\nTest the source logic default properly by creating the resource name as a absolute path, which is how the user would use it\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/e04eb4a65d30e9a140bb02ccb597d5dc33508a64", "message": "These specs can't be written in a cross platform way\n\nThe path helper does exactly what we expect it to and that makes this only work on *nix\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/8dadb5e568f7258e4c6aa74d16e3b90ee32ce58a", "message": "Modernize osx_profile resource\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/1016e4e87d02d309b96bed99e7fb006a3aa958f4", "message": "Fix bugs in handling 'source'  in msu_package and cab_package\n\nThe two issues fixed here:\n\n1) cab_package did not require source, but didn't set it from the resource name so cab_package 'xyz.cab' would just fail since source was nil\n2) msu_package would coerce the resource name and not package_name so if you overwrote the package name you would also have to set the source, although you wouldn't realize that until it failed oddly\n\nSo the solution here is to set the source value to package_name by default and that gets coerced into a path as was previously done. This adds tests for this behavior and the coerce behavior itself to both resources.\n\nThis fixes issue #6674\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/0d1072d74f711bb180b4c8d075309c3934eb06a6", "message": "Modernize reboot resource and add spec\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/a41b588857acc92e32e3c5b8e0e8f6a59bed76ce", "message": "Merge pull request #6676 from chef/modernize_log_resource\n\nModernize the log resource"}, {"url": "https://api.github.com/repos/chef/chef/commits/daebb1e6be72e27fb3e39e050e0d32d35c31a24e", "message": "Merge pull request #6671 from chef/resource_fixes\n\nAvoid a few initializers in resources by using the DSL we have"}, {"url": "https://api.github.com/repos/chef/chef/commits/beff611b6f40e5bcb005a822b1e5c4a989e588ad", "message": "Fix failing msu_package resource specs\n\nActions are arrays now\nSince we properly set source as a name property name gets coerced into a source path as expected. This was a bug before.  This also uncovered #6674 which I'll fix in another PR.\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/f47a13bf6384927df90194d852498a51aa694fe9", "message": "Fix for readability and a failing test\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/3b55abbb30fcb6a8cbb4f58b16023bcfc38a44f3", "message": "Avoid a few initializers in resources by using the DSL we have\n\nTip of the iceberg here, but it's the low hanging fruit\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/fb57ed415f2d1fe43b44175ed4f61b2134375858", "message": "Remove author yard comments\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/748b3e626a20d050d5d777ce5c206203e01f8386", "message": "Add back the provides to the provider\n\nMagic doesn't work here since the class name isn't magical\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/58041e245a34c3773285cd27ff74cea4e838e520", "message": "Modernize the log resource\n\nGeneral cleanup\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/c3a071cfe42e13866adc6fdfb19a977e9f1a0b4d", "message": "Remove the ciphers that openSSH 7.6 doesn't support\n\nfedora-latest just went to Fedora 27 and blowfish / cast have been removed with the inclusion of openSSH 7.6. The cookbook is fine, but we set this here.\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/61a308ece615ecd2d45062a3d314474f50565e66", "message": "Merge pull request #6665 from chef/yard2\n\nAdd a few more YARD comments to resources"}, {"url": "https://api.github.com/repos/chef/chef/commits/cb61668acd106e13b0db96061ca7875bb7bbba2d", "message": "Don't use .match? which is Ruby 2.4+ only\n\nAdded a todo to fix this when Ruby 2.3 support goes away since it's 3x\nfaster\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/be8540a076226051029dc161895bc887eb4813b1", "message": "Cleanup some YARD warnings\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/0d14959ebef1f7cd051e1621e9785555981d5500", "message": "Add a few more comments to resources\n\nI try to add them as I read through resources\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/a372995ee67cce1bbe32a5e24b43851bdb9427cd", "message": "Use comments in the github issue template\n\nThis way we don't see the end users notes when they submit it. This should make it easier to read the issues."}, {"url": "https://api.github.com/repos/chef/chef/commits/19eb180aace2aedb9bbd60093bfb286c8d781128", "message": "Merge pull request #6654 from MsysTechnologiesllc/vasundhara/chef_windows_task_resource_not_idempotent_for_any_command\n\nwindows_task: Fix resource isn't fully idempotent due to command property"}, {"url": "https://api.github.com/repos/chef/chef/commits/50c50322f0d7270b98cf62133bb109860e9f2223", "message": "Merge pull request #6618 from MsysTechnologiesllc/nim/on_logon_issue\n\nInvalid date error on windows_task with frequency :on_logon"}, {"url": "https://api.github.com/repos/chef/chef/commits/c052fce12009d768565f9ba488a4fed26215319e", "message": "Merge pull request #6628 from chef/more_task\n\nwindows_task: Add additional input validation to properties"}, {"url": "https://api.github.com/repos/chef/chef/commits/a3b29d8a564485e2b321ac70969ac53a4340c918", "message": "Update the start_time spec for the new message\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/87a7f7d58b183d4af511c3ef496c8559fc808625", "message": "Fix the time regex and improve the error message\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/d91dc1cce0efa2d00bfbe37ecbcd154500c99986", "message": "These are all input validation errors so they should raise ArgumentError not RuntimeError\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/3ece60a594d9f176a28ea371d830d14c723fa99b", "message": "Expect the right exceptions\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/08702b7f217971c29581875c74e792e5cbe9567e", "message": "Use integer for numeric evaluation\n\nWhy is this not just in the duration calculator? Well we use it in two places and I would have had to add the same logic in both of those places. It's nice and easy to read this way\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/973d91ab278529dd859f32c7206deec6600f449c", "message": "Properly handle an ISO8601 duration of 0 seconds\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/6053da4039ef390f2e53ca013048b6cc8d4cf449", "message": "Merge pull request #6633 from chef/knife_windows\n\nRemove the allowed_failures in Travis"}, {"url": "https://api.github.com/repos/chef/chef/commits/db320dc818b36a24b01c267517bd087e8b0a3fb6", "message": "Add tests for invalid dates\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/6cf225b7e4b9e3cb788e3998d4c54f32e55ea9df", "message": "Improve the integer/string warning message\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/6ad0ac95c33969a16b79fd32cd987fe68c150266", "message": "Validate the start_date is correctly passed\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/c1e6bb1a47d821dbbab59eaf16a46c3ff02f0ccf", "message": "Explain what PT72H is\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/f280d1edfe35a5be4146fea005ad558f1726c79a", "message": "allow random_delay and execution_time_limit to be integers and properly validate\n\nAlso set the default the right way with execution_time_limit\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/00cdaff936a3d50ed7ea4eb9e0afa368403a1646", "message": "Validate that starttime is actually in HH:mm format\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/a3642df60cc51c8b57bdfdc0cb12846215256c8f", "message": "Test lowercase system users not requiring passwords\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/954c8c6fc15265926a62c97ed5c8f19ae847f97c", "message": "Add testing of sec_to_dur\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/b6cfb6e109174bbd95977eab36b78c89aad0a1e1", "message": "Remove duplicate amazon linux test in the travis config\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/b421a502b4bc2efef7619e999d3a2a6d13cc0af2", "message": "Remove the allowed_failures in Travis\n\nIt should all pass now\n\nSigned-off-by: Tim Smith <tsmith@chef.io>"}], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6767", "title": "WIP:  Add windows auto_run, font, pagefile, printer, printer_port, and shortcut resources", "body": "Move multiple resources from the windows cookbook into core chef", "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/6498", "title": "Apt repo cleanup and testing expansion", "body": "So this all started when @coderanger pointed out that we didn't need to use the run_command on the shell_out helper method since it does that internally already. I fixed that here and realized the logic could be broken out to ease readability and expand testing. I added yard comments, broke out some logic into smaller methods, added more unit tests, and added a bit more debug logging.", "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/6364", "title": "Link to the knife docs when the knife config file is missing", "body": "This is a pretty common first error message to experience with Chef. Let's point the users to a helpful location so they can quickly get up and running.\r\n\r\nSigned-off-by: Tim Smith <tsmith@chef.io>", "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/6257", "title": "Chef 14: Remove deprecated bootstrap options", "body": "We said we would remove these in Chef 13 in the code. Lets do it for 14 instead.\r\n\r\nSigned-off-by: Tim Smith <tsmith@chef.io>", "author_association": "OWNER"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/4171872", "body": "I think you missed one\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/4171872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "stevie911": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6613", "title": "Regression in Chef 13.1.x when reading `-j dna.json` from command line with spurious FATAL", "body": "## Description\r\n\r\nchef-cleint will exit out with en error when trying to read json file or json from stdin. It honors the attribute set but exits out with an error and status code 1. This makes it look like the chef-client run errored when infact it didn't.\r\n\r\n## Chef Version\r\n\r\n13.6.4\r\n\r\n## Platform Version\r\n\r\nRHEL6 RHEL7\r\n\r\n## Replication Case\r\n\r\necho '{\"attr\":\"value\"}' | chef-client -j /dev/stdin\r\n\r\nor chef-client -j test.json\r\n\r\nWith test.json like\r\n```{ \"attr\": \"value\"}```\r\n\r\n## Client Output\r\n```\r\necho '{\"attr\":\"value\"}' | chef-client -j /dev/stdin\r\nStarting Chef Client, version 13.6.4\r\nChef Client finished, 0/15 resources updated in 03 minutes 08 seconds\r\nFATAL: Could not parse the provided JSON file (/dev/stdin): Top level JSON object must be a Hash or Array. (actual: NilClass)\r\nFATAL: Could not parse the provided JSON file (/dev/stdin): Top level JSON object must be a Hash or Array. (actual: NilClass)\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "perlun": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6591", "title": "knife edit throws away your changes if they included invalid json", "body": "## Description\r\n\r\nIf you are editing an object with knife using one of the edit commands (e.g. `knife environment edit foo`) and enter invalid json, you will be forced to re-enter all of your changes. Ideally, Chef would reopen the file, or at least tell you the tempfile location so you can copy over the changes manually.\r\n\r\n(Originally reported by @stevendanna, thank you! Migrated from [CHEF-5083](http://tickets.opscode.com/browse/CHEF-5083))\r\n\r\n## Chef Version\r\n\r\n```shell\r\n$ bundle exec knife -v\r\nChef: 12.14.77\r\n```\r\n\r\n## Platform Version\r\n\r\n```\r\n$ uname -a\r\nDarwin ecvaawplun5.local 17.0.0 Darwin Kernel Version 17.0.0: Thu Aug 24 21:48:19 PDT 2017; root:xnu-4570.1.46~2/RELEASE_X86_64 x86_64\r\n```\r\n\r\n## Replication Case\r\n\r\nSteps to Reproduce\r\n\r\n1) Create an environment with knife\r\n2) Edit the environment with knife, make a lot of changes, make a mistake with your JSON syntax.\r\n3) Watch it fail.\r\n4) Ragequit when you realize you have to type everything over again.\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/6281", "title": "chef-client errors when unexpected files are in attributes/ directory", "body": "## Description\r\n\r\nChef runs into errors if there are attribute files which are encoded with [blackbox](https://github.com/StackExchange/blackbox).\r\n\r\n## Chef Version\r\n\r\nchef_version=13.2.20\r\n\r\n## Platform Version\r\n\r\nplatform=ubuntu\r\nplatform_version=16.04\r\nruby=ruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-linux]\r\nprogram_name=chef-solo worker: ppid=16892;start=11:36:31;\r\nexecutable=/opt/chef/bin/chef-solo\r\n\r\n## Replication Case\r\n\r\nCreate an attribute file alongside the `default.rb` file inside a cookbook:\r\n\r\n```shell\r\n$ touch cookbooks/acme-cookbook/attributes/default.rb.gpg\r\n```\r\n\r\nThen run `bundle exec knife solo cook some-server` to push it out to the node.\r\n\r\n## Client Output\r\n\r\n```\r\nRunning Chef: sudo chef-solo -c ~/chef-solo/solo.rb -j ~/chef-solo/dna.json\r\nStarting Chef Client, version 13.2.20\r\nresolving cookbooks for run list: [\"ep-docker\", \"acme-cookbook\", \"ep-platform\", \"ep-users\", \"ep-monitoring\"]\r\nSynchronizing Cookbooks:\r\n  - ep-platform (1.0.0)\r\n  - acme-cookbook (0.1.0)\r\n  - ep-docker (1.0.0)\r\n  - ep-users (1.0.0)\r\n  - ep-monitoring (1.0.0)\r\n  - systemd (3.0.0)\r\n  - compat_resource (12.19.0)\r\n  - datadog (2.7.0)\r\n  - chef_handler (1.4.0)\r\n  - apt (6.1.2)\r\n  - windows (3.1.1)\r\n  - yum (5.0.1)\r\n  - ohai (5.1.0)\r\nInstalling Cookbook Gems:\r\nCompiling Cookbooks...\r\n\r\n================================================================================\r\nRecipe Compile Error in /home/perlundberg/chef-solo/local-mode-cache/cache/cookbooks/acme-cookbook/attributes/default.rb.gpg\r\n================================================================================\r\n\r\nChef::Exceptions::AttributeNotFound\r\n-----------------------------------\r\ncould not find filename for attribute default.rb.gpg in cookbook acme-cookbook\r\n\r\nSystem Info:\r\n------------\r\nchef_version=13.2.20\r\nplatform=ubuntu\r\nplatform_version=16.04\r\nruby=ruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-linux]\r\nprogram_name=chef-solo worker: ppid=16892;start=11:36:31;\r\nexecutable=/opt/chef/bin/chef-solo\r\n\r\n\r\nRunning handlers:\r\n[2017-07-18T11:36:35+02:00] ERROR: Running exception handlers\r\n[2017-07-18T11:36:35+02:00] ERROR: Running exception handlers\r\nRunning handlers complete\r\n[2017-07-18T11:36:35+02:00] ERROR: Exception handlers complete\r\n[2017-07-18T11:36:35+02:00] ERROR: Exception handlers complete\r\nChef Client failed. 0 resources updated in 03 seconds\r\n[2017-07-18T11:36:35+02:00] FATAL: Stacktrace dumped to /home/perlundberg/chef-solo/local-mode-cache/cache/chef-stacktrace.out\r\n[2017-07-18T11:36:35+02:00] FATAL: Stacktrace dumped to /home/perlundberg/chef-solo/local-mode-cache/cache/chef-stacktrace.out\r\n[2017-07-18T11:36:35+02:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report\r\n[2017-07-18T11:36:35+02:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report\r\n[2017-07-18T11:36:35+02:00] ERROR: could not find filename for attribute default.rb.gpg in cookbook acme-cookbook\r\n[2017-07-18T11:36:35+02:00] ERROR: could not find filename for attribute default.rb.gpg in cookbook acme-cookbook\r\n[2017-07-18T11:36:35+02:00] FATAL: Chef::Exceptions::ChildConvergeError: Chef run process exited unsuccessfully (exit code 1)\r\n[2017-07-18T11:36:35+02:00] FATAL: Chef::Exceptions::ChildConvergeError: Chef run process exited unsuccessfully (exit code 1)\r\nERROR: RuntimeError: chef-solo failed. See output above.\r\n```\r\n\r\n## Stacktrace\r\n\r\nDidn't receive any, but I'm quite sure [this line](https://github.com/chef/chef/blob/2d9523c43311010c534fe7b58b4f7d5257ad2852/lib/chef/run_context.rb#L385) is causing the problems.\r\n\r\n/cc @qzio, @rallenecraft", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "josh-barker": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6589", "title": "get_account_right sometimes can crash the chef-client", "body": "## Description\r\n\r\nThe `get_account_right` method in `Chef::ReservedNames::Win32::Security` can randomly crash the chef client. It occurs when getting the rights for both a local user and a system account, i.e. NT AUTHORITY\\LOCALSERVICE.\r\n\r\nHowever, I would expect that when `get_account_right` is called it would not error.\r\n\r\n## Chef Version\r\n\r\n13.6.4\r\n\r\n## Platform Version\r\n\r\n* Windows 2012R2\r\n* Windows 2016 (No logs attached, but it has the same inconsistent behavior)\r\n\r\n## Replication Case\r\n\r\nThe easiest way to replicate is using `kitchen`, however I can replicate locally on a VM too.\r\n\r\nIn a recipe I have the following:\r\n\r\n```ruby\r\nuser 'dummy_user' do\r\n  password 'SomePassw0rd!'\r\n  action :nothing\r\nend.run_action(:create)\r\n\r\ndef add_account_right_with_check(account, se_rights)\r\n  puts \"checking #{account} has #{se_rights}\"\r\n  has_right = Chef::ReservedNames::Win32::Security.get_account_right(account).include?(se_rights)\r\n  puts \"has right: #{has_right}\"\r\n  return if has_right\r\n  Chef::ReservedNames::Win32::Security.add_account_right(account, se_rights)\r\n  puts \"Set #{se_rights} on #{account}\"\r\nend\r\n\r\ndef add_account_right_without_check(account, se_rights)\r\n  Chef::ReservedNames::Win32::Security.add_account_right(account, se_rights)\r\n  puts \"Set #{se_rights} on #{account}\"\r\nend\r\n\r\n1.upto(10) do |i|\r\n  puts \"Attempt: #{i}\"\r\n\r\n  add_account_right_without_check('dummy_user', 'SeServiceLogonRight')\r\n  add_account_right_without_check('NT AUTHORITY\\LOCALSERVICE', 'SeServiceLogonRight')\r\nend\r\n\r\n1.upto(10) do |i|\r\n  puts \"Attempt: #{i}\"\r\n\r\n  add_account_right_with_check('dummy_user', 'SeServiceLogonRight')\r\n  add_account_right_with_check('NT AUTHORITY\\LOCALSERVICE', 'SeServiceLogonRight')\r\nend\r\n\r\nputs 'finished'\r\n```\r\n\r\nSince I found the problem with `get_account_right`, I logged onto a VM, and used `puts` to find out exactly where was the error.\r\nI found that calling `LsaFreeMemory` did not work correctly, so I updated the code to:\r\n\r\n```\r\nputs 'before LsaFreeMemory'\r\nLsaFreeMemory(privilege_pointer)\r\nputs 'after LsaFreeMemory'\r\n```\r\n\r\n(See https://github.com/chef/chef/blob/master/lib/chef/win32/security.rb#L201)\r\n\r\n## Fail on local user\r\n\r\nThis failed on the 1st call to `get_account_right`\r\n\r\n### Client Output\r\n\r\n```\r\n      Chef Omnibus installation detected (13)\r\n      Transferring files to <default-win2012r2>\r\n      Starting Chef Client, version 13.6.4\r\n      resolving cookbooks for run list: [\"test_cookbook::default\"]\r\n      Synchronizing Cookbooks:\r\n        - test_cookbook (0.1.0)\r\n      Installing Cookbook Gems:\r\n      Compiling Cookbooks...\r\n      Recipe: test_cookbook::default\r\n        * windows_user[dummy_user] action create\r\n          - create user dummy_user\r\n      Attempt: 1\r\n      Set SeServiceLogonRight on dummy_user\r\n      Set SeServiceLogonRight on NT AUTHORITY\\LOCALSERVICE\r\n      Attempt: 2\r\n      Set SeServiceLogonRight on dummy_user\r\n      Set SeServiceLogonRight on NT AUTHORITY\\LOCALSERVICE\r\n      ...\r\n      # all succeeded\r\n      ...\r\n      Attempt: 10\r\n      Set SeServiceLogonRight on dummy_user\r\n      Set SeServiceLogonRight on NT AUTHORITY\\LOCALSERVICE\r\n      Attempt: 1\r\n      checking dummy_user has SeServiceLogonRight\r\n      before LsaFreeMemory\r\n>>>>>> ------Exception-------\r\n>>>>>> Class: Kitchen::ActionFailed\r\n>>>>>> Message: 1 actions failed.\r\n>>>>>>     Converge failed on instance <default-win2012r2>.  Please see .kitchen/logs/default-win2012r2.log for more details\r\n>>>>>> ----------------------\r\n>>>>>> Please see .kitchen/logs/kitchen.log for more details\r\n>>>>>> Also try running `kitchen diagnose --all` for configuration\r\n```\r\n\r\n### Kitchen Log\r\n\r\n```\r\nI, [2017-11-16T13:52:51.331454 #2120]  INFO -- default-win2012r2: Attempt: 9\r\nI, [2017-11-16T13:52:51.333455 #2120]  INFO -- default-win2012r2: Set SeServiceLogonRight on dummy_user\r\nI, [2017-11-16T13:52:51.335582 #2120]  INFO -- default-win2012r2: Set SeServiceLogonRight on NT AUTHORITY\\LOCALSERVICE\r\nI, [2017-11-16T13:52:51.337697 #2120]  INFO -- default-win2012r2: Attempt: 10\r\nI, [2017-11-16T13:52:51.339744 #2120]  INFO -- default-win2012r2: Set SeServiceLogonRight on dummy_user\r\nI, [2017-11-16T13:52:51.341824 #2120]  INFO -- default-win2012r2: Set SeServiceLogonRight on NT AUTHORITY\\LOCALSERVICE\r\nI, [2017-11-16T13:52:51.343958 #2120]  INFO -- default-win2012r2: Attempt: 1\r\nI, [2017-11-16T13:52:51.346138 #2120]  INFO -- default-win2012r2: checking dummy_user has SeServiceLogonRight\r\nI, [2017-11-16T13:52:51.348391 #2120]  INFO -- default-win2012r2: before LsaFreeMemory\r\nE, [2017-11-16T13:52:51.411780 #2120] ERROR -- default-win2012r2: Converge failed on instance <default-win2012r2>.\r\nE, [2017-11-16T13:52:51.411870 #2120] ERROR -- default-win2012r2: ------Exception-------\r\nE, [2017-11-16T13:52:51.411886 #2120] ERROR -- default-win2012r2: Class: Kitchen::ActionFailed\r\nE, [2017-11-16T13:52:51.411896 #2120] ERROR -- default-win2012r2: Message: WinRM exited (-1073740940) for command: [$env:http_proxy = \"http://my.proxy.com\"\r\n$env:HTTP_PROXY = \"http://my.proxy.com\"\r\n$env:https_proxy = \"http://my.proxy.com\"\r\n$env:HTTPS_PROXY = \"http://my.proxy.com\"\r\n$env:TEST_KITCHEN = \"1\"\r\n$env:PATH = try {\r\n[System.Environment]::GetEnvironmentVariable('PATH','Machine')\r\n} catch { $env:PATH }\r\n\r\n& $env:systemdrive\\opscode\\chef\\bin\\chef-client.bat --local-mode --config $env:TEMP\\kitchen\\client.rb --log_level auto --force-formatter --no-color --json-attributes $env:TEMP\\kitchen\\dna.json --chef-zero-port 8889 ; exit $LastExitCode]\r\n```\r\n\r\n## Fail on NT AUTHORITY\\LOCALSERVICE\r\n\r\nThis failed on the 2nd call to `get_account_right`\r\n\r\n### Client Output\r\n\r\n```\r\n      Chef Omnibus installation detected (13)\r\n      Transferring files to <default-win2012r2>\r\n      Starting Chef Client, version 13.6.4\r\n      resolving cookbooks for run list: [\"test_cookbook::default\"]\r\n      Synchronizing Cookbooks:\r\n        - test_cookbook (0.1.0)\r\n      Installing Cookbook Gems:\r\n      Compiling Cookbooks...\r\n      Recipe: test_cookbook::default\r\n        * windows_user[dummy_user] action create (up to date)\r\n      Attempt: 1\r\n      Set SeServiceLogonRight on dummy_user\r\n      Set SeServiceLogonRight on NT AUTHORITY\\LOCALSERVICE\r\n      Attempt: 2\r\n      Set SeServiceLogonRight on dummy_user\r\n      Set SeServiceLogonRight on NT AUTHORITY\\LOCALSERVICE\r\n      ...\r\n      # all succeeded\r\n      ...\r\n      Attempt: 10\r\n      Set SeServiceLogonRight on dummy_user\r\n      Set SeServiceLogonRight on NT AUTHORITY\\LOCALSERVICE\r\n      Attempt: 1\r\n      checking dummy_user has SeServiceLogonRight\r\n      before LsaFreeMemory\r\n      after LsaFreeMemory\r\n      has right: true\r\n      checking NT AUTHORITY\\LOCALSERVICE has SeServiceLogonRight\r\n      before LsaFreeMemory\r\n>>>>>> ------Exception-------\r\n>>>>>> Class: Kitchen::ActionFailed\r\n>>>>>> Message: 1 actions failed.\r\n>>>>>>     Converge failed on instance <default-win2012r2>.  Please see .kitchen/logs/default-win2012r2.log for more details\r\n>>>>>> ----------------------\r\n>>>>>> Please see .kitchen/logs/kitchen.log for more details\r\n>>>>>> Also try running `kitchen diagnose --all` for configuration\r\n```\r\n\r\n### Kitchen Log\r\n\r\n```\r\nI, [2017-11-16T13:49:01.921044 #1857]  INFO -- default-win2012r2: Attempt: 9\r\nI, [2017-11-16T13:49:01.922984 #1857]  INFO -- default-win2012r2: Set SeServiceLogonRight on dummy_user\r\nI, [2017-11-16T13:49:01.924787 #1857]  INFO -- default-win2012r2: Set SeServiceLogonRight on NT AUTHORITY\\LOCALSERVICE\r\nI, [2017-11-16T13:49:01.926485 #1857]  INFO -- default-win2012r2: Attempt: 10\r\nI, [2017-11-16T13:49:01.928186 #1857]  INFO -- default-win2012r2: Set SeServiceLogonRight on dummy_user\r\nI, [2017-11-16T13:49:01.929924 #1857]  INFO -- default-win2012r2: Set SeServiceLogonRight on NT AUTHORITY\\LOCALSERVICE\r\nI, [2017-11-16T13:49:01.931661 #1857]  INFO -- default-win2012r2: Attempt: 1\r\nI, [2017-11-16T13:49:01.933590 #1857]  INFO -- default-win2012r2: checking dummy_user has SeServiceLogonRight\r\nI, [2017-11-16T13:49:01.935338 #1857]  INFO -- default-win2012r2: before LsaFreeMemory\r\nI, [2017-11-16T13:49:01.937150 #1857]  INFO -- default-win2012r2: after LsaFreeMemory\r\nI, [2017-11-16T13:49:01.939031 #1857]  INFO -- default-win2012r2: has right: true\r\nI, [2017-11-16T13:49:01.941275 #1857]  INFO -- default-win2012r2: checking NT AUTHORITY\\LOCALSERVICE has SeServiceLogonRight\r\nI, [2017-11-16T13:49:01.943280 #1857]  INFO -- default-win2012r2: before LsaFreeMemory\r\nE, [2017-11-16T13:49:02.006695 #1857] ERROR -- default-win2012r2: Converge failed on instance <default-win2012r2>.\r\nE, [2017-11-16T13:49:02.006787 #1857] ERROR -- default-win2012r2: ------Exception-------\r\nE, [2017-11-16T13:49:02.006802 #1857] ERROR -- default-win2012r2: Class: Kitchen::ActionFailed\r\nE, [2017-11-16T13:49:02.006812 #1857] ERROR -- default-win2012r2: Message: WinRM exited (-1073740940) for command: [$env:http_proxy = \"http://my.proxy.com\"\r\n$env:HTTP_PROXY = \"http://my.proxy.com\"\r\n$env:https_proxy = \"http://my.proxy.com\"\r\n$env:HTTPS_PROXY = \"http://my.proxy.com\"\r\n$env:TEST_KITCHEN = \"1\"\r\n$env:PATH = try {\r\n[System.Environment]::GetEnvironmentVariable('PATH','Machine')\r\n} catch { $env:PATH }\r\n\r\n& $env:systemdrive\\opscode\\chef\\bin\\chef-client.bat --local-mode --config $env:TEMP\\kitchen\\client.rb --log_level auto --force-formatter --no-color --json-attributes $env:TEMP\\kitchen\\dna.json --chef-zero-port 8889 ; exit $LastExitCode]\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "croffe": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6585", "title": "windows_task resource issue with 13.6.4 - undefined method `elements' for nil:NilClass", "body": "## Description\r\n\r\nwindows_task error with 13.6.4 - undefined method `elements' for nil:NilClass\r\n\r\n## Chef Version\r\n\r\n13.6.4\r\n\r\n## Platform Version\r\n\r\nWindows Server 2008 (6.0.6002)\r\n\r\n## Replication Case\r\n\r\nLeverage chef-client supermarket library to create Windows Task to manage Chef Client\r\n\r\n## Client Output\r\n\r\nRecipe: chef-client::task\r\n  * windows_service[chef-client] action configure_startup (skipped due to only_if)\r\n  * chef_client_scheduled_task[Chef Client] action add\r\n    * windows_task[chef-client] action create\r\n\r\n      ================================================================================\r\n      Error executing action `create` on resource 'windows_task[chef-client]'\r\n      ================================================================================\r\n\r\n      NoMethodError\r\n      -------------\r\n      undefined method `elements' for nil:NilClass\r\n\r\n      Resource Declaration:\r\n      ---------------------\r\n      # In C:/chef/cache/cookbooks/chef-client/resources/scheduled_task.rb\r\n\r\n       46:   windows_task 'chef-client' do\r\n       47:     run_level :highest\r\n       48:     command \"cmd /c \\\"#{client_cmd}\\\"\"\r\n       49:\r\n       50:     user               new_resource.user\r\n       51:     password           new_resource.password\r\n       52:     frequency          new_resource.frequency.to_sym\r\n       53:     frequency_modifier new_resource.frequency_modifier\r\n       54:     start_time         new_resource.start_time || start_time\r\n       55:   end\r\n       56: end\r\n\r\n      Compiled Resource:\r\n      ------------------\r\n      # Declared in C:/chef/cache/cookbooks/chef-client/resources/scheduled_task.rb:46:in `block in class_from_file'\r\n\r\n      windows_task(\"chef-client\") do\r\n        action :create\r\n        default_guard_interpreter :default\r\n        task_name \"chef-client\"\r\n        declared_type :windows_task\r\n        cookbook_name \"chef-client\"\r\n        run_level :highest\r\n        command \"cmd /c \\\"C:/opscode/chef/bin/chef-client -L C:/chef/log/client.log -c C:/chef/client.rb -s 300\\\"\"\r\n        user \"SYSTEM\"\r\n        password nil\r\n        frequency :minute\r\n        frequency_modifier 60\r\n        start_time \"09:04\"\r\n        execution_time_limit \"PT72H\"\r\n      end\r\n\r\n      System Info:\r\n      ------------\r\n      chef_version=13.6.4\r\n      platform=windows\r\n      platform_version=6.0.6002\r\n      ruby=ruby 2.4.2p198 (2017-09-14 revision 59899) [x64-mingw32]\r\n      program_name=C:/opscode/chef/bin/chef-client\r\n      executable=C:/opscode/chef/bin/chef-client\r\n\r\n\r\n    ================================================================================\r\n    Error executing action `add` on resource 'chef_client_scheduled_task[Chef Client]'\r\n    ================================================================================\r\n\r\n    NoMethodError\r\n    -------------\r\n    windows_task[chef-client] (C:/chef/cache/cookbooks/chef-client/resources/sch\r\neduled_task.rb line 46) had an error: NoMethodError: undefined method `elements'\r\n for nil:NilClass\r\n\r\n    Resource Declaration:\r\n    ---------------------\r\n    # In C:/chef/cache/cookbooks/chef-client/recipes/task.rb\r\n\r\n     37: chef_client_scheduled_task 'Chef Client' do\r\n     38:   user node['chef_client']['task']['user']\r\n     39:   password node['chef_client']['task']['password']\r\n     40:   frequency node['chef_client']['task']['frequency']\r\n     41:   frequency_modifier lazy { node['chef_client']['task']['frequency_modifier'] }\r\n     42:   start_time node['chef_client']['task']['start_time']\r\n     43:   splay node['chef_client']['splay']\r\n     44:   config_directory node['chef_client']['conf_dir']\r\n     45:   log_directory node['chef_client']['log_dir']\r\n     46:   chef_binary_path node['chef_client']['bin']\r\n     47:   daemon_options node['chef_client']['daemon_options']\r\n     48: end\r\n\r\n    Compiled Resource:\r\n    ------------------\r\n    # Declared in C:/chef/cache/cookbooks/chef-client/recipes/task.rb:37:in `fro\r\nm_file'\r\n\r\n    chef_client_scheduled_task(\"Chef Client\") do\r\n      action [:add]\r\n      default_guard_interpreter :default\r\n      declared_type :chef_client_scheduled_task\r\n      cookbook_name \"chef-client\"\r\n      recipe_name \"task\"\r\n      user \"SYSTEM\"\r\n      password nil\r\n      frequency \"minute\"\r\n      frequency_modifier 60\r\n      start_time nil\r\n      splay \"300\"\r\n      config_directory \"C:/chef\"\r\n      log_directory \"C:/chef/log\"\r\n      chef_binary_path \"C:/opscode/chef/bin/chef-client\"\r\n      daemon_options []\r\n    end\r\n\r\n    System Info:\r\n    ------------\r\n    chef_version=13.6.4\r\n    platform=windows\r\n    platform_version=6.0.6002\r\n    ruby=ruby 2.4.2p198 (2017-09-14 revision 59899) [x64-mingw32]\r\n    program_name=C:/opscode/chef/bin/chef-client\r\n    executable=C:/opscode/chef/bin/chef-client\r\n\r\n\r\nRunning handlers:\r\n[2017-11-15T08:04:02-07:00] ERROR: Running exception handlers\r\nRunning handlers complete\r\n[2017-11-15T08:04:02-07:00] ERROR: Exception handlers complete\r\nChef Client failed. 0 resources updated in 20 seconds\r\n[2017-11-15T08:04:03-07:00] FATAL: Stacktrace dumped to C:/chef/cache/chef-stack\r\ntrace.out\r\n[2017-11-15T08:04:03-07:00] FATAL: Please provide the contents of the stacktrace\r\n.out file if you file a bug report\r\n[2017-11-15T08:04:03-07:00] FATAL: NoMethodError: chef_client_scheduled_task[Che\r\nf Client] (chef-client::task line 37) had an error: NoMethodError: windows_task[\r\nchef-client] (C:/chef/cache/cookbooks/chef-client/resources/scheduled_task.rb li\r\nne 46) had an error: NoMethodError: undefined method `elements' for nil:NilClass\r\n\r\n## Stacktrace\r\n\r\nGenerated at 2017-11-15 08:04:03 -0700\r\nNoMethodError: chef_client_scheduled_task[Chef Client] (chef-client::task line 37) had an error: NoMethodError: windows_task[chef-client] (C:/chef/cache/cookbooks/chef-client/resources/scheduled_task.rb line 46) had an error: NoMethodError: undefined method `elements' for nil:NilClass\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/provider/windows_task.rb:392:in `load_task_xml'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/provider/windows_task.rb:373:in `load_task_hash'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/provider/windows_task.rb:37:in `load_current_resource'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/provider.rb:154:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource.rb:591:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/runner.rb:70:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/runner.rb:98:in `block (2 levels) in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/runner.rb:98:in `each'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/runner.rb:98:in `block in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource_collection/resource_list.rb:94:in `block in execute_each_resource'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:114:in `call_iterator_block'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:103:in `iterate'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource_collection/resource_list.rb:92:in `execute_each_resource'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/runner.rb:97:in `converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/provider.rb:212:in `compile_and_converge_action'\r\n(eval):2:in `action_add'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/provider.rb:171:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource.rb:591:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/runner.rb:70:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/runner.rb:98:in `block (2 levels) in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/runner.rb:98:in `each'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/runner.rb:98:in `block in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource_collection/resource_list.rb:94:in `block in execute_each_resource'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:114:in `call_iterator_block'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:103:in `iterate'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource_collection/resource_list.rb:92:in `execute_each_resource'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/runner.rb:97:in `converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/client.rb:718:in `block in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/client.rb:713:in `catch'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/client.rb:713:in `converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/client.rb:752:in `converge_and_save'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/client.rb:286:in `run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/application.rb:273:in `run_with_graceful_exit_option'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/application.rb:249:in `block in run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/local_mode.rb:44:in `with_server_connectivity'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/application.rb:232:in `run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/application/client.rb:469:in `sleep_then_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/application/client.rb:458:in `block in interval_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/application/client.rb:457:in `loop'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/application/client.rb:457:in `interval_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/application/client.rb:441:in `run_application'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/application.rb:59:in `run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/bin/chef-client:26:in `<top (required)>'\r\nC:/opscode/chef/bin/chef-client:58:in `load'\r\nC:/opscode/chef/bin/chef-client:58:in `<main>'\r\n\r\n>>>> Caused by NoMethodError: undefined method `elements' for nil:NilClass\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/provider/windows_task.rb:392:in `load_task_xml'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/provider/windows_task.rb:373:in `load_task_hash'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/provider/windows_task.rb:37:in `load_current_resource'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/provider.rb:154:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource.rb:591:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/runner.rb:70:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/runner.rb:98:in `block (2 levels) in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/runner.rb:98:in `each'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/runner.rb:98:in `block in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource_collection/resource_list.rb:94:in `block in execute_each_resource'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:114:in `call_iterator_block'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:103:in `iterate'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource_collection/resource_list.rb:92:in `execute_each_resource'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/runner.rb:97:in `converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/provider.rb:212:in `compile_and_converge_action'\r\n(eval):2:in `action_add'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/provider.rb:171:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource.rb:591:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/runner.rb:70:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/runner.rb:98:in `block (2 levels) in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/runner.rb:98:in `each'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/runner.rb:98:in `block in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource_collection/resource_list.rb:94:in `block in execute_each_resource'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:114:in `call_iterator_block'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:103:in `iterate'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/resource_collection/resource_list.rb:92:in `execute_each_resource'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/runner.rb:97:in `converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/client.rb:718:in `block in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/client.rb:713:in `catch'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/client.rb:713:in `converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/client.rb:752:in `converge_and_save'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/client.rb:286:in `run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/application.rb:273:in `run_with_graceful_exit_option'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/application.rb:249:in `block in run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/local_mode.rb:44:in `with_server_connectivity'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/application.rb:232:in `run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/application/client.rb:469:in `sleep_then_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/application/client.rb:458:in `block in interval_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/application/client.rb:457:in `loop'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/application/client.rb:457:in `interval_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/application/client.rb:441:in `run_application'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/lib/chef/application.rb:59:in `run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.6.4-universal-mingw32/bin/chef-client:26:in `<top (required)>'\r\nC:/opscode/chef/bin/chef-client:58:in `load'\r\nC:/opscode/chef/bin/chef-client:58:in `<main>'\r\n\r\n### NOTE: CHEF CLIENT BUGS ONLY\r\n\r\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\r\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\r\n\r\n* Requests for new or alternative functionality should be made to [feedback.chef.io](https://feedback.chef.io/forums/301644-chef-product-feedback/category/110832-chef-client)\r\n* [Chef Server issues](https://github.com/chef/chef-server/issues/new)\r\n* [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\r\n* Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sarkis": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6581", "title": "knife ssh exits on error even when `--exit-on-error` is not passed", "body": "## Description\r\n\r\nWhen using `knife ssh` to run a ssh_command on multiple nodes and --exit-on-error is NOT passed, knife ssh will still fail out upon encountering non-zero exit status.\r\n\r\n## Chef Version\r\n\r\n13.6.4\r\n\r\n## Platform Version\r\n\r\nUbuntu 14.04\r\n\r\n## Replication Case\r\nRun any command that returns a 0 exit status on a set of nodes.  \r\n  \r\nRun any command that returns a non-zero exit status on the same set of nodes.  \r\n  \r\nThis returns a different number of output. It seems that --exit-on-error behavior is being used here, even though it is disabled.\r\n\r\nexample:\r\n```\r\n$ knife ssh \"name:*.jade\" \"uname -a\" | wc -l\r\n17\r\n\r\n$ knife ssh \"name:*.jade\" \"uname -a && false\" | wc -l\r\n2\r\n```", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6582", "title": "use a stricter comparison so knife ssh only fails if --exit-on-error", "body": "### Description\r\n\r\nThis is required due to config[:on_error] being set here: https://github.com/chef/chef/blob/93fe1aca2beff64b30910daa2aac615bc623d259/lib/chef/knife/ssh.rb#L134. This conditional will allow ssh_commands that return non-zero status to be executed on entire pool of servers returned by the knife query when --exit-on-error is NOT specified. \r\n\r\n\r\n### Issues Resolved\r\n\r\nhttps://github.com/chef/chef/issues/6581\r\n\r\n### Check List\r\n\r\n- [x] New functionality includes tests\r\n- [x] All tests pass\r\n- [x] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [X] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "majormoses": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6564", "title": "apt_repository issue with resource_name contains a `/`", "body": "## Description\r\n\r\nWhen adding a `apt_repo` it attempts to place a file in  `/etc/apt/sources.list.d` but it does not exist so it fails out. Looking at the [code](https://github.com/chef/chef/blob/v13.6.3/lib/chef/provider/apt_repository.rb#L74-L83) I see nothing sorounding it to ensure the directory exists.\r\n\r\n## Chef Version\r\n12.21.20\r\n\r\n## Platform Version\r\n\r\nUbuntu 16.04 LTS\r\n\r\n## Replication Case\r\n\r\nTry adding a simple ppa like this:\r\n```\r\napt_repository 'ondrej/php' do\r\n  action :add\r\n  components ['main']\r\n  distribution node['lsb']['codename']\r\n  uri 'ppa:ondrej/php'\r\nend\r\n```\r\n\r\n## Client Output\r\n\r\n```\r\n    ================================================================================\r\n    Error executing action `add` on resource 'apt_repository[ondrej/php]'\r\n    ================================================================================\r\n    \r\n    Chef::Exceptions::EnclosingDirectoryDoesNotExist\r\n    ------------------------------------------------\r\n    file[/etc/apt/sources.list.d/ondrej/php.list] (/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.21.20/lib/chef/provider/apt_repository.rb line 82) had an error: Chef::Exceptions::EnclosingDirectoryDoesNotExist: Parent directory /etc/apt/sources.list.d/ondrej does not exist.\r\n    \r\n    Resource Declaration:\r\n    ---------------------\r\n    # In /opt/kitchen/cache/cookbooks/fa_php/recipes/_dependencies.rb\r\n    \r\n     23: apt_repository 'ondrej/php' do\r\n     24:   action :add\r\n     25:   components ['main']\r\n     26:   distribution node['lsb']['codename']\r\n     27:   # this ppa maintainer does not sign with PGP...\r\n     28:   # key = some_key_or_url_with_key\r\n     29:   uri 'ppa:ondrej/php'\r\n     30: end\r\n     31: \r\n     32: # node['fa']['php']['non_std_packages'].each do |pkg, metadata|\r\n     33: #   p \"non_std_packages: #{pkg}, #{metadata['version']}\"\r\n     34: #   package pkg do\r\n     35: #     if node['fa']['php']['packages'][pkg]['action'] && node['fa']['php']['packages'][pkg]['action'] == 'delete'\r\n     36: #       action :delete\r\n     37: #     else\r\n     38: #       action :install\r\n     39: #     end\r\n     40: #     version metadata['version']\r\n     41: #   end\r\n     42: # end\r\n    \r\n    Compiled Resource:\r\n    ------------------\r\n    # Declared in /opt/kitchen/cache/cookbooks/fa_php/recipes/_dependencies.rb:23:in `from_file'\r\n    \r\n    apt_repository(\"ondrej/php\") do\r\n      action [:add]\r\n      updated true\r\n      updated_by_last_action true\r\n      retries 0\r\n      retry_delay 2\r\n      default_guard_interpreter :default\r\n      declared_type :apt_repository\r\n      cookbook_name \"fa_php\"\r\n      recipe_name \"_dependencies\"\r\n      components [\"main\"]\r\n      distribution \"xenial\"\r\n      uri \"ppa:ondrej/php\"\r\n      repo_name \"ondrej/php\"\r\n      keyserver \"keyserver.ubuntu.com\"\r\n    end\r\n    \r\n    System Info:\r\n    ------------\r\n    chef_version=12.21.20\r\n    platform=ubuntu\r\n    platform_version=16.04\r\n    ruby=ruby 2.3.5p376 (2017-09-14 revision 59905) [x86_64-linux]\r\n    program_name=chef-client worker: ppid=12325;start=21:23:29;\r\n    executable=/opt/chef/embedded/bin/chef-client\r\n```\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thechefcookbookie": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6561", "title": "knife bootstrap with an option should avoid duplicate nodes with same IP", "body": "## Description\r\n\r\nThis is an enhancement request.\r\n\r\nIn our environment, currently we are facing the issue of duplicate nodes on the Chef server with them being bootstrapped multiple times with a different name and accidentally overlooking the need to delete the existing node and client objects. This problem is calling for a periodical audit of the duplicate nodes and their subsequent cleanup for an efficient node license management. As this problem would affect the node license management and as we don't have the necessity of having multiple nodes with the same IP on the Chef server, I am looking for an option in the \"Knife bootstrap\" command which while added to it would prevent the bootstrapping of the same server (IP) with a different name if a node with the same IP already exists on the Chef server.\r\n\r\nFor example: precisely, a command like:\r\n\r\nknife bootstrap <IP> -N <node_name> -x <user> -P <password> **-U**\r\n\r\nshould fail if a node already exists with the same \"IP\" on the Chef server and should throw an error \"A node already exists with the given IP\".\r\n\r\nHaving an additional option wouldn't hurt the functionality of the \"knife bootstrap\" command and would allow it to use those who are in need to avoid the duplicate nodes on Chef server.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jblaine": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6553", "title": "knife node show quirk re: non-existent attributes", "body": "## Description\r\n\r\nPessimistically assuming this might end up filed under \"Likely to never get changed\" as most of my previous \"fit and finish\" issues have :) `knife node show` shows empty output for some node attributes that don't even exist, but throws an error on others that also don't even exist.\r\n\r\n## Chef Version\r\n\r\n12.17.44\r\n\r\n## Platform Version\r\n\r\nN/A but RHEL 7.4\r\n\r\n## Replication Case\r\n\r\nBelow, neither `os.sdfjkhdsafkadksfkdsa` or `sdfjkhdsafkadksfkdsa` exist on the node object.\r\n```\r\n[@gazoo:~/rcf-chef] master+ \u00b1 knife node show ourhost -a os.sdfjkhdsafkadksfkdsa\r\nERROR: knife encountered an unexpected error\r\nThis may be a bug in the 'node show' knife command or plugin\r\nPlease collect the output of this command with the `-VV` option before filing a bug report.\r\nException: NoMethodError: undefined method `key?' for \"linux\":String\r\n[@gazoo:~/rcf-chef] master+ 100 \u00b1\r\n\r\n[@gazoo:~/rcf-chef] master+ \u00b1 knife node show ourhost -a sdfjkhdsafkadksfkdsa\r\nourhost:\r\n  sdfjkhdsafkadksfkdsa:\r\n[@gazoo:~/rcf-chef] master+ \u00b1\r\n```", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/4733", "title": "knife ssh should not ask for password if the search was invalid", "body": "## Description\n\nknife ssh (when using --ssh-password for interactive password asking) should not ask for the password until the specified search query has returned w/o error.\n## Chef Version\n\n12.6\n## Platform Version\n\nN/A\n## Replication Case\n\nknife ssh 'some invalid search' 'echo' --ssh-user root --ssh-password\nEnter your password:\nERROR: The data in your request was invalid\nResponse: invalid search query: ...\n## Client Output\n\nN/A\n## Stacktrace\n\nN/A\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4733/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/3778", "title": "Don't spit out newlines when nothing to puts()!", "body": "Fixes #3777 \n\nThe end of knife spurious newlines in output when nothing\nneeds to be displayed.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "akuzminsky": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6551", "title": "knife upload should exit with non-zero if error", "body": "# Description\r\n\r\nIf `knife cookbook upload` fails to upload a cookbook it should exit with non-zero.\r\nCurrent version exits with zero which is misleading if used in a travis -ci job.\r\n\r\n\r\n# ChefDK Version\r\n\r\n13.4.19\r\n\r\n# Platform Version\r\n\r\nUbuntu\r\n\r\n# Stacktrace\r\n\r\nA log from a \"successful\" job https://travis-ci.com/twindb/chef-repo/builds/57256001\r\n\r\n```\r\n$ knife cookbook upload --include-dependencies --force jumphost\r\n\r\nERROR: Could not find cookbook jumphost in your cookbook path, skipping it\r\n\r\nWARN: Failed to read the private key /home/travis/build/twindb/chef-repo/.chef/mkryva.pem: #<Errno::ENOENT: No such file or directory @ rb_sysopen - /home/travis/build/twindb/chef-repo/.chef/mkryva.pem>\r\n\r\nERROR: Your private key could not be loaded from /home/travis/build/twindb/chef-repo/.chef/mkryva.pem\r\n\r\nCheck your configuration file and ensure that your private key is readable\r\n\r\nafter_success.2\r\n\r\n0.60s$ knife cookbook upload --include-dependencies --force website_database\r\n\r\nERROR: Could not find cookbook website_database in your cookbook path, skipping it\r\n\r\nWARN: Failed to read the private key /home/travis/build/twindb/chef-repo/.chef/mkryva.pem: #<Errno::ENOENT: No such file or directory @ rb_sysopen - /home/travis/build/twindb/chef-repo/.chef/mkryva.pem>\r\n\r\nERROR: Your private key could not be loaded from /home/travis/build/twindb/chef-repo/.chef/mkryva.pem\r\n\r\nCheck your configuration file and ensure that your private key is readable\r\n\r\nafter_success.3\r\n\r\n0.61s$ knife cookbook upload --include-dependencies --force web_app\r\n\r\nERROR: Could not find cookbook web_app in your cookbook path, skipping it\r\n\r\nWARN: Failed to read the private key /home/travis/build/twindb/chef-repo/.chef/mkryva.pem: #<Errno::ENOENT: No such file or directory @ rb_sysopen - /home/travis/build/twindb/chef-repo/.chef/mkryva.pem>\r\n\r\nERROR: Your private key could not be loaded from /home/travis/build/twindb/chef-repo/.chef/mkryva.pem\r\n\r\nCheck your configuration file and ensure that your private key is readable\r\n\r\n```", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6551/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "k-brooks": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6545", "title": "Windows 2012r2 env / windows_path not propagated", "body": "## Description\r\n\r\nI've noticed two issues relevant to windows environment variables\r\n\r\n1. When setting environment variables using the env resource, they are not propagated beyond the registry. This means that they are unavailable to subsequent processes.\r\n2. Environment variables are expanded upon inclusion in the path variable. This means their values are now static.\r\n\r\n## Chef Version\r\n\r\nClient versions 13.4.24-1, 13.6.0-1\r\nServer version 12.16.14-1\r\n\r\n## Platform Version\r\n\r\nWindows Server 2012r2\r\n\r\n## Replication Case\r\n\r\n1. Create a recipe which contains and env resource and a windows_path resource. The windows_path resource should reference the prior env resource name in variable form, for example\r\n\r\n`env 'ANT_HOME' do\r\n  value 'c:\\\\ant'\r\nend\r\n\r\nenv 'ANT_OPTS' do\r\n  value '-Xms256m -Xmx2048m'\r\nend\r\n\r\nwindows_path \"%ANT_HOME%\\\\bin\" do\r\n  action :add\r\nend`\r\n\r\n2. Converge\r\n3. Open a command window, display all environment variables (set command) - note the missing ANT_HOME, ANT_OPTS, and PATH additions\r\n4. Open the Environment Variables dialog - note the ANT_HOME, ANT_OPTS, and PATH values, including the expanded ANT_HOME value ***PRESSING OK will propagate***\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "coderanger": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6534", "title": "PSCredential object doesn't define ==", "body": "Cross-posting from https://github.com/chefspec/chefspec/issues/695, it would be good if the `PSCredential` object had some basic operators for unit testing.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6534/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/6304", "title": "Chef::Log.deprecation mutates the input string", "body": "https://github.com/chef/chef/blob/master/lib/chef/log.rb#L56\r\n\r\nWe should fix that, it's causing errors in some ChefDK commands with frozen string literals.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/6115", "title": "Chef 14: Kill vendor branching in cookbook site install", "body": "Or just kill `knife cookbook site` in general, but at a minimum we should get rid of the the vendor branching entirely.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/6054", "title": "Tracking ticket for nillable cleanup", "body": "With `nillable:true` now being the law of the land we should do some cleanup. Remove it from all core resources (which I think is just `apt_repository`) and fix up the tests.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6054/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/5842", "title": "ChefConfig should expand relative paths", "body": "For stuff like `cookbook_path` and `chef_repo_path` it would be nice if they expanded relative paths to the current directory. This might be confusing in some cases though so I'm not sure of the best semantics. If the options in a file, I would expect it to be relative to the file, but if passed on the command line (via `--config-option chef_repo_path=.` or `--config-option cookbook_path=cookbooks/`) I would expect it to be relative to the cwd. Thoughts?", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/5820", "title": "Use a real KDF for data bag encryption secrets", "body": "Currently we use a single round of SHA256 for deriving the actual AES key. This is okay, but it would be better to use a real-er key derivation function some day like PBKDF2 or if we want to be really fancy, Argon2. This would require a new encryptor version most likely so it will probably take a while to get this in.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/5440", "title": "Solaris package remove with a source can be broken", "body": "The current `Chef::Provider::Package::Solaris` (i.e. not IPS) has some funky code so that when you use a `source` property, [it automatically fetches the version of the package from the source](https://github.com/chef/chef/blob/6f2315803b046d07eaef641cb2c427327c32e265/lib/chef/provider/package/solaris.rb#L59). This is correct for install and upgrade actions, but when removing, generally you want to remove the version on the system (if any), not the version in the source. Basically unless I'm mistaken, that block of code linked above needs `if @new_resource.source && (action == :install || action == :upgrade)` I think.\n\n/cc @chef/client-solaris \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/5169", "title": "Backport Poise's shell_out helper?", "body": "Opening this for discussion as to if this belongs in Chef or Mixlib-ShellOut.\n\nIn Poise I wrote a helper (https://github.com/poise/poise/blob/master/lib/poise/utils/shell_out.rb) for Chef's `shell_out[!]` which makes sure to populate the `$HOME`, `$USER` and `$LOGNAME` environment variables, as well as on Unix setting the group if a user if given (and a group isn't). All of these are overwhelmingly the expected behavior for `execute` and its subclasses, and I would say should be the standard behavior for Mixlib-ShellOut in general but that might be a bridge too far. What say we all?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/4885", "title": "Default bootstrap template doesn't work under CSH", "body": "This manifests as:\n\n```\nUnmatched '.\nTMPDIR: Undefined variable.\ntmp=/tmp: Command not found.\nelse: endif not found.\n```\n\nThough the specific message might change over time. The root of the issue seems to be that CSH and it's kin don't grok multi-line string literals. Maybe we should tweak the bootstrap code to bypass the user's shell and always use `/bin/sh` directly?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/4793", "title": "Discussion: Verification command output", "body": "Filing this as a ticket because I don't see a straightforward implementation. Right now when we run a verification command and it fails all the user sees is something like this:\n\n``````\n   Error executing action `create` on resource 'monit_check[nginx]'\n    ================================================================================\n\n    Chef::Exceptions::ValidationFailed\n    ----------------------------------\n    file[/etc/monit/conf.d/nginx.conf] (/var/chef/cache/cookbooks/poise-monit/files/halite_gem/poise_monit/resources/monit_config.rb line 90) had an error: Chef::Exceptions::ValidationFailed: Proposed content for /etc/monit/conf.d/nginx.conf failed verification #<Chef::Resource::File::Verification:0x00000003dc3ae0>\n\n    Cookbook Trace:\n    ---------------\n    /var/chef/cache/cookbooks/poise/files/halite_gem/poise/helpers/notifying_block.rb:69:in `notifying_block'\n    /var/chef/cache/cookbooks/poise-monit/files/halite_gem/poise_monit/resources/monit_config.rb:72:in `action_create'```\n``````\n\nNotably we don't show the actual verification command if there was one (easy to fix, I can handle that) and we don't show the command output. Most tools with a syntax check option (`nginx -t`, `monit -t`) will print some debugging message indicating what the error is, which would be valuable to bubble up the chain. This is difficult though, because we are re-using the resource guard system and that doesn't expose command output as part of its API. A possible work-around is that good cookbooks shouldn't use the command form of `verify` and should instead use a block with `shell_out!` more directly, and raise the exception themselves. That's a bit weird though. What say we all.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4793/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/4754", "title": "Exit on run lock", "body": "Jotting this down for external memory after a report on IRC. Would be cool if we had an option (or just the default for non-interval runs) to exit if a run lock is detected rather than waiting on it. Helps when running from Cron or some other external orchestration tool to prevent runs from stacking up if something is wedged.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/4672", "title": "Should we keep the 12.5 action syntax as is?", "body": "Opening this here, though maybe this would need to be an RFC. The 12.5 action syntax is cool, easy to teach, really convenient, and full of pitfalls you could drive a bus through. I think we should consider it an evolutionary dead end and try to come up with something more workable over the long term. The root of the problem is that inside the scope for actions we are cramming the provider methods, the resource methods (including resource properties), and the full recipe DSL. I think we need to find a way to disentangle these, but we should probably discuss this a bunch before doing anything. What say you all?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/4669", "title": "resources() inside provider gets wrong resource collection", "body": "When calling `resources('type[name]') inside 12.5-style fused resources you end up calling it on the`new_resource` object via the automatic scope manipulation, which means it is querying the run context the resource was defined in, not the context created inside the action.\n\n``` ruby\naction :run do\n  ruby_block 'test' do\n    block { }\n  end\n\n  run_context.resource_collection.resources('ruby_block[test]') # Is the above resource defined in the action.\n  resources('ruby_block[test]') # Raises an exception because it is looking at the outer context.\nend\n```\n\n/cc @jkeiser @lamont-granquist \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4669/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/chef/chef/commits/3b97e4a703356394a799677723a27432103ee611", "message": "Slight improvements to validation failures. Shows the failing command if possible and doesn't show anything for sensitive resources to be safe.\n\nRefs https://github.com/chef/chef/issues/4793 and ping @chef/client-core for review."}], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6467", "title": "Deprecate vendor branches with `knife cookbook site install`", "body": "So we can kill it for Chef 14. This adds a CLI option to not vendor and warns if you don't use it. I think I did the option correctly but I should probably make some kind of test for this.\r\n\r\n\ud83d\udca3 \ud83d\udca5 ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/pulls/4824", "title": "Add a warning about using --interval on Windows.", "body": "I think I got the if logic right, but a spot check would be good. Basically `--interval` on Windows works but is a really bad idea for all the reasons we hard-blocked non-forking interval runs on other platforms. We probably shouldn't actually break it on Windows, but from talking to Matt it sounds like nobody should be doing this so let's give them warning now and remove it in Chef 13 or something.\n\n/cc @chef/client-windows for review.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/621120", "body": "<3 this patch.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/621120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6832364", "body": "This might be clearer as `if chef_version_string.count(\".\") >= 3` and faster.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6832364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Seb-Solon": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6524", "title": "apt_repository resource generates bad source list files", "body": "## Description\r\n\r\napt_repository resource will generate source list file as the following : \r\n\r\n```\r\ndeb      'uri' distribution components\r\n```\r\n\r\nThe quotes around the uri are not necessary, apt will ignore them but not apt-file (binary use to search for file in packages). \r\nApt-file will log an error : `W: Don't know how to handle \"http`\r\n\r\nSee example of valid source lists : https://wiki.debian.org/SourcesList\r\nSee manpage of sources.list : https://manpages.debian.org/jessie/apt/sources.list.5.en.html\r\n\r\nFrom what I have read, spaces (if this is the reason of such quotes) should be escaped with %20 or something like that\r\n\r\n## Chef Version\r\n\r\nMaster : https://github.com/chef/chef/blob/master/lib/chef/provider/apt_repository.rb#L233\r\n\r\n## Platform Version\r\nUbuntu / Debian as it is apt specific\r\n\r\n## Replication Case\r\n\r\nCreate a simple cookbook doing an apt_repository. The example in the doc is good enough : https://docs.chef.io/resource_apt_repository.html\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "b-dean": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6519", "title": "Hashes with symbol keys pushed to an array in node attributes do not allow string key access", "body": "## Description\r\n\r\nWhen I push a hash that has symbol keys to an array that is in node attributes, I can no longer access them with string keys later. This previously worked in Chef 12 and 13.\r\n\r\n## Chef Version\r\n\r\n* Chef 12 versions `>= 12.21.10`\r\n* Chef 13 versions `>= 13.4.19`\r\n\r\nI believe this was introduced by the changes in #6355 #6356 #6357 #6358\r\n\r\n## Platform Version\r\n\r\nCentOS 7.4.1708\r\n\r\n## Replication Case\r\n\r\nCreate `example.rb`\r\n```ruby\r\nnode.normal['a'] = []\r\nnode.normal['a'].push({b: 1})\r\nputs Chef::VERSION\r\nputs \"normal json: #{node.normal.to_json}\",\r\n     \"a: #{node['a']}\",\r\n     \"a class: #{node['a'].class}\", \r\n     \"a normal class: #{node.normal['a'].class}\",\r\n     \"index 0: #{node['a'][0]}\", \r\n     \"index 0 class: #{node['a'][0].class}\", \r\n     \"index 0 normal class: #{node.normal['a'][0].class}\",\r\n     \"b: #{node['a'][0]['b']}\", \r\n     \"b class: #{node['a'][0]['b'].class}\",\r\n     '*'*80\r\n```\r\n\r\nand run it with docker containers (seemed like an easy way to have a bunch of chef versions):\r\n```\r\ndocker create --name chef-12.21.4 chef/chef:12.21.4\r\ndocker create --name chef-12.21.10 chef/chef:12.21.10\r\ndocker create --name chef-13.3.42 chef/chef:13.3.42\r\ndocker create --name chef-13.4.19 chef/chef:13.4.19\r\necho '--------------------------'\r\ndocker run --rm --volumes-from chef-12.21.4 -v `pwd`/example.rb:/example.rb centos  /opt/chef/bin/chef-apply /example.rb\r\ndocker run --rm --volumes-from chef-12.21.10 -v `pwd`/example.rb:/example.rb centos  /opt/chef/bin/chef-apply /example.rb\r\ndocker run --rm --volumes-from chef-13.3.42 -v `pwd`/example.rb:/example.rb centos  /opt/chef/bin/chef-apply /example.rb\r\ndocker run --rm --volumes-from chef-13.4.19 -v `pwd`/example.rb:/example.rb centos  /opt/chef/bin/chef-apply /example.rb\r\ndocker rm -v chef-12.21.4 chef-12.21.10 chef-13.3.42 chef-13.4.19\r\n```\r\n\r\n## Client Output\r\n\r\n```\r\n964bc889bf86a5196cd091e8b9349022caad3ecec7504d44ae38ca21743b2447\r\n97e0dd9a45529c0e6a896f17edd5b24bce46d86c568fef508a39f18d86b7cb4f\r\n8767dde5447f5a78e7afba7d03df49644a7ff5165291fe6430ab077f30aeed31\r\nba65e75600ff8c3fc475069ab961555a3a33f503b7f833223d3ba641eb889a33\r\n--------------------------\r\n[2017-10-24T15:18:56+00:00] INFO: The plugin path /etc/chef/ohai/plugins does not exist. Skipping...\r\n[2017-10-24T15:18:56+00:00] WARN: Plugin Network: unable to detect ipaddress\r\n[2017-10-24T15:18:57+00:00] INFO: Run List is []\r\n[2017-10-24T15:18:57+00:00] INFO: Run List expands to []\r\n12.21.4\r\nnormal json: {\"tags\":[],\"a\":[{\"b\":1}]}\r\na: [{\"b\"=>1}]\r\na class: Chef::Node::ImmutableArray\r\na normal class: Chef::Node::AttrArray\r\nindex 0: {\"b\"=>1}\r\nindex 0 class: Chef::Node::ImmutableMash\r\nindex 0 normal class: Hash\r\nb: 1\r\nb class: Fixnum\r\n********************************************************************************\r\n[2017-10-24T15:18:58+00:00] INFO: The plugin path /etc/chef/ohai/plugins does not exist. Skipping...\r\n[2017-10-24T15:18:58+00:00] WARN: Plugin Network: unable to detect ipaddress\r\n[2017-10-24T15:18:59+00:00] INFO: Run List is []\r\n[2017-10-24T15:18:59+00:00] INFO: Run List expands to []\r\n12.21.10\r\nnormal json: {\"tags\":[],\"a\":[{\"b\":1}]}\r\na: [{:b=>1}]\r\na class: Chef::Node::ImmutableArray\r\na normal class: Chef::Node::AttrArray\r\nindex 0: {:b=>1}\r\nindex 0 class: Chef::Node::ImmutableMash\r\nindex 0 normal class: Hash\r\nb: \r\nb class: NilClass\r\n********************************************************************************\r\n[2017-10-24T15:19:00+00:00] WARN: Plugin Network: unable to detect ipaddress\r\n13.3.42\r\nnormal json: {\"tags\":[],\"a\":[{\"b\":1}]}\r\na: [{\"b\"=>1}]\r\na class: Chef::Node::ImmutableArray\r\na normal class: Chef::Node::AttrArray\r\nindex 0: {\"b\"=>1}\r\nindex 0 class: Chef::Node::ImmutableMash\r\nindex 0 normal class: Hash\r\nb: 1\r\nb class: Integer\r\n********************************************************************************\r\n[2017-10-24T15:19:02+00:00] WARN: Plugin Network: unable to detect ipaddress\r\n13.4.19\r\nnormal json: {\"tags\":[],\"a\":[{\"b\":1}]}\r\na: [{:b=>1}]\r\na class: Chef::Node::ImmutableArray\r\na normal class: Chef::Node::AttrArray\r\nindex 0: {:b=>1}\r\nindex 0 class: Chef::Node::ImmutableMash\r\nindex 0 normal class: Hash\r\nb: \r\nb class: NilClass\r\n********************************************************************************\r\nchef-12.21.4\r\nchef-12.21.10\r\nchef-13.3.42\r\nchef-13.4.19\r\n```", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "atheiman": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6505", "title": "Allow more complex property validation for custom resources", "body": "I want to be able to validate properties of custom resources using [the `callbacks` validator as described in the docs](https://docs.chef.io/custom_resources.html#validators) with more complexity:\r\n\r\n- Validate based on the value of another property\r\n- Validate based on the action of the resource\r\n\r\nI quickly looked through [the validator code](/lib/chef/mixin/params_validate.rb) and I think there are two possible approaches to this:\r\n\r\n1. Allow the `callback` lambdas to also receive the `resource` object with access to other properties and the action:\r\n\r\n  ```ruby\r\n  property :a, String\r\n  property :b, String, callbacks: {\r\n    'required if property `a` is unset' => lambda { |property, resource|\r\n      if resource.properties.a.nil?\r\n        # if property is nil, return false which raises validation error\r\n        !property.nil?\r\n      end\r\n    },\r\n    'required for `:configure` action' => lambda { |property, resource|\r\n      if resource.action == :configure\r\n        # if property is nil, return false which raises validation error\r\n        !property.nil? \r\n      else\r\n        true\r\n      end\r\n    }\r\n  }\r\n  ```\r\n\r\n2. Allow the `callback` lambdas to also receive the action, and introduce a `required_with` validator that requires at least one of the properties to be set:\r\n\r\n  ```ruby\r\n  property :a, String, required_with: [:b]\r\n  property :b, String, required_with: [:a], callbacks: {\r\n    'required for `:configure` action' => lambda { |property, action|\r\n      if action == :configure\r\n        # if property is nil, return false which raises validation error\r\n        !property.nil? \r\n      else\r\n        true\r\n      end\r\n    }\r\n  }\r\n  ```\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Rarian": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6493", "title": "Package locking is not idempotent", "body": "## Description\r\n\r\nDue to the way the `package_locked` method has been written, it will always return false as it is comparing a string to an array:\r\n* https://github.com/chef/chef/blob/master/lib/chef/provider/package/yum.rb#L107\r\n* https://github.com/chef/chef/blob/master/lib/chef/provider/package/zypper.rb#L83\r\n* https://github.com/chef/chef/blob/master/lib/chef/provider/package/apt.rb#L78\r\n\r\n## Chef Version\r\n\r\n13.4.19\r\n\r\n## Platform Version\r\n\r\nUbuntu 16.04\r\n\r\n## Replication Case\r\n\r\n```\r\npackage 'magic' do\r\n  action %i[lock]\r\nend\r\n```\r\n```\r\npackage %w[magic bowtie] do\r\n  action %i[lock]\r\nend\r\n```\r\n\r\n## Client Output\r\n\r\n* The continual updating of each package resource that is being locked. \r\n* Locked packages will never be unlocked.\r\n\r\n## Stacktrace\r\n\r\nN/A\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6493/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6494", "title": "Ensure package (un)locking is idempotent", "body": "### Description\r\n\r\nDue to the nature of the comparison done, the `package_locked` methods\r\nwill always return false as they presume the package name is a string,\r\nwhen it is in fact always coerced into an array.\r\n\r\nAdditionally in situations where the package_name is set rather than\r\nbeing inherited from the package resource's name, it will always return\r\nfalse.\r\n\r\n### Issues Resolved\r\n\r\nResolves #6361\r\nResolves #6493\r\n\r\n### Check List\r\n\r\n- [x] New functionality includes tests, tests were added for the package_name versus resource name, and idempotency of locking/unlocking inside apt; zypper and yum tests were not added.\r\n- [x] All tests pass\r\n- [x] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [x] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "e100": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6474", "title": "OpenBSD package provider fails to install packages", "body": "## Description\r\n\r\nThe package provider fails to find candidate versions to install because PKG_PATH variable is not set when calling pkg_info.\r\nAdditionally, installing packages with empty flavors always fails.\r\n\r\n## Chef Version: 13.5.3 - Chef Zero\r\n## Platform Version OpenBSD 6.1\r\n## Replication Case\r\nTry to install any empty flavor package that is currently not installed\r\n`package 'rsync--'`\r\n## Client Output\r\n\r\n`Chef::Exceptions::Package                                                                          \r\n          -------------------------                                                                          \r\n          No candidate version available for rsync--                                                         \r\n                                                                                                             \r\n          Resource Declaration:                                                                              \r\n          ---------------------                                                                              \r\n          # In /tmp/kitchen/cache/cookbooks/test/recipes/default.rb                         \r\n                                                                                                             \r\n           77: package 'rsync--'                                                                             \r\n           78: package 'iftop'                                                                               \r\n                                                                                                             \r\n          Compiled Resource:                                                                                 \r\n          ------------------                                                                                 \r\n          # Declared in /tmp/kitchen/cache/cookbooks/test/recipes/default.rb:77:in `from_file`\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6475", "title": "Fix OpenBSD package", "body": "### Description\r\n\r\nUpdated candidate_version to include PKG_PATH env var when calling pkg_info.\r\nModified regex for 'flavor' handling to allow installation of empty flavors\r\n\r\n### Issues Resolved\r\nhttps://github.com/chef/chef/issues/6474", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Annih": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6450", "title": "Using Kernel.require instead of Kernel.load to load library", "body": "Cookbooks libraries are loaded using *Kernel.load* in the [cookbook loader](https://github.com/chef/chef/blob/e75454384a9763458ea7d6d0aa7472521025dcbd/lib/chef/run_context/cookbook_compiler.rb#L224). This means that one library could be loaded multiple times, producing warnings about constant redefinition and other weird behavior.\r\n\r\nI did some archeology and it seems the `Kernel.require` call has been replaced by a `Kernel.load` a while ago (6 years) due to some [issue with the chef-client daemon](https://github.com/chef/chef/commit/c3c701f6efb5b7f8f4a2bb2b1140b9f9defd6c8e).\r\n\r\nWould it be possible to reconsider this change? I don't know if the original issue is still present with the recent code base.\r\nA possible workaround would be to use `Kernel.require` everywhere but empty the *$LOADED_FEATURES* array using `$LOADED_FEATURES.clear` \r\n\r\nIn the case using `Kernel.require` is not an option, maybe you should add a comment to explain why this is not possible. This would save a lot of time to people in my situation :)\r\n\r\n## Chef Version\r\n\r\nAll including current one (13.4.24)\r\n\r\n*Cc.* @aboten\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/5992", "title": "converge_if_changed ignore missing required properties", "body": "## Description\r\n\r\nThe `converge_if_changed` method is only checking \"properties specified by the user on the resource\" to determine whether the block should be called or not. Meaning that if the user forget to pass my important property, my block protected by a `converge_if_changed` won't be called, and the `requirement` validation will never happen.\r\n\r\nI already read #4596, but I think this issue is a more specific case, which I personally qualify as a bug what do you think? :)\r\n\r\n## Chef Version\r\n\r\n12.13.37 & 12.19.36\r\n\r\n## Platform Version\r\n\r\n* CentOS 6.8, & 7.2\r\n* Windows Server 2012R2 & 2016\r\n\r\n## Replication Case\r\n\r\nCreate a resource\r\n\r\n```ruby\r\nresource_name :my_resource\r\n\r\nproperty :important_attribute, String, required: true\r\n\r\naction :try_to_do_something do\r\n  converge_if_changed(:important_attribute) do\r\n    puts 'do something'\r\n  end\r\nend\r\n```\r\nAnd use it:\r\n```ruby\r\nmy_resource 'test'\r\n```\r\n\r\n**Cc:** @aboten ", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vaibhavsood": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6449", "title": "ppc64le dockerhub images", "body": "Hi, I'm looking to enable docker containers for packages like chef for multiple architectures on dockerhub, starting off with a focus on ppc64le. Wanted to check on the work that will be involved to do that\r\n\r\nI have locally been able to successfully test ppc64le changes to the dockerfiles in this repo - changes for enabling additional arch would be minimum.\r\n\r\nWould like to know how a multi-arch image for this can be initiated? The official images have this method for enabling multi-arch : https://github.com/docker-library/official-images#multiple-architectures, however this repo isnt an official image yet. Would the first step be to make this an official image or are there any other ways the dockerhub chef image can be enabled for ppc64le?\r\n\r\n## Description\r\n\r\nBriefly describe the issue\r\n\r\n## Chef Version\r\n\r\nTell us which version of chef-client you are using (see below for Server+ChefDK bugs).\r\n\r\n## Platform Version\r\n\r\nTell us which Operating System distribution and version chef-client is running on.\r\n\r\n## Replication Case\r\n\r\nTell us what steps to take to replicate your problem.  See [How to create a Minimal, Complete, and Verifiable example](https://stackoverflow.com/help/mcve)\r\nfor information on how to create a good replication case.\r\n\r\n## Client Output\r\n\r\nThe relevant output of the chef-client run or a link to a gist of the entire run, if there is one.\r\n\r\nThe debug output (chef-client -l debug) may be useful, but please link to a gist, or truncate it.\r\n\r\n## Stacktrace\r\n\r\nPlease include the stacktrace.out output or link to a gist of it, if there is one.\r\n\r\n### NOTE: CHEF CLIENT BUGS ONLY\r\n\r\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\r\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\r\n\r\n* Requests for new or alternative functionality should be made to [feedback.chef.io](https://feedback.chef.io/forums/301644-chef-product-feedback/category/110832-chef-client)\r\n* [Chef Server issues](https://github.com/chef/chef-server/issues/new)\r\n* [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\r\n* Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6449/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "darrendao": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6427", "title": "chef solor/zero throws error when using relative path for node attribute json file", "body": "## Description\r\n\r\nChef solo and chef client zero throws error when node attribute json is specified with relative path on the command line\r\n\r\n## Chef Version\r\nChef: 13.4.19\r\n\r\n## Platform Version\r\n\r\nRHEL 7, chef 13.4.19\r\n\r\n## Replication Case\r\nMy chef config solo.rb file\r\n```\r\n# Set chef homedir\r\nchef_home_dir = File.expand_path('./')\r\n\r\n# Download temporary files to /tmp\r\nfile_cache_path '/tmp'\r\n\r\n# Set path to config\r\ncookbook_path [ File.join(chef_home_dir, 'shared', 'cookbooks'),\r\n                File.join(chef_home_dir, 'cookbooks'),\r\n                File.join(chef_home_dir, 'third-party', 'cookbooks')\r\n              ]\r\nrole_path File.join(chef_home_dir, 'roles')\r\nenvironment_path File.join(chef_home_dir, 'environments')\r\ndata_bag_path File.join(chef_home_dir, 'data_bags')\r\n# Chef log file\r\nlog_location '/var/log/chef/chef.log'\r\n```\r\nMy node attribute json file\r\n```\r\n{\r\n  \"run_list\": [\"recipe[ddaotest]\"]\r\n}\r\n```\r\n\r\nRun either chef solo or chef zero\r\n```\r\nchef-solo -c config/solo.rb -j nodes/my_node.json\r\n# or\r\nchef-client -z -c config/solo.rb -j nodes/my_node.json\r\n```\r\n\r\n## Client Output\r\n[2017-09-20T14:12:48-07:00] WARN: *****************************************\r\n[2017-09-20T14:12:48-07:00] WARN: Did not find config file: /config/solo.rb, using command line options.\r\n[2017-09-20T14:12:48-07:00] WARN: *****************************************[2017-09-20T14:12:48-07:00] FATAL: Cannot load configuration from nodes/my_node.json\r\n\r\n## Observations\r\n* If I use full path, then everything is fine.\r\n* I believe the problem is when the `reconfigure` method is called, the PWD is `/` so when it tries to load the files, it fails to find it.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kylebevans": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6426", "title": "Chef Client 13 audit: SystemStackError: stack level too deep if requires 'serverspec'", "body": "## Description\r\n\r\nIn Chef Client 13, audit mode fails with the error \"SystemStackError: stack level too deep\" if the audit recipe contains \"requires 'serverspec\"\r\n\r\n## Chef Version\r\n\r\n13.2.20\r\n\r\n## Platform Version\r\n\r\nRHEL 7.3\r\n\r\n## Replication Case\r\n\r\nput requires 'serverspec' into an audit recipe and run chef in audit mode\r\n\r\n## Client Output\r\n\r\n Failures:\r\n  \r\n    1) 1 Install Updates, Patches and Additional Security Software 1.1 Filesystem Configuration Level 1 1.1.1 Create Separate Partition for /tmp\r\n       Failure/Error: expect(file('/tmp')).to be_mounted\r\n       SystemStackError:\r\n         stack level too deep\r\n         \r\n       # /var/chef/cache/cookbooks/audit-cookbook/recipes/audit-cis-rhel7.rb:42:in `block (4 levels) in from_file'\r\n\r\n### NOTE: CHEF CLIENT BUGS ONLY\r\n\r\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\r\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\r\n\r\n* Requests for new or alternative functionality should be made to [feedback.chef.io](https://feedback.chef.io/forums/301644-chef-product-feedback/category/110832-chef-client)\r\n* [Chef Server issues](https://github.com/chef/chef-server/issues/new)\r\n* [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\r\n* Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "popsikle": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6418", "title": "ERROR: IOError: closed stream on knife ssh when an instance terminates", "body": "## Description\r\nWhen running knife ssh on a large fleet of servers if any of them shut down the whole knife ssh run is terminated.  Can not re-open the older bug, https://tickets.opscode.com/browse/CHEF-3810\r\n\r\n\r\n## Chef Version\r\n12.x\r\n\r\n\r\n## Platform Version\r\nOSX, 12.X\r\n\r\n## Replication Case\r\nrun knife ssh 'name:*' 'sudo chef-client' while terminating an ec2 instance\r\n\r\n## Client Output\r\nERROR: IOError: closed stream\r\n\r\n## Stacktrace\r\nN/A\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6418/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "spuder": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6403", "title": "windows_task: tasks will not run on battery power", "body": "Scheduled tasks by default will not run if on battery power. This includes test kitchen vms. \r\n\r\n<img width=\"647\" alt=\"screenshot 2017-09-13 21 17 46\" src=\"https://user-images.githubusercontent.com/242382/30410805-7e2807ba-98ca-11e7-8dc9-7dabc364b338.png\">\r\n\r\nThis should not be the default, or at least it should be configurable. If you are on a laptop, you will spend hours of fun debugging why chef works when your laptop is plugged in, but not when on battery power. (Even if your workstation is a mac)\r\n\r\n## How\r\n\r\nThere are 3 main ways to make a windows scheduled task. \r\n\r\n- Schedtask.exe\r\n- [New-ScheduledJobOption](https://docs.microsoft.com/en-us/powershell/module/psscheduledjob/new-scheduledjoboption?view=powershell-5.1)\r\n- XML\r\n\r\nSchedTask.exe is not able to modify the power/battery settings. You must either use the powershell module, or import the task as xml. \r\n\r\n\r\n    <DisallowStartIfOnBatteries>false</DisallowStartIfOnBatteries>\r\n\r\n\r\n### Possible config options\r\n```ruby\r\nwindows_task 'foo' do\r\n  conditions :start_only_ac_power, false, :stop_on_battery, false \r\nend\r\n```\r\n```ruby\r\nwindows_task 'foo' do\r\n  start_only_ac_power false\r\n  stop_on_battery false\r\nend\r\n```", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6403/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/6059", "title": "windows_task does not have a :change action", "body": "In chef 13, the windows_task was ported from the windows cookbook. \r\n\r\nThe port does not include a `:change` action. This will cause any cookbook that attempts to modify a windows scheduled task to fail. \r\n\r\n\r\n```\r\n           * windows_task[modify sched task start time] action change\r\n             \r\n             ================================================================================\r\n             Error executing action `change` on resource 'windows_task[modify sched task start time]'\r\n             ================================================================================\r\n             \r\n             NoMethodError\r\n             -------------\r\n             undefined method `action_change' for #<Chef::Provider::WindowsTask:0x00000005285d70>\r\n             Did you mean?  action_enable\r\n                     action_create\r\n             \r\n             Resource Declaration:\r\n             ---------------------\r\n             # In C:/Users/vagrant/AppData/Local/Temp/kitchen/cache/cookbooks/ad-join/resources/domain_join.rb\r\n             \r\n       72:     windows_task 'modify sched task start time' do\r\n       73:       task_name 'chef ad-join' # http://bit.ly/1WDZ1kn\r\n       74:       start_day '06/09/2016'\r\n       75:       start_time '01:00'\r\n       76:       only_if { node['kernel']['cs_info']['domain_role'].to_i == 0 || node['kernel']['cs_info']['domain_role'].to_i == 2 }\r\n       77:       action :change\r\n       78:     end\r\n       79: \r\n```\r\n\r\nSee related issue https://github.com/NetDocuments/ad-join-cookbook/issues/23\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/4870", "title": "doc bug:  chocolatey_package cannot be shortened to package (unlike apt_package, yum_package, etc)", "body": "## Description\n\nIf you use the package resource and specify the chocolatey provider, you get an error\n\nChef 12.9.38 \n\nWindows 2012R2\n## Replication Case\n\n``` ruby\npackage 'pstools' do\n  provider Chef::Provider::Package::Chocolatey\n  action :install\nend\n```\n## Client Output\n\n```\n    ================================================================================\n    Error executing action `install` on resource 'windows_package[pstools]'\n    ================================================================================\n\n    NoMethodError\n    -------------\n    undefined method `map' for \"pstools\":String\n\n    Resource Declaration:\n    ---------------------\n    # In c:/chef/local-mode-cache/cache/cookbooks/nd-web/recipes/schedtasks.rb\n\n    169: package 'pstools' do\n    170:   provider Chef::Provider::Package::Chocolatey\n    171:   action :install\n    172: end\n    173:\n\n    Compiled Resource:\n    ------------------\n    # Declared in c:/chef/local-mode-cache/cache/cookbooks/nd-web/recipes/schedtasks.rb:169:in `from_file'\n\n    windows_package(\"pstools\") do\n      package_name \"pstools\"\n      provider Chef::Provider::Package::Chocolatey\n      action [:install]\n      retries 0\n      retry_delay 2\n      default_guard_interpreter :default\n      declared_type :package\n      cookbook_name \"nd-web\"\n      recipe_name \"schedtasks\"\n    end\n\n    Platform:\n    ---------\n    x64-mingw32\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n```\n\nIf you use the following syntaxes, it works fine\n\n``` ruby\nchocolatey_package 'pstools' do\n  action :install\nend\n```\n\nHowever the documentation discourages using 'chocolatey_package' in favor of 'package'\n\nhttps://docs.chef.io/resource_chocolatey_package.html\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/4796", "title": "windows_service does not support :reload", "body": "## Description\n\nUsing `windows_service` [as documented here](https://docs.chef.io/resource_windows_service.html), with :reload throws error:\n\n>   #Chef::Provider::Service::Windows:0x36eee00 does not support :reload\n\nUsing any other resource \"enable\", \"configure_startup\" ect.. works without problem. \n\nLooking at the source, it seems that the 'reload' method is not defined. \n\nhttps://github.com/chef/chef/blob/master/lib/chef/provider/service/windows.rb\n## Chef Version\n\n12.8.1\n## Platform Version\n\nWindows 2012 R2\n## Replication Case\n\n``` ruby\nwindows_service 'SomeService' do\n  run_as_user 'foobar'\n  run_as_password 'correct-horse-battery-staple'\n  action :reload\nend\n```\n## Client Output\n\n```\n* windows_service[AspireService] action reload\n           * #<Chef::Provider::Service::Windows:0x36eee00> does not support :reload\n           ================================================================================\n           Error executing action `reload` on resource 'windows_service[AspireService]'\n           ================================================================================\n\n           Chef::Exceptions::UnsupportedAction\n           -----------------------------------\n           #<Chef::Provider::Service::Windows:0x36eee00> does not support :reload\n\n           Resource Declaration:\n           ---------------------\n           # In C:/Users/ADMINI~1/AppData/Local/Temp/kitchen/cache/cookbooks/nd-aspire/recipes/default.rb\n\n           122: windows_service 'SomeService' do\n           123:   \n           124:   run_as_user 'foobar'\n           125:   run_as_password 'correct-horse-battery-staple'\n           126:   action :reload\n           127: end\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rdean716": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6396", "title": "windows_package incorrectly tries to install an older version of a package.", "body": "## Description\r\n\r\nWhen a newer version of an MSI package is installed, the windows_package resource attempts to install the older package version.  From what I can gather (i could be wrong) from the documentation this should not be the expected behavior.\r\n\r\n## Chef Version\r\n\r\nChef: 12.18.31\r\n\r\n## Platform Version\r\n\r\nWindows Server 2012 R2\r\n\r\n## Replication Case\r\n\r\nAs defined in our recipe:\r\n\r\n```ruby\r\npackage 'RSA Authentication Agent' do\r\n  source rsaauth_package\r\n  action :install\r\n  options \"/L*V #{log_file}\"\r\nend\r\n```\r\n\r\nWhen the package source is the 7.2.1.93 version of the package AND 7.3.2.76 is the currently installed version the package resource determines that the agent needs updating - which Windows Installer Blocks with 1638 because another version of the product is already installed - resulting in a failed chef-client run.\r\n\r\nAdding an array of version does not stop the resource from attempting the installation\r\n\r\nAdding an array of return codes does stop this from terminating the chef run, but causes the package to attempt to install each time.\r\n\r\n## Client Output\r\n\r\n- truncated client output:\r\n```\r\nINFO: Processing windows_package[rsaauth] action install (win_baseline::rsaauth line 18)\r\nINFO: Running queued delayed notifications before re-raising exception\r\nERROR: Running exception handlers\r\nERROR: Exception handlers complete\r\nINFO: Sending resource update report (run-id: 5e73df2f-d116-4e9b-9983-56658048ac80)\r\nFATAL: Stacktrace dumped to C:/chef/cache/chef-stacktrace.out\r\nFATAL: Please provide the contents of the stacktrace.out file if you file a bug report\r\nFATAL: Mixlib::ShellOut::ShellCommandFailed: windows_package[rsaauth] (win_baseline::rsaauth line 18) had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process to exit with [0], but received '1638'\r\n---- Begin output of msiexec /qn /i \"c:\\chef\\cache\\rsaauth_7.2.1.93.msi\"  /L*V C:\\chef\\cache/msi_logs\\rsaauth.log ----\r\nSTDOUT: A n o t h e r   v e r s i o n   o f   t h i s   p r o d u c t   i s   a l r e a d y   i n s t a l l e d .     I n s t a l l a t i o n   o f   t h i s   v e r s i o n   c a n n o t   c o n t i n u e .     T o   c o n f i g u r e   o r   r e m o v e   t h e   e x i s t i n g   v e r s i o n   o f   t h i s   p r o d u c t ,   u s e   A d d / R e m o v e   P r o g r a m s   o n   t h e   C o n t r o l   P a n e l .\r\nSTDERR: \r\n---- End output of msiexec /qn /i \"c:\\chef\\cache\\rsaauth_7.2.1.93.msi\"  /L*V C:\\chef\\cache/msi_logs\\rsaauth.log ----\r\nRan msiexec /qn /i \"c:\\chef\\cache\\rsaauth_7.2.1.93.msi\"  /L*V C:\\chef\\cache/msi_logs\\rsaauth.log returned 1638\r\n---- End output of msiexec /qn /i \"c:\\chef\\cache\\rsaauth_7.2.1.93.msi\"  /L*V C:\\chef\\cache/msi_logs\\rsaauth.log ----\r\nRan msiexec /qn /i \"c:\\chef\\cache\\rsaauth_7.2.1.93.msi\"  /L*V C:\\chef\\cache/msi_logs\\rsaauth.log returned 1638\r\n```\r\n\r\n- truncated debug output:\r\n\r\n```\r\nDEBUG: windows_package[RSA Authentication Agent] getting product code for package at c:\\chef\\cache\\rsaauth_7.2.1.93.msi\r\nDEBUG: windows_package[RSA Authentication Agent] checking package status and version for {1CBBF615-E223-45A3-BE98-4B67EC6846DA}\r\nDEBUG: Checking if windows_package[RSA Authentication Agent] version '[\"7.2.1.93\", \"7.3.2.76\"]' is already installed. 7.3.2.76 is currently installed\r\nDEBUG: windows_package[RSA Authentication Agent] RSA Authentication Agent 7.3.2.76 needs updating to [\"7.2.1.93\", \"7.3.2.76\"]\r\nDEBUG: windows_package[RSA Authentication Agent] installing MSI package 'c:\\chef\\cache\\rsaauth_7.2.1.93.msi'\r\nA n o t h e r   v e r s i o n   o f   t h i s   p r o d u c t   i s   a l r e a d y   i n s t a l l e d .     I n s t a\r\nl l a t i o n   o f   t h i s   v e r s i o n   c a n n o t   c o n t i n u e .     T o   c o n f i g u r e   o r   r e\r\nm o v e   t h e   e x i s t i n g   v e r s i o n   o f   t h i s   p r o d u c t ,   u s e   A d d / R e m o v e   P r\r\no g r a m s   o n   t h e   C o n t r o l   P a n e l .\r\n```\r\n\r\n## Stacktrace\r\n\r\nPlease include the stacktrace.out output or link to a gist of it, if there is one.\r\n\r\n### NOTE: CHEF CLIENT BUGS ONLY\r\n\r\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\r\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\r\n\r\n* Requests for new or alternative functionality should be made to [feedback.chef.io](https://feedback.chef.io/forums/301644-chef-product-feedback/category/110832-chef-client)\r\n* [Chef Server issues](https://github.com/chef/chef-server/issues/new)\r\n* [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\r\n* Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "scopenco": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6390", "title": "policy_name/policy_group not found in attributes", "body": "## Description\r\n\r\nI'm trying to use search in chef recipe like this\r\n```\r\nservers = search(:node, \u2018some_attr:true\u2019,\r\n  filter_result: { name: [\u2018name\u2019],\r\n                   policy_name: [\u2018policy_name\u2019],\r\n                   policy_group: [\u2018policy_group\u2019],\r\n                    }\r\n                )\r\n```\r\nand servers return me result with empty policy_name/policy_group. I understand that policy_name/policy_group are node data but why then name is returning? If i'm not mistaken it's node data too.\r\n\r\nHow can I get policy_name/policy_group using `filter_result`?\r\n\r\n## Chef Version\r\n\r\n```\r\n$ chef-client -v\r\nChef: 12.20.3\r\n```\r\n\r\nchef server 12.16.2\r\n\r\n## Platform Version\r\n\r\nCentOS Linux release 7.3.1611 (Core)", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "joekiller": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6379", "title": "\"knife site share\" not using chefignore when using cookbook-path toggle.", "body": "## Description\r\n\r\nIf I have a cookbook in an arbitrary directory and use the following to share, the chefignore in the cookbook isn't honored.\r\n\r\n    knife cookbook site share <cookbook> --cookbook-path $(pwd)/..\r\n\r\n## Chef Version\r\n\r\nChef: 13.2.20\r\n\r\n## Platform Version\r\n\r\nOSX 16.7.0\r\n\r\n## Replication Case\r\n\r\n  1. Clone https://github.com/adamsb6/s3_file\r\n  1. Run `knife cookbook site share s3_file --cookbook-path $(pwd)/.. --dry-run`\r\n  1. Output shows test files are being included even with the pattern `test/*` being in chefignore\r\n  1. Copy chefignore to $(pwd)/.. and it is used as expected.\r\n\r\n## Client Output\r\n\r\n```\r\n$ knife cookbook site share s3_file --cookbook-path $(pwd)/.. --dry-run\r\nGenerating metadata for s3_file from /var/folders/k1/dy0j4z_16lj16p8940w452vm0000gn/T/chef-s3_file-build20170906-1157-6hh0d5/s3_file/metadata.rb\r\nMaking tarball s3_file.tgz\r\nNot uploading s3_file.tgz due to --dry-run flag.\r\ns3_file/\r\ns3_file/.gitignore\r\ns3_file/.kitchen.yml\r\ns3_file/attributes/\r\ns3_file/Berksfile\r\ns3_file/bin/\r\ns3_file/CHANGELOG.md\r\ns3_file/chefignore\r\n...\r\ns3_file/test/fixtures/\r\n...\r\ns3_file/test/fixtures/cookbooks/s3_file_test/recipes/default.rb\r\ns3_file/resources/default.rb\r\n...\r\ns3_file/attributes/default.rb\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gmeneze": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6375", "title": "Chef-Solo loads configurations twice", "body": "## Description\r\n\r\nchef-solo run loads the configuration file (solo.rb) twice when it's run. This causes duplication of handlers,  resulting in the same handler being run twice.\r\n\r\n## Chef Version\r\nWe were able to replicate this for versions 12.14.89+\r\n\r\n## Platform Version\r\nRed Hat Enterprise Linux Server release 6.8 (Santiago)\r\n\r\n## Replication Case\r\n1. Create a minimal solo.rb with an event handler : -\r\n```\r\nChef.event_handler do\r\n  on :converge_start do\r\n    puts \"Ohai! I have started a converge.\"\r\n  end\r\nend\r\n```\r\n2.  Run chef solo : -\r\n```\r\nsudo chef-solo -c ./solo.rb\r\n```\r\n\r\n## Solo Output\r\n```\r\n$ sudo chef-solo -c ./solo.rb\r\n[2017-09-01T20:10:07+00:00] WARN: No cookbooks directory found at or above current directory.  Assuming /var/chef.\r\n[2017-09-01T20:10:07+00:00] WARN: No cookbooks directory found at or above current directory.  Assuming /var/chef.\r\nStarting Chef Client, version 13.2.20\r\nresolving cookbooks for run list: []\r\nSynchronizing Cookbooks:\r\nInstalling Cookbook Gems:\r\nCompiling Cookbooks...\r\nConverging 0 resources\r\nOhai! I have started a converge.\r\nOhai! I have started a converge.\r\n\r\nRunning handlers:\r\nRunning handlers complete\r\nChef Client finished, 0/0 resources updated in 04 seconds\r\nRunning handlers:\r\nRunning handlers complete\r\nChef Client finished, 0/0 resources updated in 04 seconds\r\n```\r\n\r\nThe converge_start event handler is run twice, resulting in the statement  \"Ohai! I have started a converge\" being printed twice.\r\n\r\n## My Analysis\r\nWhen the chef-solo executable is run, it first loads the configurations in its run method, here : -\r\nhttps://github.com/chef/chef/blob/master/lib/chef/application/solo.rb#L222\r\n\r\nIf the legacy mode flag is not passed to the chef-solo run, then this block of code is executed later on in the run method : -\r\nhttps://github.com/chef/chef/blob/master/lib/chef/application/solo.rb#L225\r\n\r\nThis calls the run method of the application class, which calls reconfiguration method again, so the configuration file is loaded for the second time here : -\r\nhttps://github.com/chef/chef/blob/master/lib/chef/application.rb#L57\r\n\r\nThis is fine for configurations like checksum_path, cookbook_path etc. as they are overwritten with the same value, but for chef-handlers (start_handlers, report_handlers, exception_handlers, event_handler), which are stored as arrays, it results in two similar objects getting inserted, which causes this problem.\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "c-hoeger": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6374", "title": "zypper repo does not import the provided gpg key on refresh", "body": "## Description\r\n\r\ndefining a repository like\r\n\r\n    zypper_repo 'OBS repo' do\r\n      repo_name 'OBS'\r\n      uri 'http://download.opensuse.org/repositories/OBS:/Server:/2.8/openSUSE_42.2/'\r\n      key 'http://download.opensuse.org/repositories/OBS:/Server:/2.8/openSUSE_42.2/repodata/repomd.xml.key'\r\n    end\r\n\r\nfails with\r\n\r\n        ================================================================================\r\n        Error executing action `run` on resource 'execute[zypper refresh OBS]'\r\n        ================================================================================\r\n\r\n        Mixlib::ShellOut::ShellCommandFailed\r\n        ------------------------------------\r\n        Expected process to exit with [0], but received '4'\r\n        ---- Begin output of zypper refresh OBS ----\r\n        STDOUT: Retrieving repository 'OBS' metadata [.\r\n\r\n        New repository or package signing key received:\r\n\r\n          Repository:       OBS\r\n          Key Name:         OBS OBS Project <OBS@build.opensuse.org>\r\n          Key Fingerprint:  660FD3F9 F16602A3 722ABF6D E8420AB8 C5C219E7\r\n          Key Created:      Thu 15 Jun 2017 04:02:46 PM CEST\r\n          Key Expires:      Sat 24 Aug 2019 04:02:46 PM CEST\r\n          Rpm Name:         gpg-pubkey-c5c219e7-59429386\r\n\r\n\r\n        Do you want to reject the key, trust temporarily, or trust always? [r/t/a/? shows all options] (r): error]\r\n        STDERR: Cannot read input: bad stream or EOF.\r\n        If you run zypper without a terminal, use '--non-interactive' global\r\n        option to make zypper use default answers to prompts.\r\n        Repository 'OBS' is invalid.\r\n        [OBS|http://download.opensuse.org/repositories/OBS:/Server:/2.8/openSUSE_42.2/] Valid metadata not found at specified URL\r\n        Please check if the URIs defined for this repository are pointing to a valid repository.\r\n        Skipping repository 'OBS' because of the above error.\r\n        Could not refresh the repositories because of errors.\r\n        ---- End output of zypper refresh OBS ----\r\n        Ran zypper refresh OBS returned 4\r\n\r\n        Resource Declaration:\r\n        ---------------------\r\n        # In /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.3.42/lib/chef/provider/zypper_repository.rb\r\n\r\n         60:         declare_resource(:execute, \"zypper refresh #{escaped_repo_name}\") do\r\n         61:           only_if \"zypper lr #{escaped_repo_name}\"\r\n         62:         end\r\n         63:       end\r\n\r\nWhen a gpg key has been specified, it should be imported using:\r\n\r\nzypper --non-interactive --gpg-auto-import-keys refresh\r\n\r\n## Chef Version\r\n\r\nchef-13.3.42-1.sles12\r\n\r\n## Platform Version\r\n\r\nopenSUSE 42.2\r\n\r\n## Replication Case\r\n\r\nSee initial description\r\n\r\n## Client Output\r\n\r\nSee above\r\n\r\n## Stacktrace\r\n\r\nPlease include the stacktrace.out output or link to a gist of it, if there is one.\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6374/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dscowan": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6373", "title": "knife bootstrap winrm with json option injects escape characters into json string that are not removed", "body": "## Description\r\n\r\nBriefly describe the issue\r\nwindows bootstrap winrm escapes parenthesis with multiple caret characters in the json argument.  This is not unescaped.  This causes specifically problems with the java cookbook not being idempotent because the attribute is different from what is stored in the windows registry.  Long story short a json attribue of \r\n\r\nJava 8 Update 66 (64-bit)\r\n\r\nGets turned into \r\n\r\nJava 8 Update 66 ^^^(64-bit^^^)\r\n\r\nI found the line that does this\r\n\r\nhttps://github.com/chef/knife-windows/blob/master/lib/chef/knife/core/windows_bootstrap_context.rb#L327\r\n\r\n## Chef Version\r\n12.21.4\r\n\r\nTell us which version of chef-client you are using (see below for Server+ChefDK bugs).\r\n\r\n## Platform Version\r\n12.21.4\r\nTell us which Operating System distribution and version chef-client is running on.\r\nWindows 12.21.4\r\n\r\n## Replication Case\r\n\r\nTell us what steps to take to replicate your problem.  See [How to create a Minimal, Complete, and Verifiable example](https://stackoverflow.com/help/mcve)\r\nfor information on how to create a good replication case.\r\nknife bootstrap windows winrm -E testing -r role[test] -j {\"java\":{\"windows\":{\"package_name\":\"Java Update 133 (64-bit)}}}\r\n\r\n\r\n## Client Output\r\n\r\nThe relevant output of the chef-client run or a link to a gist of the entire run, if there is one.\r\n\r\ntest003F C:\\Users\\Administrator>(echo.{\"java\":{\"jdk_version\":\"8\",\"java_home\":\"c:/java/jdk1.8.0_66\",\"windows\":{\"package_name\":\"Java 8 Update 66 ^^^(64-bit^^^)\"}},\"run_list\":[\"role[test]\"]} ) 1>C:\\chef\\first-boot.json \r\n....\r\ntest003F [2017-08-31T12:24:58-04:00] INFO: Processing windows_package[Java 8 Update 66 ^^^(64-bit^^^)] action install (java::windows line 101)\r\n\r\ntest003F [2017-08-31T12:24:58-04:00] INFO: Installing windows_package[Java 8 Update 66 ^^^(64-bit^^^)] version latest\r\n\r\ntest003F [2017-08-31T12:24:58-04:00] INFO: Starting installation...this could take awhile.\r\n\r\ntest003F [2017-08-31T12:26:22-04:00] INFO: windows_package[Java 8 Update 66 ^^^(64-bit^^^)] sending write action to log[jdk-version-changed] (immediate)\r\n\r\n\r\nThe debug output (chef-client -l debug) may be useful, but please link to a gist, or truncate it.\r\n\r\n## Stacktrace\r\n\r\nPlease include the stacktrace.out output or link to a gist of it, if there is one.\r\n\r\n### NOTE: CHEF CLIENT BUGS ONLY\r\n\r\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\r\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\r\n\r\n* Requests for new or alternative functionality should be made to [feedback.chef.io](https://feedback.chef.io/forums/301644-chef-product-feedback/category/110832-chef-client)\r\n* [Chef Server issues](https://github.com/chef/chef-server/issues/new)\r\n* [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\r\n* Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "akramkm": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6371", "title": "windows_package does not perform remote install of exe on Windows 2012 R2", "body": " windows_package does not perform remote windows install on Windows of a exe  on windows 2012 R2\r\n\r\nError Message:\r\n10.1.9.7 [2017-08-30T15:19:32+00:00] FATAL: Mixlib::ShellOut::CommandTimeout: windows_package[dyna] (dyna::agent-windows line 21) had an error: Mixlib::ShellOut::CommandTimeout: command timed out:\r\n10.1.9.7 ---- Begin output of start \"\" /wait \"c:\\dyna.exe\"   /q /n & exit %%%%ERRORLEVEL%%%% ----\r\n10.1.9.7 STDOUT:\r\n10.1.9.7 STDERR:\r\n10.1.9.7 ---- End output of start \"\" /wait \"c:\\dyna.exe\"   /q /n & exit %%%%ERRORLEVEL%%%% ----\r\n10.1.9.7\r\n10.1.9.7 ProcessId: 5108\r\n10.1.9.7 app_name: C:\\Windows\\system32\\cmd.exe\r\n10.1.9.7 command_line: cmd /c \"start \"\" /wait \"c:\\dyna.exe\"   /q /n & exit %%%%ERRORLEVEL%%%%\"\r\n10.1.9.7 timeout: 600\r\nERROR: Failed to execute command on 10.1.9.7 return code 1\r\n\r\nThis is below configuration of my chef environment:\r\nChef Development Kit Version: 1.4.3\r\nchef-client version: 12.19.36\r\ndelivery version: master (41b94ffb5efd33723cf72a89bf4d273c8151c9dc)\r\nberks version: 5.6.4\r\nkitchen version: 1.16.0\r\ninspec version: 1.25.1\r\n\r\nI have installed winrm-elevated -v 1.1.0 gem as well \r\n\r\nBelow is the command I am trying to execute\r\nknife winrm --winrm-shell elevated name:client2012 -a ipaddress -x admin -P password@123 --config C:\\Users\\admin\\starter_kit\\chef-repo\\.chef\\knife.rb chef-client\r\n\r\ncould you please advice", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mpolden": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6361", "title": "Package locking is not idempotent when package and resource name differ", "body": "## Description\r\n\r\nPackage locking is not idempotent when package and resource name differ. This seems to be caused by the provider incorrectly using the resource name when determining if a package is locked. \r\n\r\n## Chef Version\r\n\r\n12.18.31\r\n\r\n## Platform Version\r\n\r\nRed Hat Enterprise Linux Server release 6.8\r\n\r\n## Replication Case\r\n\r\nDeclare a yum_package resource where the resource name and package name differ and locking is used. Example:\r\n\r\n```\r\nyum_package 'install-apache' do\r\n  package_name 'httpd'\r\n  version '2.2.15-60.el6_9.5'\r\n  action %i(install lock)\r\nend\r\n```\r\n\r\nIn this case, \"install-apache\" is passed as a argument to `package_locked`:\r\nhttps://github.com/chef/chef/blob/3c42edc942619b634a3f3dc7e44cf4699532f208/lib/chef/provider/package.rb#L223\r\n\r\nNote that when the actual locking occurs, `package_name` is correctly used:\r\nhttps://github.com/chef/chef/blob/3c42edc942619b634a3f3dc7e44cf4699532f208/lib/chef/provider/package.rb#L225\r\n\r\nThis behavior results in the package being locked on every Chef run and duplicate entries in the version lock list (`yum versionlock list`).\r\n\r\n## Client Output\r\n\r\nN/A\r\n\r\n## Stacktrace\r\n\r\nN/A\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "acoulton": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6323", "title": "Cookbook loading is inefficient with large ignored directories", "body": "## Description\r\nThe [CookbookVersionLoader](https://github.com/chef/chef/blob/master/lib/chef/cookbook/cookbook_version_loader.rb#L65) recurses into every directory and loads a full list of files before iterating back over to remove any that match the chefignore.\r\n\r\nThis causes very slow cookbook loading when there are entirely-ignored directories with large numbers of files. For example, the presence of build-time gems with a `vendors/*` ignore pattern produces [very slow chefspec performance](https://github.com/chefspec/chefspec/issues/870).\r\n\r\nIt would be better if directories and files were tested against the ignore during recursion, so that the vendors directory could be skipped outright if it matches a pattern that excludes the whole directory. Note that fixing this won't take effect until #2994 is also fixed, as at present cookbook-level chefignores are completely ignored by the cookbook loader.\r\n\r\n## Chef Version\r\n\r\nVerified in Chef 12.21.1 and 13.2.20\r\n\r\n## Platform Version\r\n\r\nUbuntu 14.04\r\n\r\n## Replication Case\r\nI have created a self-executing replication case [in this gist](https://gist.github.com/acoulton/14d2ce1ad0d476a89edcab61333da1a9) - download to a path with at least one empty parent directory to avoid chef attempting to load siblings as cookbooks and execute.\r\n\r\n* Create a simple cookbook with chefspec setup and a single empty recipe\r\n* Create a `chefignore` containing `vendor/*` in the cookbook root directory\r\n* Create a minimal spec with two specs, each just triggering converge on the empty recipe\r\n* Run chefspec and observe the runtime is very short\r\n* Populate a large number (10k or so) of recursive files / directories into `{cookbook}/vendor` equivalent to running `bundle install --deployment` with a chef / chefspec gemfile\r\n* Run chefspec and observe that each spec now takes multiple seconds to run\r\n\r\n## Output\r\n\r\nFrom my replication case - observe that once vendor is present the run is around 180 times slower at 11.6 rather than 0.06 seconds. The presence of a chefignore has no effect.\r\n\r\n```\r\nInstalling gems\r\nWith no local vendors\r\n..\r\n\r\nFinished in 0.06462 seconds (files took 0.96274 seconds to load)\r\n2 examples, 0 failures\r\n\r\n\r\nreal    0m1.307s\r\nuser    0m1.104s\r\nsys     0m0.163s\r\n\r\nWith local vendors and no chefignore - expected to be slow\r\n..\r\n\r\nFinished in 11.59 seconds (files took 0.93044 seconds to load)\r\n2 examples, 0 failures\r\n\r\n\r\nreal    0m12.797s\r\nuser    0m11.916s\r\nsys     0m0.710s\r\n\r\nWith local vendors chefignored - should be faster\r\n..\r\n\r\nFinished in 11.58 seconds (files took 0.98431 seconds to load)\r\n2 examples, 0 failures\r\n\r\n\r\nreal    0m12.841s\r\nuser    0m12.017s\r\nsys     0m0.598s\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6323/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "D33M": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6322", "title": "Information from guards (not_if, only_if)", "body": "## Description\r\n\r\nCurrently Chef displays generic information about why resource wasn't run, according to guards (`(skipped due to not_if)`). It would be nice if we could briefly describe this behaviour, without looking into cookbooks.\r\n\r\n## Chef Version\r\n\r\n```\r\nChef Development Kit Version: 2.0.26\r\nchef-client version: 13.2.20\r\ndelivery version: master (17c1b0fed9be4c70f69091a6d21a4cbf0df60a23)\r\nberks version: 6.2.0\r\nkitchen version: 1.16.0\r\ninspec version: 1.30.0\r\n```\r\n\r\n## Suggessted mechanism\r\n\r\nIt would be nice if guards were a little more expanded:\r\n```\r\nexecute 'Hello' do\r\n   command     'rm -rf /'\r\n    not_if [\r\n       {File::exist?('/please_dont'), :information => 'Since you are begging, it will be skipped'},\r\n       {user_is_my_friend && user_paid, :information => 'You're my dude!'},\r\n       {node['hostname'] == 'my.computer', :information => 'I won't give myself more work...'}\r\n    ]\r\nend\r\n```\r\n\r\nThis way it would display descriptive information *why* it was skipped (without looking inside code and wondering, which part made it `true`):\r\n\r\n```\r\n* execute [Hello] action run  (skipped due to not_if: 'Since you are begging, it will be skipped')\r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6322/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thorhs": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6311", "title": "AIX service always marked as not running if named same as group", "body": "## Description\r\n\r\nThe netcd service in AIX is also in a group called netcd.  This causes the is_resource_group? to classify the name as a group.  Groups never the the running state, so chef always starts the service, even though it is running.\r\n\r\nIn is_resource_group? we could check if there is a service that has the same name as the group.  This however might break existing usages of this provider.  Not sure which is more 'correct', defaulting to a service or group.\r\n\r\n## Chef Version\r\n\r\n12.14.89\r\n\r\n## Platform Version\r\n\r\n7100-04-01-1543\r\n\r\n## Replication Case\r\n\r\n    service 'netcd' do\r\n      action :start\r\n    end\r\n\r\n## Client Output\r\n\r\n      * service[netcd] action start[2017-08-08T13:56:07+00:00] INFO: Processing service[netcd] action   start (rb_os_aix::aix_configure_netcd line 34)\r\n    [2017-08-08T13:56:07+00:00] DEBUG: Providers for generic service resource enabled on node include: [Chef::Provider::Service::Aix, Chef::Provider::Service::Init]\r\n    [2017-08-08T13:56:07+00:00] DEBUG: Provider for action start on resource service[netcd] is Chef::Provider::Service::Aix\r\n    [2017-08-08T13:56:07+00:00] DEBUG: service[netcd] using lssrc to check the status\r\n    Subsystem         Group            PID          Status\r\n     netcd            netcd            2162770      active\r\n    [2017-08-08T13:56:07+00:00] DEBUG: netcd is a group\r\n    [2017-08-08T13:56:07+00:00] DEBUG: service[netcd] running: false\r\n    0513-029 The netcd Subsystem is already active.\r\n    Multiple instances are not supported.\r\n    [2017-08-08T13:56:07+00:00] INFO: service[netcd] started\r\n    \r\n        - start service service[netcd]\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rmoriz": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6294", "title": "gpg/keyserver and apt_repository", "body": "## Problem ##\r\n\r\n`apt_repository` supports different ways to provide a gpg key/key id for a repository. A common way is to provide the key id and a public key server to fetch the key.\r\n\r\nHowever it turns out that many public key servers and even key server pools like `sks-keyservers.net` are not very reliable, rate limited or sometimes unreachable. This usually breaks a chef-run and causes a lot of \"false\" positives in monitoring.\r\n\r\nI might be wrong but it also looks to me that it's currently not idempotent, e.g. it fetches the key on each converge, at least on chef 12. \r\n\r\n## Suggestion for fix ## \r\n\r\nI suggest to implement the following:\r\n\r\n1. implement a default retry option for key fetching which is unrelated to the `retries`. (Most public cookbooks don't use `retries`)\r\n\r\n2. allow to specify an array of key-servers that will be iterated on error.\r\n\r\n3. Backport https://github.com/chef/chef/commit/c90401fa936353550b7658a2a9f4908cf6d27a40 to chef12 client (fixes idempotency)\r\n\r\n\r\n### Related / Real world example of the issue ###\r\n\r\nhttps://github.com/chef-cookbooks/chef-apt-docker/pull/5\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/773159", "body": "Well, the :proc option is still there trying to initialize the option through the knife.rb hash:\nhttps://github.com/moriz/chef/blob/b10c027f032827c65c01428a62c0a6f50c53a515/chef/lib/chef/knife/ec2_server_create.rb#L54\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/773159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/776050", "body": "so what exactly does https://github.com/moriz/chef/blob/b10c027f032827c65c01428a62c0a6f50c53a515/chef/lib/chef/knife/ec2_server_create.rb#L54 do except setting the value from the parsed knife.rb if no cli options is set?! (Proc\u2026)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/776050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/776092", "body": "ok, so disregard this pull request.\n\nhow about:\n\n`:availability_zone => Chef::Config[:knife][:availability_zone]`\n\ninstead of:\nhttps://github.com/opscode/chef/blob/master/chef/lib/chef/knife/ec2_server_create.rb#L158\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/776092/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/270929", "body": "Are you sure with line 158? Doesn't this break the -Z option on the command line?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/270929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/270935", "body": "setting with -Z does not work here.\nI think line +157 was correct because it uses the parsed config and +55 already reads the data from the parsed knife.rb\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/270935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/271284", "body": "I've created a pull request:\n\nhttps://github.com/opscode/chef/pull/55\n\nhttp://tickets.opscode.com/browse/CHEF-1765\n\nthanks!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/271284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "mage2k": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6288", "title": "Portage package provider does not respect timeouts in declared package/portage_package resources", "body": "## Description\r\n\r\nThe portage package provider does not respect a timeout set in package resource declarations.   For example:\r\n\r\n```\r\nportage_package \"dev-db/postgis\" do\r\n  version '2.2.2'\r\n  action :install\r\n  timeout 1200\r\nend\r\n```\r\n\r\nThat will timeout at 600 (which seems to be the default in the shellout mixing via its DEFAULT_READ_TIMEOUT constant) seconds if still running.  This:\r\n\r\n```\r\nportage_package \"dev-db/postgis\" do\r\n  version '2.2.2'\r\n  action :install\r\n  timeout 30\r\nend\r\n```\r\n\r\nWill blow past the 30 second timeout and keep running, up to the 600 second default shellout mixin timeout.\r\n\r\nAfter poking around and testing it seems this can be quickly fixed by replacing the `#shell_out_compact!!` in the portage provider's `install_package` method with a call to `#shell_out_compact_timeout!` here:\r\n\r\nhttps://github.com/chef/chef/blob/master/lib/chef/provider/package/portage.rb#L115\r\n\r\n## Chef Version\r\n\r\n12.10.24.  Also tested with 12.21 and checked that the line I fixed still uses `#shell_out_compact!` in the current public code base, i.e. 13.3.18.\r\n\r\n## Platform Version\r\n\r\nEngine Yard Gentoo Linux (EYGL) 2016.06\r\n\r\n## Replication Case\r\n\r\nRun a recipe with the above described postgis resource declaration with a 30 second timeout on a Gentoo system and watch the build blow by 30 seconds with no timeout.\r\n\r\n## Client Output\r\n\r\n```\r\nThis happened with the 1200 second timeout in the original resource declaration:\r\n\r\n================================================================================\r\nError executing action `install` on resource 'portage_package[dev-db/postgis]'\r\n================================================================================\r\n\r\nMixlib::ShellOut::CommandTimeout\r\n--------------------------------\r\nCommand timed out after 600s:\r\nCommand exceeded allowed execution time, process terminated\r\n---- Begin output of emerge -g -n --color n --nospinner --quiet =dev-db/postgis-2.2.2 ----\r\nSTDOUT: Local copy of remote index is up-to-date and will be used.\r\n>>> Verifying ebuild manifests\r\n>>> Running pre-merge checks for dev-db/postgis-2.2.2\r\n>>> Emerging (1 of 1) dev-db/postgis-2.2.2::gentoo\r\nSTDERR:\r\n---- End output of emerge -g -n --color n --nospinner --quiet =dev-db/postgis-2.2.2 ----\r\nRan emerge -g -n --color n --nospinner --quiet =dev-db/postgis-2.2.2 returned 143\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "geoffbeal": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6276", "title": "JSON Environment Files Allow Periods in Names", "body": "## Description\r\n\r\nFirst, I'm new to Chef and have about 2hours experience with the Chef Server.  So maybe I'm at fault here, but I think I've stumbled on a validation bug.\r\n\r\nwhat I did:\r\n\r\n1.  I created a Number of Environment JSON files.  Each Environment is based on a DNS Zone and contained Periods.  I named the files similar to:\r\n\r\nenvironments/dev.ca1.domain.com.json\r\n\r\nHere is a snippit from the JSON file sanitized a bit:\r\n\r\n--------\r\n{\r\n    \"name\": \"dev.ca1.domain.com\",\r\n    \"description\": \"dev.ca1.domain.com environment\",\r\n    \"chef_type\": \"environment\",\r\n    \"json_class\": \"Chef::Environment\",\r\n    \"default_attributes\": {    },\r\n    \"override_attributes\": {   },\r\n    \"cookbook_versions\": { },\r\n}\r\n-------\r\n\r\n2.  I used \"knife upload environments\" to upload this and several other environments to the chef server.\r\n\r\n3.  I started running into weird behavior where the Chef Server GUI wouldn't display environments, but \"knife environment list\" would.\r\n\r\n4.  I attempted to delete the role(s) and was given the error message:\r\nERROR: Chef::Exceptions::ValidationFailed: Option name's value dev.ca1.domain.com does not match regular expression /^[\\-[:alnum:]_]+$/\r\n\r\nAfter reading the Documentation closer, and seeing the  RegEX error, I guess Periods are not allowed in names.\r\n\r\nIt's my fault for not reading the documentation closer, but I also think the bug is that the JSON files data should have been validated before allowing it to upload.  If not a Bug then I'd like to make a Feature Request :)\r\n\r\n\r\n## Chef Version\r\n\r\nTell us which version of chef-client you are using (see below for Server+ChefDK bugs).\r\n\r\nServer Side:\r\n[00:10:56 root@chef001 etc]$ rpm -qa | grep chef\r\nchef-manage-2.5.3-1.el7.x86_64\r\nchef-server-core-12.15.6-1.el7.x86_64\r\n\r\nClient Side:\r\ngbeal@gbeal-wsm01:~/src/chef-repo/environments$ knife --version\r\nChef: 12.19.36\r\n\r\n\r\n## Platform Version\r\n\r\nTell us which Operating System distribution and version chef-client is running on.\r\n\r\nServer Side\r\n[00:11:05 root@chef001 etc]$ cat /etc/redhat-release \r\nCentOS Linux release 7.3.1611 (Core) \r\n\r\nClient Side:\r\nMacOS Sierra 10.12.5 (16F73)\r\n\r\n\r\n## Replication Case\r\n\r\n1. Create JSON Environment Files with Periods in the File Name, and \"Name\" parameter in the config.\r\n\r\n2. cd to your chef-repo home.\r\n\r\n3.  Run \"knife upload environments\"\r\n\r\nMy output:\r\n------\r\ngbeal@gbeal-wsm01:~/src/chef-repo$ knife upload environments\r\nCreated environments/qa2.ca3.domain.com\r\nCreated environments/perfeng.ca1.domain.com\r\nCreated environments/qa1.ca3.domain.com\r\n......\r\n[Several Environments]\r\ngbeal@gbeal-wsm01:~/src/chef-repo$ knife environment list\r\n_default\r\ndev.ca1.domain.com\r\ndev.ca3.domain.com\r\nperfeng.ca1.domain.com\r\n......\r\n[again, several environments]\r\ngbeal@gbeal-wsm01:~/src/chef-repo$ knife environment delete dev.ca1.domain.com\r\nDo you really want to delete dev.ca1.domain.com? (Y/N) Y\r\nERROR: Chef::Exceptions::ValidationFailed: Option name's value dev.ca1.domain.com does not match regular expression /^[\\-[:alnum:]_]+$/\r\n-------\r\n\r\nI tried several variations of trying to escape the periods, etc with the same result.\r\n\r\n\r\n\r\nHopefully this is sufficient to recreate what I did.  Fortunately for me this is a new install and I can trash the data and start over.  \r\n\r\n\r\n\r\n## Client Output\r\n\r\nThe relevant output of the chef-client run or a link to a gist of the entire run, if there is one.\r\n\r\nThe debug output (chef-client -l debug) may be useful, but please link to a gist, or truncate it.\r\n\r\n## Stacktrace\r\n\r\nPlease include the stacktrace.out output or link to a gist of it, if there is one.\r\n\r\n### NOTE: CHEF CLIENT BUGS ONLY\r\n\r\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\r\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\r\n\r\n* Requests for new or alternative functionality should be made to [feedback.chef.io](https://feedback.chef.io/forums/301644-chef-product-feedback/category/110832-chef-client)\r\n* [Chef Server issues](https://github.com/chef/chef-server/issues/new)\r\n* [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\r\n* Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "GuyPaddock": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6269", "title": "`cron` resources should support setting timezone", "body": "## Description\r\nWe have a nightly job we want to run every night at 2 AM Eastern time. Unfortunately, the default time zone for cron is UTC unless otherwise defined in the file.\r\n\r\nChef `cron` resources do not support providing the time zone to use, so this means that every time we go into or out of Daylight Saving Time, we have to modify the resource and re-deploy to our servers to ensure it stays at 2 AM instead of moving to 1 AM or 3 AM.\r\n \r\n## Chef Version\r\nChef 11\r\n\r\n## Platform Version\r\nAmazon OpsWorks with chef-zero\r\n\r\n## Replication Case\r\nNot applicable -- this is a feature request\r\n\r\n## Client Output\r\nNot applicable -- this is a feature request\r\n\r\n## Stacktrace\r\nNot applicable -- this is a feature request", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "acranox": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6263", "title": "Deprecation warning may result in printing sensitive information to the log.", "body": "## Description\r\n\r\nA chef-client 13 deprecation warning results in printing sensitive information to the log.\r\nUsing the file resource, w/ 'sensitive true' will prevent the file content from being printed to the log, but a deprecation warning may print the file content at the end of the chef-client run.\r\n\r\n## Chef Version\r\n\r\n12.19.36\r\n\r\n## Platform Version\r\n\r\nRHEL 7\r\n\r\n## Replication Case\r\n\r\ninside loop, with some values are expected to be empty, I'm using the file resource, where the content is an attribute that was defined earlier:\r\n```\r\nnode['foobar'].each do |key, value|\r\n  file \"/path/#{value['filename']} do\r\n    content node['secret_key'][key]\r\n    sensitive true\r\n  end\r\nend\r\n```\r\n\r\n\r\n## Client Output\r\n\r\n```\r\n  An attempt was made to change content from \"REDACTED SECRET KEY\" to nil by calling content(nil). In Chef 12, this does a get rather than a set. In Chef 13, this will change to set the value to nil. at 1 location:\r\n    - /var/chef/cache/cookbooks/foobar/recipes/test.rb:75:in `block (2 levels) in from_file'\r\n   See https://docs.chef.io/deprecations_custom_resource_cleanups.html for further details.\r\n```\r\n\r\n## Stacktrace\r\n\r\nN/A\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "siddhu07": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6254", "title": "undefined method `map' for #<String:0x00000003dce0a8>", "body": "## Description\r\n\r\nwhile doing\r\nknife cookbook upload <name>, it give \r\n\r\nERROR: knife encountered an unexpected error\r\nThis may be a bug in the 'cookbook upload' knife command or plugin\r\nPlease collect the output of this command with the `-VV` option before filing a bug report.\r\nException: NoMethodError: undefined method `map' for #<String:0x00000003dce0a8>\r\n\r\n## Chef Version\r\nChef Development Kit Version: 1.5.0\r\n\r\n## Platform Version\r\nRHEL 8\r\n\r\n## Replication Case\r\n\r\nTell us what steps to take to replicate your problem.  See [How to create a Minimal, Complete, and Verifiable example](https://stackoverflow.com/help/mcve)\r\nfor information on how to create a good replication case.\r\n\r\n## Stacktrace\r\n\r\nINFO: Using configuration from /home/ec2-user/.chef/knife.rb\r\nDEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request\r\nDEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request\r\nDEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request\r\nDEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request\r\nDEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request\r\nDEBUG: Signing the request as ec2-user\r\nDEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request\r\nDEBUG: Chef::HTTP calling Chef::HTTP::APIVersions#handle_request\r\nDEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request\r\nDEBUG: ---- HTTP Request Header Data: ----\r\nDEBUG: Accept: application/json\r\nDEBUG: Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3\r\nDEBUG: X-Ops-Server-API-Version: 1\r\nDEBUG: X-OPS-SIGN: algorithm=sha1;version=1.1;\r\nDEBUG: X-OPS-USERID: ec2-user\r\nDEBUG: X-OPS-TIMESTAMP: 2017-07-05T05:03:41Z\r\nDEBUG: X-OPS-CONTENT-HASH: 2jmj7l5rSw0yVb/vlWAYkK/YBwk=\r\nDEBUG: X-OPS-AUTHORIZATION-1: YOu37qxhzd2TBttO69PSeU+NPaGHaDP8XAjSst+VXC9latk7p4hDg6W9GLSc\r\nDEBUG: X-OPS-AUTHORIZATION-2: ZPWfc0uhSIbU+Sv5MAWb9DIoYBzACHQkqgB4ZbPQXjUZ0ZSfQUZLVA6973Z5\r\nDEBUG: X-OPS-AUTHORIZATION-3: 0xYbAoHtdyzoxjAI0VJAshR/WyeB6iYjYse9jA9bUKgGkkUEydouk1t4QybI\r\nDEBUG: X-OPS-AUTHORIZATION-4: 7EAHzDmeZbXyZOQCRBLO7sh+iJJPp/ejzdjUfN+sV1Vpkz8nRqn96i1GN0UH\r\nDEBUG: X-OPS-AUTHORIZATION-5: anIISl/1oXr53jLzsEPsiCChXUVa/vcn1oIjyjE3J/Fx61z/YCXLBi/tIOeD\r\nDEBUG: X-OPS-AUTHORIZATION-6: FFSB12FkkZAFOABhMw3Y5Yq9ilakLlqmuhCPKVRB7w==\r\nDEBUG: HOST: sid-cassandra-chef-nalljf7vhf0a5j1q.us-east-1.opsworks-cm.io:443\r\nDEBUG: X-REMOTE-REQUEST-ID: 8a80e9ed-ee2c-45ea-8515-19e81e76e69d\r\nDEBUG: ---- End HTTP Request Header Data ----\r\nDEBUG: ---- HTTP Status and Header Data: ----\r\nDEBUG: HTTP 1.1 200 OK\r\nDEBUG: server: openresty\r\nDEBUG: date: Wed, 05 Jul 2017 05:03:41 GMT\r\nDEBUG: content-type: text/html\r\nDEBUG: last-modified: Tue, 16 May 2017 01:35:16 GMT\r\nDEBUG: transfer-encoding: chunked\r\nDEBUG: connection: close\r\nDEBUG: etag: W/\"591a5754-303\"\r\nDEBUG: content-encoding: gzip\r\nDEBUG: ---- End HTTP Status/Header Data ----\r\nDEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_response\r\nDEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.\r\nDEBUG: Chef::HTTP calling Chef::HTTP::APIVersions#handle_response\r\nDEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_response\r\nDEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_response\r\nDEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_response\r\nDEBUG: Decompressing gzip response\r\nDEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_response\r\nDEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_response\r\nDEBUG: Expected JSON response, but got content-type 'text/html'\r\nDEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_response\r\n/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.21.2/lib/chef/knife/cookbook_upload.rb:104:in `run': undefined method `map' for #<String:0x000000031c6ee0> (NoMethodError)\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.21.2/lib/chef/knife.rb:443:in `block in run_with_pretty_exceptions'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.21.2/lib/chef/local_mode.rb:44:in `with_server_connectivity'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.21.2/lib/chef/knife.rb:442:in `run_with_pretty_exceptions'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.21.2/lib/chef/knife.rb:219:in `run'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.21.2/lib/chef/application/knife.rb:156:in `run'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.21.2/bin/knife:25:in `<top (required)>'\r\n\tfrom /opt/chefdk/bin/knife:57:in `load'\r\n\tfrom /opt/chefdk/bin/knife:57:in `<main>'\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hoprocker": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6248", "title": "git config --replace-all breaks when repo url has multiple words", "body": "When using a git repository with multiple words, ie with the `ext::ssh` protocol, the `git config --replace-all` command breaks. This is only a problem when a) a repository has multiple remotes, or b) the repository name doesn't match the shortname.\r\n\r\nThis appears in the most recent version of Chef (13.2.20), but [that line](https://github.com/chef/chef/blob/462ce499783771dd54d3cba576e6165643a25b11/lib/chef/provider/git.rb#L201) dates from Apr 29, 2016.\r\n\r\nThe fix should be very simple -- pass the remote url into the config as a quoted string, as is done with the similar `git_ls_remote()` function.\r\n\r\nI also see that the in `Chef::Mixin::ShellOut`, there's a recommendation to generally use shell_out_compact() -- maybe that would work here, as well.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6249", "title": "quote git remote_url", "body": "for issue #6248 ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "troyready": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6245", "title": "Package installation is failing due to debconf prompts", "body": "## Description\r\n\r\nInstalling a package with an already-modified configuration file causes the `package` resource to fail.\r\n\r\n## Chef Version\r\n\r\n12.19.36\r\n\r\n## Platform Version\r\n\r\nUbuntu 16.04\r\n\r\n## Replication Case\r\n\r\n```\r\ntemplate '/etc/default/dnsmasq' do\r\n  mode 0644\r\nend\r\npackage 'dnsmasq'\r\n```\r\n\r\n(the package installation will succeed if `options '-o Dpkg::Options::=\"--force-confdef\" -o Dpkg::Options::=\"--force-confold\"'` is added to the resource)\r\n\r\n## Client Output\r\n\r\n```\r\n...\r\n[2017-06-29T22:22:16+00:00] INFO: Processing template[/etc/default/dnsmasq] action create (my_vpn::default line 87)\r\n[2017-06-29T22:22:16+00:00] INFO: template[/etc/default/dnsmasq] created file /etc/default/dnsmasq\r\n[2017-06-29T22:22:16+00:00] INFO: template[/etc/default/dnsmasq] updated file contents /etc/default/dnsmasq\r\n[2017-06-29T22:22:16+00:00] INFO: template[/etc/default/dnsmasq] mode changed to 644\r\n[2017-06-29T22:22:16+00:00] INFO: Processing apt_package[dnsmasq] action install (my_vpn::default line 93)\r\n[2017-06-29T22:22:19+00:00] INFO: Running queued delayed notifications before re-raising exception\r\n\r\n```\r\n\r\n## Stacktrace\r\n\r\n```\r\nGenerated at 2017-06-29 22:22:21 +0000\r\nChef::Exceptions::MultipleFailures: Chef::Exceptions::MultipleFailures\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/mixlib-shellout-2.2.7/lib/mixlib/shellout.rb:289:in `invalid!'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/mixlib-shellout-2.2.7/lib/mixlib/shellout.rb:276:in `error!'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/mixin/shell_out.rb:118:in `shell_out!'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/mixin/shell_out.rb:75:in `shell_out_compact!'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/mixin/shell_out.rb:94:in `shell_out_compact_timeout!'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider/package/apt.rb:134:in `run_noninteractive'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider/package/apt.rb:89:in `install_package'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider/package.rb:114:in `block (3 levels) in <class:Package>'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider/package.rb:270:in `multipackage_api_adapter'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider/package.rb:113:in `block (2 levels) in <class:Package>'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/mixin/why_run.rb:52:in `add_action'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider.rb:176:in `converge_by'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider/package.rb:112:in `block in <class:Package>'\r\n(eval):2:in `block in action_install'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider.rb:361:in `instance_eval'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider.rb:361:in `compile_and_converge_action'\r\n(eval):2:in `action_install'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider.rb:145:in `run_action'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/resource.rb:622:in `run_action'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/runner.rb:69:in `run_action'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/runner.rb:97:in `block (2 levels) in converge'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/runner.rb:97:in `each'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/runner.rb:97:in `block in converge'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/resource_collection/resource_list.rb:94:in `block in execute_each_resource'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/resource_collection/stepable_iterator.rb:114:in `call_iterator_block'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/resource_collection/stepable_iterator.rb:103:in `iterate'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/resource_collection/resource_list.rb:92:in `execute_each_resource'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/runner.rb:96:in `converge'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/client.rb:670:in `block in converge'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/client.rb:665:in `catch'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/client.rb:665:in `converge'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/client.rb:704:in `converge_and_save'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/client.rb:284:in `run'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application.rb:295:in `block in fork_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application.rb:283:in `fork'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application.rb:283:in `fork_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application.rb:248:in `block in run_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/local_mode.rb:44:in `with_server_connectivity'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application.rb:236:in `run_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application/client.rb:464:in `sleep_then_run_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application/client.rb:451:in `block in interval_run_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application/client.rb:450:in `loop'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application/client.rb:450:in `interval_run_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application/client.rb:434:in `run_application'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application.rb:59:in `run'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/bin/chef-client:26:in `<top (required)>'\r\n/usr/bin/chef-client:57:in `load'\r\n/usr/bin/chef-client:57:in `<main>'\r\n\r\n>>>> Caused by Mixlib::ShellOut::ShellCommandFailed: apt_package[dnsmasq] (my_vpn::default line 93) had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process to exit with [0], but received '100'\r\n---- Begin output of [\"apt-get\", \"-q\", \"-y\", \"install\", \"dnsmasq=2.75-1ubuntu0.16.04.2\"] ----\r\nSTDOUT: Reading package lists...\r\nBuilding dependency tree...\r\nReading state information...\r\nThe following NEW packages will be installed:\r\n  dnsmasq\r\n0 upgraded, 1 newly installed, 0 to remove and 51 not upgraded.\r\nNeed to get 15.9 kB of archives.\r\nAfter this operation, 71.7 kB of additional disk space will be used.\r\nGet:1 http://us-west-2.ec2.archive.ubuntu.com/ubuntu xenial-updates/universe amd64 dnsmasq all 2.75-1ubuntu0.16.04.2 [15.9 kB]\r\nFetched 15.9 kB in 0s (0 B/s)\r\nSelecting previously unselected package dnsmasq.\r\n(Reading database ... ^M(Reading database ... 5%^M(Reading database ... 10%^M(Reading database ... 15%^M(Reading database ... 20%^M(Reading database ... 25%^M(Reading database ... 30%^M(Reading database ... 35%^M(Reading database ... 40%^M(Reading database ... 45%^M(Reading database ... 50%^M(Reading database ... 55%^M(Reading database ... 60%^M(Reading database ... 65%^M(Reading database ... 70%^M(Reading database ... 75%^M(Reading database ... 80%^M(Reading database ... 85%^M(Reading database ... 90%^M(Reading database ... 95%^M(Reading database ... 100%^M(Reading database ... 83055 files and directories currently installed.)\r\nPreparing to unpack .../dnsmasq_2.75-1ubuntu0.16.04.2_all.deb ...\r\nUnpacking dnsmasq (2.75-1ubuntu0.16.04.2) ...\r\nProcessing triggers for systemd (229-4ubuntu17) ...\r\nProcessing triggers for ureadahead (0.100.0-19) ...\r\nSetting up dnsmasq (2.75-1ubuntu0.16.04.2) ...\r\n\r\nConfiguration file '/etc/default/dnsmasq'\r\n ==> File on system created by you or by a script.\r\n ==> File also in package provided by package maintainer.\r\n   What would you like to do about it ?  Your options are:\r\n    Y or I  : install the package maintainer's version\r\n    N or O  : keep your currently-installed version\r\n      D     : show the differences between the versions\r\n      Z     : start a shell to examine the situation\r\n The default action is to keep your current version.\r\n*** dnsmasq (Y/I/N/O/D/Z) [default=N] ? dpkg: error processing package dnsmasq (--configure):\r\n end of file on stdin at conffile prompt\r\nProcessing triggers for systemd (229-4ubuntu17) ...\r\nProcessing triggers for ureadahead (0.100.0-19) ...\r\nErrors were encountered while processing:\r\n dnsmasq\r\nSTDERR: E: Sub-process /usr/bin/dpkg returned an error code (1)\r\n---- End output of [\"apt-get\", \"-q\", \"-y\", \"install\", \"dnsmasq=2.75-1ubuntu0.16.04.2\"] ----\r\nRan [\"apt-get\", \"-q\", \"-y\", \"install\", \"dnsmasq=2.75-1ubuntu0.16.04.2\"] returned 100\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/mixlib-shellout-2.2.7/lib/mixlib/shellout.rb:289:in `invalid!'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/mixlib-shellout-2.2.7/lib/mixlib/shellout.rb:276:in `error!'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/mixin/shell_out.rb:118:in `shell_out!'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/mixin/shell_out.rb:75:in `shell_out_compact!'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/mixin/shell_out.rb:94:in `shell_out_compact_timeout!'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider/package/apt.rb:134:in `run_noninteractive'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider/package/apt.rb:89:in `install_package'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider/package.rb:114:in `block (3 levels) in <class:Package>'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider/package.rb:270:in `multipackage_api_adapter'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider/package.rb:113:in `block (2 levels) in <class:Package>'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/mixin/why_run.rb:52:in `add_action'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider.rb:176:in `converge_by'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider/package.rb:112:in `block in <class:Package>'\r\n(eval):2:in `block in action_install'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider.rb:361:in `instance_eval'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider.rb:361:in `compile_and_converge_action'\r\n(eval):2:in `action_install'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider.rb:145:in `run_action'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/resource.rb:622:in `run_action'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/runner.rb:69:in `run_action'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/runner.rb:97:in `block (2 levels) in converge'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/runner.rb:97:in `each'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/runner.rb:97:in `block in converge'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/resource_collection/resource_list.rb:94:in `block in execute_each_resource'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/resource_collection/stepable_iterator.rb:114:in `call_iterator_block'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/resource_collection/stepable_iterator.rb:103:in `iterate'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/resource_collection/resource_list.rb:92:in `execute_each_resource'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/runner.rb:96:in `converge'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/client.rb:670:in `block in converge'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/client.rb:665:in `catch'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/client.rb:665:in `converge'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/client.rb:704:in `converge_and_save'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/client.rb:284:in `run'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application.rb:295:in `block in fork_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application.rb:283:in `fork'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application.rb:283:in `fork_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application.rb:248:in `block in run_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/local_mode.rb:44:in `with_server_connectivity'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application.rb:236:in `run_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application/client.rb:464:in `sleep_then_run_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application/client.rb:451:in `block in interval_run_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application/client.rb:450:in `loop'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application/client.rb:450:in `interval_run_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application/client.rb:434:in `run_application'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application.rb:59:in `run'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/bin/chef-client:26:in `<top (required)>'\r\n/usr/bin/chef-client:57:in `load'\r\n/usr/bin/chef-client:57:in `<main>'\r\n\r\n>>>> Caused by Mixlib::ShellOut::ShellCommandFailed: Expected process to exit with [0], but received '100'\r\n---- Begin output of [\"apt-get\", \"-q\", \"-y\", \"install\", \"dnsmasq=2.75-1ubuntu0.16.04.2\"] ----\r\nSTDOUT: Reading package lists...\r\nBuilding dependency tree...\r\nReading state information...\r\nThe following NEW packages will be installed:\r\n  dnsmasq\r\n0 upgraded, 1 newly installed, 0 to remove and 51 not upgraded.\r\nNeed to get 15.9 kB of archives.\r\nAfter this operation, 71.7 kB of additional disk space will be used.\r\nGet:1 http://us-west-2.ec2.archive.ubuntu.com/ubuntu xenial-updates/universe amd64 dnsmasq all 2.75-1ubuntu0.16.04.2 [15.9 kB]\r\nFetched 15.9 kB in 0s (0 B/s)\r\nSelecting previously unselected package dnsmasq.\r\n(Reading database ... ^M(Reading database ... 5%^M(Reading database ... 10%^M(Reading database ... 15%^M(Reading database ... 20%^M(Reading database ... 25%^M(Reading database ... 30%^M(Reading database ... 35%^M(Reading database ... 40%^M(Reading database ... 45%^M(Reading database ... 50%^M(Reading database ... 55%^M(Reading database ... 60%^M(Reading database ... 65%^M(Reading database ... 70%^M(Reading database ... 75%^M(Reading database ... 80%^M(Reading database ... 85%^M(Reading database ... 90%^M(Reading database ... 95%^M(Reading database ... 100%^M(Reading database ... 83055 files and directories currently installed.)\r\nPreparing to unpack .../dnsmasq_2.75-1ubuntu0.16.04.2_all.deb ...\r\nUnpacking dnsmasq (2.75-1ubuntu0.16.04.2) ...\r\nProcessing triggers for systemd (229-4ubuntu17) ...\r\nProcessing triggers for ureadahead (0.100.0-19) ...\r\nSetting up dnsmasq (2.75-1ubuntu0.16.04.2) ...\r\n\r\nConfiguration file '/etc/default/dnsmasq'\r\n ==> File on system created by you or by a script.\r\n ==> File also in package provided by package maintainer.\r\n   What would you like to do about it ?  Your options are:\r\n    Y or I  : install the package maintainer's version\r\n    N or O  : keep your currently-installed version\r\n      D     : show the differences between the versions\r\n      Z     : start a shell to examine the situation\r\n The default action is to keep your current version.\r\n*** dnsmasq (Y/I/N/O/D/Z) [default=N] ? dpkg: error processing package dnsmasq (--configure):\r\n end of file on stdin at conffile prompt\r\nProcessing triggers for systemd (229-4ubuntu17) ...\r\nProcessing triggers for ureadahead (0.100.0-19) ...\r\nErrors were encountered while processing:\r\n dnsmasq\r\nSTDERR: E: Sub-process /usr/bin/dpkg returned an error code (1)\r\n---- End output of [\"apt-get\", \"-q\", \"-y\", \"install\", \"dnsmasq=2.75-1ubuntu0.16.04.2\"] ----\r\nRan [\"apt-get\", \"-q\", \"-y\", \"install\", \"dnsmasq=2.75-1ubuntu0.16.04.2\"] returned 100\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/mixlib-shellout-2.2.7/lib/mixlib/shellout.rb:289:in `invalid!'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/mixlib-shellout-2.2.7/lib/mixlib/shellout.rb:276:in `error!'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/mixin/shell_out.rb:118:in `shell_out!'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/mixin/shell_out.rb:75:in `shell_out_compact!'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/mixin/shell_out.rb:94:in `shell_out_compact_timeout!'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider/package/apt.rb:134:in `run_noninteractive'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider/package/apt.rb:89:in `install_package'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider/package.rb:114:in `block (3 levels) in <class:Package>'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider/package.rb:270:in `multipackage_api_adapter'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider/package.rb:113:in `block (2 levels) in <class:Package>'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/mixin/why_run.rb:52:in `add_action'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider.rb:176:in `converge_by'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider/package.rb:112:in `block in <class:Package>'\r\n(eval):2:in `block in action_install'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider.rb:361:in `instance_eval'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider.rb:361:in `compile_and_converge_action'\r\n(eval):2:in `action_install'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/provider.rb:145:in `run_action'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/resource.rb:622:in `run_action'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/runner.rb:69:in `run_action'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/runner.rb:97:in `block (2 levels) in converge'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/runner.rb:97:in `each'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/runner.rb:97:in `block in converge'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/resource_collection/resource_list.rb:94:in `block in execute_each_resource'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/resource_collection/stepable_iterator.rb:114:in `call_iterator_block'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/resource_collection/stepable_iterator.rb:103:in `iterate'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/resource_collection/resource_list.rb:92:in `execute_each_resource'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/runner.rb:96:in `converge'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/client.rb:670:in `block in converge'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/client.rb:665:in `catch'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/client.rb:665:in `converge'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/client.rb:704:in `converge_and_save'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/client.rb:284:in `run'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application.rb:295:in `block in fork_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application.rb:283:in `fork'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application.rb:283:in `fork_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application.rb:248:in `block in run_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/local_mode.rb:44:in `with_server_connectivity'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application.rb:236:in `run_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application/client.rb:464:in `sleep_then_run_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application/client.rb:451:in `block in interval_run_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application/client.rb:450:in `loop'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application/client.rb:450:in `interval_run_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application/client.rb:434:in `run_application'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application.rb:59:in `run'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/bin/chef-client:26:in `<top (required)>'\r\n/usr/bin/chef-client:57:in `load'\r\n/usr/bin/chef-client:57:in `<main>'\r\n```", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "et304383": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6242", "title": "Notifies of the same service and action with string and symbol are treated as separate notifies and both fire", "body": "## Description\r\n\r\nSpecify two notifies, but use a symbol for the action on one and a string on the action of the other:\r\n```\r\nnotifies 'restart', 'service[httpd]', 'delayed'\r\nnotifies :restart, 'service[httpd]', 'delayed'\r\n```\r\nBoth are fired off by Chef at the end of the run.\r\n\r\n## Chef Version\r\n\r\n12.20.3\r\n\r\n## Platform Version\r\n\r\nAmazon Linux\r\n\r\n## Replication Case\r\n\r\ntest_recipe.rb:\r\n```\r\nservice \"httpd\" do\r\n  action :enable\r\nend\r\n\r\nfile '/tmp/a.txt' do\r\n  content 'content'\r\n  notifies :restart, 'service[httpd]', 'delayed'\r\nend\r\n\r\nfile '/tmp/b.txt' do\r\n  content 'content'\r\n  notifies 'restart', 'service[httpd]', 'delayed'\r\nend\r\n```\r\n\r\nRun with chef-apply:\r\n```\r\n[root@ip-10-121-64-65 ~]# chef-apply test_recipe.rb \r\n```\r\n\r\n## Client Output\r\n\r\n```\r\nRecipe: (chef-apply cookbook)::(chef-apply recipe)\r\n  * service[httpd] action enable (up to date)\r\n  * file[/tmp/a.txt] action create\r\n    - create new file /tmp/a.txt\r\n    - update content in file /tmp/a.txt from none to ed7002\r\n    --- /tmp/a.txt      2017-06-29 11:44:06.263614357 +0000\r\n    +++ /tmp/.chef-a20170629-10958-1rtoqv5.txt  2017-06-29 11:44:06.263614357 +0000\r\n    @@ -1 +1,2 @@\r\n    +content\r\n  * file[/tmp/b.txt] action create\r\n    - create new file /tmp/b.txt\r\n    - update content in file /tmp/b.txt from none to ed7002\r\n    --- /tmp/b.txt      2017-06-29 11:44:06.291614381 +0000\r\n    +++ /tmp/.chef-b20170629-10958-uh1ygp.txt   2017-06-29 11:44:06.291614381 +0000\r\n    @@ -1 +1,2 @@\r\n    +content\r\n  * service[httpd] action restart\r\n    - restart service service[httpd]\r\n  * service[httpd] action restart\r\n    - restart service service[httpd]\r\n```", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "timurb": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6238", "title": "Link resource doesn't work with action :delete when \"to\" is missing and target is a file.", "body": "## Description\r\n\r\nWhen I use `link` resource with `:delete` action and don't specify `to` parameter\r\nand a target file for some reason is plain file and not a link and not absent\r\nchef run crashes with inconcise error.\r\n\r\nIf a target file is a link or absent Chef run passes fine.\r\nIf a target file is a file and I specify `to` parameter Chef produces error which is easy to understand and that's ok. I'd expect this edge case to produce the same error.\r\n\r\n## Chef Version\r\n\r\nI was able to reproduce it for all Chef 11,12 and 13 (last stable for 13).\r\n\r\n## Platform Version\r\n\r\nUbuntu 12.04\r\n\r\n## Replication Case\r\n\r\n```\r\nlink '/foo' do\r\n  action :delete\r\nend\r\n```\r\n\r\nSave the above recipe to `link.rb` and run:\r\n```\r\ntouch /foo\r\nchef-apply link.rb\r\n```\r\n\r\nThe same error was seen for chef-client run.\r\n\r\n## Client Output\r\n\r\nThe run producer exception of `no implicit conversion of nil into String`\r\nFull stack trace https://gist.github.com/timurb/bb402d54e9f1d5577bb44ce12901e04a\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6238/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "davidlawson": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6210", "title": "knife ssh doesn't work with different identity file for gateway and node", "body": "## Description\r\n\r\nThe following command:\r\n\r\n```\r\nknife ssh 'name:<node-name>' 'sudo chef-client' --ssh-gateway <gateway-user>@<gateway-ip> --ssh-gateway-identity ~/.ssh/<gateway-identity>.pem --ssh-identity-file ~/.ssh/<node-identity>.pem --ssh-user <node-user>\r\n```\r\n\r\nattempts to use the `~/.ssh/<gateway-identity>.pem` file for both the gateway and the node. Even specifying a non-existent file for `--ssh-identity-file` does not throw a warning/error.\r\n\r\n## Chef Version\r\n\r\n```\r\nChef Development Kit Version: 2.0.12\r\nchef-client version: 13.0.118\r\ndelivery version: master (651e8c7e37fc80d6e1867a176974bf41fb08aa98)\r\nberks version: 6.1.0\r\nkitchen version: 1.16.0\r\ninspec version: 1.26.0\r\n```\r\n\r\n## Platform Version\r\n\r\nLocal: macOS 10.12.5\r\nGateway & node: Ubuntu 16.04.2 LTS\r\n\r\n## Client Output\r\n\r\n```\r\n...\r\nDEBUG: establishing connection to bastion:22\r\nDEBUG: connection established\r\n...\r\nDEBUG: trying publickey (b8:d3:68:05:39:44:54:03:22:2b:63:d3:d5:2d:7f:b4)\r\n...\r\nDEBUG: publickey succeeded (b8:d3:68:05:39:44:54:03:22:2b:63:d3:d5:2d:7f:b4)\r\n...\r\nDEBUG: Using node attribute 'fqdn' as the ssh target: ip-10-0-3-133.us-west-2.compute.internal\r\n...\r\nDEBUG: trying publickey (b8:d3:68:05:39:44:54:03:22:2b:63:d3:d5:2d:7f:b4)\r\n...\r\nERROR: all authorization methods failed (tried none, publickey)\r\nDEBUG: read 0 bytes\r\nWARNING: Failed to connect to ip-10-0-3-133.us-west-2.compute.internal -- Net::SSH::AuthenticationFailed: Authentication failed for user ubuntu@127.0.0.1@ip-10-0-3-133.us-west-2.compute.internal\r\nINFO: local forwarded connection closed\r\nDEBUG: queueing packet nr 14 type 97 len 28\r\nDEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/net-ssh-multi-1.2.1/lib/net/ssh/multi/server.rb:194:in `rescue in new_session'\r\nDEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/net-ssh-multi-1.2.1/lib/net/ssh/multi/server.rb:183:in `new_session'\r\nDEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/net-ssh-multi-1.2.1/lib/net/ssh/multi/session.rb:488:in `next_session'\r\nDEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/net-ssh-multi-1.2.1/lib/net/ssh/multi/server.rb:138:in `session'\r\nDEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/net-ssh-multi-1.2.1/lib/net/ssh/multi/session_actions.rb:36:in `block (2 levels) in sessions'\r\nDEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/logging-2.2.2/lib/logging/diagnostic_context.rb:474:in `block in create_with_logging_context'\r\n...\r\n```", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "QuantumGrizzly": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6195", "title": "chef-client silent fail with windows_service", "body": "## Description\r\n\r\nI wrote a cookbook to handle SQL Server post-installation tasks (create shared folders, change service account and execute SQL Queries). During the tests, I observed an issue where the resource windows_service makes the chef-client silently fails 50% of the time. The process is completely killed without returning any exception or error message.\r\n\r\nIf I run the chef-client again with the same conditions, the new execution may works. I am controlling for those factors at each run:\r\n- The same cookbook is run with no change made to the code\r\n- Running on the same machine (Windows Server 2012 R2 hosted on AWS EC2)\r\n- Running on the same conditions\r\n  I am executing a cleanup.ps1 script to reset the machine exactly how it was before chef run\r\n\r\nI reproduced the issue on two separate machines and with different sets of windows service:\r\n- Scenario A : MSSQL and SQLSERVERAGENT\r\n- Scenario B : AmazonSSMAgent and AWSLiteAgent\r\n\r\n## Chef Version\r\nChef Client, version 12.19.36\r\n\r\n## Platform Version\r\nWindows Server 2012 R2 Version 6.3 Build 9600\r\nOriginally built with AWS EC2\r\nWindows_Server-2012-R2_RTM-English-64Bit-Base-2017.05.10 - ami-271b6d31\r\n\r\n## Replication Case\r\n\r\nYou can reproduce the problem by using the following resources in a cookbook.\r\n\r\n```Ruby\r\n#STEP 01 - Resource before service change\r\nfile 'C:\\\\test01.txt' do\r\n  content 'Resource before service change'\r\nend\r\n\r\n#STEP 02 - Service account change\r\nwindows_service 'AmazonSSMAgent stop' do\r\n\tservice_name 'AmazonSSMAgent'\r\n\ttimeout 30\r\n\tretries 5\r\n\taction :stop\r\nend\r\n\r\nwindows_service 'AWSLiteAgent' do\r\n\tservice_name 'AWSLiteAgent'\r\n\trun_as_user \".\\\\svc-sql-new\"\r\n\trun_as_password \"Passw0rd\"\r\n\taction :restart\r\nend\r\n\r\nwindows_service 'AmazonSSMAgent' do\r\n\tservice_name 'AmazonSSMAgent'\r\n\trun_as_user \".\\\\svc-sql-new\"\r\n\trun_as_password \"Passw0rd\"\r\n\taction :restart\r\nend\r\n\r\n# STEP 03 - Resource after service change\r\nfile 'C:\\\\test02.txt' do\r\n  content 'Resource after service change'\r\nend\r\n```\r\n\r\nThe cookbook is also available in this repo.\r\nhttps://github.com/QuantumGrizzly/Chef-windows_service_issue/tree/master/cookbook_cvgx_windows2012r2-sql_postinstall\r\n\r\nJSON file I am using to run the cookbook\r\n```json\r\n{\r\n   \"run_list\":[\r\n      \"recipe[cookbook_cvgx_windows2012r2-sql_postinstall::default]\"\r\n   ]\r\n}\r\n```\r\n\r\nCommand used to execute the client\r\n```PowerShell\r\nPS C:\\chef> chef-client -l debug -j C:\\chef\\runlist_sql_post.json --logfile C:\\chef\\chef-client.log\r\n```\r\n\r\n## Client Output\r\n\r\nThe relevant output of the chef-client run or a link to a gist of the entire run, if there is one.\r\n\r\nThe debug output (chef-client -l debug) may be useful, but please link to a gist, or truncate it.\r\n\r\n### Expected behavior (happen ~50% of the time)\r\n```PowerShell\r\nPS C:\\chef> chef-client -l debug -j C:\\chef\\runlist_sql_post.json --logfile C:\\chef\\chef-client.log\r\nStarting Chef Client, version 12.19.36\r\nresolving cookbooks for run list: [\"cookbook_cvgx_windows2012r2-sql_postinstall::default\"]\r\nSynchronizing Cookbooks:\r\n  - cookbook_cvgx_windows2012r2-sql_postinstall (0.2.6)\r\nInstalling Cookbook Gems:\r\nCompiling Cookbooks...\r\nConverging 5 resources\r\nRecipe: cookbook_cvgx_windows2012r2-sql_postinstall::default\r\n  * file[C:\\test01.txt] action create\r\n    - create new file C:\\test01.txt\r\n    - update content in file C:\\test01.txt from none to f8a3c4\r\n    --- C:\\test01.txt   2017-06-02 12:44:13.000000000 -0400\r\n    +++ C:\\chef-test0120170602-5188-lunfkp.txt  2017-06-02 12:44:13.000000000 -0400\r\n    @@ -1 +1,2 @@\r\n    +Resource before service change\r\n  * windows_service[AmazonSSMAgent stop] action stop\r\n    - stop service windows_service[AmazonSSMAgent stop]\r\n  * windows_service[AWSLiteAgent] action restart\r\n    - restart service windows_service[AWSLiteAgent]\r\n  * windows_service[AmazonSSMAgent] action restart\r\n    - restart service windows_service[AmazonSSMAgent]\r\n  * file[C:\\test02.txt] action create\r\n    - create new file C:\\test02.txt\r\n    - update content in file C:\\test02.txt from none to 227efa\r\n    --- C:\\test02.txt   2017-06-02 12:44:20.000000000 -0400\r\n    +++ C:\\chef-test0220170602-5188-1v5jhas.txt 2017-06-02 12:44:20.000000000 -0400\r\n    @@ -1 +1,2 @@\r\n    +Resource after service change\r\n\r\nRunning handlers:\r\nRunning handlers complete\r\nChef Client finished, 5/5 resources updated in 12 seconds\r\nPS C:\\chef>\r\n```\r\n\r\n### Observed issue  (~50% of the time)\r\n```PowerShell\r\nPS C:\\chef> chef-client -l debug -j C:\\chef\\runlist_sql_post.json --logfile C:\\chef\\chef-client.log\r\nStarting Chef Client, version 12.19.36\r\nresolving cookbooks for run list: [\"cookbook_cvgx_windows2012r2-sql_postinstall::default\"]\r\nSynchronizing Cookbooks:\r\n  - cookbook_cvgx_windows2012r2-sql_postinstall (0.2.6)\r\nInstalling Cookbook Gems:\r\nCompiling Cookbooks...\r\nConverging 5 resources\r\nRecipe: cookbook_cvgx_windows2012r2-sql_postinstall::default\r\n  * file[C:\\test01.txt] action create\r\n    - create new file C:\\test01.txt\r\n    - update content in file C:\\test01.txt from none to f8a3c4\r\n    --- C:\\test01.txt   2017-06-02 12:36:42.000000000 -0400\r\n    +++ C:\\chef-test0120170602-4744-wm38ec.txt  2017-06-02 12:36:42.000000000 -0400\r\n    @@ -1 +1,2 @@\r\n    +Resource before service change\r\n  * windows_service[AmazonSSMAgent stop] action stop\r\n    - stop service windows_service[AmazonSSMAgent stop]\r\n  * windows_service[AWSLiteAgent] action restart\r\n    - restart service windows_service[AWSLiteAgent]\r\n  * windows_service[AmazonSSMAgent] action restartPS C:\\chef>\r\n```\r\n\r\n## Stacktrace\r\nNo stacktrace.out (chef-client fails without producing one)\r\nchef-client debug log available here:\r\n- SQL Server Service Success\r\nhttps://github.com/QuantumGrizzly/Chef-windows_service_issue/blob/master/A-MSSQL-Success/chef-client.txt\r\n\r\n- SQL Server Service Failure\r\nhttps://github.com/QuantumGrizzly/Chef-windows_service_issue/blob/master/A-MSSQL-Failure/chef-client.txt\r\n\r\n- AWS Service Success\r\nhttps://github.com/QuantumGrizzly/Chef-windows_service_issue/blob/master/B-AWS-Success/chef-client.txt\r\n\r\n- AWS Service Failure\r\nhttps://github.com/QuantumGrizzly/Chef-windows_service_issue/blob/master/B-AWS-Failure/chef-client.txt\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lbn-chef-team": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6189", "title": "chef MSI 13.1.31 fail when using custom location path", "body": "## Description\r\n\r\nOn any windows plateform, when running MSI with custom location like \"C:\\MyPath\\Programs\\opscode\", the installation of MSI fail with this message: Chef Client v13.1.31 Setup Wizard ended prematurely\r\n\r\n## Chef Version\r\n\r\nOnly with chef MSI \"stable\" release 13.1.31 x64\r\n(Working fine with 13.0.118)\r\n\r\n## Platform Version\r\nTested on Windows 2012r2 and Windows 2016\r\n\r\n## Replication Case\r\n\r\nRun MSI and change location C:\\opscode to C:\\TestAnotherPath\\Programs\\opscode\r\nThe window appears:\r\n![image](https://cloud.githubusercontent.com/assets/14806593/26620574/aa7b7872-45e3-11e7-8082-df0b5d0c6208.png)\r\n\r\n## trace of MSI\r\nWhen running msiexec /i chef-client-13.1.31-1-x64.msi INSTALLLOCATION=\"C:\\TestAnotherPath\\Programs\\opscode\" /L*V chefmsi.log\r\n\r\nHere the log content:\r\n\r\n```\r\nMSI (s) (48:48) [09:38:02:480]: Executing op: FolderCreate(Folder=C:\\TestAnotherPath\\Programs\\opscode\\chef\\,Foreign=0,SecurityDescriptor=BinaryData,)\r\nCreateFolders: Folder: C:\\TestAnotherPath\\Programs\\opscode\\chef\\\r\nMSI (s) (48:48) [09:38:02:484]: Executing op: ActionStart(Name=InstallFiles,Description=Copying new files,Template=File: [1],  Directory: [9],  Size: [6])\r\nAction 9:38:02: InstallFiles. Copying new files\r\nMSI (s) (48:48) [09:38:02:487]: Executing op: ProgressTotal(Total=192179097,Type=0,ByteEquivalent=1)\r\nMSI (s) (48:48) [09:38:02:487]: Executing op: SetTargetFolder(Folder=C:\\TestAnotherPath\\Programs\\opscode\\)\r\nMSI (s) (48:48) [09:38:02:488]: Executing op: SetSourceFolder(Folder=1\\opscode\\)\r\nMSI (s) (48:48) [09:38:02:488]: Executing op: ChangeMedia(,MediaPrompt=Please insert the disk: ,MediaCabinet=ChefClient.cab,BytesPerTick=65536,CopierType=2,ModuleFileName=C:\\Windows\\Installer\\9d82daa.msi,,,,,IsFirstPhysicalMedia=1)\r\nMSI (s) (48:48) [09:38:02:488]: Executing op: FileCopy(SourceName=chef.zip,SourceCabKey=filA11494F21FE6160B8815989A459B35D7,DestName=chef.zip,Attributes=512,FileSize=192179097,PerTick=65536,,VerifyMedia=1,,,,,CheckCRC=0,,,InstallMode=58982400,HashOptions=0,HashPart1=1744283584,HashPart2=-282386709,HashPart3=-1857956628,HashPart4=525996155,,)\r\nMSI (s) (48:48) [09:38:02:488]: File: C:\\TestAnotherPath\\Programs\\opscode\\chef.zip;\tTo be installed;\tWon't patch;\tNo existing file\r\nMSI (s) (48:48) [09:38:02:488]: Source for file 'filA11494F21FE6160B8815989A459B35D7' is compressed\r\nInstallFiles: File: chef.zip,  Directory: C:\\TestAnotherPath\\Programs\\opscode\\,  Size: 192179097\r\nMSI (s) (48:48) [09:38:05:052]: Executing op: CacheSizeFlush(,)\r\nMSI (s) (48:48) [09:38:05:052]: Executing op: ActionStart(Name=FastUnzip,Description=Extracting files, please wait...,)\r\nAction 9:38:05: FastUnzip. Extracting files, please wait...\r\nMSI (s) (48:48) [09:38:05:099]: Executing op: CustomActionSchedule(Action=FastUnzip,ActionType=3073,Source=BinaryData,Target=FastUnzip,CustomActionData=FASTZIPDIR=C:\\TestAnotherPath\\Programs\\opscode\\;FASTZIPAPPNAME=chef)\r\nMSI (s) (48:84) [09:38:05:105]: Invoking remote custom action. DLL: C:\\Windows\\Installer\\MSIE76D.tmp, Entrypoint: FastUnzip\r\nMSI (s) (48:04) [09:38:05:105]: Generating random cookie.\r\nMSI (s) (48:04) [09:38:05:109]: Created Custom Action Server with PID 1996 (0x7CC).\r\nMSI (s) (48:58) [09:38:05:165]: Running as a service.\r\nMSI (s) (48:2C) [09:38:05:170]: Hello, I'm your 32bit Elevated custom action server.\r\nSFXCA: Extracting custom action to temporary directory: C:\\Windows\\Installer\\MSIE76D.tmp-\\\r\nSFXCA: Binding to CLR version v4.0.30319\r\nCalling custom action CustomActionFastMsi!CustomActionFastMsi.CustomActions.FastUnzip\r\nStarting FastUnzip\r\nFASTZIPDIR = C:\\TestAnotherPath\\Programs\\opscode\\\r\nFASTZIPAPPNAME = chef\r\nStarting extraction\r\nException thrown by custom action:\r\nSystem.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> **System.IO.PathTooLongException: The specified path, file name, or both are too long. The fully qualified file name must be less than 260 characters, and the directory name must be less than 248 characters.**\r\n   at System.IO.PathHelper.GetFullPathName()\r\n   at System.IO.Path.NormalizePath(String path, Boolean fullCheck, Int32 maxPathLength, Boolean expandShortPaths)\r\n   at System.IO.Path.GetFullPathInternal(String path)\r\n   at ICSharpCode.SharpZipLib.Zip.FastZip.ExtractEntry(ZipEntry entry)\r\n   at ICSharpCode.SharpZipLib.Zip.FastZip.ExtractZip(Stream inputStream, String targetDirectory, Overwrite overwrite, ConfirmOverwriteDelegate confirmDelegate, String fileFilter, String directoryFilter, Boolean restoreDateTime, Boolean isStreamOwner)\r\n   at CustomActionFastMsi.CustomActions.FastUnzip(Session session)\r\n   --- End of inner exception stack trace ---\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object arguments, Signature sig, Boolean constructor)\r\n   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object parameters, Object arguments)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object parameters, CultureInfo culture)\r\n   at Microsoft.Deployment.WindowsInstaller.CustomActionProxy.InvokeCustomAction(Int32 sessionHandle, String entryPoint, IntPtr remotingDelegatePtr)\r\nCustomAction FastUnzip returned actual error code 1603 (note this may not be 100% accurate if translation happened inside sandbox)\r\nAction ended 9:38:45: InstallFinalize. Return value 3.\r\nMSI (s) (48:48) [09:38:45:448]: Note: 1: 2265 2:  3: -2147287035 \r\nMSI (s) (48:48) [09:38:45:449]: User policy value 'DisableRollback' is 0\r\nMSI (s) (48:48) [09:38:45:449]: Machine policy value 'DisableRollback' is 0\r\nMSI (s) (48:48) [09:38:45:454]: Executing op: Header(Signature=1397708873,Version=500,Timestamp=1254051010,LangId=1033,Platform=589824,ScriptType=2,ScriptMajorVersion=21,ScriptMinorVersion=4,ScriptAttributes=1)\r\nMSI (s) (48:48) [09:38:45:454]: Executing op: DialogInfo(Type=0,Argument=1033)\r\nMSI (s) (48:48) [09:38:45:465]: Executing op: DialogInfo(Type=1,Argument=Chef Client v13.1.31)\r\nMSI (s) (48:48) [09:38:45:466]: Executing op: RollbackInfo(,RollbackAction=Rollback,RollbackDescription=Rolling back action:,RollbackTemplate=[1],CleanupAction=RollbackCleanup,CleanupDescription=Removing backup files,CleanupTemplate=File: [1])\r\nAction 9:38:45: Rollback. Rolling back action:\r\nRollback: Extracting files, please wait...\r\n```\r\n\r\n## Identified Cause \r\nException has been thrown by the target of an invocation. ---> System.IO.PathTooLongException: The specified path, file name, or both are too long. The fully qualified file name must be less than 260 characters, and the directory name must be less than 248 \r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lioramilbaum": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6185", "title": "http_request - support ignore ssl verification", "body": "## Description\r\nhttp_request resource - Add support to ignore ssl verification\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/issues/5682", "title": "Feature Request - enable http_request resource to load cookies from file", "body": "Similar functionality as \"curl -b <cookies file> -c <cookies file>\"\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/issues/5552", "title": "Knife should give a useful error when the chef_server_url isn't a chef server API.", "body": "## Description\r\n\r\nRunning knife list returns unclear error\r\n\r\nBriefly describe the issue\r\n\r\n## Chef Version\r\n\r\n12.11.0\r\n\r\nTell us which version of chef-client you are using (see below for Server+ChefDK bugs).\r\n12.15.19\r\n\r\n## Platform Version\r\nUbuntu 14.04\r\n\r\nTell us which Operating System distribution and version chef-client is running on.\r\nOSX 10.12.1\r\n\r\n## Replication Case\r\n\r\nLaunched chef server with chef-server community cookbook. Self signed certificated.\r\nFetched the certificate with - knife ssl fetch\r\n\r\n## Client Output\r\n\r\nLioras-MBP:chef liora$ knife list -R /  --config config.rb \r\nERROR: /nodes: No such file or directory\r\nERROR: /data_bags: No such file or directory\r\nERROR: /clients: No such file or directory\r\nERROR: /roles: No such file or directory\r\nERROR: /users: No such file or directory\r\nERROR: /environments: No such file or directory\r\nERROR: The object you are looking for could not be found\r\nResponse: <!DOCTYPE html>\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<head>\r\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=EmulateIE7\" />\r\n  <title>Chef - 404 Not Found</title>\r\n  <link media=\"all\" rel=\"stylesheet\" type=\"text/css\" href=\"/css/all.css\" />\r\n  <!--[if lt IE 7]><link rel=\"stylesheet\" type=\"text/css\" href=\"/css/lt7.css\" /><![endif]-->\r\n</head>\r\n<body>\r\n  <div class=\"header-block\">\r\n    <div id=\"header\">\r\n      <strong class=\"logo\"><a href=\"https://www.chef.io\">Chef</a></strong>\r\n    </div>\r\n  </div>\r\n  <div id=\"wrapper\">\r\n    <div id=\"main\">\r\n      <div class=\"mybox\">\r\n        <div id=\"content\">\r\n          <h1>404 - Not Found</h1>\r\n          <p>Sorry, I can't find what you are looking for.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"footer-block\">\r\n    <div id=\"footer\">\r\n      <div class=\"mybox\">\r\n      </div>\r\n      <div class=\"footer-bottom\">\r\n        <span>&copy; 2010&thinsp;&ndash;&thinsp;2016 Chef Software, Inc. All Rights Reserved</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</body>\r\n</html>## Stacktrace\r\n\r\nPlease include the stacktrace.out output or link to a gist of it, if there is one.\r\n\r\n### NOTE: CHEF CLIENT BUGS ONLY\r\n\r\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\r\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\r\n\r\n* [Server issues](https://github.com/chef/chef-server/issues/new)\r\n* [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\r\n* Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "blackdynamite595": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6164", "title": "PSCredential object \"missing argument\"", "body": "## Description\r\n\r\nPSCredentials not working from vault\r\n\r\n## Chef Version\r\n\r\n13.1.20\r\n\r\n## Platform Version\r\n\r\nWindows Server 2012 R2\r\n\r\n## Replication Case\r\n\r\nUsername/password placed in a chef vault item\r\n\r\nCode block:\r\n\r\npowershell_script 'dns_creds' do\r\n  code <<-EOH\r\n  Set-DhcpServerDnsCredential -ComputerName \"#{node['hostname']}\" -Credential (#{dnscreds})\r\n  EOH\r\nend\r\n\r\n## Client Output\r\n\r\n================================================================================\r\nError executing action `run` on resource 'powershell_script[dns_creds]'\r\n================================================================================\r\n\r\nMixlib::ShellOut::ShellCommandFailed\r\n------------------------------------\r\nExpected process to exit with [0], but received '1'\r\n---- Begin output of \"C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoLogo -NonInteractive -NoProfile -ExecutionPolicy Bypass -InputFormat None -File \"C:/Windows/Temp/chef-script20170518-5164-1cfrqg.ps1\" ----\r\nSTDOUT:\r\nSTDERR: C:\\Windows\\Temp\\chef-script20170518-5164-1cfrqg.ps1 : Missing an argument for parameter 'Credential'. Specify a parameter of type 'System.Management.Automation.PSCredential' and try again.\r\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\r\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,chef-script20170518-5164-1cfrqg.ps1\r\n---- End output of \"C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoLogo -NonInteractive -NoProfile -ExecutionPolicy Bypass -InputFormat None -File \"C:/Windows/Temp/chef-script20170518-5164-1cfrqg.ps1\" ----\r\nRan \"C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoLogo -NonInteractive -NoProfile -ExecutionPolicy Bypass -InputFormat None -File \"C:/Windows/Temp/chef-script20170518-5164-1cfrqg.ps1\" returned 1\r\n\r\nResource Declaration:\r\n---------------------\r\n# In c:/chef/cache/cookbooks/fisher-role-dhcp-windows/recipes/default.rb\r\n\r\n 93: powershell_script 'dns_creds' do\r\n 94:   code <<-EOH\r\n 95:   Set-DhcpServerDnsCredential -ComputerName \"#{node['hostname']}\" -Credential #{dnscreds}\r\n 96:   EOH\r\n 97: end\r\n 98:\r\n\r\nCompiled Resource:\r\n------------------\r\n# Declared in c:/chef/cache/cookbooks/fisher-role-dhcp-windows/recipes/default.rb:93:in `from_file'\r\n\r\npowershell_script(\"dns_creds\") do\r\n  action [:run]\r\n  default_guard_interpreter :powershell_script\r\n  command nil\r\n  backup 5\r\n  returns 0\r\n  user nil\r\n  interpreter \"powershell.exe\"\r\n  declared_type :powershell_script\r\n  cookbook_name \"fisher-role-dhcp-windows\"\r\n  recipe_name \"default\"\r\n  code \"  Set-DhcpServerDnsCredential -ComputerName \\\"DHCPPRI\\\" -Credential \\n\"\r\n  domain nil\r\nend\r\n\r\nSystem Info:\r\n------------\r\nchef_version=13.1.20\r\nplatform=windows\r\nplatform_version=6.3.9600\r\nruby=ruby 2.4.1p111 (2017-03-22 revision 58053) [x64-mingw32]\r\nprogram_name=C:/opscode/chef/bin/chef-client\r\nexecutable=C:/opscode/chef/bin/chef-client\r\n\r\n\r\n## Stacktrace\r\n\r\nGenerated at 2017-05-18 12:46:58 -0400\r\nMixlib::ShellOut::ShellCommandFailed: powershell_script[dns_creds] (fisher-role-dhcp-windows::default line 93) had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process to exit with [0], but received '1'\r\n---- Begin output of \"C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoLogo -NonInteractive -NoProfile -ExecutionPolicy Bypass -InputFormat None -File \"C:/Windows/Temp/chef-script20170518-5164-1cfrqg.ps1\" ----\r\nSTDOUT: \r\nSTDERR: C:\\Windows\\Temp\\chef-script20170518-5164-1cfrqg.ps1 : Missing an argument for parameter 'Credential'. Specify a parameter of type 'System.Management.Automation.PSCredential' and try again.\r\n\r\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\r\n\r\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,chef-script20170518-5164-1cfrqg.ps1\r\n---- End output of \"C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoLogo -NonInteractive -NoProfile -ExecutionPolicy Bypass -InputFormat None -File \"C:/Windows/Temp/chef-script20170518-5164-1cfrqg.ps1\" ----\r\nRan \"C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoLogo -NonInteractive -NoProfile -ExecutionPolicy Bypass -InputFormat None -File \"C:/Windows/Temp/chef-script20170518-5164-1cfrqg.ps1\" returned 1\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/mixlib-shellout-2.2.7-universal-mingw32/lib/mixlib/shellout.rb:289:in `invalid!'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/mixlib-shellout-2.2.7-universal-mingw32/lib/mixlib/shellout.rb:276:in `error!'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/mixin/shell_out.rb:120:in `shell_out!'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/provider/execute.rb:58:in `block in action_run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/mixin/why_run.rb:52:in `add_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/provider.rb:202:in `converge_by'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/provider/execute.rb:56:in `action_run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/provider/script.rb:64:in `action_run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/provider/windows_script.rb:57:in `action_run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/provider/powershell_script.rb:35:in `action_run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/provider.rb:171:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/resource.rb:591:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/runner.rb:70:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/runner.rb:98:in `block (2 levels) in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/runner.rb:98:in `each'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/runner.rb:98:in `block in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/resource_collection/resource_list.rb:94:in `block in execute_each_resource'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:114:in `call_iterator_block'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:103:in `iterate'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/resource_collection/resource_list.rb:92:in `execute_each_resource'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/runner.rb:97:in `converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/client.rb:715:in `block in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/client.rb:710:in `catch'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/client.rb:710:in `converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/client.rb:749:in `converge_and_save'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/client.rb:286:in `run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/application.rb:273:in `run_with_graceful_exit_option'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/application.rb:249:in `block in run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/local_mode.rb:44:in `with_server_connectivity'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/application.rb:232:in `run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/application/client.rb:464:in `sleep_then_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/application/client.rb:451:in `block in interval_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/application/client.rb:450:in `loop'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/application/client.rb:450:in `interval_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/application/client.rb:434:in `run_application'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/application.rb:59:in `run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/bin/chef-client:26:in `<top (required)>'\r\nC:/opscode/chef/bin/chef-client:58:in `load'\r\nC:/opscode/chef/bin/chef-client:58:in `<main>'\r\n\r\n>>>> Caused by Mixlib::ShellOut::ShellCommandFailed: Expected process to exit with [0], but received '1'\r\n---- Begin output of \"C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoLogo -NonInteractive -NoProfile -ExecutionPolicy Bypass -InputFormat None -File \"C:/Windows/Temp/chef-script20170518-5164-1cfrqg.ps1\" ----\r\nSTDOUT: \r\nSTDERR: C:\\Windows\\Temp\\chef-script20170518-5164-1cfrqg.ps1 : Missing an argument for parameter 'Credential'. Specify a parameter of type 'System.Management.Automation.PSCredential' and try again.\r\n\r\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\r\n\r\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,chef-script20170518-5164-1cfrqg.ps1\r\n---- End output of \"C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoLogo -NonInteractive -NoProfile -ExecutionPolicy Bypass -InputFormat None -File \"C:/Windows/Temp/chef-script20170518-5164-1cfrqg.ps1\" ----\r\nRan \"C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoLogo -NonInteractive -NoProfile -ExecutionPolicy Bypass -InputFormat None -File \"C:/Windows/Temp/chef-script20170518-5164-1cfrqg.ps1\" returned 1\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/mixlib-shellout-2.2.7-universal-mingw32/lib/mixlib/shellout.rb:289:in `invalid!'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/mixlib-shellout-2.2.7-universal-mingw32/lib/mixlib/shellout.rb:276:in `error!'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/mixin/shell_out.rb:120:in `shell_out!'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/provider/execute.rb:58:in `block in action_run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/mixin/why_run.rb:52:in `add_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/provider.rb:202:in `converge_by'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/provider/execute.rb:56:in `action_run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/provider/script.rb:64:in `action_run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/provider/windows_script.rb:57:in `action_run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/provider/powershell_script.rb:35:in `action_run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/provider.rb:171:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/resource.rb:591:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/runner.rb:70:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/runner.rb:98:in `block (2 levels) in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/runner.rb:98:in `each'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/runner.rb:98:in `block in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/resource_collection/resource_list.rb:94:in `block in execute_each_resource'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:114:in `call_iterator_block'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:103:in `iterate'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/resource_collection/resource_list.rb:92:in `execute_each_resource'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/runner.rb:97:in `converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/client.rb:715:in `block in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/client.rb:710:in `catch'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/client.rb:710:in `converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/client.rb:749:in `converge_and_save'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/client.rb:286:in `run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/application.rb:273:in `run_with_graceful_exit_option'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/application.rb:249:in `block in run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/local_mode.rb:44:in `with_server_connectivity'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/application.rb:232:in `run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/application/client.rb:464:in `sleep_then_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/application/client.rb:451:in `block in interval_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/application/client.rb:450:in `loop'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/application/client.rb:450:in `interval_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/application/client.rb:434:in `run_application'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/lib/chef/application.rb:59:in `run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.1.20-universal-mingw32/bin/chef-client:26:in `<top (required)>'\r\nC:/opscode/chef/bin/chef-client:58:in `load'\r\nC:/opscode/chef/bin/chef-client:58:in `<main>'\r\n\r\n### NOTE: CHEF CLIENT BUGS ONLY\r\n\r\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\r\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\r\n\r\n* Requests for new or alternative functionality should be made to [feedback.chef.io](https://feedback.chef.io/forums/301644-chef-product-feedback/category/110832-chef-client)\r\n* [Chef Server issues](https://github.com/chef/chef-server/issues/new)\r\n* [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\r\n* Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "brent-at-gm": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6162", "title": "Chef 'execute' resource does not honor supplementary groups during execution of command.", "body": "## Description\r\n\r\nThe execute resource does not seem to honor supplementary groups during execution of the command.  This causes permission issues when executing a command as a user that should have the appropriate privileges through the supplementary group. This same behavior has been recorded as an issue in 2014 \"https://github.com/chef/chef/issues/2342\".\r\n\r\n## Chef Version\r\n\r\nchef-client --version\r\nChef: 12.17.44\r\n\r\n## Platform Version\r\n\r\nOracle Linux Server release 7.2\r\n\r\n## Replication Case\r\n\r\n```\r\ngroup 'group1' do\r\n  gid 20000\r\nend\r\n\r\nuser 'user1' do\r\n  comment 'user1 comment'\r\n  uid 20000\r\n  gid 20000\r\n  home '/home/user1'\r\n  shell '/bin/bash'\r\nend\r\n\r\ngroup 'group2' do\r\n  gid 20001\r\nend\r\n\r\nuser 'user2' do\r\n  comment 'user2 comment'\r\n  uid 20001\r\n  gid 20001\r\n  home '/home/user2'\r\n  shell '/bin/bash'\r\nend\r\n\r\ngroup 'group1' do\r\n  members 'user2'\r\n  append true\r\n  action :modify\r\nend\r\n\r\ndirectory '/var/tmp/testdir' do\r\n  owner 'user1'\r\n  group 'group1'\r\n  mode '0770'\r\n  recursive true\r\n  action :create\r\nend\r\n\r\nexecute 'touch a file in directory' do\r\n  command 'touch /var/tmp/testdir/testfile'\r\n  user 'user2'\r\n  group 'group2'\r\nend\r\n```\r\n\r\n## Client Output\r\n\r\nSTDERR: touch: cannot touch \u2018/var/tmp/testdir/testfile\u2019: Permission denied\r\n       ---- End output of touch /var/tmp/testdir/testfile ----\r\n       Ran touch /var/tmp/testdir/testfile returned 1\r\n\r\n\r\nThe debug output (chef-client -l debug) may be useful, but please link to a gist, or truncate it.\r\n\r\n## Shell Output\r\n\r\n[user2@host1 ~]$ touch /var/tmp/testdir/testfile\r\n\r\nExecutes with no issue outside of chef-client locally in the shell.\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6162/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "joerg": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6159", "title": "If template property local is set source may not be an array", "body": "## Description\r\n\r\nI have the use case where I have local templates (property local is set to true) and they are in a similar structure like the file specificity in chef cookbooks. According to the documentation the \"source\" property can be an Array or String, but in the case when \"local\" is set to true the source needs to be a string. The according code line is here: https://github.com/chef/chef/blob/master/lib/chef/provider/template_finder.rb#L33\r\nPlease either update the documentation or make this a feature.\r\n\r\n## Chef Version\r\n\r\nLatest chef master here on github.\r\n\r\n## Platform Version\r\n\r\nAny.\r\n\r\n## Replication Case\r\n\r\nDeploy a local template with source given as an array. First file that exists in this array should be chosen.\r\n\r\n## Client Output and Stacktrace\r\n\r\n```\r\n  * template[/tmp/kitchen/cache/jenkins-base-config/audit-trail.xml] action create\r\n\r\n    ================================================================================\r\n    Error executing action `create` on resource 'template[/tmp/kitchen/cache/jenkins-base-config/audit-trail.xml]'\r\n    ================================================================================\r\n\r\n    TypeError\r\n    ---------\r\n    no implicit conversion of Array into String\r\n\r\n    Cookbook Trace:\r\n    ---------------\r\n    /tmp/kitchen/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:78:in `run_action'\r\n    /tmp/kitchen/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:106:in `block (2 levels) in converge'\r\n    /tmp/kitchen/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:106:in `each'\r\n    /tmp/kitchen/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:106:in `block in converge'\r\n    /tmp/kitchen/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:105:in `converge'\r\n```", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "GUI": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6158", "title": "delete_resource broken for \"package\" resources", "body": "## Description\r\n\r\nCalling `delete_resource!` on `package` resources results in `Chef::Exceptions::ResourceNotFound` errors. This seems to be due to the resource having 2 different names inside chef. For example, under OpenSuse, the resource is named \"package\" in one context, but shows up as \"zypper_package\" in other contexts. Under CentOS its \"package\" or \"yum_package\". This may also impact other operating systems where the `package` resource maps to a more specific implementations.\r\n\r\n## Chef Version\r\n\r\nTested against 12.20.3 and 13.0.118\r\n\r\n## Platform Version\r\n\r\nOpenSuse Leap 42.2 and CentOS 7.3\r\n\r\n## Replication Case\r\n\r\nHere's a Vagrantfile that demonstrates the issue with a simple recipe that defines a package and then calls `delete_resource!` on that package. This example uses Chef 12.20.3 and OpenSuse Leap 42.2, but the same thing happens with Chef 13 or under CentOS.\r\n \r\n```ruby\r\nVagrant.configure(\"2\") do |config|\r\n  config.vm.box = \"bento/opensuse-leap-42.2\"\r\n  config.vm.provision :chef_apply do |chef|\r\n    chef.version = \"12.20.3\"\r\n\r\n    chef.recipe = <<-RECIPE\r\n      package \"bzip2\"\r\n      delete_resource!(:package, \"bzip2\")\r\n    RECIPE\r\n  end\r\nend\r\n```\r\n\r\n## Client Output\r\n\r\n```\r\n[2017-05-16T03:51:30+00:00] INFO: Run List is []\r\n[2017-05-16T03:51:30+00:00] INFO: Run List expands to []\r\n[2017-05-16T03:51:30+00:00] FATAL: Stacktrace dumped to /var/chef/cache/chef-stacktrace.out\r\n[2017-05-16T03:51:30+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report\r\n[2017-05-16T03:51:30+00:00] FATAL: Chef::Exceptions::ResourceNotFound: Cannot find a resource matching package[bzip2] (did you define it first?)\r\n```\r\n\r\n## Stacktrace\r\n\r\n```\r\nChef::Exceptions::ResourceNotFound: Cannot find a resource matching package[bzip2] (did you define it first?)\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.20.3/lib/chef/resource_collection/resource_list.rb:75:in `delete'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.20.3/lib/chef/resource_collection.rb:63:in `delete'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.20.3/lib/chef/dsl/declare_resource.rb:74:in `delete_resource!'\r\n/tmp/vagrant-chef-apply/recipe-5879a54cb012f9ddeb72911bfefb7efd.rb:2:in `run_chef_recipe'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.20.3/lib/chef/application/apply.rb:192:in `instance_eval'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.20.3/lib/chef/application/apply.rb:192:in `run_chef_recipe'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.20.3/lib/chef/application/apply.rb:204:in `run_application'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.20.3/lib/chef/application/apply.rb:216:in `run'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.20.3/bin/chef-apply:25:in `<top (required)>'\r\n/bin/chef-apply:57:in `load'\r\n/bin/chef-apply:57:in `<main>'\r\n```\r\n\r\nIf you change the `delete_resource!(:package, \"bzip2\")` line to `delete_resource!(:zypper_package, \"bzip2\")`, then it gets slightly further (line 64 of [ResourceCollection#delete](https://github.com/chef/chef/blob/v12.20.3/lib/chef/resource_collection.rb#L62-L65) instead of line 63), but still fails:\r\n\r\n```\r\nChef::Exceptions::ResourceNotFound: Cannot find a resource matching zypper_package[bzip2] (did you define it first?)\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.20.3/lib/chef/resource_collection/resource_set.rb:67:in `delete'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.20.3/lib/chef/resource_collection.rb:64:in `delete'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.20.3/lib/chef/dsl/declare_resource.rb:74:in `delete_resource!'\r\n/tmp/vagrant-chef-apply/recipe-248e26f76440794751686af30019a620.rb:2:in `run_chef_recipe'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.20.3/lib/chef/application/apply.rb:192:in `instance_eval'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.20.3/lib/chef/application/apply.rb:192:in `run_chef_recipe'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.20.3/lib/chef/application/apply.rb:204:in `run_application'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.20.3/lib/chef/application/apply.rb:216:in `run'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.20.3/bin/chef-apply:25:in `<top (required)>'\r\n/usr/bin/chef-apply:57:in `load'\r\n/usr/bin/chef-apply:57:in `<main>'\r\n```\r\n\r\nSo the issue seems to be that in the `ResourceList` collection, the package is only known by the name `zypper_package[bzip2]`, but in the `ResourceSet` collection, the package is only known by the name `package[bzip2]`. But the delete operation expects for the resource to exist under both collections with the same name, which is why this fails.\r\n\r\nYou can sort of see what's happening behind the scenes with this workaround of replacing the `delete_resource!` call with 2 explicit delete calls using the different names (which seems to work, but obviously isn't ideal):\r\n\r\n```\r\nrun_context.resource_collection.send(:resource_list).delete(\"zypper_package[bzip2]\")\r\nrun_context.resource_collection.send(:resource_set).delete(\"package[bzip2]\")\r\n```", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "apogrebnyak": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6135", "title": "which.rb needs to better handle absence of PATH variable", "body": "## Description\r\n\r\nThis statement\r\n\r\ndirectory \"/tmp/foo\" do\r\n  owner 'root'\r\n  group 'root'\r\n  mode '0644'\r\n  action :create\r\nend\r\n\r\nFails with very cryptic error\r\nERROR: directory[/tmp/foo] (blah::blah line 111) had an error: NoMethodError: undefined method `split' for nil:NilClass\r\n\r\nFollowing an exception trace, **Which.where** requires a PATH environment variable to be set, but fails to check if it is present.\r\n\r\nEither **Which.env_path** has to check for PATH variable existence, or **Which.where** should raise an exception that PATH is not defined\r\n\r\n## Chef Version\r\nchef-solo 13.0.118 running with packer\r\n\r\n## Platform Version\r\n\r\npacker ami build\r\n\r\n## Replication Case\r\n\r\nmake sure that PATH environment variable is unset\r\n\r\n## Client Output\r\n\r\n## Stacktrace\r\n\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/mixin/which.rb:28:in `where'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/mixin/which.rb:22:in `which'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/util/selinux.rb:68:in `selinuxenabled_path'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/util/selinux.rb:73:in `check_selinux_enabled?'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/util/selinux.rb:45:in `selinux_enabled?'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/provider/file.rb:426:in `do_selinux'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/provider/directory.rb:136:in `action_create'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/provider.rb:171:in `run_action'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/resource.rb:591:in `run_action'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/runner.rb:69:in `run_action'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/runner.rb:97:in `block (2 levels) in converge'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/runner.rb:97:in `each'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/runner.rb:97:in `block in converge'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/resource_collection/resource_list.rb:94:in `block in execute_each_resource'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/resource_collection/stepable_iterator.rb:114:in `call_iterator_block'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/resource_collection/stepable_iterator.rb:103:in `iterate'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/resource_collection/resource_list.rb:92:in `execute_each_resource'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/runner.rb:96:in `converge'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/client.rb:715:in `block in converge'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/client.rb:710:in `catch'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/client.rb:710:in `converge'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/client.rb:749:in `converge_and_save'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/client.rb:286:in `run'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/application.rb:291:in `block in fork_chef_client'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/application.rb:279:in `fork'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/application.rb:279:in `fork_chef_client'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/application.rb:244:in `block in run_chef_client'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/local_mode.rb:44:in `with_server_connectivity'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/application.rb:232:in `run_chef_client'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/application/client.rb:464:in `sleep_then_run_chef_client'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/application/client.rb:451:in `block in interval_run_chef_client'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/application/client.rb:450:in `loop'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/application/client.rb:450:in `interval_run_chef_client'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/application/client.rb:434:in `run_application'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/application.rb:59:in `run'\r\n  /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/bin/chef-client:26:in `<top (required)>'\r\n  /usr/bin/chef-client:58:in `load'\r\n  /usr/bin/chef-client:58:in `<main>'\r\n\r\n### NOTE: CHEF CLIENT BUGS ONLY\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pvandervelde": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6126", "title": "bundle install fails for chef package due to missing file", "body": "I'm trying to run bundle install to get my chef related gems installed. It works for all gems except the chef gem itself.\r\n\r\nMy gem file looks like this:\r\n\r\n    source 'https://rubygems.org' do\r\n      gem 'chef', '13.0.118'\r\n    end\r\n\r\nThe command line is:\r\n\r\n    bundle install --gemfile=\"c:\\myproject\\Gemfile\" --path \"c:\\myproject\\gems\" --binstubs=\"c:\\myproject\\gems\\bin\" --no-cache\r\n\r\nAnd the output is:\r\n\r\n    Fetching gem metadata from https://rubygems.org/.........\r\n    Fetching version metadata from https://rubygems.org/..\r\n    Resolving dependencies...\r\n    Installing public_suffix 2.0.5\r\n    Installing builder 3.2.3\r\n    Using bundler 1.12.5\r\n    Installing fuzzyurl 0.9.0\r\n    Installing mixlib-config 2.2.4\r\n    Installing ffi 1.9.18\r\n    Installing wmi-lite 1.0.0\r\n    Installing libyajl2 1.2.0 with native extensions\r\n    Installing hashie 3.5.5\r\n    Installing mixlib-log 1.7.1\r\n    Installing rack 2.0.1\r\n    Installing uuidtools 2.1.5\r\n    Installing diff-lcs 1.3\r\n    Installing erubis 2.7.0\r\n    Installing highline 1.7.8\r\n    Installing iniparse 1.4.2\r\n    Installing iso8601 0.9.1\r\n    Installing mixlib-cli 1.7.0\r\n    Installing net-ssh 4.1.0\r\n    Installing ipaddress 0.8.3\r\n    Installing plist 3.3.0\r\n    Installing systemu 2.6.5\r\n    Installing proxifier 1.0.3\r\n    Installing rspec-support 3.5.0\r\n    Installing multi_json 1.12.1\r\n    Installing net-telnet 0.1.1\r\n    Installing sfl 2.3\r\n    Installing syslog-logger 1.6.8\r\n    Installing win32-api 1.5.3\r\n    Installing addressable 2.5.1\r\n    Installing win32-process 0.8.3\r\n    Installing win32-dir 0.5.1\r\n    Installing win32-ipc 0.7.0\r\n    Installing win32-eventlog 0.6.3\r\n    Installing win32-mmap 0.4.2\r\n    Installing ffi-win32-extensions 1.0.3\r\n    Installing ffi-yajl 2.3.0 with native extensions\r\n    Installing mixlib-archive 0.4.1\r\n    Installing mixlib-authentication 1.4.1\r\n    Installing net-sftp 2.1.2\r\n    Installing net-ssh-gateway 2.0.0\r\n    Installing net-scp 1.2.1\r\n    Installing rspec-core 3.5.4\r\n    Installing rspec-expectations 3.5.0\r\n    Installing rspec-mocks 3.5.0\r\n    Installing windows-api 0.4.4\r\n    Installing mixlib-shellout 2.2.7\r\n    Installing win32-event 0.6.3\r\n    Installing win32-mutex 0.4.3\r\n    Installing win32-service 0.8.10\r\n    Installing chef-zero 13.0.0\r\n    Installing net-ssh-multi 1.2.1\r\n    Installing specinfra 2.67.9\r\n    Installing rspec_junit_formatter 0.2.3\r\n    Installing rspec-its 1.2.0\r\n    Installing rspec 3.5.0\r\n    Installing chef-config 13.0.118\r\n    Installing serverspec 2.38.0\r\n    Installing ohai 13.0.1\r\n    Installing chef 13.0.118 with native extensions\r\n\r\n    Errno::ENOENT: No such file or directory @ rb_sysopen - c:/myproject/gems/ruby/2.3.0/gems/chef-13.0.118-universal-mingw32/spec/functional/assets/yumrepo/repodata/4ac40fa3c6728c1401318e2e20a997436624e83dcf7a5f952b851ef422637773-filelists.sqlite.bz2\r\n    An error occurred while installing chef (13.0.118), and Bundler cannot continue.\r\n    Make sure that `gem install chef -v '13.0.118'` succeeds before bundling.\r\n\r\nThe error is correct, that file does not exist if I install with bundler but if I run gem install chef with the following command line it works just fine and all files are there.\r\n\r\ngem install --install-dir c:\\myproject\\gems chef -v 13.0.118\r\n\r\nMy global gem list is\r\n\r\n    *** LOCAL GEMS ***\r\n\r\n    bigdecimal (default: 1.2.8)\r\n    bundler (1.14.6)\r\n    io-console (default: 0.4.5)\r\n    json (default: 1.8.3)\r\n    psych (default: 2.1.0)\r\n    rake (12.0.0)\r\n    rdoc (default: 4.2.1)\r\n\r\nAnd my OS is Windows 10.\r\n\r\nAny ideas why this is not working the way I would expect it to? Am I missing additional gems / tools?\r\n\r\nThis was reported as bundler/bundler#5625 but was deemed more likely a chef packaging issue than a bundler issue.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rosario-mattera": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6121", "title": "Unable to use zypper_package resource on SLES 11 SP4", "body": "## Description\r\n\r\nWhen I try to use the zypper_package resource to install a rpm package on SLES 11 SP4 I get several errors.\r\nIf I try to install manually using zypper with the same options revelead in the log, I have no problems. Could you please support?\r\n\r\n## Chef Version\r\n\r\nChef-Client 13.0.123\r\n\r\n## Platform Version\r\n\r\nSLES 11 SP4\r\n\r\n## Replication Case\r\n\r\nWhen I try to use the zypper_package resource to install a rpm package on SLES 11 SP4 I get several errors.\r\n\r\nCompiled Resource:\r\n# Declared in /var/chef/cache/cookbooks/networker/recipes/default.rb:51:in `from_file'\r\n\r\nzypper_package(\"networker\") do\r\n  package_name \"networker\"\r\n  action [:install]\r\n  default_guard_interpreter :default\r\n  declared_type :zypper_package\r\n  cookbook_name \"networker\"\r\n  recipe_name \"default\"\r\n  source \"/var/chef/cache/lgtoclnt-9.1.0.4-1.x86_64.rpm\"\r\nend\r\n \r\n\r\n## Client Output\r\n\r\n```\r\n#<Mixlib::ShellOut::ShellCommandFailed: zypper_package[networker] (networker::default line 51) had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process to exit with [0], but received '3' ---- Begin output of [\"zypper\", \"--non-interactive\", \"install\", \"--auto-agree-with-licenses\"] ---- STDOUT: install (in) [options] <capability|rpm_file_uri> ... Install packages with specified capabilities or RPM files with specified location. A capability is NAME[.ARCH][OP<VERSION>], where OP is one of <, <=, =, >=, >. Command options: --from <alias|#|URI> Select packages from the specified repository. -r, --repo <alias|#|URI> Load only the specified repository. -t, --type <type> Type of package (package, patch, pattern, product, srcpackage). Default: package. -n, --name Select packages by plain name, not by capability. -C, --capability Select packages by capability. -f, --force Install even if the item is already installed (reinstall), downgraded or changes vendor or architecture. --oldpackage Allow to replace a newer item with an older one. Handy if you are doing a rollback. Unlike --force it will not enforce a reinstall. -l, --auto-agree-with-licenses Automatically say 'yes' to third party license confirmation prompt. See 'man zypper' for more details. --debug-solver Create solver test case for debugging. --no-recommends Do not install recommended packages, only required. --recommends Install also recommended packages in addition to the required. -R, --no-force-resolution Do not force the solver to find solution, let it ask. --force-resolution Force the solver to find a solution (even an aggressive one). -D, --dry-run Test the installation, do not actually install. --download Set the download-install mode. Available modes: only, in-advance, in-heaps, as-needed -d, --download-only Only download the packages, do not install. STDERR: Too few arguments. At least one package name is required. ---- End output of [\"zypper\", \"--non-interactive\", \"install\", \"--auto-agree-with-licenses\"] ---- Ran [\"zypper\", \"--non-interactive\", \"install\", \"--auto-agree-with-licenses\"] returned 3> had an error:\r\nzypper_package[networker] (networker::default line 51) had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process to exit with [0], but received '3' ---- Begin output of [\"zypper\", \"--non-interactive\", \"install\", \"--auto-agree-with-licenses\"] ---- STDOUT: install (in) [options] <capability|rpm_file_uri> ... Install packages with specified capabilities or RPM files with specified location. A capability is NAME[.ARCH][OP<VERSION>], where OP is one of <, <=, =, >=, >. Command options: --from <alias|#|URI> Select packages from the specified repository. -r, --repo <alias|#|URI> Load only the specified repository. -t, --type <type> Type of package (package, patch, pattern, product, srcpackage). Default: package. -n, --name Select packages by plain name, not by capability. -C, --capability Select packages by capability. -f, --force Install even if the item is already installed (reinstall), downgraded or changes vendor or architecture. --oldpackage Allow to replace a newer item with an older one. Handy if you are doing a rollback. Unlike --force it will not enforce a reinstall. -l, --auto-agree-with-licenses Automatically say 'yes' to third party license confirmation prompt. See 'man zypper' for more details. --debug-solver Create solver test case for debugging. --no-recommends Do not install recommended packages, only required. --recommends Install also recommended packages in addition to the required. -R, --no-force-resolution Do not force the solver to find solution, let it ask. --force-resolution Force the solver to find a solution (even an aggressive one). -D, --dry-run Test the installation, do not actually install. --download Set the download-install mode. Available modes: only, in-advance, in-heaps, as-needed -d, --download-only Only download the packages, do not install. STDERR: Too few arguments. At least one package name is required. ---- End output of [\"zypper\", \"--non-interactive\", \"install\", \"--auto-agree-with-licenses\"] ---- Ran [\"zypper\", \"--non-interactive\", \"install\", \"--auto-agree-with-licenses\"] returned 3\r\n```\r\n\r\n## Stacktrace\r\n`/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/mixlib-shellout-2.2.7/lib/mixlib/shellout.rb:289:in `invalid!'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/mixlib-shellout-2.2.7/lib/mixlib/shellout.rb:276:in `error!'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/mixin/shell_out.rb:120:in `shell_out!'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/mixin/shell_out.rb:76:in `shell_out_compact!'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/mixin/shell_out.rb:95:in `shell_out_compact_timeout!'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/provider/package/zypper.rb:143:in `zypper_package'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/provider/package/zypper.rb:106:in `install_package'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/provider/package.rb:102:in `block (3 levels) in <class:Package>'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/provider/package.rb:258:in `multipackage_api_adapter'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/provider/package.rb:101:in `block (2 levels) in <class:Package>'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/mixin/why_run.rb:52:in `add_action'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/provider.rb:202:in `converge_by'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/provider/package.rb:100:in `block in <class:Package>'\r\n(eval):2:in `block in action_install'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/provider.rb:211:in `instance_eval'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/provider.rb:211:in `compile_and_converge_action'\r\n(eval):2:in `action_install'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/provider.rb:171:in `run_action'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/resource.rb:591:in `run_action'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/runner.rb:70:in `run_action'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/runner.rb:98:in `block (2 levels) in converge'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/runner.rb:98:in `each'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/runner.rb:98:in `block in converge'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/resource_collection/resource_list.rb:94:in `block in execute_each_resource'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/resource_collection/stepable_iterator.rb:114:in `call_iterator_block'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/resource_collection/stepable_iterator.rb:103:in `iterate'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/resource_collection/resource_list.rb:92:in `execute_each_resource'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/runner.rb:97:in `converge'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/client.rb:715:in `block in converge'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/client.rb:710:in `catch'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/client.rb:710:in `converge'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/client.rb:749:in `converge_and_save'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/client.rb:286:in `run'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/application.rb:291:in `block in fork_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/application.rb:279:in `fork'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/application.rb:279:in `fork_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/application.rb:244:in `block in run_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/local_mode.rb:44:in `with_server_connectivity'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/application.rb:232:in `run_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/application/client.rb:464:in `sleep_then_run_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/application/client.rb:451:in `block in interval_run_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/application/client.rb:450:in `loop'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/application/client.rb:450:in `interval_run_chef_client'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/application/client.rb:434:in `run_application'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/lib/chef/application.rb:59:in `run'\r\n/opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.123/bin/chef-client:26:in `<top (required)>'\r\n/usr/bin/chef-client:58:in `load'\r\n/usr/bin/chef-client:58:in `<main>'`\r\n\r\n### NOTE: CHEF CLIENT BUGS ONLY\r\n\r\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\r\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\r\n\r\n* Requests for new or alternative functionality should be made to [feedback.chef.io](https://feedback.chef.io/forums/301644-chef-product-feedback/category/110832-chef-client)\r\n* [Chef Server issues](https://github.com/chef/chef-server/issues/new)\r\n* [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\r\n* Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "szymonpk": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6120", "title": "default_attribute_blacklist throws 'ERROR: Node attributes are read-only'", "body": "## Description\r\n\r\nWhen I'm trying to use [default_attribute_blacklist feature](https://docs.chef.io/attributes.html#blacklist-attributes). I'm getting `ERROR: Node attributes are read-only when you do not specify which precedence level to set. To set an attribute use code like node.default[\"key\"] = \"value\"'`\r\n\r\nI have not found similar issue report.\r\n\r\n## Chef Version\r\n\r\n13.0.118, chef.io hosted server\r\n\r\n## Platform Version\r\n\r\nUbuntu 16.04\r\n\r\n## Replication Case\r\n\r\n[I've created small cookbook](https://github.com/szymonpk/blacklist_attributes_issue) which can be run with `kitchen converge`.\r\n\r\n## Client Output\r\n\r\n    Starting Chef Client, version 13.0.118\r\n    resolving cookbooks for run list: [\"blacklist_attributes_issue::default\"]\r\n    Synchronizing Cookbooks:\r\n     - blacklist_attributes_issue (0.1.0)\r\n    Installing Cookbook Gems:\r\n    Compiling Cookbooks...\r\n    Converging 0 resources\r\n    [2017-05-04T12:29:13+00:00] WARN: Removing item foo/bar\r\n    [2017-05-04T12:29:13+00:00] WARN: Removing item foo/bar\r\n\r\n    Running handlers:\r\n    [2017-05-04T12:29:13+00:00] ERROR: Running exception handlers\r\n    [2017-05-04T12:29:13+00:00] ERROR: Running exception handlers\r\n    Running handlers complete\r\n    [2017-05-04T12:29:13+00:00] ERROR: Exception handlers complete\r\n    [2017-05-04T12:29:13+00:00] ERROR: Exception handlers complete\r\n    Chef Client failed. 0 resources updated in 01 seconds\r\n    [2017-05-04T12:29:13+00:00] FATAL: Stacktrace dumped to /tmp/kitchen/cache/chef-stacktrace.out\r\n    [2017-05-04T12:29:13+00:00] FATAL: Stacktrace dumped to /tmp/kitchen/cache/chef-stacktrace.out\r\n    [2017-05-04T12:29:13+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report\r\n    [2017-05-04T12:29:13+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report\r\n    [2017-05-04T12:29:13+00:00] ERROR: Node attributes are read-only when you do not specify which precedence level to set. To set an attribute use code like `node.default[\"key\"] = \"value\"'\r\n    [2017-05-04T12:29:13+00:00] ERROR: Node attributes are read-only when you do not specify which precedence level to set. To set an attribute use code like `node.default[\"key\"] = \"value\"'\r\n    [2017-05-04T12:29:13+00:00] FATAL: Chef::Exceptions::ChildConvergeError: Chef run process exited unsuccessfully (exit code 1)\r\n    [2017-05-04T12:29:13+00:00] FATAL: Chef::Exceptions::ChildConvergeError: Chef run process exited unsuccessfully (exit code 1)\r\n\r\n## Stacktrace\r\n\r\n    Generated at 2017-05-04 12:29:13 +0000\r\n    Chef::Exceptions::ImmutableAttributeModification: Node attributes are read-only when you do not specify which precedence level to set. To set an attribute use code like `node.default[\"key\"] = \"value\"'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/node/mixin/immutablize_hash.rb:48:in `block (2 levels) in <module:ImmutablizeHash>'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/blacklist.rb:60:in `remove_data'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/blacklist.rb:35:in `block in filter'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/blacklist.rb:33:in `each'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/blacklist.rb:33:in `filter'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/node.rb:671:in `block in data_for_save'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/node.rb:659:in `each'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/node.rb:659:in `data_for_save'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/node.rb:596:in `save'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/client.rb:590:in `save_updated_node'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/client.rb:752:in `converge_and_save'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/client.rb:286:in `run'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/application.rb:291:in `block in fork_chef_client'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/application.rb:279:in `fork'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/application.rb:279:in `fork_chef_client'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/application.rb:244:in `block in run_chef_client'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/local_mode.rb:44:in `with_server_connectivity'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/application.rb:232:in `run_chef_client'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/application/client.rb:464:in `sleep_then_run_chef_client'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/application/client.rb:451:in `block in interval_run_chef_client'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/application/client.rb:450:in `loop'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/application/client.rb:450:in `interval_run_chef_client'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/application/client.rb:434:in `run_application'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/lib/chef/application.rb:59:in `run'\r\n    /opt/chef/embedded/lib/ruby/gems/2.4.0/gems/chef-13.0.118/bin/chef-client:26:in `<top (required)>'\r\n    /opt/chef/bin/chef-client:58:in `load'\r\n    /opt/chef/bin/chef-client:58:in `<main>'\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/5433202", "body": "It looks like adding \"Host\" header is breaking some servers download, I'm not sure if it's because of server missconfiguration or commit itself. I've created [bug](https://tickets.opscode.com/browse/CHEF-5058) on jira.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/5433202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "stlng": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6098", "title": "Solaris ips_resource fails to find/install allowed package version", "body": "## Description\r\n\r\nThe Solaris ips_package resource attempts to install package versions that are not allowed for the OS version installed (when no pkg version is explicitly requested)\r\n\r\nProblem is here in get_candidate_version:\r\nhttps://github.com/chef/chef/blob/311d6263eed507dbd235b13916d4dd61adad7efe/lib/chef/provider/package/ips.rb#L51-L56\r\n\r\nUsing `pkg info -r <packagename>`  gets the latest version in the repo.\r\n\r\nA fix could be to use  `pkg list -Ha <packagename>`  instead. which returns the latest version that matches the allowed constraints.\r\n\r\nWorkaround now is to explicitly detect the OS version and hardcode the matching pkg version inside ips_package.\r\n\r\n## Chef Version\r\n12.17.44\r\n\r\n## Platform Version\r\nSolaris 11.3 SRU 13.4\r\n\r\n## Replication Case\r\n\r\n```\r\n  ips_package '/network/openssh' do\r\n     action :install\r\n   end\r\n```\r\n\r\nAttempts to install this package version:\r\n\r\n```\r\n# pkg info -r network/openssh | grep Version\r\n          Version: 7.3.0.1 (7.3p1)\r\n```\r\n\r\nWhile it should attempt to install this version:\r\n```\r\n# pkg list -aH network/openssh\r\nnetwork/openssh                                   7.2.0.2-0.175.3.9.0.3.0    --\r\n```\r\n\r\n## Client Output\r\n\r\nNo failure is reported by Chef (without debug):\r\n\r\n>          * ips_package[/network/openssh] action install\r\n>            - install version 7.3.0.1 of package /network/openssh\r\n\r\nSolaris pkg failure:\r\n\r\n>          Operation: install\r\n>            Outcome: Failed\r\n>             Reason: Constrained\r\n>             Client: pkg\r\n>                Command: /bin/pkg install -q /network/openssh@7.3.0.1\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/issues/5665", "title": "Solaris IPS packages still fail to install due to dependency conflicts.", "body": "## Description\r\nRelated to [#5456](https://github.com/chef/chef/issues/5456), [#5457](https://github.com/chef/chef/issues/5457) & [chef/omnibus#723](https://github.com/chef/omnibus/pull/723)\r\n\r\nSolaris Chef client Omnibus IPS packages are being built on Solaris 11.3 SRU 9.3.  This adds pkg dependencies to the IPS package manifest that don't exist on earlier Solaris 11 revisions.\r\n\r\n## Chef Version\r\n[12.17.44](https://packages.chef.io/files/stable/chef/12.17.44/solaris2/5.11/chef-12.17.44-1.sparc.p5p) \r\n\r\n## Platform Version\r\n\r\nSolaris 11.3 SRU 6.5 and Solaris 11.2 SRU 4.6 (tested - other revs of Solaris 11 too)\r\n\r\n## Replication Case\r\n\r\nOn Solaris 11.3 SRU 4.6\r\n```\r\n # pkg install -v -g ./chef-12.17.44-1.sparc.p5p pkg://Omnibus/developer/versioning/chef\r\nCreating Plan (Solver setup): -\r\npkg install: No matching version of developer/versioning/chef can be installed:\r\n  Reject:  pkg://Omnibus/developer/versioning/chef@12.17.44-1\r\n  Reason:  No version matching 'require' dependency shell/ksh93@93.21.1.20120801,5.11-0.175.3.9.0.3.0 can be installed\r\n    ----------------------------------------\r\n    Reject:  pkg://solaris/shell/ksh93@93.21.1.20120801-0.175.3.9.0.3.0\r\n    Reason:  This version is excluded by installed incorporation consolidation/userland/userland-incorporation@0.5.11-0.175.3.6.0.4.0\r\n    ----------------------------------------\r\n```\r\nOn Solaris 11.2 SRU 4.6\r\n\r\n```\r\n# pkg install -v -g ./chef-12.17.44-1.sparc.p5p pkg://Omnibus/developer/versioning/chef\r\nCreating Plan (Solver setup): \\\r\npkg install: No matching version of developer/versioning/chef can be installed:\r\n  Reject:  pkg://Omnibus/developer/versioning/chef@12.17.44,5.11-1:20161207T094031Z\r\n  Reason:  All versions matching 'require' dependency pkg:/shell/bash@4.1.17,5.11-0.175.3.0.0.30.0 are rejected\r\n    Reject:  pkg://solaris/shell/bash@4.1.17,5.11-0.175.3.0.0.30.0:20150821T172401Z\r\n    Reason:  This version is excluded by installed incorporation pkg://solaris/consolidation/userland/userland-incorporation@0.5.11,5.11-0.175.2.4.0.6.0:20141105T220831Z\r\n```\r\n## Comments\r\n\r\nIf the package manifest is edited (and the package regenerated) to remove dependency versions, the client installs and runs with no obvious issues on Solaris 11.3 SRU 4.6.\r\n\r\nTo install on Solaris 11.2. 'pkg:/system/library/security/crypto' requires removing from the manifest dependency list as this package is not available. Once installed chef-client still fails to run, due to missing symbols (which were only added in Solaris 11.3):\r\n\r\n```\r\nSolaris 11.2 # chef-client -v\r\nld.so.1: ruby: fatal: relocation error: file /opt/chef/embedded/lib/libruby.so.2: symbol pthread_setname_np: referenced symbol not found\r\nKilled\r\n```\r\n\r\n[Named threads added to Solaris 11.3](https://blogs.oracle.com/observatory/entry/named_threads)\r\n\r\nThis could be addressed by re-compiling the embedded Ruby on Solaris 11.2\r\n\r\nRef: Current chef-client package dependencies\r\n`\r\n$pkg contents -mg ./chef-12.17.44-1.sparc.p5p chef | grep ^depend\r\ndepend fmri=pkg:/shell/bash@4.1.17-0.175.3.0.0.30.0 type=require\r\ndepend fmri=pkg:/shell/ksh93@93.21.1.20120801-0.175.3.9.0.3.0 type=require\r\ndepend fmri=pkg:/system/core-os@0.5.11-0.175.3.9.0.4.0 type=require\r\ndepend fmri=pkg:/system/library/gcc/gcc-c-runtime@4.8.2-0.175.3.0.0.30.0 type=require\r\ndepend fmri=pkg:/system/library/math@0.5.11-0.175.3.8.0.3.0 type=require\r\ndepend fmri=pkg:/system/library/security/crypto@0.5.11-0.175.3.9.0.4.0 type=require\r\ndepend fmri=pkg:/system/library@0.5.11-0.175.3.9.0.4.0 type=require\r\ndepend fmri=pkg:/system/linker@0.5.11-0.175.3.9.0.4.0 type=require\r\n`", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/issues/5664", "title": "Solaris: Handle groupmod return codes.", "body": "## Description\r\ngroupmod on Solaris returns non-zero exit codes that need to be ignored for changes that are successful.\r\n\r\nOn Linux:\r\n```\r\n# groupadd -g 500 test\r\n# groupmod -g 500 test\r\n# echo $?\r\n0\r\n```\r\n\r\nOn Solaris:\r\n ```\r\n# groupadd -g 500 test\r\n# groupmod -g 500 test\r\nUX: groupmod: ERROR: 500 is already in use.  Choose another.\r\n# echo $?\r\n4\r\n```\r\n\r\nAll exit codes:\r\n\r\n>        0     Successful completion.\r\n>        2     Invalid  command syntax. A usage message for the groupadd command is displayed.\r\n>        3     An invalid argument was provided to an option.\r\n>        4     The gid is not unique (when -o option is not used).\r\n>        9     The group is not unique.\r\n>        10    The group database cannot be updated.\r\n\r\n## Chef Version\r\n\r\nChef: 12.17.44\r\n\r\n## Platform Version\r\n\r\nSolaris 11.3\r\n\r\n## Replication Case\r\n\r\n```\r\ngroup 'general' do\r\n  gid '100'\r\nend\r\n```\r\n\r\n## Client Output\r\n\r\n    Chef::Exceptions::Exec\r\n    ----------------------\r\n    groupmod -g '100' general returned 4, expected 0\r\n    ---- Begin output of groupmod -g '100' general ----\r\n    STDOUT: STDERR: UX: groupmod: ERROR: 100 is already in use.  Choose another.\r\n    ---- End output of groupmod -g '100' general ----\r\n\r\n## Stacktrace\r\n\r\n`/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44/lib/chef/mixin/command.rb:158:in `handle_command_failures'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44/lib/chef/mixin/command.rb:104:in `run_command_and_return_stdout_stderr'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44/lib/chef/mixin/command.rb:79:in `run_command'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44/lib/chef/provider/group/groupadd.rb:58:in `manage_group'\r\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44/lib/chef/provider/group.rb:142:in `block in action_create'\r\n`", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "whiteley": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6095", "title": "Support allow_downgrade in apt_package", "body": "## Description\r\n\r\nThe package resource has an `allow_downgrade` property that is supported for dnf/rpm/yum. Newer versions of Apt (1.1+) support this functionality along with a couple of others.\r\n\r\n```\r\n       --allow-downgrades\r\n           This is a dangerous option that will cause apt to continue without prompting if it is doing downgrades. It should not be used except in very special situations. Using it can potentially destroy your system! Configuration Item:\r\n           APT::Get::allow-downgrades. Introduced in APT 1.1.\r\n\r\n       --allow-remove-essential\r\n           Force yes; this is a dangerous option that will cause apt to continue without prompting if it is removing essentials. It should not be used except in very special situations. Using it can potentially destroy your system! Configuration Item:\r\n           APT::Get::allow-remove-essential. Introduced in APT 1.1.\r\n\r\n       --allow-change-held-packages\r\n           Force yes; this is a dangerous option that will cause apt to continue without prompting if it is changing held packages. It should not be used except in very special situations. Using it can potentially destroy your system! Configuration Item:\r\n           APT::Get::allow-change-held-packages. Introduced in APT 1.1.\r\n```\r\n\r\nI'm not sure if this can be done without causing backwards compatibility issues. I'll contribute a PR for this if I could be pointed towards a workable method to do it. Thanks!\r\n\r\n## Chef Version\r\n\r\n13.0.118\r\n\r\n## Platform Version\r\n\r\nUbuntu 16.04\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/5192", "title": "Knife search ID only option should filter result set", "body": "## Description\n\nWhen using `-i` or `--id-only`, knife search returns the entire node object and outputs only the relevant `id` or `name`. If you use `-a` or `-f` to filter the result set a hash is returned with only those values, with any search that returns a large number of objects this can be a huge difference in data transfer and subsequently time.\n\nUsing `-a` or `-f` both require knowing the proper attribute key for the index where a revised `-i` option could return only `id` and `name` and display the appropriate value. I see this come up often where newer users expect `-i` to be faster and use less memory than the standard search and have to be taught to use `-a` or `-f`.\n## Chef Version\n\n12.12.15\n## Platform Version\n\nMac OS X 10.11.6\n## Replication Case\n\n```\ntime knife search node 'name:*' -i\n```\n\nvs. \n\n```\ntime knife search node 'name:*' -a name\n```\n## Client Output\n\nN/A\n## Stacktrace\n\nN/A\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bijaykm": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6084", "title": "chef-client run throwing 500 server error", "body": "## Description\r\n\r\nWhen I am trying to run chef-client in the node I am getting 500 server error. I tried to tail the server log as well but there also I couldn't figure out the cause.\r\n\r\n\r\n## Chef Version\r\nchef client version is 12.19.36\r\n\r\n\r\n## Platform Version\r\n\r\nCentos release 6.8 (Final)\r\n\r\n## Replication Case\r\n\r\nBootstrap a node from workstation and that time also chef-client fails. \r\nAfter bootstrap also you can go to the node and run chef-client and it fails\r\n\r\n## Client Output\r\n\r\nThe relevant output of the chef-client run or a link to a gist of the entire run, if there is one.\r\n\r\nThe debug output (chef-client -l debug) may be useful, but please link to a gist, or truncate it.\r\n\r\n## Stacktrace\r\n\r\n[2017-04-24T17:31:10+05:30] DEBUG: Initiating POST to https://INHYDSPMOBCD.india.tcs.com:9981/organizations/tcs-1/reports/nodes/linux-31/runs\r\n[2017-04-24T17:31:10+05:30] DEBUG: ---- HTTP Request Header Data: ----\r\n[2017-04-24T17:31:10+05:30] DEBUG: X-Ops-Reporting-Protocol-Version: 0.1.0\r\n[2017-04-24T17:31:10+05:30] DEBUG: Content-Type: application/json\r\n[2017-04-24T17:31:10+05:30] DEBUG: Accept: application/json\r\n[2017-04-24T17:31:10+05:30] DEBUG: Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3\r\n[2017-04-24T17:31:10+05:30] DEBUG: X-Ops-Server-API-Version: 1\r\n[2017-04-24T17:31:10+05:30] DEBUG: X-OPS-SIGN: algorithm=sha1;version=1.1;\r\n[2017-04-24T17:31:10+05:30] DEBUG: X-OPS-USERID: linux-31\r\n[2017-04-24T17:31:10+05:30] DEBUG: X-OPS-TIMESTAMP: 2017-04-24T11:59:30Z\r\n[2017-04-24T17:31:10+05:30] DEBUG: X-OPS-CONTENT-HASH: wLIx4yRtE6CBKOl6O08BeEiyDFU=\r\n[2017-04-24T17:31:10+05:30] DEBUG: X-OPS-AUTHORIZATION-1: AAAAAAAAA\r\n[2017-04-24T17:31:10+05:30] DEBUG: X-OPS-AUTHORIZATION-2: AAAAAAAAA\r\n[2017-04-24T17:31:10+05:30] DEBUG: X-OPS-AUTHORIZATION-3: AAAAAAAAAAAA\r\n[2017-04-24T17:31:10+05:30] DEBUG: X-OPS-AUTHORIZATION-4: AAAAAAAAAA\r\n[2017-04-24T17:31:10+05:30] DEBUG: X-OPS-AUTHORIZATION-5: AAAAAAAAAAAAAA\r\n[2017-04-24T17:31:10+05:30] DEBUG: X-OPS-AUTHORIZATION-6: AAAAAAAAAAAAA\r\n[2017-04-24T17:31:10+05:30] DEBUG: HOST: INHYDSPMOBCD.india.tcs.com:9981\r\n[2017-04-24T17:31:10+05:30] DEBUG: X-REMOTE-REQUEST-ID: 3f8a1b09-0229-4591-83c7-a047340f269a\r\n[2017-04-24T17:31:10+05:30] DEBUG: Content-Length: 107\r\n[2017-04-24T17:31:10+05:30] DEBUG: ---- End HTTP Request Header Data ----\r\n[2017-04-24T17:31:10+05:30] DEBUG: ---- HTTP Status and Header Data: ----\r\n[2017-04-24T17:31:10+05:30] DEBUG: HTTP 1.1 500 Internal Server Error\r\n[2017-04-24T17:31:10+05:30] DEBUG: server: openresty/1.9.7.2\r\n[2017-04-24T17:31:10+05:30] DEBUG: date: Mon, 24 Apr 2017 11:59:19 GMT\r\n[2017-04-24T17:31:10+05:30] DEBUG: content-type: application/json\r\n[2017-04-24T17:31:10+05:30] DEBUG: content-length: 36\r\n[2017-04-24T17:31:10+05:30] DEBUG: connection: close\r\n[2017-04-24T17:31:10+05:30] DEBUG: ---- End HTTP Status/Header Data ----\r\n[2017-04-24T17:31:10+05:30] DEBUG: ---- HTTP Response Body ----\r\n[2017-04-24T17:31:10+05:30] DEBUG: {\"error\":[\"internal service error\"]}\r\n[2017-04-24T17:31:10+05:30] DEBUG: ---- End HTTP Response Body -----\r\n\r\n### NOTE: CHEF CLIENT BUGS ONLY\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Poohblah": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6065", "title": "run_status start time and end time are in different time zones", "body": "When using the chef-handler-mail 3rd-party gem to e-mail output of a failed chef run, I noticed that the reported start time and end time are in different time zones:\r\n\r\n```\r\nResults of Failed Chef run on ***.***.***\r\n\r\nStart time: 2017-04-14 17:12:59 UTC\r\nEnd time: 2017-04-14 11:13:41 -0600\r\n...\r\n```\r\n\r\nIt looks to me like the [template](https://github.com/kisoku/chef-handler-mail/blob/master/lib/chef/handler/mail.erb) and [reporter](https://github.com/kisoku/chef-handler-mail/blob/master/lib/chef/handler/mail.rb) for this handler are just grabbing the [`run_status` object directly from chef core](https://github.com/chef/chef/blob/master/lib/chef/run_status.rb) and implicitly calling `.to_s` on the start and end times.\r\n\r\nWe are currently using chef-client 12.17.44 and version 0.1.2 of the chef-handler-mail gem.\r\n\r\nI should also point out that the time zone of the system is not changing during the course of the chef run - the time zone is set at kickstart time, before chef is even installed/bootstrapped; moreover, this happens repeatedly after many converges, so even if chef is setting the time zone, we shouldn't see this behavior.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6065/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/issues/5344", "title": "Changing policy of node does not trigger update to policy_name and policy_group attributes", "body": "## Description\n\nAfter updating a client node's Policy and Policy Group values by editing `/etc/chef/client.rb` on the client node and running `chef-client`, the attributes `policy_name` and `policy_group` do not get updated to match the new values.\n## Chef Version\n\nClient version:\n\n```\n[hendrenj@nowhere ~]$ chef-client --version\nChef: 12.12.15\n```\n\nServer version:\n\n```\n[authoritah ~]% sudo yum info chef-server-core\nLoaded plugins: package_upload, product-id, rhnplugin, search-disabled-repos, security,\n              : subscription-manager   \nInstalled Packages\nName        : chef-server-core\nArch        : x86_64\nVersion     : 12.6.0\nRelease     : 1.el6\nSize        : 1.3 G\nRepo        : installed\nSummary     : The full stack of chef-server\nURL         : https://www.chef.io\nLicense     : Apache-2.0\nDescription : The full stack of chef-server\n```\n## Platform Version\n\nChef client:\n\n```\n[hendrenj@nowhere ~]$ cat /etc/redhat-release \nRed Hat Enterprise Linux Server release 7.2 (Maipo)\n```\n\nChef Server:\n\n```\n[authoritah ~]% cat /etc/redhat-release \nRed Hat Enterprise Linux Workstation release 6.8 (Santiago)\n```\n## Replication Case\n\nI've censored some hostnames in the example below to prevent this information from leaking outside our org.\n1. Verify that the current values for `policy_name` and `policy_group` match in `/etc/chef/client.rb` on the client node and in corresponding attributes on the Chef Server:\n   \n   ```\n   [hendrenj@nowhere ~]$ cat /etc/chef/client.rb \n   log_location     STDOUT\n   chef_server_url  \"https://authoritah.***/organizations/unixops\"\n   validation_client_name \"unixops-validator\"\n   # Using default node name (fqdn)\n   trusted_certs_dir \"/etc/chef/trusted_certs\"\n   \n   # Policyfile Settings\n   use_policyfile true\n   policy_group \"production\"\n   policy_name \"cub_policy_vault_server\"\n   ```\n   \n   ```\n   [jay@birdsnest ~]$ knife node show nowhere.*** -a policy_name\n   nowhere.***:\n     policy_name: cub_policy_vault_server\n   [jay@birdsnest ~]$ knife node show nowhere.*** -a policy_group\n   nowhere.***:\n     policy_group: production\n   [jay@birdsnest ~]$ knife node show nowhere.*** -a run_list\n   nowhere.***:\n     run_list: recipe[cub_policy_vault_server::default]\n   ```\n2. Update the values `policy_name` and `policy_group` in `/etc/chef/client.rb` on the client node.  In this example, I'm changing the Policy from `cub_policy_vault_server` to `cub_policy_nowhere.***` and the Policy Group from `production` to `dev`:\n   \n   ```\n   [hendrenj@nowhere ~]$ cat /etc/chef/client.rb \n   log_location     STDOUT\n   chef_server_url  \"https://authoritah.***/organizations/unixops\"\n   validation_client_name \"unixops-validator\"\n   # Using default node name (fqdn)\n   trusted_certs_dir \"/etc/chef/trusted_certs\"\n   \n   # Policyfile Settings\n   use_policyfile true\n   policy_group \"dev\"\n   policy_name \"cub_policy_nowhere.***\"\n   ```\n3. Run Chef.\n   \n   ```\n   [hendrenj@nowhere ~]$ sudo /usr/bin/chef-client\n   \n   [...snip...]\n   \n   Chef Client finished, 166/534 resources updated in 07 minutes 12 seconds\n   [hendrenj@nowhere ~]$ echo $?\n   0\n   ```\n4. Observe that the node attributes `policy_name` and `policy_group` on Chef Server have not been updated to match the names of the new Policy and Policy Group, though the value of `run_list` has been updated:\n   \n   ```\n   [jay@birdsnest ~]$ knife node show nowhere.*** -a policy_name\n   nowhere.***:\n     policy_name: cub_policy_vault_server\n   [jay@birdsnest ~]$ knife node show nowhere.*** -a policy_group\n   nowhere.***:\n     policy_group: production\n   [jay@birdsnest ~]$ knife node show nowhere.*** -a run_list\n   nowhere.***:\n     run_list: recipe[cub_policy_nowhere.***::default]\n   ```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5344/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bhazard": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/6037", "title": "Unable to Create UTF-8 File from Template Under Windows", "body": "## Description\r\n\r\nI am using Chef to create a UDL file on Windows 12. The file must be encoded as UTF-8, but I can't get Chef to produce anything other than ANSI.\r\n\r\nOn the workstation, the ERB template file is UTF-8 encoded, but the template file that ends up on the target nodes is ANSI when it lands in the chef cache -- so it seems the encoding is being lost during the file transfer to the target node. Both workstation and target node's ruby defaults to UTF-8 during the chef-client run, although I expect that because the source ERB template is ANSI on the target, the final file is being created as ANSI as well.  Chef Server is hosted at AWS (as a service).\r\n\r\nThe recipe is pretty straightforward:\r\n\r\n    log \"Encoding is #{Encoding.default_external}\"\r\n\r\n    template 'C:/file.udl' do\r\n      rights :full_control, 'Everyone'\r\n      action :create\r\n      source 'file.udl.erb'\r\n    end\r\n\r\nAnd the template (again UTF-8 encoded at the source but not after being transferred to the target node):\r\n\r\n    [oledb]\r\n    ; Everything after this line is an OLE DB initstring\r\n    Provider=SQLOLEDB.1;Password=MyPassword;Persist Security Info=True;User ID=MyUsername;Initial Catalog=MyCat;Data Source=MyServer\r\n\r\nThe resultant ANSI file can't be read by OLE and is confirmed to be ANSI.  Seems like a bug during losing the encoding during the file transfer, but I could imagine also that setting the encoding on the target template file could be valuable (so a feature?).\r\n\r\n## Chef Version\r\n\r\n12.19.36\r\n\r\n## Platform Version\r\n\r\nChefdk on workstation is 1.2.22; verified under Windows Server 2012 on the target; workstation is Mac OSX 10.11.6\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/6037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jeremysmitherman": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5996", "title": "WMI Access Denied on Windows, have to restart Windows Management Instrumentation Daily to get it to work", "body": "## Description\r\n\r\nGetting `OLE error code:80041003 in SWbemObjectSet\r\n  Access denied\r\nHRESULT error code:0x80020009`\r\n\r\nWhen running chef-client on some Windows Server 2012r2 nodes\r\n\r\n## Chef Version\r\n\r\n12.8\r\n\r\n## Platform Version\r\n\r\nWindows Server 2012r2\r\n\r\n## Replication Case\r\n\r\nRun chef-client.\r\n\r\n## Client Output\r\n\r\nhttps://gist.github.com/jeremysmitherman/06632ceaa300bafa20fb3882b916ba79\r\n\r\n## Stacktrace\r\n\r\nNo stacktrace.out generated\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jugatsu": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5981", "title": "`user` resource on Windows Server 2012r2/2016 Russian Edition: System Error Code: 2220", "body": "## Description\r\n\r\n`user` resource throws exception on first converge. Actualy, user IS created, but without group membership. On second chef-client run resource seems up to date.\r\n\r\n`net user test ` output (i changed codepage to 437):\r\n```cmd\r\nUser name                    test\r\nFull Name\r\nComment\r\nUser's comment\r\nCountry/region code          000 (System Default)\r\nAccount active               Yes\r\nAccount expires              Never\r\n\r\nPassword last set            31.03.2017 10:43:47\r\nPassword expires             Never\r\nPassword changeable          31.03.2017 10:43:47\r\nPassword required            Yes\r\nUser may change password     Yes\r\n\r\nWorkstations allowed         All\r\nLogon script\r\nUser profile\r\nHome directory\r\nLast logon                   Never\r\n\r\nLogon hours allowed          All\r\n\r\nLocal Group Memberships\r\nGlobal Group memberships     *\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442\r\nThe command completed successfully.\r\n```\r\n\r\n## Chef Version\r\nChef Client, version 12.19.36\r\n\r\n## Platform Version\r\nWindows Server 2012R2 Russian Edition\r\nWindows Server Hyper-V 2016 Russian Edition\r\n## Replication Case\r\n\r\n```ruby\r\nuser 'test' do\r\n  password ''yei5Ah\"\r\nend\r\n```\r\n\r\n## Client Output\r\n\r\nFirst run: https://gist.github.com/jugatsu/ca44592483e7eaaf43b9f4b5f42672c2\r\nSecond run: https://gist.github.com/jugatsu/61cf659b03d3accca21bf5fee37551df\r\n## Stacktrace\r\n\r\nhttps://gist.github.com/jugatsu/0e5bdc788065593a305fe9ede88413b4\r\n\r\n### NOTES:\r\n\r\nWindows System Error codes: https://msdn.microsoft.com/en-us/library/windows/desktop/aa370674(v=vs.85).aspx\r\n\r\n2220: The group name could not be found.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5981/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thommay": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5967", "title": "Knife SSL Check is not case insensitive", "body": "New to chef, however I believe that this could be an issue with knife. My chef-server was running on a VM with hostname \"ubuntuVM\".\r\n\r\nSome info from when this wasn't working:\r\n\r\n```\r\n$ knife ssl check\r\nConnecting to host ubuntuVM:443\r\nSuccessfully verified certificates from 'ubuntuVM'\r\n\r\n$ sudo openssl x509 -noout -in /var/opt/opscode/nginx/ca/ubuntuVM.crt -subject -issuer\r\nsubject= /C=US/O=YouCorp/OU=Operations/CN=ubuntuVM\r\nissuer= /C=US/O=YouCorp/OU=Operations/CN=ubuntuVM\r\n\r\n$ openssl s_client -connect ubuntuVM:443|tee /tmp/server-cert\r\ndepth=0 C = US, O = YouCorp, OU = Operations, CN = ubuntuVM\r\n```\r\n\r\nHowever the command was failing:\r\n```\r\n$ knife cookbook upload yum\r\nUploading yum [3.10.0]\r\nERROR: SSL Validation failure connecting to host: ubuntuvm - hostname \"ubuntuvm\" does not match the server certificate\r\nERROR: SSL Error connecting to https://ubuntuvm/bookshelf/organization-f3486b0086940c6933c77b35ce62fe8d/checksum-2aa31202e0a1433e0e49aa9cca35fad0?AWSAccessKeyId=043b6757e481c123bca417a25097da57ae19b579&Expires=1457354091&Signature=3alD0WJIR0s18f81HdWiJ/7Q2lg%3D, retry 1/5\r\n```\r\nChanging my VM hostname to 'ubuntuvm' fixed the issue:\r\n```\r\n$ knife ssl check\r\nConnecting to host ubuntuvm:443\r\nSuccessfully verified certificates from 'ubuntuvm'\r\n\r\n$ knife cookbook upload yum\r\nUploading yum [3.10.0]\r\nUploaded 1 cookbook.\r\n```\r\n\r\noriginally from @Doormouse2House as as chef/chef-dk#729", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/5961", "title": "ChefFS is heavily dependent on Users v0", "body": "Pretty much all the knife integration tests fail if you're running in v1.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/4924", "title": "It seems rather hard to add or update gem dependencies now", "body": "I made a gem point to a branch\n\n```\n14:31 ~/work/chef % bundle                                           [tm/zolo]U\nYou are trying to install in deployment mode after changing\nyour Gemfile. Run `bundle install` elsewhere and add the\nupdated Gemfile.lock to version control.\n\nIf this is a development machine, remove the /Users/thom/work/chef/Gemfile\nfreeze\nby running `bundle install --no-deployment`.\n\nYou have added to the Gemfile:\n* source: git://github.com/thommay/chefspec.git (at og_solo)\n[1]    57516 exit 16    bundle\n```\n\n```\n14:31 ~/work/chef % rake bundle:update                               [tm/zolo]U\nrake aborted!\ncannot load such file -- chef/version\n/Users/thom/work/chef/Rakefile:23:in `<top (required)>'\n(See full trace by running task with --trace)\n[1]    57481 exit 1     rake bundle:update\n```\n\n```\n14:31 ~/work/chef % bundle exec rake bundle:update                            [tm/zolo]U\nThe git source git://github.com/thommay/chefspec.git is not yet checked out. Please run `bundle install` before trying to start your application\n[1]    57492 exit 11    bundle exec rake bundle:update\n```\n\nSo eventually I did what bundle told me the first time, and did `bundle install --no-deployment`. But now I still have to run `bundle exec rake bundle:update` to get the `Gemfile.lock` properly set up. \nWhat am I missing?\n\ncc @jkeiser @randomcamel \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4924/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/chef/chef/commits/91c1ab1013eb3ca31c0a285d8395b2e5f03505a9", "message": "Merge pull request #6595 from jasonwbarnett/feature/add-action_create-to-windows_service\n\nadd create and delete actions for windows_service"}, {"url": "https://api.github.com/repos/chef/chef/commits/d83f72810c5a041d44eee89fe1c641d9ea96b626", "message": "Merge pull request #6607 from andyfeller/knife-search-doc-quote-fixes\n\nFixing missing and/or inconsistent quoting in knife search documentation"}, {"url": "https://api.github.com/repos/chef/chef/commits/f73515c50357992ec04f28ad321b0f4717764d96", "message": "Merge pull request #6670 from jasonwbarnett/remove-unused-argument\n\nRemove unused chef_server_fqdn argument: run_status"}, {"url": "https://api.github.com/repos/chef/chef/commits/4541b1bd224ca05cec66bf49acd709801d38d942", "message": "Merge pull request #6723 from vinsonlee/remove-update-rc.d-dryrun-option\n\nRemove update-rc.d -n (dryrun) option."}, {"url": "https://api.github.com/repos/chef/chef/commits/9853f36058cc389af9f011dd5e38311293deac68", "message": "Merge pull request #6742 from zanecodes/fix_knife_id_only_formatting\n\nPrevent knife search --id-only from outputting IDs in the same format\u2026"}, {"url": "https://api.github.com/repos/chef/chef/commits/9ca0a4e58b01eb3c030aeb3b61f6903649da68ec", "message": "Merge pull request #6444 from chef/knife_ssh_csshx\n\nChef 14: Remove deprecated knife ssh csshx command"}, {"url": "https://api.github.com/repos/chef/chef/commits/613d479bb4bb58e0e689b033a67a77d5effcb212", "message": "Merge pull request #6719 from chef/dash_r_solo\n\nRemove deprecated -r option for Solo mode"}, {"url": "https://api.github.com/repos/chef/chef/commits/b21adc71a35c48988f427d404d33ae812866d415", "message": "Merge pull request #6728 from chef/reindex\n\nRemove knife index rebuild command that requires Chef < 11"}, {"url": "https://api.github.com/repos/chef/chef/commits/f4a7600dfb9020ab818b609cdd4b278802bd7009", "message": "Merge pull request #6718 from chef/chef14_deprecations\n\nRemove previously deprecated mixins and Chef::DSL::Recipe::FullDSL"}, {"url": "https://api.github.com/repos/chef/chef/commits/f5050f6d9226352486a196708dff815596ec3682", "message": "Merge pull request #6753 from chef/deprecated_resources\n\nRemove erl_call and deploy resources"}, {"url": "https://api.github.com/repos/chef/chef/commits/344c92d147e58e537af0c83d6913fc8908e144dc", "message": "Merge pull request #6760 from chef/resource_spec_cleanup\n\nRemove useless class tests and cleanup specs"}, {"url": "https://api.github.com/repos/chef/chef/commits/74432a4f3e4de34c3222d3a005c7821c39586f83", "message": "Merge pull request #6758 from chef/tm/creds_int_tests\n\nEnsure we don't use credentials during integration tests"}, {"url": "https://api.github.com/repos/chef/chef/commits/2fef9c4839205903acb8983a8487625a07e351b1", "message": "Merge pull request #6749 from chef/lcg/rubocop-0.52.1\n\nprepping for rubocop 0.52.1"}, {"url": "https://api.github.com/repos/chef/chef/commits/d767381b3f2eed6893fa0405c0af9b5466c18099", "message": "Merge pull request #6759 from chef/chefconfig_travis\n\nRemove Travis config for chef-config"}, {"url": "https://api.github.com/repos/chef/chef/commits/b0b97e6602a59c8229b2baa6df8cb5acd0034f95", "message": "Merge pull request #6757 from chef/tm/branch_14\n\nstart Chef Client 14"}, {"url": "https://api.github.com/repos/chef/chef/commits/6a0217296c45b17c6c36f31a77a26d171b5f71e2", "message": "Ensure we don't use credentials during integration tests\n\nSigned-off-by: Thom May <thom@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/9dd2aac3adefaf56bbd828b058b8baafbbcc9f3d", "message": "add appveyor config\n\nSigned-off-by: Thom May <thom@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/85535df564ebe1cfee53a77e6acf56caf7f82935", "message": "start branch for 14\n\nSigned-off-by: Thom May <thom@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/f98d9f2684959e22db84121f707cf21361811cc4", "message": "Merge pull request #6751 from chef/tm/13_7_release\n\nUpdate release notes for 13.7"}, {"url": "https://api.github.com/repos/chef/chef/commits/50b4d19cc93685c55705035af04d04a01a060982", "message": "Merge pull request #6754 from chef/revert_inline\n\nRevert deprecation of use_inline_resources"}, {"url": "https://api.github.com/repos/chef/chef/commits/80839478f7afc55f040c93dc3a670419296c4cb8", "message": "Merge pull request #6752 from chef/lcg/fix-double-logging\n\nfix double-logging bug"}, {"url": "https://api.github.com/repos/chef/chef/commits/2b9557ad8d7c6362b32e5651ab911b29302ea30f", "message": "Update release notes for 13.7\n\nSigned-off-by: Thom May <thom@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/a63a2eee9a0e6accd21b91210066e92f19c473dc", "message": "Merge pull request #6725 from chef/osc_11\n\nAdd a warning that Chef 11 server support in knife user is deprecated"}, {"url": "https://api.github.com/repos/chef/chef/commits/5eacab0dd5fceabaf11cf457d43fbca96aa3c982", "message": "Merge pull request #6744 from chef/dnf_yum_repo\n\nFix yum_repository to properly reload chef's package cache post repo setup"}, {"url": "https://api.github.com/repos/chef/chef/commits/d0a68f81fcd6fe8abe12dabfaaf16d995a933a76", "message": "Merge pull request #6714 from MsysTechnologiesllc/dh/update_validation_on_idle\n\n[MSYS-735]fix validation for idle_time"}, {"url": "https://api.github.com/repos/chef/chef/commits/23d1aed242c7933f85e6258cba47b9dc4e7e4521", "message": "Merge pull request #6750 from chef/tduffield/docker-rhel6\n\nUpdate Dockerfile to use RHEL6 build"}, {"url": "https://api.github.com/repos/chef/chef/commits/8dfc33d93eb36e6ba8ef0d96519cef4787d99c58", "message": "Merge pull request #6746 from chef/shain/force_delete_tmpdir\n\nForce deletion of tmpdir with sudo"}, {"url": "https://api.github.com/repos/chef/chef/commits/1169b69745dfb6304a9043237996ecedcccbfa7d", "message": "Merge pull request #6737 from chef/ruby243\n\nUpdate to Ruby 2.4.3"}, {"url": "https://api.github.com/repos/chef/chef/commits/aaf0aa51823346d81b6baa4e5770d769f5412a4e", "message": "Merge pull request #6731 from chef/travis_speedup\n\nDon't run sudo on every travis job"}, {"url": "https://api.github.com/repos/chef/chef/commits/77fb3d14b60931d25b8edb59980a39857ad88faa", "message": "Merge pull request #6733 from chef/adamleff/bump-inspec-1.49.2\n\nBump deps to pick up InSpec v1.49.2"}, {"url": "https://api.github.com/repos/chef/chef/commits/6597d0576628696f2ac1cef6c117b5c269abd53f", "message": "Merge pull request #6627 from MsysTechnologiesllc/vasundhara/issue_6073_allow_forcing_sensitive_to_false_on_execute_or_batch_resource\n\n[MSYS-725] [chef#6073] allow forcing sensitive to false on execute and batch resource if password is set."}, {"url": "https://api.github.com/repos/chef/chef/commits/7bdb7a24519840b08b1086c68f3c5eed84f9a3e2", "message": "Merge pull request #6699 from chef/windows_path\n\nModernize windows_path resource"}, {"url": "https://api.github.com/repos/chef/chef/commits/1ae46b7fe459d9716c8518095bb27912d6de5d33", "message": "Merge pull request #6711 from chef/simplify_provides\n\nDon't check both platform_family / os in provides when platform_family will do"}, {"url": "https://api.github.com/repos/chef/chef/commits/343ae7521fd9167cdb7df46186187f0cd433cc15", "message": "Merge pull request #6722 from chef/tm/13_7\n\nbump minor to 13.7"}, {"url": "https://api.github.com/repos/chef/chef/commits/e7020f44933e22defb7985764c4471fca27b0992", "message": "bump minor\n\nSigned-off-by: Thom May <thom@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/00e227248a9cb05e90c9849f3864d8c9b7532409", "message": "Merge pull request #6717 from chef/better_resource_errors\n\nImprove property warnings in resources"}, {"url": "https://api.github.com/repos/chef/chef/commits/fbfb8abd0a0a70c54a5311215d214e8842b332dd", "message": "Merge pull request #6698 from chef/launchd\n\nModernize launchd resource"}, {"url": "https://api.github.com/repos/chef/chef/commits/cb5df13de7466ec41572d15f55f557f06c8f278a", "message": "Merge pull request #6552 from anoadragon453/master\n\nAdd an 's' for quantity of 0 cookbooks."}, {"url": "https://api.github.com/repos/chef/chef/commits/648c29c223e96545cb36e556f454ca4cf7490bcb", "message": "Merge pull request #6684 from chef/ifconfig_resource\n\nModernize the ifconfig resource"}, {"url": "https://api.github.com/repos/chef/chef/commits/f13388dca743d20cbae5051ba2b7a4a182ed8e5b", "message": "Merge pull request #6690 from chef/tm+nk/verify-command\n\nSlight improvements to validation failures"}, {"url": "https://api.github.com/repos/chef/chef/commits/b4690c58ae034207ddcbb8625e066f5327930f97", "message": "feed chefstyle\n\nSigned-off-by: Thom May <thom@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/925051d67b36a2b6c6a13c99cccf4109e99987f5", "message": "Merge pull request #6660 from chef/tm/credentials\n\nimplement credential management"}, {"url": "https://api.github.com/repos/chef/chef/commits/92671398a99bb4393650f4343c3b2a20814eb3eb", "message": "ensure that the Config object is reset before each test\n\nSigned-off-by: Thom May <thom@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/5451b2a4640e62184a615c167600cb47f7bc363b", "message": "respond to review requests\n\nSigned-off-by: Thom May <thom@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/658bb05fef37a0e50643d080cebd37bc9cb96169", "message": "Merge pull request #6683 from chef/reboot_resource\n\nModernize reboot resource and add spec"}, {"url": "https://api.github.com/repos/chef/chef/commits/57732ab92cc315c6161fbdef4ee17ceaebffc656", "message": "Specify a profile on the command line\n\nSigned-off-by: Thom May <thom@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/5660d0ebf249794f1591749f0953eccdf0658040", "message": "Merge pull request #6686 from chef/msu_and_cab_defaults\n\nFix bugs in handling 'source'  in msu_package and cab_package"}, {"url": "https://api.github.com/repos/chef/chef/commits/d390c679654a92511f67e0a6fdebd211d5c84426", "message": "fixup! implement credential management"}, {"url": "https://api.github.com/repos/chef/chef/commits/7111d753eb2596e7295212752b3f08150ff65f90", "message": "ensure we set up the raw key correctly\n\nSigned-off-by: Thom May <thom@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/1c487ab5977446746f9b389e429707ec8142b063", "message": "Merge pull request #6677 from chef/fedora_travis\n\nRemove the ciphers that openSSH 7.6 doesn't support"}, {"url": "https://api.github.com/repos/chef/chef/commits/8c9cc06ee3d0a8abe4984a88882211e63fd86b75", "message": "Merge pull request #6669 from chef/schisamo/update-codeowners\n\nUpdate CODEOWNERS file"}, {"url": "https://api.github.com/repos/chef/chef/commits/569841d88cdfa690dfa76af1bbbccff2746fe707", "message": "Generate a credentials file\n\nSigned-off-by: Thom May <thom@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/14cf20d2198eae4d3b0e83fce882bcf4ab61348e", "message": "Merge pull request #6658 from chef/better_issues\n\nUse comments in the github issue template"}, {"url": "https://api.github.com/repos/chef/chef/commits/65109e8b87c0493b76d64622b8e57679b7b909d2", "message": "implement credential management\n\nSigned-off-by: Thom May <thom@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/3b13b5c54d88c6c16421c5eae081e3223b3576a1", "message": "Merge pull request #6655 from chef/tm/fix_chefstyle\n\nFix sneaky chefstyle violations"}, {"url": "https://api.github.com/repos/chef/chef/commits/a2adcf97ab0f55260d995ea9d2d5fed0654f44e1", "message": "Fix sneaky chefstyle violations\n\nSigned-off-by: Thom May <thom@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/73b2128f6d980c3632fb6bd33931ebef261f61e9", "message": "Merge pull request #6636 from EmFl/patch-1\n\nEnsure data bags names can contain reserved words"}, {"url": "https://api.github.com/repos/chef/chef/commits/1bcb012aa0905c055730972f1cab17cbbb4daf7c", "message": "Merge pull request #6631 from chef/jsinha/fix_svcadm\n\nSolaris: Fix svcadm clear to only run in maintenance state"}, {"url": "https://api.github.com/repos/chef/chef/commits/b00e7a2b0979c51d16b10e2edb71a651671ed351", "message": "Merge pull request #6632 from chef/lcg/node-map-speedup\n\nspeedup node_map get and set operations"}], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6678", "title": "Experiment with using CircleCI rather than travis", "body": null, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/pulls/6070", "title": "[On Hold] fix lazy loading of cookbooks", "body": "#6051", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/45229", "body": "Should be CouchDB.new, right?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/45229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/107027", "body": "I think you were aiming for \"retries\"  rather than \"retryies\" here dan :)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/107027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "keyrage": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5951", "title": "powershell_script guard should default the user and password fields to the script resource", "body": "## Description\r\n\r\nThe error\r\n\r\n\"Mixlib::ShellOut::InvalidCommandOption: You must supply both a username and password when supplying a user in windows'\r\nOccurs when a user and password are defined in a powershell_script resource and in which a guard is set. Removing the guard from the resource removes the error.\r\n\r\n## Chef Version\r\n\r\nOccurs in 12.19.36 (Haven't tried older clients)\r\n\r\n## Platform Version\r\nTested on Windows Server 2012 R2\r\n\r\n## Replication Case\r\n\r\n\tpowershell_script 'SQL setup' do\r\n\t\tcode <<-EOH\r\n\t\t\t$SQL_Server_ISO_Drive_Letter = (gwmi -Class Win32_LogicalDisk | Where-Object {$_.VolumeName -eq \"SQLServer\"}).DeviceID\r\n\t\t\tcd $SQL_Server_ISO_Drive_Letter\\\\\r\n\t\t\t$SQL_Install_Cmd=.\\\\setup.exe #{setup_args}\r\n\t\t\t$SQL_Install_Cmd>$env:TEMP\\\\sqlinstall.log\r\n\t\tEOH\r\n\t\ttimeout 7200\r\n\t\taction :run\r\n\t\tguard_interpreter :powershell_script\r\n\t\tnot_if \"if (get-service -name \\\"#{defaultinstance}\\\"){$true}else{$false}\"\r\n\t\tsensitive false\r\n\t\tuser 'azure'\r\n\t\tpassword 'P2ssw0rd'\r\n\tend\r\n\r\n## Client Output\r\n\r\nMixlib::ShellOut::InvalidCommandOption\r\n --------------------------------------\r\npowershell_script[SQL setup] (C:/Users/azure/AppData/Local/Temp/kitchen/cache/cookbooks/poal_sqlserver/resources/sql2012.rb line 138) had an error: Mixlib::ShellOut::InvalidCommandOption: powershell_script[Guard resource] (dynamically defined) had an error: Mixlib::ShellOut::InvalidCommandOption: You must supply both a username and password when supplying a user in windows", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mynamewastaken": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5950", "title": "knife bootstrap fails on ssh connection with Errno::ECONNRESET", "body": "## Description\r\n\r\n`knife bootstrap` fails with `ERROR: Errno::ECONNRESET: Connection reset by peer - recvfrom(2)` after I enter my credentials when trying to bootstrap a node. I'm trying to bootstrap from a Fedora 25 node to a Centos 7 node. Firewall is disabled on both nodes, and selinux was temporarily set to permissive during testing on remote Centos 7 node.\r\n\r\nI can manually ssh to this node without problems. I can also do a `net-ssh::Start` in an `irb` session to connect as well, so I think this is an issue with `knife bootstrap`.\r\n\r\nIn the ssh logs on the bootstrap node side, I see an error about 'Bad packet length 292028.' I can consistently trigger that error log message with the `knife bootstrap` attempts.\r\n\r\n## Chef Version\r\n\r\nThis happens with my initial chefdk version 1.2.22 as well as the version below which I upgraded to, to try and fix the issue:\r\n\r\n```chef -v\r\nChef Development Kit Version: 1.3.23\r\nchef-client version: 12.19.36\r\ndelivery version: master (efc4cb152d4f423b8dec781ba4d00f032c4881e0)\r\nberks version: 5.6.3\r\nkitchen version: 1.16.0\r\n```\r\n\r\n## Platform Version\r\n\r\nFedora 25 on Chef workstation (chefdk 1.3.23), Centos 7 on remote node.\r\n\r\n## Replication Case\r\n\r\n`knife bootstrap root@$host -N $host.$domain -y` This instantly fails with ECONNRESET\r\n\r\n## Client Output\r\n\r\n[gist for `knife bootstrap` output.](https://gist.github.com/mynamewastaken/6d538044714e06c8809a7c7fc33f0374)\r\n[logs for sshd on the bootstrap node.](https://gist.github.com/mynamewastaken/0cf3ec86b320eaf0049a30a96f68c9dd)\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "carguel": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5944", "title": "remote_file does not consider certificates stored under /etc/chef/trusted_certificates", "body": "## Description\r\n\r\nWhen using remote_file to download a file from a HTTPs server with a custom CA signed certificate, the CA Certificate stored under /etc/chef/trusted_certificates is not considered.\r\nTherefore the download failed with the following error message:\r\n\r\n```\r\nremote_file[/var/chef/cache/ssha-0.0.3.gem] (common::_ldap_gems line 19) had an error: OpenSSL::SSL::SSLError: SSL Error connecting to https://srv.local:8443/packages-repo/gems/ssha-0.0.3.gem - SSL_connect returned=1 errno=0 state=error: certificate verify failed\r\n```\r\nCurrently, it seems that to allow this verification to be successful, the CA certificate shall be included in /opt/chef/embedded/ssl/certs/cacert.pem \r\n\r\n## Chef Version\r\n12.19.36\r\n\r\n## Platform Version\r\n\r\nRHEL 7", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "axelrtgs": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5931", "title": "Missing output from systemd-analyze makes troubleshooting impossibly hard", "body": "## Description\r\n\r\nMissing output from systemd-analyze makes troubleshooting impossibly hard\r\n\r\n## Chef Version\r\n\r\nchef-client 12.19.36\r\n\r\n## Platform Version\r\n\r\nUbuntu 16.04\r\n\r\n## Replication Case\r\n\r\ncreate a systemd unit with invalid data, systemd-analyze will fail but chef will only indicate failure with no help of where, the systemd-analyze output would be very helpful for troubleshooting issues as it contains the exact errors.\r\n\r\n## Client Output\r\n\r\nERROR: systemd_unit[app.service] (WebApps::app line 85) had an error: Chef::Exceptions::ValidationFailed: file[/etc/systemd/user/app.service] (dynamically defined) had an error: Chef::Exceptions::ValidationFailed: Proposed content for /etc/systemd/user/app.service failed verification #<Chef::Resource::File::Verification:0x00000004f19fb0>\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sekrett": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5927", "title": "FreeBSD port should support configuring options", "body": "## Description\r\n\r\nOn FreeBSD it is possible to select options for a port (package) and compile it respectively but Chef does not support configuring that options. There is a `freebsd` cookbook which does that but that functionality should be moved to Chef core as @tas50 tells. There is a pull request you could use for that: https://github.com/chef-cookbooks/freebsd/pull/29\r\n\r\n## Chef Version\r\n\r\nLatest\r\n\r\n## Platform Version\r\n\r\nFreeBSD", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/issues/4959", "title": "Wrong mount defaults on FreeBSD (/etc/fstab: Inappropriate file or format)", "body": "## Description\n\n/etc/fstab must de written in a different way on FreeBSD\n## Chef Version\n\n12.10.24\n## Platform Version\n\nbento/FreeBSD-10.3\n## Replication Case\n\n```\ndirectory '/source'\ndirectory '/destination'\nmount '/destination' do\n  device '/source'\n  fstype 'nullfs'\n  pass 0\n  action [:mount, :enable]\nend\n```\n## Client Output\n\nIt adds:\n`/source /destination nullfs defaults 0 0`\n\nThis does not mount after reboot. It should be:\n`/source /destination nullfs rw 0 0`\n\nSo `defaults` does not work on FreeBSD and must be replaced.\n## Workaround\n\nAdd `options 'rw'`.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/issues/4895", "title": "Service does not reload on FreeBSD", "body": "## Description\n\nService does not reload on FreeBSD\n## Chef Version\n\nchef-client 12.9.38\n## Platform Version\n\nbento/FreeBSD-10.3\n## Replication Case\n\nThis code does not reload nginx, but if I add `reload_command`, it works:\nservice 'nginx' do\n  action [:reload]\n  #reload_command 'service nginx reload'\nend\n\nIt is easy to verify if nginx has reloaded or not. I put bad paths to nginx.conf manually and then run chef-client to fix the paths and reload. I need to specify `reload_command` to make it work.\n## Client Output\n\nOutput appears to be normal, but reload does not occur.\n[2016-05-05T12:20:16+00:00] INFO: Processing service[nginx] action reload (tghost::nginx line 79)\n[2016-05-05T12:20:16+00:00] INFO: service[nginx] reloaded\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bathenme": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5839", "title": "directory resource for windows", "body": "## Description\r\n\r\ndirectory resource for windows dont have \"list \" permissions option.\r\n\r\n## Chef Version\r\n\r\n12.0\r\n\r\n## Platform Version\r\n\r\nwindows\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sterago": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5823", "title": "Use of the Debian service provider causes unnecessary systemd daemon reload", "body": "## Description\r\n\r\nI noticed that on a subset of chef nodes in my company's infrastructure, on every chef-client run, the systemd daemon is reloaded, in some cases with undesirable side effects (e.g. swap partition remounting).\r\nDebugging the issue, it looks like the reload happens in correspondence of two service resources (one is with action `start` and one with action `enable`) even though both are up-to-date. \r\nThose resources are not doing anything fancy, and just declare the usage of `Chef::Provider::Service::Debian` as the provider for the service when the node is a debian machine (https://github.com/sous-chefs/apache2/blob/master/recipes/default.rb#L208)\r\n\r\nThis provider's `get_priority` method uses the command `/usr/sbin/update-rc.d -n -f <service_name> remove` which is supposed to be a dry-run command, but using strace on a Debian 8.7 I noticed that it causes the systemd reload:\r\n\r\n```\r\nroot@staging:~# strace -f -e execve /usr/sbin/update-rc.d -n -f apache2 remove\r\nexecve(\"/usr/sbin/update-rc.d\", [\"/usr/sbin/update-rc.d\", \"-n\", \"-f\", \"apache2\", \"remove\"], [/* 18 vars */]) = 0\r\nProcess 11096 attached\r\n[pid 11096] execve(\"/sbin/insserv\", [\"/sbin/insserv\", \"-n\", \"-f\", \"-r\", \"apache2\"], [/* 18 vars */]) = 0\r\ninsserv: remove service /etc/init.d/../rc0.d/K01apache2\r\ninsserv: remove service /etc/init.d/../rc1.d/K01apache2\r\ninsserv: remove service /etc/init.d/../rc2.d/S02apache2\r\ninsserv: remove service /etc/init.d/../rc3.d/S02apache2\r\ninsserv: remove service /etc/init.d/../rc4.d/S02apache2\r\ninsserv: remove service /etc/init.d/../rc5.d/S02apache2\r\ninsserv: remove service /etc/init.d/../rc6.d/K01apache2\r\ninsserv: dryrun, not creating .depend.boot, .depend.start, and .depend.stop\r\n[pid 11096] +++ exited with 0 +++\r\n--- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11096, si_uid=0, si_status=0, si_utime=1, si_stime=0} ---\r\nProcess 11097 attached\r\n[pid 11097] execve(\"/usr/local/sbin/systemctl\", [\"systemctl\", \"daemon-reload\"], [/* 18 vars */]) = -1 ENOENT (No such file or directory)\r\n[pid 11097] execve(\"/usr/local/bin/systemctl\", [\"systemctl\", \"daemon-reload\"], [/* 18 vars */]) = -1 ENOENT (No such file or directory)\r\n[pid 11097] execve(\"/usr/sbin/systemctl\", [\"systemctl\", \"daemon-reload\"], [/* 18 vars */]) = -1 ENOENT (No such file or directory)\r\n[pid 11097] execve(\"/usr/bin/systemctl\", [\"systemctl\", \"daemon-reload\"], [/* 18 vars */]) = -1 ENOENT (No such file or directory)\r\n[pid 11097] execve(\"/sbin/systemctl\", [\"systemctl\", \"daemon-reload\"], [/* 18 vars */]) = -1 ENOENT (No such file or directory)\r\n[pid 11097] execve(\"/bin/systemctl\", [\"systemctl\", \"daemon-reload\"], [/* 18 vars */]) = 0\r\n[pid 11097] +++ exited with 0 +++\r\n--- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11097, si_uid=0, si_status=0, si_utime=0, si_stime=0} ---\r\n+++ exited with 0 +++\r\n```\r\n\r\n## Chef Version\r\n\r\n12.18.31\r\n\r\n## Platform Version\r\n\r\nDebian GNU/Linux 8.7 (jessie)\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kareed44": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5799", "title": "Client.rb Truncates env Resource in Windows", "body": "## Description\r\n\r\nIf you try to create proxy environment variables in windows using the 'env' resourse and you have also configured client.rb with the same proxy override attributes, the latter will prevent the former. The chef client process will apply the overrides from client.rb as process level environment variables, then 'env' checks for existence, and returns with no action because the Ruby process returns a value from ENV[\"HTTP_PROXY\"].\r\n\r\n## Chef Version\r\n\r\nChef Server 12.7, Chef Client 12.15.19\r\n\r\n## Platform Version\r\n\r\nWindows Server 2012 R2\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5799/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "NimishaS": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5797", "title": "dsc_resource throwing error with forward slash in the path attribute", "body": "## Description\r\n\r\nIf forward slash is give in the path attribute of `dsc_resource`, it throws the following error:\r\n```\r\nThe specified Name (7-Zip 15.14 (x64 edition)) and IdentifyingNumber ({23170F69-40C1-2702-1514-000001000000}) do not\r\nmatch Name () and IdentifyingNumber () in the MSI file\r\n```\r\n\r\n## Platform Version\r\n\r\nUbuntu 14.04\r\n\r\n## Replication Case\r\n1. The recipe below contains forward slash in the path:\r\n```\r\ndsc_resource '7-Zip 15.14 (x64 edition)' do\r\n       resource                :package\r\n       property                :ensure, 'Present'\r\n       property                :name, '7-Zip 15.14 (x64 edition)'\r\n       property                :path, \"C:/Users/myuser/7z1514-x64.msi\"\r\n       property                :productid, '23170F69-40C1-2702-1514-000001000000'\r\nend\r\n```\r\nIf this is run, it throws `IdentifyingNumber` mismatch error even though the `productid` provided in the dsc_resource is correct.\r\n```\r\nThe specified Name (7-Zip 15.14 (x64 edition)) and IdentifyingNumber ({23170F69-40C1-2702-1514-000001000000}) do not\r\nmatch Name () and IdentifyingNumber () in the MSI file\r\n```\r\n\r\n2. However the following recipes work successfully:\r\n```\r\ndsc_resource '7-Zip 15.14 (x64 edition)' do\r\n       resource                :package\r\n       property                :ensure, 'Present'\r\n       property                :name, '7-Zip 15.14 (x64 edition)'\r\n       property                :path, 'C:\\Users\\btm_000\\Downloads\\7z1514-x64.msi'\r\n       property                :productid, '23170F69-40C1-2702-1514-000001000000'\r\nend\r\n\r\ndsc_resource '7-Zip 15.14 (x64 edition)' do\r\n       resource                :package\r\n       property                :ensure, 'Present'\r\n       property                :name, '7-Zip 15.14 (x64 edition)'\r\n       property                :path, \"C:\\\\Users\\\\btm_000\\\\Downloads\\\\7z1514-x64.msi\"\r\n       property                :productid, '23170F69-40C1-2702-1514-000001000000'\r\nend\r\n```\r\n\r\n## Client Output\r\n\r\nhttps://gist.github.com/harikesh-kolekar/db385bc528e1afc2f5260fd1ec6bcdd9\r\n\r\n\r\n### NOTE: \r\nWe need to investigate if DSC typically does not take forward slashes, and if so we probably need to put ChefConfig::PathHelper.cleanpath somewhere in the dsc_resource\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/chef/chef/commits/93cc046e9afad04f41133376e7ba07aee994784d", "message": "invalid date error on windows_task with frequency :on_logon\n\nSigned-off-by: nimisha <nimisha.sharad@msystechnologies.com>"}], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6687", "title": "[MSYS-724] Chef::Util::Windows::LogonSession should allow having only the prescribed users permissions", "body": "### Description\r\n\r\nWhile finishing https://github.com/chef/chef/pull/5832,  we changed the logon type in `Chef::Util::Windows::LogonSession` from `LOGON32_LOGON_NETWORK` to `LOGON32_LOGON_NEW_CREDENTIALS` to facilitate passing credentials to a remote system without logging in locally using those credentials, to handle a use case where those credentials were valid on the remote system but not on the local system.\r\nHowever, this means that `Chef::Mixin::UserContext.with_user_context` might log on to the local system as a new user but continue using the old users token and thus the old/original users privileges.\r\n`Chef::ReservedNames::Win32::Security.has_admin_privileges?` is really looking to see if we're elevated, not 'admin' per se. We should print some debug information about the token like if it is elevated. With this information you'll see that when we run chef from an elevated shell, we still have an elevated token even if we run `has_admin_privileges?` from inside `with_user_context` using a regular user.\r\nThe above functionality was masked by this line in the before block in ```spec\\functional\\win32\\security_spec.rb:\r\nallow(Chef::ReservedNames::Win32::Security).to receive(:OpenProcessToken).and_return(true)```\r\nThis caused the 'running as non admin user' test to pass even though it should fail. Fixing this might be hard, because a regular user cannot use much of the functionality in `has_admin_privileges`, maybe not even calling `open_current_process_token`. One solution might be catching the access denied results and returning false, presuming that if we get an access denied in this area then we aren't elevated.\r\n\r\nNote that we reverted the functional tests in https://github.com/chef/chef/pull/6588 due odd behavior on Appveyor.\r\n\r\n### Acceptance Criteria\r\n\r\n- [x] able to run a ruby block with only the privileges of another user, while preserving the functionality needed by remote_file.\r\n- [x] `Chef::ReservedNames::Win32::Security.has_admin_privileges?` prints a debug message that contains token elevation information.\r\n- [x] The Chef::Win32::Security functional test for running as a non-admin user that was reverted is returned and does not return a false positive.\r\n- [x] The functional tests pass on appveyor or we have a documented reason to exclude them on appveyor. \r\n\r\n### Check List\r\n\r\n- [x] New functionality includes tests\r\n- [x] All tests pass\r\n- [ ] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [x] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zfjagann": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5780", "title": "pacman_package won't install multiple packages", "body": "## Description\r\n\r\n`pacman_package` fails if you give it an array in `package_name`\r\n\r\n## Chef Version\r\n\r\n```\r\n$ chef --version\r\nChef Development Kit Version: 1.1.16\r\nchef-client version: 12.17.44\r\ndelivery version: master (83358fb62c0f711c70ad5a81030a6cae4017f103)\r\nberks version: 5.2.0\r\nkitchen version: 1.14.2\r\n```\r\n\r\n## Platform Version\r\n\r\nArch Linux\r\n\r\n## Replication Case\r\n\r\n```\r\npacman_package 'tools' do\r\n  package_name ['tmux', 'git', 'hg']\r\n  action :upgrade\r\nend\r\n```\r\n\r\n## Client Output\r\n\r\n    ================================================================================\r\n    Error executing action `upgrade` on resource 'package[x11 utils]'\r\n    ================================================================================\r\n\r\n    TypeError\r\n    ---------\r\n    no implicit conversion of Array into String\r\n\r\n    Resource Declaration:\r\n    ---------------------\r\n    # In /etc/chef/local-mode-cache/cache/cookbooks/base/recipes/x11.rb\r\n\r\n     51: package 'x11 utils' do\r\n     52:   package_name x_packages + fonts\r\n     53:   action :upgrade\r\n     54: end\r\n     55:\r\n\r\n    Compiled Resource:\r\n    ------------------\r\n    # Declared in /etc/chef/local-mode-cache/cache/cookbooks/base/recipes/x11.rb:51:in `from_file'\r\n\r\n    package(\"x11 utils\") do\r\n      package_name [\"xorg-server\", \"xorg-xinit\", \"xorg-xrandr\", \"arandr\", \"pulseaudio\", \"alsa-utils\", \"ttf-arphic-ukai\", \"ttf-arphic-uming\", \"ttf-baekmuk\", \"ttf-bitstream-vera\", \"ttf-cheapskate\", \"ttf-dejavu\", \"ttf-freebanglafont\", \"ttf-freefont\", \"ttf-hannom\", \"ttf-indic-otf\", \"ttf-junicode\", \"ttf-khmer\", \"ttf-linux-libertine\", \"ttf-mph-2b-damase\", \"ttf-sazanami\", \"ttf-tibetan-machine\", \"ttf-ubraille\", \"ttf-anonymous-pro\", \"ttf-droid\",\"ttf-fira-mono\", \"ttf-fira-sans\", \"ttf-gentium\", \"ttf-hanazono\", \"ttf-inconsolata\", \"ttf-ionicons\", \"ttf-liberation\", \"ttf-linux-libertine-g\", \"ttf-symbola\", \"ttf-ubuntu-font-family\"]\r\n      action [:upgrade]\r\n      retries 0\r\n      retry_delay 2\r\n      default_guard_interpreter :default\r\n      declared_type :package\r\n      cookbook_name \"base\"\r\n      recipe_name \"x11\"\r\n    end\r\n\r\n[full output](https://gist.github.com/zfjagann/c6a011d0e7a328fbafabcd594c726031)\r\n\r\n## Stacktrace\r\n\r\n[full output, including stacktrace](https://gist.github.com/zfjagann/c6a011d0e7a328fbafabcd594c726031)", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/issues/5345", "title": "Chef-client should support multiple -j options", "body": "## Description\n\nFeature request: Chef-client should support multiple `-j`/`--json-attributes` options and merge them.\n## Chef Version\n\n```\n$ chef --version\nChef Development Kit Version: 0.17.17\nchef-client version: 12.13.37\ndelivery version: master (f68e5c5804cd7d8a76c69b926fbb261e1070751b)\nberks version: 4.3.5\nkitchen version: 1.11.1\n```\n## Platform Version\n\nArch Linux, CentOS 7\n## Replication Case\n\n```\n~/chef $ cat a.json \n{\n  \"my_cookbook\": {\n    \"attribute_a\": 1\n  }\n}\n~/chef $ cat b.json\n{\n  \"run_list\": [\n    \"my_cookbook\"\n  ],\n  \"my_cookbook\": {\n    \"attribute_b\": 1\n  }\n}\n```\n\n[full setup I'm using](https://gist.github.com/anonymous/3db2de0481db43259d36bfca27bc43f6)\n## Client Output\n\n```\n~/chef $ chef-client -z -c solo.rb -j a.json -j b.json \nStarting Chef Client, version 12.13.37\nresolving cookbooks for run list: [\"my_cookbook\"]\nSynchronizing Cookbooks:\n  - my_cookbook (0.1.0)\nInstalling Cookbook Gems:\nCompiling Cookbooks...\nConverging 2 resources\nRecipe: my_cookbook::default\n  * log[attribute_a] action write[2016-09-19T11:57:00-07:00] WARN: ** attribute_a: 0  \n  * log[attribute_b] action write[2016-09-19T11:57:00-07:00] WARN: ** attribute_b: 1\nRunning handlers:\nRunning handlers complete\nChef Client finished, 2/2 resources updated in 01 seconds\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "schredder": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5779", "title": "user resource \"manage_home\" doesn't create home directory for an existing user in CentOS 6", "body": "## Description\r\n\r\nThe `user` resource's `manage_home` won't create the home directory for an existing user.\r\n\r\n## Chef Version\r\n\r\nchef-client 12.16.42\r\n\r\n## Platform Version\r\n\r\nCentOS 6.8 x86_64\r\n\r\n## Replication Case\r\n\r\nI'm using `kitchen` with `bento/centos-6.8` and VirtualBox.\r\n\r\nTo set up a contrived example, run a recipe that creates a user:\r\n```\r\nuser 'foo' do\r\n  action :create\r\nend\r\n```\r\n...This should create the user, but not the home directory.\r\n\r\nThen update the resource to ...\r\n```\r\nuser 'foo' do\r\n  action :create\r\n  manage_home true\r\nend\r\n```\r\n...and run `chef-client` to converge again. You should see that the `user` resource *does not* update, and a home directory still does not exist, despite that the `manage_home` property, according to the docs, [will create the home directory if it doesn't exist](https://docs.chef.io/resource_user.html#properties).\r\n\r\nCompare that to a `chef-client` run that creates user `foo` with `manage_home true` set when the user doesn't already exist. The home directory is created as expected.\r\n\r\n### Expected behavior\r\n\r\nI would expect adding `manage_home true` to modify an existing user.\r\n`CREATE_HOME` is set to `yes` in `/etc/login.defs` in `bento/centos-6.8` by default.\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "shubhamitc": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5767", "title": "Issue with chef user resource ", "body": "## Description\r\n\r\nChef-client is not working properly for User resource when used as an object of Chef::Resource::User class.\r\n\r\n## Chef Version\r\n\r\nChefc-client above > chef13\r\n\r\n## Platform Version\r\n\r\nCentos 6.xx\r\n## Replication Case\r\n\r\nI am running the following in loop with different values of username. \r\n```\r\nuser= Chef::Resource::User.new('username', run_context)\r\n\t\t\t\tuser.password 'hash'\r\n\t\t\t\tuser.supports :manage_home => true\r\n\t\t\t\tuser.home '/home/username'\r\n\t\t\t\tuser.shell '/bin/bash'\r\n              \t\t\tuser.action [:create, :modify]\r\n \t\t\t\tuser.run_action :create\r\n\t\t\t\t\r\n```\r\n## Client Output\r\n\r\n```\r\n\r\n ================================================================================\r\n      Error executing action `create` on resource 'user_resource_abstract_base_class[root]'\r\n      ================================================================================\r\n      \r\n      NotImplementedError\r\n      -------------------\r\n      NotImplementedError\r\n      \r\n      Cookbook Trace:\r\n      ---------------\r\n      /var/chef/cache/cookbooks/config_common/recipes/user_groups.rb:55:in `block (4 levels) in from_file'\r\n      /var/chef/cache/cookbooks/config_common/recipes/user_groups.rb:28:in `foreach'\r\n      /var/chef/cache/cookbooks/config_common/recipes/user_groups.rb:28:in `block (3 levels) in from_file'\r\n      /var/chef/cache/cookbooks/config_common/recipes/user_groups.rb:27:in `each'\r\n      /var/chef/cache/cookbooks/config_common/recipes/user_groups.rb:27:in `block (2 levels) in from_file'\r\n      /var/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:78:in `run_action'\r\n      /var/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:106:in `block (2 levels) in converge'\r\n      /var/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:106:in `each'\r\n      /var/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:106:in `block in converge'\r\n      /var/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:105:in `converge'\r\n      \r\n      Compiled Resource:\r\n      ------------------\r\n      # Declared in \r\n      \r\n      user_resource_abstract_base_class(\"root\") do\r\n        action [:create, :modify]\r\n        supports {:manage_home=>true}\r\n        retries 0\r\n        retry_delay 2\r\n        default_guard_interpreter :default\r\n        username \"root\"\r\n        home \"/root\"\r\n        shell \"/bin/bash\"\r\n        password \"$6$VcvJ7Na8/.tYT2a8$I4kaEiEU/dHlfo5zyWad/.I/NT7dmF7xElYbyGv8UEKYx3DcAAUS4abwPHHzJieaDGvlxF.OqlA//R9O.xTDU0\"\r\n        iterations 27855\r\n      end\r\n      \r\n      Platform:\r\n      ---------\r\n      x86_64-linux\r\n      \r\n    \r\n    ================================================================================\r\n    Error executing action `run` on resource 'ruby_block[Create user and groups]'\r\n    ================================================================================\r\n    \r\n    NotImplementedError\r\n    -------------------\r\n    user_resource_abstract_base_class[root] (dynamically defined) had an error: NotImplementedError: NotImplementedError\r\n    \r\n    Cookbook Trace:\r\n    ---------------\r\n    /var/chef/cache/cookbooks/config_common/recipes/user_groups.rb:55:in `block (4 levels) in from_file'\r\n    /var/chef/cache/cookbooks/config_common/recipes/user_groups.rb:28:in `foreach'\r\n    /var/chef/cache/cookbooks/config_common/recipes/user_groups.rb:28:in `block (3 levels) in from_file'\r\n    /var/chef/cache/cookbooks/config_common/recipes/user_groups.rb:27:in `each'\r\n    /var/chef/cache/cookbooks/config_common/recipes/user_groups.rb:27:in `block (2 levels) in from_file'\r\n    /var/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:78:in `run_action'\r\n    /var/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:106:in `block (2 levels) in converge'\r\n    /var/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:106:in `each'\r\n    /var/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:106:in `block in converge'\r\n    /var/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:105:in `converge'\r\n\r\n\r\n\r\n\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Data-drone": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5756", "title": "Windows 7 x64 windows_package InvalidByteSequenceError", "body": "## Description\r\n\r\nwhen running\r\n```\r\nwindows_package 'R for Windows 3.3.2' do\r\n  source 'd:/installs/R-3.3.2-win.exe'\r\n  action :install\r\nend\r\n```\r\n\r\nget `Encoding::InvalidByteSequenceError`\r\n\r\n## Chef Version\r\n12.17.44\r\n\r\n## Platform Version\r\nwindows 7 x64\r\n\r\n## Replication Case\r\n\r\ncreate new cookbook in fresh install and run windows_package\r\n\r\n## Client Output\r\n```\r\nC:/opscode/chefdk/modules/chef/../../bin/chef-client:69:in `load'\r\nC:/opscode/chefdk/modules/chef/../../bin/chef-client:69:in `<main\r\n[2017-01-24T14:14:23+08:00] FATAL: Encoding::InvalidByteSequenceE\r\nackage[R for Windows 3.3.2] (test::default line 4) h\r\ncoding::InvalidByteSequenceError: incomplete \"\\x00\" on UTF-16LE\r\n\r\n```", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "axos88": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5741", "title": "environments - allow only listed cookbooks", "body": "## Description\r\n\r\nIt seems impossible to currently restrict - say the production environment - to only the cookbooks listed.\r\nAny cookbooks that are unlisted are currently permitted without version restriction.\r\n\r\nIt would be great if we could do that, and be sure that all our cookbooks have the correct version restrictions\r\n\r\n## Chef Version\r\n\r\n12.17\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/5530", "title": "windows_service should be able to install if missing", "body": "## Description\r\n\r\nwindows_service should be able to install the service if it is not installed. \r\n\r\n\r\n## Chef Version\r\n\r\n12.6\r\n\r\n## Platform Version\r\n\r\nWindows Server 2012R2\r\n\r\n## Replication Case\r\n\r\nThe following should run:\r\n\r\n```\r\n  windows_service service_name do\r\n    restart_command            \"mysvc-restart.exe\"\r\n    start_command              \"mysvc.exe\"\r\n    stop_command               \"stop-my-service.exe\"\r\n    status_command             \"is-my-service-running.exe\"\r\n\r\n    run_as_user                new_resource.system_user\r\n    startup_type               :automatic\r\n    supports                   :restart => true, :reload => false, :status => true, :start => true, :stop => true\r\n    timeout                    120\r\n\r\n    action [:enable, :start]\r\n  end\r\n```\r\n\r\n## Client Output\r\n\r\n windows_service[myservice] (...) had an error: SystemCallError: The specified service does not exist as an installed service. - OpenService: The specified service does not exist as an installed service.\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\n\r\n## Stacktrace\r\n\r\n```\r\nSystemCallError: ***[***] (***::default line 10) had an error: SystemCallError: windows_service[***] (*** line 278) had an error: SystemCallError: The specified service does not exist as an installed service. - OpenService: The specified service does not exist as an installed service.\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/ffi-win32-extensions-1.0.3/lib/ffi/win32/extensions.rb:64:in `raise_windows_error'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/win32-service-0.8.9/lib/win32/service.rb:914:in `status'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/provider/service/windows.rb:264:in `current_state'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/provider/service/windows.rb:59:in `load_current_resource'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/provider.rb:128:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource.rb:603:in `run_action'\r\nc:/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:78:in `run_action'\r\nc:/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:106:in `block (2 levels) in converge'\r\nc:/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:106:in `each'\r\nc:/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:106:in `block in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource_collection/resource_list.rb:94:in `block in execute_each_resource'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:114:in `call_iterator_block'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:103:in `iterate'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource_collection/resource_list.rb:92:in `execute_each_resource'\r\nc:/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:105:in `converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/provider.rb:362:in `compile_and_converge_action'\r\n(eval):2:in `action_create'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/provider.rb:145:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource.rb:603:in `run_action'\r\nc:/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:78:in `run_action'\r\nc:/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:106:in `block (2 levels) in converge'\r\nc:/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:106:in `each'\r\nc:/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:106:in `block in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource_collection/resource_list.rb:94:in `block in execute_each_resource'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:114:in `call_iterator_block'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:103:in `iterate'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource_collection/resource_list.rb:92:in `execute_each_resource'\r\nc:/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:105:in `converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/client.rb:669:in `block in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/client.rb:664:in `catch'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/client.rb:664:in `converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/client.rb:703:in `converge_and_save'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/client.rb:283:in `run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/application.rb:284:in `run_with_graceful_exit_option'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/application.rb:260:in `block in run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/local_mode.rb:44:in `with_server_connectivity'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/application.rb:243:in `run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/application/client.rb:464:in `sleep_then_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/application/client.rb:451:in `block in interval_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/application/client.rb:450:in `loop'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/application/client.rb:450:in `interval_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/application/client.rb:434:in `run_application'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/application.rb:60:in `run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/bin/chef-client:26:in `<top (required)>'\r\nC:/opscode/chef/bin/chef-client:65:in `load'\r\nC:/opscode/chef/bin/chef-client:65:in `<main>'\r\n\r\n>>>> Caused by SystemCallError: The specified service does not exist as an installed service. - OpenService: The specified service does not exist as an installed service.\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/ffi-win32-extensions-1.0.3/lib/ffi/win32/extensions.rb:64:in `raise_windows_error'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/win32-service-0.8.9/lib/win32/service.rb:914:in `status'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/provider/service/windows.rb:264:in `current_state'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/provider/service/windows.rb:59:in `load_current_resource'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/provider.rb:128:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource.rb:603:in `run_action'\r\nc:/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:78:in `run_action'\r\nc:/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:106:in `block (2 levels) in converge'\r\nc:/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:106:in `each'\r\nc:/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:106:in `block in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource_collection/resource_list.rb:94:in `block in execute_each_resource'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:114:in `call_iterator_block'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:103:in `iterate'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource_collection/resource_list.rb:92:in `execute_each_resource'\r\nc:/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:105:in `converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/provider.rb:362:in `compile_and_converge_action'\r\n(eval):2:in `action_create'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/provider.rb:145:in `run_action'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource.rb:603:in `run_action'\r\nc:/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:78:in `run_action'\r\nc:/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:106:in `block (2 levels) in converge'\r\nc:/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:106:in `each'\r\nc:/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:106:in `block in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource_collection/resource_list.rb:94:in `block in execute_each_resource'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:114:in `call_iterator_block'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:103:in `iterate'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/resource_collection/resource_list.rb:92:in `execute_each_resource'\r\nc:/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:105:in `converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/client.rb:669:in `block in converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/client.rb:664:in `catch'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/client.rb:664:in `converge'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/client.rb:703:in `converge_and_save'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/client.rb:283:in `run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/application.rb:284:in `run_with_graceful_exit_option'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/application.rb:260:in `block in run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/local_mode.rb:44:in `with_server_connectivity'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/application.rb:243:in `run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/application/client.rb:464:in `sleep_then_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/application/client.rb:451:in `block in interval_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/application/client.rb:450:in `loop'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/application/client.rb:450:in `interval_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/application/client.rb:434:in `run_application'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/lib/chef/application.rb:60:in `run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19-universal-mingw32/bin/chef-client:26:in `<top (required)>'\r\nC:/opscode/chef/bin/chef-client:65:in `load'\r\nC:/opscode/chef/bin/chef-client:65:in `<main>'\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/5505", "title": "client should show exception causes", "body": "## Description\r\n\r\nWhen an exception occurs during the chef run, the chef client outputs the exception type and message. The causes of the exceptions are however not shown only in the very verbose debug log.\r\n\r\n## Chef Version\r\n\r\n12.15.19\r\n\r\n## Platform Version\r\n\r\nUbuntu 16.04\r\n\r\n## Replication Case\r\n\r\nCreate a chef run that contains a begin block, that throws an exception. Catch the exception and throw another, more specific such as:\r\n\r\n```\r\n  foo = 5\r\n  begin\r\n    foo.bar\r\n  rescue Exception => ex\r\n    throw RuntimeError, \"Unable to execute begin block\"\r\n  end\r\n```\r\n## Client Output\r\n\r\nError excuting action.... \r\nRuntimeError\r\nUnable to execute begin block\r\n\r\n## Expected output\r\n\r\nError excuting action.... \r\nRuntimeError\r\nUnable to execute begin block\r\n\r\nCaused by:\r\nNoMethodError\r\nundefined method 'bar' for Fixnum\r\n\r\nThis would help debugging a lot wher providers are catching and transforming exceptions, since we are >= ruby 2.1 now.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "poliva83": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5739", "title": "Successful `knife environment from file` spits output to stderr instead of stdout", "body": "## Description\r\n\r\nNoticed after upgrading workstations to use chefdk 1.1.16 that some scripts were breaking. Turns out its related to `knife environment from file` returning output to stderr instead of stdout. Confirmed it happens with `knife role from file` as well.\r\n\r\n## Chef Version\r\nchef (12.17.44) [on workstation that installed chefdk (1.1.16)]\r\n\r\n```\r\nchef@ws:~$ head /opt/chefdk/version-manifest.txt\r\nchefdk 1.1.16\r\n```\r\n\r\n## Platform Version\r\n\r\nUbuntu 14.04\r\n\r\n## Replication Case\r\n```\r\nirb(main):001:0> require 'mixlib/shellout'\r\nirb(main):002:0> x = Mixlib::ShellOut.new('/usr/bin/knife environment from file /opt/gitchefsync/staging/mand-common_global_chef_env/chef-repo/bbdba/environments/bbdba-chan-cassandra-deb-orion.json --yes', {})\r\n=> <Mixlib::ShellOut#15463280: command: '/usr/bin/knife environment from file /opt/gitchefsync/staging/mand-common_global_chef_env/chef-repo/bbdba/environments/bbdba-chan-cassandra-deb-orion.json --yes' process_status: nil stdout: '' stderr: '' child_pid: nil environment: {} timeout: 600 user:  group:  working_dir:  >\r\nirb(main):003:0> x.run_command\r\n=> <Mixlib::ShellOut#15463280: command: '/usr/bin/knife environment from file /opt/gitchefsync/staging/mand-common_global_chef_env/chef-repo/bbdba/environments/bbdba-chan-cassandra-deb-orion.json --yes' process_status: #<Process::Status: pid 21984 exit 0> stdout: '' stderr: 'Updated Environment bbdba-chan-cassandra-deb-orion' child_pid: 21984 environment: {} timeout: 600 user:  group:  working_dir:  >\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/issues/4918", "title": "Command line arguments passed to chef-client do not override values set in /etc/chef/client.d/client.rb", "body": "## Description\n\nchef-client now traverses `/etc/chef/client.d/` and loads all the configuration set up in this folder. However you can not override values set in these configuration files using command line arguments. This seems wrong as you are able to override values set only in `/etc/chef/client.rb`.\n## Chef Version\n\nChef: 12.9.41\n## Platform Version\n\nUbuntu 14.04.4 LTS\n## Replication Case\n- 1. Create a configuration file in /etc/chef/client.d/client.rb\n\n```\ncat /etc/chef/client.d/client.rb\n\n# Created by cloud-init v. 0.7.7 on Mon, 09 May 2016 19:48:18 +0000\nlog_level              :info\nssl_verify_mode        :verify_none\nlog_location           \"/var/log/chef/client.log\"\nvalidation_client_name \"mandolin-validator\"\nvalidation_key         \"/etc/chef/validation.pem\"\nclient_key             \"/etc/chef/client.pem\"\nchef_server_url        \"https://fake.chef.url/organizations/mandolin\"\nenvironment            \"admin-poliva-Mandolin-orion\"\nnode_name              \"poliva-node.poliva.fake\"\njson_attribs           \"/etc/chef/firstboot.json\"\nfile_cache_path        \"/var/cache/chef\"\nfile_backup_path       \"/var/backups/chef\"\npid_file               \"/var/run/chef/client.pid\"\nChef::Log::Formatter.show_time = true\n```\n- 2. Create  `/etc/chef/firstboot.json`\n\n```\ncat /etc/chef/firstboot.json\n\n{\"run_list\": [\"recipe[bb_bescloud_admin::ssh]\"], \"bb_bescloud_admin\": {\"admin_files\": {\"base_src_url\": \"http://fake.fake.fake/~Mandolin/bescloud_files/\"}}}\n```\n- 3. Create  `/root/test.json`\n\n```\ncat /root/test.json\n\n{\"run_list\": [\"recipe[bb_bescloud_admin::postfix]\"], \"bb_bescloud_admin\": {\"admin_files\": {\"base_src_url\": \"http://fake.fake.fake/~Mandolin/bescloud_files/\"}}}\n```\n- 4. Run chef-client loading `/root/test.json` with -j flag (will have run_list `[bb_bescloud_admin::ssh]` when you expect `[bb_bescloud_admin::postfix]`)\n\n```\nchef-client -j /root/test.json\nStarting Chef Client, version 12.9.41\nresolving cookbooks for run list: [\"bb_bescloud_admin::ssh\"]\n```\n- 5. Remove `json_attribs           \"/etc/chef/firstboot.json\"` line from `/etc/chef/client.d/client.rb`\n\n```\ncat /etc/chef/client.d/client.rb\n\n# Created by cloud-init v. 0.7.7 on Mon, 09 May 2016 19:48:18 +0000\nlog_level              :info\nssl_verify_mode        :verify_none\nlog_location           \"/var/log/chef/client.log\"\nvalidation_client_name \"mandolin-validator\"\nvalidation_key         \"/etc/chef/validation.pem\"\nclient_key             \"/etc/chef/client.pem\"\nchef_server_url        \"https://fake.chef.url/organizations/mandolin\"\nenvironment            \"admin-poliva-Mandolin-orion\"\nnode_name              \"poliva-node.poliva.fake\"\nfile_cache_path        \"/var/cache/chef\"\nfile_backup_path       \"/var/backups/chef\"\npid_file               \"/var/run/chef/client.pid\"\nChef::Log::Formatter.show_time = true\n```\n- 6. Run chef-client loading `/root/test.json` with -j flag again (This time run_list is `[bb_bescloud_admin::postfix]`)\n\n```\nchef-client -j test.json\n\nStarting Chef Client, version 12.9.41\nresolving cookbooks for run list: [\"bb_bescloud_admin::postfix\"]\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "railsmith": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5738", "title": "--force-formatter not working in daemon mode", "body": "## Description\r\n\r\nRunning the chef-client with `--force-formatter` option in daemon mode still gives logger output instead of formatter output.\r\n\r\n    chef-client -d -i 60 -l info -L /var/log/chef/client.log --force-formatter\r\n\r\n## Chef Version\r\n\r\n12.14\r\n\r\n## Platform Version\r\n\r\nRedhat 6\r\n\r\n## Replication Case\r\n\r\nRun the chef-client in daemon mode with --force-formatter option.\r\n\r\n    chef-client -d -i 60 -l info -L /var/log/chef/client.log --force-formatter\r\n\r\nExpected output - Chef should use the default formatter instead of logger output.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dgarstang": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5723", "title": "chef-client ignores --chef-zero-host", "body": "chef-client is ignoring the command line option --chef-zero-host. See output below. I pass 192.168.5.111 to --chef-zero-host, and it ignores it and uses 172.17.0.1 instead (which is also an incorrect IP. I don't have that IP on my local system). It does honor the --chef-zero-port option on port 9000 however.\r\n\r\n```\r\ndoug@ip-192-168-5-113 slice-java (dev) (master)*$ CHEF_DRIVER=docker chef-client -z recipes/docker.rb --chef-zero-host 192.168.5.111 --chef-zero-port 9000\r\n[2017-01-13T07:15:43-08:00] INFO: Started chef-zero at chefzero://localhost:9000 with repository at /Users/doug/git/chef/chef-sauce\r\n  One version per cookbook\r\n  cookbooks at /Users/doug/git/chef/chef-cookbooks\r\n\r\n[2017-01-13T07:15:43-08:00] INFO: Forking chef instance to converge...\r\nStarting Chef Client, version 12.15.19\r\n[2017-01-13T07:15:43-08:00] INFO: *** Chef 12.15.19 ***\r\n[2017-01-13T07:15:43-08:00] INFO: Platform: x86_64-darwin13\r\n[2017-01-13T07:15:43-08:00] INFO: Chef-client pid: 91986\r\n[2017-01-13T07:15:47-08:00] INFO: Run List is []\r\n[2017-01-13T07:15:47-08:00] INFO: Run List expands to []\r\n[2017-01-13T07:15:47-08:00] INFO: Starting Chef Run for doug\r\n[2017-01-13T07:15:47-08:00] INFO: Running start handlers\r\n[2017-01-13T07:15:47-08:00] INFO: Start handlers complete.\r\n[2017-01-13T07:15:47-08:00] INFO: HTTP Request Returned 404 Not Found: Object not found:\r\nresolving cookbooks for run list: []\r\n[2017-01-13T07:15:48-08:00] INFO: Loading cookbooks []\r\nSynchronizing Cookbooks:\r\nInstalling Cookbook Gems:\r\nCompiling Cookbooks...\r\n[2017-01-13T07:15:48-08:00] WARN: Node doug has an empty run list.\r\nConverging 1 resources\r\nRecipe: @recipe_files::/Users/doug/git/chef/chef-cookbooks/slice-java/recipes/docker.rb\r\n  * machine_image[ssh_server] action create[2017-01-13T07:15:48-08:00] INFO: Processing machine_image[ssh_server] action create (@recipe_files::/Users/doug/git/chef/chef-cookbooks/slice-java/recipes/docker.rb line 3)\r\n[2017-01-13T07:15:48-08:00] INFO: HTTP Request Returned 404 Not Found: Object not found: chefzero://localhost:9000/data/machine_image/ssh_server\r\n[2017-01-13T07:15:48-08:00] INFO: HTTP Request Returned 404 Not Found: Object not found: chefzero://localhost:9000/data/images/ssh_server\r\n[2017-01-13T07:15:48-08:00] INFO: Processing chef_node[ssh_server] action create (basic_chef_client::block line 57)\r\n\r\n    - update node ssh_server at chefzero://localhost:9000\r\n    -   update normal.chef_provisioning.reference.allocated_at from \"2017-01-13 15:07:02 UTC\" to \"2017-01-13 15:15:48 UTC\"[2017-01-13T07:15:48-08:00] INFO: Processing chef_node[ssh_server] action create (basic_chef_client::block line 57)\r\n[2017-01-13T07:15:48-08:00] INFO: Processing chef_client[ssh_server] action create (basic_chef_client::block line 146)\r\n[2017-01-13T07:15:48-08:00] INFO: Processing chef_node[ssh_server] action create (basic_chef_client::block line 157)\r\n[2017-01-13T07:15:48-08:00] ERROR: Proxy thread unable to start: Can't assign requested address - bind(2) for \"172.17.0.1\" port 9000\r\n\r\n```\r\n\r\n```\r\ndoug@ip-192-168-5-113 slice-java (dev) (master)*$ chef -v\r\nChef Development Kit Version: 0.19.6\r\nchef-client version: 12.15.19\r\ndelivery version: master (802e801d920ea6b6d48db735aa7c6e7a6194bea4)\r\nberks version: 5.1.0\r\nkitchen version: 1.13.2\r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zrisher": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5699", "title": "Chef hangs when running npm script command", "body": "## Description\r\n\r\nWhen using the `execute` or `batch` resource to run a script from an npm package, chef will hang if the script doesn't exist or if it runs a js file with `console.log()` in it.\r\n\r\n## Chef Version\r\n\r\n12.2.1\r\n\r\n## Platform Version\r\n\r\nWindows 2012 R2\r\n\r\n## Replication Case\r\n\r\n### Setup\r\nInstall Chef 12.2.1 on a Windows 2012 R2 box.\r\nInstall the latest x64 version of nodejs+npm from https://nodejs.org/en/download/.\r\nRun powershell as Administrator and start `chef-shell`:\r\n\r\n```\r\nrecipe_mode\r\nexecute \"1\" do\r\n  \"call npm install -g git+https://git@github.com/zrisher/chef-npm-example.git\"\r\nend\r\nrun_chef\r\n```\r\nThis should succeed and install the package at `C:\\Users\\Administrator\\AppData\\Roaming\\npm\\node_modules\\chef-npm-example`\r\n\r\n### Works with native Windows shell\r\nCreate a batch file with the following contents at `C:\\Users\\Administrator\\Desktop\\test.bat`:\r\n```\r\ncd C:\\\\Users\\\\Administrator\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\chef-npm-example\r\necho before\r\ncall npm run-script some_script\r\necho after\r\n```\r\n\r\nRun `call C:\\Users\\Administrator\\Desktop\\test.bat` from cmd and it will successfully output:\r\n```\r\nbefore\r\nIndex.js Test\r\nafter\r\n```\r\n\r\n### Fails with Chef\r\nNow run `chef-shell` again, defining a batch with the same contents:\r\n```\r\nrecipe_mode\r\nbatch \"1\" do\r\n  code <<-EOC\r\n    cd C:\\\\Users\\\\Administrator\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\chef-npm-example\r\n    echo before\r\n    call npm run-script some_script\r\n    echo after\r\nEOC\r\nend\r\ntracing on\r\nrun_chef\r\n```\r\n\r\nThis will output `before`, `Index.js Test`, and then loop without end through `mixlib/shellout/windows.rb`. See [here](https://github.com/felixrieseberg/windows-build-tools/issues/45#issuecomment-270037772) for an in-depth description of the loop logic, but basically it means the called process isn't exiting. \r\n\r\n### Related cases \r\nIf we amend `package.json` in `C:\\Users\\Administrator\\AppData\\Roaming\\npm\\node_modules\\chef-npm-example` and empty the script definition: `\"some_script\": \"node ./lib/index.js\"` -> `\"some_script\": \"\"` we encounter the same behavior - chef hangs, but the native Windows shell gets to `after` and exits (telling us the script is missing).\r\n\r\n\r\nIf instead we amend `lib/index.js` by commenting out the `console.log('Index.js Test')` line, both native shell and Chef succeed. You can even place basic operations in `index.js` like `const a = 1;`. But if any `console.log()` exists, the chef process will hang.\r\n\r\n## Primary Issue\r\nI understand that the functionality of `npm` is beyond the scope of this project. However, I don't understand why this works when run from `cmd` or a batch file, but not when run via Chef's `execute` or `batch` resources. If you guys can help me figure that part out, I'll know how `npm`'s behavior needs to change and can go from there.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dhoer": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5695", "title": "[Enhancement] Add sensitive to registry_key ", "body": "## Description\r\n\r\nWindows registry_key resource doesn't support sensitive.  While it does write to Windows registry that is not very secure, it would be nice to suppress stdout and stderr output. Here is an example of output when setting autologin username and password:\r\n\r\n```\r\n* windows_autologin[set rdp_local] action enable\r\n             * registry_key[set AutoAdminLogon for rdp_local] action create\r\n        - set value {:name=>\"DefaultUsername\", :type=>:string, :data=>\"rdp_local\"}\r\n        - set value {:name=>\"DefaultPassword\", :type=>:string, :data=>\"%2wNrk6z%Y-eJrv\"}\r\n```\r\n\r\nIt would be nice to be able to hide this from the logs.\r\n\r\nhttps://ci.appveyor.com/project/dhoer/chef-windows-screenresolution/build/build-28#L375\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "simonvik": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5681", "title": "Chef-client removes array items in --local-mode with chef-zero", "body": "## Description\r\n\r\nWe found a possible bug in chef-client when we define a json-attribute as an array with two identical strings Like:\r\n\r\n{\"onearray\":[\"a\",\"a\"]}\r\n\r\nAt the first run chef-client does the correct thing and writes two \"a\" but at some point it seems to convert that array into a hash and upload one \"a\" to chef-zero\r\n\r\nThe 2nd run results in that it removes that 2nd \"a\"\r\n\r\n## Chef Version\r\n\r\nChef-client 12.17.44, 11.14.2\r\n\r\n## Platform Version\r\n\r\nLinux, tested on both debian wheezy and arch-linux\r\n\r\n## Replication Case\r\n\r\n```\r\ncd /tmp\r\nwget http://devsn.se/testcase.tar.gz\r\ntar xf testcase.tar.gz\r\n# First run\r\n/opt/chef/bin/chef-client --local-mode --config /tmp/kitchen/client.rb --log_level auto --force-formatter --no-color --json-attributes /tmp/kitchen/dna.json --chef-zero-port 8889\r\n# Second run\r\n/opt/chef/bin/chef-client --local-mode --config /tmp/kitchen/client.rb --log_level auto --force-formatter --no-color --json-attributes /tmp/kitchen/dna.json --chef-zero-port 8889\r\n```\r\n\r\n## Client Output\r\n\r\nFirst run:\r\n```\r\n+# This file is generated by Chef for arraytest1-wheezy\r\n+\r\n+a\r\n+a\r\n```\r\nSecond run:\r\n```\r\n# This file is generated by Chef for arraytest1-wheezy\r\n            \r\na\r\n-a\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gopisaba": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5659", "title": "Internal error 500", "body": "## Description\r\nChef client throws internal error 500 but after 3-4 retry, without any change it runs well. \r\n\r\n## Chef Version\r\n```\r\nPS C:\\Windows\\Temp> chef-client --version\r\nChef: 12.17.44\r\n```\r\n\r\n## Platform Version\r\nWindows 2012 R2 Standard - AWS\r\n\r\n## Replication Case\r\nRun any cookbook in Chef client version 12.17.44. I am trying to run **chef zero** in \r\n\r\nAWS AMI: ami-95d984e6\r\nRecipe: `include_recipe 'iis::mod_aspnet45'`\r\n\r\n## Client Output\r\n\r\n```\r\n[2016-12-18T23:52:01+00:00] INFO: *** Chef 12.17.44 ***\r\n[2016-12-18T23:52:01+00:00] INFO: Platform: x64-mingw32\r\n[2016-12-18T23:52:01+00:00] INFO: Chef-client pid: 2784\r\n[2016-12-18T23:52:32+00:00] INFO: HTTP Request Returned 404 Not Found: Object not found: chefzero://localhost:8889/nodes/WIN-1A42M6MKIKJ\r\n[2016-12-18T23:52:32+00:00] INFO: HTTP Request Returned 500 Internal Server Error: error\r\n[2016-12-18T23:52:32+00:00] ERROR: Running exception handlers\r\n[2016-12-18T23:52:32+00:00] ERROR: Exception handlers complete\r\n[2016-12-18T23:52:32+00:00] FATAL: Stacktrace dumped to C:/Windows/system32/config/systemprofile/.chef/local-mode-cache/cache/chef-stacktrace.out\r\n[2016-12-18T23:52:32+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report\r\n[2016-12-18T23:52:32+00:00] FATAL: Net::HTTPFatalError: 500 \"Internal Server Error\"\r\n[2016-12-18T23:52:55+00:00] INFO: Auto-discovered chef repository at C:/Windows/Temp\r\n[2016-12-18T23:52:55+00:00] INFO: Started chef-zero at chefzero://localhost:8889 with repository at C:/Windows/Temp\r\n```\r\n\r\n## Stacktrace\r\n\r\n```\r\nGenerated at 2016-12-18 23:53:23 +0000\r\nNet::HTTPFatalError: 500 \"Internal Server Error\"\r\nC:/opscode/chef/embedded/lib/ruby/2.3.0/net/http/response.rb:120:in `error!'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/http.rb:150:in `request'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/http.rb:131:in `post'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/node.rb:616:in `create'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/node.rb:569:in `rescue in find_or_create'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/node.rb:565:in `find_or_create'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/policy_builder/dynamic.rb:72:in `load_node'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/client.rb:468:in `load_node'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/client.rb:270:in `run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/application.rb:276:in `run_with_graceful_exit_option'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/application.rb:252:in `block in run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/local_mode.rb:44:in `with_server_connectivity'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/application.rb:235:in `run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/application/client.rb:464:in `sleep_then_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/application/client.rb:451:in `block in interval_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/application/client.rb:450:in `loop'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/application/client.rb:450:in `interval_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/application/client.rb:434:in `run_application'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/application.rb:59:in `run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/bin/chef-client:26:in `<top (required)>'\r\nC:/opscode/chef/bin/chef-client:68:in `load'\r\nC:/opscode/chef/bin/chef-client:68:in `<main>'\r\n\r\n>>>> Caused by Net::HTTPServerException: 404 \"Not Found\"\r\nC:/opscode/chef/embedded/lib/ruby/2.3.0/net/http/response.rb:120:in `error!'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/http.rb:150:in `request'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/http.rb:115:in `get'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/node.rb:581:in `load'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/node.rb:565:in `find_or_create'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/policy_builder/dynamic.rb:72:in `load_node'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/client.rb:468:in `load_node'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/client.rb:270:in `run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/application.rb:276:in `run_with_graceful_exit_option'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/application.rb:252:in `block in run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/local_mode.rb:44:in `with_server_connectivity'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/application.rb:235:in `run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/application/client.rb:464:in `sleep_then_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/application/client.rb:451:in `block in interval_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/application/client.rb:450:in `loop'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/application/client.rb:450:in `interval_run_chef_client'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/application/client.rb:434:in `run_application'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/lib/chef/application.rb:59:in `run'\r\nC:/opscode/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.17.44-universal-mingw32/bin/chef-client:26:in `<top (required)>'\r\nC:/opscode/chef/bin/chef-client:68:in `load'\r\nC:/opscode/chef/bin/chef-client:68:in `<main>'\r\n```\r\n\r\n### NOTE: CHEF CLIENT BUGS ONLY\r\n\r\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\r\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\r\n\r\n* [Server issues](https://github.com/chef/chef-server/issues/new)\r\n* [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\r\n* Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "afiune": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5652", "title": "Implement SSLPolicy - A mechanism to handle certificates globally", "body": "## Description\r\n\r\nWe have introduced a new feature to `berkshelf` with the following PR https://github.com/berkshelf/berkshelf/pull/1640 - This new functionality implements a new class called `SSLPolicy` that will manage the certificate store for any cookbook upload and/or download.\r\n\r\nThis issue is about moving this new functionality to `chef-config` so that not only **berkshelf** can take advantage of it, but also **knife** and other components. Additionally it will allow us to deal with bug-fixes on a single point and not on many places.\r\n\r\ncc/ @danielsdeleo ", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tehsuk": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5644", "title": "dsc_script - can't pass a variable created by ps_credential to flags", "body": "## Description\r\n\r\nSee #5640 \r\n\r\nCopy of that issue below:\r\n\r\n'Invalid argument type' error is returned when the dsc_script resource is used with the 'command' property & a 'flags' property that contains a Chef::Util::Powershell::PSCredential type.\r\n\r\n/lib/chef/util/powershell/cmdlet.rb is what is disallowing this.\r\n\r\nThere are 2 workarounds I'm aware of, both of which aren't very desirable for how I'm using chef/dsc:\r\n\r\n- Don't use a .ps1 as a command.  I prefer to keep my DSC resources in external .ps1 files that I keep in \\files\\default in my cookbook for portability reasons (I use these in other environments not currently being managed by chef).\r\n- Pass the userid/password as strings to flags.  For now I'm storing creds encrypted in a vault & decrypting them in my recipe, setting PSDscAllowPlainTextPassword = $true in configuration data, but this isn't secure & the password ends up appearing in the logs if dsc_script fails & in the temp mof files.\r\n\r\n## Chef Version\r\n\r\nChef 12.16.42\r\n\r\n## Platform Version\r\n\r\nTested on Server 2012R2 & Server 2016\r\n\r\n## Replication Case\r\n\r\nSample recipe:\r\n```\r\ncreds_pso = ps_credential('domain\\user', 'password')\r\ndsc_script 'doathing' do\r\n command \"C:\\dscscripts\\doathing.ps1\"\r\n flags ({:cred => creds_pso})\r\n configuration_data <<-EOH\r\n  @{\r\n   AllNodes = @(\r\n    @{\r\n    NodeName = \"localhost\";\r\n    PSDscAllowDomainUser = $true\r\n    })\r\n   }\r\n   EOH\r\nend\r\n```\r\ndoathing.ps1:\r\n```\r\nConfiguration doathing {\r\n param (\r\n  [System.Management.Automation.PSCredential] $cred\r\n )\r\n Import-DscResource -ModuleName PSDesiredStateConfiguration\r\n \r\n Node $AllNodes.Nodename {\r\n  Group AddDomainUserToLocalGroup {\r\n   GroupName = 'AGroup'\r\n   MembersToInclude = 'domain\\anotheruser'\r\n   Credential = $cred\r\n  }\r\n } \r\n}\r\n```\r\n## Client Output\r\n```\r\n[2016-12-09T15:01:41-05:00] INFO: Processing dsc_script[doathing] action run (mycookbook::default line 37)\r\n[2016-12-09T15:01:41-05:00] ERROR: DSC operation failed: Invalid argument type `Chef::Util::Powershell::PSCredential` specified for PowerShell switch `:admincreds`. Arguments to PowerShell must be of type `String`, `Numeric`, `Float`, `FalseClass`, or `TrueClass`\r\n```\r\n## Stacktrace\r\n\r\nattached\r\n[chef-stacktrace.zip](https://github.com/chef/chef/files/643147/chef-stacktrace.zip)\r\n\r\n\r\n\r\n### NOTE: CHEF CLIENT BUGS ONLY\r\n\r\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\r\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\r\n\r\n* [Server issues](https://github.com/chef/chef-server/issues/new)\r\n* [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\r\n* Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "eedwardsdisco": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5629", "title": "dsc_resource scriptblock property type support", "body": "## Description\r\n\r\nPowerShell ScriptBlocks appear unsupported in dsc_resource as a `property :soandso` value\r\n\r\n## Chef Version\r\n\r\n12.16.42\r\n\r\n## Platform Version\r\n\r\n2012r2 x64 12.16.42\r\n\r\n## Replication Case\r\n\r\n```\r\ndsc_resource \"disable-#{profile_name}-profile\" do\r\n  resource :script\r\n  module_name 'PSDesiredStateConfiguration'\r\n  property :getscript, \"{@{ Result = -not ((Get-NetFirewallProfile -Name '#{profile_name}').Enabled) }}\"\r\n  property :setscript, \"{Set-NetFirewallProfile -Name '#{profile_name}' -Enabled False -Verbose}\"\r\n  property :testscript, \"{-not ((Get-NetFirewallProfile -Name '#{profile_name}').Enabled)}\"\r\nend\r\n```\r\n\r\n## Client Output\r\n\r\nChef::Exceptions::PowershellCmdletException: Powershell Cmdlet failed: Invoke-DscResource : PowerShell DSC resource MSFT_ScriptResource  failed to \r\n       execute Test-TargetResource functionality with error message: Failure to get a \r\n       valid result from the execution of TestScript. The Test script should return \r\n       True or False. \r\n       At line:1 char:73\r\n       + ... ge);exit 1};Invoke-DscResource -Method test -Name script -Property @{ ...\r\n       +                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n           + CategoryInfo          : InvalidOperation: (root/Microsoft/...gurationMan \r\n          ager:String) [Invoke-DscResource], CimException\r\n           + FullyQualifiedErrorId : ProviderOperationExecutionFailure,Microsoft.Powe \r\n          rShell.DesiredStateConfiguration.Commands.InvokeDscResourceMethodCommand\r\n\r\n## cont.\r\n\r\nTrying to use the https://msdn.microsoft.com/en-us/powershell/dsc/scriptresource 'script' resource which takes ScriptBlock parameters.\r\n\r\nI don't see ScriptBlock as a supported type in `chef/mixin/powershell_type_coercions`, and I can't seem to get this to work, so I'm puzzled as to how to figure this out without ScriptBlock support.", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jrmuir": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5612", "title": "Chef::DataBagItem.destroy using wrong uri against chef server", "body": "## Description\r\n\r\nAttempting to leverage Chef::DataBagItem destroy instance method results in a 404.  Loading and saving the same instance works correctly.\r\n\r\n## Chef Version\r\n\r\nChef Client, version 12.16.42\r\nChef Server, version 12.11.1\r\n\r\n## Platform Version\r\n\r\nRed Hat Enterprise Linux 6 and 7\r\n\r\n## Replication Case\r\n\r\nCreate a data bag and item on a chef server.  Load a data bag item.  Attempt to destroy within a recipe (with correct ACLS set).\r\n\r\n## Client Output\r\n\r\n```\r\n[2016-12-05T08:19:48-07:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request\r\n[2016-12-05T08:19:48-07:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request\r\n[2016-12-05T08:19:48-07:00] DEBUG: Initiating DELETE to https://chef-server/organizations/myorg/data/aws_vpc/data_bag_item_aws_vpc_wordpress-vpc0644384204\r\n[2016-12-05T08:19:48-07:00] DEBUG: ---- HTTP Request Header Data: ----\r\n[2016-12-05T08:19:48-07:00] DEBUG: X-REMOTE-REQUEST-ID: 39a7f3cf-7188-4c43-afbb-f0445fed9fdd\r\n...\r\n[2016-12-05T08:19:48-07:00] DEBUG: ---- End HTTP Request Header Data ----\r\n[2016-12-05T08:19:48-07:00] DEBUG: ---- HTTP Status and Header Data: ----\r\n[2016-12-05T08:19:48-07:00] DEBUG: HTTP 1.1 404 Object Not Found: error\r\n```\r\n\r\nNote that when loading or saving, it references https://chef-server/organizations/myorg/data/aws_vpc/wordpress-vpc0644384204 and setting a chef_server_rest instance similar to Chef::DataBagItem and running the delete with the proper name works correctly.\r\n\r\ni.e.:\r\n```\r\nchef_server_rest = Chef::ServerAPI.new(Chef::Config[:chef_server_url])\r\nchef_server_rest.delete(\"data/#{databag}/#{key}\")\r\n```\r\nWhere databag represents the name of the databag and key represents the item name - aws_vpc and wordpress-vpc0644384204 respectively in this instance.\r\n\r\n## Stacktrace\r\n\r\nn/a, debug above should suffice to highlight the problem\r\n\r\n### NOTE: CHEF CLIENT BUGS ONLY\r\n\r\nBased off the behavior of the recipe, I believe this applies only to chef-client against a server but is not a server bug.  The offending issue appears to be leveraging self.object_name for the data bag item id instead of the actual data bag item id at https://github.com/chef/chef/blob/af1332711139cade37104169e943e290c6c00362/lib/chef/data_bag_item.rb lines 167-169\r\n\r\nChanging \r\n`def destroy(data_bag=data_bag(), databag_item=name)`\r\nto \r\n`def destroy(data_bag=data_bag(), databag_item=id)`\r\nshould be sufficient to resolve, though databag_item might need to be set to @raw_data[\"id\"]\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Uplink03": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5587", "title": "`knife cookbook site install` doesn't handle some path names correctly", "body": "Originally reported here: https://github.com/chef/chef-dk/issues/1058\r\n\r\n# Description\r\n\r\nGiven a work directory named e.g. 'Docker+Chef', `knife cookbook site install any-cookbook-name` fails at the decompression step.\r\n\r\nExample output for `knife cookbook site install chef-vault`:\r\n\r\n```\r\nInstalling chef-vault to /path/to/Docker+Chef/chef/cookbooks\r\nChecking out the master branch.\r\nPristine copy branch (chef-vendor-chef-vault) exists, switching to it.\r\nDownloading chef-vault from Supermarket at version 2.1.1 to /path/to/Docker+Chef/chef/cookbooks/chef-vault.tar.gz\r\nCookbook saved: /path/to/Docker+Chef/chef/cookbooks/chef-vault.tar.gz\r\nRemoving pre-existing version.\r\nUncompressing chef-vault version 2.1.1.\r\nERROR: Errno::ENOENT: No such file or directory @ rb_sysopen - /path/to/Docker\\+Chef/chef/cookbooks/chef-vault.tar.gz\r\n```\r\n\r\nNotice the escaped plus sign, which is most likely the root of the problem.\r\n# ChefDK Version\r\n\r\nChef Development Kit Version: 0.19.6\r\nchef-client version: 12.15.19\r\ndelivery version: master (802e801d920ea6b6d48db735aa7c6e7a6194bea4)\r\nberks version: 5.1.0\r\nkitchen version: 1.13.2\r\n# Platform Version\r\n\r\nOS X El Capitan\r\n# Replication Case\r\n\r\n    mkdir 'Docker+Chef'\r\n    cd 'Docker+Chef'\r\n    # set up chef with a 'cookbooks' directory that is managed by 'git' - make sure you have at least one commit to the 'master' branch\r\n    knife cookbook site install chef-vault\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ghatwala": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5533", "title": "several unit tests fail to run when workstation is FIPS enabled", "body": "## Description\r\nGetting test case failures.\r\n```\r\n# Run All the Tests \r\nbundle exec rake spec\r\n```\r\n\r\nWhile tying out the test cases , getting below errors\r\n```\r\nFinished in 13 minutes 15 seconds (files took 12.58 seconds to load)\r\n16974 examples, 3 failures, 31 pending\r\n\r\nFailed examples:\r\n\r\nrspec ./spec/unit/application/client_spec.rb:431 # Chef::Application::Client configure_chef should set the colored output to true by default on windows and true on all other platforms as well\r\nrspec ./spec/unit/application_spec.rb:134 # Chef::Application when there are no configuration errors configure_chef when a config_file is present should configure chef::config from a file\r\nrspec ./spec/unit/application_spec.rb:139 # Chef::Application when there are no configuration errors configure_chef when a config_file is present should merge the local config hash into chef::config\r\n\r\n```\r\n\r\n## Chef Version\r\n```\r\njenkins@1e4fff739f96:~/chef> chef-solo --version\r\nChef: 12.17.1\r\n\r\n```\r\n## Platform Version\r\n```\r\njenkins@1e4fff739f96:~/chef> arch\r\nppc64le\r\n```\r\n```\r\njenkins@1e4fff739f96:~/chef> lscpu\r\nArchitecture:          ppc64le\r\nByte Order:            Little Endian\r\nCPU(s):                16\r\nOn-line CPU(s) list:   0-15\r\nThread(s) per core:    1\r\nCore(s) per socket:    1\r\nSocket(s):             16\r\nNUMA node(s):          1\r\nModel:                 IBM pSeries (emulated by qemu)\r\nHypervisor vendor:     KVM\r\nVirtualization type:   full\r\nL1d cache:             64K\r\nL1i cache:             32K\r\nNUMA node0 CPU(s):     0-15\r\n\r\n```\r\nBundle version\r\n```\r\njenkins@1e4fff739f96:~/chef> bundle --version\r\nBundler version 1.13.6\r\n\r\n```\r\n```\r\njenkins@1e4fff739f96:~/chef> ruby --version\r\nruby 2.3.1p112 (2016-04-26 revision 54768) [powerpc64le-linux]\r\n```\r\ngem version\r\n```\r\njenkins@1e4fff739f96:~/chef> gem --version\r\n2.6.8\r\n```\r\n\r\nchef client\r\n```\r\njenkins@1e4fff739f96:~/chef> chef-client --version\r\nChef: 12.17.1\r\n\r\n```\r\n\r\nOS version\r\n```\r\njenkins@1e4fff739f96:~/chef> cat /etc/os-release\r\nNAME=\"SLES\"\r\nVERSION=\"12-SP1\"\r\nVERSION_ID=\"12.1\"\r\nPRETTY_NAME=\"SUSE Linux Enterprise Server 12 SP1\"\r\nID=\"sles\"\r\nANSI_COLOR=\"0;32\"\r\nCPE_NAME=\"cpe:/o:suse:sles:12:sp1\"\r\n\r\n```\r\n\r\n## Replication Case\r\n\r\nNow while validating the test case using below options\r\n```\r\n# Run All the Tests\r\n$ bundle exec rake spec\r\n```\r\n\r\n## Stacktrace /Debug log\r\n\r\nLog of the failed test case when run as unit level\r\n**First test case failure log** \r\n```\r\njenkins@1e4fff739f96:~/chef> bundle exec rspec spec/unit/application/client_spec.rb\r\n\r\nWARNING: Shared example group 'with a chef repo' has been previously defined at:\r\n  /home/jenkins/.rvm/gems/ruby-2.3.1/gems/cheffish-4.0.0/lib/cheffish/rspec/repository_support.rb:12\r\n...and you are now defining it at:\r\n  /home/jenkins/chef/spec/support/shared/integration/integration_helper.rb:111\r\nThe new definition will overwrite the original one.\r\n/home/jenkins/.rvm/rubies/ruby-2.3.1/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in `require': cannot load such file -- win32/daemon (LoadError)\r\n        from /home/jenkins/.rvm/rubies/ruby-2.3.1/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in `require'\r\nRun options:\r\n  include {:focus=>true}\r\n  exclude {:provider=>#<Proc:./spec/spec_helper.rb:183>, :arch=>#<Proc:./spec/spec_helper.rb:177>, :ruby=>\"2.3.1\", :chef=>\"12.17.1\", :not_wpar=>true, :broken=>true, :openssl_lt_101=>true, :requires_root_or_running_windows=>true, :requires_root=>true, :selinux_only=>true, :debian_family_only=>true, :aix_only=>true, :system_windows_service_gem_only=>true, :solaris_only=>true, :windows_domain_joined_only=>true, :windows_powershell_dsc_only=>true, :ruby32_only=>true, :ruby64_only=>true, :windows_nano_only=>true, :windows32_only=>true, :windows64_only=>true, :windows_2008r2_or_later=>true, :win2k3_only=>true, :mac_osx_only=>true, :windows_only=>true, :appveyor_only=>true, :volatile_from_verify=>false, :volatile=>true, :external=>true}\r\n\r\nAll examples were filtered out; ignoring {:focus=>true}\r\n\r\nChef::Application::Client reconfigure\r\n  parse cli_arguments\r\n    should call set_specific_recipes\r\n    --named-run-list\r\n      behaves like sets the configuration\r\n        --named-run-list arglebargle-example\r\n          sets {:named_run_list=>\"arglebargle-example\"}\r\n    --no-listen\r\n      behaves like sets the configuration\r\n        --no-listen\r\n          sets {:listen=>false}\r\n    --daemonize\r\n      with no value\r\n        behaves like sets the configuration\r\n          --daemonize\r\n            sets {:daemonize=>true}\r\n      with an integer value\r\n        behaves like sets the configuration\r\n          --daemonize 5\r\n            sets {:daemonize=>5}\r\n      with a non-integer value\r\n        behaves like sets the configuration\r\n          --daemonize foo\r\n            sets {:daemonize=>true}\r\n    --config-option\r\n      with a single value\r\n        behaves like sets the configuration\r\n          --config-option chef_server_url=http://example\r\n            sets {:chef_server_url=>\"http://example\"}\r\n      with two values\r\n        behaves like sets the configuration\r\n          --config-option chef_server_url=http://example --config-option policy_name=web\r\n            sets {:chef_server_url=>\"http://example\", :policy_name=>\"web\"}\r\n      with a boolean value\r\n        behaves like sets the configuration\r\n          --config-option minimal_ohai=true\r\n            sets {:minimal_ohai=>true}\r\n      with an empty value\r\n        should terminate with message\r\n      with an invalid value\r\n        should terminate with message\r\n  when configured to not fork the client process\r\n    when interval is given\r\n      should terminate with message\r\n    when interval is given on windows\r\n      should not terminate\r\n    when configured to run once\r\n      should reconfigure chef-client\r\n  daemonized mode\r\n    when no interval has been set\r\n      should set the interval to 1800\r\n    when the daemonize option is an integer\r\n[2016-11-10T16:23:57+00:00] INFO: SIGUSR1 received, waking up\r\n[2016-11-10T16:23:58+00:00] INFO: SIGUSR1 received, waking up\r\n[2016-11-10T16:23:59+00:00] INFO: SIGUSR1 received, waking up\r\n      sleeps for the amount of time passed\r\n  when configured to run once\r\n[2016-11-10T16:24:00+00:00] WARN: *****************************************\r\n[2016-11-10T16:24:00+00:00] WARN: Did not find config file: /etc/chef/client.rb, using command line options.\r\n[2016-11-10T16:24:00+00:00] WARN: *****************************************\r\n[2016-11-10T16:24:00+00:00] INFO: Unable to access cache at /var/chef. Switching cache to /home/jenkins/.chef\r\n    ignores the splay\r\n[2016-11-10T16:24:00+00:00] WARN: *****************************************\r\n[2016-11-10T16:24:00+00:00] WARN: Did not find config file: /etc/chef/client.rb, using command line options.\r\n[2016-11-10T16:24:00+00:00] WARN: *****************************************\r\n[2016-11-10T16:24:00+00:00] INFO: Unable to access cache at /var/chef. Switching cache to /home/jenkins/.chef\r\n    forces the interval to nil\r\n  when the json_attribs configuration option is specified\r\n[2016-11-10T16:24:00+00:00] INFO: Unable to access cache at /var/chef. Switching cache to /home/jenkins/.chef\r\n    reads the JSON attributes from the specified source\r\n  audit mode\r\n    unrecognized setting via config file\r\n[2016-11-10T16:24:00+00:00] WARN: *****************************************\r\n[2016-11-10T16:24:00+00:00] WARN: Did not find config file: /etc/chef/client.rb, using command line options.\r\n[2016-11-10T16:24:00+00:00] WARN: *****************************************\r\n[2016-11-10T16:24:00+00:00] INFO: Unable to access cache at /var/chef. Switching cache to /home/jenkins/.chef\r\n      fatals with a message including the incorrect setting\r\n    unrecognized setting via command line\r\n[2016-11-10T16:24:00+00:00] WARN: *****************************************\r\n[2016-11-10T16:24:00+00:00] WARN: Did not find config file: /etc/chef/client.rb, using command line options.\r\n[2016-11-10T16:24:00+00:00] WARN: *****************************************\r\n[2016-11-10T16:24:00+00:00] INFO: Unable to access cache at /var/chef. Switching cache to /home/jenkins/.chef\r\n      fatals with a message including the incorrect setting\r\n  when both the pidfile and lockfile opts are set to the same value\r\n[2016-11-10T16:24:00+00:00] WARN: *****************************************\r\n[2016-11-10T16:24:00+00:00] WARN: Did not find config file: /etc/chef/client.rb, using command line options.\r\n[2016-11-10T16:24:00+00:00] WARN: *****************************************\r\n    should throw an exception\r\n  behaves like an application that loads a dot d\r\n    when client_d_dir is set to nil\r\n[2016-11-10T16:24:00+00:00] WARN: *****************************************\r\n[2016-11-10T16:24:00+00:00] WARN: Did not find config file: /etc/chef/client.rb, using command line options.\r\n[2016-11-10T16:24:00+00:00] WARN: *****************************************\r\n[2016-11-10T16:24:00+00:00] INFO: Unable to access cache at /var/chef. Switching cache to /home/jenkins/.chef\r\n      does not raise an exception\r\n    when client_d_dir is set to a directory with configuration\r\n[2016-11-10T16:24:00+00:00] WARN: *****************************************\r\n[2016-11-10T16:24:00+00:00] WARN: Did not find config file: /etc/chef/client.rb, using command line options.\r\n[2016-11-10T16:24:00+00:00] WARN: *****************************************\r\n[2016-11-10T16:24:00+00:00] INFO: Unable to access cache at /var/chef. Switching cache to /home/jenkins/.chef\r\n      loads the configuration in order\r\n    when client_d_dir is set to a directory without configuration\r\n[2016-11-10T16:24:00+00:00] WARN: *****************************************\r\n[2016-11-10T16:24:00+00:00] WARN: Did not find config file: /etc/chef/client.rb, using command line options.\r\n[2016-11-10T16:24:00+00:00] WARN: *****************************************\r\n[2016-11-10T16:24:00+00:00] INFO: Unable to access cache at /var/chef. Switching cache to /home/jenkins/.chef\r\n      does not raise an exception\r\n    when client_d_dir is set to a directory containing a directory named foo.rb\r\n[2016-11-10T16:24:00+00:00] WARN: *****************************************\r\n[2016-11-10T16:24:00+00:00] WARN: Did not find config file: /etc/chef/client.rb, using command line options.\r\n[2016-11-10T16:24:00+00:00] WARN: *****************************************\r\n[2016-11-10T16:24:00+00:00] INFO: Unable to access cache at /var/chef. Switching cache to /home/jenkins/.chef\r\n      does not raise an exception\r\n\r\nChef::Application::Client setup_application\r\n  should change privileges\r\n\r\nChef::Application::Client configure_chef\r\n[2016-11-10T16:24:00+00:00] WARN: *****************************************\r\n[2016-11-10T16:24:00+00:00] WARN: Did not find config file: /etc/chef/client.rb, using command line options.\r\n[2016-11-10T16:24:00+00:00] WARN: *****************************************\r\n  should set the colored output to true by default on windows and true on all other platforms as well (FAILED - 1)\r\n\r\nChef::Application::Client run_application\r\n  when sent SIGTERM\r\n    when converging in forked process\r\n[2016-11-10T16:24:00+00:00] INFO: Forking chef instance to converge...\r\n[2016-11-10T16:24:00+00:00] FATAL: SIGTERM received, stopping\r\n      should allow child to finish converging\r\n    when running unforked\r\n      should exit gracefully when sent during converge\r\n[2016-11-10T16:24:03+00:00] FATAL: SIGTERM received, stopping\r\n      should exit hard when sent before converge\r\n  when splay is set\r\n[2016-11-10T16:24:03+00:00] INFO: SIGUSR1 received, waking up\r\n[2016-11-10T16:24:04+00:00] INFO: SIGUSR1 received, waking up\r\n[2016-11-10T16:24:05+00:00] INFO: SIGUSR1 received, waking up\r\n    shouldn't sleep when sent USR1\r\n\r\nFailures:\r\n\r\n  1) Chef::Application::Client configure_chef should set the colored output to true by default on windows and true on all other platforms as well\r\n     Failure/Error: Chef::Config.init_openssl\r\n\r\n       #<File (class)> received :read with unexpected arguments\r\n         expected: (\"/etc/chef/client.rb\")\r\n              got: (\"/proc/sys/crypto/fips_enabled\")\r\n        Please stub a default value first if message might be received with other args as well.\r\n     # ./chef-config/lib/chef-config/fips.rb:48:in `fips?'\r\n     # ./chef-config/lib/chef-config/config.rb:562:in `block in <class:Config>'\r\n     # /home/jenkins/.rvm/gems/ruby-2.3.1/gems/mixlib-config-2.2.4/lib/mixlib/config/configurable.rb:48:in `get'\r\n     # /home/jenkins/.rvm/gems/ruby-2.3.1/gems/mixlib-config-2.2.4/lib/mixlib/config.rb:433:in `internal_get'\r\n     # /home/jenkins/.rvm/gems/ruby-2.3.1/gems/mixlib-config-2.2.4/lib/mixlib/config.rb:454:in `internal_get_or_set'\r\n     # /home/jenkins/.rvm/gems/ruby-2.3.1/gems/mixlib-config-2.2.4/lib/mixlib/config.rb:475:in `block in define_attr_accessor_methods'\r\n     # ./chef-config/lib/chef-config/config.rb:568:in `init_openssl'\r\n     # ./lib/chef/application.rb:88:in `configure_chef'\r\n     # ./spec/unit/application/client_spec.rb:424:in `block (2 levels) in <top (required)>'\r\n\r\nFinished in 8.55 seconds (files took 1.97 seconds to load)\r\n32 examples, 1 failure\r\n\r\nFailed examples:\r\n\r\nrspec ./spec/unit/application/client_spec.rb:431 # Chef::Application::Client configure_chef should set the colored output to true by default on windows and true on all other platforms as well\r\n```\r\n\r\n**second test case failure log** \r\n\r\n\r\n```\r\njenkins@1e4fff739f96:~/chef> bundle exec rspec spec/unit/application_spec.rb\r\n\r\nWARNING: Shared example group 'with a chef repo' has been previously defined at:\r\n  /home/jenkins/.rvm/gems/ruby-2.3.1/gems/cheffish-4.0.0/lib/cheffish/rspec/repository_support.rb:12\r\n...and you are now defining it at:\r\n  /home/jenkins/chef/spec/support/shared/integration/integration_helper.rb:111\r\nThe new definition will overwrite the original one.\r\n/home/jenkins/.rvm/rubies/ruby-2.3.1/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in `require': cannot load such file -- win32/daemon (LoadError)\r\n        from /home/jenkins/.rvm/rubies/ruby-2.3.1/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in `require'\r\nRun options:\r\n  include {:focus=>true}\r\n  exclude {:provider=>#<Proc:./spec/spec_helper.rb:183>, :arch=>#<Proc:./spec/spec_helper.rb:177>, :ruby=>\"2.3.1\", :chef=>\"12.17.1\", :not_wpar=>true, :broken=>true, :openssl_lt_101=>true, :requires_root_or_running_windows=>true, :requires_root=>true, :selinux_only=>true, :debian_family_only=>true, :aix_only=>true, :system_windows_service_gem_only=>true, :solaris_only=>true, :windows_domain_joined_only=>true, :windows_powershell_dsc_only=>true, :ruby32_only=>true, :ruby64_only=>true, :windows_nano_only=>true, :windows32_only=>true, :windows64_only=>true, :windows_2008r2_or_later=>true, :win2k3_only=>true, :mac_osx_only=>true, :windows_only=>true, :appveyor_only=>true, :volatile_from_verify=>false, :volatile=>true, :external=>true}\r\n\r\nAll examples were filtered out; ignoring {:focus=>true}\r\n\r\nChef::Application\r\n  when there are no configuration errors\r\n    reconfigure\r\n      should configure chef\r\n      should configure logging\r\n      should not receive set_specific_recipes\r\n    Chef::Application\r\n      run\r\n        should reconfigure the application before running\r\n        should setup the application before running it\r\n        should run the actual application\r\n    configure_chef\r\n      should parse the commandline options\r\n      when a config_file is present\r\n        should configure chef::config from a file (FAILED - 1)\r\n        should merge the local config hash into chef::config (FAILED - 2)\r\n        when openssl fips\r\n          sets openssl in fips mode\r\n      when there is no config_file defined\r\n        should emit a warning\r\n      when the config file is set and not found\r\n        should use the passed in command line options and defaults\r\n    when configuring the logger\r\n      should initialise the chef logger\r\n      when log_level is not set\r\n        behaves like log_level_is_auto\r\n          when STDOUT is to a tty\r\n            configures the log level to :warn\r\n            when force_logger is configured\r\n              configures the log level to info\r\n          when STDOUT is not to a tty\r\n            configures the log level to :info\r\n            when force_formatter is configured\r\n              sets the log level to :warn\r\n      when log_level is :auto\r\n        behaves like log_level_is_auto\r\n          when STDOUT is to a tty\r\n            configures the log level to :warn\r\n            when force_logger is configured\r\n              configures the log level to info\r\n          when STDOUT is not to a tty\r\n            configures the log level to :info\r\n            when force_formatter is configured\r\n              sets the log level to :warn\r\n      log_location\r\n        behaves like sets log_location\r\n          when the configured value is :syslog\r\n            it sets log_location to an instance of Chef::Log::Syslog\r\n        behaves like sets log_location\r\n          when the configured value is \"syslog\"\r\n            it sets log_location to an instance of Chef::Log::Syslog\r\n  with an invalid log location\r\n    logs a fatal error and exits\r\n  class method: fatal!\r\n[2016-11-10T16:32:01+00:00] ERROR: Chef RFC 062 (https://github.com/chef/chef-rfc/master/rfc062-exit-status.md) defines the exit codes that should be used with Chef.  Chef::Application::ExitCode defines valid exit codes In a future release, non-standard exit codes will be redefined as GENERIC_FAILURE unless `exit_status` is set to `:disabled` in your client.rb. at /home/jenkins/chef/spec/unit/application_spec.rb:299:in `block (3 levels) in <top (required)>'\r\n    should log an error message to the logger\r\n    when an exit code is supplied\r\n[2016-11-10T16:32:01+00:00] ERROR: Chef RFC 062 (https://github.com/chef/chef-rfc/master/rfc062-exit-status.md) defines the exit codes that should be used with Chef.  Chef::Application::ExitCode defines valid exit codes In a future release, non-standard exit codes will be redefined as GENERIC_FAILURE unless `exit_status` is set to `:disabled` in your client.rb. at /home/jenkins/chef/spec/unit/application_spec.rb:305:in `block (4 levels) in <top (required)>'\r\n      should exit with the given exit code\r\n    when an exit code is not supplied\r\n[2016-11-10T16:32:01+00:00] ERROR: Chef RFC 062 (https://github.com/chef/chef-rfc/master/rfc062-exit-status.md) defines the exit codes that should be used with Chef.  Chef::Application::ExitCode defines valid exit codes In a future release, non-standard exit codes will be redefined as GENERIC_FAILURE unless `exit_status` is set to `:disabled` in your client.rb. at /home/jenkins/chef/spec/unit/application_spec.rb:312:in `block (4 levels) in <top (required)>'\r\n      should exit with the default exit code\r\n  setup_application\r\n    should raise an error\r\n  run_application\r\n    should raise an error\r\n  when the config file is not available\r\n    should warn for bad config file path\r\n  run_chef_client\r\n    with an application\r\n      when called with an invalid argument\r\n        should raise an argument error detailing the problem\r\n      when called with an Array-like argument (#size)\r\n        should be cool\r\n  configuration errors\r\n    when config file exists but contains errors\r\n      should raise informative fatals for badly written config\r\n\r\nFailures:\r\n\r\n  1) Chef::Application when there are no configuration errors configure_chef when a config_file is present should configure chef::config from a file\r\n     Failure/Error: Chef::Config.init_openssl\r\n\r\n       #<File (class)> received :read with unexpected arguments\r\n         expected: (\"/etc/chef/default.rb\")\r\n              got: (\"/proc/sys/crypto/fips_enabled\")\r\n     # ./chef-config/lib/chef-config/fips.rb:48:in `fips?'\r\n     # ./chef-config/lib/chef-config/config.rb:562:in `block in <class:Config>'\r\n     # /home/jenkins/.rvm/gems/ruby-2.3.1/gems/mixlib-config-2.2.4/lib/mixlib/config/configurable.rb:48:in `get'\r\n     # /home/jenkins/.rvm/gems/ruby-2.3.1/gems/mixlib-config-2.2.4/lib/mixlib/config.rb:433:in `internal_get'\r\n     # /home/jenkins/.rvm/gems/ruby-2.3.1/gems/mixlib-config-2.2.4/lib/mixlib/config.rb:454:in `internal_get_or_set'\r\n     # /home/jenkins/.rvm/gems/ruby-2.3.1/gems/mixlib-config-2.2.4/lib/mixlib/config.rb:475:in `block in define_attr_accessor_methods'\r\n     # ./chef-config/lib/chef-config/config.rb:568:in `init_openssl'\r\n     # ./lib/chef/application.rb:88:in `configure_chef'\r\n     # ./spec/unit/application_spec.rb:136:in `block (5 levels) in <top (required)>'\r\n\r\n  2) Chef::Application when there are no configuration errors configure_chef when a config_file is present should merge the local config hash into chef::config\r\n     Failure/Error: Chef::Config.init_openssl\r\n\r\n       #<File (class)> received :read with unexpected arguments\r\n         expected: (\"/etc/chef/default.rb\")\r\n              got: (\"/proc/sys/crypto/fips_enabled\")\r\n     # ./chef-config/lib/chef-config/fips.rb:48:in `fips?'\r\n     # ./chef-config/lib/chef-config/config.rb:562:in `block in <class:Config>'\r\n     # /home/jenkins/.rvm/gems/ruby-2.3.1/gems/mixlib-config-2.2.4/lib/mixlib/config/configurable.rb:48:in `get'\r\n     # /home/jenkins/.rvm/gems/ruby-2.3.1/gems/mixlib-config-2.2.4/lib/mixlib/config.rb:433:in `internal_get'\r\n     # /home/jenkins/.rvm/gems/ruby-2.3.1/gems/mixlib-config-2.2.4/lib/mixlib/config.rb:454:in `internal_get_or_set'\r\n     # /home/jenkins/.rvm/gems/ruby-2.3.1/gems/mixlib-config-2.2.4/lib/mixlib/config.rb:475:in `block in define_attr_accessor_methods'\r\n     # ./chef-config/lib/chef-config/config.rb:568:in `init_openssl'\r\n     # ./lib/chef/application.rb:88:in `configure_chef'\r\n     # ./spec/unit/application_spec.rb:141:in `block (5 levels) in <top (required)>'\r\n\r\nFinished in 0.08831 seconds (files took 1.98 seconds to load)\r\n33 examples, 2 failures\r\n\r\nFailed examples:\r\n\r\nrspec ./spec/unit/application_spec.rb:134 # Chef::Application when there are no configuration errors configure_chef when a config_file is present should configure chef::config from a file\r\nrspec ./spec/unit/application_spec.rb:139 # Chef::Application when there are no configuration errors configure_chef when a config_file is present should merge the local config hash into chef::config\r\n\r\n```\r\n\r\nAny pointers to resolve the above test case failure errors ?\r\n\r\nRegards,\r\nAmit\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RyanJarv": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5513", "title": "Upstart provider only supports the start and stop states", "body": "## Description\r\n\r\nThe regex to check for states in the Upstart provider only looks for start and stop.\r\n\r\nhttps://github.com/chef/chef/blob/9d09f9e23db45eaf71bc9421507a25fccac1293b/lib/chef/provider/service/upstart.rb#L36\r\n\r\nIf the service is in any other state it will raise the following error:\r\n\r\n        NoMethodError\r\n        -------------\r\n        undefined method `[]' for nil:NilClass\r\n\r\nat\r\n\r\nhttps://github.com/chef/chef/blob/9d09f9e23db45eaf71bc9421507a25fccac1293b/lib/chef/provider/service/upstart.rb#L253\r\n\r\n## Chef Version\r\n\r\nchef-client: 12.15.19\r\n\r\n## Platform Version\r\n\r\nUbuntu 14.04\r\n\r\n## Replication Case\r\n\r\nhttps://github.com/RyanJarv/chef_upstart_bug", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/issues/5130", "title": "validation_client_name not escaped properly when using knife bootstrap", "body": "When you have a single quote in the validation_client_name of knife.rb it doesn't get escaped properly when running knife bootstrap.\n\nIn my case I had literally set the validation_client_name to \"A path that doesn't exist\" because of another bug I was running into with some code thinking nil/false was a file, need to dig into that and submit another report for that though.\n\nChef: 12.11.18\n\nClient: OSx\nServer: Ubuntu\n\n```\n\u279c  example mkdir .chef\n\u279c  example git:(master) \u2717 cat <<EOH\nheredoc> validation_client_name \"A path that doesn't exist\"\nheredoc> EOH\nvalidation_client_name \"A path that doesn't exist\"\n\u279c  example git:(master) \u2717 knife bootstrap ubuntu@1.1.1.1 -z -i ~/.ssh/privatekey.pem    \nDoing old-style registration with the validation key at ...\nDelete your validation key in order to use your user credentials instead\n\nConnecting to 52.40.10.128\n52.40.10.128 bash: -c: line 196: unexpected EOF while looking for matching `\"'\n52.40.10.128 bash: -c: line 199: syntax error: unexpected end of file\n\u279c  example git:(master) \u2717 \n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "davidcpell": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5510", "title": "chef-client requires specifying default formatter output when redirecting to file", "body": "## Description\r\n\r\n`chef-client` requires specifying the default formatter output (`-F doc`) when redirecting stdout to a file.\r\n\r\nAccording to the `chef-client` doc, `-F doc` is the *default* formatter output, but something happens when redirecting that requires it to be specified.\r\n\r\n## Chef Version\r\n\r\n12.5.1\r\n\r\n## Platform Version\r\n\r\nRHEL 6.8\r\n\r\n## Replication Case\r\n\r\n1. Run `chef-client > my_log.log`. This will result in a totally empty file (0 bytes).\r\n\r\n2. Run `chef-client -F doc > my_log.log`. This will result in output being redirected correctly. The file will contain what would've originally been printed to stdout.\r\n\r\n## Client Output\r\n\r\nNo output from `chef-client`. It correctly avoids stdout but isn't redirected correctly.\r\n\r\n### NOTE: CHEF CLIENT BUGS ONLY\r\n\r\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\r\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\r\n\r\n* [Server issues](https://github.com/chef/chef-server/issues/new)\r\n* [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\r\n* Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\r\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Sauraus": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5455", "title": "chef-client 12.15.19 on OSX 10.12 bash  cannot execute as specific user except root (due to TMPDIR issues)", "body": "## Description\n\nSpecifying a user on the bash resource throws an Permission denied error because the path leading up to where the bash code is rendered is not accessible to that user.\n## Chef Version\n\n12.15.19\n## Platform Version\n\nOS X 10.12 (Sierra)\n## Replication Case\n\n```\nbash \"Setup osx_signing.keychain for #{node['teamcity']['agent']['user']}\" do\n    user node['teamcity']['agent']['user']\n    group node['teamcity']['agent']['group']\n    cwd \"/Users/#{node['teamcity']['agent']['user']}\"\n    environment({ 'HOME' => \"/Users/#{node['teamcity']['agent']['user']}\", 'USER' => node['teamcity']['agent']['user'] }) # rubocop:disable Lint/ParenthesesAsGroupedExpression\n    code <<-EOH\n      #!/bin/sh\n      . /etc/rc.common\n      security create-keychain #{Shellwords.escape(password).prepend('-p ')} osx_signing.keychain\n      security import ./osx_signing.p12 -k osx_signing.keychain #{Shellwords.escape(p12_pw).prepend('-P ')} -A\n      security lock-keychain osx_signing.keychain\n    EOH\n    sensitive true\nend\n```\n## Client Output\n\nThe problem is that the final `tmp` (/var/folders/zz/zyxvpxvq6csfxvn_n0000000000000/T) folder is 00700, the entire tree up to that final `T` folder is 00755.\n\n```\nsudo ls -asl /var/folders/zz/zyxvpxvq6csfxvn_n0000000000000  \n0 drwxr-xr-x@  6 root  wheel  204 Oct  7 11:31 .\n0 drwxr-xr-x@ 14 root  wheel  476 Oct  7 11:33 ..\n0 drwx------@ 11 root  wheel  374 Oct 13 12:47 T\n```\n\n```\n* bash[Setup osx_signing.keychain for teamcity] action run\n\n    ================================================================================\n    Error executing action `run` on resource 'bash[Setup osx_signing.keychain for teamcity]'\n    ================================================================================\n\n    Mixlib::ShellOut::ShellCommandFailed\n    ------------------------------------\n    Expected process to exit with [0], but received '126'\n    ---- Begin output of \"bash\"  \"/var/folders/zz/zyxvpxvq6csfxvn_n0000000000000/T/chef-script20161013-2837-1io2pcg\" ----\n    STDOUT: \n    STDERR: bash: /var/folders/zz/zyxvpxvq6csfxvn_n0000000000000/T/chef-script20161013-2837-1io2pcg: Permission denied\n    ---- End output of \"bash\"  \"/var/folders/zz/zyxvpxvq6csfxvn_n0000000000000/T/chef-script20161013-2837-1io2pcg\" ----\n    Ran \"bash\"  \"/var/folders/zz/zyxvpxvq6csfxvn_n0000000000000/T/chef-script20161013-2837-1io2pcg\" returned 126\n```\n## Stacktrace\n\n```\nGenerated at 2016-10-13 12:47:34 -0700\nMixlib::ShellOut::ShellCommandFailed: bash[Setup osx_signing.keychain for teamcity] (rblx_teamcity::mac_os_x line 67) had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process to exit with [0], but received '126'\n---- Begin output of \"bash\"  \"/var/folders/zz/zyxvpxvq6csfxvn_n0000000000000/T/chef-script20161013-2837-1io2pcg\" ----\nSTDOUT: \nSTDERR: bash: /var/folders/zz/zyxvpxvq6csfxvn_n0000000000000/T/chef-script20161013-2837-1io2pcg: Permission denied\n---- End output of \"bash\"  \"/var/folders/zz/zyxvpxvq6csfxvn_n0000000000000/T/chef-script20161013-2837-1io2pcg\" ----\nRan \"bash\"  \"/var/folders/zz/zyxvpxvq6csfxvn_n0000000000000/T/chef-script20161013-2837-1io2pcg\" returned 126\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/mixlib-shellout-2.2.7/lib/mixlib/shellout.rb:289:in `invalid!'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/mixlib-shellout-2.2.7/lib/mixlib/shellout.rb:276:in `error!'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/mixin/shell_out.rb:45:in `shell_out!'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/provider/execute.rb:62:in `block in action_run'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/mixin/why_run.rb:52:in `add_action'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/provider.rb:176:in `converge_by'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/provider/execute.rb:60:in `action_run'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/provider/script.rb:63:in `action_run'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/provider.rb:145:in `run_action'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/resource.rb:603:in `run_action'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/runner.rb:69:in `run_action'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/runner.rb:97:in `block (2 levels) in converge'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/runner.rb:97:in `each'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/runner.rb:97:in `block in converge'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/resource_collection/resource_list.rb:94:in `block in execute_each_resource'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/resource_collection/stepable_iterator.rb:114:in `call_iterator_block'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/resource_collection/stepable_iterator.rb:103:in `iterate'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/resource_collection/resource_list.rb:92:in `execute_each_resource'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/runner.rb:96:in `converge'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/client.rb:669:in `block in converge'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/client.rb:664:in `catch'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/client.rb:664:in `converge'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/client.rb:703:in `converge_and_save'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/client.rb:283:in `run'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/application.rb:302:in `block in fork_chef_client'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/application.rb:290:in `fork'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/application.rb:290:in `fork_chef_client'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/application.rb:255:in `block in run_chef_client'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/local_mode.rb:44:in `with_server_connectivity'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/application.rb:243:in `run_chef_client'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/application/client.rb:464:in `sleep_then_run_chef_client'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/application/client.rb:451:in `block in interval_run_chef_client'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/application/client.rb:450:in `loop'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/application/client.rb:450:in `interval_run_chef_client'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/application/client.rb:434:in `run_application'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/lib/chef/application.rb:60:in `run'\n/opt/chef/embedded/lib/ruby/gems/2.3.0/gems/chef-12.15.19/bin/chef-client:26:in `<top (required)>'\n/usr/local/bin/chef-client:54:in `load'\n/usr/local/bin/chef-client:54:in `<main>'\n```\n### NOTE: CHEF CLIENT BUGS ONLY\n\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\n- [Server issues](https://github.com/chef/chef-server/issues/new)\n- [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\n- Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "causton81": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5416", "title": "bash resource \"flags\" option not inherited by guards when using guard_interpreter", "body": "## Description\n\nbash resource guards with `guard_interpreter :bash` do not inherit `flags` option. See https://github.com/chef/chef/blob/master/lib/chef/resource/execute.rb#L162-L168\n\nOn a fresh `vagrant up` I am installing pyenv such that pyenv is initialized by ~/.profile. I need to set `flags '-l'` so that ~/.profile gets loaded with new pyenv config during that first converge.\n\nIt's pretty dirty to use pyenv this way and I should probably just use the python community cookbook to setup the system python, but I thought I'd bring it up since it's confusing to have the `code` part find and run a command that's not supposed to run, then have that command fail for the exact reason that the guard protects against. I used the old trick of \n\n```\nnot_if \"bash -l -c 'some-command' &>/tmp/guard.out\"\n```\n\nto diagnose it.\n## Chef Version\n\n12.14.89\n## Platform Version\n\nNo LSB modules are available.\nDistributor ID: Debian\nDescription:    Debian GNU/Linux 7.11 (wheezy)\nRelease:    7.11\nCodename:   wheezy\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "docwhat": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5412", "title": "Commit f769d7e raises unhelpful NotImplemented errors", "body": "If someone uses `Chef::Resource::User.new(...)` they will get a `NotImplemented` errors attached to the resource `:user_resource_abstract_base_class`.\n\nIdeally, the `NotImplemented` error would explain that `Chef:::Resource.resource_for_node(:user, node).new(...)` should be used instead.\n\nChef 12.14.89 -- Caused by commit f769d7e\n\nYou can see the error raised in chef-cookbooks/jenkins#513\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5412/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "robnasby": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5411", "title": "knife cookbook install not retrieving correct dependencies", "body": "## Description\n\nDependency resolution when installing a cookbook using knife can retrieve an incompatible dependency version.  For example, the `postgresql 4.0.6` cookbook in Supermarket lists a dependency of `openssl ~> 4.0`.  However, `knife` installed `openssl 6.0.0`.  Uploading the cookbooks to Chef Server reports a dependency issue.\n## Chef Version\n\nchef-client version: 12.14.89\n## Platform Version\n\nRedHat Linux 7.2, kernel 3.10.0-327.el7.x86_64\n## Replication Case\n\n`$ knife cookbook site install postgresql`\n`$ knife cookbook upload --all`\n## Client Output\n\nUploading apt            [4.0.2]\nUploading build-essential [7.0.0]\nUploading compat_resource [12.14.7]\nUploading linux-common-admin-tools [1.0.0]\nUploading mingw          [1.2.4]\nUploading openssl        [6.0.0]\nUploading postgresql     [4.0.6]\n**ERROR:** Cookbook postgresql depends on cookbooks which are not currently\n**ERROR:** being uploaded and cannot be found on the server.\n**ERROR:** The missing cookbook(s) are: 'openssl' version '~> 4.0'\n## Stacktrace\n\nN/A\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bradenwright": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5399", "title": "Knife --exit-on-error not working", "body": "## Description\n\nAs far as I can tell knife --exit-on-error is not working\n## Chef Version\n\nChef Development Kit Version: 0.19.1\nchef-client version: 12.15.7\ndelivery version: master (d86679335580be3de22996ef294b20d525889d8d)\nberks version: 5.1.0\nkitchen version: 1.13.2\n## Platform Version\n\nUbuntu\n## Replication Case\n\nChef Server / 2 Nodes to run knife ssh against\n\n```\nknife ssh \"recipe:my_recipe AND chef_environment:staging\" \"sudo chef-client1\" --exit-on-error --concurrency 1\nc01-test.staging.example.com sudo: chef-client1: command not found\nc01.staging.example.com      sudo: chef-client1: command not found\nc02-test.staging.example.com   sudo: chef-client1: command not found\nc02.staging.example.com      sudo: chef-client1: command not found\n```\n\nSeems like this should only run on 1 node and exit, not run on all 4 nodes.\n### NOTE: CHEF CLIENT BUGS ONLY\n\nThis issue tracker is for the code contained within this repo -- `knife` functionality (not\nplugins)\n- [Server issues](https://github.com/chef/chef-server/issues/new)\n- [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\n- Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5399/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bhouse": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5368", "title": "Show journalctl output for systemd unit when action fails", "body": "## Description\n\nWhen using the systemd service provider, if a systemctl action fails the chef log output doesn't provide enough information to determine the cause. Instead it points to journalctl to get more information about the failed systemd unit. For example:\n\n```\n+Mixlib::ShellOut::ShellCommandFailed\n+------------------------------------\n+Expected process to exit with [0], but received '1'\n+---- Begin output of /bin/systemctl --system start foo.service ----\n+STDOUT:\n+STDERR: Job for foo.service failed because the control process exited with error code. See \"systemctl status foo.service\" and \"journalctl -xe\" for details.\n+---- End output of /bin/systemctl --system start foo.service ----\n+Ran /bin/systemctl --system start foo.service returned 1\n```\n\nIt would be very helpful if Chef could recognize that the systemctl command failed, and give some number of lines of the journalctl output to understand what happened without needing to reference journalctl/systemctl after the fact. Thanks!\n## Chef Version\n\nchef-client version: 12.14.87 (and older versions)\n## Platform Version\n\nCentOS 7.2\n## Replication Case\n\nI created a Vagrantfile using `chef-apply` to demonstrate the issue. The Vagrantfile, chef-apply log output, and machine/chef version info is [in this gist](https://gist.github.com/bhouse/166db1dfdd833ec515ca028edac21575).\n## Client Output\n\nSee gist above\n## Stacktrace\n\nSee gist above\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aroeber-kovarus": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5350", "title": "Add deprecation warning when passing provider argument to package resource and point users at declare_resource", "body": "## Description\n\nUsing the rpm_package process with options set system is ignoring options and failing to do expected process. Expected out put is to install the package regardless of what is there or not from the --force option call.\n## Chef Version\n\nchef-client  ==   Chef Client, version 12.13.37\n## Platform Version\n\nOS   ==   CentOS Linux release 7.2.1511 (Core)\n## Replication Case\n\ninstall the updated kernel (kernel-3.10.0_DEVMEM_DISABLED-1.x86_64.rpm), reboot to have take affect. use chef to install header for other application installation.\ncookbook::recipe has the following:\n\n```\nrpm_package 'kernel-headers-3.10.0_DEVMEM_DISABLED-1.x86_64.rpm' do\n   provider Chef::Provider::Package::Rpm\n   source 'http://somesystem.internal/repodir/kernel-headers-3.10.0_DEVMEM_DISABLED-1.x86_64.rpm'\n   options '--force'\n   action :install\nend\n```\n\nCheck of system show package not installed:\nyum list installed | grep kernel-headers-3.10.0_DEVMEM_DISABLED-1\nyum list installed | grep kernel-headers-3.10.0\nyum list installed | grep kernel-header\n      kernel-headers.x86_64              3.10.0_DEVMEM_DISABLED-1           installed\nReturns: No matching Packages to list\n## Client Output\n\nRecipe: initial_deployer::kernal_mod\n- rpm_package[kernel-headers-3.10.0_DEVMEM_DISABLED-1.x86_64.rpm] action installkernel-headers 3.10.0_DEVMEM_DISABLED-1\n  kernel-headers 3.10.0_DEVMEM_DISABLED-1\n  (up to date)\n## Captured logs\n# The debug output (chef-client -l debug) may be useful, but please link to a gist, or truncate it.\n\n[2016-09-20T13:37:38-07:00] INFO: Processing rpm_package[kernel-headers-3.10.0_DEVMEM_DISABLED-1.x86_64.rpm] action install (initial_deployer::kernal_mod line 30)\n[2016-09-20T13:37:38-07:00] DEBUG: rpm_package[kernel-headers-3.10.0_DEVMEM_DISABLED-1.x86_64.rpm] checking rpm status\n[2016-09-20T13:37:38-07:00] DEBUG: rpm_package[kernel-headers-3.10.0_DEVMEM_DISABLED-1.x86_64.rpm] checking install state\n[2016-09-20T13:37:38-07:00] DEBUG: rpm_package[kernel-headers-3.10.0_DEVMEM_DISABLED-1.x86_64.rpm] current version is 3.10.0_DEVMEM_DISABLED-1\n[2016-09-20T13:37:38-07:00] DEBUG: rpm_package[kernel-headers-3.10.0_DEVMEM_DISABLED-1.x86_64.rpm] kernel-headers-3.10.0_DEVMEM_DISABLED-1.x86_64.rpm 3.10.0_DEVMEM_DISABLED-1 satisifies 3.10.0_DEVMEM_DISABLED-1 requirement\n[2016-09-20T13:37:38-07:00] DEBUG: rpm_package[kernel-headers-3.10.0_DEVMEM_DISABLED-1.x86_64.rpm] is already installed - nothing to do\n## Stacktrace\n\nNone found no error indicated from chef,\n### NOTE: CHEF CLIENT BUGS ONLY\n\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\n- [Server issues](https://github.com/chef/chef-server/issues/new)\n- [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\n- Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ebgc": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5309", "title": "support timeout attribute for service resource", "body": "## Description\n\nservices which need long controlled restart/start cycle (more then 10min) are not supported due to mixlib 600sec default timeout\n## Chef Version\n\n12.13.37 and any other which uses chef::mixlib\n## Platform Version\n\nany unix version using chef::mixlib\n## Replication Case\n\nhave a unix service script which has an action (start,stop, reload ...) a 'sleep 610' set and it will fail.\n## Client Output\n## Mixlib::ShellOut::CommandTimeout\n\nCommand timed out after 600s:\nCommand exceeded allowed execution time, process terminated\n## Stacktrace\n## Cookbook Trace:\n\n/var/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:78:in `run_action'\n/var/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:136:in`run_delayed_notification'\n/var/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:124:in `block in run_delayed_notifications'\n/var/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:123:in`each'\n/var/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:123:in `run_delayed_notifications'\n/var/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:113:in`converge'\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rlocke6": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5269", "title": "ifconfig resource does not bring interface down on RHEL7", "body": "## Description\n\nThe output of ifconfig seems to have changed from RHEL6 to RHEL7 so the code matching output lines is failing.  Sample line:\n\nhttps://github.com/chef/chef/blob/master/lib/chef/provider/ifconfig.rb#L72\n\n```\nifconfig '192.168.45.3' do\n      device 'lo:200'\n      action :delete\nend\n```\n## Chef Version\n\n12.9.38\n## Platform Version\n\nRHEL7.2\n## Replication Case\n\nExample above\n## Client Output\n\n```\nThe Recipe: ei-network::ip_aliases\n         * ifconfig[192.168.45.3] action disable (up to date)\n         * ifconfig[192.168.45.3] action delete\n         Recipe: <Dynamically Defined Resource>\n           * file[/etc/sysconfig/network-scripts/ifcfg-lo:200] action delete\n             - delete file /etc/sysconfig/network-scripts/ifcfg-lo:200\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sconicelli": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5255", "title": "Cannot add mount to Windows 2012 R2 Server", "body": "## Description\n\nI am attempting to mount a network share on Windows 2012 R2 Server however it seems the mount is never really being mounted to the OS.  I am logging directly on to the node and then executing \"chef-client\" from PowerShell as an administrator.\n\nWhen I run chef-client, it finishes successfully however nothing is mounted... My \"puts\" expression is showing the value of `\"#{node['mount_repo']['windevice']}\"` however is seems the device is not being interpreted within the \"mount\" block. (see code below).\n\nAny help would be greatly appreciated... \n\nThanks,\nSteve\n## Chef Version\n\nChef client version is 12.12.15\n## Platform Version\n\nOperating system is Windows 2012 R2 (x86_64)\nChef client version is 12.12.15\n## Replication Case\n\nMy `default.rb` recipe's code is as follows:\n\n```\nif platform?(\"windows\")\n    puts \"Mounting #{node['mount_repo']['windevice']} to #{node['mount_repo']['windir']}...\"\n    mount node['mount_repo']['windir'] do\n      device \"#{node['mount_repo']['windevice']}\"\n      username \"#{node['mount_repo']['winuser']}\"\n      password \"#{node['mount_repo']['winpasswd']}\"\n\n      action :mount\n        end\nelse\n    mount node['mount_repo']['nixdir'] do\n      action :mount\n      device \"#{node['mount_repo']['nixdevice']}\"\n        end\nend\n```\n\nWhen I run the chef-client, the \"puts\" command is showing the value of  `#{node['mount_repo']['windevice']}` however it seems it is not being interpreted within the \"mount\" block.\n## Client Output\n\n```\nPS C:\\Windows\\system32> chef-client\nStarting Chef Client, version 12.12.15\nresolving cookbooks for run list: [\"mount_repo\"]\nSynchronizing Cookbooks:\n  - mount_repo (0.1.0)\nInstalling Cookbook Gems:\nCompiling Cookbooks...\nMounting \\\\123.456.789.10\\stage to W:...\nConverging 1 resources\nRecipe: mount_repo::default\n  * mount[W:] action mount\n    - mount  to W:\n\nRunning handlers:\nRunning handlers complete\nChef Client finished, 1/1 resources updated in 18 seconds\n```\n## Stacktrace\n\nPlease include the stacktrace.out output or link to a gist of it, if there is one.\n### NOTE: CHEF CLIENT BUGS ONLY\n\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\n- [Server issues](https://github.com/chef/chef-server/issues/new)\n- [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\n- Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "erikng": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5229", "title": "osx_profile is not idempotent when dealing with <data> types", "body": "## Description\n\nWhen adding `<data>` type to osx_profiles, the chef resource will continually run. This is due to the use of StringIO, which is what the included plist gem uses. (https://github.com/bleything/plist/blob/master/lib/plist/generator.rb#L41-L43).\n\n@natewalck and I have discussed this. Since StringIO is required, osx_profile may need a separate UUID function as a workaround.\n## Chef Version\n\nchef-client 12.13.17\n## Platform Version\n\nmacOS 10.11.6\n## Replication Case\n\nCreate a cookbook that utilizes osx_profile and add a data type.\n\n``` ruby\n#\n# Cookbook Name:: data_profile_test\n# Recipe:: default\n#\n\nprofile_hash = {\n  'PayloadIdentifier' => 'com.company.screensaver',\n  'PayloadRemovalDisallowed' => false,\n  'PayloadScope' => 'System',\n  'PayloadType' => 'Configuration',\n  'PayloadUUID' => '1781fbec-3325-565f-9022-8aa28135c3cc',\n  'PayloadOrganization' => 'Chef',\n  'PayloadVersion' => 1,\n  'PayloadDisplayName' => 'Screensaver Settings',\n  'PayloadContent'=> [\n    {\n      'PayloadType' => 'com.apple.ManagedClient.preferences',\n      'PayloadVersion' => 1,\n      'PayloadIdentifier' => 'com.company.screensaver',\n      'PayloadUUID' => '73fc30e0-1e57-0131-c32d-000c2944c108',\n      'PayloadEnabled' => true,\n      'PayloadDisplayName' => 'com.apple.screensaver',\n      'PayloadContent' => {\n        'com.apple.screensaver' => {\n          'Forced' => [\n            {\n              'mcx_preference_settings' => {\n                'idleTime' => 0,\n                'Datatest' => StringIO.open('test'),\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n\nosx_profile 'Install screensaver profile' do\n  profile profile_hash\nend\n```\n## Client Output\n\n``` ruby\nStarting Chef Client, version 12.13.37\nresolving cookbooks for run list: [\"data_profile_test\"]\nSynchronizing Cookbooks:\n  - data_profile_test (0.0.1)\nInstalling Cookbook Gems:\nCompiling Cookbooks...\nConverging 1 resources\nRecipe: data_profile_test::default\n  * osx_profile[Install screensaver profile] action install\n    - install profile com.company.screensaver\n\nRunning handlers:\nRunning handlers complete\nChef Client finished, 1/1 resources updated in 05 seconds\n\nStarting Chef Client, version 12.13.37\nresolving cookbooks for run list: [\"data_profile_test\"]\nSynchronizing Cookbooks:\n  - data_profile_test (0.0.1)\nInstalling Cookbook Gems:\nCompiling Cookbooks...\nConverging 1 resources\nRecipe: data_profile_test::default\n  * osx_profile[Install screensaver profile] action install\n    - install profile com.company.screensaver\n\nRunning handlers:\nRunning handlers complete\nChef Client finished, 1/1 resources updated in 04 seconds\n```\n## Stacktrace\n\nNo stacktrace\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/5150", "title": "osx_profile cannot handle identifiers with spaces", "body": "@natewalck \n## Description\n\nIf you accidentally (or intentionally) create an osx_profile with an identifier containing a space, `action :remove` will fail\n## Chef Version\n\n12.12.15\n## Platform Version\n\nOS X 10.11.6\n## Replication Case\n\nCreate a profile:\n\n```\nprofile_hash = {\n  'PayloadIdentifier' => 'com.test.profile.chef.global preferences',\n  'PayloadRemovalDisallowed' => false,\n  'PayloadScope' => 'System',\n  'PayloadType' => 'Configuration',\n  'PayloadUUID' => '1781fbec-3325-565f-9022-8aa28135c3cc',\n  'PayloadOrganization' => 'Chef',\n  'PayloadVersion' => 1,\n  'PayloadDisplayName' => 'Test Settings',\n  'PayloadContent'=> [\n    {\n      'PayloadType' => 'com.apple.ManagedClient.preferences',\n      'PayloadVersion' => 1,\n      'PayloadIdentifier' => 'com.company.test',\n      'PayloadUUID' => '73fc30e0-1e57-0131-c32d-000c2944c108',\n      'PayloadEnabled' => true,\n      'PayloadDisplayName' => 'test,\n      'PayloadContent' => {\n        'com.apple.test' => {\n          'Forced' => [\n            {\n              'mcx_preference_settings' => {\n                'Test' => 1,\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n\nosx_profile 'test' do\n  profile profile_hash\nend\n```\n\nattempt to remove it with a cookbook:\n\n```\nosx_profile 'com.test.profile.chef.global preferences' do\n  action :remove\nend\n```\n## Client Output\n\n```\nStarting Chef Client, version 12.12.15\nresolving cookbooks for run list: [\"profile_tests\"]\nSynchronizing Cookbooks:\n  - profile_tests (0.0.0)\nInstalling Cookbook Gems:\nCompiling Cookbooks...\nConverging 1 resources\nRecipe: profile_tests::default\n  * osx_profile[com.test.profile.chef.global preferences] action remove\n    * when removing using the identifier attribute, it must match the profile identifier\n    ================================================================================\n    Error executing action `remove` on resource 'osx_profile[com.test.profile.chef.global preferences]'\n    ================================================================================\n\n    RuntimeError\n    ------------\n    when removing using the identifier attribute, it must match the profile identifier\n\n    Resource Declaration:\n    ---------------------\n    # In /Users/test/.chef/local-mode-cache/cache/cookbooks/profile_tests/recipes/default.rb\n\n      4: osx_profile 'com.test.profile.chef.global preferences' do\n      5:   action :remove\n      6: end\n\n    Compiled Resource:\n    ------------------\n    # Declared in /Users/test/.chef/local-mode-cache/cache/cookbooks/profile_tests/recipes/default.rb:4:in `from_file'\n\n    osx_profile(\"com.test.profile.chef.global preferences\") do\n      action [:remove]\n      retries 0\n      retry_delay 2\n      default_guard_interpreter :default\n      profile_name \"com.test.profile.chef.global preferences\"\n      profile \"com.test.profile.chef.global preferences\"\n      declared_type :osx_profile\n      cookbook_name \"profile_tests\"\n      recipe_name \"default\"\n    end\n\n    Platform:\n    ---------\n    x86_64-darwin13.0\n\n\nRunning handlers:\n[2016-07-29T11:00:39-07:00] ERROR: Running exception handlers\nRunning handlers complete\n[2016-07-29T11:00:39-07:00] ERROR: Exception handlers complete\nChef Client failed. 0 resources updated in 03 seconds\n[2016-07-29T11:00:39-07:00] FATAL: Stacktrace dumped to /Users/autopkg/.chef/local-mode-cache/cache/chef-stacktrace.out\n[2016-07-29T11:00:39-07:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report\n[2016-07-29T11:00:39-07:00] ERROR: osx_profile[com.test.profile.chef.global preferences] (cpe_tests::default line 4) had an error: RuntimeError: when removing using the identifier attribute, it must match the profile identifier\n[2016-07-29T11:00:39-07:00] FATAL: Chef::Exceptions::ChildConvergeError: Chef run process exited unsuccessfully (exit code 1)\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "EmFl": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5227", "title": "resource http_request should allow user defined http_retry_count and sleep_time", "body": "## Description\n\nUsing http_request resource during a chef run always retries 5 times on error with an increasing sleep time between each try.\n## Chef Version\n\nChef: 12.13.37\n## Platform Version\n\ncat /etc/lsb-release\nDISTRIB_ID=Ubuntu\nDISTRIB_RELEASE=16.04\nDISTRIB_CODENAME=xenial\nDISTRIB_DESCRIPTION=\"Ubuntu 16.04.1 LTS\"\n## Replication Case\n\ncreate a http_request resource on a failing service (giving out http 500), there is no way to specify how many retries you want or how long between retries to wait. The retries attribute here will do 5 requests times the attribute (so if you put retries 3 and you have http 500 everytime, you'll do 15 requests).\n## Client Output\n\n```\n http_request[create user kibana4-server] action post[2016-08-19T16:19:53+00:00] ERROR: Server returned error 500 for https://10.155.98.5:9200/_shield/user/kibana4-server, retrying 1/5 in 3s\n[2016-08-19T16:19:56+00:00] ERROR: Server returned error 500 for https://10.155.98.5:9200/_shield/user/kibana4-server, retrying 2/5 in 5s\n[2016-08-19T16:20:01+00:00] ERROR: Server returned error 500 for https://10.155.98.5:9200/_shield/user/kibana4-server, retrying 3/5 in 9s\n[2016-08-19T16:20:10+00:00] ERROR: Server returned error 500 for https://10.155.98.5:9200/_shield/user/kibana4-server, retrying 4/5 in 30s\n[2016-08-19T16:20:40+00:00] ERROR: Server returned error 500 for https://10.155.98.5:9200/_shield/user/kibana4-server, retrying 5/5 in 62s\n```\n\nLet me know if I need to provide other info.\nThanks !\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5227/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/chef/chef/commits/a917fe84578b30b7e60d5aaa06456bdd2cac9adc", "message": "added test for data bag name containing reserved word"}, {"url": "https://api.github.com/repos/chef/chef/commits/3ee897c4f8eed8c1de61ffe60378d4eb1fa5136e", "message": "Fix related to #3058\n\nI think there was a bug introduced by #3058 where any data bag *containing* reserved words are seen as invalid"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wildufo": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5226", "title": "SUSE 12 group provider", "body": "## Description\n\ngroupmod: invalid option -- 'A'\n\nlib/chef/provider/group/suse.rb\n\nLine 54:  shell_out!(\"groupmod -A #{member}....\n## Chef Version\n\nchef-client -v\nChef: 12.5.1\n\nServer: \nchef-11.16.4\nchef-server-core-12.0.1-1\n## Platform Version\n\nSUSE Linux Enterprise Server 12 SP1  (x86_64)\n## Replication Case\n\nRun basically any group-related task\n## Client Output\n\nSTDOUT:\nSTDERR: groupmod: invalid option -- 'A'\nUsage: groupmod [options] GROUP\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "structurefall": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5207", "title": ":manage_home in linux_user resource should force rm_rf or chown -R homedirs owned by other uids", "body": "## Description\n\nIf a home directory exists on a host, but is owned by the wrong user, :manage_home should correct it- at least optionally. The use case here is hosts that have users temporarily. In my case, human users may exist on production hosts for emergencies, but must then be removed. If the users are re-added later with different UIDs (which may happen because people leave/join the company and the UIDs aren't being directly managed,) ownership gets all screwy.\n## Chef Version\n\nChef: 12.11.18\n## Platform Version\n\nAmazon Linux AMI release 2016.03\n## Replication Case\n\nCreate a user on a host with the \"user\" resource and :manage_home. Delete the user (and remove the role or recipe that adds it.) Create a new user with the same UID as the old one, then recreate the user with the \"user\" resource again.\n## Client Output\n\n(not relevant)\n## Stacktrace\n\n(not relevant) \n### NOTE: CHEF CLIENT BUGS ONLY\n\n(not relevant)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "evan2645": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5204", "title": "Upstart service provider considers actual state instead of goal state", "body": "## Description\n\nThe upstart status command returns two pieces of state information: the goal state and the current state. The upstart service provider, when checking the status of a service, uses the current state. This poses a problem as upstart can (and often does) act as a supervision daemon.\n\nUnder various configuration, upstart can make many attempts to flexibly boot a service when its goal state is `start`. During this time, the current state might be something other than `running`. In this condition, Chef will recognize the service as _not_ running, and attempt to issue a start command. This command, of course, fails as upstart has already 'started' the job.\n\nRecommended solution: use the goal state as the current state in the upstart provider in order to avoid fighting with process supervision. I am happy to push a fix for this, but want to know that it is an acceptable direction before working on it.\n## Chef Version\n\n`12.5.1`, but behavior is present in master\n## Platform Version\n\nUbuntu 14.04\n## Replication Case\n1. Drop upstart job config with respawn unlimited, post-stop sleep configured, exec /bin/false\n2. Configure chef service for the job\n3. Start the service immediately\n4. Notify delayed restart of the service\n## Client Output\n\n```\nec2-54-149-139-182.us-west-2.compute.amazonaws.com ================================================================================\u001b[0m\nec2-54-149-139-182.us-west-2.compute.amazonaws.com \u001b[31mError executing action `restart` on resource 'service[topology-manager]'\u001b[0m\nec2-54-149-139-182.us-west-2.compute.amazonaws.com ================================================================================\u001b[0m\nec2-54-149-139-182.us-west-2.compute.amazonaws.com \nec2-54-149-139-182.us-west-2.compute.amazonaws.com \u001b[0mMixlib::ShellOut::ShellCommandFailed\u001b[0m\nec2-54-149-139-182.us-west-2.compute.amazonaws.com ------------------------------------\u001b[0m\nec2-54-149-139-182.us-west-2.compute.amazonaws.com Expected process to exit with [0], but received '1'\nec2-54-149-139-182.us-west-2.compute.amazonaws.com \u001b[0m---- Begin output of /sbin/start topology-manager ----\nec2-54-149-139-182.us-west-2.compute.amazonaws.com \u001b[0mSTDOUT: \nec2-54-149-139-182.us-west-2.compute.amazonaws.com \u001b[0mSTDERR: start: Job is already running: topology-manager\nec2-54-149-139-182.us-west-2.compute.amazonaws.com \u001b[0m---- End output of /sbin/start topology-manager ----\nec2-54-149-139-182.us-west-2.compute.amazonaws.com \u001b[0mRan /sbin/start topology-manager returned 1\u001b[0m\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "funzoneq": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5186", "title": "Unable to bootstrap node over IPv6", "body": "## Description\n\nI'm trying to bootstrap chef onto an IPv6 only node. However it fails to download https://omnitruck-direct.chef.io/chef/install.sh because it's only available over IPv4.\n\n```\n2605:fe80:2100:b001::aaaa --2016-08-10 14:02:20--  https://omnitruck-direct.chef.io/chef/install.sh\n2605:fe80:2100:b001::aaaa Resolving omnitruck-direct.chef.io (omnitruck-direct.chef.io)... 52.10.129.204, 52.26.65.142, 54.191.45.153\n2605:fe80:2100:b001::aaaa Connecting to omnitruck-direct.chef.io (omnitruck-direct.chef.io)|52.10.129.204|:443... failed: Network is unreachable.\n2605:fe80:2100:b001::aaaa Connecting to omnitruck-direct.chef.io (omnitruck-direct.chef.io)|52.26.65.142|:443... failed: Network is unreachable.\n2605:fe80:2100:b001::aaaa Connecting to omnitruck-direct.chef.io (omnitruck-direct.chef.io)|54.191.45.153|:443... failed: Network is unreachable.\n```\n## Chef Version\n\n```\nchef -v\nChef Development Kit Version: 0.12.0\nchef-client version: 12.8.1\nberks version: 4.3.0\nkitchen version: 1.6.0\n```\n## Platform Version\n\nUbuntu 16.04\n## Replication Case\n- Setup a clean Ubuntu 16.04 installation with IPv6 only connectivity.\n- knife bootstrap 2001:DB8::aaaa\n\ntest:\n\n```\ndig omnitruck-direct.chef.io AAAA +short\nomnitruck-elb-1344766176.us-west-2.elb.amazonaws.com.\n```\n## Client Output\n\n```\nknife bootstrap 2001:DB8::aaaa -N app-switchapi.demo.example.com -x root -E production --bootstrap-version 12.5.1 --run-list \"role[base],role[baremetal]\"\nNode app-switchapi.demo.example.com exists, overwrite it? (Y/N) Y\nClient app-switchapi.demo.example.com exists, overwrite it? (Y/N) Y\nCreating new client for app-switchapi.demo.example.com\nCreating new node for app-switchapi.demo.example.com\nConnecting to 2001:DB8::aaaa\nroot@2001:DB8::aaaa's password:\n2001:DB8::aaaa -----> Installing Chef Omnibus (-v 12.5.1)\n2001:DB8::aaaa downloading https://omnitruck-direct.chef.io/chef/install.sh\n2001:DB8::aaaa   to file /tmp/install.sh.1909/install.sh\n2001:DB8::aaaa trying wget...\n2001:DB8::aaaa trying curl...\n2001:DB8::aaaa trying perl...\n2001:DB8::aaaa >>>>>> wget, curl, fetch, perl, or python not found on this instance.\n2001:DB8::aaaa\n2001:DB8::aaaa DEBUG OUTPUT FOLLOWS:\n2001:DB8::aaaa\n2001:DB8::aaaa STDERR from wget:\n2001:DB8::aaaa\n2001:DB8::aaaa --2016-08-10 14:02:20--  https://omnitruck-direct.chef.io/chef/install.sh\n2001:DB8::aaaa Resolving omnitruck-direct.chef.io (omnitruck-direct.chef.io)... 52.10.129.204, 52.26.65.142, 54.191.45.153\n2001:DB8::aaaa Connecting to omnitruck-direct.chef.io (omnitruck-direct.chef.io)|52.10.129.204|:443... failed: Network is unreachable.\n2001:DB8::aaaa Connecting to omnitruck-direct.chef.io (omnitruck-direct.chef.io)|52.26.65.142|:443... failed: Network is unreachable.\n2001:DB8::aaaa Connecting to omnitruck-direct.chef.io (omnitruck-direct.chef.io)|54.191.45.153|:443... failed: Network is unreachable.\n2001:DB8::aaaa\n2001:DB8::aaaa STDERR from curl:\n2001:DB8::aaaa\n2001:DB8::aaaa\n2001:DB8::aaaa\n2001:DB8::aaaa STDERR from perl:\n2001:DB8::aaaa\n2001:DB8::aaaa Can't locate LWP/Simple.pm in @INC (you may need to install the LWP::Simple module) (@INC contains: /etc/perl /usr/local/lib/x86_64-linux-gnu/perl/5.22.1 /usr/local/share/perl/5.22.1 /usr/lib/x86_64-linux-gnu/perl5/5.22 /usr/share/perl5 /usr/lib/x86_64-linux-gnu/perl/5.22 /usr/share/perl/5.22 /usr/local/lib/site_perl /usr/lib/x86_64-linux-gnu/perl-base .) at -e line 1.\n2001:DB8::aaaa BEGIN failed--compilation aborted at -e line 1.\n2001:DB8::aaaa\n2001:DB8::aaaa Starting the first Chef Client run...\n2001:DB8::aaaa sh: 344: chef-client: not found\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "joaompinto": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5164", "title": "The 'user' resource needs support for password maxage, minage and account expiration.", "body": "## Description\n\nOn Linux systems the minage, maxage and account expiration are standard user attributes.\n## Chef Version\n\nChef 12.12.15\n## Platform Version\n\nRHEL7\n## Replication Case\n\nFeature request\n## Client Output\n\nFeature request\n## Stacktrace\n\nPlease include the stacktrace.out output or link to a gist of it, if there is one.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "croath": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5156", "title": "SSH Authentication Bug of Command `Knife`", "body": "## Description\n\nCommand `knife` responses authentication failure while following the tutorial at https://learn.chef.io/manage-a-node/ubuntu/bootstrap-your-node/\n\nWhile using the command in the tutorial:\n\n```\nknife bootstrap ADDRESS --ssh-user USER --ssh-password 'PASSWORD' --sudo --use-sudo-password --node-name node1 --run-list 'recipe[learn_chef_apache2]'\n```\n\nIt always failed when my password is a simple blank space ` `. (I'm sure there's no typo or misspelling because I've tried many and many times. And at the same time SSH just worked fine.) Everything worked fine after I changed my password to another one.\n## Chef Version\n\nChef: 12.12.15\n## Platform Version\n\nThe target node is a Ubuntu 15.10 Desktop 4.2.0-16-generic running in a virtual box locally.\nI ran the `knife` command on an OS X El Capitan 10.11.6 (15G31)\n## Replication Case\n\nJust change your ubuntu login password to a single space ` `, and run the command on a Macbook:\n\n```\nknife bootstrap YOUR_IP --ssh-user YOUR_USERNAME --ssh-password ' ' --sudo --use-sudo-password --node-name node1 --run-list 'recipe[learn_chef_apache2]'\n```\n## Client Output\n\n```\nCreating new client for node1\nCreating new node for node1\nConnecting to 172.16.3.150\ncroath@172.16.3.150's password:\ncroath@172.16.3.150's password:\nERROR: Net::SSH::AuthenticationFailed: Authentication failed for user croath@172.16.3.150@172.16.3.150\n```\n## Stacktrace\n\nPlease include the stacktrace.out output or link to a gist of it, if there is one.\n### NOTE: CHEF CLIENT BUGS ONLY\n\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\n- [Server issues](https://github.com/chef/chef-server/issues/new)\n- [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\n- Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wwilfingertt": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5148", "title": "Using knife.rb setting knife[:script_path] as documented throws exception", "body": "## Description\n\nIn my knife.rb, set `knife[:script_path]` to a string that is a path to Ruby scripts. Try to `knife exec` one of the scripts, exception is thrown.\n## Chef Version\n\n```\n% knife --version\nChef: 12.4.1\n```\n## Platform Version\n\nCentOS 6\n## Replication Case\n\nhttps://docs.chef.io/config_rb_knife_optional_settings.html\n\n![screenshot_072916_111537_am](https://cloud.githubusercontent.com/assets/5647708/17255171/c7fb089c-557d-11e6-9242-12ff0a0f3860.jpg)\n\nAdd to my knife.rb as documented\n\n```\nknife[:script_path] = \"/home/myself/work/scripts\"\n```\n\nThrows a undefined method `each' for string exception.\n\nThis works\n\n```\nknife[:script_path] = [\"/home/myself/work/scripts\"]\n```\n\nThis also works\n\n```\nscript_path \"/home/myself/work/scripts\"\n```\n\nI believe it comes down to [this line here](https://github.com/chef/chef/blob/master/lib/chef/knife/exec.rb#L42). If the documentation said `knife[:script_path]` should be an array of paths, that would be fine.\n## Client Output\n\n```\n% knife exec -VV a_script\nINFO: Using configuration from /home/myself/.chef/knife.rb\nDEBUG: Searching script_path: \"/home/myself/work/scripts/home/myself/.chef/scripts/home/myself/.chef/scripts\"\n/opt/chef/embedded/apps/chef/lib/chef/knife/exec.rb:73:in `find_script': undefined method `each' for #<String:0x00000002013608> (NoMethodError)\n        from /opt/chef/embedded/apps/chef/lib/chef/knife/exec.rb:55:in `block in run'\n        from /opt/chef/embedded/apps/chef/lib/chef/knife/exec.rb:54:in `each'\n        from /opt/chef/embedded/apps/chef/lib/chef/knife/exec.rb:54:in `run'\n        from /opt/chef/embedded/apps/chef/lib/chef/knife.rb:425:in `block in run_with_pretty_exceptions'\n        from /opt/chef/embedded/apps/chef/lib/chef/local_mode.rb:39:in `with_server_connectivity'\n        from /opt/chef/embedded/apps/chef/lib/chef/knife.rb:424:in `run_with_pretty_exceptions'\n        from /opt/chef/embedded/apps/chef/lib/chef/knife.rb:215:in `run'\n        from /opt/chef/embedded/apps/chef/lib/chef/application/knife.rb:142:in `run'\n        from /opt/chef/embedded/apps/chef/bin/knife:25:in `<top (required)>'\n        from /usr/bin/knife:55:in `load'\n        from /usr/bin/knife:55:in `<main>'\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "maxnasonov": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5143", "title": "deploy resource fails with \"symlink() function is unimplemented on this machine\" on Windows", "body": "## Description\n\nSimple deploy via GIT on Windows with the error.  \n## Chef Version\n\n12.9.41\n## Platform Version\n\nWindows 2012 R2 Standard\n## Replication Case\n\nUse a deploy resource on Windows system.\n## Client Output\n\n```\n  NotImplementedError\n  -------------------\n  symlink() function is unimplemented on this machine\n\n  Resource Declaration:\n  ---------------------\n  # In C:/chef/cache/cookbooks/consul-config/recipes/default.rb\n\n   91:   deploy_branch 'consul-scripts' do\n   92:     repo 'git@git.example.com:repo.git'\n   93:     deploy_to 'c:\\ProgramData\\consul\\scripts'\n   94:     ssh_wrapper ssh_wrapper_path\n   95:     branch \"master\"\n   96:     symlink_before_migrate.clear\n   97:     create_dirs_before_symlink.clear\n   98:     purge_before_symlink.clear\n   99:     symlinks.clear\n  100:   end\n  101:\n\n  Compiled Resource:\n  ------------------\n  # Declared in C:/chef/cache/cookbooks/consul-config/recipes/default.rb:91:in `from_file'\n\n  deploy_branch(\"consul-scripts\") do\n    action [:deploy]\n    retries 0\n    retry_delay 2\n    default_guard_interpreter :default\n    deploy_to \"c:\\\\ProgramData\\\\consul\\\\scripts\"\n    repository_cache \"cached-copy\"\n    revision \"master\"\n    remote \"origin\"\n    scm_provider Chef::Provider::Git\n    keep_releases 5\n    enable_checkout true\n    checkout_branch \"deploy\"\n    declared_type :deploy_branch\n    cookbook_name \"consul-config\"\n    recipe_name \"default\"\n    repo \"git@git.example.com:repo.git\"\n    git_ssh_wrapper \"c:\\\\users\\\\administrator\\\\.ssh\\\\ssh_wrapper.bat\"\n    shared_path \"c:\\\\ProgramData\\\\consul\\\\scripts/shared\"\n    destination \"c:\\\\ProgramData\\\\consul\\\\scripts/shared/cached-copy\"\n    current_path \"c:\\\\ProgramData\\\\consul\\\\scripts/current\"\n  end\n```\n## Stacktrace\n\n```\nNotImplementedError: deploy_branch[consul-scripts] (consul-config::default line 91) had an error: NotImplementedError: symlink() function is unimplemented on this machine\nC:/opscode/chef/embedded/lib/ruby/2.1.0/fileutils.rb:355:in `symlink'\nC:/opscode/chef/embedded/lib/ruby/2.1.0/fileutils.rb:355:in `block in ln_s'\nC:/opscode/chef/embedded/lib/ruby/2.1.0/fileutils.rb:1595:in `fu_each_src_dest0'\nC:/opscode/chef/embedded/lib/ruby/2.1.0/fileutils.rb:353:in `ln_s'\nC:/opscode/chef/embedded/lib/ruby/2.1.0/fileutils.rb:376:in `ln_sf'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/provider/deploy.rb:294:in `block in link_current_release_to_production'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/mixin/why_run.rb:52:in `add_action'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/provider.rb:175:in `converge_by'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/provider/deploy.rb:290:in `link_current_release_to_production'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/provider/deploy.rb:211:in `symlink'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/provider/deploy.rb:162:in `deploy'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/provider/deploy.rb:109:in `block in action_deploy'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/provider/deploy.rb:440:in `with_rollback_on_error'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/provider/deploy.rb:108:in `action_deploy'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/provider/deploy/revision.rb:39:in `action_deploy'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/provider.rb:144:in `run_action'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/resource.rb:596:in `run_action'\nC:/chef/cache/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:41:in `run_action'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/runner.rb:97:in `block (2 levels) in converge'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/runner.rb:97:in `each'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/runner.rb:97:in `block in converge'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/resource_collection/resource_list.rb:84:in `block in execute_each_resource'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:116:in `call'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:116:in `call_iterator_block'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:104:in `iterate'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/resource_collection/resource_list.rb:82:in `execute_each_resource'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/runner.rb:96:in `converge'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/client.rb:667:in `block in converge'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/client.rb:662:in `catch'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/client.rb:662:in `converge'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/client.rb:701:in `converge_and_save'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/client.rb:281:in `run'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/application.rb:267:in `run_with_graceful_exit_option'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/application.rb:243:in `block in run_chef_client'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/local_mode.rb:44:in `with_server_connectivity'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/application.rb:226:in `run_chef_client'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/application/client.rb:419:in `run_application'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/lib/chef/application.rb:58:in `run'\nC:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.9.41-universal-mingw32/bin/chef-client:26:in `<top (required)>'\nC:/opscode/chef/bin/chef-client:61:in `load'\nC:/opscode/chef/bin/chef-client:61:in `<main>'\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stevendanna": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5141", "title": "Connections to 'localhost' fail unexpectedly because IPv6 localhost is used", "body": "## Description\n\nFor some users, the use of the `resolv-replace` may change the behavior of core ruby libraries when connecting to `localhost`.   Without `resolv-replace` many ruby network operations will resolv `localhost` to an IPv4 address even on a machine with an IPv6 loopback available.  With `resolv-replace` in place, the IPv6 address is preferred.  While this may be technically correct, it may also break 3rd party code using ruby networking primitives such as cookbook code or knife plugins.\n## Chef Version\n\nThis problem exists on chef-master since e8877cd363642ed6757c48d1ed5ab35509d87e22\n## Platform Version\n\nLinux\n## Replication Case\n\nConsider the following two scripts\n\n``` ruby\n#!/opt/opscode/embedded/bin/ruby\n# ./no_work: This one doesn't work\n\nrequire 'resolv'\nrequire 'resolv-replace'\nrequire 'uri'\nrequire 'open-uri'\nrequire 'openssl'\n\nuri = URI.parse(\"https://localhost/version\")\nputs open(uri, {ssl_verify_mode: OpenSSL::SSL::VERIFY_NONE}).each_line.first\n```\n\n``` ruby\n#!/opt/opscode/embedded/bin/ruby\n# ./works: This one works\n\nrequire 'uri'\nrequire 'open-uri'\nrequire 'openssl'\n\nuri = URI.parse(\"https://localhost/version\")\nputs open(uri, {ssl_verify_mode: OpenSSL::SSL::VERIFY_NONE}).each_line.first\n```\n\nOn the same machine, we get two different results because of the include of `resolv-replace`:\n\n```\n[centos@ip-10-194-11-219 test-data-dir]$ ./works\nchef-server 12.8.0+20160725093028\n[centos@ip-10-194-11-219 test-data-dir]$ ./no_work\n/opt/opscode/embedded/lib/ruby/2.1.0/resolv-replace.rb:23:in `initialize': Connection refused - connect(2) for \"::1\" port 443 (Errno::ECONNREFUSED)\n        from /opt/opscode/embedded/lib/ruby/2.1.0/resolv-replace.rb:23:in `initialize'\n        from /opt/opscode/embedded/lib/ruby/2.1.0/net/http.rb:879:in `open'\n        from /opt/opscode/embedded/lib/ruby/2.1.0/net/http.rb:879:in `block in connect'\n        from /opt/opscode/embedded/lib/ruby/2.1.0/timeout.rb:76:in `timeout'\n        from /opt/opscode/embedded/lib/ruby/2.1.0/net/http.rb:878:in `connect'\n        from /opt/opscode/embedded/lib/ruby/2.1.0/net/http.rb:863:in `do_start'\n        from /opt/opscode/embedded/lib/ruby/2.1.0/net/http.rb:852:in `start'\n        from /opt/opscode/embedded/lib/ruby/2.1.0/open-uri.rb:313:in `open_http'\n        from /opt/opscode/embedded/lib/ruby/2.1.0/open-uri.rb:724:in `buffer_open'\n        from /opt/opscode/embedded/lib/ruby/2.1.0/open-uri.rb:210:in `block in open_loop'\n        from /opt/opscode/embedded/lib/ruby/2.1.0/open-uri.rb:208:in `catch'\n        from /opt/opscode/embedded/lib/ruby/2.1.0/open-uri.rb:208:in `open_loop'\n        from /opt/opscode/embedded/lib/ruby/2.1.0/open-uri.rb:149:in `open_uri'\n        from /opt/opscode/embedded/lib/ruby/2.1.0/open-uri.rb:704:in `open'\n        from /opt/opscode/embedded/lib/ruby/2.1.0/open-uri.rb:30:in `open'\n        from ./no_work:10:in `<main>'\n```\n\n@lamont-granquist and I discussed this issue briefly.  One option we discussed is providing our own version of `resolv-replace` which prefers IPv4 addresses.  Another option would be to revert the commit that adds `require 'resolv-replace'` into chef/application.rb.  A third would be to instruct users to change `localhost` to `127.0.0.1` or `localhost4` if they want to ensure IPv4 will be used.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/2610385", "body": "I do not believe so.  I will open one and link them up later today.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2613678", "body": "Related JIRA bug http://tickets.opscode.com/browse/CHEF-2704\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2613678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2617114", "body": "Part of this commit was part of  https://github.com/opscode/chef/commit/0eea5bfee002f3ab269e2257f2b3f8559d43c5e4, for ticket http://tickets.opscode.com/browse/CHEF-2548, but I missed the removal of -V\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2617114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2617166", "body": "This typo fix was also included in this commit:\n\nhttps://github.com/opscode/chef/commit/b8f46e8ac79a8006ecbf4291e78a88ed0f24708c\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2617166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2617222", "body": "Related ticket: http://tickets.opscode.com/browse/CHEF-2646\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2617222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3729591", "body": "Here is a bug for the related change: http://tickets.opscode.com/browse/CHEF-2900\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3729591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/1644381", "body": "@coderanger Fixed this up for us: https://github.com/opscode/chef/commit/bb7c05f4aae74c2648098c909882d241df78ceba\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1644381/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/2252874", "body": "I believe that #confirm will append \"? (Y/N) \" unless you pass `false` as a second argument.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2252874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/2252875", "body": "https://github.com/opscode/chef/blob/master/lib/chef/knife/core/ui.rb#L201\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2252875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "dorongutman": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5138", "title": "deploy_revision nukes the current release instead of the oldest one", "body": "## Description\n\nI'm using `deploy_revision` to deploy my code. I've defined `keep_releases` to `5`.\nI've started getting weird errors from the servers, in which the files from the current release are missing before the `current` symlink is updated to the new release, and the webserver is restarted.\n\nWhen getting deep into understanding what happened in the server, I can see the following behaviour:\n1. I have the following folders in the `releases` folder: `COMMIT_HASH1`, `COMMIT_HASH2`, `COMMIT_HASH3`, `COMMIT_HASH4`, `COMMIT_HASH5`, where `COMMIT_HASH1` is the oldest and `COMMIT_HASH5` is the newest and the one the `current` symlink is linked to.\n2. I'm deploying a new version - `COMMIT_HASH6`\n3. The new folder is created - `COMMIT_HASH6`\n4. The `current` symlink is updated from `COMMIT_HASH5` to `COMMIT_HASH6`\n5. The folder `COMMIT_HASH5` is deleted (instead of `COMMIT_HASH1`)\n\nWhen looking in the code of the deploy logic, I found that `deploy_revision`'s logic for deciding which folder is the oldest one is by checking the folder `change` time (not the `modification` time) - https://github.com/chef/chef/blob/master/lib/chef/provider/deploy/revision.rb#L90\n\nThe difference between the `change` and the `modification` time is that `change` changes when the meta data of the file changes (like permissions) whereas the `modified` changes when the contents change - http://unix.stackexchange.com/questions/2802/what-is-the-difference-between-modify-and-change-in-stat-command-context.\n\nI then looked at the code of the actual deploy and saw that `enforce_ownership` runs 2 times in the deploy process - https://github.com/chef/chef/blob/master/lib/chef/provider/deploy.rb#L155 and https://github.com/chef/chef/blob/master/lib/chef/provider/deploy.rb#L158.\n\nWhen looking inside the `enforce_ownership` code, I saw that it uses `FileUtils.chown_R` on the `deploy_to` directoy (https://github.com/chef/chef/blob/master/lib/chef/provider/deploy.rb#L278) which basically runs unix' `chown` (http://ruby-doc.org/stdlib-2.3.1/libdoc/fileutils/rdoc/FileUtils.html#method-c-chown_R - click the `click to toggle source` when mouseover the title).\n\nI tried running `chown -Rf` with the same user and group of a directory in an ubuntu 14.04 terminal, afterworth I ran `stat directoryname` and saw that the `change` timestamp changed at the exact time I ran the `chown`, even though I used the same user and group the directoy had before.\n\nSo it seems that the `deploy_revision` mechanism is broken as all the `releases` folders' `change` timestamp is changed on every deploy, making the decision of which folder should be deleted as it's the oldest one - a random one.\n## Chef Version\n\nI'm running in AWS OpsWorks, with the most updated agent (4016) that runs Chef Client 12.11.18.\n## Platform Version\n\nUbuntu 14.04, on AWS.\n## Replication Case\n\nSee Above.\n## Client Output\n\nNot relevant.\n## Stacktrace\n\nNot relevant.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "haidangwa": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5086", "title": "knife needs to enforce chef_type when `from file` sub-command is used", "body": "## Description\n\nWith `knife environment from file` or `knife role from file`, the chef_type specification is not enforced. I can easily upload an environments JSON as a role by doing this: `knife role from file Dev.json`, when Dev.json is really an environments file.\n## Chef Version\n\nchefdk 0.15.15, but I believe this bug goes way back\n## Platform Version\n\nRedhat and Mac\n## Replication Case\n\n`knife role from file Dev.json`, when Dev.json is really an environments file.\n\nThere needs to be some validation that the JSON is being uploaded as the right type by enforcing chef_type in the JSON.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5086/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "arielrolfo": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5055", "title": "knife status show \"minutes\" instead of \"seconds\"", "body": "## Description\n\nWhen a node.save operation is executed and a \"knife status\" is immediately executed I get \"xx minutes\" instead of \"xx seconds\".\n## Chef Version\n\nv12.11\n## Platform Version\n\nrhel 7\n## Replication Case\n\nIn order to replicate this issue a node has to run the ohai recipe and \"knife status | grep the-node\" has to be executed immediately after that and you will notice:\n\n`59 minutes ago, the-node-here, redhat 7.1.`\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jjustice6": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5054", "title": "Group provider fails on AIX when the group already exists", "body": "## Description\n\nAttempting to create a group on AIX results in an error if the group already exists:\n`group[chef] had an error: Chef::Exceptions::Exec: chgroup 'id=15848' foobar returned 17, expected 0`\n\nThe larger error message indicates the group resource invocation looks fine: \n## Chef Version\n\nChef: 12.9.41\n## Platform Version\n\nAIX 7.1.0.0\n## Replication Case\n\nAttempt to create a group with a specified ID that already exists on the system, matching the ID that already exists.\n## Client Output\n\n```\n      Resource Declaration:\n      ---------------------\n\n       93:           group group_name do\n       94:             gid group_id\n       95:             system true\n       96:           end\n       97:         end\n\n      Compiled Resource:\n      ------------------\n\n      group(\"foobar\") do\n        action [:create]\n        retries 0\n        retry_delay 2\n        default_guard_interpreter :default\n        group_name \"foobar\"\n        gid \"15848\"\n        declared_type :group\n        cookbook_name \"our-cookbook\"\n        system true\n      end\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5054/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "adbertram": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5044", "title": "dsc_script does not show verbose output", "body": "## Description\n\nWhen using the dsc_script resource, the verbose output from the LCM does not show up when invoking chef-client\n## Chef Version\n\n12.11.18\n## Platform Version\n\nWindows Server 2012 R2/WMFv5\n## Replication Case\n\nknife winrm $NodeFqdn -m chef-client -x $UserName -P $Password --verbose\n\n@smurawski \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ferventcoder": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5040", "title": "chocolatey_package should build candidates one at a time", "body": "## Description\n\nhttps://github.com/chef/chef/blob/de78e3902a6b1743f0d69bbac073c274ed85cb80/lib/chef/provider/package/chocolatey.rb#L229-L239\n\nThe above code on first glance looks like it would be more efficient because it is just one call to choco, but it actually is less efficient. Caching strategies are prepped already for `choco list package1`, `choco list package2` versus `choco list package1 package2 packageN`. We can't effectively cache the latter, it ends up using much more memory and increases load on https://chocolatey.org.\n\nFurther, I think we are going to need to flip our filter here to move to an \"AND\" instead of an \"OR\" to handle future cases (once of course you all fix it in this provider) because of the increased load we've been seeing against the site.\n## Chef Version\n\nAny current\n## Platform Version\n\nWindows\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "akadoya": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5028", "title": "Opscode-reporting-ctl reconfigure keeps failing when running it through daemonized chef-client", "body": "## Description\n\nHi, I am using chef server 12.5.0(with reporting addon), chef-client 12.8.1 and running chef-server cookbook 4.1.0 to manage this server and its addons.\nRecently, we found that chef client run kept failing with the error like below after some research, I've found this is because chef-client daemon is not passing HOME env variable when executing opscode-reporting-ctl through chef-ingredient cookbook.\nshouldn't chef-client daemon start with necessary environment variables? (or...is it something opscode-reporting-ctl command should take care?)\n## Chef Version\n\nchef server 12.5.0(chef-server cookbook 4.1.0)\nchef-client 12.8.1\n## Platform Version\n\nUbuntu 14.04\n## Replication Case\n\nadd opscode-reporting-ctl reconfigure inside of chef recipe and run it through daemonized chef-client\n## Client Output\n\n```\nexecute[opscode-reporting-reconfigure] (/var/chef/cache/cookbooks/chef-ingredient/libraries/chef_ingredient_provider.rb line 105) had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process to exit with [0], but received '1'\n---- Begin output of opscode-reporting-ctl reconfigure ----\nSTDOUT: [2016-06-10T23:37:30+00:00] INFO: Started chef-zero at chefzero://localhost:8889 with repository at /opt/opscode-reporting/embedded\n  One version per cookbook\n(...)\ne[0m[2016-06-10T23:37:52+00:00] INFO: Running queued delayed notifications before re-raising exception\n[2016-06-10T23:37:52+00:00] ERROR: Running exception handlers\n[2016-06-10T23:37:52+00:00] ERROR: Exception handlers complete\n[2016-06-10T23:37:52+00:00] FATAL: Stacktrace dumped to /opt/opscode-reporting/embedded/cookbooks/cache/chef-stacktrace.out\n[2016-06-10T23:37:52+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report\n[2016-06-10T23:37:52+00:00] ERROR: execute[/opt/opscode/embedded/bin/rabbitmqctl add_user runs 3409a53d549c007c42370a16746b960acdfbf72bc12dc2e08c4e8264ec7ba7e06e37e98532eadd2a4a7ffc163019909632e5] (opscode-reporting::rabbitmq line 29) had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process to exit with [0], but received '1'\n---- Begin output of /opt/opscode/embedded/bin/rabbitmqctl add_user runs 3409a53d549c007c42370a16746b960acdfbf72bc12dc2e08c4e8264ec7ba7e06e37e98532eadd2a4a7ffc163019909632e5 ----\nSTDOUT: \nSTDERR: erlexec: HOME must be set\n---- End output of /opt/opscode/embedded/bin/rabbitmqctl add_user runs 3409a53d549c007c42370a16746b960acdfbf72bc12dc2e08c4e8264ec7ba7e06e37e98532eadd2a4a7ffc163019909632e5 ----\nRan /opt/opscode/embedded/bin/rabbitmqctl add_user runs 3409a53d549c007c42370a16746b960acdfbf72bc12dc2e08c4e8264ec7ba7e06e37e98532eadd2a4a7ffc163019909632e5 returned 1\n[2016-06-10T23:37:52+00:00] FATAL: Chef::Exceptions::ChildConvergeError: Chef run process exited unsuccessfully (exit code 1)\nSTDERR: \n---- End output of opscode-reporting-ctl reconfigure ----\nRan opscode-reporting-ctl reconfigure returned 1\n```\n### NOTE: CHEF CLIENT BUGS ONLY\n\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\n- [Server issues](https://github.com/chef/chef-server/issues/new)\n- [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\n- Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "arothian": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5024", "title": "Chef-Zolo error message when encountering cookbook shadowing is poor", "body": "## Description\n\nWhen running chef-solo it dies with undefined method error. Previously this worked fine (although the duplicate cookbooks is probably a weird situation). I think probably just a improved error message about duplicate cookbooks is sufficient.\n## Chef Version\n\n12.11.18\n## Platform Version\n\nUbuntu 12.04\n## Replication Case\n\nRun chef-solo with two directories on the cookbook path, and have duplicate cookbooks between them.\n## Client Output\n\n```\n[2016-06-10T18:20:55+00:00] ERROR: #<NameError: undefined local variable or method `seen' for #<Chef::ChefFS::FileSystem::MultiplexedDir:0x00000003d3d238>>\n/usr/local/rvm/gems/ruby-2.1.10/gems/chef-12.11.18/lib/chef/chef_fs/file_system/multiplexed_dir.rb:44:in `block in make_child_entry'\n/usr/local/rvm/gems/ruby-2.1.10/gems/chef-12.11.18/lib/chef/chef_fs/file_system/multiplexed_dir.rb:40:in `each'\n/usr/local/rvm/gems/ruby-2.1.10/gems/chef-12.11.18/lib/chef/chef_fs/file_system/multiplexed_dir.rb:40:in `make_child_entry'\n/usr/local/rvm/gems/ruby-2.1.10/gems/chef-12.11.18/lib/chef/chef_fs/file_system/base_fs_object.rb:103:in `child'\n/usr/local/rvm/gems/ruby-2.1.10/gems/chef-12.11.18/lib/chef/chef_fs/file_system.rb:103:in `block in resolve_path'\n/usr/local/rvm/gems/ruby-2.1.10/gems/chef-12.11.18/lib/chef/chef_fs/file_system.rb:102:in `each'\n/usr/local/rvm/gems/ruby-2.1.10/gems/chef-12.11.18/lib/chef/chef_fs/file_system.rb:102:in `resolve_path'\n/usr/local/rvm/gems/ruby-2.1.10/gems/chef-12.11.18/lib/chef/chef_fs/chef_fs_data_store.rb:828:in `get_single_cookbook_version'\n/usr/local/rvm/gems/ruby-2.1.10/gems/chef-12.11.18/lib/chef/chef_fs/chef_fs_data_store.rb:549:in `list'\n/usr/local/rvm/gems/ruby-2.1.10/gems/chef-zero-4.6.2/lib/chef_zero/data_store/v1_to_v2_adapter.rb:83:in `block in list'\n/usr/local/rvm/gems/ruby-2.1.10/gems/chef-zero-4.6.2/lib/chef_zero/data_store/v1_to_v2_adapter.rb:113:in `fix_exceptions'\n/usr/local/rvm/gems/ruby-2.1.10/gems/chef-zero-4.6.2/lib/chef_zero/data_store/v1_to_v2_adapter.rb:82:in `list'\n/usr/local/rvm/gems/ruby-2.1.10/gems/chef-zero-4.6.2/lib/chef_zero/rest_base.rb:99:in `list_data'\n...\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vinyar": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5018", "title": "(maybe bug) Mount resource doesn't mount vagrant shares", "body": "## Description\n\nMount resource is not able to mount \\vboxsvr\\bla (created with test kitchen) however the same can be successfully accomplished with `net use x: \\\\vboxsvr\\bla`\n## Chef Version\n\n12.10.24\n## Platform Version\n\nwin2012r2\n## Replication Case\n\nVanilla .kitchen.yml with \n\n```\n  synced_folders:\n    - [\".\", \"/mount_temp\"]\n```\n\nrecipe:\n\n```\nmount 'R:' do\n  device '\\\\\\\\vboxsvr\\\\mount_temp'\nend\n```\n## Client Output\n\n```\n      * mount[r:] action mount\n           Error executing action `mount` on resource 'mount[r:]'\n\n           ArgumentError\n           -------------\n           The network path was not found.\n           ---- Begin Win32 API output ----\n           System Error Code: 53\n           System Error Message: The network path was not found.\n           ---- End Win32 API output ----\n\n           Resource Declaration:\n           ---------------------\n           # In C:/Users/vagrant/AppData/Local/Temp/kitchen/cache/cookbooks/windows_lab_11/recipes/answers.rb\n\n            28: mount 'r:' do\n            29:   device '\\\\\\\\vboxsvr\\\\mount_temp'\n            30: end\n\n           Compiled Resource:\n           ------------------\n           mount(\"r:\") do\n             action [:mount]\n             supports {:remount=>false}\n             retries 0\n             retry_delay 2\n             default_guard_interpreter :default\n             mount_point \"r:\"\n             device \"\\\\\\\\vboxsvr\\\\mount_temp\"\n             device_type :device\n             fsck_device \"-\"\n             fstype \"auto\"\n             options [\"defaults\"]\n             dump 0\n             pass 2\n             declared_type :mount\n             cookbook_name \"windows_lab_11\"\n             recipe_name \"answers\"\n           end\n\n           Platform:\n           ---------\n           x64-mingw32\n```\n## Other notes\n\nThis resource does work\n\n```\nmount 'r:' do\n  device '\\\\\\\\localhost\\\\c$'\nend\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/chef/chef/issues/4996", "title": "Knife bootstrap can't be aborted and locks shell for 30 seconds.", "body": "## Description\n\nexecuting knife bootstrap against an invalid address locks shell for 30 seconds. CTRL+C does not work\n## Chef Version\n\n```\n$ chef -v\nChef Development Kit Version: 0.14.25\nchef-client version: 12.10.24\nberks version: 4.3.3\nkitchen version: 1.8.0\n```\n## Platform Version\n\nosx 10.11.4\n## Replication Case\n\nrun the below bootstrap command, count to 3, and start pressing CTRL+C repeatedly.\n\n```\n$ time knife bootstrap foo_bar -VV\nConnecting to foo_bar\nDEBUG: Looking for bootstrap template in /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.24/lib/chef/knife/bootstrap/templates\nDEBUG: Found bootstrap template in /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.24/lib/chef/knife/bootstrap/templates\nDEBUG: Adding foo_bar\nDEBUG: establishing connection to foo_bar:22\n^C^C^C\n0.83s user 0.17s system 3% cpu 31.070 total\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/chef/chef/issues/4656", "title": "knife user create doesn't actually allow users to be created (w/o pivotal)", "body": "## Description\n\nknife provides a command `knife user create` however it will fail even for org admins because afaik the only way to create users is with `chef-server-ctl user-create` command\n## Chef Version\n\nGoing back at least a few chefdk versions\n\n```\n$ chef -v\nChef Development Kit Version: 0.11.2\nchef-client version: 12.7.2\nberks version: 4.2.0\nkitchen version: 1.5.0\n```\n## Replication Case\n\n```\nknife user create knife_user_test knife_user_test knife_test knife_create knife@usercreate.test test123\nERROR: You authenticated successfully to https://api.opscode.com/organizations/i_watch_dora_the_exlorer as alexv_trash01 but you are not authorized for this action\nResponse:  missing create permission\n```\n## Expected outcome\n\nPerhaps one of the following would be a valid solution\n- update the help file to reflect that command needs special key\n- remove knife user create command \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "diegows": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/5015", "title": "malformed notification target strings should trigger a parse error", "body": "## Description\n\nI had this in a service definition and was failing. Thanks to someone in IRC, the problem was a missing \"]\" at the end of the target. This should trigger a parse error I think.\n\n`subscribes :restart, \"template[#{node[:tango][:settings]}\", :delayed`\n## Chef Version\n\nchef-client 12.7.2\n## Platform Version\n\nRHEL7\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/5015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "smurawski": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4999", "title": "dsc_script unit test is broken on WMF 5", "body": "https://github.com/chef/chef/pull/4998\n\nNeed to create a different cert to test ps_credential support.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mwrock": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4993", "title": "Chef PSModule is not installed if user selects it in the setup options", "body": "When installing the chef-client MSI and choosing the PSModule Wrapper, the powershell module is not actually installed. This is noticed in [this issue](https://github.com/chef/chef-dk/issues/882) originally filed in the chef-dk repo (note it successfully installs using the chef-dk MSI).\n\nIt looks like chef-dk has an [omnibus config script](https://github.com/chef/chef-dk/blob/master/omnibus/config/software/chef-dk-powershell-scripts.rb) that copies the module file and we need the equivilent in chef.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "B3QL": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4990", "title": "remote_file raise HTTPBadResponse on redirection between HTTP and FTP protocols", "body": "## Description\n\nClient raise exception when gets HTTP 302 Found redirection to resource on FTP protocol.\n## Chef Version\n\n12.10.24\n## Platform Version\n\nUbuntu 12.04 LTS on Vagrant 1.8.1\n## Replication Case\n\n```\nremote_file \"#{Chef::Config[:file_cache_path]}/install-tl-unx.tar.gz\" do\n    source \"http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz\"\n    action :create_if_missing\nend\n```\n## Client Output\n\n```\n==> default:   * remote_file[/var/chef/cache/install-tl-unx.tar.gz] action create_if_missing\n==> default:     \n==> default: \n==> default:     \n==> default: ================================================================================\n==> default:     \n==> default: Error executing action `create_if_missing` on resource 'remote_file[/var/chef/cache/install-tl-unx.tar.gz]'\n==> default:     \n==> default: ================================================================================\n==> default:     \n==> default: \n==> default: \n==> default:     \n==> default: Net::HTTPBadResponse\n==> default:     \n==> default: --------------------\n==> default:     \n==> default: wrong status line: \"220-                  archiwa publiczne ICM UW, dawniej SunSITE\"\n```\n## Wget output\n\n```\nvagrant@precise64:/var/chef/cache$ wget http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz\n--2016-06-02 20:24:22--  http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz\nResolving mirror.ctan.org (mirror.ctan.org)... 176.28.54.184, 2a01:488:67:1000:b01c:36b8:0:1\nConnecting to mirror.ctan.org (mirror.ctan.org)|176.28.54.184|:80... connected.\nHTTP request sent, awaiting response... 302 Found\nLocation: ftp://ftp.gust.org.pl/TeX/systems/texlive/tlnet/install-tl-unx.tar.gz [following]\n--2016-06-02 20:24:22--  ftp://ftp.gust.org.pl/TeX/systems/texlive/tlnet/install-tl-unx.tar.gz\n           => `install-tl-unx.tar.gz'\nResolving ftp.gust.org.pl (ftp.gust.org.pl)... 158.75.62.5\nConnecting to ftp.gust.org.pl (ftp.gust.org.pl)|158.75.62.5|:21... connected.\nLogging in as anonymous ... Logged in!\n==> SYST ... done.    ==> PWD ... done.\n==> TYPE I ... done.  ==> CWD (1) /TeX/systems/texlive/tlnet ... done.\n==> SIZE install-tl-unx.tar.gz ... 3424106\n==> PASV ... done.    ==> RETR install-tl-unx.tar.gz ... done.\nLength: 3424106 (3.3M) (unauthoritative)\n\n100%[==========================================================================================================================================================================>] 3,424,106   2.41M/s   in 1.4s    \n\n2016-06-02 20:24:24 (2.41 MB/s) - `install-tl-unx.tar.gz' saved [3424106]\n\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4990/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jkerry": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4987", "title": "64 bit chef-client silently fails with a heap corruption exitcode on package resource", "body": "## Description\n\nWe've found that on windows server 2008R2 64 bit,  chef client 64 bit version 12.8.1+ (lower untested), with a 32 bit msi installer, running a package resource to install will cause a subsequent resource (and by extension the chef-client run) to fail silently and exit with an exit code indicating heap corruption.\n## Chef Version\n\n chef client 64 bit version 12.8.1+ (lower untested)\n## Platform Version\n\nwindows 2008r2\n## Replication Case\n\nhttps://github.com/jkerry/64bit_msi_chef_bug\n\nI've created an installer and a cookbook to replicate with test-kitchen.\nTesting procedure:\n- kitchen create\n- log into test-kitchen box, uninstall default chef-client version, download and install 64 bit chef-client\n- kitchen converge\n\nThere should be an immediate exit on the remote_file resource converge\n## Client Output\n\nhttps://gist.github.com/jkerry/434b79b654820c543564039fa64764ad\n## Stacktrace\n\nno stack trace, silent failure with exit code \"-1073740940\" \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aurelien-git": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4981", "title": "Wrong french keyboard layout", "body": "## Description\n\nBriefly describe the issue\nRunning from archlinux the test on CentOS of https://learn.chef.io/learn-the-basics/rhel/get-set-up/ is wrong mixing en-US layout and French with not . nor /\n## Chef Version\n\nTell us which version of chef-client you are using (see below for Server+ChefDK bugs).\nThe online test version\n## Platform Version\n\nTell us which Operating System distribution and version chef-client is running on.\nYour online test version\n## Replication Case\n\nTell us what steps to take to replicate your problem.  See [How to create a Minimal, Complete, and Verifiable example](https://stackoverflow.com/help/mcve)\nfor information on how to create a good replication case.\nFrom Archlinux - Ratpoison - Chromium running https://learn.chef.io/learn-the-basics/rhel/get-set-up/ the centOS online test give wrong layout keyboard with no . nor /\n## Client Output\n\nThe relevant output of the chef-client run or a link to a gist of the entire run, if there is one.\nhttps://learn.chef.io/learn-the-basics/rhel/get-set-up/\nThe debug output (chef-client -l debug) may be useful, but please link to a gist, or truncate it.\nhttps://learn.chef.io/learn-the-basics/rhel/get-set-up/\n## Stacktrace\n\nPlease include the stacktrace.out output or link to a gist of it, if there is one.\n### NOTE: CHEF CLIENT BUGS ONLY\n\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\n- [Server issues](https://github.com/chef/chef-server/issues/new)\n- [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\n- Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4981/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jwadolowski": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4980", "title": "chef-client in local mode needs minutes to start processing long run lists", "body": "## Description\n\nI've recently noticed there's something wrong with chef-zero performance. I used to execute chef-zero on my Vagrant boxes and my initial thought was that either Vagrant's chef-zero provisioner or vagrant-berkshelf plugin were responsible for this, but after a bit of debugging it seems to be related to chef-zero itself.\n## Chef Version\n\nChef 12.5.1 and 12.10.24 (the latest version at the time of writing)\n## Platform Version\n\nCentOS 6.8\n## Replication Case\n\nWhen chef-zero provisioner is defined in `Vagrantfile`, the following command is executed under the hood:\n\n```\n$ /opt/chef/embedded/bin/ruby /usr/bin/chef-client --config /tmp/vagrant-chef/client.rb --json-attributes /tmp/vagrant-chef/dna.json --local-mode --log_level debug --force-formatter\n```\n\nThis is how `client.rb` and `dna.json` look like in my case:\n\n```\nnode_name \"project-vagrant\"\nfile_cache_path    \"/var/chef/cache\"\nfile_backup_path   \"/var/chef/backup\"\ncookbook_path [\"/tmp/vagrant-chef/1c314d9dbafcfb313f57c7c0ebb1daa0/cookbooks\"]\nrole_path []\nlog_level :debug\nverbose_logging false\nenable_reporting false\nencrypted_data_bag_secret nil\nchef_zero.enabled true\nlocal_mode true\nnode_path [\"/tmp/vagrant-chef/9a29f1bf43fbc28c28a61610e72eea13/nodes\"]\n```\n\n```\n{\n    \"run_list\": [\n        \"recipe[project-base::default]\",\n        \"recipe[project-consul::server]\",\n        \"recipe[project-consul::service_dispatcher]\",\n        \"recipe[project-consul::service_te_editor]\",\n        \"recipe[project-consul::service_te_publish]\",\n        \"recipe[project-consul::service_tomcat]\",\n        \"recipe[project-consul::service_solr_master]\",\n        \"recipe[project-consul::service_solr_slave]\",\n        \"recipe[project-consul::service_aem_editor]\",\n        \"recipe[project-consul::service_aem_publish]\",\n        \"recipe[project-consul::service_sftp]\",\n        \"recipe[project-httpd::default]\",\n        \"recipe[project-te::editor]\",\n        \"recipe[project-te::publish]\",\n        \"recipe[project-json-server::default]\",\n        \"recipe[project-tomcat::default]\",\n        \"recipe[project-tomcat::soap_mocks]\",\n        \"recipe[project-solr::master]\",\n        \"recipe[project-solr::slave]\",\n        \"recipe[project-sftp::default]\",\n        \"recipe[project-webapp::editor]\",\n        \"recipe[project-webapp::editor_users]\",\n        \"recipe[project-webapp::editor_agents]\",\n        \"recipe[project-webapp::editor_base]\",\n        \"recipe[project-webapp::editor_zg]\",\n        \"recipe[project-webapp::editor_zg_content]\",\n        \"recipe[project-webapp::editor_tools]\",\n        \"recipe[project-webapp::editor_securecq]\",\n        \"recipe[project-webapp::editor_conf]\",\n        \"recipe[project-webapp::editor_cqsm]\",\n        \"recipe[project-webapp::editor_groovies]\",\n        \"recipe[project-webapp::editor_anatracking]\",\n        \"recipe[project-webapp::editor_grabbit]\",\n        \"recipe[project-webapp::publish]\",\n        \"recipe[project-webapp::publish_users]\",\n        \"recipe[project-webapp::publish_agents]\",\n        \"recipe[project-webapp::publish_base]\",\n        \"recipe[project-webapp::publish_zg]\",\n        \"recipe[project-webapp::publish_zg_content]\",\n        \"recipe[project-webapp::publish_tools]\",\n        \"recipe[project-webapp::publish_conf]\",\n        \"recipe[project-webapp::publish_cqsm]\",\n        \"recipe[project-webapp::publish_groovies]\",\n        \"recipe[project-webapp::publish_anatracking]\",\n        \"recipe[project-webapp::publish_grabbit]\"\n    ]\n}\n```\n\nAs soon as above command gets executed the following happens (full log attached below):\n- chef-zero starts on `http://localhost:8889`\n- there are attempts to load some plugins, but all of them fail as there's no such files\n- `GET` request to `/nodes/project-vagrant` is sent, which ends with 200 response quite fast\n- run list is set\n- cookbooks synchronization starts\n- `POST` request to `/environments/_default/cookbook_versions` is sent and this is where performance issue starts\n- `No chefignore file found at /tmp/vagrant-chef/1c314d9dbafcfb313f57c7c0ebb1daa0/chefignore no files will be ignored` is displayed over 400 times (nothing really happens besides this for ~1.5-3 minutes, varies by Chef run). `/tmp/vagrant-chef/1c314d9dbafcfb313f57c7c0ebb1daa0` is a directory that contains just `cookbooks` subdirectory\n- response to `POST /environments/_default/cookbook_versions` comes in and converge starts\n\nIt doesn't really matter if I execute `vagrant provision` on my machine or `chef-client` directly inside Vagrant (as presented above) - performance issue is still there. Debug log presence doesn't really matter when it comes to this 1.5-3 minutes slow down.\n## Client Output\n\nhttps://gist.github.com/jwadolowski/155015bfd1a95f6c64e69b2f8979aab0\n\nThe log contains also `GET /cookbooks` request, as I wanted to make sure all cookbooks have been successfully uploaded.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mrincodi": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4975", "title": "knife bootstrap + Windows PowerShell is generating \"Missing Cookbook\" <...> *roles\" or \"Missing Cookbook\" <...> *recipes\".", "body": "## Description\n\nWindows PowerShell is generating \"Missing Cookbook\" <...> *roles\" or \"Missing Cookbook\" <...> *recipes\".\n\nPreviously reported in https://tickets.opscode.com/browse/CHEF-4519\n## Chef Version\n\nChef: 12.10.24\n## Platform Version\n\nWindows 10; from PowerShell.\n## Replication Case\n\nUsing Windows10 + PowerShell.\n\nFollowing https://learn.chef.io/manage-a-web-app/ubuntu/run-your-web-application-on-a-node/, created a new device (EC2) and then ran the bootstrapping command:\n\nknife bootstrap ec2....us-west-2.compute.amazonaws.com --ssh-user ubuntu --sudo --identity-file \"~.ssh\\id.pem\" --node-name customers_web_app--run-list 'recipe[awesome_customers_ubuntu]'\n## Client Output\n\n192.168.52.129 Starting Chef Client, version 12.7.2\n192.168.52.129 resolving cookbooks for run list: [\"recipes\"]\n192.168.52.129\n192.168.52.129 ================================================================================\n192.168.52.129 Error Resolving Cookbooks for Run List:\n192.168.52.129 ================================================================================\n192.168.52.129\n192.168.52.129 Missing Cookbooks:\n192.168.52.129 ------------------\n192.168.52.129 The following cookbooks are required by the client but don't exist on the server:\n192.168.52.129 \\* recipes\n192.168.52.129\n192.168.52.129\n192.168.52.129 Expanded Run List:\n192.168.52.129 ------------------\n192.168.52.129 \\* recipes\n192.168.52.129\n## Stacktrace\n\nNo stacktrace.\n\nIMPORTANT: workaround:\n\nAdd a comma at the end of the array of recipes: in this case, replace 'recipe[awesome_customers_ubuntu]' with 'recipe[awesome_customers_ubuntu],'\n\nSo working command is:\nknife bootstrap ec2....us-west-2.compute.amazonaws.com --ssh-user ubuntu --sudo --identity-file \"~.ssh\\id.pem\" --node-name customers_web_app--run-list 'recipe[awesome_customers_ubuntu],'\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "skottler": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4974", "title": "docs bug: 'recursive true' on a directory doesn't work as documented", "body": "## Description\n\nOn [the directory documentation page](https://docs.chef.io/resource_directory.html) it says the following about setting `recursive true` on the `directory` resource:\n\n> Create or delete parent directories recursively. For the owner, group, and mode properties, the value of this attribute applies only to the leaf directory. Default value: false.\n\nWhile this is correct for the [`action_create`](https://github.com/chef/chef/blob/master/lib/chef/provider/directory.rb#L132) method, which uses `FileUtils.mkdir_p`, it is incorrect for the delete action. [`action_delete`](https://github.com/chef/chef/blob/master/lib/chef/provider/directory.rb#L144) uses `FileUtils.rm_rf`. Like `rm -rf` that method does not delete parent directories, to the contrary of what the docs say.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "eheydrick": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4939", "title": "Chef (and Chef-DK) upgrades should wipe their install_dir (/opt/chef) on upgrades", "body": "## Description\n\nUpon upgrading from 12.9.38 to 12.10.24 I am getting an error during compilation related to missing `multi_xml` gem. `multi_xml` is present in chef-client 12.9.38 but not 12.10.24.\n## Chef Version\n\n12.10.24\n## Platform Version\n\nUbuntu 14.04 / 16.04\n## Replication Case\n1. Update to chef-client 12.10.24\n2. Run chef-client. \n\nI have chef_handler 1.3.0 in my runlist.\n## Client Output\n\n```\n* chef_handler[HipChat::NotifyRoom] action enable\n    - disable HipChat::NotifyRoom as a exception handler\n    ================================================================================\n    Error executing action `enable` on resource 'chef_handler[HipChat::NotifyRoom]'\n    ================================================================================\n\n    Gem::MissingSpecError\n    ---------------------\n    Could not find 'multi_xml' (>= 0.5.2) among 87 total gem(s)\n    Checked in 'GEM_PATH=/home/eric/.gem/ruby/2.1.0:/opt/chef/embedded/lib/ruby/gems/2.1.0', execute `gem env` for more information\n\n    Cookbook Trace:\n    ---------------\n    /var/chef/cache/cookbooks/chef_handler/providers/default.rb:40:in `block (2 levels) in class_from_file'\n    /var/chef/cache/cookbooks/chef_handler/providers/default.rb:39:in `block in class_from_file'\n    /var/chef/cache/cookbooks/hipchat/recipes/handler.rb:54:in `from_file'\n    /var/chef/cache/cookbooks/praesidio-chef-client/recipes/hipchat_handler.rb:15:in `from_file'\n    /var/chef/cache/cookbooks/praesidio-chef-client/recipes/default.rb:10:in `from_file'\n```\n## Stacktrace\n\nhttps://gist.github.com/eheydrick/d7840f8696d84f79ef55239ade6333d1\n### NOTE: CHEF CLIENT BUGS ONLY\n\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\n- [Server issues](https://github.com/chef/chef-server/issues/new)\n- [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\n- Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "petewest": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4916", "title": "Chef::Provider::Package::Windows always downloads source", "body": "## Description\n\nWhen using Chef::Provider::Package::Windows with a URI as the source the `install_action` always downloads the file, even if the package is already installed.\n## Chef Version\n\n12.9.41\n## Platform Version\n\nWindows\n## Replication Case\n\n``` ruby\npackage \"already_installed_package\" do\n  source \"https://software/package/name.exe\"\n  installer_type :custom\n  options \"/s\"\nend\n```\n## Client Output\n\n```\nConverging 1 resources\nRecipe: test::package\n  * windows_package[already_installed_package] action install[2016-05-10T13:37:27+01:00] INFO: Processing windows_package[already_installed_package] action install (test::package line 2)\n\n  Recipe: <Dynamically Defined Resource>\n    * remote_file[C:\\chef\\cache\\package\\name.exe] action create[2016-05-10T13:37:27+01:00] INFO: Processing remote_file[C:\\chef\\cache\\package\\name.exe] action create (dynamically defined)\n[2016-05-10T13:37:29+01:00] INFO: remote_file[C:\\chef\\cache\\package\\name.exe] created file C:\\chef\\cache\\package\\name.exe\n\n      - create new file C:\\chef\\cache\\package\\name.exe[2016-05-10T13:37:29+01:00] INFO: remote_file[C:\\chef\\cache\\package\\name.exe] updated file contents C:\\chef\\cache\\package\\name.exe\n\n      - update content in file C:\\chef\\cache\\package\\name.exe from none to c71996\n      (file sizes exceed 10000000 bytes, diff output suppressed)\n     (up to date)\n[2016-05-10T13:37:31+01:00] WARN: Skipping final node save because override_runlist was given\n[2016-05-10T13:37:31+01:00] INFO: Chef Run complete in 5.062701 seconds\n[2016-05-10T13:37:31+01:00] INFO: Skipping removal of unused files from the cache\n\nRunning handlers:\n[2016-05-10T13:37:31+01:00] INFO: Running report handlers\nRunning handlers complete\n[2016-05-10T13:37:31+01:00] INFO: Report handlers complete\nChef Client finished, 1/2 resources updated in 12 seconds\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Roviluca": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4909", "title": "Chef::Config[:file_cache_path] mixed path style", "body": "## Description\n\nWhen accessing the variable class Chef::Config[:file_cache_path] on windows the path returned is not completely windows like. This could be tricky when passing paths to legacy commands.\nI would like to have an uniform path style that for windows is the legacy one.\n## Chef Version\n\n12.9.41\n## Platform Version\n\ntested on windows 8.1, same for others.\n## Replication Case\n\nopen chef-shell  and in recipe_mode  write Chef::Config[:file_cache_path] \n## Client Output\n\n``` text\n\"C:/Users/myuser\\\\.chef\\\\cache\"\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4909/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fstrudel": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4863", "title": "zypper upgrade is broken", "body": "## Description\n\nThe commit aa6663da70849aa5aad792f17604a88657767c50 has introduced a regression: when we update RPM on our repository, the chef-client run executing: \n\n```\npackage 'xxx' do\n  action :upgrade\nend\n```\n\ndoes not upgrade the RPM package xxx using zypper on our SLES11 nodes.\n## Chef Version\n\nchef-client > 12.6.0 (12.6.0 and below are fine)\n## Platform Version\n\nSLES11\nLinux 3.0.101-0.47.55-default #1 SMP Thu May 28 08:25:11 UTC 2015 (dc083ee) x86_64 x86_64 x86_64 GNU/Linux\n## Replication Case\n\nOn a SLES11 machine:\n- Have a RPM repo somewhere with package xxx, version 1.0 installed\n- Run the recipe\n\n```\npackage 'xxx' do\n  action :upgrade\nend\n```\n\n(assuming your repo has been set correctly)\n- package xxx version 1.0 should be installed\n- Update RPM repo with package xxx, version 2.0\n- Re-run chef-client on the node. -> 2.0 is not installed, where it should.\n## Client Output\n\nHere we are supposed to upgrade package 'xxx' from version 2.7.0.0-3617669 to 2.7.0.0-3792298.\n\n```\n# chef-client -l debug\n[...]\n[2016-04-21T16:33:51+00:00] INFO: Processing zypper_package[xxx] action upgrade (workspace_cas::default line 41)\n[2016-04-21T16:33:51+00:00] DEBUG: Providers for generic zypper_package resource enabled on node include: [Chef::Provider::Package::Zypper]\n[2016-04-21T16:33:51+00:00] DEBUG: Provider for action upgrade on resource zypper_package[xxx] is Chef::Provider::Package::Zypper\n[2016-04-21T16:33:51+00:00] DEBUG: zypper_package[xxx] checking zypper\n[2016-04-21T16:33:51+00:00] DEBUG: zypper_package[xxx] version 2.7.0.0-3792298\n[2016-04-21T16:33:51+00:00] DEBUG: zypper_package[xxx] is installed\n[2016-04-21T16:33:51+00:00] DEBUG: zypper_package[xxx] out of date version 2.7.0.0-3617669\n[2016-04-21T16:33:51+00:00] DEBUG: zypper_package[xxx] checking zypper\n[2016-04-21T16:33:51+00:00] DEBUG: zypper_package[xxx] version 2.7.0.0-3792298\n[2016-04-21T16:33:51+00:00] DEBUG: zypper_package[xxx] is installed\n[2016-04-21T16:33:51+00:00] DEBUG: zypper_package[xxx] out of date version 2.7.0.0-3617669\n[2016-04-21T16:33:51+00:00] DEBUG: zypper_package[xxx] xxx the 2.7.0.0-3792298 is already installed\n[2016-04-21T16:33:51+00:00] DEBUG: zypper_package[xxx] no versions to upgrade - nothing to do\n[...]\n```\n\nThe problem is the way the output of zypper is nowparsed. This is what you have when xxx version 2.7.0.0-3617669 is installed and xxx version 2.7.0.0-3792298 is available on the remote repository:\n\n```\nroot@mysles11_node# rpm -qa | grep xxx\nxxx-2.7.0.0-3617669\nroot@mysles11_node # zypper if xxx\nLoading repository data...\nReading installed packages...\n\nInformation for package xxx:\n\nRepository: my-repo\nName: xxx\nVersion: 2.7.0.0-3792298\nArch: noarch\nVendor: Acme Inc\nInstalled: Yes\nStatus: out-of-date (version 2.7.0.0-3617669 installed)\nInstalled Size: 77.5 MiB\nSummary: xxx package\nDescription: \n#\n\n```\n## Stacktrace\n### NOTE: CHEF CLIENT BUGS ONLY\n\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\n- [Server issues](https://github.com/chef/chef-server/issues/new)\n- [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\n- Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chef09210": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4858", "title": "Rspec expect in audit_mode is prepending a backslash to path on Windows machines causing it to fail", "body": "## Description\n\nUsing rspec for a Chef audit in Windows 7 using expect(file('...').to be_directory fails due to a backslash in the actual check.\n## Chef Version\n\n12.9.38.1\n## Platform Version\n\nWindows 7 Enterprise 64-bit\n## Replication Case\n\n1) Include a control block in an recipe like so:\n\n```\nit 'should be a directory' do\n  expect(file('C:\\\\Java')).to be_directory\nend\n```\n\n2) Receive failure after running chef-client audit\n## Client Output\n\n {\n   \"node_name\": \"ws001\",\n   \"run_id\": \"3f3c3c6a-772e-400b-a8d7-346fc619f606\",\n   \"start_time\": \"2016-04-23T00:12:10Z\",\n   \"end_time\": \"2016-04-23T00:12:12Z\",\n   \"control_groups\": [\n     {\n       \"name\": \"Java Version Example\",\n       \"status\": \"failure\",\n       \"number_succeeded\": 0,\n       \"number_failed\": 1,\n       \"controls\": [\n         {\n           \"name\": \"should be a directory\",\n           \"status\": \"failure\",\n           **\"details\": \"expected `File \\\"C:\\\\Java\\\".directory?` to return true, got false\",**\n           \"resource_type\": null,\n           \"resource_name\": null,\n           \"context\": [\n             \"Java\"\n           ],\n           \"sequence_number\": 1\n         }\n       ],\n       \"id\": \"2260df56-a204-4f33-91cf-5dd77ef6dc4b\",\n       \"cookbook_name\": \"audit-test\",\n       \"cookbook_version\": \"0.1.0\",\n       \"recipe_name\": \"default\",\n       \"line_number\": 10\n     }\n   ],\n   \"error\": \"Chef::Exceptions::AuditsFailed: Audit phase found failures - 1/1 controls failed\"\n }\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4858/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "timbrown5": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4850", "title": "Mount provider should support sensitive property", "body": "## Description\n\nI am using Chef-vault to try and keep my passwords secure. I am currently using one of the vault Items to try and mount a share. \n\nMy problem is that the error output from chef printed the RAW password, not the encrypted or hashed out version, meaning anyone can circumvent the chef-vault by creating a bad mount recipe!\n\nWould it not be better to hash out ALL 'password' attributes/fields in when printing them so that they are not shown to users (who might not be intended to see them!) or stored in log files?\n## Chef Version\n\nChef: 12.6.0\n## Platform Version\n\nWindows 10\n## Replication Case\n\n  mount 'O:' do\n    device '\\\\myShare\\myFolder'\n    action :mount\n    domain 'myDomain'\n    username testUser['username']\n    password testUser['password']\n  end\n## Client Output\n\nError output:\n    mount(\"O:\") do\n      action [:mount]\n      supports {:remount=>false}\n      retries 0\n      retry_delay 2\n      default_guard_interpreter :default\n      mount_point \"O:\"\n      device \"'\\\\myShare\\myFolder'\"\n      device_type :device\n      fsck_device \"-\"\n      fstype \"auto\"\n      options [\"defaults\"]\n      dump 0\n      pass 2\n      username \"muUser\"\n      password \"myPassword\"\n      domain \"myDomain\"\n      declared_type :mount\n      cookbook_name \"sn_users\"\n      recipe_name \"test_user\"\n    end\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tpetchel": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4815", "title": "Uploading \"raw\" data bag items fails, and we now write raw items.", "body": "## Description\n\nUploading an encrypted data bag to Chef server fails with this error:\n\n```\nERROR: Chef::Exceptions::InvalidDataBagItemID: Data Bag items must have an id matching /^[\\.\\-[:alnum:]_]+$/, you gave: nil\n```\n\nThis issue blocks our Learn Chef tutorials. Users reported the issue on the RHEL and Ubuntu flavors of the same tutorial:\n\nhttps://learn.chef.io/manage-a-web-app/rhel/run-your-web-application-on-a-node/#comment-2597692112\n\nhttps://learn.chef.io/manage-a-web-app/ubuntu/run-your-web-application-on-a-node/#comment-2609047548\n\nThe user in the second thread worked around the issue by manually adding the `id` field to the encrypted data bag item's .json file.\n\nI can repo this using Chef DK 0.12.0. I'm almost certain that it does not repro from 0.10.0.\n## Chef Version\n\n```\n$ chef --version\nChef Development Kit Version: 0.12.0\nchef-client version: 12.6.0\nberks version: 4.3.0\nkitchen version: ERROR\n```\n## Platform Version\n\nApplies to all platforms. Can repro from Windows 8.1 and Mac OS workstations.\n## Replication Case\n\nI believe this bug would apply to uploading any encrypted data bag item to the Chef server, but here's a quick way to repo. `knife` needs to be configured to communicate with a Chef server.\n\nPerform [step 2](https://learn.chef.io/manage-a-web-app/rhel/bring-up-the-web-app-using-test-kitchen/#step2) from the tutorial's quick start page to set up the encrypted data bag locally.\n\nPerform [step 3](https://learn.chef.io/manage-a-web-app/rhel/run-your-web-application-on-a-node/#step3) on this page to upload the data bag to the Chef server.\n## Client Output\n\n```\n$ knife data bag from file database_passwords mysql_customers.json\nERROR: Chef::Exceptions::InvalidDataBagItemID: Data Bag items must have an id matching /^[\\.\\-[:alnum:]_]+$/, you gave: nil\n```\n## Stacktrace\n\n```\n$ knife data bag from file database_passwords mysql_customers.json -VV\nINFO: Using configuration from /Users/thomaspetchel/learn-chef/.chef/knife.rb\n/Users/thomaspetchel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/chef-12.6.0/lib/chef/data_bag_item.rb:44:in `validate_id!': Data Bag items must have an id matching /^[\\.\\-[:alnum:]_]+$/, you gave: nil (Chef::Exceptions::InvalidDataBagItemID)\n    from /Users/thomaspetchel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/chef-12.6.0/lib/chef/data_bag_item.rb:73:in `validate_id!'\n    from /Users/thomaspetchel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/chef-12.6.0/lib/chef/data_bag_item.rb:80:in `raw_data='\n    from /Users/thomaspetchel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/chef-12.6.0/lib/chef/knife/data_bag_from_file.rb:94:in `block in load_data_bag_items'\n    from /Users/thomaspetchel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/chef-12.6.0/lib/chef/knife/data_bag_from_file.rb:85:in `each'\n    from /Users/thomaspetchel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/chef-12.6.0/lib/chef/knife/data_bag_from_file.rb:85:in `load_data_bag_items'\n    from /Users/thomaspetchel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/chef-12.6.0/lib/chef/knife/data_bag_from_file.rb:58:in `run'\n    from /Users/thomaspetchel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/chef-12.6.0/lib/chef/knife.rb:419:in `block in run_with_pretty_exceptions'\n    from /Users/thomaspetchel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/chef-12.6.0/lib/chef/local_mode.rb:44:in `with_server_connectivity'\n    from /Users/thomaspetchel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/chef-12.6.0/lib/chef/knife.rb:418:in `run_with_pretty_exceptions'\n    from /Users/thomaspetchel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/chef-12.6.0/lib/chef/knife.rb:212:in `run'\n    from /Users/thomaspetchel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/chef-12.6.0/lib/chef/application/knife.rb:142:in `run'\n    from /Users/thomaspetchel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/chef-12.6.0/bin/knife:25:in `<top (required)>'\n    from /Users/thomaspetchel/.rbenv/versions/2.1.1/bin/knife:23:in `load'\n    from /Users/thomaspetchel/.rbenv/versions/2.1.1/bin/knife:23:in `<main>'\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4815/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "get2arun": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4814", "title": "chef client - error during  Knife configure -i ", "body": "## Description\n\nI face the issue when running \"**knife configure -i**\" in Chef client. In addition to the error, I see the warning message like below. Any clue to resolve this error. I am using Chef client _chef-12.8.1-1.el7.x86_64_ and running on redhat 7 machine. I use the Chef server chef-server-11.1.7-1.el6.x86_64. \n## Chef Version\n\nchef-12.8.1-1.el7.x86_64\n## Platform Version\n\nRedhat 7.1 in chef client\n## Replication Case\n\nstep 1. Setup open source Chef server in Redhat 6.7\nStep 2. Login to Chef worksatation(redhat 7.1 in my case) and Copy the keys(.pem) files from Chef server to Chef workstation path /root/.chef/ \nStep 3. install and chef client and execute the \"knife configure -i\"\n## client Output\n\n**Error is below.**\n[root@SERVER_NAME .chef]# knife configure -i\nWARNING: No knife configuration file found\nWhere should I put the config file? [/root/.chef/knife.rb]\nPlease enter the chef server URL: [https://SERVER_NAME.com:443] https://SERVER_NAME.com:443\nPlease enter a name for the new user: [Userid] chef_user_account_in_chef_server\nPlease enter the existing admin name: [admin] admin\nPlease enter the location of the existing admin's private key: [/etc/chef-server/admin.pem] /root/.chef/admin.pem\nPlease enter the validation clientname: [chef-validator]\nPlease enter the location of the validation key: [/etc/chef-server/chef-validator.pem] /root/.chef/chef-validator.pem\nPlease enter the path to a chef repository (or leave blank):\nCreating initial API user...\nPlease enter a password for the new user:\n**WARNING: IF YOU ARE USING CHEF SERVER 12+, PLEASE FOLLOW THE INSTRUCTIONS UNDER knife user create --help.**\nYou only passed a single argument to knife user create.\nFor backwards compatibility, when only a single argument is passed,\nknife user create assumes you want Open Source 11 Server user creation.\nknife user create for Open Source 11 Server is being deprecated.\nOpen Source 11 Server user commands now live under the knife osc_user namespace.\nFor backwards compatibility, we will forward this request to knife osc_user create.\n**If you are using an Open Source 11 Server, please use that command to avoid this warning.\nFATAL: Cannot find subcommand for: 'osc_user configure -i'**\nAvailable subcommands: (for details, knife SUB-COMMAND --help)\n\n*\\* BOOTSTRAP COMMANDS **\nknife bootstrap [SSH_USER@]FQDN (options)\n(...output truncated)\n\nDo I need to downsize the chef-client to some version of 11 to work with Chef server 11.x. Please advice. \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kamaradclimber": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4808", "title": "Improve knife presenter for arrays attribute", "body": "## Description\n\nWhen node attributes are arrays, it is impossible to write a knife command to access them easily.\n## Chef Version\n\nAny version\n## Replication Case\n\nnode attributes are:\n\n```\n{ \n  'foo' => [\n    { 'bar' => true },\n    { 'bar' => false }\n  ]\n}\n```\n\nIt is impossible to access the value of bar in the second element of foo.\nOne could expect to call: `knife node show xxx -a foo.1.bar` and gets `false`.\n\nCurrently it fails with an exception.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gips0n": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4704", "title": "homebrew_package installing from taps is broken", "body": "## Description\n\nIt seems, that chef doesn't correctly work with [brew taps](https://github.com/Homebrew/homebrew/blob/master/share/doc/homebrew/brew-tap.md). Chef looks for package version and checks status using command `brew info`, which works only with cloned repos, and if repo isn't still cloned it fails:\n\n```\nbash-3.2$ brew info homebrew/php/php70\nError: No available formula with the name \"homebrew/php/php70\"\nPlease tap it and then try again: brew tap homebrew/php\nbash-3.2$ echo $?\n1\n```\n\nBut, homebrew supports search for formulas/packages in homebrew repos:\n\n```\nbash-3.2$ brew search homebrew/php/php70\nhomebrew/php/php70\nbash-3.2$ echo $?\n0\n```\n\nAnd homebrew handles installation from not cloned repos:\n\n```\nbash-3.2$ brew install homebrew/php/php70\n==> Tapping homebrew/php\nCloning into '/usr/local/Library/Taps/homebrew/homebrew-php'...\nremote: Counting objects: 585, done.\nremote: Compressing objects: 100% (370/370), done.\nremote: Total 585 (delta 393), reused 241 (delta 213), pack-reused 0\nReceiving objects: 100% (585/585), 235.69 KiB | 0 bytes/s, done.\nResolving deltas: 100% (393/393), done.\nChecking connectivity... done.\nTapped 563 formulae (601 files, 1M)\n==> Installing php70 from homebrew/php\n==> Downloading https://php.net/get/php-7.0.4.tar.bz2/from/this/mirror\n...\n```\n\nit starts from cloning repo (using `brew tap`) and then installing package, [source of brew install](https://github.com/Homebrew/homebrew/blob/master/Library/Homebrew/cmd/install.rb#L17)\n## Chef Version\n\ntested on chef 12.6.0 and 12.8.1\n## Platform Version\n\nOS X 10.11.3 & Homebrew 0.9.5 (git revision 5355; last commit 2016-03-11)\n## Replication Case\n\n```\nbash-3.2$ cat /tmp/pack.rb\npackage 'homebrew/php/php70'\n\nbash-3.2$ sudo chef-apply /tmp/pack.rb\n```\n## Client Output\n\n```\nbash-3.2$ sudo chef-apply /tmp/pack.rb\nRecipe: (chef-apply cookbook)::(chef-apply recipe)\n  * homebrew_package[homebrew/php/php70] action install\n\n    ================================================================================\n    Error executing action `install` on resource 'homebrew_package[homebrew/php/php70]'\n    ================================================================================\n\n    Mixlib::ShellOut::ShellCommandFailed\n    ------------------------------------\n    Expected process to exit with [0], but received '1'\n    ---- Begin output of brew info --json=v1 homebrew/php/php70 ----\n    STDOUT:\n    STDERR: Error: No available formula with the name \"homebrew/php/php70\"\n    Please tap it and then try again: brew tap homebrew/php\n    ---- End output of brew info --json=v1 homebrew/php/php70 ----\n    Ran brew info --json=v1 homebrew/php/php70 returned 1\n\n    Resource Declaration:\n    ---------------------\n    # In /tmp/pack.rb\n\n      1: package \"homebrew/php/php70\"\n      2:\n\n    Compiled Resource:\n    ------------------\n    # Declared in /tmp/pack.rb:1:in `run_chef_recipe'\n\n    homebrew_package(\"homebrew/php/php70\") do\n      package_name \"homebrew/php/php70\"\n      action [:install]\n      retries 0\n      retry_delay 2\n      default_guard_interpreter :default\n      declared_type :package\n      cookbook_name \"(chef-apply cookbook)\"\n      recipe_name \"(chef-apply recipe)\"\n    end\n\n[2016-03-13T15:50:58+00:00] FATAL: Stacktrace dumped to /var/chef/cache/chef-stacktrace.out\n[2016-03-13T15:50:58+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report\n[2016-03-13T15:50:58+00:00] FATAL: Mixlib::ShellOut::ShellCommandFailed: homebrew_package[homebrew/php/php70] ((chef-apply cookbook)::(chef-apply recipe) line 1) had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process to exit with [0], but received '1'\n---- Begin output of brew info --json=v1 homebrew/php/php70 ----\nSTDOUT:\nSTDERR: Error: No available formula with the name \"homebrew/php/php70\"\nPlease tap it and then try again: brew tap homebrew/php\n---- End output of brew info --json=v1 homebrew/php/php70 ----\nRan brew info --json=v1 homebrew/php/php70 returned 1\n```\n## Stacktrace\n\n```\nGenerated at 2016-03-13 15:50:58 +0000\nMixlib::ShellOut::ShellCommandFailed: homebrew_package[homebrew/php/php70] ((chef-apply cookbook)::(chef-apply recipe) line 1) had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process to exit with [0], but received '1'\n---- Begin output of brew info --json=v1 homebrew/php/php70 ----\nSTDOUT:\nSTDERR: Error: No available formula with the name \"homebrew/php/php70\"\nPlease tap it and then try again: brew tap homebrew/php\n---- End output of brew info --json=v1 homebrew/php/php70 ----\nRan brew info --json=v1 homebrew/php/php70 returned 1\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/mixlib-shellout-2.2.6/lib/mixlib/shellout.rb:289:in `invalid!'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/mixlib-shellout-2.2.6/lib/mixlib/shellout.rb:276:in `error!'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/lib/chef/mixin/shell_out.rb:56:in `shell_out!'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/lib/chef/provider/package.rb:538:in `shell_out_with_timeout!'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/lib/chef/provider/package/homebrew.rb:130:in `get_response_from_command'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/lib/chef/provider/package/homebrew.rb:76:in `brew'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/lib/chef/provider/package/homebrew.rb:88:in `brew_info'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/lib/chef/provider/package/homebrew.rb:98:in `current_installed_version'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/lib/chef/provider/package/homebrew.rb:37:in `load_current_resource'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/lib/chef/provider.rb:127:in `run_action'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/lib/chef/resource.rb:596:in `run_action'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/lib/chef/runner.rb:73:in `run_action'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/lib/chef/runner.rb:105:in `block (2 levels) in converge'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/lib/chef/runner.rb:105:in `each'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/lib/chef/runner.rb:105:in `block in converge'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/lib/chef/resource_collection/resource_list.rb:84:in `block in execute_each_resource'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/lib/chef/resource_collection/stepable_iterator.rb:116:in `call'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/lib/chef/resource_collection/stepable_iterator.rb:116:in `call_iterator_block'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/lib/chef/resource_collection/stepable_iterator.rb:104:in `iterate'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/lib/chef/resource_collection/resource_list.rb:82:in `execute_each_resource'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/lib/chef/runner.rb:104:in `converge'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/lib/chef/application/apply.rb:195:in `run_chef_recipe'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/lib/chef/application/apply.rb:205:in `run_application'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/lib/chef/application/apply.rb:218:in `run'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.8.1/bin/chef-apply:25:in `<top (required)>'\n/usr/local/bin/chef-apply:50:in `load'\n/usr/local/bin/chef-apply:50:in `<main>'\n```\n## Workaround\n1. Pull repo using `brew tap`\n2. Install package using package/homebrew_package\n\n```\nbash-3.2$ cat /tmp/pack.rb\nexecute 'install homebrew/php tap' do\n  command 'brew tap homebrew/php'\n  user 'brew_user'\nend\n\npackage 'homebrew/php/php70'\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "btm": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4697", "title": "config.d with knife falsely claims no configuration file found", "body": "## Description\n\nWhen running knife with a ~/.chef/config.d/foo.rb file but not a ~/.chef/config.rb file, knife prints \"WARNING: No knife configuration file found\" even though file(s) are loaded.\n## Chef Version\n\n12.8.1+\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commits": [{"url": "https://api.github.com/repos/chef/chef/commits/b694b10886eafcc2526d1ab1eae600d037d93c86", "message": "Merge pull request #6688 from MsysTechnologiesllc/vasundhara/chef#6638_windows_task_not_fully_idempotent\n\nFix windows_task resource not being idempotent for random_delay and execution_time_limit"}, {"url": "https://api.github.com/repos/chef/chef/commits/7432d67a60a2366d4208e05b34ed35d3e159aeca", "message": "Merge pull request #6664 from TheLunaticScripter/fix_powershell_output\n\n[MSYS-692] Fix issue with PowerShell function buffer"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/1212037", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1212037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1212625", "body": "Thank you for taking the time to help make Chef better! We require a Contributor License Agreement (CLA) from contributors to help protect all Chef users. It is easy to complete one online. Instructions to do so are on our wiki, which is linked below.\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1212625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1212631", "body": "Thank you for taking the time to help make Chef better! We require a Contributor License Agreement (CLA) from contributors to help protect all Chef users. It is easy to complete one online. Instructions to do so are on our wiki, which is linked below.\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1212631/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1212649", "body": "http://tickets.opscode.com/browse/CHEF-2367\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1212649/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1212650", "body": "http://tickets.opscode.com/browse/CHEF-2367\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1212650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1212691", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1212691/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1212708", "body": "This patch has been merged to opscode/0.9-stable and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1212708/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1212931", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1212931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1212950", "body": "http://tickets.opscode.com/browse/CHEF-2234\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1212950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1212967", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1212967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1213028", "body": "I'm told we need some contact information, real name, phone number, and the likes, but a physical address is not required. We do tend to send out a thank you note for completely the process, so perhaps a friends address would be a good idea.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1213028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1278324", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1278324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1278328", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1278328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1300188", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1300188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1300196", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1300196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1300270", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1300270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1300295", "body": "Cloud support in knife is now handled via plugins. Please see: http://tickets.opscode.com/browse/CHEF-2007\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1300295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1323225", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1323225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1607453", "body": "http://tickets.opscode.com/browse/CHEF-2474\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1607453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1608119", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1608119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1608247", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1608247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1608287", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1608287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1608325", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1608325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1668566", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1668566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1720533", "body": "merged to master\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1720533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1722283", "body": "cherry-picked\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1722283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1722295", "body": "cherrypicked around. thanks.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1722295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2237848", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2237848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2249668", "body": "Merged pull request 71.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2249668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2249766", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2249766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2249809", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2249809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2249821", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2249821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2250298", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2250298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2250333", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2250333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2250381", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2250381/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2250399", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2250399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2257404", "body": "Mostly merged. See http://tickets.opscode.com/browse/CHEF-2563\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2257404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2257443", "body": "http://tickets.opscode.com/browse/CHEF-2626\n\nMerged.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2257443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2286571", "body": "Merged.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2286571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2348642", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2348642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2348644", "body": "This patch has been merged to opscode/master and will be included in the next release. Thank you for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2348644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2349424", "body": "Merged to opscode/master\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2349424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2349715", "body": "Merged, thanks!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2349715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607626", "body": "The related code appears to be being moved to a Cookbook, see COOK-759 for more information. I'm closing this pull request as we will use JIRA to track progress.\n\nhttp://tickets.opscode.com/browse/COOK-759\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607680", "body": "http://tickets.opscode.com/browse/CHEF-385\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607737", "body": "Additional discussion on the ticket: http://tickets.opscode.com/browse/CHEF-2282\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2608606", "body": "This wasn't merged to 0.9-stable because that branch is in maintenance mode.\n\nhttp://tickets.opscode.com/browse/CHEF-1956\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2608606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2608700", "body": "Thanks for the backport. 0.9-stable is now EOL. See the ticket for additional information.\n\nhttp://tickets.opscode.com/browse/CHEF-1935\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2608700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2608755", "body": "Just a reminder that this branch needs additional tests and would need to be rebased now. See the ticket for additional information.\n\nhttp://tickets.opscode.com/browse/CHEF-1659\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2608755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2609068", "body": "Most of these were merged. \n\nhttp://tickets.opscode.com/browse/CHEF-1521\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2609068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2609182", "body": "Thanks, but we use our ticketing system for tracking contributions. In the future, please refer to the How To Contribute wiki page: http://wiki.opscode.com/display/chef/How+to+Contribute\n\nPIDFILE was added in bde38e935d4fde0e7c52f8d7dbcb20f3c6212b8a (CHEF-1853)\n/etc/default support was added in 85a9c9ca9f707de0a9ebedda709db635fd074c02 (CHEF-1210)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2609182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2609799", "body": "There has been no activity on the issues with this ticket since we responded in June and reopened the ticket. I'm closing this pull request as we need additional changes made for this patch to be included.\n\nhttp://tickets.opscode.com/browse/CHEF-2395\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2609799/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2609890", "body": "I see we never got a CLA from you. Please take a moment to review our wiki page on contributing.\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n\nThere were some changes to the CentOS bootstrap by the upstream repository maintainer in CHEF-2569. Hopefully these have helped out.\n\nhttp://tickets.opscode.com/browse/CHEF-2569\n\nAlso, Rubygems moved from 1.3.7 to 1.6.2 in CHEF-2293.\n\nhttp://tickets.opscode.com/browse/CHEF-2293\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2609890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2609895", "body": "This was merged for Chef 0.10.6\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2609895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2609919", "body": "This was merged for Chef 0.10.4.\n\nIn the future, if you provide pull requests please remember to link to them in the ticket so we close them out at the time that we merge. However, pull requests are not required as part of our process.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2609919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2609943", "body": "CHEF-1439 was resolved.\nCHEF-1857 is still open.\n\nhttp://tickets.opscode.com/browse/CHEF-1857\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2609943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2609963", "body": "Is there an associated ticket for this pull request?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2609963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610185", "body": "This was fixed in 69ad822849c75271abbe430c8d0f06155fd7a46b\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610202", "body": "This was resolved. In the future, please include links to any pull requests in the tickets. Thanks!\n\nhttp://tickets.opscode.com/browse/CHEF-2573\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610227", "body": "This was merged to Chef. In the future please include a link to any pull requests in the ticket.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610227/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610237", "body": "This was previously merged.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610246", "body": "This was merged. In the future please add links to any pull requests in the associated tickets so they get closed when the branch is merged. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610258", "body": "Thank you for taking the time to help make Chef better! We require a Contributor License Agreement (CLA) from contributors to help protect all Chef users. It is easy to complete one online. Instructions to do so are on our wiki, which is linked below.\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n\nhttp://tickets.opscode.com/browse/CHEF-2540\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610266", "body": "This ticket was closed.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610275", "body": "This contribution is awaiting tests. See the ticket for additional information.\n\nhttp://tickets.opscode.com/browse/CHEF-2369\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610286", "body": "This was merged, thanks! In the future please include a link to any pull requests in the ticket to help us find and close them when we merge.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610298", "body": "This was previously merged. Please see the ticket on http://tickets.opscode.com for more information. In the future, please provide a link to the pull request in the ticket to help us find and close them when we close tickets.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610309", "body": "CHEF-1521 has been closed. Please see the ticket for additional information.\n\nhttp://tickets.opscode.com/browse/CHEF-1521\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610334", "body": "Is there a ticket associated with this pull request?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610353", "body": "http://tickets.opscode.com/browse/CHEF-2512\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610356", "body": "http://tickets.opscode.com/browse/CHEF-2512\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2685738", "body": "Reviewed, this branch will need to be updated for 0.10 to be merged.\n\nhttp://tickets.opscode.com/browse/CHEF-1849\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2685738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2685912", "body": "Thanks, but this pull request is full of a lot of erraneous commits. I'm closing it and reopening the ticket. Please provide a clean branch on the ticket.\n\nhttp://tickets.opscode.com/browse/CHEF-2477\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2685912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2766321", "body": "Thank you for taking the time to help make Chef better! We require a Contributor License Agreement (CLA) from contributors to help protect all Chef users. It is easy to complete one online. Instructions to do so are on our wiki, which is linked below.\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n\nAlso, this appears to be a patch for CHEF-1912, not CHEF-1911\n\nhttp://tickets.opscode.com/browse/CHEF-1912\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2766321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2766360", "body": "Thank you for taking the time to help make Chef better! We require a Contributor License Agreement (CLA) from contributors to help protect all Chef users. It is easy to complete one online. Instructions to do so are on our wiki, which is linked below.\n\nWhat ticket is this associated with? We track contributions through our ticketing system primarily and don't require the use of pull requests. Could you please provide the ticket number that this is associated with?\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2766360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2766398", "body": "Thank you for taking the time to help make Chef better! We require a Contributor License Agreement (CLA) from contributors to help protect all Chef users. It is easy to complete one online. Instructions to do so are on our wiki, which is linked below.\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n\nhttp://tickets.opscode.com/browse/CHEF-2706\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2766398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2766722", "body": "All commiters must sign a CLA to contribute to the project, including bots. Since bots do not have legal personhood yet, you must be sponsored by a human being. Please to be finding your father and asking for a permission slip.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2766722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2766889", "body": "You're right! I'm working internally on finding out what the process is to get you added to Dell's CCLA.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2766889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767008", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n\nThe Opscode Team\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767018", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n\nThe Opscode Team\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767023", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n\nThe Opscode Team\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767030", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n\nThe Opscode Team\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767034", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n\nThe Opscode Team\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767040", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n\nThe Opscode Team\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767045", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n\nThe Opscode Team\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767049", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n\nThe Opscode Team\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767057", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n\nThe Opscode Team\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767073", "body": "Thank you for taking the time to help make Chef better! We require a Contributor License Agreement (CLA) from contributors to help protect all Chef users. It is easy to complete one online. Instructions to do so are on our wiki, which is linked below.\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767073/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767082", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n\nThe Opscode Team\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2780902", "body": "We've been discussing this: http://tickets.opscode.com/browse/CHEF-2715\n\nI don't see your name on our list of approved contributors, have you completed a CLA?: http://wiki.opscode.com/display/chef/Approved+Contributors\n\nIt is easy to complete one online. Instructions to do so are on our wiki, which is linked below.\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2780902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2782589", "body": "You should check with Scott Jensen, who I believe is on your team. He is now familiar with the process of updating Dell's CCLA and needs to express specifically that you should be added to that CCLA.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2782589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2783020", "body": "Looks like we worked out the CCLA issues. I've updated the ticket so we will review it at triage next week.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2783020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2791219", "body": "Great news! Make sure you have an account on tickets.opscode.com now with an email address matching that on your CLA. Open a ticket for this there. When you get the confirmation email, you will then have privileges on that site to \"resolve\" tickets. Provide a link there to this pull request and resolve the ticket as fixed. We will pick it up in a triage meeting, review it and mark it for merging.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2791219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2901112", "body": "Merged to 0.10.6-rc\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2901112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2992956", "body": "Merged to 0.10.6-rc\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2992956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097534", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Please take a moment to review the below wiki page for the appropriate steps:\n\u00a0\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n\nThis ticket appears relevant to your patch: http://tickets.opscode.com/browse/CHEF-1645\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097562", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Pull requests are optional, but should always include the ticket number that they're related to for cross-referencing. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097565", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Pull requests are optional, but should always include the ticket number that they're related to for cross-referencing. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097566", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Pull requests are optional, but should always include the ticket number that they're related to for cross-referencing. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097567", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Pull requests are optional, but should always include the ticket number that they're related to for cross-referencing. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097575", "body": "I see that pull request 163 was closed, so I'm closing this pull request as well based on your comments. Thanks again!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097582", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Pull requests are optional, but should always include the ticket number that they're related to for cross-referencing. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097585", "body": "Closing pull request per discussion on ticket.\n\nhttp://tickets.opscode.com/browse/CHEF-2602\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097596", "body": "As this was fixed, I'm closing this pull request. Thanks everyone!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097605", "body": "This was fixed in CHEF-2580 which will be included in Chef 0.10.6, due to be released soon.\n\nhttp://tickets.opscode.com/browse/CHEF-2580\n\nOur process has a couple prerequisites before we can merge github contributions. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Pull requests are optional, but should always include the ticket number that they're related to for cross-referencing. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097605/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097616", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Pull requests are optional, but should always include the ticket number that they're related to for cross-referencing. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097703", "body": "We plan to create a new project called knife-bootstrap to hold bootstrap templates moving forward. See CHEF-2348 for more details.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097705", "body": "We plan to create a new project called knife-bootstrap to hold bootstrap templates moving forward. See CHEF-2348 for more details.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097713", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Pull requests are optional, but should always include the ticket number that they're related to for cross-referencing. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n\nWe plan to create a new project called knife-bootstrap to hold bootstrap templates moving forward. See CHEF-2348 for more details.\n\nThis ticket may be related: http://tickets.opscode.com/browse/CHEF-1729\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097723", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Pull requests are optional, but should always include the ticket number that they're related to for cross-referencing. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n\nThis is the related ticket: http://tickets.opscode.com/browse/CHEF-1896\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097736", "body": "We plan to create a new project called knife-bootstrap to hold bootstrap templates moving forward. See CHEF-2348 for more details.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097749", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Pull requests are optional, but should always include the ticket number that they're related to for cross-referencing. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097761", "body": "Jessica,\n\nCan you please create a ticket on http://tickets.opscode.com for the remaining changes, mark it resolved and create links between it and this pull request? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097761/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097764", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Pull requests are optional, but should always include the ticket number that they're related to for cross-referencing. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097768", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Pull requests are optional, but should always include the ticket number that they're related to for cross-referencing. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097771", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Pull requests are optional, but should always include the ticket number that they're related to for cross-referencing. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097853", "body": "You sound frustrated, I'm sorry.\n\nPull requests aren't a part of our contribution process and Github will not allow us to disable them. As we've caught up elsewhere in contributions we are going through pull requests and trying to reach out to users here. We've got some ideas on how to better deal with pull requests in the future under these conditions and plan to implement them as time allows.\n\nChef is an open-source project built by a community of developers and system administrators with a common need. Opscode supports this process with its own resources as Chef's largest backer.\n\nSome open source companies release their products under two licenses; one to the community that encourages and sometimes requires sharing, and another to customers to do whatever they would like with. We think this isn't fair, so we built Chef under the Apache license that guarantees everyone the same rights. To protect this and ensure that users of Chef cannot by strong-armed by contributors who might think differently, such as through patent lawsuits, we utilize a contributor license agreement.\n\nThis is to protect everyone's interest in Chef equally.\n\nMore information is available in the How to Contribute wiki page and this blog post:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\nhttp://www.opscode.com/blog/2009/08/11/why-we-chose-the-apache-license/\n\nTo protect the users of Chef from issues related to copyright, we as stewards of that trust cannot accept contributions without this CLA. According to your wishes, I'm closing this pull request.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097859", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Pull requests are optional, but should always include the ticket number that they're related to for cross-referencing. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097859/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097977", "body": "You will need to complete the Contributor License Agreement as described in step two of the how to contribute page.\n\nThis is important for protecting the users of Chef from potential copyright lawsuits and contribution retractions.\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute#HowtoContribute-WhydoIneedtofilloutaCLA%3F\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3098214", "body": "http://tickets.opscode.com/browse/CHEF-1917\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3098214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3098253", "body": "This appears to have been merged as 50c7533822c66348d48d9dd0ebda665b111f6323\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3098253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3098263", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Pull requests are optional, but should always include the ticket number that they're related to for cross-referencing. Please take a moment to review the below wiki page for the appropriate steps:\n\u00a0\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n\nPlease link to the tickets that these commit relate to. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3098263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3099643", "body": "Alright, thanks for your effort. Closing as requested.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3099643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3114226", "body": "We're in the release process for 0.10.6 now. This will be merged in for 0.10.8 after 0.10.6 is released.\n\nPlease try to keep discussion on the official bug tracker: http://tickets.opscode.com/browse/CHEF-1827\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3114226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3116944", "body": "No problem! Once you complete the CLA it will probably take a couple days to be processed. You'll get a confirmation email from Opscode. Then you'll have access on JIRA to \"resolve\" the ticket, which will show that it is all set for Opscode to review the patch for merging.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3116944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3117095", "body": "I don't think we got this commit Andrea. I must have missed it when I got pull request 194 for CHEF-2652.\n\nSince it is a documentation fix, I think we can pull it in for 0.10.8.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3117095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3125762", "body": "Since we haven't merged his pull request yet, we should be able to merge yours at the same time, so no worries. We'll be merging for 0.10.8 in a week or two.\n\nSince you hadn't commented on the ticket, we didn't have your JIRA username or full name. We need one to reconcile you against the list of the approved contributors, with the JIRA username being the more concise one.\n\nNext time please link to the pull request from the ticket as the JIRA tickets are the canonical reference for bugs.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3125762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3153368", "body": "See discussion on the ticket.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3153368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3155455", "body": "This was fixed in http://tickets.opscode.com/browse/CHEF-2193 which is in the recently released Chef 0.10.6.\n\nThanks again for the help.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3155455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3264955", "body": "Thanks! Once the CLA is processed we can verify it on the tickets website\nand it helps us out a lot.\nOn Dec 22, 2011 12:28 PM, \"seph\" <\nreply@reply.github.com>\nwrote:\n\n> Hi there!  I did submit a CLA before submitting this pull request, though\n> I did not submit a ticket. I will investigate that process.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/opscode/chef/pull/64#issuecomment-3254378\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3264955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3617687", "body": "Merged\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3617687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3765615", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Pull requests are optional, but should always include the ticket number that they're related to for cross-referencing. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3765615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3765667", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Pull requests are optional, but should always include the ticket number that they're related to for cross-referencing. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3765667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3765670", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Pull requests are optional, but should always include the ticket number that they're related to for cross-referencing. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3765670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3765715", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Pull requests are optional, but should always include the ticket number that they're related to for cross-referencing. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3765715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3765729", "body": "Could you please link to the ticket that you created here so we can cross-reference them?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3765729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3765757", "body": "Hi nertzy,\n\nAny chance we can get you to complete the process for this contribution please?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3765757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3765765", "body": "Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Pull requests are optional, but should always include the ticket number that they're related to for cross-referencing. Please take a moment to review the below wiki page for the appropriate steps:\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3765765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3765794", "body": "Hi kpumuk,\n\nWe haven't heard back from you. Any chance you could please complete the contribution process so we can move forward?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3765794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3765800", "body": "Hey Shoaib,\n\nWe haven't heard back from you. Any chance you could please complete the contribution process so we can move forward?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3765800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/410938", "body": "On Wed, Jun 1, 2011 at 9:34 PM, danielsdeleo\nreply@reply.github.com\nwrote:\n\n> This means that `knife help` no longer shows \"shef\" and the general \"knife\" page in the list of available topics. We should probably generate the list of help topics and write the results to a file in knife/core. We can make this a dependency of the man page generation topics which are a dependency of the gem creation task, so this should be relatively painless.\n\nWhy should knife help list shef? It seems that shef should just have\nits own documentation as it is its own tool.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/410938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/411937", "body": "On Wed, Jun 1, 2011 at 9:45 PM, danielsdeleo\nreply@reply.github.com\nwrote:\n\n> In an ideal world, yes. In the world we are in, lots of users install via rubygems, and rubygems doesn't install manpages.\n> So, unless we build manpage viewing into every Chef executable, users won't be able to access the docs for that topic.\n> Making the docs available through `knife help` is the least bad workaround to this.\n> \n> @btm, actually, I'd prefer a flamewar in github comments\n\nThey could just set their MANPATH correctly! I'll relent, but only\nbecause users don't know they're wrong yet. #longbeard\n\nThe documentation rake task could create a ruby file with a constant.\nThat'll mean rewriting most of knife help, but that is cheaper and\nnicer than traversing directories anyway.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/411937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/902959", "body": "Any problem with this because I'm subclassing Rubygems? It doesn't use this yet, so it probably doesn't matter, but curious how that is handled.\n\nAdded, note that I'm on different branch now though too merge your with_constraints changes with mine. I'll merge to master soon.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/902959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/1169666", "body": "I'll push that. Is this 1.8 compatible?\n\nhttp://stackoverflow.com/questions/1306680/shellwords-shellescape-implementation-for-ruby-1-8\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1169666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/1169866", "body": "Interesting. I wasn't paying attention and committed this in 5588b9e7850778cf5b3235e8f76769eb33e7408e\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1169866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/1169884", "body": "I'm not sure if we even try to support 1.8.6 any longer so it may not matter. I think we gave up on that already. I'll ping @danielsdeleo. \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1169884/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/1252400", "body": "Waiting on Eventmachine 1.0.0 for Ruby 1.9 support on windows\n\nhttps://github.com/eventmachine/eventmachine/issues/149\nhttps://github.com/eventmachine/eventmachine/issues/307\n\nCheck out the link provided in the commit for the explanation of the 'platforms'\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1252400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/1255195", "body": "I was cheating and using our continous integration system to verify the fix on Windows rather than properly testing myself. :)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1255195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/1258968", "body": "We're planning on cutting the rc gem tomorrow.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1258968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/1265868", "body": "Replacement is easy, testing is hard.\nOn Apr 27, 2012 12:10 AM, \"Akzhan Abdulin\" <\nreply@reply.github.com>\nwrote:\n\n> Looks like Chef::JSOnCompat should be replaced with Yajl everywhere.\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> \n> https://github.com/opscode/chef/commit/cb586a17d75ea00236819895109b1f2e56d1d6b4#commitcomment-1264696\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1265868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/1300525", "body": "@therobot This works as intended.\n\nThere are many ways to install Chef, depending on the preferences of the person installing it. Some prefer that all software be installed using the package manager of the distribution and in harmony with the distribution, and want to use deb or rpm packages. Others prefer that Chef be installed using a gem package to their system Ruby. Increasingly, Chef users just want it to work.\n\nIn general, the Ruby community and Linux distributions differ in their priorities, which has lead to many distributions having very buggy installations of Ruby. This had been dealt with on a case by case basis, such as the 'ubuntu10.04-gems' template installing Rubygems from source, and the 'centos5-gems' template having to install a custom version of Ruby from another repository.\n\nThis lead to the creation of the Omnibus project, which creates a Chef installation in /opt/chef containing stable versions of Chefs dependencies. It isn't an entire operating system though and it still needs binary compatibility, so we built install binaries on additional platforms as needed. The most obvious example is that we have x86 and x64 installations for both CentOS 5.x and 6.x. Those four installers will each work on many platforms.\n\nIn the past, the default template used by knife was 'ubuntu10.04-gems' but we've changed this to use the new 'chef-full' template which performs an installation using the Omnibus installer. Knife never knew beforehand what operating system you were installing to, so unless you wanted the 'ubuntu10.04-gems' template, you had to specify which template you wanted with the '-d' flag. The 'chef-full' template is a better default for more people, as its installer script works for many platforms.\n\nYou can read more about Omnibus and try it out here: http://lists.opscode.com/sympa/arc/chef/2011-12/msg00225.html\n\nWe've rebuilt the framework and will be talking about that more in the coming weeks.\n\n@akzhan Github has many limitations that make it difficult for large projects. There's no workflow, and pull requests can only be open or closed. This means you can't mark them triaged, code reviewed, awaiting feedback, or merged, so you have to [re]read every open pull request or issue to determine its status. With hundreds of contributors and tickets, this scales very inefficiently. Generally the next biggest problem is determining what the reporter believes is wrong, and under what circumstances they're experiencing the issue. Reproducing the issue can be very time consuming and it's best if the original reporter files the bug with as much detail as possible.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1300525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/1395840", "body": "I'm not sure what you're trying to say, as this is a unit test you're commenting on. If you're seeing a regression on 10.10, please open a [ticket](http://tickets.opscode.com/secure/CreateIssue.jspa?pid=10000&issuetype=1&Create=Create) explaining what is happening and what you expect to happen, what platform you're on, and reference CHEF-3123 and CHEF-3067.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1395840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/1472346", "body": "@cgriego This is true. Our plan is to always have the latest revision available without a revision on 10.12.0+. That way you don't always have to specify which revision you want and knife will use the latest revision of the same version you're running on your workstation.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1472346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/1731022", "body": "Typically it is because the JSON gem has burned us in the past by breaking its API and we want a ticket filed that confirms a newer version has been tested before we increase the requirement.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1731022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/3658124", "body": "+1. I don't know where I was at the time, my bad.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3658124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/5868435", "body": "Good catch, fixed on 11-stable.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/5868435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/6130699", "body": "I can't think of a reason to need to clear the environment. It was probably where he started development from. Our [atlassian stack](http://www.getchef.com/blog/2014/04/24/community-tickets-and-wiki-down-for-emergency-maintenance/) was down for emergency maintenance. It's back up now. Please file a new bug. The conversation on this old PR is unlikely to be seen by most people.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6130699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/6824406", "body": "I want to like that comment. Need a Facehub plugin.\n\nWhile playing around with commenting this myself I started separating that into two conditionals for readability but was defeated overall and didn't make any change there.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6824406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/7360834", "body": "`lib\\chef\\platform\\provider_mapping.rb` is for specifying which provider to use for a particular platform and resource, not which resource to use on a particular platform. The Windows Service provider is already specified as the default provider for the service resource in the provider mapping. Since this patch doesn't add a new provider, but instead adds a new resource, the provider mapping isn't relevant.\n\nNothing prevents you from trying to use the windows_service resource on other other platforms, but we don't make those assumptions elsewhere either. For instance, you could try to use the registry_key resource on any platform, but success would be limited.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7360834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/chef/chef/pulls/comments/205820", "body": "Those are mailto links, and it is disguising the addresses to hide them from crawlers in the html. The rake task sometimes changes them.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/205820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/1124674", "body": "@chrisroberts, barring a strong use case, we're going to drop the node data pipe and move forward with the rest of the code. Thanks for all your work. \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/1124674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2156670", "body": "Why not @encrypted_data[\"cipher\"] ?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2156670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2226170", "body": "2012?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2226170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2256480", "body": "If we're in whyrun mode, and a resource's action is blocked, we're not going to send the action, and we would still want to log that in the Event Dispatcher. Thus, the trailing unless on this line shouldn't be there, but shifting this code around doesn't appear to make it significantly better.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2256480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2274715", "body": "Printing a debug line here with the cookbook order would help if there was an issue and the run didn't complete, and be generally clear.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2274715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2322554", "body": "We shouldn't see Dir.pwd be called, so maybe this should be Dir.should_not_receive(:pwd)?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2322554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2325487", "body": "Yeah, not important. I was pondering how we were going to make sure that ENV[\"PWD\"] was always prioritized over Dir.pwd, lest this be an issue some time and someone changes it without knowledge of the original reasoning.\n\n+1 otherwise.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2325487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2350812", "body": "If this is a complete rewrite, then the other copyrights should not apply. If it is not, we should keep the other authors as well.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2350812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2351172", "body": "We implement this check in Chef::Platform.windows?. I think that is slightly more obvious to a reader of the code what we're checking, as they might get wondering what mingw is and why we care. Using the Chef::Platform.windows? pattern also allows us to modify this check everywhere if we ever need to without a search and replace, however minor.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2351172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2351266", "body": "Testing cruft to be removed?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2351266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2351321", "body": "trailing comma\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2351321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2401294", "body": "Is this not the issue we were discussing where a Chef 10 Server using this code would save this key to couch?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2401294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2402061", "body": "Gotcha, didn't see the to_hash -> to_json connection.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2402061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2471579", "body": "Why this business instead of nil?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2471579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2881916", "body": "@cookbook_name = metadata.name unless metadata.nil?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2881916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2881940", "body": "We're not sure why cookbook_version would be nil here, it seems like the wrong thing to test to set this. Just accessing the metadata as noted above is probably simpler than calling #cookbook_version in #initializer.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2881940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2967811", "body": "The interpolation here isn't needed in the with:\n\n.with(@new_resource.device)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2967811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3087722", "body": "Should only need this line.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3087722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3087726", "body": "Shouldn't need 'Macosx'\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3087726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3087757", "body": "This test presumes that HOME is set. It may not be.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3087757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3087765", "body": "While it's probably okay to do this, it would be less manipulative to do something like:\n\nENV.should_receive(:HOME).and_return(nil)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3087765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3231814", "body": "\"Inferred cookbook names\" doesn't mention where the cookbook names are inferred from. Perhaps something like:\n\n```\n Chef::Log.warn \"Inferring cookbook name from directory name (#{@cookbook_pathname}) is deprecated, please set a name in the metadata.\"\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3231814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3457931", "body": "awk NF doesn't work on itcy-beard platforms, might wanna consider that. Otherwise we will some other day. \n\nhttp://tickets.opscode.com/browse/CHEF-3471\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3457931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3458238", "body": "Is this just because some of your node objects don't have a run_list or recipes?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3458238/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3558122", "body": "This test description should be more clear as to what we're testing, consider something like:\n\nit \"uses the password from --ssh-password for sudo when --sudo-use-password is set\" do\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3558122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3558124", "body": "Same comment as the test above\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3558124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3606703", "body": "Yeah, the existing bootstrap templates need to be awk-free, and will be post CHEF-3471 getting merged. Agree, not a concern, but a pattern we want to eradicate some day.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3606703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3762517", "body": "setting \"zypper_check_gpg false\" will silence the warnings if you aren't ready to migrate.\n\nSee http://tickets.opscode.com/browse/CHEF-3938\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3762517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/4202489", "body": "This might be a little confusing. This is the path where the file is most likely to be found on a chef-server if they haven't run chef-client yet and copied it to /etc/chef. There could be confusing between this and other documentation other people have seen. Minor though, _a little_ confusing.\n\nPlease enter the location of the validation key to use: ?\nPlease enter the location of the existing validation key: ?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/4202489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/4202790", "body": "I agree that the default value should change, but wonder if the way the situation has changed is worth changing the language of the question. In Chef 10, the server and client would use the validation key from the same path in /etc/chef by default, but in Chef 11 they're different places. If you're a noob, you may have seen one or the other path somewhere and you may not grasp enough yet to know which one is supposed to go here. I'm just thinking about a noob typing /etc/chef/validation.pem in here.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/4202790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/4303628", "body": "Ideally we would use \"#{ENV['HOME']}/Library/LaunchAgents\" here. This should work fine, because elsewhere we use File.expand_path which will do the same thing, but that's a bit removed from this code and it took a minute to confirm we did so. If that was ever changed such that we were interpreting paths with a shell, not all shells expand tilde the same way.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/4303628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/4442369", "body": "Chef::Platform.windows? is now in chef/platform/query_helpers, which is a more lightweight require.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/4442369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/4442397", "body": "thin leads to eventmachine, and eventmachine leads to yaks. Look at adding adequate redirect support to tiny_server.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/4442397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/4664939", "body": "Isn't this more of a the cookbook isn't there situation? Is talking about versions going to befuddle the user?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/4664939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/4732917", "body": "The double negative here should be cleaned up to be more clear. For instance:\n\nif remote_status.exitstatus == 2 && remote_status.stdout.strip != remote_url\n\nI believe the point of this code is to replace the URL if there is more than one value set (exit code 2, fixed with --replace-all) or if the existing status doesn't match what it is supposed to be. Could the conditional and the comment be updated to make this more clear? \n\nMaking helper methods with clear names would help a lot here, e.g.\n\nif multiple_remotes? || remote_matches?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/4732917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/4806670", "body": "neat syntax\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/4806670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/5125269", "body": "transformation spelling error.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/5125269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/5248168", "body": "Do we need to copy the code if we're already requiring the diff-lcs gem?\n\nIf we do, at the top of this file, add a note and the terms of the MIT License below the existing license header and a note to the NOTICE file at the top of the tree.\n\ndiff.rb, below the existing copyright header:\n\n```\nSome portions of this file are derived from material in the diff-lcs project licensed under the terms of the MIT license, provided below.\n\nCopyright:: Copyright (c) 2004\u20132013 Austin Ziegler\nLicense:: MIT\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files\n(the \u201cSoftware\u201d), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\nNOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND \nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, \nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT \nOF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n```\n\nThen in the NOTICE file:\n\n```\nOhai incorporates code modified from diff-lcs (http://diff-lcs.rubyforge.org/), which is Copyright (c) 2004\u20132013 Austin Ziegler\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/5248168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/5327616", "body": "It looks like this is failing the Travis CI tests on 1.8.7. Word is that if you move the period (or the whole thing) to the preceding line it will work on 1.8.7\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/5327616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/5327618", "body": "Same.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/5327618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/5327638", "body": "Trailing comma may be a 1.8.7 issue.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/5327638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/6304459", "body": "lost platform_specific_path here\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/6304459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/6304466", "body": "lost platform_specific_path here too\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/6304466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/6304519", "body": "Is this only used on a Chef 10 server?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/6304519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/6304565", "body": "When this gets merged, we should make sure we have a PBI to increase this to the final version so we don't forget.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/6304565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/6725764", "body": "This could be simplified as:\n\n```\npaths = Array(Chef::Config[:role_path])\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/6725764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/6725817", "body": "With mixlib-config >= 2.0.0 we shouldn't need to store and clear the config anymore as we use the new #reset method after each test now.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/6725817/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/6867732", "body": "mixlib-config 2 added an internal #reset method that the tests use that prevent us from having to do this now.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/6867732/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/7411927", "body": "Typo here: constraints\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/7411927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/7411935", "body": "Typo: constraints\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/7411935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/7411951", "body": "Pull out this commented code.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/7411951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/7411961", "body": "Pull out this commented code.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/7411961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/7412028", "body": "env shouldn't have to be interpolated here\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/7412028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/7412035", "body": "env shouldn't have to be interpolated here either\n\n```\nconstraints[env]\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/7412035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/7477387", "body": "If we don't need code we should delete it rather than comment it.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/7477387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/7572089", "body": "Do we know of a use case where Etc.getpwnam would fail but it would still be appropriate to use /home/user?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/7572089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/7572550", "body": "This line should be removed or turned into a debug message.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/7572550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/7804171", "body": "It'd be good to mention where we set the cookbook paths, perhaps this:\n\n'None of the cookbook paths set in Chef::Config[:cookbook_path], [\"/path/to/invalid/cookbook_path\"], contain any cookbooks'\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/7804171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/7804759", "body": "Seth C doesn't know, so we will just pull the rescue out.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/7804759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/7928077", "body": "Seems like we could rescue and raise an nice looking error instead.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/7928077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/8280408", "body": "This is fine, but you could use #reject here instead of #select, which would simplify the next line by removing the negation.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/8280408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/8449796", "body": "Can we include a short message here about what was wrong and how to fix it, e.g. \"You provided '#{arg}'  as a weekday, acceptable values are ...\"\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/8449796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/8450583", "body": "This is probably the Ruby 1.8 failure.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/8450583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/8450595", "body": "This is presumably cruft from development and shouldn't be included.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/8450595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/8450694", "body": "Still including the short checksums here would be helpful in identifying issues in the chef run, e.g. to file resources in different cookbooks changing the same file back and force.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/8450694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/8502303", "body": "Doesn't have to be now, but seems like we'd want to look in the same places as Chef::Knife.locate_config_file and refactor that accordingly.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/8502303/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/8502355", "body": "Are the items in paths every individual file we want loaded from the plugin? If so, we should be specific about that in the comment since that isn't the behavior right now.\n\nCould you use a glob here? That'd be nice to add to the example if so.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/8502355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/9836178", "body": "It's interesting you mention managing ssh, as there's a bug about not being able to manage ssh because of multiple plist files that contain 'ssh' in their name, and not allowing a preference for an exact match. It looks to me that the #find_service_plist changes below only expand the existing line and don't change any behavior.\n\nhttps://tickets.opscode.com/browse/CHEF-3584\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/9836178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/9836713", "body": "Could fix this spelling error on \"failure\"\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/9836713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/9837358", "body": "Historically, we've wanted actions like enable and disable to mean roughly the same things on different platforms/providers. Like Upstart decided the Right thing to do would be to fail on restart if the service wasn't running, but previously providers would still start the service. We overrode that behavior for consistency.\n\nThat said, we've been leaning more toward the \"do what you expect\" camp than we used to. Enable means \"make the service start on boot\" so it would be preferable if we could turn on without starting the service. If there's no way to tell launchctl to act that way, I'm fine with going this route under \"this is how OS/X people expect it to work\" path. \n\nI can't think of it being a problem, but we should be sure that the action [ :enable, :start ] pattern doesn't do anything foolish.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/9837358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/9881136", "body": "Do we need this? Was there an error that made you add it?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/9881136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/9881172", "body": "Is this a round-about way to limit the output below to this attribute?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/9881172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/9964287", "body": "This cookbook is looking there, not setting it. The [windows_reboot](https://github.com/opscode-cookbooks/windows/blob/master/providers/reboot.rb#L22) LWRP sets that value if it's going to reboot and then a handler notices it at the end of the run. I presume it's in the run_state because you don't want the request to persist if something goes wrong.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/9964287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10008645", "body": "Presumably this is really just, \"if nil?\" rather than anything else. What if I passed 42 as default_choice? confirm doesn't support interpreting options like that, so we'd probably want to raise an error.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10008645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10008723", "body": "It wasn't immediately clear to me what happens here if app_instructions is false and I give a blank answer, but it looks like answer will now be nil and that will fall into the else below.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10008723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10012512", "body": "I do want to be sure Chef::Recipe.respond_to?(:reboot_pending), which is where I started from. To achieve the same assurance with Chef::Resource, I tested that separately. I'll try to do the same here.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10012512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10053515", "body": "For starters, the windows cookbook has reboot_pending? already, we're reimplementing that functionality.\n\nAFAICT, all the Windows APIs available end up being software interfaces to the registry and those keys tell you if you need a reboot for something to complete, not necessarily that the system is planning on rebooting. In my mind, I would imagine reboot_requested? to be true on \"shutdown -r now\" on any system.\n\nUbuntu does refer to it as \"reboot required,\" but that means \"to finish up an update, a reboot is required,\" e.g. a kernel update. In my experience, I've often not bothered to perform that reboot for a quite a while. It wasn't so much required, as the completion of the update was pending a reboot.\n\nSo anyway, I could see either way, except that most of the windows documentation and the existing cookbook refer to pending reboots, and that's the primary target here, so I think reboot_pending? is best.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10053515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10053592", "body": "Sure? This isn't required functionality. But, how would this differ when we move windows_reboot into the core DSL? Is there a better place we would store the request for a reboot in a run?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10053592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10055179", "body": "_nod_ I'll just pull that out and we can figure it out when we get there. Seemed like a good idea in the heat of the moment.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10055179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10103384", "body": "The importance of this test is to make sure we go in without a false positive, that we start with a blank slate. If this returns true for some reason, then the subsequent tests would return true as well, but not because of the actual behavior that we're testing.\n\nAlso, the other tests won't run if there's a reboot pending, because registry_safe? is in there to ensure we don't muck up the system if there is a real reboot pending. It's not a huge deal with something like Windows Update\\Auto Update, but if we modified PendingFileRenameOperations, we would be overwriting important data.\n\nThese tests won't work right if there's a reboot pending, because reboot_pending? will return true regardless of our test setup. We raise that with this test failing, and avoid being destructive by using registry_safe? on following tests.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10103384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10103408", "body": "I was just on a roll using let, I don't think it matters.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10103408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10143313", "body": "Type: Client\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10143313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10143338", "body": "\"This file is reset every time a new release is done.\"\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10143338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10143377", "body": "I guess all three files have the same verbiage.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10143377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10447021", "body": "I don't see @validated_files used anywhere. Is this cruft?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10447021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10477330", "body": "Ah, I was looking for a use of the instance variable. It's interesting using the attr_reader getter method inside the class to get the PersistentSet object and modify it using it's methods. I wouldn't have suspected that. Is there a lesson in why you did this @danielsdeleo?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10477330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10531352", "body": "It would be good if we could replace `/usr/bin/chef-client` here with `@chef_config[:chef_client_path] || /usr/bin/chef-client`. It looks like we still don't have a default for chef_client_path, which was added in [CHEF-2715](https://tickets.opscode.com/browse/CHEF-2715). \n\nI was thinking of another related issue, but it turns out it was [CHEF-3844](https://tickets.opscode.com/browse/CHEF-3844) which is a test-kitchen bootstrap issue due to using install.sh directly and not having this kind of behavior.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10531352/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10533544", "body": "You could make a typo and break everything, sure. :)\n\nI have no problem doing it in another ticket, it's a minor issue that I noticed that there isn't a ticket for now, but probably would be eventually. Except, it's one of those things that annoys you but you quickly get past or ignore.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10533544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10535478", "body": "Could you check here and below for specific file names rather than a file count, so that using the same cookbook for other tests in the future doesn't require updating these numbers?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10535478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10535779", "body": "Created https://tickets.opscode.com/browse/CHEF-5115 for the chef_config issue. Lamont and I discussed at code review that this has to be manually tested because there are no tests around this file because it's really just a shell script.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10535779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10612331", "body": "What's the benefit of a Set over having unreachable_cookbook? call cookbook_order.include?(cookbook_name).\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10612331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10681045", "body": "Could you flip this around to `if config[:force]`? I think it is easier to read.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10681045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10712947", "body": "We should not need to preserve the Chef::Config values any longer now that we have Chef::Config.reset in the spec_helper.\n\nhttps://github.com/opscode/chef/blob/master/spec/spec_helper.rb#L152\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10712947/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10767913", "body": "The default confusingly seems to change depending on the notification channel. \n\nhttp://docs.travis-ci.com/user/notifications/\n\nUnder Email:\n\n```\non_success: [always|never|change] # default: change\non_failure: [always|never|change] # default: always\n```\n\nUnder IRC:\n\n```\non_success: [always|never|change] # default: always\non_failure: [always|never|change] # default: always\n```\n\nUnder Webhook:\n\n```\non_success: [always|never|change] # default: always\non_failure: [always|never|change] # default: always\non_start: [true|false] # default: false\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10767913/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10823550", "body": "I don't think we ever found out where 42 came from. I think we resolved it in Chef in [CHEF-2528](https://tickets.opscode.com/browse/CHEF-2528), maybe this is a holdover from that as a workaround. Windows support in shell out was pretty infantile in 2011 when the windows package LWRP was first written. August 2011 is when CHEF-2528 was opened, so I bet this archaeological hunt is correct and we can drop 42 how. bet. hope.\n\nThe only history I can find on 127 is from the windows cookbook git log:\n\n```\ncommit 37524a3997edde183c75621a59e9d3f8040ccf9e\nAuthor: Seth Chisamore <schisamo@opscode.com>\nDate:   Fri Oct 28 18:41:53 2011 -0400\n\n    windows v1.2.8\n\n    * FIX: Older Windows (Windows Server 2003) sometimes return 127 on successful forked commands\n    * FIX: windows_package, ensure we pass the WOW* registry redirection flags into reg.open\n\ncommit 026d754a007dee6ecf8bf6b95d4606c0fb7ccbd8\nAuthor: Seth Chisamore <schisamo@opscode.com>\nDate:   Fri Oct 28 12:16:28 2011 -0400\n\n    older versions of windows sometimes return 127 on successful commands\n```\n\nI can't find any corroborating evidence on the googles. MSDN reports 127 as:\n\n```\nERROR_PROC_NOT_FOUND\n127 (0x7F)\nThe specified procedure could not be found.\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10823550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10897240", "body": "Maybe. I worry about what's insinuated here, but we can try it: https://gist.github.com/cowlibob/717446\n\nThe fixes in Ruby call OleInitialize and OleUninitialize per thread.\n\n```\n    git-svn-id: svn+ssh://ci.ruby-lang.org/ruby/trunk@38869 b2dd03c8-39d4-4d8f-98ff-823fe69b080e\n\ncommit 27ed294c7134c0de582007af3c915a635a6506cd\nAuthor: nobu <nobu@b2dd03c8-39d4-4d8f-98ff-823fe69b080e>\nDate:   Fri Jan 18 02:24:35 2013 +0000\n\n    win32ole: OLE uninitialize\n\n    * ext/win32ole/win32ole.c (ole_initialize): uninitialize OLE at thread\n      ends.  [Bug #2618] [ruby-core:27634]\n\n\n    git-svn-id: svn+ssh://ci.ruby-lang.org/ruby/trunk@38868 b2dd03c8-39d4-4d8f-98ff-823fe69b080e\n\ncommit 588504b20f5cc880ad51827b93e571e32446e5db\nAuthor: nobu <nobu@b2dd03c8-39d4-4d8f-98ff-823fe69b080e>\nDate:   Fri Jan 18 02:23:37 2013 +0000\n\n    win32ole: OLE initialize per threads\n\n    * ext/win32ole/win32ole.c (ole_initialize): initialize OLE for each\n      threads.  [Bug #2618] [ruby-core:27634]\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/10897240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11027139", "body": "Does this happen in the wild? Seems like we should have a debug message here\n\n```\nChef::Log.debug \"Unknown content_encoding '#{response[CONTENT_ENCODING]}', initializing noop stream deflator\"\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11027139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11027225", "body": "Probably want a debug message in the case of gzip_disabled? too.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11027225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11039480", "body": "These two tests don't do anything. How about:\n\n```\n      it \"should raise Chef::Exceptions::ValidationFailed on an attempt to set the guard_interpreter attribute to something other than a Symbol\" do\n        expect { resource.guard_interpreter('command_dot_com') }.to raise_error(Chef::Exceptions::ValidationFailed)\n      end\n\n      it \"should not raise an exception when setting the guard interpreter attribute to a Symbol\" do\n        expect { resource.guard_interpreter(:command_dot_com) }.not_to raise_error(Chef::Exceptions::ValidationFailed)\n      end\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11039480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11039578", "body": "```\nexpect { resource.only_if(\"echo hi\") }.to raise_error(ArgumentError)\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11039578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11039649", "body": "This looks like a duplicate of the tests you added in spec/unit/resource_spec.rb.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11039649/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11039721", "body": "```\nexpect { resource.only_if(\"echo hi\") }.to raise_error(ArgumentError }\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11039721/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11084396", "body": "http://blogs.msdn.com/b/ie/archive/2006/12/06/file-uris-in-windows.aspx\n\nThis would be `file://server/share/windows/path/file.txt` which is why we confusingly need a third slash in the previous example with a local drive, because we're leaving out the hostname. In theory, these two are the same:\n\nfile://localhost/share/windows/path/file.txt\nfile:///share/windows/path/file.txt\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11084396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11132103", "body": "It looks like you're hardcoding this to relative. I'd expect something that looks at the path for a leading slash/backslash versus a drive letter or the \\?\\ prefix, and makes a determination then.\n\nWe do expect in the future that paths with a leading [back]slash and no drive letter be associated with the system drive, see [CHEF-4427](https://tickets.opscode.com/browse/CHEF-4427).\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11132103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11132526", "body": "I don't know that we really need to limit this to windows. The regex match against a drive letter should ensure this doesn't bother paths on other systems. I guess if would mess you up if you had a path on a linux system of \"/c:/etc/foo\" but that's silly. It doesn't matter significantly, but this line needs to be simplified a bit in any case.\n\nMaybe this:\n\n```\nsource_path = if Chef::Platform.windows?\n                          fix_windows_path(uri.path)\n                        else\n                          uri.path\n                        end\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11132526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11156561", "body": "That looks good.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11156561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11502315", "body": "These lines are breaking Travis, I presume they're cruft that you forgot to remove.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11502315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11502653", "body": "spec/spec_helper.rb adds Chef::Config.reset in between each test, so you shouldn't need to worry about backing up Chef::Config since you're requiring spec_helper.\n\nWe don't reset Ohai::Config, but we generally stub out ohai in the unit tests.\n\nThis feels more like a functional test, and I wonder if using the existing TinyServer framework from the functional tests would be better than this new chef-zero pattern (I don't know personally).\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11502653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11871641", "body": "result.empty? ?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11871641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11871891", "body": "```\nrescue => e\n  Chef::Log.error(\"Could not read #{path_for_printing} into a Chef object: #{e}\")\n  Chef::Log.error(e.backtrace.join(\"\\n\"))\nend\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11871891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11872134", "body": "Does this fix [CHEF-3307](https://tickets.opscode.com/browse/CHEF-3307)? If so, may be helpful to leave a comment there pointing to this PR to notify folks interested in that issue to take a gander.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11872134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11872940", "body": "What do you mean by calculation?The heavy regex usage?\n\nI think if you go back far enough, we have been pretty opinionated about the cookbook tree, e.g. files and templates have sub-directories for file-specificity. I thought we had decided not to allow subdirectories in one of the other segments because they'd make things too complicated, but I can't find the ticket right now. Looks like we were willing to allow subdirectories in some folders in [CHEF-672](https://tickets.opscode.com/browse/CHEF-672).\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11872940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11953909", "body": "This isn't here for the same reason as the above require is it? Should we add whitespace and a comment explaining why the order matters here?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11953909/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11955063", "body": "I'm missing the purpose of this check. Under what circumstances would universal_options be empty? 8d544b75 allowed provider/user/solaris.rb to set UNIVERSAL_OPTIONS to something else (which is non-empty), so universal_options should always contain at least UNIVERSAL_OPTIONS.\n\nIf there isn't a case where this should be empty, I'd expect something more like:\n\n```\nraise \"omgwtfbbq\" if universal_options.nil? || universal_options.empty?\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11955063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12015066", "body": "You could clean this line up in terms of style a little bit like this:\n\n```\nif Object.const_defined?(:Encoding)\n```\n\nI would make this block a separate method since you use it again in #candidate_version\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12015066/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12024142", "body": "I think $! is functionally the same but harder to get the gist of what's going on without looking it up in documentation.\n\n```\nrescue => e\n  puts \"thing you can see one line up that has something to do with rescue: #{e}\"\nend\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12024142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12024160", "body": "When I looked through this code the other day, it seemed like it was a historical artifact of the progression of the code.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12024160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12163682", "body": "You can just drop that line.\n\nhttp://docs.opscode.com/essentials_nodes_why_run.html\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12163682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12208120", "body": "Did you consider using a test double instead of creating this class?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12208120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12225375", "body": "I don't simple have an answer for it, but sounds like a careful balance of bailing out immediately and not filling up the cron logs with the continuous noise of clients bailing out.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12225375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12293172", "body": "This is cruft\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12293172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12293198", "body": "I think this should noop and fall through for other platforms.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12293198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12293206", "body": "This should just be a class.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12293206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12398542", "body": "Travis was failing on 1.8.7. The hummingbird book says that (?<!) is a negative lookbehind assertion, and is Ruby 1.9 only. Can you do this in a nice obscure way that 1.8.7 supports? ;)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12398542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12398714", "body": "```\nfoo = URI.split(\"http://www.yahoo.com/foo/bar\")[5]\n=> \"/foo/bar\"\n```\n\nhttp://www.ruby-doc.org/stdlib-1.8.7/libdoc/uri/rdoc/URI.html\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12398714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12401391", "body": "all of these lines should be updated to shell_out!. the should_receive stubs out the actual call, so we don't actually run the command. This is what we want on a unit test, it shouldn't be interacting with the system.\n\n```\n@provider.should_receive(:shell_out!).with({\n       :command => \"cave -L warning print-ids -s install -m 'dev-scm/notgit' -s install -f '%v'\"\n})\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12401391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12599196", "body": "What about something like this to avoid recreating the list of log levels in another place:\n\n```\nglobal_level = Mixlib::Log::LEVELS.fetch(Chef::Log.level)\nresource_level = Mixlib::Log::LEVELS.fetch(@new_resource.level)\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12599196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12933917", "body": "Yeah, I can't tell where I thought otherwise now. The MSDN article below seems to indicate 260 for everything. I wonder if that's 256 for the path and 4 four the drive and null...\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12933917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12965137", "body": "It'd be nice to be more specific here, but I can't think of a great word. They're commits from Chef, but that sounds weird even if our company and product had different names.\n\nMaybe we don't separate contributions and other commits with headers, but just with a blank line? Or the other way around?\n\n```\n ## Unreleased\n* [**Phil Dibowitz**](https://github.com/jaymzh):\n  SIGTERM will once-more kill a non-daemonized chef-client (CHEF-5172)\n* [**Pierre Ynard**](https://github.com/linkfanel):\n  chef-service-manager should run as a non-interactive service (CHEF-5150)\n\n\n* Print nested LWRPs with indentation in doc formatter output\n* Make local mode stable enough to run chef-pedant\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12965137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12968339", "body": "Yeah, no headers and just space them so it's clear that the long list of commits with no contributor name don't belong to the last contributor listed (I did two newlines in my example, one's fine, or commits than contributors. Any way you go is fine with me.)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12968339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12969672", "body": "If we moved to always raise on non-printable characters and always and the prepend when MAX_PATH is exceeded, we could drop the arguments to tune warn/error.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12969672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12969803", "body": "No, #absolute_path just filters extra characters. We could always prepend \\?\\ afterward if it's not there. I think that's safe.\n\n```\nirb(main):001:0> path = \"C:\\\\\\\\windows\"\n=> \"C:\\\\\\\\windows\"\nirb(main):002:0> File.absolute_path(path)\n=> \"C:/Windows\"\nirb(main):003:0> path = \"\\\\\\\\?\\\\C:\\\\windows\"\n=> \"\\\\\\\\?\\\\C:\\\\windows\"\nirb(main):004:0> File.absolute_path(path)\n=> \"//?/C:/windows\"\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12969803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12972327", "body": "apparently that is true.\n\n```\ntesting: bob\nprintable? true\ntesting: newline:\n^--newline\nprintable? false\ntesting: tabtab         tabtab\nprintable? false\ntesting: I\u00e9I\u00edI\u00e9I\u00ed\nprintable? true\ntesting: \u00e6\nprintable? true\ntesting: abc\nprintable? true\ntesting: ???\nprintable? true\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12972327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12972356", "body": "that last one is unicode japanese, but powershell doesn't have the page or whatever. the one before it (abc) is unicode as well.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12972356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12974350", "body": "That seems like we would be testing the behavior of Chef::Util::PathHelper, which we already do in its tests. I think testing that again here is leaning toward a functional test.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/12974350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13018071", "body": "I'm not sure what you're saying in either case.\n\n```\n# if the string contains any characters that are not in the printable character class\nif string =~ /[^[:print:]]/\n```\n\nI don't see why you would want to anchor it, we want to look anywhere in the string.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13018071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13022618", "body": "As we discussed on hipchat, I'm not creating Util here, just copying an existing pattern. Trying to be a module produces:\n\n```\nc:/Users/btm_000/Documents/github/chef/lib/chef/util/path_helper.rb:23:in `<class:Chef>': Util is not a module (TypeError)\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13022618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13361421", "body": "Did you mean \"We strive\"? Thrive appears fine but feels weird.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13361421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13361566", "body": "This feels like this should be \"Learn Chef\"\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13361566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13361975", "body": "**TODO**: What's a unit test? How do I write one? Where are they? Link me to something? How do I get help?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13361975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13362017", "body": "Do we still have Google Hangouts for CR or CR/\"Office Hours\"? How do people find those? Is now a good time for a ChefCodeReview twitter account?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13362017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13362047", "body": "are \"Chef Engineering Team\" and \"Chef Core Committers\" github groups or something? do we need an explanation somewhere about what these roles are we keep referring to?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13362047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13362063", "body": "\"Individual CLA\" ?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13362063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13362094", "body": "`If you're contributing on behalf of your employer or another party retains the copyright for your contribution, have them complete our...`\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13362094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13362120", "body": "`Steps to Reproduce`\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13362120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13453241", "body": "@sersut you okay with this? This method is only used on Windows, so you shouldn't hit this unless you're doing a bunch of new feature work on 1.8.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13453241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13669394", "body": "Since this is a new version of this feature, how about we require a minimum secret length?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13669394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13671357", "body": "A minimum length doesn't have to be a recommended length. I would want to\nraise, not warn, below a certain length. My feeling is the computational\ncycles here for erring toward longer keys here are cheap.\nOn Jun 11, 2014 3:51 PM, \"Xabier de Zuazo\" notifications@github.com wrote:\n\n> In lib/chef/encrypted_data_bag_item/decryptor.rb:\n> \n> > @@ -197,5 +199,33 @@ def candidate_hmac_matches?(expected_hmac)\n> >          valid == 0\n> >        end\n> >      end\n> > +\n> > -    class Version3Decryptor < Version2Decryptor\n> >   +\n> > -      def initialize(encrypted_data, key)\n> > -        @encrypted_data = encrypted_data\n> >   +\n> > -        # split the hmac key form the key\n> > -        @hmac_key, @key = key.unpack(\"Z#{key.length/2}Z*\")\n> \n>  Since this is a new version of this feature, how about we require a\n> minimum secret length?\n> \n> In my first implementation, I added a warning if the secret was to short.\n> But I removed in the final PR because I really did not know what to choose\n> as recommended length.\n> \n> In the Official Data Bags documentation\n> http://docs.opscode.com/chef/essentials_data_bags.html#secret-keys, a\n> secret length of _684 bytes_ is used. Maybe double that size?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/opscode/chef/pull/1474/files#r13670081.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13671357/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13924701", "body": "Why is this commented out?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13924701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13924710", "body": "Why is this commented out?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13924710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13924720", "body": "Why is this commented out?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13924720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13924753", "body": "Why is this commented out?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13924753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13924766", "body": "Why is this commented out?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13924766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13924771", "body": "Why is this commented out?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13924771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13924779", "body": "Why is this commented out?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13924779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13924869", "body": "This looks like code from something else that snuck in accidentally. \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13924869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13934592", "body": "It took me a second to get this.\n\nCurrently: `guard_interpreter :default`\nChef 12: `guard_interpreter :powershell_script`\n\nHowever, per @lamont-granquist's point, it would be good to have an option called \"shell\" or such, as the default behavior is to use the systems shell, e.g. sh or starting a process directly (via mixlib-shellout) on linux or cmd.exe on Windows. :shell would be the same as :default for backward compatibility. (or we could just switch :default to :shell, since this is a major release anyway).\n\nProposed: `guard_interpreter :shell` to get the existing behavior. \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13934592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13934694", "body": "Talked with @adamedx about this and switching to Unrestricted here doesn't pose any security concerns for us.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/13934694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/14039335", "body": "I think there's a bonus \"end\" here due to skipping one level of indentation which is causing travis failures.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/14039335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/14263367", "body": "You could add \"include Chef::Mixin::ShellOut\" in the class so you can call #shell_out! I don't know if it saves many characters in this case yet, but it is the pattern I'm used to seeing.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/14263367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/14298193", "body": "Why \"sample.node\" as the host name? Something without a dot seems it would be more clear, e.g. sample_node.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/14298193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/14310184", "body": "I think deleting HOME that way is fine.\n\nBut, you need to be careful here with passing run_opts[:environment]. Note that in the previous code we weren't setting it at all if it is empty, but you're unintentionally setting it to an empty hash if both environment and user are not specified as attributes.\n\nPassing \"run_opts[:environment] = nil\" has a special meaning. I think in this case passing an empty hash wouldn't trigger that special meaning, but I think it would be best to keep the current behavior of not setting run_opts[:environment] at all if neither environment or user are set.\n\nhttps://github.com/opscode/mixlib-shellout/blob/master/lib/mixlib/shellout.rb#L298\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/14310184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/14310626", "body": "I realize this is duplicating the existing test above, but maybe that's more of an argument that we could be more clear here what the result is supposed to be here? It took me a second to be sure it was right, and I could see someone flipping the bit if they caused a regression and quickly tried to fix it by changing the test.\n\n```\nit('returns that it added one line') { should be == 1 } \n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/14310626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/14310856", "body": "Is refactoring this to remove duplicate code yet preserve the method signatures too complex? e.g.\n\n```\ndef add_missing_line(search, line, prepend = false)\n  count = 0\n\n  unless @lines.find { |line| line.match(search) }\n    count = 1\n    if prepend\n      @lines.unshift line\n    else\n      @lines << line\n    end\n  end\nend\n\ndef prepend_line_if_missing(search, line_to_prepend)\n  add_missing_line(search, line_to_prepend, true)\nend\n\ndef append_line_after(search, line_to_append)\n  add_missing_line(search, line_to_prepend)\nend\n```\n\nEh. Not having named method parameters probably makes that confusing.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/14310856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/14370215", "body": "Which attribute is the link itself and which is the thing being linked to has long been difficult to describe. I think we flipped the resource way back in the day actually. To the point, I'm not sure from this comment what \"current\" and \"new\" are. Could you make this explanation a little more clear and remove the extra whitespaces in front of the comments while you're at it? ;)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/14370215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/14370310", "body": "is this 'and the link already exists and points to a different directory'? (added different there)\n\nI don't know why there is no whitespace around the code blocks in this file. I don't particularly love that. _shed_\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/14370310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/14478646", "body": "Which ruby is this? Are we sure this is the onmnibus Ruby? ;)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/14478646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/14479213", "body": "`def missing_line(search, &block)` ?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/14479213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/14615961", "body": "From a previous comment that was hidden due to an additional pushed commit:\n\n> Passing \"run_opts[:environment] = nil\" has a special meaning. I think in this case passing an empty hash wouldn't trigger that special meaning, but I think it would be best to keep the current behavior of not setting run_opts[:environment] at all if neither environment or user are set.\n\nWithout nesting ternary operators, could we maintain the pattern of not setting `run_opts[:environment]` if we don't need to?\n\n```\nif @new_resource.environment\n  run_opts[:environment] = env.merge(@new_resource.environment)\nelsif !env.empty?\n  run_opts[:environment] = env\nend\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/14615961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/14730363", "body": "We can still use a common #missing_line? method without having to pass a block can't we?\n\n```\ndef append_line_if_missing(search, line_to_append)\n  @lines << line_to_append if missing_line?(search)\nend\n\ndef prepend_line_if_missing(search, line_to_prepend)\n  @lines.unshift line_to_prepend if missing_line?(search) \nend\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/14730363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/15310765", "body": "In some other package resources we take a timeout attribute rather than hardcoding one, such as apt. We should do that here rather than running the timeout up to a day, as that is excessive for a lot of use cases.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/15310765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/15472075", "body": "It'd be helpful here if we were more explicit about the difference between -m and -M. \n\n```\n# pw group[add|mod] -M is used to set the full membership list on a new or existing group\n# pw groupmod -m is used to add new members to an existing group\n```\n\nhttp://www.freebsd.org/cgi/man.cgi?query=pw&amp;sektion=8\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/15472075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/15472337", "body": "@tbe check your whitespace here\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/15472337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/15484773", "body": "These kind of arguments aren't ideal, as we have no context here as to what sending true or false means.\n\nIn the context of create_group, we just need the list of members, right? Could the first half of set_members_options be refactored into another method that returns this list, and then here we just add \"-M #{that list}\" to the list of command line options? Maybe we don't even need that logic and we just set something like `member_options = \"-M #{@new_resource.members.join(',')}\"` right here and be done. Then, add tests for that behavior ;)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/15484773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/15776067", "body": "This seems like a good place for a debug message.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/15776067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/15899903", "body": "Not here specifically, since this just returns special characters as a separator. But the changes in `lib/chef/application/solo.rb` could probably use Chef::Util::PathHelper.validate_path.\n\nAlso, we're not using Chef::Config.platform_path_separator in other classes yet, we probably shouldn't start. Consider putting this in Chef::Util::PathHelper with a replacement for platform_path_separator that we could use to replace the multiple places in the code that we do `::File::ALT_SEPARATOR ? ::File::ALT_SEPARATOR : ::File::SEPARATOR` currently. Dan also mentioned `lib/chef/platform/query_helpers.rb` as a potential place to consider for this new method.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/15899903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/15965894", "body": "So are we using the old platform_map stuff to make @sethvargo happy again?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/15965894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/15967462", "body": "Alright, so @sethvargo is happy, ChefSPec users are unhappy in #1773.\n\nMy impression was the provider resolver stuff that was discussed in #1055 (which is the commit @sethvargo fingered in #1773 (https://github.com/opscode/chef/commit/f450ac669eb4f364adc1b87e438f1b9830217c49)) didn't happen. That was forked into #1305 but closed as dead in discussion and not merged.\n\nThe provides stuff that I added in the resource is from way back here:\n\n```\ncommit 2fde4ccb6f533323e5170ee2b3e9d87ad9603b67\nAuthor: Seth Chisamore <schisamo@opscode.com>\nDate:   Fri Nov 4 21:10:03 2011 -0400\n\n    [CHEF-2698] refactor Chef::Resource::PlatformMap to\n    minimize access to global state.\n\n    * use instance methods throughout Chef::Resource::PlatformMap\n    * create single instance of Chef::Resource::PlatformMap in Chef::Resource\n    * all access to Chef::Resource::PlatformMap values\n      is now done through class methods in Chef::Resource.\n```\n\nFrom a mile-high view, I could see how the CHEF-2698 provides stuff could cause a different resource_name to show up in some places than the one used in the recipe. Regardless, I can dump this line and use the platform_map for now for Windows since there is only one service provider anyway.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/15967462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16073663", "body": "Why isn't this string using \\t characters as well? It seems it would be easier for humans comparing these lines in the text if they used the same format. I presume this string contains actual tabs. While that's easier to view than \\t, it seems a little less explicit (if it matters?).\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16073663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16074027", "body": "I wonder if this needs an explanation in a comment here? We talked it over in Developer Office Hours and it seems like the right choice to us, but it's not immediately obvious why this isn't defaulting to nil.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16074027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16075442", "body": "It's a bit confusing looking at this hash, and scrolling down to look at the relevant tests, and piecing it together. Maybe an explanation of what we're using @platform_hash for in the test here would be helpful.\n- Precedence\n\n```\n@platform_hash = { \n  \"fake_os\" =>  { \"default\" => \"bob\",\n                         \">= 6.0\" => \"steve\",\n                         \"~> 6.1.4\" => \"george\",\n                         \">= 6.2\" => \"tom\"\n}\n```\n\nGiven a platform version of 6.2.10, do we know that \"tom\" is always returned? e.g. hash key order isn't influencing us? What about 6.1.5? Should be george, right? I think @lamont-granquist has left a related comment\n\nWhich makes me think you should order the keys in the hash here numerically at least.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16075442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16075505", "body": "Could you pick something else for the values here, i.e. 12, 1, and 2? At first I was trying to figure out why we would be removing decimals such that 1.2.3 became 12. I'm not sure exactly what to recommend though.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16075505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16075848", "body": "The warning is confusing, as it leaves me wondering why I should be careful. It also says that the files are going to be uploaded, but they aren't, they _would_ be.\n\nA `--no-upload` option with a message like `Not uploading #{cookbook_name}.tgz due to --no-upload flag\" would be a more general case to me.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16075848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16199689", "body": "We use raise instead of fail in this project. I don't know how much it matters, but I see no other uses of fail in the codebase.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16199689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16545000", "body": "I'm curious if this was intentional over setting `@provider = Chef::Provider::DscScript` directly.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16545000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16545808", "body": "This read a wee bit hard. Maybe or instead of and? Hmm.\n\n```\nraise ArgumentError, \"The 'code' and 'command' attributes may not be used together\"\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16545808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16545963", "body": "why isn't this `configuration_script` ?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16545963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16546042", "body": "If this attribute remains as `configuration_data_script` then these errors need to be updated.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16546042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16553563", "body": "In the other resources we set the variable directly and `provider()` exists to facilitate setting a different provider as a resource attribute. I don't see it hurting anything to use it this way myself (except jumping through some unnecessary code path), so I was curious why you did.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16553563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16565212", "body": "Can we remove this check now and always specify a default value for Chef::Config[:encrypted_data_bag_secret]?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16565212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16566102", "body": "We're combining the behavior of two arguments here, so there's opportunity for surprise. We should at least provide a debug message that contains the full path to the file we're choosing to use due to the argument. Also consider skipping or raising here if template is a directory. \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16566102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16577931", "body": "hmm. are the descriptions of these two tests reversed?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16577931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16607288", "body": "These last two.\n\n```\nit 'should not converge if the script is already converged' do\n  @resource.should be_updated\n```\n\n```\nit 'should converge the script if it is not converged' do\n  @resource.should_not be_updated\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16607288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16621043", "body": "You could put a more useful message than Exiting in the message (this gets piped out through Chef::Log.debug), although I realize we don't elsewhere.\n\nI think we should exit 1 here instead of 0. Maybe you wanted to get the help output so you might consider this success, but I could imagine a case where something gets messed up and only chef-apply is run in a script and you don't capture that because it is exiting with success.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16621043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16674298", "body": "This should be a Mash, for consistency, as the other attributes in the metadata are.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16674298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16675513", "body": "Combine this into the above \"No NO no\" loop?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16675513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16675743", "body": "In these cases I think what we're testing is that we set the value appropriate for the correct line in the rc.d file, so it would be more appropriate to say something like it \"sets enabled based on the exact match (false)\".\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16675743/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16799843", "body": "What's this line for? The line above it has `==`, so I'm thinking maybe you didn't notice that and had a problem so you added this extra line?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16799843/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16799951", "body": "we did notice that #supports_pkgng? is duplicated in the provider and resource. Not sure if there's a good place to put it elsewhere though, which is probably why it just ended up being duplicated.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16799951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16858767", "body": "all the providers use the same resource, so maybe leave it in the resource and call new_resource.supports_pkgng? from in the provider when you need it. @danielsdeleo ?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/16858767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17073013", "body": "It's probably best not to override the argument passed to this class, e.g. something like this:\n\n```\nif Chef::Config[:client_name]\n  if client_name == Chef::Config[:node_name]\n    client_name = Chef::Config[:client_name]\n  end\nend\n```\n\nAlso, we would want unit tests added to spec/unit/rest_spec.rb and something for spec/unit/config_spec.rb.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17073013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17073231", "body": "I know the comment below should match, but is there something we could 'expect' to match exactly(5).times ?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17073231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17077117", "body": "I did a git grep for REST.new earlier and only saw one place that specified that value, and it was passing Chef::Config[:node_name] anyway. \n\nMaybe even better to change the default to nil and then add logic to set it to Chef::Config[:node_name] by default.\n\n```\nif client_name.nil?\n  if Chef::Config[:client_name]\n    client_name = Chef::Config[:client_name]\n  else\n    client_name = Chef::Config[:node_name]\n  end\nend\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17077117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17092684", "body": "That seems like a good idea. In fact, removing the \"5/5\" from the match below and adding another line that makes sure something happens the same number of times as the Chef::Config value sounds like it would make this test a lot more solid.\n\nYou know, if something ever changed we're not relying on debugging output, that maybe wouldn't get updated by accident.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17092684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17141724", "body": "I usually require chef/exceptions when I use Chef::Exceptions. It should be unnecessary, so maybe it's just habit..\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17141724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17141792", "body": "Using node.automatic would more closely mimic data coming from Ohai, although it \"shouldn't matter.\"\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17141792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17142004", "body": "node.automatic?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17142004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17142016", "body": "node.automatic?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17142016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17339646", "body": "According to [MSDN](http://msdn.microsoft.com/en-us/library/windows/desktop/ms724265%28v=vs.85%29.aspx) ExpandEnvironmentStrings returns 0 on failure.\n\n```\nresult = Chef::ReservedNames::Win32::API::System::ExpandEnvironmentStringsA(path, buf, buf.length)\nif result == 0\n  Chef::ReservedNames::Win32::Error.raise!\nend\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17339646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17375999", "body": "bonus space after the assignment operator :grin: \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17375999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17383076", "body": "Travis reports this is failing in Chef::HTTP where we parse the url (as a string) using URI.parse. Here you're turning the string into a URI object.\n\nIf you wanted to rely on URI to parse the string here you probably could, just don't set the result to url.\n\n```\n Failure/Error: knife('upload --purge /cookbooks/x').should_succeed <<EOM\n     NoMethodError:\n       undefined method `gsub' for #<URI::HTTP:0x0000001a729ce0 URL:http://127.0.0.1:8900>\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17383076/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17383124", "body": "This rescue isn't doing anything but re-raising. We should rescue right at the URI.parse and provide a helpful message about there being a failure while parsing the url for the chef server.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17383124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17383914", "body": "Supermarket is misspelt here.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17383914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17383986", "body": "Does the tarball get cleaned up too?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17383986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17427611", "body": "I don't know if it matters, but I'd expect to see this written as:\n\n```\nraise Chef::Exceptions::NoSuchResourceType, \"exec was called, but you probably meant to use an execute resource.  If not, please call Kernel#exec explicitly.\"\n```\n\n`Chef::Exceptions::ResourceNotFound` seems more specific to me, as NoSuchResourceType is used in mapping general and platform specific resources to a platform.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17427611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17479443", "body": "could you wrap this in a context block that indicates that dry-run is set?\n\n```\ncontext \"when the --dry-run flag is specified\" do\n  before do\n    Chef::CookbookSiteStreamingUploader.stub(:create_build_dir).and_return(\"/var/tmp/dummy\")\n    @knife.config = { :dry_run => true }\n    @knife.stub_chain(:shell_out!, :stdout).and_return('file')\n  end\n\n  it \"should list files in the tarball\" do\n    expect(@knife).to receive(:shell_out!).with(\"tar -czf #{@cookbook.name}.tgz #{@cookbook.name}\", {:cwd => \"/var/tmp/dummy\"})\n    expect(@knife).to receive(:shell_out!).with(\"tar -tzf #{@cookbook.name}.tgz\", {:cwd => \"/var/tmp/dummy\"})\n    @knife.run\n  end\n\n  it \"does not upload the cookbook\" do\n    allow(@knife).to receive(:shell_out!).and_return(true)\n    expect(@knife).not_to receive(:do_upload)\n    @knife.run\n  end\nend\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17479443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17486754", "body": "Just return `Chef::Resource::File.new(use_path, run_context)` here?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/17486754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/18096057", "body": "right. it is easier to see looking at the file rather than the diff.\n\nWe test a specific guard_interpreter (:powershell_script) a few blocks down in the \"with powershell_script as the guard_interpreter\" context. I wanted a base block where we don't actually set guard_interpreter to anything so we could test what we get when we don't specify anything on the resource, and then build on that with specific values.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/18096057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/18096150", "body": "Also, we already test that it defaults to `:default` in the Chef::Resource unit test. We could duplicate that here at the higher level of a functional test but the value probably isn't huge.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/18096150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/18238840", "body": "If you do pass command but it isn't a String, you'd fall out here into the else.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/18238840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/18239268", "body": "From where we call Conditional.new in Chef::Resource, we shouldn't get initialized without a command or block, but since that's a requirement of this class we ought to continue to check here.\n\nhttps://github.com/opscode/chef/blob/master/lib/chef/resource.rb#L571\n\nI could move the raise below up to the the top of initialize. The other raise on new line 66 is in case we're passed a command but it wasn't a string. We could check that in initialize too, just so it happens early, it was just more convenient here since we're already looking at the class type of command here.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/18239268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/18788471", "body": "Are you setting this both in initialize and in load_current_resource in case the `service_name` has changed?  it's unclear here which value init_command is going to be set to when. If we need both, we should change the variable name to be more specific, if we only need one, set it only in initialize?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/18788471/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/18789261", "body": "this is carbon copied from Chef::Provider::Service::Simple. I poked around the git history of mixlib-shellout a bit and only found some exceptions raised in the Windows stuff, e.g. https://github.com/opscode/mixlib-shellout/blob/master/lib/mixlib/shellout/windows/core_ext.rb#L175. I couldn't find a ticket or issue related to the failure. Maybe @sersut could. Perhaps we never filed an issue to fix that, and we should create one and then annotate these TODO comments.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/18789261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/18789344", "body": "move this into the conditional?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/18789344/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/18789475", "body": "remove this commented code or convert it to a Chef::Log.debug line.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/18789475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/18790011", "body": "so many moons ago we added a resource lookup feature where you could add a line to a resource (e.g. openbsd_service) like this:\n\n```\nprovides :service, :on_platforms => [\"openbsd\"]\n```\n\nThe goal was to avoid adding more attributes to the core service resource that only one service provider used. Unfortunately we found this broke ChefSpec in #1773, but we're working on fixing that widely in Chef 12 in #2216, because we still think it's best to add provider specific resources to a single specific resource, rather than the top-level resource and cause confusion over what that attribute does on other providers. This fix is going to be completed soon,, so we should switch to the provides behavior here and we can take advantage of that fix.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/18790011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/18790225", "body": "For reference, the platform specific resource work was done in [CHEF-2698](https://tickets.opscode.com/browse/CHEF-2698).\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/18790225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/18913200", "body": "I'd prefer to keep an error that ends the run. This error was added as part of the fix for #1943, where the user was doing this:\n\n```\npowershell_script \"Powershell guard testing\" do\n  code \"\\\"Script executed\\\" >> \\\"C:/chef/cache/guardtest.log\\\"\"\n  not_if { \"$True\" }\n  guard_interpreter :powershell_script\n  convert_boolean_return true\nend\n```\n\nIf you're not a chef/ruby hero, it's not obvious that these two lines do completely different things, and therefore that the above example wouldn't work:\n\n```\n  not_if { \"$True\" }\n```\n\nand\n\n```\n  not_if \"$True\"\n```\n\nIt's a big presumption on our part that if someone has a block and a guard_interpreter, that they really wanted to run the block run as ruby code and the guard_interpreter is cruft that they didn't mean to leave there. I don't think we can DWIM here, and need to raise an error so the user can fix the recipe so that it is written to do what they want it to do.\n\nFurther, in the above example, the user mistakenly thought the resource was working correctly because they believed that powershell was returning true, so the not_if conditional was preventing the resource from running, when actually the string was being evaluated as true in ruby. In this case, if we ignored the guard_interpreter, even with a warning, it could be a long time before the user realized that this resource would never run, regardless of what they put inside the double quotes.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/18913200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/18916334", "body": "Okay, @sersut convinced me there's a way to get some value from keeping these tests. If we remove the knife.config lines from the let, and then add `knife.merge_configs` as the next to last line of the let, then this block of tests would ensure that #knife_ssh does in fact correctly set the ssh hash from config values passed to it (it does not test precedence, as we've discussed previously, that's merge_configs job and hard/impossible to test as a unit test).\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/18916334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/19238045", "body": "So the `provides` syntax I mentioned should be good to go in master now, and I think we should switch to using that with a new openbsd service resource instead of adding `afters` to the the top-level service resource. \n\nWe're on the final stretch before freezing for Chef 12, and I believe @lamont-granquist is heroically trying to get #1596 in, which is a related improvement. But through a quick perusal it doesn't look like it would change the benefit of adding a provides line besides that it looks like @lamont-granquist is adding some additional syntax.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/19238045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/19429365", "body": "@curiositycasualty ping --^\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/19429365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/19430646", "body": "temporary cruft to pull\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/19430646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/19503998", "body": "Is this a reasonable default?  My continent prejudice presumes most traffic would be in the Americas.\n\nIn any case, this probably should be a resource attribute. I would guess it's not worth parsing the PKG_PATH environment variable by default.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/19503998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/19566223", "body": "If we could fit a short comment in here about the difference between PACKAGESITE / PACKAGEROOT that'd be good. I recall long discussions in the past on the freebsd provider. If we can't fit a short comment, it'd be helpful to link to a definitive discussion.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/19566223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/19678719", "body": "might be worth swapping 'blah' and 'monkey' in this line so we're testing that the third argument gets used?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/19678719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20463070", "body": "It doesn't look like chef-solo currently deletes your chef-repo. This seems like a dangerous change.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20463070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20463169", "body": "I'd consider raising an error if `--recipe-url` is set and local mode is not, since it doesn't do anything anyway it'd be a convenient occasion to point out to the user that the flag doesn't work outside of localmode, in case they didn't read that far.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20463169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20463438", "body": "It could be helpful to include the cookbook path in this error. It's possible the user has multiple configs and they're not sure which one they're getting. It'll save some thought if the error points out where it's looking.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20463438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20463525", "body": "I realized it already existed, but this variable is kind of unfortunately named as it's not very specific. This line would be more immediately obvious if it was something like `if cookbooks_to_upload.any?`\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20463525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20463559", "body": "Super trivial, but this line seems to duplicate the above test.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20463559/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20605511", "body": "Trivial notes: say tempfile(s), and remove the exclamation point from the end because it's going to be after a newline anyway.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20605511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20605753", "body": "I just realized this is against another commit from another pull request....\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20605753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20818516", "body": "2014 Chef Software, Inc.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20818516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20818540", "body": "This file is missing a license header.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20818540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20819222", "body": "Is there a use case for an empty name, or should we raise/require the argument?\n\n```\nchef > foo = Chef::Org.new\n => #<Chef::Org:0x000000023a16f8 @name=\"\", @full_name=\"\", @private_key=nil, @guid=nil> \nchef > foo.create\nNoMethodError: undefined method `gsub' for nil:NilClass\n    from /home/btm/src/chef/lib/chef/http.rb:215:in `create_url'\n    from /home/btm/src/chef/lib/chef/http.rb:140:in `request'\n    from /home/btm/src/chef/lib/chef/http.rb:126:in `post'\n    from /home/btm/src/chef/lib/chef/org.rb:59:in `create'\n    from (irb):5\n    from /home/btm/src/chef/lib/chef/shell.rb:75:in `block in start'\n    from /home/btm/src/chef/lib/chef/shell.rb:74:in `catch'\n    from /home/btm/src/chef/lib/chef/shell.rb:74:in `start'\n    from bin/chef-shell:37:in `<main>'\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20819222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20819365", "body": "How do you remove a user from a group?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20819365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20820280", "body": "I wonder if we should be printing cookbook_repo.cookbook_paths here rather than reading config ourselves, since that's what's actually being iterated on above in this class. cookbook_repo is a Chef::CookbookLoader class that's initialized with config[:cookbook_path] in this class, so it should be the same thing... until it isn't.\n\nNot a big deal, just musing.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20820280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20820540", "body": "Consider something like \"Set the lockfile location, prevents multiple client processes from converging at the same time.\"\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20820540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20820634", "body": "Use the same detailed explanation as the client option.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/20820634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21483719", "body": "most of these are already in `lib/chef/win32/api/error.rb`\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21483719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21484504", "body": "you could use the shell_out mixins (Chef::Mixin::ShellOut) and save a couple lines here. There's a note in there about the difference between shell_out and shell_out!\n\n```\noutput = shell_out(cmd).stdout\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21484504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21485070", "body": "ENV['WINDIR'] ?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21485070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21485389", "body": "Could you add a comment here about why we have to shellout to secedit instead of FFI?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21485389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21632888", "body": "unmatched > :)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21632888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21632911", "body": "Chef Software, Inc. :)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21632911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21633320", "body": "https://github.com/opscode-cookbooks/windows/pull/152 indicated recently that sometimes you run as an account that does have a password, like SYSTEM, which makes me wonder if that use case is applicable here too.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21633320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21633432", "body": "I keep feeling like a bunch of this should be factored out, but no big deal now.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21633432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21719096", "body": "We do have Chef::Resource::Conditional already as chef/resource/conditional; that is, not everything in resource/ is a resource. This seems like it should go in there.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21719096/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21852815", "body": "Yeah, so I'm feeling like you factored code out of a larger grant_service_logon, but that there's a PolicyFile object lurking in here that we're likely going to want to use elsewhere some day. (not to be confused with the [Chef PolicyFile](https://github.com/opscode/chef-dk/blob/master/POLICYFILE_README.md) work).\n\nBut it could end up being a waste of time so not so important right now, you know?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21852815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21916498", "body": "I see the line above, and acknowledge it, but it seems a little redundant to have Exception in the exception name.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21916498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21916541", "body": "There's no secret whitespace in here? `str = \"\\n\\n\\n\"` ?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21916541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21916586", "body": "Chef::Util::DSC::LocalConfigurationManager::Parser.parse\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/21916586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/22000915", "body": "personally, I don't feel these lines are long enough to wrap them and they'd be easier to read as one line.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/22000915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/22001122", "body": "This might be a little stronger of a test if the regex was something like /Uploaded[\\s\\d]+Cookbooks/, although that's a bit more complex. It's just that if someone changed the message this test would still pass, so it'd be good if it were more likely we could catch that.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/22001122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "pollosp": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4660", "title": "Mount Resource for bind mounts is not idempotent", "body": "## Description\n\nMount Resource for bind mounts is not idempotent\nHere https://tickets.opscode.com/browse/CHEF-5254 is a similar bug opened with version 11.12.2 and fixed in version 11.14.0\n## Chef Version\n\n12.7.2 + Opscode server version\n## Platform Version\n\nDebian Jessie 8.3\n## Replication Case\n\nThis is the provider code.\n\n```\nmount '/mnt' do\n  device '/tmp'\n  fstype 'ext4'\n  options %w(bind rw)\n  action [:mount, :enable]\nend\n```\n\nBind mountpoints in fstab file are mounted again in every chef-run, if you run chef-client four times you are going to have the resource mounted four times.\n\nFstab file is ok just one line per mount. \n\nNow mounted binds in jessie are not displaying the word bind as in squeeze with the mount command and using cat /proc/mounts  \n## Client Output\n\n``` shell\nsudo chef-apply mount.rb\n\nRecipe: (chef-apply cookbook)::(chef-apply recipe)\n  * mount[/mnt] action mount\n    - mount /tmp to /mnt\n  * mount[/mnt] action enable\n    - enable /tmp\nvagrant:~/code$\nvagrant:~/code$ sudo chef-apply mount.rb\nRecipe: (chef-apply cookbook)::(chef-apply recipe)\n  * mount[/mnt] action mount\n    - mount /tmp to /mnt\n  * mount[/mnt] action enable (up to date)\nvagrant:~/code$ mount\n/dev/sda1 on /mnt type ext4 (rw,relatime,errors=remount-ro,data=ordered)\n/dev/sda1 on /mnt type ext4 (rw,relatime,errors=remount-ro,data=ordered)\n```\n## Stacktrace\n### NOTE: CHEF CLIENT BUGS ONLY\n\nThis issue tracker is for the code contained within this repo -- `chef-client`, base `knife` functionality (not\nplugins), `chef-apply`, `chef-solo`, `chef-client -z`, etc.\n- [Server issues](https://github.com/chef/chef-server/issues/new)\n- [ChefDK issues](https://github.com/chef/chef-dk/issues/new)\n- Cookbook Issues (see the https://github.com/chef-cookbooks repos or search [Supermarket](https://supermarket.chef.io) or GitHub/Google)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4660/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nlam79": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4647", "title": "Knife data bag create does not respect -s option", "body": "## Description\n\nUsing knife data bag create with the -s or --server-url option does not work.  However, using -s for knife roles/cookbooks/environments is okay. \n## Chef Version\n\n12.5.1 and 12.7.2\n## Platform Version\n\nUbuntu 14.04\n## Replication Case\n\n-Create a chef 12 server\n-Create a new org and admin user\n-Create a knife.rb to access this chef server using the admin user.\n-Run \"knife cookbook list -c knife.rb\" to test initial access is ok.\n-Run \"knife data bag create -c knife.rb -s https://chef12-server/organizations/test-org\nResult: data bag should be created under the chef12 server / org specified by -s.  Instead it is created under the chef-server-url specified by knife.rb.\n## Client Output\n\nN/A\n## Stacktrace\n\nN/A\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fuel-wlightning": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4632", "title": "Service silently fails to reload service if not listed in supports.", "body": "## Description\n\nWhen reloading a service that doesn't support reloading, chef appears to be reloading the service, and fails silently.\n## Chef Version\n\nchef-client version: 12.7.2\nberks version: 4.2.0\nkitchen version: 1.5.0\n## Platform Version\n\nCentOS 6.6 (init.d based script)\n## Replication Case\n\n*Utilize any init.d script (I used nginx) on RedHat.\n`\n  template \"/etc/nginx/conf.d/05_https_edge.conf\" do\n    source \"nginx_05_https_edge.conf.erb\"\n    mode \"0644\"\n    owner \"root\"\n    group \"root\"\n    notifies :reload, 'service[nginx]'\n  end\n\n  service \"nginx\" do\n    action [ :enable, :start ]\n  end\n`\n## Client Output\n\n```\n     * service[nginx] action reload\n       - reload service service[nginx]\n```\n## Stacktrace\n\nNo stacktrace.\n## Code at issue\n\nhttps://github.com/chef/chef/blob/12.7.2/lib/chef/provider/service/init.rb#L89\n\nThere is an if and elsif, need to catch the else with a warning or debug info.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "oker1": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4619", "title": "Node method_missing symbol matching incorrectly matches `:>=` into a setter like `:foo=`", "body": "## Description\n\nIf you dereference a non-existing key in node.default, and try to compare it's value with >= it writes the right side of the comparison under the key under another \">\" key.\n\nI've traced the problem back to the infix invocation of the missing_method (\">=\") on Node, supporting the accessor method way of using attributes, so the behaviour can be explained, but I think it's still a pitfall.\n## Chef Version\n\n12.5.1\n## Platform Version\n\nMac OS 10.11.3\n## Replication Case\n\nSee https://github.com/oker1/mash-problem for an example cookbook\n## Client Output\n\n```\n[2016-02-24T10:42:32+01:00] WARN: No config file found or specified on command line, using command line options.\nStarting Chef Client, version 12.5.1\n[2016-02-24T10:42:35+01:00] WARN: Run List override has been provided.\n[2016-02-24T10:42:35+01:00] WARN: Original Run List: []\n[2016-02-24T10:42:35+01:00] WARN: Overridden Run List: [recipe[example::default]]\nresolving cookbooks for run list: [\"example::default\"]\nSynchronizing Cookbooks:\n  - example (0.1.0)\nCompiling Cookbooks...\n{\">\"=>8000}\nConverging 0 resources\n[2016-02-24T10:42:35+01:00] WARN: Skipping final node save because override_runlist was given\n\nRunning handlers:\nRunning handlers complete\nChef Client finished, 0/0 resources updated in 02 seconds\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sbstnbr": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4604", "title": "Proxy config for bootstrapping should support different proxy than client.d settings", "body": "## Description\n\nWhen I run chef-client on a new node, the requests crashes: \"Chef encountered an error attempting to create the client \"node_dev_205\"\n- I can send large ping from chef client to chef server\n- I can send large POSTs from chef client to chef server\n- I tried disabling TCP Offload Engines (TOE)\n## Chef Version\n\n12.7.2\n## Platform Version\n\nRed Hat Enterprise Linux Server release 6.4\n## Replication Case\n1. Bootstrap the new node from a workstation: chef-client install OK but connection to chef-server KO.\n2. Run chef-client on node: same error\n## Client Output\n\nChef encountered an error attempting to create the client \"node_dev_205\"\n## Authentication Error:\n\nReceived an EOF on transport socket.  This almost always indicates a network\nerror external to chef-client.  Some causes include:\n- Blocking ICMP Dest Unreachable (breaking Path MTU Discovery)\n- IPsec or VPN tunnelling / TCP Encapsulation MTU issues\n- Jumbo frames configured only on one side (breaking Path MTU)\n- Jumbo frames configured on a LAN that does not support them\n- Proxies or Load Balancers breaking large POSTs\n- Broken TCP offload in network drivers/hardware\n## Stacktrace\n\nhttps://gist.github.com/sbstnbr/907cf87f86d50eedb062\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4604/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JCotton1123": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4602", "title": "Chef Solo data bag failure handling", "body": "## Description\n\nChef solo fails with an obscure error message when a data bag is missing. The error has become especially obscure in 12.7. I believe the cause of the especially poor error message in 12.7 is this:\n\nhttps://github.com/chef/chef/commit/d99e306a41b1402209d320cb7119b12a3bbb962f#diff-143e680ed6057de0f7066c7b539a7d28R128\n\nI am happy to submit a patch. Does it make sense to refactor [this](https://github.com/chef/chef/blob/master/lib/chef/data_bag.rb#L120), and verify that at least one file was found, and throw an appropriate exception if not?\n## Chef Version\n\nChef Solo, 12\n## Platform Version\n\nUbuntu 14.04\n\nChef Solo\n## Replication Case\n\n``` ruby\ndata_bag_item('doesnotexist', 'secrets')\n```\n## Client Output\n\nIn 12.7, \n\n```\nNoMethodError\n-------------\nundefined method `delete' for nil:NilClass\n```\n\nPrior to 12.7, \n\n```\nChef::Exceptions::ValidationFailed\n----------------------------------\nData Bag Items must contain a Hash or Mash!\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ChrisAWalker": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4597", "title": "'cluster' chef helper does not work", "body": "## Description\n\nWithin my recipe, I run this code:\n\n```\nrequire 'chef/win32/version'\nthisnode = Chef::ReservedNames::Win32::Version.new\n\nif thisnode.cluster?\n  puts \"this is a cluster - YES\"\nelse\n  puts \"This is not a cluster - NO\"\nend\n\nif thisnode.windows_server_2012_r2?\n  puts \"this is windows 2012r2!!!!!!\"\nelse\n  puts \"this is NOT windows 2012r2<<<<<<\"\nend\n```\n\nThe node IS a cluster and is operating normally.  My chef run correctly identifies the node's OS version (windows_server_2012_r2); however, it does not identify it as a cluster (responds with 'This is not a cluster - NO').\n\nhttps://docs.chef.io/dsl_recipe.html\n## Chef Version\n\nChef Version 12.6.0\n## Platform Version\n\nWindows Server 2012r2 full GUI (not Core, but will eventually be run as Core)\n## Replication Case\n\nVery simple - create cluster node with the correct OS version, then run this basic recipe.  It incorrectly handles the cluster helper.  There is _no_ error.  The helper is not properly identifying the capability.\n## Stacktrace\n\nNo stacktrace.out is available from this output.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "failshell": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4596", "title": "Chef doesn't fail if a resource's required properties is missing", "body": "## Description\n\nI'm writing a new resource in which i defined required properties. When using the resource and omitting the required attributes, Chef happily continues its run without failing. I would expect it to fail.\n## Chef Version\n\nI tested with 12.5.1 and 12.7.2.\n## Platform Version\n\nCentos 7.1\n## Replication Case\n\nHere's the resource file:\n\n``` text\nresource_name :rundeck_user\n\nproperty :password, String, required: true\nproperty :roles, Array, required: true\n\naction :create do\n  puts 'foo'\nend\n```\n\nAnd how it's called inside another cookbook:\n\n``` text\nrundeck_user 'test'\n```\n## Stacktrace\n\nAs seen https://gist.github.com/failshell/17553f8b90287f5a6da8, if i raise then I get the expected result.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jeremiahsnapp": {"issues": [{"url": "https://api.github.com/repos/chef/chef/issues/4595", "title": "Cron resource breaks if crontab has non-UTF-8 characters in it", "body": "## Description\n\nThe `cron` resource breaks with `ArgumentError: invalid byte sequence in UTF-8` if the user's crontab has non-UTF-8 characters in it.\n## Chef Version\n\n12.7.2\n## Platform Version\n\nUbuntu 14.04\nCentos 6.6\n## Replication Case\n\n.kitchen.yml contents\n\n```\n\n---\ndriver:\n  name: vagrant\n  require_chef_omnibus: '12.7.2'\n\nprovisioner:\n  name: chef_zero\n\nplatforms:\n  - name: ubuntu-14.04\n  - name: centos-6.6\n\nsuites:\n  - name: default\n    run_list:\n      - recipe[cron_utf-8::default]\n```\n\ncron_utf-8::default recipe contents\n\n```\ncron 'noop-1' do\n  hour '5'\n  minute '0'\n  command '/bin/true'\nend\n\ncase node['platform_family']\nwhen \"rhel\"\n  cron_file = \"/var/spool/cron/root\"\nwhen \"debian\"\n  cron_file = \"/var/spool/cron/crontabs/root\"\nend\n\nruby_block 'Append bad character' do\n  block do\n    IO.write(cron_file, \"# \\xC2\\n\", mode: 'a')\n  end\nend\n\ncron 'noop-2' do\n  hour '5'\n  minute '0'\n  command '/bin/true'\nend\n```\n## Client Output\n\n```\n$ kitchen converge ubuntu\n-----> Starting Kitchen (v1.5.0)\n/opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/httpclient-2.6.0.1/lib/httpclient/webagent-cookie.rb:458: warning: already initialized constant HTTPClient::CookieManager\n/opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/httpclient-2.6.0.1/lib/httpclient/cookie.rb:8: warning: previous definition of CookieManager was here\n-----> Converging <default-ubuntu-1404>...\n       Preparing files for transfer\n       Preparing dna.json\n       Resolving cookbook dependencies with Berkshelf 4.0.1...\n       Removing non-cookbook files before transfer\n       Preparing validation.pem\n       Preparing client.rb\n-----> Chef Omnibus installation detected (12.7.2)\n       Transferring files to <default-ubuntu-1404>\n       Starting Chef Client, version 12.7.2\n       resolving cookbooks for run list: [\"cron_utf-8::default\"]\n       Synchronizing Cookbooks:\n         - cron (1.6.1)\n         - cron_utf-8 (0.1.0)\n         - logrotate (1.9.2)\n         - windows (1.39.1)\n         - chef-client (4.3.1)\n         - chef_handler (1.2.0)\n       Compiling Cookbooks...\n       Converging 3 resources\n       Recipe: cron_utf-8::default\n         * cron[noop-1] action create\n           - add crontab entry for cron[noop-1]\n         * ruby_block[Append bad character] action run\n           - execute the ruby block Append bad character\n         * cron[noop-2] action create\n\n           ================================================================================\n           Error executing action `create` on resource 'cron[noop-2]'\n           ================================================================================\n\n           ArgumentError\n           -------------\n           invalid byte sequence in UTF-8\n\n           Resource Declaration:\n           ---------------------\n           # In /tmp/kitchen/cache/cookbooks/cron_utf-8/recipes/default.rb\n\n            26: cron 'noop-2' do\n            27:   hour '5'\n            28:   minute '0'\n            29:   command '/bin/true'\n            30: end\n\n           Compiled Resource:\n           ------------------\n           # Declared in /tmp/kitchen/cache/cookbooks/cron_utf-8/recipes/default.rb:26:in `from_file'\n\n           cron(\"noop-2\") do\n             action [:create]\n             retries 0\n             retry_delay 2\n             default_guard_interpreter :default\n             minute \"0\"\n             hour \"5\"\n             day \"*\"\n             month \"*\"\n             weekday \"*\"\n             command \"/bin/true\"\n             user \"root\"\n             declared_type :cron\n             cookbook_name \"cron_utf-8\"\n             recipe_name \"default\"\n           end\n\n\n       Running handlers:\n       [2016-02-18T14:27:35+00:00] ERROR: Running exception handlers\n       Running handlers complete\n       [2016-02-18T14:27:35+00:00] ERROR: Exception handlers complete\n       Chef Client failed. 2 resources updated in 02 seconds\n       [2016-02-18T14:27:35+00:00] FATAL: Stacktrace dumped to /tmp/kitchen/cache/chef-stacktrace.out\n       [2016-02-18T14:27:35+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report\n       [2016-02-18T14:27:35+00:00] ERROR: cron[noop-2] (cron_utf-8::default line 26) had an error: ArgumentError: invalid byte sequence in UTF-8\n       [2016-02-18T14:27:37+00:00] FATAL: Chef::Exceptions::ChildConvergeError: Chef run process exited unsuccessfully (exit code 1)\n>>>>>> Converge failed on instance <default-ubuntu-1404>.\n>>>>>> Please see .kitchen/logs/default-ubuntu-1404.log for more details\n>>>>>> ------Exception-------\n>>>>>> Class: Kitchen::ActionFailed\n>>>>>> Message: SSH exited (1) for command: [sh -c '\n\nsudo -E /opt/chef/bin/chef-client --local-mode --config /tmp/kitchen/client.rb --log_level warn --force-formatter --no-color --json-attributes /tmp/kitchen/dna.json --chef-zero-port 8889\n']\n>>>>>> ----------------------\nzlib(finalizer): the stream was freed prematurely.\n```\n## Stacktrace\n\n```\nGenerated at 2016-02-18 14:12:08 +0000\nArgumentError: cron[noop-1] (cron_utf-8::default line 7) had an error: ArgumentError: invalid byte sequence in UTF-8\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/provider/cron.rb:63:in `==='\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/provider/cron.rb:63:in `block in load_current_resource'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/provider/cron.rb:56:in `each_line'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/provider/cron.rb:56:in `load_current_resource'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/provider.rb:127:in `run_action'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/resource.rb:596:in `run_action'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/runner.rb:73:in `run_action'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/runner.rb:105:in `block (2 levels) in converge'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/runner.rb:105:in `each'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/runner.rb:105:in `block in converge'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/resource_collection/resource_list.rb:83:in `block in execute_each_resource'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/resource_collection/stepable_iterator.rb:116:in `call'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/resource_collection/stepable_iterator.rb:116:in `call_iterator_block'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/resource_collection/stepable_iterator.rb:104:in `iterate'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/resource_collection/resource_list.rb:81:in `execute_each_resource'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/runner.rb:104:in `converge'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/client.rb:668:in `block in converge'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/client.rb:663:in `catch'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/client.rb:663:in `converge'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/client.rb:702:in `converge_and_save'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/client.rb:280:in `run'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/application.rb:270:in `block in fork_chef_client'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/application.rb:258:in `fork'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/application.rb:258:in `fork_chef_client'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/application.rb:223:in `block in run_chef_client'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/local_mode.rb:44:in `with_server_connectivity'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/application.rb:211:in `run_chef_client'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/application/client.rb:433:in `block in interval_run_chef_client'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/application/client.rb:423:in `loop'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/application/client.rb:423:in `interval_run_chef_client'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/application/client.rb:412:in `run_application'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/lib/chef/application.rb:58:in `run'\n/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.7.2/bin/chef-client:26:in `<top (required)>'\n/opt/chef/bin/chef-client:50:in `load'\n/opt/chef/bin/chef-client:50:in `<main>'\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/4595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chef-ci": {"issues": [], "commits": [{"url": "https://api.github.com/repos/chef/chef/commits/9eb78fa2d0edb9366fc2bc34f9ec3954fda48261", "message": "Bump version to 14.0.15 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/da15ad4803c68dd4e97d7c486e12230892f99e82", "message": "Bump version to 14.0.14 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/9439fd6e5da8d87f48ebc1b6de4b7c09c8654c39", "message": "Bump version to 14.0.13 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/dbfcc7b06b73a5414cec480998331d718cb10540", "message": "Bump version to 14.0.12 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/e19256f6f85c960ec769fd5cadebff9114c40090", "message": "Bump version to 14.0.11 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/ee7cba011d45c23c7afcda1299749d0540210178", "message": "Bump version to 14.0.10 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/e974af2d562f3b8be6a7061e6fd36c2066829364", "message": "Bump version to 14.0.9 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/32a49bda660bbcf2f4c4455e0d243ac69a5733bb", "message": "Bump version to 14.0.8 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/b3ebf7a0cd6df0c899e7547b3c331f2ece7918b5", "message": "Bump version to 14.0.7 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/fc84ad29bf1a365e343b5bb3d4206663269420cc", "message": "Bump version to 14.0.6 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/b356460e1affea08d0fac0dde18b57bdbb01b508", "message": "Bump version to 14.0.5 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/84fb46aeb7e6c457665dc4bf5ac5719b4f5eefd5", "message": "Bump version to 14.0.4 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/fcaba3838f883e2855087be75b6a68ec08cd3aff", "message": "Bump version to 14.0.3 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/eb8e9dfa53290acb6717d096e97e91c15db7e004", "message": "Bump version to 14.0.2 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/fe742b5ce5f35f16e186c3d2670d173548642b6c", "message": "Bump version to 14.0.1 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/3b6800b84eeb7bd8f84a748ac6734104fdac04b4", "message": "Bump version to 13.7.16 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/9024df6d5d7162787a42efb7fa1c482299773985", "message": "Bump version to 13.7.15 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/927e4a938f9178f2cb8cc5c336038ed3d58e3194", "message": "Bump version to 13.7.14 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/805b26bba37356c1f62518c950e54ab610920a54", "message": "Bump version to 13.7.13 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/b12f3cc1e899006ac01bfef9348b89e19ab5027c", "message": "Bump version to 13.7.12 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/e32be48e2ddd4bef2bad482687264f7cd8567b68", "message": "Bump version to 13.7.11 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/fcd8d778baeeb990a64fe9042164bbd3e1dd5269", "message": "Bump version to 13.7.10 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/f514e4c853738cbf3dae8927a31197cc6e8f47bb", "message": "Bump version to 13.7.9 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/d4d5de35d4e05a2c7d68c973d8f7ef4a1748e813", "message": "Bump version to 13.7.8 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/2f1e097d0516b968fac4fe6bed790b88414f282c", "message": "Bump version to 13.7.7 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/6962aed89f88ede2503f7e171308e0f0d006ba89", "message": "Bump version to 13.7.6 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/21155f73467969da3b36a35b146100d1a04b0cdf", "message": "Bump version to 13.7.5 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/c6433605bae0a9f52c843ca8cb97e64b2bcf5f0a", "message": "Bump version to 13.7.4 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/5efb3f2ada9718b8c1f72cd6c4703b972491f6cd", "message": "Bump version to 13.7.3 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/33b97469bf0d1ab93392d8bd83cfb50f1a46eb4f", "message": "Bump version to 13.7.2 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/19ea1bd1e6f01d28b29d3cccbfb7388ea5aff030", "message": "Bump version to 13.7.1 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/c4b81c8e2951067d7458c16343d3ea036c864fb6", "message": "Bump version to 13.6.57 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/78b9d02e7df8e5ed596b31fb18dd56de0bc212c8", "message": "Bump version to 13.6.56 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/bfe8487a26f99d3cd3e08fffea8cf6457631cf69", "message": "Bump version to 13.6.55 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/f964b99bffc2a7b3dab04ae5de80583bae492351", "message": "Bump version to 13.6.54 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/37bacbbc9d6ca124af631acf72109a992b255e6a", "message": "Bump version to 13.6.53 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/e33d435fffdd30167fed9b7b98e05d3e05988f91", "message": "Bump version to 13.6.52 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/c908db8ed1e3989e9fb81d22fda206839975a0f6", "message": "Bump version to 13.6.51 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/f0d732cd6df9126bede1e822016c23d99d178165", "message": "Bump version to 13.6.50 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/d454fdd7304101f0bce60070343ca51aa513d91b", "message": "Bump version to 13.6.49 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/b97167a9acadef2c0122605f98c44bb2d6a00549", "message": "Update CHANGELOG.md with details from pull request #6696"}, {"url": "https://api.github.com/repos/chef/chef/commits/04d5cdb9bac717d9682707d0ffc65aaf3a7c591e", "message": "Update CHANGELOG.md with details from pull request #6692"}, {"url": "https://api.github.com/repos/chef/chef/commits/550132f4a37297d9b2b99dcf41ea9298506366ed", "message": "Bump version to 13.6.48 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/fc813e21f253d5278cb42710874a34cfebfcc8ca", "message": "Bump version to 13.6.47 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/1acb731686fb94f77e1c6cda49c3897b851b358a", "message": "Bump version to 13.6.46 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/2a78bd532304dfe3fd297cbe1aefdab95502a192", "message": "Bump version to 13.6.45 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/f61f8bb75fcc0ba934b688c34f8d018bfcb3ca81", "message": "Bump version to 13.6.44 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/8a9b960ed4e09cae79cef43abfdcc86b81b2040e", "message": "Bump version to 13.6.43 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/abdfb00bac4cf6c920462afe8dd3d6f86ad5d974", "message": "Bump version to 13.6.42 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/eccc48d63e3bc99d161ad6ca48f7770fcd2b9b59", "message": "Bump version to 13.6.41 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/e6ee17e5e346e0f7df67d8ee04130b9dd9c49a84", "message": "Bump version to 13.6.40 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/10252cc8f4f855d5de65efb645583f89bf8771f2", "message": "Bump version to 13.6.39 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/731a3a82fe95324f5f9eb9791ef8d2ad54b52beb", "message": "Bump version to 13.6.38 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/fb4913be23137bfc03a896a824fdb99ae0eb2519", "message": "Bump version to 13.6.37 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/8c4a29b8055eaa4326c1e6b25118bbcd053cbe8c", "message": "Bump version to 13.6.36 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/adfaadb7e203e5b8f24b2d7db20c3deae7cfa9eb", "message": "Bump version to 13.6.35 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/2ed7c7be81b930e99affb139f1854309d55fabb5", "message": "Bump version to 13.6.34 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/b40007342ba57eaf49cba75b6f134429bdfa68b6", "message": "Bump version to 13.6.33 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/72aa31170d09af49405c259434e32e7b1ce7acfa", "message": "Bump version to 13.6.32 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/35eac8934a51d86bf9e12131b40148642d0b06cf", "message": "Bump version to 13.6.31 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/8c923eee2f43bbd48ffc8f8137c369e5c3661a2b", "message": "Bump version to 13.6.30 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/bcdb1efcb33c580c89a96b50688d6872741ed7ae", "message": "Bump version to 13.6.29 by Expeditor"}, {"url": "https://api.github.com/repos/chef/chef/commits/4bc59c09c517cdfae44de0be57356df5318d7441", "message": "Bump version to 13.6.28 by Expeditor"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tduffield": {"issues": [], "commits": [{"url": "https://api.github.com/repos/chef/chef/commits/5ae87e1f2a7872e82ef36e8671b88c1223a7bb1b", "message": "Update Dockerfile to use RHEL6 build\n\nRHEL5 has been EOL and builds are no longer being produced. Move the\nDockerfile to use RHEL6.\n\nSigned-off-by: Tom Duffield <tom@chef.io>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "scotthain": {"issues": [], "commits": [{"url": "https://api.github.com/repos/chef/chef/commits/633c4fbd829ca9ecea4b06a7e288da1444cc6d60", "message": "Force deletion of tmpdir with sudo\n\nThis makes sure we don't fail on the very slim chance that an OS generated file (lookin' at you, AIX) ends up in this directory and blocks deletion.\n\nSigned-off-by: Scott Hain <shain@chef.io>"}, {"url": "https://api.github.com/repos/chef/chef/commits/ace946260f63d218462a981831453f76021902c7", "message": "Move git and docker setup top cookbook tests to travis.\n\nSigned-off-by: Scott Hain <shain@chef.io>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/6713271", "body": "@srentus does shellescape work in ruby 1.8.7? I'll take a peek in a few. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6713271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "dheerajd-msys": {"issues": [], "commits": [{"url": "https://api.github.com/repos/chef/chef/commits/6cac5affe524a2fc481a944bebef4135a16a34b7", "message": "fixed functional test\n\nSigned-off-by: dheerajd-msys <dheeraj.dubey@msystechnologies.com>"}, {"url": "https://api.github.com/repos/chef/chef/commits/43af2a218fd0ee0f3ead28c80def7acc46acbed6", "message": "Fix style error\n\nSigned-off-by: dheerajd-msys <dheeraj.dubey@msystechnologies.com>"}, {"url": "https://api.github.com/repos/chef/chef/commits/7e0b00834bb4a866bdb4de01fc12a2cba55b6cbb", "message": "Fix rspecs\n\nSigned-off-by: dheerajd-msys <dheeraj.dubey@msystechnologies.com>"}, {"url": "https://api.github.com/repos/chef/chef/commits/0f71e2d0a67357fa069607dd3ef3554e436bf646", "message": "fix validation for idle_time\n\nSigned-off-by: dheerajd-msys <dheeraj.dubey@msystechnologies.com>"}], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6360", "title": "[MSYS-647]array support for chocolatey_package for Artifactory repo", "body": "### Description\r\n\r\nchocolatey_package installs packages in array for Artifactory server as source repo.\r\n\r\n\r\n\r\n\r\n\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zanecodes": {"issues": [], "commits": [{"url": "https://api.github.com/repos/chef/chef/commits/b46ae663ddf0277c88dea188bffbadb5c4e2fabb", "message": "Change single quotes to double quotes to appease the Style Gods\n\nSigned-off-by: Zane Geiger <zane.geiger@relativity.com>"}, {"url": "https://api.github.com/repos/chef/chef/commits/18756f5ca30fcef03286dafe096e9c3135760683", "message": "Prevent knife search --id-only from outputting IDs in the same format as an empty hash\n\nSigned-off-by: Zane Geiger <zane.geiger@relativity.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cramaechi": {"issues": [], "commits": [{"url": "https://api.github.com/repos/chef/chef/commits/31925d596972691a127d2441d124afe6667fe755", "message": "Fix Indentation\n\nSigned-off-by: Chibuikem Amaechi <cramaechi@me.com>"}, {"url": "https://api.github.com/repos/chef/chef/commits/a1c2fa3d3f64d85e16ce45f66c3d1f8b516799ce", "message": "Fix knife status to show seconds when needed #5055\n\nWhen a node.save operation is executed and a \"knife status\" is\nimmediately executed I get \"xx minutes\" instead of \"xx seconds\".\n\nThe code behind 'knife status' isn't designed to have the ability to\nformat the time difference in seconds.\n\nTo remediate issue, make sure there is a condition in place to format\nthe time difference in seconds when appropriate.\n\nSigned-off-by: Chibuikem Amaechi <cramaechi@me.com>"}], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6756", "title": "Update error handling for \"knife status\" #3287", "body": "### Description\r\n\r\nIf a node object's ohai_time value is \"nil\" then the calculated\r\ntime-since-last-run value is incorrect because the \"nil\" gets converted\r\nto integer \"0\".\r\n\r\n\"knife status\" should signal an error when a node's ohai_time value\r\nis nil.\r\n\r\nSigned-off-by: Chibuikem Amaechi <cramaechi@me.com>\r\n\r\n### Issues Resolved\r\n\r\nNo preexisting issue(s)\r\n\r\n### Check List\r\n\r\n- [ ] New functionality includes tests\r\n- [ ] All tests pass\r\n- [ ] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [ ] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "get9": {"issues": [], "commits": [{"url": "https://api.github.com/repos/chef/chef/commits/d9a69df03137753d5948a28a0bc9a2493dd8b89c", "message": "Fix dscl group provider gid_used? (#6703)\n\nUse dscl search verb in gid_used?\r\n\r\n`dscl` has a search verb which makes checking whether a gid is\r\ncurrently used much easier than parsing string output of listing all\r\ngids.\r\n\r\nSigned-off-by: Sean Karlage <skarlage@fb.com>"}, {"url": "https://api.github.com/repos/chef/chef/commits/3f54ed4ddfc6f394906cc160ebff2e41448fbd4e", "message": "Check for set home property before file existence (fixes #5777)\n\nSigned-off-by: Sean Karlage <skarlage@fb.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Vasu1105": {"issues": [], "commits": [{"url": "https://api.github.com/repos/chef/chef/commits/1a7fe48b1158a04ce354416d27fc70d81c82b670", "message": "Fixed review comments.\n\nSigned-off-by: Vasu1105 <vasundhara.jagdale@msystechnologies.com>"}, {"url": "https://api.github.com/repos/chef/chef/commits/84896c4e274d844356247d448b4d4c3fd2e1db61", "message": "Fixed chefstyle issue\n\nSigned-off-by: Vasu1105 <vasundhara.jagdale@msystechnologies.com>"}, {"url": "https://api.github.com/repos/chef/chef/commits/dba1aa7fd9e8358abea5e1dcd26e2430645d5c8b", "message": "Fixed chefstyle issues\n\nSigned-off-by: Vasu1105 <vasundhara.jagdale@msystechnologies.com>"}, {"url": "https://api.github.com/repos/chef/chef/commits/aefec12e4657657b1227af0be373c1644cddbe1e", "message": "Added new specs and updated code to handle more scenarios\n\nSigned-off-by: Vasu1105 <vasundhara.jagdale@msystechnologies.com>"}, {"url": "https://api.github.com/repos/chef/chef/commits/7fd821058fb94d708e8f2fdc95b26823c1ef92b2", "message": "chef#6638 fixed random_delay and execution_time_limit property not idempotent for windows_task resource\n\nSigned-off-by: Vasu1105 <vasundhara.jagdale@msystechnologies.com>"}, {"url": "https://api.github.com/repos/chef/chef/commits/4da3e139ccce5ca9813ec2900109cf3cee3b130d", "message": "[MSYS-725] [chef#6073] allow forcing senistive to false on execute and batch resource\n\nSigned-off-by: Vasu1105 <vasundhara.jagdale@msystechnologies.com>"}, {"url": "https://api.github.com/repos/chef/chef/commits/8802455211fbdcd91ff51357303321c46f98322e", "message": "Removed pry statement\n\nSigned-off-by: Vasu1105 <vasundhara.jagdale@msystechnologies.com>"}, {"url": "https://api.github.com/repos/chef/chef/commits/e228bdf9fa5340dfd03c29243448c2ec5fc8d176", "message": "[MSYS-731] Fix for [chef] windows_task resource isn't idempotent for any command\n\nSigned-off-by: Vasu1105 <vasundhara.jagdale@msystechnologies.com>"}], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6343", "title": "[MSYS-646]Working on fix for minimum package versioning bug", "body": "In progress\r\n\r\n### Description\r\nWhen running \r\npackage 'binutils >= 2.20.51.0.2-5.11' \r\n\r\nchef client fails with exception \r\n`installed package binutils-2.23.52.0.1-55.el7 is newer than candidate package binutils-2.23.52.0.1-30.el7_1.2`\r\n\r\nThough 2.23.52.0.1-55.el7 being the latest version on the system, client run is trying to update it to version 2.23.52.0.1-30.el7_1.2 lower than currently installed 2.23.52.0.1-55.el7.\r\n### Issues Resolved\r\n\r\nhttps://getchef.zendesk.com/agent/#/tickets/15964\r\n\r\n### Check List\r\n\r\n- [ ] New functionality includes tests\r\n- [ ] All tests pass\r\n- [ ] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [ ] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "adamleff": {"issues": [], "commits": [{"url": "https://api.github.com/repos/chef/chef/commits/8ea126ae0b1fe04df94724f791d47aa75b9dcce1", "message": "Bump deps to pick up InSpec v1.49.2\n\nSigned-off-by: Adam Leff <adam@leff.co>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vinsonlee": {"issues": [], "commits": [{"url": "https://api.github.com/repos/chef/chef/commits/5320cbf9b41789a46a5c5c0a2d818966c9716405", "message": "Remove update-rc.d -n (dryrun) option.\n\ninit-system-helpers 1.50 removed the broken -n (dryrun) option.\n\nhttps://anonscm.debian.org/git/collab-maint/init-system-helpers.git/commit/?id=e0d3d2261c91c5d3dd8a980fcc5244b3b6ce8158\n\nSigned-off-by: Vinson Lee <vlee@freedesktop.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "TheLunaticScripter": {"issues": [], "commits": [{"url": "https://api.github.com/repos/chef/chef/commits/f381504a00fa65e609ca4942483881a0aea2416a", "message": "Fix issue with Powershell function buffer\n\nIssue Fixed:\n\nhttps://github.com/chef/chef-dk/issues/1236\n\nSigned-off-by: John Snow <thelunaticscripter@outlook.com>"}], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6203", "title": "Suppress nested causes for sensitive exceptions", "body": "This will prevent sensitive data from leaking into debug_stacktrace output.\r\n\r\nSigned-off-by: John Snow <thelunaticscripter@outlook.com>\r\n\r\n### Description\r\n\r\nThis will prevent sensitive data from leaking into debug_stacktrace output.\r\n\r\n### Issues Resolved\r\n\r\n#3903\r\n#3813\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aespinosa": {"issues": [], "commits": [{"url": "https://api.github.com/repos/chef/chef/commits/9f02a591acb6eeb99712c4c24beb653ddd528a5f", "message": "Update the client.d stub\n\nSigned-off-by: Allan Espinosa <aespinosa33@bloomberg.net>"}, {"url": "https://api.github.com/repos/chef/chef/commits/8014cf573c48e1e7f08d85c0420666443d6da2f8", "message": "Escape single-quoted strings from the context\n\nFixes #6680\n\nSigned-off-by: Allan Espinosa <aespinosa33@bloomberg.net>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jasonwbarnett": {"issues": [], "commits": [{"url": "https://api.github.com/repos/chef/chef/commits/254945563e90311f56563f042639d3e72cc8176c", "message": "Remove unused chef_server_fqdn argument: run_status\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the\n    best of my knowledge, is covered under an appropriate open\n    source license and I have the right under that license to\n    submit that work with modifications, whether created in whole\n    or in part by me, under the same open source license (unless\n    I am permitted to submit under a different license), as\n    Indicated in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including\n    all personal information I submit with it, including my\n    sign-off) is maintained indefinitely and may be redistributed\n    consistent with this project or the open source license(s)\n    involved.\n\nSigned-off-by: Jason Barnett <jason.w.barnett@gmail.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "schisamo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/chef/chef/commits/b982aceadf396d8749a56cb010413e133b5c76f1", "message": "Update CODEOWNERS file\n\nSigned-off-by: Seth Chisamore <schisamo@chef.io>"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/708219", "body": "This should probably be configurable via chef/knife.rb also (saves typing!).  Take a look at what I did for ssh_port:\nhttps://github.com/schisamo/chef/blob/CHEF-1768/chef/lib/chef/knife/bootstrap.rb#L46\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/708219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/946090", "body": "I would still like to see `fqdn` in addition to `ipaddress`.  it is useful in some situations where ipaddress isn't.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/946090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/352147", "body": "For consistency should this be in the `:knife` namespace?  ie:\n\n```\n:proc => lambda { |v| Chef::Config[:knife][:bootstrap_version] = v }\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/352147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/794720", "body": "This is Ruby 1.8 only....we need to this:\n\n```\nplatforms :mswin_18, :mingw_18 do\n  gem \"win32-open3\", \"0.3.2\"\nend\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/794720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/808254", "body": "I actually added this change to make this spec pass on Windows!  If you don't set the file to binmode the checksum compare down in `Chef::Provider::CookookFile` gets all screwed up as CRLF are added at the end of lines written in the Tempfile.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/808254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/894982", "body": "We probably need to add the `:provides` using the [new resource provides dsl](https://github.com/opscode/chef/blob/master/chef/lib/chef/resource.rb#L601-635):\n\n```\nprovides :chef_gem, :on_platforms => :all\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/894982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/903139", "body": "There shouldn't be any issues on a subclass of another resource.  Take a look at any of the children of `Chef::Resource::File` or `Chef::Resource::Directory`.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/903139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/4822142", "body": "Maybe:\n\n``` ruby\nplatform_sym = case platform\nwhen Symbol\n  platform\nwhen String\n  platform.downcase!\n  platform.gsub!(/\\s/, \"_\")\n  platform.to_sym\nelse\n  platform.to_s.to_sym\nend\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/4822142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "sandratiffin": {"issues": [], "commits": [{"url": "https://api.github.com/repos/chef/chef/commits/b3af979455390e45e7298a0542b670fb35a9a6cc", "message": "fix for data bag names partially matching search reserved words\n\nSigned-off-by: Sandra Tiffin <sandi.tiffin@gmail.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "NAshwini": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6761", "title": "Added idempotent checks to windows_task_spec", "body": "Signed-off-by: NAshwini <ashwini.nehate@msystechnologies.com>\r\n\r\n### Description\r\n\r\nAdded idempotent checks to windows_task_spec", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "piyushawasthi": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6656", "title": "[MSYS-727] Added support for setting node policy name and group from knife", "body": "Signed-off-by: piyushawasthi <piyush.awasthi@msystechnologies.com>\r\n\r\n### Description\r\nAdded support for setting node policy name and group from knife.\r\n\r\n### Command\r\nknife node policy set  NODE --policy-name POLICY_NAME --policy-group POLICY_GROUP\r\n\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/pulls/6603", "title": "[MSYS-722] Fixes of Knife search not working with forward slash.", "body": "**Knife search not working with forward slash**\r\n**Pass:**\r\n```\r\nknife search node 'stack_id:arn\\:aws\\:cloudformation\\:eu-west-1\\:569478613970\\:stack//*'\r\nknife search node 'stack_id:arn\\:aws\\:cloudformation\\:eu-west-1\\:569478613970\\:stack/*'\r\n```\r\n```\r\n$ bundle exec knife search node 'stack_id:arn\\:aws\\:cloudformation\\:eu-west-1\\:569478613970\\:stack//*'\r\n2 items found\r\n\r\nNode Name:   ammy-cnt\r\nEnvironment: _default\r\nFQDN:        ammy-cnt.ammy-cnt.d7.internal.cloudapp.net\r\nIP:          10.158.218.44\r\nRun List:    \r\nRoles:       \r\nRecipes:     \r\nPlatform:    centos 7.1.1503\r\nTags:        \r\n\r\nNode Name:   msys\r\nEnvironment: _default\r\nFQDN:        msys-Lenovo-E41-80\r\nIP:          192.168.101.66\r\nRun List:    recipe[cache_replication_group]\r\nRoles:       \r\nRecipes:     cache_replication_group, cache_replication_group::default\r\nPlatform:    ubuntu 16.04\r\nTags:        \r\n\r\n$ bundle exec knife search node 'stack_id:arn\\:aws\\:cloudformation\\:eu-west-1\\:569478613970\\:stack/*'\r\n2 items found\r\n\r\nNode Name:   ammy-cnt\r\nEnvironment: _default\r\nFQDN:        ammy-cnt.ammy-cnt.d7.internal.cloudapp.net\r\nIP:          10.158.218.44\r\nRun List:    \r\nRoles:       \r\nRecipes:     \r\nPlatform:    centos 7.1.1503\r\nTags:        \r\n\r\nNode Name:   msys\r\nEnvironment: _default\r\nFQDN:        msys-Lenovo-E41-80\r\nIP:          192.168.101.66\r\nRun List:    recipe[cache_replication_group]\r\nRoles:       \r\nRecipes:     cache_replication_group, cache_replication_group::default\r\nPlatform:    ubuntu 16.04\r\nTags:        \r\n```\r\n\r\nSigned-off-by: piyushawasthi <piyush.awasthi@msystechnologies.com>\r\n\r\n### Description\r\n\r\n[Please describe what this change achieves]\r\n\r\n### Issues Resolved\r\n\r\n[List any existing issues this PR resolves, or any Discourse or\r\nStackOverflow discussion that's relevant]\r\n\r\n### Check List\r\n\r\n- [ ] New functionality includes tests\r\n- [ ] All tests pass\r\n- [ ] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [ ] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "harikesh-kolekar": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6612", "title": "[MSYS-726] Allow setting environment variables at the user level", "body": "### Description\r\nThe `env` resource allows you to set a system environment variable, but windows also allow per-user environment variables.\r\n\r\nhttps://blogs.technet.microsoft.com/heyscriptingguy/2005/03/18/how-can-i-create-an-environment-variable-using-a-script/\r\n\r\nIt looks like we could simply add a user property and pass it in obj.username in the existing provider instead of \"<System>\".\r\n\r\nAcceptance criteria:\r\n- User property for env resource\r\n\r\n\r\n\r\n### Check List\r\n\r\n- [x] New functionality includes tests\r\n- [x] All tests pass\r\n- [ ] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [x] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/pulls/5908", "title": "add missing functional tests for users", "body": "Signed-off-by: MSys <harikesh.kolekar@msystechnologies.com>\r\n\r\n### [Do Not Merge] Add missing functional tests for users if applicable\r\n\r\nhttps://github.com/chef/chef/blob/master/spec/functional/win32/security_spec.rb#L33\r\nI'm fairly certain that the mixlib-shellout user code works now, we were just talking about using it with powershell_out. If so, we create the necessary functional tests here.\r\n\r\n\r\n### Check List\r\n\r\n- [x] New functionality includes tests\r\n- [ ] All tests pass\r\n- [ ] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [x] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rhass": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6550", "title": "Fix cookbook gem installer (Backport to Chef 12)", "body": "Current gem installer does not work if multiple cookbook request the\r\nsame gem. The solution is to merge all the gem requirements for the same\r\ngem.\r\n\r\nIf multiple cookbooks have conflicting constraints, the install will\r\nfail anyway.\r\n\r\nThis bug affects Chef 12 too and make the feature almost unusable.\r\n\r\nChange-Id: I73bdb3db94052dadc4bac7bf03f74db8c420aad5\r\nSigned-off-by: Maxime Brugidou <m.brugidou@criteo.com>\r\n\r\n### Description\r\n\r\n[Please describe what this change achieves]\r\n\r\n### Issues Resolved\r\n\r\n[List any existing issues this PR resolves, or any Discourse or\r\nStackOverflow discussion that's relevant]\r\n\r\n### Check List\r\n\r\n- [ ] New functionality includes tests\r\n- [ ] All tests pass\r\n- [ ] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [ ] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>\r\n", "author_association": "OWNER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "erikparra": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6514", "title": "Added Flag to distinguish between gateway and host key to fix issue #6210", "body": "Signed-off-by: Erik <Erik.Parra4@gmail.com>\r\n\r\n### Description\r\n\r\nWhen using option --ssh-gateway-identity and -ssh-identity, both with be utilized by the session_options definition.\r\n\r\n### Issues Resolved\r\n\r\n[Issue #6210 ](https://github.com/chef/chef/issues/6210) Resolves the issue of --ssh-gateway-identity being used for both gateway and target node.\r\n\r\n### Check List\r\n\r\n- [X] New functionality includes tests\r\n- [X] All tests pass\r\n- [X] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [X] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "shoekstra": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6496", "title": "Add sensitive to registry_key (fixes #5695)", "body": "### Description\r\n\r\nThis PR adds the `sensitive` property to `registry_key` but needs some help before it's ready to be merged.\r\n\r\nI'm not sure if the `sensitive: true` sets the `values` property to default to sensitive or if when `sensitive` is true on the resource, `values` will be masked.\r\n\r\nRe tests, looking at the `execute` resource it looks like I should be copying across something like below, but not sure where it should sit.\r\n\r\n```\r\n    context \"when sensitive is set true\" do\r\n      it \"should honor sensitive attribute\" do\r\n        new_resource.sensitive true\r\n        # Since the resource is sensitive, it should not have :live_stream set\r\n        opts.delete(:live_stream)\r\n        expect(provider).to receive(:shell_out_with_systems_locale!).with(new_resource.name, opts)\r\n        expect(provider).to receive(:converge_by).with(\"registry_key sensitive resource\").and_call_original\r\n        expect(Chef::Log).not_to receive(:warn)\r\n        provider.run_action(:run)\r\n        expect(new_resource).to be_updated\r\n      end\r\n    end\r\n```\r\n\r\n### Issues Resolved\r\n\r\n#5695 \r\n\r\n### Check List\r\n\r\n- [ ] New functionality includes tests\r\n- [ ] All tests pass\r\n- [x] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [x] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "yeoldegrove": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6477", "title": "chef-12: Add allow_downgrade to zypper_package resource", "body": "### Description\r\n\r\nAdd allow_downgrade to zypper_package resource on chef 12\r\n\r\n### Issues Resolved\r\n\r\nnone\r\n\r\n### Check List\r\n\r\n- [x] New functionality includes tests\r\n- [ ] All tests pass\r\n- [ ] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [x] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dimsh99": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6471", "title": "Fix to use cookbook name in local mode or chef-zero", "body": "### Description\r\n\r\nCookbook name and version from metadata are used in chef_fs_data_store instead of directory name\r\n\r\n### Issues Resolved\r\n\r\n#4816\r\n\r\n### Check List\r\n\r\n- [x] New functionality includes tests\r\n- [x] All tests pass\r\n- [ ] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [x] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MarkGibbons": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6463", "title": "invites_sort_fail: Clean the invites array before sorting it", "body": "Sort threw an error trying to compare nil with a string while running\r\nknife ec backup.  This change deletes the nil entries before sorting.\r\n\r\n### Description\r\n\r\nknife ec backup failed trying to compare nil with a string while running a backup.\r\n\r\n### Issues Resolved\r\n\r\nNew issue\r\n\r\n### Check List\r\n\r\n- [x ] New functionality includes tests\r\n- [ ] All tests pass\r\n- [ x] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [ x] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "petecheslock": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6433", "title": "Net:SSH config uses verify_host_key instead of paranoid", "body": "Signed-off-by: Pete Cheslock <petecheslock@gmail.com>\r\n\r\n### Description\r\n\r\nIn net-ssh 4.2.0 - they are deprecating the term `paranoid` and using `verify_host_key` instead as a config option.  When using knife ssh you will get the following warning when using chef 13.4.24 and net-ssh 4.2.0\r\n```\r\n:paranoid is deprecated, please use :verify_host_key. Supported values are exactly the same, only the name of the option has changed.\r\n```\r\n\r\n### Issues Resolved\r\n\r\nThe changes in net-ssh\r\nhttps://github.com/net-ssh/net-ssh/blob/master/CHANGES.txt#L11\r\nhttps://github.com/net-ssh/net-ssh/pull/524/files\r\n\r\n### Check List\r\n\r\n- [ ] New functionality includes tests\r\n- [ ] All tests pass\r\n- [ ] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [ ] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jseely": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6429", "title": "Fix issue #2351, chef-client doesn't make /etc/chef if the directory \u2026", "body": "\u2026doesn't exist\r\n\r\n### Description\r\n\r\nCreates the /etc/chef directory if it doesn't already exist.\r\n\r\n### Issues Resolved\r\n\r\n#2351\r\n\r\n### Check List\r\n\r\n- [ ] New functionality includes tests\r\n- [x] All tests pass\r\n- [x] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [x] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco> (Not sure how to go about this)\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tomdoherty": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6400", "title": "Allow specifying VLAN on RHEL/Centos", "body": "### Description\r\n\r\nAllow specifying VLAN on RHEL/Centos\r\n\r\n### Issues Resolved\r\n\r\nN/A\r\n\r\n### Check List\r\n\r\n- [ ] New functionality includes tests\r\n- [ ] All tests pass\r\n- [ ] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [ ] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jgorak": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6340", "title": "Conditional Guard Description", "body": "### Description\r\n\r\nCustom description option (:desc) on only_if/not_if guards for better identification in output\r\n```\r\nlog \"hello\" do\r\n  not_if(:desc => 'randomly skip') { rand < 0.5 }\r\nend\r\n```\r\n\r\n### Issues Resolved\r\n\r\nhttps://github.com/chef/chef/issues/6322\r\n\r\n### Check List\r\n\r\n- [x] New functionality includes tests\r\n- [x] All tests pass\r\n- [x] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [x] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tomklino": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6279", "title": "added gateway attribute to ifconfig resource on debian", "body": "### Description\r\n\r\nI noticed that the ifconfig resource does not implement the \"gateway\" option for network interfaces. I tried some local changes to see if some copy pasting and name changing from existing attributes will do the trick. It did! Using gateway \"ipaddress\" will now put that ip address in the interface file.\r\n### Issues Resolved\r\n\r\nI did not find a relevant issue for that subject.\r\n\r\n### Check List\r\n\r\nNOTE: I ran into multiple issues trying to get rspec to run. something with cheffish requiring version 2.3.3 of ruby (which I've installed). Either way, I have no way to run the existing specs on my machine.\r\nIf there is a docker image with all the requirements for the tests to run please let me know and I'll be happy to run and write tests for this pull request. But as of now I've been trying to get rspec to work for more than an hour.\r\n\r\n- [ no ] New functionality includes tests\r\n- [ don't know ] All tests pass\r\n- [ ] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [ ] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jeunito": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6253", "title": "Fix for #5552", "body": "### Description\r\nRaises an exception if the value of chef_server_url is not a valid chef_server_api\r\n\r\n### Issues Resolved\r\n\r\nhttps://github.com/chef/chef/issues/5552\r\n\r\n### Check List\r\n\r\n- [x] New functionality includes tests\r\n- [x] All tests pass\r\n- [x] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rcsavage": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6247", "title": "Replaced word 'shit' with 'air'.", "body": "Let's keep it clean people.\r\n\r\n### Description\r\n\r\n[Please describe what this change achieves]\r\n\r\n### Issues Resolved\r\n\r\n[List any existing issues this PR resolves, or any Discourse or\r\nStackOverflow discussion that's relevant]\r\n\r\n### Check List\r\n\r\n- [ ] New functionality includes tests\r\n- [ ] All tests pass\r\n- [ ] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [ ] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "iennae": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6237", "title": "[knife] add order by and limit the number of cookbooks returned when listing", "body": "### Description\r\n\r\nThis updates knife cookbook site list to add order by and limit number functionality. It changes the default behavior from listing all cookbooks to 100. The refactor speeds up the response.\r\n\r\nAdditionally, code is removed from knife cookbook show list that isn't used. \r\n\r\n### Check List\r\n\r\n- [ ] New functionality includes tests\r\n- [ ] All tests pass\r\n- [ ] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [ ] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "astoltz": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6196", "title": "Pass authentication for chocolatey_package", "body": "Signed-off-by: Andrew Stoltz <astoltz@gmx.com>\r\n\r\n### Description\r\n\r\n```ruby\r\nchocolatey_package 'private-package' do\r\n  source 'https://custom/nuget'\r\n  options '-u username -p password'\r\nend\r\n```\r\nBefore PR, the authentication parameters don't get passed along to the \"choco list\" command causing failed authentication. The PR causes these parameters to be passed along.\r\n\r\nI'm not sure if there are options that should be passed during \"choco install\" but not \"choco list\". If there are, we may need a separate property for this purpose.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thomas88": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6175", "title": "Add `--allow-downgrades` to all `apt-get` commands", "body": "### Description\r\n\r\nAdds `--allow-downgrades` to every apt command, as discussed in #6095.\r\n\r\nCaution, `man apt-get` says this:\r\n\r\n       --allow-downgrades\r\n           This is a dangerous option that will cause apt to continue without prompting if it is doing downgrades. It should not be used except in very special situations.\r\n           Using it can potentially destroy your system! Configuration Item: APT::Get::allow-downgrades. Introduced in APT 1.1.\r\n\r\nLet me know what you think.\r\n\r\n### Issues Resolved\r\n\r\nresolves #6095", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "oclaussen": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6168", "title": "Make gem_installer generate a valid Gemfile", "body": "### Description\r\n\r\nWhen multiple cookbooks in the run list require the same gem from the gem_installer, and these gem declarations include keyword arguments (e.g. to install the gem from a git repository), the gem_installer will generate an invalid Gemfile.\r\n\r\nThis should fix this by handling keyword arguments separately and merging them together when necessary. This may still result in unwanted behaviour, if the cookbooks specify different arguments that do not play well together, but at least we will have a valid Gemfile in all cases.\r\n\r\n### Issues Resolved\r\n\r\nNone?\r\n\r\n### Check List\r\n\r\n- [X] New functionality includes tests\r\n- [X] All tests pass\r\n- [ ] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [X] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "juliandunn": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6166", "title": "Fix unit tests while running on a machine that has FIPS enabled.", "body": "### Description\r\n\r\nThis is a first pass at fixing a couple failing unit tests when running them on a system that has FIPS enabled. I think for the purposes of these tests, it's fine to assume FIPS is _disabled_, but if folks disagree, I could just pass through the actual value of a `File::read` of `/proc/sys/crypto/fips_enabled`.\r\n\r\n### Issues Resolved\r\n\r\nFixes #5533 \r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/5846636", "body": "I'm a little curious about the double-slash here; assume that's a typo although a no-op at that?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/5846636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/5867432", "body": "This line is a duplicate of the one two lines up.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/5867432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/5900683", "body": "Should be \"has changed slightly\"\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/5900683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/5900693", "body": "\"Previously the code to disable plugins was:\"\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/5900693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/5900696", "body": "\"It should now change to:\"\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/5900696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/5900701", "body": "Might also be worth mentioning that the side effects of not doing this update are that the plugins will be silently activated.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/5900701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/5900722", "body": "I know this wasn't part of the commit, but this should say \"its current run\" -- the only time you ever use \"it's\" is as a contraction for \"it is\"\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/5900722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "elliott-davis": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6111", "title": "Update Habitat plan to correctly build", "body": "### Description\r\n\r\nUpdates habitat plan to build chef 13 correctly. Also adds config settings for data-collector\r\n\r\n### Check List\r\n\r\n- [ ] New functionality includes tests\r\n- [ ] All tests pass\r\n***There are no integration tests to validate this***\r\n- [x] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [x] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tchernomax": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/6063", "title": "fix knife ssh --exit-on-error", "body": "With enhancement #5978 `knife ssh` hang on some occasions.\r\n\r\n```\r\nroot@test:/# knife ssh 'name:test.wwwpp*' \"echo 'toto'; true\" \u2026 -C 1 --exit-on-error\r\ntest.wwwpp-01   toto\r\ntest.wwwpp-02   toto\r\n\r\n\u2192 OK\r\n\r\nroot@test:/# knife ssh 'name:test.wwwpp*' \"echo 'toto'; false\" \u2026 -C 1 --exit-on-error\r\ntest.www-01   toto\r\n\r\n\u2192 OK\r\n\r\nroot@test:/# knife ssh 'name:test.www*' \"echo 'toto'; true\" \u2026 -C 1 --exit-on-error\r\ntest.www-01   toto\r\ntest.www-02   toto\r\ntest.wwwpp-02 toto\r\ntest.wwwpp-01 toto\r\n\r\n\u2192 OK\r\n\r\nroot@test:/# knife ssh 'name:test.www*' \"echo 'toto'; false\" \u2026 -C 1 --exit-on-error\r\ntest.www-01   toto\r\n^C\r\n\r\n\u2192 FAIL, `knife ssh` hang\r\n```\r\n\r\nThis patch fix this issue :\r\n\r\n```\r\nroot@test:/# knife ssh 'name:test.wwwpp*' \"echo 'toto'; true\" \u2026 -C 1 --exit-on-error\r\ntest.wwwpp-01   toto\r\ntest.wwwpp-02   toto\r\n\r\n\u2192 OK\r\n\r\nroot@test:/# knife ssh 'name:test.wwwpp*' \"echo 'toto'; false\" \u2026 -C 1 --exit-on-error\r\ntest.www-01   toto\r\n\r\n\u2192 OK\r\n\r\nroot@test:/# knife ssh 'name:test.www*' \"echo 'toto'; true\" \u2026 -C 1 --exit-on-error\r\ntest.www-01   toto\r\ntest.www-02   toto\r\ntest.wwwpp-02 toto\r\ntest.wwwpp-01 toto\r\n\r\n\u2192 OK\r\n\r\nroot@test:/# knife ssh 'name:test.www*' \"echo 'toto'; false\" \u2026 -C 1 --exit-on-error\r\ntest.www-01   toto\r\n\r\n\u2192 OK\r\n\r\n```\r\n\r\nWith -C 2 :\r\n\r\n```\r\nroot@test:/# knife ssh 'name:test.www* OR name:test.api*' \"echo 'toto'; true\" \u2026 -C 2 --exit-on-error\r\ntest.api-02   toto\r\ntest.apipp-02 toto\r\ntest.www-02   toto\r\ntest.api-04   toto\r\ntest.www-01   toto\r\ntest.api-01   toto\r\ntest.wwwpp-01 toto\r\ntest.apipp-01 toto\r\ntest.api-03   toto\r\ntest.wwwpp-02 toto\r\n\r\n\u2192 OK\r\n\r\nroot@test:/# knife ssh 'name:test.www* OR name:test.api*' \"echo 'toto'; false\" \u2026 -C 2 --exit-on-error\r\ntest.apipp-02 toto\r\ntest.api-02   toto\r\n\r\n\u2192 OK\r\n\r\n```\r\n\r\n### Description\r\n\r\n`knife ssh \u2026 --exit-on-error` ; end sessions loop in case of error.\r\n\r\n### Issues Resolved\r\n\r\n* #5978\r\n* #5399\r\n\r\n### Check List\r\n\r\n- [ ] New functionality includes tests\r\n- [ ] All tests pass\r\n- [ ] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [ ] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nathwill": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/5972", "title": "surface default guard interpreter errors", "body": "surface command stderr when guard interpreter command is unsuccessful. helps with showing why file/systemd_unit verify commands may fail.\r\n\r\nsurfacing the error in the converge output is important for debugging since the temporary files used during verification are not available for inspection after the verification command is run.\r\n\r\n### Description\r\n\r\naids in debugging when guard interpreter fails\r\n\r\n### Issues Resolved\r\n\r\n#5931 \r\n\r\n### Check List\r\n\r\n- [x] New functionality includes tests (N/A)\r\n- [x] All tests pass (N/A)\r\n- [x] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes) (N/A)\r\n- [x] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jeremymv2": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/5889", "title": "moved 'purge is off' msg to correct location", "body": "Signed-off-by: Jeremy J. Miller <jm@chef.io>\r\n\r\n### Description\r\n\r\nThe original ui message `ui.output (\"Not deleting extra entry #{dest_path} (purge is off)\") if ui` was being output under the wrong condition since it was nested under the incorrect `if/else` block, confusing the user.\r\n\r\nThis commit changes it to be associated with the `if options[:purge]` condition, not the `if src_entry.parent.can_have_child?(dest_entry.name, dest_entry.dir?)`:\r\n\r\n```\r\n              if options[:purge]\r\n                # If we would not have uploaded it, we will not purge it.\r\n                if src_entry.parent.can_have_child?(dest_entry.name, dest_entry.dir?)\r\n```\r\n\r\nTested and validated works as expected.\r\n\r\n### Issues Resolved\r\n\r\nn/a\r\n\r\n### Check List\r\n\r\n- [ ] New functionality includes tests\r\n- [ ] All tests pass\r\n- [ ] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [ ] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ccope": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/5698", "title": "Avoid apt (dpkg) prompts for modified config files", "body": "### Description\r\n\r\nchef runs should not fail due to dpkg prompts in the following scenario:\r\n 1. User installs package\r\n 1. User overwrites config files from package with Chef-managed files\r\n 1. User upgrades the package, which contains an new configuration file from the package maintainer\r\n\r\nchef should default to the following behavior:\r\n - if the admin never changed the config file, install the updated maintainer config\r\n - if the admin has changed the file, preserve the existing config\r\n\r\n> dpkg handles configuration file updates, but, while doing so, regularly interrupts its work to ask for input from the administrator. This makes it less than enjoyable for those who wish to run updates in a non-interactive manner. This is why this program offers options that allow the system to respond automatically according to the same logic:\r\n **--force-confold** retains the old version of the file\r\n **--force-confnew** will use the new version of the file (these choices are respected, even if the file has not been changed by the administrator, which only rarely has the desired effect). \r\n **--force-confdef** tells dpkg to decide by itself when possible (in other words, when the original configuration file has not been touched), and only uses --force-confnew or --force-confold for other cases.\r\n\r\n-- https://debian-handbook.info/browse/stable/sect.package-meta-information.html#sidebar.questions-conffiles\r\n\r\n\r\n### Issues Resolved\r\n\r\nhttps://gitlab.com/gitlab-com/operations/issues/254\r\nhttp://serverfault.com/questions/575343/out-of-order-chef-recipes-causing-apt-package-install-to-fail\r\nhttp://askubuntu.com/questions/104899/make-apt-get-or-aptitude-run-with-y-but-not-prompt-for-replacement-of-configu/104912#104912\r\n\r\n### Check List\r\n\r\n- [ ] New functionality includes tests\r\n- [ ] All tests pass\r\n- [ ] RELEASE\\_NOTES.md, has been updated if required (not required for bugfixes, required for API changes)\r\n- [ ] All commits have been signed-off for the Developer Certificate of Origin. See <https://github.com/chef/chef/blob/master/CONTRIBUTING.md#developer-certification-of-origin-dco>\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ustuehler": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/4926", "title": "Skip node attribute saving with named run lists", "body": "[Policyfile.rb documentation](https://docs.chef.io/config_rb_policyfile.html) suggests named run lists can be used as an alternative to an override run list. A natural assumption then is that node attribute saving also behaves the same with an override run list as with named run lists.\n\nQuoting the Policyfile.rb documentation:\n\n> named_run_list \"NAME\", \"ITEM1\", \"ITEM2\", ...\n> Specify a named run-list to be used as an alternative to the override run-list. This setting should be used carefully and for specific use cases, like running a small set of recipes to quickly converge configuration for a single application on a host or for one-time setup tasks.\n\nThis change marks the policy as temporary if a named run list is requested, so that chef-client will not save node attributes at the end of the run, just as with an override run list.\n### Version:\n\nChef 12.10.45\n### Environment:\n\nchef-client runs in policyfile mode\n### Scenario:\n\nWe want to run a subset of recipes (e.g., `cookbook_name::deploy`) using a named run list and not save the node's run_list at the end of the chef-client run in order not to break Chef searches such as `recipes:cookbook_name\\:\\:appserver`. This works with an override run list, but not in policyfile mode with named run lists.\n### Steps to Reproduce:\n1. Run `chef-client` with `policy_name` and `policy_group` set in `/etc/chef/client.rb`, then run `knife node show <node_name>`.\n2. Run `chef-client -n <named_run_list>` (where the named run list uses a different set of recipes than the default run list) and run `knife node show <node_name` again.\n3. Compare the output of `knife node show` before and after the second chef-client run.\n### Expected Result:\n\nThe list of recipes and other node attributes have not changed between client runs.\n### Actual Result:\n\nThe list of recipes and possibly node attributes have changed.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nmcspadden": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/4903", "title": "UID now starts at 501, uses createhomedir instead", "body": "I am a Facebook employee, so please do not merge this - Phil Dibowitz (PhilD) will do the final merge.\n\nBrief summary:\nChanged the default UID from starting at 500 to 501.\nHome directory is created by using Apple's `createhomedir` command rather than ditto-ing the User Template.\n\nExplanation:\n**UID 500 -> 501**\nBy default, Chef's provider for creating users on Mac OS X, dscl.rb, creates a new user starting at UID 500. This should be changed to 501.\n\nThere's a lot of historic and current evidence that this should always be the default behavior:\n1. The very first user account created when a new machine is setup is always UID 501 (and is always an admin account). Apple never creates an account through any user-facing means with a UID of less than 501.\n2. Accounts with UID 500 or less do not show up in the System Preferences' \"Users & Groups\" pane. \n3. Apple's Server.app is unable to register a sub-501 account for any services, since it requires only \"real\" local accounts to do that - which means a UID of 501 or higher. An account with a UID of 500 causes Server.app to not function properly when used as a service owner. This gives more credence to the idea that UID 500 is bad.\n\nEvidence here that Apple expects you to use a UID of appropriate value:\n[https://developer.apple.com/library/mac/documentation/Porting/Conceptual/PortingUnix/additionalfeatures/additionalfeatures.html#//apple_ref/doc/uid/TP40002856-BBCDBFBD]()\nStep 4 of that example says:\n\n> Choosing a user ID is not trivial to do programmatically. For sample code, see the Starting Points appendix in Shell Scripting Primer.\n\nHere in User & Group Management:\n[https://developer.apple.com/library/mac/documentation/OpenSource/Conceptual/ShellScripting/StartingPoints/StartingPoints.html#//apple_ref/doc/uid/TP40004268-CH2-SW24]()\nListing D-10's code sample shows:\n\n```\n# UID: The user ID for the new user. Leave blank for the script to automatically\n# choose the first unused ID at or above MINUID (currently 501).\n```\n\nThere are other examples in Apple documentation all indicating that they expect 501 to be the starting UID for \"normal\" user accounts.\n\n**createhomedir**\n\nCurrently, the dscl provider does a ditto of the User Template ( `/System/Library/User Template/English.lproj`) into the location specified by the home directory property. While this is perfectly fine behavior, Apple provides a tool that does this directly, called `createhomedir`, which dates back to 10.6.2 (it may be earlier than that, but that's the first time I can find evidence of it online).\n\n`createhomedir` does all the work of copying the user template, changing permissions and ownership, and filling out any appropriate post-copy actions. This is the same behavior used a new user account is added by the System Preferences (or Setup Buddy).\n\nThe call to create a home directory for a specific local user can be done this way:\n`/usr/sbin/createhomedir -c -u <username>`\n\nI think it would be best to use the Apple-provided tools to accomplish this task rather than trying to mimic the behavior. If at any point Apple changes the behavior of what happens when someone creates a new user account, their own frameworks are the best tools to use, rather than hoping we get it right.\n\nIn order for `createhomedir` to function, the user's NFSHomeDirectory record has to be created first, so I moved the call to `run_dscl()` before the call to `ditto_home` that actually creates the home directory.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jkeiser": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/4285", "title": "Make script resources use properties", "body": "", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/4280", "title": "Use properties for service", "body": "", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/714273", "body": "I think it will do the right thing.  The else block will only be called if there are no special characters in the line, which includes quotes, so using everything up to the first whitespace will work.  More complicated parsing could work as well, and would even allow us to run more commands without cmd.exe--it just requires writing the Windows command parser in Ruby :)\n\nSpecifically, if the command is '\"C:\\Program Files\\Foo\\Bar.exe\" -c blah', then SHOULD_USE_CMD regex will match, and we will call cmd.exe instead of parsing looking for the command.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/714273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/chef/chef/comments/714301", "body": "Wow!  OK, sorry, I didn't realize you were referencing an actual discovered issue, I just thought it was a (much-appreciated) code review.  Are you using shell_out?  I'd love to see the repro.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/714301/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/chef/chef/comments/714309", "body": "I understand it now.  You're talking about running a program with no quotes in the name at all.  This appears to be an area where Ruby is inconsistent with the shell.\n\nC:\\Users\\John Keiser>C:\\a b\\c.cmd\n'C:\\a' is not recognized as an internal or external command,\noperable program or batch file.\n\nC:\\Users\\John Keiser\\Documents\\win\\lib\\win>ruby -e 'system(\"c:\\a b\\c.cmd\")'\ntrue\n\n(c.cmd does @echo true)\n\nWe should be consistent with Ruby rather than the shell, I think, though I'm actually not a fan of Ruby's special-casing behavior here.  For a workaround for you, you can add quotes in your string, like \"\\\"C:\\a b\\c.cmd\\\"\".\n\nThanks tons for the report :)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/714309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/chef/chef/comments/808553", "body": "Actually, it depends whether you are mounting your Unix share, or whether\nyou are using git on Windows.  Your Unix share will not have the line\nendings, and the spec data files you download with git will.  Removing this\nchange makes it work with normal Windows tools.  Both need to be the same\nmode (either both ASCII or both bin).\n\nRemoving this change made the CIT machine pass.\n\n--John\n\nOn Mon, Dec 19, 2011 at 7:13 PM, Seth Chisamore <\nreply@reply.github.com\n\n> wrote:\n> \n> I actually added this change to make this spec pass on Windows!  If you\n> don't set the file to binmode the checksum compare down in\n> `Chef::Provider::CookookFile` gets all screwed up as CRLF are added at the\n> end of lines written in the Tempfile.\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> \n> https://github.com/opscode/chef/commit/6b20399d1c64f665d25b93b242fa6da4eb987f70#commitcomment-808254\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/808553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/chef/chef/comments/4267946", "body": "Might want one more line here after function and before private.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/4267946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/chef/chef/comments/4267948", "body": "Looks good from here!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/4267948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/chef/chef/comments/4350937", "body": "Looks good.  Mind filing a CHEF ticket to get Chef::HTTP callers updated to use the response instead of read_body?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/4350937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/chef/chef/comments/6110719", "body": "Would this be better done as a class variable?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6110719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/chef/chef/comments/6110757", "body": "If we made windows_home_path a method instead of a variable, would that solve the below issue?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6110757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "dilchenko": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/3169", "title": "Mitigating \"No route to host\" errors produced by 'knife ssh'", "body": "At least on OSX Yosemite (although i have observed this same issue on older OSX versions), 'knife ssh' produces errors like 'No route to host' when SSH-ing to 100-200 hosts at once. That error results in nodes being skipped, while those nodes are definitely up and accessible.  I've traced this to TCPSocket's internal connect(2) failing for some weird reason, and to the fact that Net::SSH::Transport::Session initializer wraps TCPSocket.open() call into a ruby Timeout() which by default is 0 seconds (the latter contributes to the problem, is not it's source). Limiting session concurrency definitely reduces the scope of the problem( # of skipped nodes per run ), but doesn't solve it completely.\n\nProposed changes introduce 2 options for 'knife ssh' which allow to customize timeout and retry ssh connection to a node for N times. Latter requires implementation of new :on_error strategy, which in turn requires changes to already existing net-ssh-multi monkeypatch.\n\nThose two options, in conjunction with concurrency limiting, seem to band-air the problem - at least in my case, i was able to 'knife ssh' into all 254 nodes repeatedly with only one retry needed for 2-5 nodes per run.\n\nLastly, the changes do not change default behavior of 'knife ssh'.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dsp-eoss": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/chef/chef/pulls/1120", "title": "CHEF-3511: call chkconfig --add instead of on", "body": "The correct way to enable a service on RHEL for chkconfig management\nis to pass chkconfig the --add option; passing it on instead will\nresult in it ignoring the service's init script's chkconfig lines or\nLSB stanza, enabling it for default runlevels and skipping kill\nentry creation.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "imeyer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/399989", "body": "The slicehost commands don't bootstrap cause at the time I wrote them, I was a CentOS user, so I didn't want to do anything OS specific, and figured it was better left to bootstrap. That said, the --bootstrap would be a welcome addition to it.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/399989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2543833", "body": "This is the best commit to Chef, everrrr!!!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2543833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/40340", "body": "It's the commit I've been yearning for my whole life! :D\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/40340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/43941", "body": "oh man this is going to be such a GREAT tool.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/43941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "danielsdeleo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/464073", "body": "just to close the loop here, this is merged in 1df433ffc1f416397f324810821d63dda26a4e4a\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/464073/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/465207", "body": "Can you add specs for this?\n\nThanks,\nDan\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/465207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/465221", "body": "Hrm, I don't think that second commit worked out the way you expected it looks like it reverts a lot of the recent bugfixes in knife. Does d056facdcb39d21ab03f5b565fcdc5898649b607 apply cleanly on top of master if you cherry-pick it?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/465221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/465225", "body": "superseded by http://github.com/opscode/chef/pull/13\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/465225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/465226", "body": "merged it in e554ea3bd01046a63f2477d971fd414db59aed74\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/465226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/466760", "body": "Hi there, a few comments.\n1. On some of the files, the copyright is assigned to Jim Van Fleet, but I don't see him listed in our approved contributors list (http://wiki.opscode.com/display/chef/Approved+Contributors).\n2. Can you move the bootstrapping scripts to a template, or use one of the existing ones, and run a bootstrap command against the server instance instead of in-lining it?\n3. Can you convert tab characters to 2 spaces.\n\nThanks,\nDan DeLeo\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/466760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/466844", "body": "Definitely a bummer you can't use ec2 server create on an AMI without sudo, but we need to make it easy for the users who do want/need to use sudo.\n- Can you add a `--sudo` option to knife ec2 server create and configure the Knife::Bootstrap object accordingly?\n- Can you add rspec tests to make sure the Knife::Bootstrap is correctly configured when setting `use_sudo` in config file or using `--sudo` on the command line?\n\nSince this would change the default from using sudo to not using sudo, I can't apply the patch until 0.10.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/466844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/527184", "body": "Merged in 11ef5a97f55ff7df902c3160053d6a8a4c975c47, thanks guys. Have a good rubyconf ;)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/527184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/527270", "body": "This is merged as of dffa4225bc66816cdceb5ed8153888c20741312e and will be released in 0.10. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/527270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/527305", "body": "This is merged to master in commit 3c52e2e45363089aa8e7766a93dbaa8b0f8c5eae and will be in the 0.10 release. Thanks again!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/527305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/615547", "body": "Sean, this is definitely a nice patch but it breaks a few specs:\n\n```\n1)\n'Chef::Knife::Ec2ServerCreate when configuring the bootstrap process configures the bootstrap to use the correct ssh_user login' FAILED\nexpected: \"ubuntu\",\n     got: nil (using ==)\nspec/unit/knife/ec2_server_create_spec.rb:91:in `block (3 levels) in <top (required)>'\n\n2)\n'Chef::Knife::Ec2ServerCreate when configuring the bootstrap process configures the bootstrap to use the correct ssh identity file' FAILED\nexpected: \"~/.ssh/aws-key.pem\",\n     got: nil (using ==)\nspec/unit/knife/ec2_server_create_spec.rb:95:in `block (3 levels) in <top (required)>'\n\n3)\n'Chef::Knife::Ec2ServerCreate when configuring the bootstrap process configures the bootstrap to use the desired distro-specific bootstrap script' FAILED\nexpected: \"ubuntu-10.04-magic-sparkles\",\n     got: nil (using ==)\nspec/unit/knife/ec2_server_create_spec.rb:119:in `block (3 levels) in <top (required)>'\n```\n\nCan you fix these and update the pull request?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/615547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/615591", "body": "Merged to master, thanks!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/615591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/616809", "body": "Yep, the spec file is here: https://github.com/opscode/chef/blob/master/chef/spec/unit/knife/ec2_server_create_spec.rb\n\nYou probably just need to change a few lines from\n    @knife_ec2_create.config[:ssh_user] = \"ubuntu\"\nto the corresponding `Chef::Config` option that you changed it to in the knife code.\n\nHTH,\nDan DeLeo\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/616809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/773154", "body": "Hey, thanks for the quick turnaround on this. Unfortunately, what you did essentially reverts the ability to set the region in your knife.rb file, which was the point of the change in the commit you commented on. We definitely want to stick with the `Chef::Config[:knife]` stuff, we just need to make sure it's still wired up correctly with the options.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/773154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/774792", "body": "Right, but `config` and `Chef::Config` never get merged. Look at https://github.com/moriz/chef/blob/b10c027f032827c65c01428a62c0a6f50c53a515/chef/lib/chef/knife.rb#L245-292 `config` is an instance variable populated by Mixlib::Config as shown here: https://github.com/opscode/mixlib-cli/blob/master/lib/mixlib/cli.rb#L76-111\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/774792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/791111", "body": "Yep, that will work. I've added this to the list of things to fix for the 0.9.14 RC.\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/791111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/799367", "body": "Merged in 77b5614c7d0178e5e481c538117645e597f1cd37  May the Chef be with you!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/799367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/807364", "body": "This is merged into 0.9-stable and master, so it will be in both 0.9.14 and 0.10.0 releases. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/807364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/810814", "body": "This issue is fixed now, thanks for catching this one!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/810814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/899604", "body": "Merged as of 0dc03e13b45c9b75f59c36f765f978d909594335 Thanks for your patch.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/899604/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/905311", "body": "Finally merged this one. Thanks for the patch!\n\ncf. 568861f072ed45523bf3778ca394419ecbe471cc\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/905311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/951363", "body": "Merged in 7fcf077de253cdb33a109d2337cd52c9f8b9415b\n\nThanks for patching!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/951363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/992276", "body": "Finally merged this one: b93bd04effad00e7440f752335c59100a7a2d044\n\nThanks for the patch!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/992276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/998432", "body": "Finally merged this: effbcea3d2fef55e482a1b625bca8b5b25a56816\n\nThanks for patching!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/998432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1060733", "body": "Merged here: b304bbf8409e6081471e7a56d367891f4f764f82\n\nThanks a bunch!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1060733/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1060749", "body": "Merged: 9ca382bd433abc2cbbb92c7ae3f7a7d21be68121\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1060749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1070643", "body": "Hey, I can't find you in our system. Before I can merge this, you need to fill out a contributor agreement. http://wiki.opscode.com/display/chef/How+to+Contribute\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1070643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1075534", "body": "I've made a note to get this in for 0.10.2, we're in the final RC stages of 0.10.0.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1075534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1602390", "body": "Hey, there's already a patch for this: https://github.com/opscode/chef/pull/83 we'll be merging it in for 0.10.4. See also http://tickets.opscode.com/browse/CHEF-2313\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1602390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1608564", "body": "This patch is merged, thanks!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1608564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1612443", "body": "This has been merged: http://tickets.opscode.com/browse/CHEF-1956\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1612443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1612451", "body": "This has been merged, thanks for contributing. http://tickets.opscode.com/browse/CHEF-1935\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1612451/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1612481", "body": "This has been fixed: http://tickets.opscode.com/browse/CHEF-1704. Thanks for contributing to Chef.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1612481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1612846", "body": "This is merged as of 24782b39175314013dcb5883a679b55848a7754c Thanks!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1612846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1943441", "body": "I love documentation fixes :)\n\nOur manpages are generated from markdown by ronn, so you need to make the fix here: https://github.com/opscode/chef/blob/master/chef/distro/common/markdown/man1/knife-bootstrap.mkd\n\nAlso, can you fill out a contributor agreement? It only takes a few minutes and it helps protect all Chef users from patent and other legal hassles. http://wiki.opscode.com/display/chef/How+to+Contribute\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1943441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2476751", "body": "Totally awesome. I say merge it if there's nothing left to do.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2476751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2524342", "body": "Merged. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2524342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2524345", "body": "btw, merge: 5593369d23a19784ed643869af0af6dec497c3aa\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2524345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2524357", "body": "Merged here: 5593369d23a19784ed643869af0af6dec497c3aa\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2524357/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2535861", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2535861/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2535898", "body": "This is merged in c179a2d66f130cccb26b5b6db79ab279ca9e8069\n\nThanks for contributing to Chef!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2535898/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2536083", "body": "Merged in 3249db413c5dd4989019161d8f94ff4f19322f55\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2536083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2604722", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2604722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607563", "body": "This was merged long ago. Thanks! \n\nhttp://tickets.opscode.com/browse/CHEF-1445\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607619", "body": "This is merged, thanks!\n\nhttp://tickets.opscode.com/browse/CHEF-1691\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607632", "body": "See comments on http://tickets.opscode.com/browse/CHEF-1734\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607665", "body": "Fixed: http://tickets.opscode.com/browse/CHEF-1727\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607678", "body": "Fixed: http://tickets.opscode.com/browse/KNIFE_EC2-16\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607683", "body": "Fixed: http://tickets.opscode.com/browse/CHEF-1692\n\nThanks again!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607757", "body": "Fixed: http://tickets.opscode.com/browse/CHEF-1727\n\nThanks again!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607946", "body": "Merged, thanks: http://tickets.opscode.com/browse/CHEF-1794\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607963", "body": "Merged quite some time ago, thanks! http://tickets.opscode.com/browse/CHEF-1445\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607995", "body": "Putting this information in the node isn't the best option, we need more of a general system that can keep the history of more than one run. See more discussion here: http://tickets.opscode.com/browse/CHEF-385\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2607995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2608030", "body": "This has been merged already: http://tickets.opscode.com/browse/CHEF-1959\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2608030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2641102", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2641102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2766692", "body": ":hammer:\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2766692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2766869", "body": "stevendanna says he's rewriting this on a new branch so closing this pull req.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2766869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2766883", "body": "This bug has been fixed, thanks.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2766883/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2766948", "body": "Seems like this is fixed according to the discussion at http://tickets.opscode.com/browse/CHEF-2089\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2766948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2766982", "body": "This was merged into the `knife-ec2` plugin (https://github.com/opscode/knife-ec2) cf. http://tickets.opscode.com/browse/CHEF-1990\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2766982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767004", "body": "This got merged. cf. http://tickets.opscode.com/browse/CHEF-1590\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/76106", "body": "This is fixed in 0.9 alpha, I'll be backporting that fix soon.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/76106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/76606", "body": "doh! I'll merge your fix today\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/76606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/90152", "body": "Hi Akzhan, you are right, we need to be more careful when interpolating into regexes. In this case, however, the dot is okay because metacharacters are not interpreted inside character classes:\n    \".\" =~ /[.]/\n    => 0\n    \"m\" =~ /[.]/\n    => nil\n\nCheers,\nDan DeLeo\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/90152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/90740", "body": "these should switch on RUBY_PATCHLEVEL, they're fine on newer 1.8.7 releases, like p248/p249\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/90740/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/99851", "body": "No worries, I'll fix it: http://tickets.opscode.com/browse/CHEF-1390\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/99851/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/107190", "body": "http://progit.org/2010/03/04/smart-http.html\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/107190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/107191", "body": "Doh! and this is a fix for a different issue. The shame!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/107191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/123932", "body": "yeah, In the next commit Joe switched it to use Chef::ShellOut which closes its streams in every case and has a simpler API, too.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/123932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/270932", "body": "It sure looks like that line should use `Chef::Config[:knife][:availability_zone]`. Have you tried it?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/270932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/410933", "body": "This means that `knife help` no longer shows \"shef\" and the general \"knife\" page in the list of available topics. We should probably generate the list of help topics and write the results to a file in knife/core. We can make this a dependency of the man page generation topics which are a dependency of the gem creation task, so this should be relatively painless.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/410933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/410941", "body": "On Wednesday, June 1, 2011 at 9:37 PM, btm wrote:\n\n> On Wed, Jun 1, 2011 at 9:34 PM, danielsdeleo\n> <reply@reply.github.com (mailto:reply@reply.github.com)>\n> wrote:\n> \n> > This means that `knife help` no longer shows \"shef\" and the general \"knife\" page in the list of available topics. We should probably generate the list of help topics and write the results to a file in knife/core. We can make this a dependency of the man page generation topics which are a dependency of the gem creation task, so this should be relatively painless.\n> \n> Why should knife help list shef? It seems that shef should just have\n> its own documentation as it is its own tool.\n> \n> In an ideal world, yes. In the world we are in, lots of users install via rubygems, and rubygems doesn't install manpages. So, unless we build manpage viewing into every Chef executable, users won't be able to access the docs for that topic. Making the docs available through `knife help` is the least bad workaround to this.\n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/opscode/chef/commit/cf27212142f94daf054f8b5f12a885b4e7e76e59#commitcomment-410938\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/410941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/411944", "body": "On Thursday, June 2, 2011 at 11:50 AM, btm wrote:\n\n> On Wed, Jun 1, 2011 at 9:45 PM, danielsdeleo\n> <reply@reply.github.com (mailto:reply@reply.github.com)>\n> wrote:\n> \n> > In an ideal world, yes. In the world we are in, lots of users install via rubygems, and rubygems doesn't install manpages.\n> > So, unless we build manpage viewing into every Chef executable, users won't be able to access the docs for that topic.\n> > Making the docs available through `knife help` is the least bad workaround to this.\n> > \n> > @btm, actually, I'd prefer a flamewar in github comments\n> \n> They could just set their MANPATH correctly! I'll relent, but only\n> because users don't know they're wrong yet. #longbeard\n> \n> The documentation rake task could create a ruby file with a constant.\n> That'll mean rewriting most of knife help, but that is cheaper and\n> nicer than traversing directories anyway.\n> \n> Yeah, my point is that I'd rather \"do it wrong\" with a good user experience than the other way around. Anyway, for a longer term solution, we should try to get this patch up to date and accepted into rubygems:\n\nhttps://rubyforge.org/tracker/index.php?func=detail&aid=27691&group_id=126&atid=577\n\n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/opscode/chef/commit/cf27212142f94daf054f8b5f12a885b4e7e76e59#commitcomment-411937\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/411944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/1267675", "body": "The problem is that our current code couples HTTP requests, parsing JSON into core ruby data types, and creating Chef objects, and there is code using Chef::REST that depends on this design contract. These things need to be decoupled, and users of Chef::REST modified for a new design contract before we can safely ditch the JSON gem and the `json_class` magic.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1267675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/1384880", "body": "There will be a new release soon with fixes for this and a few other issues that weren't caught in the testing cycle.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1384880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/2329864", "body": "Agreed. FWIW, this is basically special case code to handle failures when concurrently creating a large number of clients in OHC. There's already retries at the `Chef::REST` layer so this translates to something like 25 retries total. We should make a note to remove this when we work out the locking issues in authz.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2329864/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/2329880", "body": "Yeah, I considered adding a check in a early exploration of this patch and forgot to get back to it. It's a much better experience if we fail here instead of after the client create has happened, since re-running chef-client would get a 403 until an admin deletes the client that got created (assuming default permissions setup).\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2329880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/2329891", "body": "Since that's a new feature of the Chef 11 server, I was thinking to add that separately (there's no get/set methods for validator status yet either). Just need to check that it plays nice with Chef 10 and OHC/OPC.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2329891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/3133674", "body": "See https://github.com/opscode/chef/commit/7639ae987aaf7fe573ee0e50feb284fbedca1171\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3133674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/3252208", "body": "In this case, I think we should refactor the code. There's not a good reason we need to use catch and throw in this class, a simple `if..elsif` construct would work just fine, and we could fix up the return value at the same time.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3252208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/3252226", "body": "It's pretty odd we have to stub this, but I'll take care of that with fixing other remote file issues.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3252226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/3252245", "body": ":thumbsup: can probably just commit this and then add a subtask to fix up the diff class.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3252245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/3344240", "body": "Should we verify the result is less than 104 bytes? `tmpdir` iterates through a few directories and maybe one of these has a long path on a certain OS or user environment?\n\ne.g.,\n\n``` ruby\nfor dir in [ENV['TMPDIR'], ENV['TMP'], ENV['TEMP'], @@systmpdir, '/tmp']\n  if dir and stat = File.stat(dir) and stat.directory? and stat.writable?\n    tmp = dir\n    break\n  end rescue nil\nend\nFile.expand_path(tmp)\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3344240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/3344278", "body": "Should probably have an accompanying test that successfully updates with Booleans and fails to update with non-boolean?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3344278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/3371380", "body": "It means a property that is unchanged when content is updated on the target file from the staging file. As we chatted about, I _had_ sacl in the list, but by default there isn't one. I could add `sacl_present?` to the list for this context, though.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3371380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/3371396", "body": "Default is mv, as this is generally safer--you don't have to worry about running out of disk space and corrupting an important file and thereby hosing your box. It can be changed globally or per-resource, though.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3371396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/3371611", "body": "I have no problem extending the number of test inputs to include a variety of parent dirs, but I'd rather validate that the behavior is _generally_ correct. If I have a use case for creating a file in a tmp dir, it should look like a file I created in a tmp dir via non-chef methods, and same for not-a-temp-dir.\n\nCurrently pursuing a way to find the inheriting acls from the parent dir and check them in the result.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3371611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/3372207", "body": "Re: \"non-admin on Windows,\" yep. My commit comment is basically just explaining why I'm not attempting to get 100% test coverage in these tests (the combined functional plus unit tests should have 100% coverage though).\n\nMost of the behavior in these classes is also exercised in per-resource functional tests, so this is just an extra set of tests where the code can be verified without all the added complexity of resources, providers, etc.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3372207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/3372559", "body": "@adamedx converge isn't the word I'd use, since here we're testing just a component of a file provider. Otherwise, answer to your question is yes.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3372559/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/3372864", "body": "@adamedx I don't know if it's technically correct, but I talk about converging resources all the time. Anyway, in this case I make the distinction because this is a single non-idempotent component of a larger component that is idempotent/convergent and also it's possible that this component is working correctly but a different component (say, file access control) is broken and results in \"permissions will be exactly the same after converge\" not being true. \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3372864/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/3480442", "body": "Ideally we would do this with an event, but that requires a bunch more jiggery-pokery, so this fine for getting it out the door in a reasonable time.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3480442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/4889730", "body": "@josephholsten I filed a bug for a related issue https://bugs.ruby-lang.org/issues/9129 but not this one.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/4889730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/5219151", "body": "Did you try removing any of these `rspec_reset` calls? I think some of them may have been workarounds for bugs in rspec mocks that have long been fixed.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/5219151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/5262377", "body": "Why'd this get removed?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/5262377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/5489628", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/5489628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/6101312", "body": "Is there a reason we have to do it this way instead of just using `alias` or `alias_method` ?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6101312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/6110795", "body": "We probably should do that. Looking at the way it's written now, there's no way we can change `windows_home_path` in the tests, but they pass, so that means we're probably not testing the logic on line 512 at all.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6110795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/6110842", "body": "I considered doing `let!(:config_location_pathname)` instead which is maybe a more correct fix, but this seemed to be the most explicit way to go.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6110842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/6419897", "body": "Yep, this is perfect.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6419897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/7333342", "body": "Disclaimer: I wrote this commit before we decided to make `name` required.\n\n> Preserves behavior where errors in unrelated cookbook metadata do not prevent upload with knife cookbook upload (CHEF-2923), however we may want to revisit this design choice. In particular, knife cookbook upload example, where the cookbook \"example\" has an error in the metadata.rb file, may claim that the cookbook \"example\" doesn't exist depending on whether chef was able to evaluate enough of the metadata to read the name.\n\nAs a design constraint, that leaves us in a shitty situation that we're trying to make the best of. Suppose I modify the metadata of cookbook \"example-cookbook\" and I make a mistake such that ruby refuses to even load the metadata file. Per CHEF-2923, `knife cookbook upload other-cookbook` should not fail in this case, but of course `knife cookbook upload example-cookbook` _should_ be an error. However, since we can't read the metadata file, we don't know the \"real\" cookbook name, but we need to have some sort of cookbook name to use for the Hash that maps cookbook loaders to names in `CookbookLoader`. So we fallback to the inferred name and **hope** that it's right so we can detect the actual reason we're unable to upload the user's cookbook (\"example-cookbook\"). If the inferred name is wrong, we'd probably report that \"example-cookbook\" can't be found or something, which sucks.\n\nAnyway, our options (AFAICT) are:\n- Leave it this way\n- de facto revert CHEF-2923 (I think `knife upload` would provide the desired behavior, as long as the user isn't using the cookbook overlay feature which is unsupported in ChefFS, which is another discussion altogether).\n- Only accept path-type arguments to `knife cookbook upload` (like `knife upload`) so we know which cookbooks we can ignore based on user input. I really prefer taking paths as arguments over \"finding an item in the chef repo\" approach that knife takes (free tab completion!), but this makes it hard to implement the dependency options that `knife cookbook upload has` (without causing the same issues all over again, at least).\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7333342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/7333371", "body": "@lamont-granquist Fat fingered the submit button, view it on GH to see the full comment.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7333371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/7333441", "body": "Agree about the todo. Will clean that up.\n\nLamont, can you create an issue on chef-rfc for killing off the overlay stuff and cc client-eng? I'm on phone internet for the rest of the day...\n\n> On Aug 10, 2014, at 3:57 PM, lamont-granquist notifications@github.com wrote:\n> \n> 'k you might want to just note that:\n> # The cookbook's name as inferred from its directory (as a fallback for exceptions when the name in\n> # the metadata cannot be parsed).\n> \n> That is what it looked like to me from the code but I wasn't certain I was missing something. I think the TODO: about strict mode also confused me a bit...\n> \n> I would vote to rip out cookbook overlays. Its largely used by a small nice of chef-solo users, and if they want to compose their cookbook repos from multiple sources I think they could script it up themselves. I really don't think its worthwhile. It'll hurt a few people but I think we need to rip the bandage off.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7333441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/7724875", "body": "Modules and inheritance are about the same IMO, the pitfalls (dependency between parent and child and parent). Generally modules are preferred for adding a specific behavior (exemplified by the Enumerable module) and subclasses are for customizing a thing where the bulk of the behavior is provided by the parent.\n\nThe best composition is using classes to provide specific behaviors, but the downside is that it can be cumbersome to pass all the data you need between the various constructors and manage all the individual objects. \n\nAnyway, this is all written without seeing the code, I can take a look tomorrow and give specific advice. \n\n> On Sep 9, 2014, at 6:24 PM, Tyler Ball notifications@github.com wrote:\n> \n> I'm actually fine with leaving this as a module since it exemplifies composition over inheritence. @danielsdeleo, I heard you were the Ruby master. What do you think about leaving it is a module versus converting it to a parent class?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7724875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/7735001", "body": "`deps` does lazy loading, and you should use it whenever you can (you can't use it if you reference a constant from that file in the class body). Lots of files in chef unfortunately have fairly deep `require` trees; combined with the fact that knife's design requires pre-loading all the knife commands, this leads to ruby doing a lot of unnecessary work every time you run `knife`.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7735001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "someara": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/468930", "body": "sure. gotta handle some unrelated stuff first, but I'll get around to it farily soon\n\n-s\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/468930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/616702", "body": "Daniel,\n\nunfortunately, I don't have the bandwidth right now to fix this up.\n\ncan you point me to the tests, so when I get around to it I can figure out why its expecting magic sparkles?\n\nhttp://tickets.opscode.com/browse/CHEF-1772\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/616702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jesseproudman": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/478868", "body": "Hi Dan,\n1. We've gotten Jim to submit the appropriate paperwork and I see he's now listed as a contributer.\n2. I believe we're already using your bootstrapping scripts, no?  See: http://github.com/blueboxjesse/chef/blob/CHEF-1715/chef/lib/chef/knife/bluebox_server_create.rb\n3. Ian went through and converted all tabs to 2 spaces.  It looks like this affected a significant number of files, so I'm not sure how you'd like us to handle this.\n\nThanks!\n- Jesse\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/478868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/491628", "body": "Hi Dan,\n\nI think I see where you were confused on the bootstrap component.  We've removed those redundant files.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/491628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/500051", "body": "Any update here?  We'd love to see this included by RubyConf.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/500051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/828747", "body": "This is deprecated by CHEF-2020.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/828747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "nz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/543859", "body": "Handy! It'd be nice to see these variables added to the knife bootstrap command as well, for completeness' sake.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/543859/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "morgoth": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/560934", "body": "ticket: [CHEF-1891](http://tickets.opscode.com/browse/CHEF-1891)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/560934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1116621", "body": "In chef 0.10.0 this still shows wrong warning message.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1116621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "abecciu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/673708", "body": "+1 ! I was doing exactly this in my local repo.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/673708/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/721468", "body": "Thanks for the comment! Not sure if that would be super useful. In most cases I think you'll have most servers directly accessible and only few behind a gateway. At least that's my case and a few others I know.\nNevertheless, it's something super easy to implement, so I'll just go ahead and do it.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/721468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/365536", "body": "Whoo hoo!!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/365536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "lum": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/726313", "body": "These updates to knife also require the latest version (0.5.1) of fog.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/726313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sometimesfood": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/731809", "body": "Fixed by bde38e935d4fde0e7c52f8d7dbcb20f3c6212b8a.\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/731809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "nertzy": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/764279", "body": "Oops, it looks like my editor also removed a lot of whitespace... I'm going to re-do this...\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/764279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/764292", "body": "OK, fixed.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/764292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3766367", "body": "I believe that I already have.\n\nSee http://tickets.opscode.com/browse/CHEF-2751\n\nPlease find my name at http://wiki.opscode.com/display/chef/Approved+Contributors as #489\n\nIs there anything else I need to take care of?\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3766367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jdonagher": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/800365", "body": "is this request under consideration? chef with VPC at the moment is very close, but not quite. This pull req would be useful.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/800365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3112609", "body": "I am listed in http://wiki.opscode.com/display/chef/Approved+Contributors (contributor 371)\nThis is minor enhancement on top of the work of abecciu pertaining to CHEF-1896\nDo you want me to open a separate ticket?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3112609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "matellis": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/800435", "body": "I've been in touch with the opscode team but I haven't got much sense of which release, if any, it will make. I think they're pretty busy with getting ready for 0.9.14/0.10 releases. PS: See http://tickets.opscode.com/browse/CHEF-1590 for the official position, if it does get included in a release we should see it there first.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/800435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "icy": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/1073321", "body": "Thank you :)\n\nI've signed the contributor agreement (using the real name Anh Ky Huynh). My 'username' on the ticket system is \"icy\". \n\nRegards,\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1073321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "mgrubb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/1092215", "body": "I haven't heard anything from the maintainers on this, I thought that I had followed the proper procedure.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1092215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1191349", "body": "@danielsdeleo Dan, any feedback on getting this change integrated with the chef mainline?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1191349/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "seth": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/1101342", "body": "I merged this in 52ab7df1d8ee6171a which also includes a bit of refactoring, some tests, and a fix on top.\n\nNote: s[-1] == \"\\n\" is not what you think.  \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1101342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1242577", "body": "Have you created a ticket for this feature?  CHEF-XXXX?  If not, do that and put your commits on a CHEF-XXXX branch.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1242577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/915979", "body": "I have some reservations about doing that -- or about how we would do that. I don't want installing activesupport to be a requirement for doing Chef dev work or testing in general.\n\nI also want to be sure that we only run with activesupport in isolated configurations. We need to be careful not to pollute our test environment with the activesupport monkey patches so as not to begin relying on them accidentally.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/915979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/2329815", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2329815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/2329821", "body": "Probably worth retrying any 5xx not just 500.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2329821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/2329825", "body": "maybe add status code and message received?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2329825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/2329828", "body": "If the file doesn't exist, you still may not be able to write it, right? Maybe it doesn't matter since you catch that later on...\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2329828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/2329842", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2329842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/2329846", "body": ":100: \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2329846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/2329858", "body": "Do we care that we aren't sending the validator flag? It is possible for an admin to turn themselves into a non-admin validator (I think) and and admin user in shef would reasonably expect to be able to create a validator. So I think we might want to add that?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2329858/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/2329882", "body": "That the retries are layered would be worth a comment. I didn't realize that and I think it would be useful to keep track of.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2329882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/chef/chef/pulls/comments/35889", "body": "Perhaps use !@new_resource.additional_remotes.empty? here\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/35889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2133191", "body": "Since the JSON that gets decrypted is always wrapped, we do not have to worry about automagic inflation of the parsed JSON into classes. Is that right?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2133191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2254917", "body": "Would be worth adding a test that does auto-inflation while we are here.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2254917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2338948", "body": "ruby doesn't play named argument, this should be `client.save(true)`\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2338948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2395473", "body": "In terms of a test of three items, why not assert the entire order?\n\nCan a node instance have a nil name?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2395473/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2395854", "body": "I guess then it would be worth adding a test for the name is nil case.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2395854/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2416303", "body": "is it worth adding the validator flag while you're here?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2416303/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2416308", "body": "Just for my own edification, why respond to `:[]` over `is_a?(Hash)`? \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2416308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2416325", "body": "I'm confused by these changes which seem unrelated.  But I gather that you're removing nop code so :)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2416325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2416437", "body": "QUACK :)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2416437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2568788", "body": "Here's what we have in OSC:\nhttps://github.com/opscode/chef_objects/blob/master/src/chef_regex.erl#L65\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/2568788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3413690", "body": "Would it make sense to add code here that detects Chef version and issues a warning if 12?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3413690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3413744", "body": "I know it's lame, but I find `!if` sooo much easier to read.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3413744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3413762", "body": "s/has been /is/\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3413762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3413829", "body": "not really relevant to this PR, but I find the DRYing up of specs this way to lose the point of the test and make them harder to read. We are going from completely clear to abstracted and I think that's the wrong thing for tests.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3413829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3413854", "body": "WFM\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3413854/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3898712", "body": "Some comment here on why class variable could be useful. Given that the original comments did not change with the change to a class variable...\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/3898712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/4786362", "body": "I think \"missing cookbooks\" be more precise since the referenced cookbook version may never have been uploaded in the first place.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/4786362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/6991936", "body": "Just curious, is there not a `mkdir -p` equivalent?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/6991936/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "pushcx": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/1212955", "body": "This form requires an address, but I'm homeless.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1212955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "akzhan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/1233140", "body": "Already merged.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1233140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2615738", "body": ":cake:\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2615738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/75934", "body": "Are You ran specs on hotfix?\n\nTests are broken in my environment.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/75934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/76461", "body": "Patch http://github.com/akzhan/chef/commit/e5daa8ce65f8b6b58fe2c5e1eb30a2cfb9324f91\n\nIt resolves http://tickets.opscode.com/browse/CHEF-1194\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/76461/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/76762", "body": "Glad to see it :)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/76762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/77758", "body": "This code breaks specs because we need to replace \nChef::Log.debug \"loading from cookbook_path: #{File.expand_path(Chef::Config[:cookbook_path])}\"\n\nwith\nChef::Log.debug \"loading from cookbook_path: #{Array(Chef::Config[:cookbook_path]).map { |path| File.expand_path(path) }.join(', ') }\"\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/77758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/77760", "body": "issue and patch will be provided in minutes.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/77760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/77763", "body": "http://github.com/akzhan/chef/commit/41bf4a100db91cb48b3c9fc5ed951f649a032aa3\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/77763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/77764", "body": "http://tickets.opscode.com/browse/CHEF-1208 assigned to You directly.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/77764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/89892", "body": "File::Separator should be wrapped by Regexp.escape.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/89892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/90130", "body": "Take a note that we must use \"\\.\" instead of \".\"\n\n\".\" means - any symbol.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/90130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/90156", "body": "Wow, it's something new for me :)\n\nThanks, Daniel, I should test it by myself :)\n\nBut I think that \".\" notation always less readable than \"\\.\" because we need to remember about changed parsing behavior inside character classes.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/90156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/90234", "body": "Additional fix here:\nhttp://github.com/akzhan/chef/commit/0af3f6f008e352876dbc9e66b8ccdb350d48fa48\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/90234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/99665", "body": "Where are service start dependencies? \n\nChef-Server and WebUI should depend on Chef-Solr-Indexer..\nChef-Solr-Indexer should depend on Chef-Solr..\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/99665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/107188", "body": "very strange... I ran git clone http://github.com/opscode/chef.git now on new place.\n\nIt's cloned OK.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/107188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/116089", "body": "Looks like first serious update from 0.9.0 :)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/116089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/123756", "body": "Wow... interesting bug of popen4 block syntax...\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/123756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/123758", "body": "By the way, I cannot reproduce unclosed streams using block syntax.\n\nI use ruby 1.8.7 EE.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/123758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/123970", "body": "Ok, I read it later. Really, ShellOut looks more robust.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/123970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/307512", "body": "Ruby doesn't define hash key ordering rules :)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/307512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/1169554", "body": "Escaping trouble again and again.\n\nPlease reuse Shellwords.escape method from ruby stdlib.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1169554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/1169772", "body": "Shellwords exists in ruby 1.8.6 too.\n\nI should note that in earliest versions of Ruby it is special module.\n\n``` ruby\nrequire 'shellwords'\nShellwords.escape(param)\n```\n\nRuby 1.9 simply includes it into String class by default, so cross-version pattern is to use Shellwords instead of.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1169772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/1169872", "body": "I'm wrong!\n\nSee here a right implementation:\n\nhttps://github.com/guns/net-scp/commit/af7c65136a3af8286fbdadb6e53b93782e53b906\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1169872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/1169895", "body": "Knife specs create test server using thin. So they should be updated too.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1169895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/1169907", "body": "See here, for example: https://github.com/opscode/chef/blob/master/chef/spec/functional/knife/exec_spec.rb\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1169907/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/1252370", "body": "Are you sure? what is `ruby` variable?\nI think you should rewrite this line like:\n\n``` ruby\ngem 'thin', :platforms => :ruby\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1252370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/1253891", "body": "I have seen that you fixed cowboy's typo ten hours ago. :) It just was not pushed when I comment for I suppose.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1253891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/1264696", "body": "Looks like Chef::JSONCompat should be replaced with Yajl everywhere.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1264696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/1299979", "body": "@laradji It's very bad requirement. What prevents Opscode to open this issue by itselves?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1299979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/1307393", "body": "@btm, you're right.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1307393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "ches": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/1281836", "body": "Any interest in discussing this?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1281836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "skippy": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/1302692", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1302692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "patcon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/1318603", "body": "Haven't reviewed the patch for different approaches, but FYI:\nhttps://github.com/mitchellh/vagrant/pull/362\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1318603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1436016", "body": "Hey bnferguson, the other thread's pull request was accepted, so this is in already :)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1436016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1439650", "body": "Ugh. Sorry, bnferguson. You're 100% correct. Thought I was still in the Vagrant queue when I followed the link, plus having just under a billion browser tabs open doesn't help :)\n\n+1!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1439650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3100931", "body": "Ah, thanks dude :)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3100931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/2899457", "body": "Was this necessary? It seems to break any vagrant v1.0.7 plugins installed with `vagrant gem install myplugin` if they require chef (particularly `vagrant-librarian`), since the installer uses an embedded `net-ssh` v2.2.2\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2899457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "ghost": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/1331044", "body": "urgh, that doesn't look right...\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1331044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "skddc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/1396122", "body": "Works like a charm. Thank you!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1396122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "bnferguson": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/1435936", "body": "+1 This would be pretty nice as someone who'd like to start on chef-solo and eventually move to the hosted platform.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1435936/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1436035", "body": "@patcon Which one? The one in vagrant? That certainly is helpful but for actual production deploys it doesn't help me at all. :/ Or is there one I'm missing in chef?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1436035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1441559", "body": "@patcon - ha, no worries!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1441559/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jsulinski": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/1715248", "body": "Sorry, github default fork names fail. Re-submitting. \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1715248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "fooforge": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/1753748", "body": "Not working with a single argument, will rework this now.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1753748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "octplane": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/1940074", "body": "Closing.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1940074/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "smith": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/1944354", "body": "See https://github.com/opscode/chef/pull/144. I'll get the CLA filled out shortly.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1944354/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/1972287", "body": "CLA signed: https://secure.echosign.com/public/viewAgreement?aid=IUQM764N38363Q&eid=IURXIBG4ZK7Y4D&\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/1972287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "chrislloyd": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/2218964", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2218964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "andreacampi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/2303446", "body": "Updated (see http://tickets.opscode.com/browse/CHEF-2660?focusedCommentId=19840&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-19840 ).\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2303446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2303776", "body": "Update as requested by @btm\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2303776/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/621116", "body": "That's great, this was one of my pet peeves, thanks for taking care of it.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/621116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/1797826", "body": "Yes! That's a very welcome change! (thumbsup)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1797826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/2189598", "body": "Nice!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2189598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "iafonov": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/2321362", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2321362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kpumuk": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/2350821", "body": "[https://github.com/opscode/chef/pull/163](Pull request 163) seems like a better idea to fix the problem.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2350821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jkeiser-oc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/2476732", "body": "I have made it so that we only call cmd.exe when we need to, and so that we throw ENOENT when we can't find the file (and aren't using the shell).  This gives parity with Unix, though we're not as exact as the Ruby win32/win32.c code that decides whether to call cmd.exe or not.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2476732/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "aabes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/2610462", "body": "I believe Dell has signed the corporate CLA...\n\na.\n\n-----Original Message-----\nFrom: Bryan McLellan [mailto:reply@reply.github.com] \nSent: Wednesday, November 02, 2011 5:49 PM\nTo: Abes, Andi\nSubject: Re: [chef] Chef 2540 (#134)\n\nThank you for taking the time to help make Chef better! We require a Contributor License Agreement (CLA) from contributors to help protect all Chef users. It is easy to complete one online. Instructions to do so are on our wiki, which is linked below.\n\nhttp://wiki.opscode.com/display/chef/How+to+Contribute\n\nhttp://tickets.opscode.com/browse/CHEF-2540\n\n## \n\nReply to this email directly or view it on GitHub:\nhttps://github.com/opscode/chef/pull/134#issuecomment-2610258\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2610462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kovyrin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/2747647", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2747647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2758278", "body": "+1\nThis happened today for our server for no apparent reason: expander got into a die,restart,die loop.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2758278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "mhorbul": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/2766585", "body": "CLA is signed and sent.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2766585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "othatbrian": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/2767154", "body": "Nine months for a response of: jump through these hoops and we might accept your input?  No thanks (especially for the addition of \"unless File.directory?(vendor_path)\" to one line of code.  I've pointed out a problem and how I fixed it.  How you use that information is your prerogative; I'm not interested in spending my time filling out license agreements to help Opscode further their own product.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "VictorLowther": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/2767350", "body": "I should actually be on the Dell corporate license agreement.\nOn Nov 16, 2011 2:05 PM, \"Bryan McLellan\" <\nreply@reply.github.com>\nwrote:\n\n> Thank you for taking the time to help make Chef better! We require a\n> Contributor License Agreement (CLA) from contributors to help protect all\n> Chef users. It is easy to complete one online. Instructions to do so are on\n> our wiki, which is linked below.\n> \n> http://wiki.opscode.com/display/chef/How+to+Contribute\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/opscode/chef/pull/156#issuecomment-2767073\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2767350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3265961", "body": "Mostly fixed, will open specific pull requests.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3265961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3265991", "body": "Opened CHEF-2835 to track this issue as well.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3265991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "webframp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/2771136", "body": "I followed the steps there so one should already be in place. I have one individually and one under Heavy Water. Let me know how else I can follow through if I missed a step.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2771136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "ktheory": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/2776508", "body": "Thanks Bryan. I made the patch on behalf of my company, Kickstarter. I'm having our lawyer review the CLA. Should have an answer in a few days.\n\n-Aaron\n\nOn Nov 16, 2011, at 3:04 PM, Bryan McLellan wrote:\n\n> Thank you for supporting Chef! Our process has a couple prerequisites before we can merge your contribution. We need to ensure you've completed a Contributor License Agreement (CLA) and a ticket on our ticket tracker for the release workflow. Please take a moment to review the below wiki page for the appropriate steps:\n> \n> http://wiki.opscode.com/display/chef/How+to+Contribute\n> \n> The Opscode Team\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/opscode/chef/pull/149#issuecomment-2767057\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2776508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/2790646", "body": "We just sent in the CLA.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2790646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3765875", "body": "Whoops, I dropped the ball.\n\nI just created ticket http://tickets.opscode.com/browse/CHEF-2904\n\nI don't seem to be able to resolve the ticket in JIRA.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3765875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "robdimarco": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/2781067", "body": "Sorry, forgot to submit the CLA.  That is done now.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2781067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "pronix": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/2928399", "body": "+1\nand for ssh-user too\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2928399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "pcn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/2955891", "body": "It looks like this is duplicate functionality of another contribution that already went into 0.10.6, so this can be dropped.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/2955891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "MikeSofaer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/3054343", "body": "Hi, I'm curious what's holding up merging this and fixing the submodule bug.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3054343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "karmi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/3097586", "body": "Hi Bryan, sure, I'll check it out.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097852", "body": "Bryan, filed the http://tickets.opscode.com/browse/CHEF-2796 ticket, is there anything more I have to do?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097989", "body": "Yeah, I did that already, no problems with that. Now, should I send the PDF somewhere or...? Sorry :)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3097989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3120243", "body": "Hi, yes, the paperwork arrived, \"resolved\" the ticket at http://tickets.opscode.com/browse/CHEF-2796\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3120243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "thinkerbot": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/3099519", "body": "Please just rewrite it yourself.  It's more than I care to do, for a patch > 1 year old.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3099519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "millisami": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/3106841", "body": "Though this patch didn't get accepted, is this issue resolved in official chef?\nI'm also going through this error.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3106841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jesserobbins": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/3110283", "body": "Hi there... this sucked and I'm sorry.  \n\nHere's what happened:\nWe have been using our own ticketing system to handle pull requests to ensure we have CLAs in place for all contributors & merged code since the start of the project.  That process has worked well for the most part.  \n\nWe screwed up by not promptly explaining this in pull requests that without an associated Opscode ticket.  A ton of requests piled up in this category, including this one.  \n\nWe fixed this from a process standpoint (we now comment on pulls submitted without a ticket) and are working through the backlog to let people know why their requests got stuck.\n\nI'm sorry that we wasted your time & energy here.  We have fixed the process so this won't happen again.  Please let me know if there is anything I or Opscode can do to make it up to you.\n\nI hope that you will consider contributing again in the future.  \n\nSincerely,\n _Jesse Robbins_\n Cofounder & Chief Community Officer\n www.opscode.com\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3110283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/issues/comments/3212551", "body": "Hi.  I'm sorry that even small patches (like a spelling error ;-) require a CLA & a ticket to merge.  I know it is frustrating and probably seems stupid at first glance.\n\nWe have to do this to ensure the integrity of the project so it is safe for everyone to use, contribute to, and build on.  \"Every line of code, without exception\".\n\nUpside to going through the hoops the first time is that you will get love & attribution from Opscode and our community, and the projects ultimately get more users & committers because the project is solid.  \n\nWe are working on improvements to the process to reduce friction.  \n\nThanks,\n-Jesse\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3212551/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "andrewle": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/3117993", "body": "Thanks, Bryan. I've completed the CLA and created a ticket related to this pull request: http://tickets.opscode.com/browse/CHEF-2802. FYI, I wasn't able to figure out how to mark the ticket as resolved.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3117993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "arp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/3134716", "body": "Just posted: http://tickets.opscode.com/browse/CHEF-2808. It will probably take some time until paperwork gets approved though.\n\n@millisami hope that eventually gets merged. In the meantime, you can probably just fork&merge in order to get rid of that issue.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3134716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jfoy": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/3168593", "body": "We would love to see the deprecation warnings under Rubygems 1.8 addressed. We're heavily reliant on Chef, we now have other third-party dependencies that are pulling us to current Rubygems, and the volume of resulting warnings out of Chef has become a significant nuisance. \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3168593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "directionless": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/3254378", "body": "Hi there!  I did submit a CLA before submitting this pull request, though I did not submit a ticket. I will investigate that process.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3254378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "gmcmillan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/3326938", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3326938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "gaffneyc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/3333862", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3333862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "maxrabin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/3367082", "body": "See https://github.com/opscode/chef/pull/213 instead\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3367082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "mbj": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/3373488", "body": "Also opened a ticket: http://tickets.opscode.com/browse/CHEF-2849?focusedCommentId=21322\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3373488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jasonjackson": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/3426816", "body": "It looks like this isn't the correct fix.   A quick look at the code seems like this is covered in useradd_options and not in universal_options.\n\nopts << \" -m\" if updating_home? && managing_home_dir?\n\nMaybe its better to rework that area of the useradd class if those options aren't being merged in correctly..  \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3426816/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "fujin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/3468835", "body": "this sounds very 12factor related :)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3468835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/634045", "body": "awesome. do want for 0.10.x.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/634045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "mikehale": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/3469174", "body": "We are rather obsessed with our environment variables :)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3469174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "mmzyk": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/3486800", "body": "I've made some changes around mode so that it would work properly in the windows environment. Would appreciate a review, especially from @jkeiser @schisamo \n\nSee last two commits; Update functaion tests to ahve mode and Test around mode in windows.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3486800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/915967", "body": "Yeah, that's a good idea.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/915967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/915990", "body": "Currently, as written, the rake task looks for active support and fails quickly if not found with a message to load it. That might be a sufficient compromise.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/915990/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/2996332", "body": "I may have pulled these same lines out in my branch, the run_id branch, but this is no big deal. I did miss the tests though, so nice catch.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2996332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "reset": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/chef/chef/issues/comments/3765858", "body": "I have signed the CLA - Jamie Winsor and also the CCLA - Riot Games\n\nMy ticket number is the same as my topic branch name: http://tickets.opscode.com/browse/CHEF-2860\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/issues/comments/3765858/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "brianmario": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/23443", "body": "you should check out yajl-ruby, then you could parse the json right off the IO directly ;)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/23443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dstrelau": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/99817", "body": "Typo! (or more likely, copy & paste fail)\n\nThis needs to be '/usr/bin/chef-server-webui'\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/99817/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "ktlacaelel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/107172", "body": "kazu@utopia:~/dev/git$ git clone http://github.com/opscode/chef.git\nInitialized empty Git repository in /Users/kazu/dev/git/chef/.git/\ngot ec5e8c920b9c189ca538b8260b23a14d0c3be73c\nwalk ec5e8c920b9c189ca538b8260b23a14d0c3be73c\nGetting alternates list for http://github.com/opscode/chef.git\ngot 7c5abfc7684076f52edaf5d1510dcb21cfbad3fa\nGetting pack list for http://github.com/opscode/chef.git\nGetting index for pack 0249f3c8a2e36069e66fcf611b43d1c1040bcba3\nGetting index for pack be92da8033253094f51878e4baf3311395e52f26\ngot 1a21212c4778ad530ff9a7e3c695ea347acd2deb\ngot 187678899f87a6bb86f53a5b46b77eb4be1b6bd6\nGetting index for pack 499b3df9c7ce8a74bb0c7d533f43308f37f3f87e\ngot 523117f29e64dc7ae8130a5da451a8f60f497d32\nGetting index for pack acad5c1bf4f30d415b1ae1109b9d685bc6eda572\ngot 64abd3b2b43404cac169aed2182abfc3109dc176\ngot 5d3b5aeee17dda95bd14da6e65872b157554af2b\nGetting index for pack 35c5f1400e458ffc190adf71f6c97c5ba6b34afc\nGetting index for pack 8bb298cb0ce7d50b8ddd4060b55da19c674fbd06\nGetting index for pack 3b0db803ed6563df4289d832d38b035677f4de9a\nGetting index for pack 09ee54e010bc664244dc38180cea502f4735802d\nGetting pack 0249f3c8a2e36069e66fcf611b43d1c1040bcba3\n which contains 6ced5f1d985d47d49f39b7af10e01c295eefc2a9\nerror: Unable to get pack file http://github.com/opscode/chef.git/objects/pack/pack-0249f3c8a2e36069e66fcf611b43d1c1040bcba3.pack\ntransfer closed with 18096930 bytes remaining to read\nerror: Unable to find 6ced5f1d985d47d49f39b7af10e01c295eefc2a9 under http://github.com/opscode/chef.git\nCannot obtain needed object 6ced5f1d985d47d49f39b7af10e01c295eefc2a9\nwhile processing commit ec5e8c920b9c189ca538b8260b23a14d0c3be73c.\nfatal: Fetch failed.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/107172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/comments/107174", "body": "Maybe I should have posted this on the issue tracker.\nAnyway.. I just wanted to point out that the version _0.8.16_ can't be checked out!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/107174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/comments/107433", "body": "It was indeed an old git's behaviour!\nI updated to the newest git version and it clones smoothly!\n\nThanks guys!\n\nkazu@utopia:~$ cd old_git && ./git --version\ngit version 1.6.4.4\nkazu@utopia:~/old_git$ git --version\ngit version 1.7.1.1\n\nWith the newer version, it didn't output all those hashes and cloned smoothly!\n\n: )\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/107433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dolzenko": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/115357", "body": "I believe this should be `FileUtils.rm_rf` since otherwise the current path is not removed (`rm_f` can't remove dirs) and the release is linked under current/ dir (i.e. ending up with dirs like /srv/myapp/current/20100723075228)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/115357/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "14to9": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/159533", "body": "Hi guys, \n\nLooks like AWS/EC2 will return nil for server.state under some ghosted instances, breaking line ec2_server_list.rb:73.  A simple nil check (per the previous values) resolves it.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/159533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "damm": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/192064", "body": "Meh enough newline changes?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/192064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "kennethreitz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/323409", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/323409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "brucek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/333746", "body": "Is the \"the UID / GID negative number problem\" platform-specific?  On OSX, the negative_complement call causes issues with Active Directory integration (just fails an causes chef to come to a crashing halt).  See CHEF-1939 ( http://tickets.opscode.com/browse/CHEF-1939?page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel ) for info.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/333746/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "xdissent": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/499221", "body": "It looks like this breaks the deploy resource (and deploy_revision) because it can't find the new additional_remotes method. See: https://github.com/xdissent/chef/commit/0f81b28df8eb9558f29fed6466e871daf10f358e\n\nI'll file a bug ticket about it in a little while.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/499221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "benjaminws": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/621699", "body": "beautiful\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/621699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "svanzoest": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/624518", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/624518/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "pmorton": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/713156", "body": "This is an incorrect implementation. It looks like this will find the first space in the command and assume that that is the executable to start. In truth, this should be the first argument enclosed in quotes or the first white space or the whole command.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/713156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/comments/714282", "body": "Hey John. I will repro this again an send along the stack trace The long and short of it is that if you reference and exe with a space in the name, it tries to execute everything before the space as the program.  I.e. \"c:\\program files\\program.exe\" fails telling the  \"c:\\program\" cannot be found. I have quotes around the whole string. now as you point out, I can wrap it in cmd /c and it works fine. \n\nLet me take a deeper look and see if I can unpack what is happening. I will reassign the bug to me for the moment and try to investigate further.\n\nCheers,\n\nP\n\nOn Nov 13, 2011, at 11:20 AM, \"John Keiser\" reply@reply.github.com wrote:\n\n> I think it will do the right thing.  The else block will only be called if there are no special characters in the line, which includes quotes, so using everything up to the first whitespace will work.  More complicated parsing could work as well, and would even allow us to run more commands without cmd.exe--it just requires writing the Windows command parser in Ruby :)\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/opscode/chef/commit/2efbafeae9ec09a7f7f8c77009bd6994d7706b03#commitcomment-714273\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/714282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "mmzoo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/853489", "body": "I like this one! Nice idea.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/853489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "sdelano": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/915960", "body": "@mmzyk Should we add ActiveSupport to the dev/test group of the Gemfile to ensure that it is on the system for dev/test environments?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/915960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/916119", "body": "@seth That makes sense. I re-read the commits and see that there is an active-support specific rake task. Let's make sure we get that one into CI.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/916119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/1713024", "body": "@tylercloke This modification simply clears the local instance variable `@environments` from the current page being rendered. In this case, it is the login page. The reason the `@environments` variable is set, however, is that every controller action will call the `#load_environments` method and make an API call to the Chef server because of the defined `before filter`:\n- [#load_environments](https://github.com/opscode/chef/blob/10-stable/chef-server-webui/app/controllers/application.rb#L116-118)\n- [before filter](https://github.com/opscode/chef/blob/10-stable/chef-server-webui/app/controllers/application.rb#L28)\n\nInstead of just clearing the instance variable after the API call is made, we should just skip the before filter when executing the login action on the users controller.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1713024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "zimbatm": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/945680", "body": "This operation is not atomic, if the web server links to release_path, the static files will be unavailable for that time.\n\nMoreover, if the operation fails, the old link is not restored (or maybe in a later rollback phase).\n\nIn POSIX systems, move is atomic,\n\n1) ln -s $current_path /tmp/future_release\n2) mv -T /tmp/future_release $release_path\n\nIf 1) fails, release_path still links on the old release\nIf 2) fails, release_path still links on the old release\n\nThe -T option ensures that the symlink is not moved inside the old release\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/945680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "josephholsten": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/1258527", "body": "Sure could use this in a beta gem!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1258527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/1700385", "body": "Is there a particular reason this is still constrained as `<= 1.6.1`? Vagrant HEAD is currently locked at `~> 1.6.6` and so is not compatible.\n\nIf there is a specific reason this is locked to `<= 1.6.1`, could it please be added in a comment?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1700385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/4889504", "body": "yay!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/4889504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/4889523", "body": "is there a tracking ticket for net/http in ruby?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/4889523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/4890045", "body": "awesome, I'll follow that\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/4890045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/5451499", "body": "Yow, modifying these options does not play nice with the frozen [`ChefServerWebui::ApiClientHelper::DEFAULT_REQUEST_HEADERS`](https://github.com/opscode/chef-server-webui/blob/master/lib/chef_server_webui/api_client_helper.rb#L31-L33), which is passed via [`client_with_actor`](https://github.com/opscode/chef-server-webui/blob/master/lib/chef_server_webui/api_client_helper.rb#L50) into [`ChefServer::Rest.initialize`](https://github.com/opscode/chef-server-webui/blob/master/lib/chef_server/rest_client.rb#L39) which calls `Chef::REST`.\n\nLooks like this needs to `.dup` the options.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/5451499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/5451615", "body": "[CHEF-5064](https://tickets.opscode.com/browse/CHEF-5064)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/5451615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "hosh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/1267396", "body": "Stub out Chef::JSONCompat.from_json to raise an error and then hunt down everything?\n\n(That's assuming the testing code doesn't mock out #from_json :-/ )\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1267396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "therobot": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/1299643", "body": "This template will not get picked up during bootstrap because the `chef-full.erb` script pulls in http://s3.amazonaws.com/opscode-full-stack/install.sh which in turn seems to do:\n\n```\n \"ubuntu\")\n    case $platform_version in\n      \"10.10\") platform_version=\"10.04\";;\n      \"11.10\") platform_version=\"11.04\";;\n      \"12.04\") platform_version=\"11.04\";; <----------- WHY?\n```\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1299643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "laradji": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/1299923", "body": "Good catch therobot, this one is for opscode.\nYou need to open a bugreport on opscode jira : http://tickets.opscode.com/\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1299923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "gilles": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/1340866", "body": "This breaks on debian squeeze from 0.10.8:\n\n[Wed, 16 May 2012 20:41:11 -0400] INFO: Processing mdadm[/dev/md127] action create (cassandra::default line 36)\n[Wed, 16 May 2012 20:41:11 -0400] ERROR: mdadm[/dev/md127](cassandra::default line 36) has had an error\n[Wed, 16 May 2012 20:41:11 -0400] ERROR: mdadm[/dev/md127](/var/chef/cache/cookbooks/cassandra/recipes/default.rb:36:in `from_file') had an error:\nmdadm[/dev/md127](cassandra::default line 36) had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process to exit with [0], but received '2'\n---- Begin output of yes | mdadm --create /dev/md127 --chunk=256 --level 0 --metadata=0.90 --bitmap=none --raid-devices 4 /dev/sdb /dev/sdc /dev/sdd /dev/sde ----\nSTDOUT: \nSTDERR: mdadm: '--bitmap none' only support for --grow\n---- End output of yes | mdadm --create /dev/md127 --chunk=256 --level 0 --metadata=0.90 --bitmap=none --raid-devices 4 /dev/sdb /dev/sdc /dev/sdd /dev/sde ----\nRan yes | mdadm --create /dev/md127 --chunk=256 --level 0 --metadata=0.90 --bitmap=none --raid-devices 4 /dev/sdb /dev/sdc /dev/sdd /dev/sde returned 2\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1340866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "ifesdjeen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/1384167", "body": "Thanks for the fix! \n\nIs there any schedule for the next version release? \nThat particular issue affects us heavily, so it'd be so great to have 0.10.11 or something.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1384167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "miketheman": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/1395686", "body": "I'm  running into a problem with this on 10.10, --bitmap=none and --grow seem to be the correct options.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1395686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/chef/chef/comments/1395763", "body": "This also breaks on other platforms - redhat, amazon linux.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1395763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/chef/chef/comments/1399736", "body": "Whoops. I meant to comment on the provider.\nAnd now that I've read [CHEF-3123](http://tickets.opscode.com/browse/CHEF-3123), which references this commit, I will update the ticket with my results.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1399736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "cgriego": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/1418414", "body": "@sdelano When I tried this version of the bootstrap template with 0.10.10, it failed to work because `chef_version` doesn't include the package revision prefix (`-1`). Is there a change somewhere else that goes along with this commit that resolves that issue?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1418414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "fnichol": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/1472503", "body": "Yeah!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1472503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "brandonmartin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/1472515", "body": "hooray!!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1472515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "leifmadsen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/1497523", "body": "This commit appears to have broken both file owner and mode return values (and possibly others).\n\nThis can be seen if you attempt to run the following:\n\n`p file(\"/etc/fstab\").owner`\n\nor\n\n`p file(\"/etc/fstab\").mode`\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1497523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "tarnfeld": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/1641965", "body": "Any chance someone at opscode can fix this? I don't really want to go through your whole contribution process and submit a ticket for one missing character.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1641965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/comments/1649168", "body": "Oh great, brilliant! Much appreciated. :)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1649168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "anthroprose": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/1659967", "body": "Thank you.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1659967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "timh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/1709120", "body": "That should be \":symlinks\", not \":simlinks\".\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1709120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/1709128", "body": "It would be nice to report cron time change in one aggregate field instead of split across multiple. IOW, have a before state of \"Mon,Wed,Fri 12:30\" and end_state of \"Tue,Thu 13:45\" instead of \"day\", \"hour\", and \"minute\" all showing up as individual changes.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1709128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/2025908", "body": "Why Is This Camel Case?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2025908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/2025916", "body": "Did you test? Does raw_http_request actually throw an exception or does it return error code (and no exception) if 500?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2025916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/2096358", "body": "Chef::Config[:file_cache_path] = @old_file_cache_path\n??\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2096358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "tylercloke": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/1746460", "body": "For the ones that still have state info, do we need to go through and add (or see if it is necessary to add) functionality to actually report properly as we did with file and service?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/1746460/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "retr0h": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/2075050", "body": "![](http://files-cdn.formspring.me/photos/20120811/n5025f396ada91_large.gif)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2075050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "mhoran": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/2177539", "body": "Why?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2177539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "matschaffer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/2179022", "body": "I ran into a Errno::EXDEV (Cross-device link) here since `/tmp` and `/etc` are on different volumes (omnios, probably stock but I didn't set up the global zone). Works if I create the buffer using `buffer = Tempfile.new(\"shadow\", \"/etc\")`\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2179022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/2179024", "body": "I had to add `unless universal_options.empty?` here to avoid an error if the password is the only change being applied.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2179024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/2179027", "body": "Not sure this `\"\\n\"` is necesary since `shadow_file.each` should include the original line breaks from the file. Though maybe stripping and re-adding them has some advantages?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2179027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/2185789", "body": "Do you know if this works for multiple groups? Looks like on omnios `usermod -G` wipes out the previous memberships with the last one specified. I have a sinking suspicion the behavior may be present on solaris2 as well.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2185789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/2185925", "body": "Hrm... just noticed that this approach doesn't seem to actually work since it writes the shadow file before the user is created. So when the useradd happens it seems to overwrite when happened here. The user ends up with a `*LK*` password until the 2nd client run.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2185925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "sersut": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/2266410", "body": "looks good to me...\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2266410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/3252234", "body": "Sounds good to me...\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3252234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/3252237", "body": "Guessed that...\n\nJust removed this line it was annoying me a little bit :)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3252237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/3418933", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3418933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/3559943", "body": ":+1: LGTM as long as Jenkins is happy :)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3559943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/3658112", "body": "I think \"Ohai\" should be chef... \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3658112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/chef/chef/comments/5720878", "body": ":clap: \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/5720878/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "adamedx": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/2504554", "body": "Comment is clear now, so I think we're good to go.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2504554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/2709945", "body": "Since I am new to Ruby, can you explain why this is not desirable? Do you mean to say that super should be called implicitly?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2709945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/2709956", "body": "No change here, just whitespace, right?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2709956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/2709960", "body": "this chef_client_service structure allows us to repurpose for other services, correct?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2709960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/2709966", "body": "Looks good to me Serdar!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2709966/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/3371146", "body": "So for the case where you want to have a sacl and check that it is preserved in the case where the file already existed (if the file doesn't exist then IMO then new file should not get a SACL from the source file), you can use Security.set_named_security_info from  chef/lib/chef/win32/security.rb. This is the analog of a system call described at http://msdn.microsoft.com/en-us/library/windows/desktop/aa379579(v=vs.85).aspx. You can manually test that you do this correctly by running your code against some file, then use powershell's 'get-acl -audit' command to view the sacl. Alternatively, use Windows explorer window to right-click on file, choose properties, security tab, click advanced button, then choose auditing. You should then see any aces you added to the sacl.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3371146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/3371159", "body": "I like sandbox dir idea -- something we should probably do for other file tests as well.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3371159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/3371275", "body": "The permissions should be inherited from parent dir according to the pain at http://msdn.microsoft.com/en-us/library/windows/desktop/aa374924(v=vs.85).aspx. If the parent dir (sandbox dir I think in this case) is \"normal,\" e.g. created at root of volume, it should get permissions listed below (output if icacls for the directory). This likely varies slightly across Windows versions, so you may need to do some mkdir's and then use icacls to test behavior on different versions. Defaults I see on my systems (domain joined and non-domain joined) are below. \n\nNote that if you're creating the sandbox dir somewhere special (e.g. $TEMP or $WINDIR, etc.), the permissions will be different and somewhat odd. I would keep the sandbox dir out of $TEMP because of this -- it will have inheritance rules that are different than what will hold true for most normal use cases.\n\nNon-domain joined:\nc:\\newdir NT AUTHORITY\\SYSTEM:(I)(OI)(CI)(F)\n          BUILTIN\\Administrators:(I)(OI)(CI)(F)\n          BUILTIN\\Users:(I)(OI)(CI)(RX)\n          BUILTIN\\Users:(I)(CI)(AD)\n          BUILTIN\\Users:(I)(CI)(WD)\n          CREATOR OWNER:(I)(OI)(CI)(IO)(F)\n\nDomain joined:\nc:\\newdir BUILTIN\\Administrators:(I)(OI)(CI)(F)\n          NT AUTHORITY\\SYSTEM:(I)(OI)(CI)(F)\n          BUILTIN\\Users:(I)(OI)(CI)(RX)\n          NT AUTHORITY\\Authenticated Users:(I)(M)\n          NT AUTHORITY\\Authenticated Users:(I)(OI)(CI)(IO)(M)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3371275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/3371295", "body": "So what does invariant mean here? Does this refer to attributes that apply to a resource that already exists? Or does this mean invariant between the source and destination? If the former, then conceptually sacl should be an invariant as well.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3371295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/3371314", "body": "One case that I'd like to see covered relates to a bug I \"fixed\" somewhat incorrectly: http://tickets.opscode.com/browse/CHEF-3467. Basically, we need to be sure that when either strategy is used, a file in which inheritance was not explicitly specified and no rights were specified gets the expected inherited aces from the parent dir at the destination location.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3371314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/3371349", "body": "Per comment at the top, I'm not sure that non-admin on Windows is very much of a priority. We give a scary warning now in Chef client saying that things might not work if you're not \"elevated.\" That is a true statement, which is why chef-client should essentially run as root (well, almost root, SYSTEM is a closer analog to root and we recommend running using a principal with membership in administrators group). There are things that will break, and things that appear to work but actually don't. Also, behaviors here could change with just a system patch as the OS vendor responds to security vulnerabilities, so the expected behavior could actually be volatile.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3371349/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/3371356", "body": "I'm curious -- what is the default strategy -- mv or cp?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3371356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/3372496", "body": "Yeah, I think globally sacl_present as an invariant makes sense. Do we read the sacl from the staging file and try to propagate to target? I think that would not be desirable. Main thing is not to blow away sacls on files that exist at target. But since Chef's file_access_control dsl does not let you specify sacl, we should not set sacl based on something that just might happen to exist on the staging file. Honoring that may actually be extra work (it might require explicitly clearing the sacl), so maybe I'm being pedantic (especially since very few people use sacl, it's just that when they do, it's a big deal). \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3372496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/3372501", "body": "So to be clear then permissions will be exactly the same after converge regardless of chosen strategy, correct?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3372501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/3372808", "body": "Yup, I used incorrect terminology describing a node instead of an operation on a resource, thanks for pointing out. :)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3372808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/4459139", "body": "Looks good to me -- the spec fails on my system when I revert your changes to the subcommand loader, so now we have a test to keep us honest.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/4459139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/5852877", "body": "Yup. :) I'll remove it. Thanks Julian.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/5852877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6508586", "body": "@sersut, you're sure you don't want to do the same gem pin you did for Ohai?\n `s.add_dependency \"wmi-lite\", \"~> 1.0\"`\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6508586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6953904", "body": "This is ok if Win32_UserAccount does not talk to Active Directory. We do need to look out for [OHAI-490](https://tickets.opscode.com/browse/OHAI-490). In that bug, the WMI provider was actually querying groups from Active Directory, causing a perf problem, particularly on a domain with lots of groups. We can probably do a few tests to see if it reaches out to AD...\n\nOtherwise, we can use a fix like the one done for [OHAI-491](https://tickets.opscode.com/browse/OHAI-490) in this commit: https://github.com/opscode/ohai/commit/0fa02ae5849f51f6caafdf422aa79409251458aa.\n\nhttps://github.com/opscode/ohai/commit/0fa02ae5849f51f6caafdf422aa79409251458aa\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6953904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/7360707", "body": "Don't we still need to update `provider_mapping.rb` so that this resource can only be used on Windows?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7360707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/7360913", "body": "\"Limited\" indeed. Ok, this is the only delta from previous changes, so looks good to merge to master.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7360913/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/7664573", "body": "Is there not already an exception for this?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7664573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/7664602", "body": "should this go in platform helpers, i.e. where we have windows? and windows2003? defined?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7664602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/7664640", "body": "Can we also say what version of powershell they have currently? It's also possible they have no powershell (it's installed by default, but systems can technically be configured to not have it, in practice no one does that.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7664640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jcam": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/2819452", "body": "don't need rest_client anymore\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2819452/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/2819474", "body": "since save_fileinfo gets run regardless of whether raw_file is nil, the etag and last_modified should be set to the current_resource's last_modified and etag when raw_file is nil\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2819474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/2819482", "body": "this probably shouldn't get run in why-run mode, and it used to only get run if the raw_file actually got content (i.e. if the file was changed)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/2819482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "nonflet": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/3085345", "body": "Thx for a fix const_defined. \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3085345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "krallin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/3133602", "body": "In Ruby 1.8.7, Module.const_defined only takes one argument, so this call raises an exception.\n\nNot familiar enough with Ruby / Chef to know if that's something that can be worked around without changing the code or the ruby version?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3133602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/comments/3133683", "body": "@danielsdeleo  Thanks!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3133683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "sethvargo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/3894948", "body": "@danielsdeleo @btm can we add this to docs somehow /cc @jamescott? Thank you for the detailed writeup :smile: \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3894948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6984773", "body": "@simonoff because Ruby 1.8 **is** still supported in Chef 11. We will (likely) drop support in Chef 12.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6984773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "okapies": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/3969086", "body": "You should also add `export https_proxy=...` on line 2.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3969086/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "alanthing": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/3986030", "body": "It'd be great to see documentation on this. It's pretty difficult to find clear examples of the newer/non-deprecated commands for shell_out/Mixlib::ShellOut.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/3986030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "skeptomai": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/4005714", "body": "If we want to ride the line, silly as it is, it would have been preferable to use 'Forked child process successfully reaped'.  I agree that there is 30 years of unambiguous precedent that has fallen short of deeply offending anyone for that long.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/4005714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "tcooke1957": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/4411428", "body": "With this fix there are still ansi codes showing up, examples below:\nRecipe: gsc::GSC_Bridge\u2190[0m\n- directory[D:\\GSC\\slot0C\\CCS\\GSC] action create\u2190[0m (up to date)\u2190[0m\n- directory[D:\\GSC\\slot0C\\GSCbackup] action create\u2190[0m\u2190[32m\n  - create new directory D:\\GSC\\slot0C\\GSCbackup\u2190[0m\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/4411428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "pauldavidgilligan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/4716602", "body": "Minor problem with the home path (11.8.0-1.ubuntu.12.04):\n\npgilligan@aws-ec2-ops-l01c-p:~$ knife data bag show tomcat_users deploy\nERROR: Errno::ENOENT: No such file or directory - file not found '~/.chef/encrypted_data_bag_secret'\n\npgilligan@aws-ec2-ops-l01c-p:~$ ls -l ~/.chef/encrypted_data_bag_secret\n-rw-rw-r-- 1 pgilligan pgilligan 695 Nov 27 11:29 /home/pgilligan/.chef/encrypted_data_bag_secret\n\nIf change to /home/pgilligan/.chef/encrypted_data_bag_secret works fine.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/4716602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jamescott": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/5262589", "body": "Should not have been removed. Checked in change that puts this back into the man page. Also for knife-user.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/5262589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "ekrupnik": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/5300185", "body": "Why did you disallow environment constraints when running `chef-solo`? If using tools like Vagrant or Test Kitchen, environments are useful and often would have cookbook version constraints...?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/5300185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "englishm": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/6114731", "body": "Why throw away the existing environment completely just to make sure `$HOME` gets set correctly? \n\nThis creates problems when trying to check out private repositories by using SSH agent-forwarding. Specifically: `$SSH_AUTH_SOCK` won't be set. A workaround is to search for the socket and re-set `$SSH_AUTH_SOCK` in an `ssh_wrapper` script, but this is not ideal. \n\nI would open a ticket for this on https://tickets.opscode.com/ but I'm currently getting a 502 Bad Gateway from nginx there...\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6114731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "zambon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/6160201", "body": "Won't this fail if the _fqdn_ is nil?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6160201/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "mcquin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/6419645", "body": "@danielsdeleo Is this what you were thinking?\n\nAlso I guess my push wiped out my previous comment regarding specs, so I'll answer it here: I don't think anything is actually getting written to these directories in these specs. The specs which do explicitly set the cache_path to a temporary directory.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6419645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6465891", "body": "Your thoughts, @lamont-granquist ?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6465891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/7478330", "body": "Is this more helpful, @serdar?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7478330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/7723467", "body": "I might add information on how to provide a secret. For example: \"To encrypt it, provide a secret via command line with --secret SECRET or secret file with --secret-file FILENAME.\"\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7723467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/7734512", "body": "That seems reasonable. :)\n\nOn Tuesday, September 9, 2014, Tyler Ball notifications@github.com wrote:\n\n> To clean this copy up, I was going to extract the logic to a module at\n> ...lib/chef/encrypted_data_bag_item/check_encrypted.rb. Then I can leverage\n> this logic from both the knife location and the DSL location. Thoughts?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/opscode/chef/commit/16ebcc76b68d3b50be83e8ee8b2774e7ca4c56b7#commitcomment-7724252\n> .\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7734512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "KostyaSha": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/6688003", "body": "+1 What is the problem with environments constraints? Looks like synthetic restriction.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6688003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "srenatus": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/6708568", "body": "Sorry for being picky, but can we ignore the possibility that file_path for whatever reason contains `\\\"` or other things causing havoc? If not, [shellescape'ing](http://www.ruby-doc.org/stdlib-1.9.3/libdoc/shellwords/rdoc/Shellwords.html#method-c-shellescape) might be preferable.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6708568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jmink": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/6800312", "body": "Did you mean to include this?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6800312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6800511", "body": "If a function returns an array in ruby you can directly assign it to variables.  For example:\na, b = \"alpha beta\".split(\" \")\n\nSo the above could be re-written as:\nreturn_id, attr_path = f.split(\"=\")\nfinal_filter[return_id.to_sym] = attr_path.split(\".\")\n\nThis will drop any other matches on the floor and set the variables to nil if there aren't as many results as variables.\nYou could also do this with a reduce instead of an each with external variable, but it doesn't really buy you anything.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6800511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6800529", "body": "You could just do:\nargs = args || { :sort => 'X_CHEF_id_CHEF_X asc', :start => 0, :rows => 1000 }\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6800529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6800595", "body": "search_new and search_old may not be the most descriptive names. :)\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6800595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6800726", "body": "It'd be nice to have a comment block with @args explaining what valid inputs are given the slight complexity of reverse engineering it.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6800726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6800819", "body": "I'd be tempted to do:\nsort, start, rows = args\nsort ||= 'X_CHEF_id_CHEF_X asc'\nstart ||= 0\nrows ||= 1000\n\nThough those values are all hard coded up in search_new though which implies 1) there is probably a way to restructure this so they're only used once 2) they should probably be constants.\n\nIn terms of restructuring if search_new isn't ever called directly you could put the defaults here in search so search_new never gets called with nil values.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6800819/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6800827", "body": "Those constants again!\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6800827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6800868", "body": "Again, you could do args = { :sort => sort, :start => start, :rows => rows }, though unless this function is called directly it seems like a layer of indirection that could be removed.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6800868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6800930", "body": "It doesn't look like this is ever called with these values set to nil.  If you want to default them please put them in constants.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6800930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6801028", "body": "I suspect the non-test part of the code could be better structured by not passing \"args\" to create_query_string or call_rest_service.  You can have default values in create_query_string then, and that appears like the only place you'd need them.  After cleaning that up and removing all the other default values it might be more obvious how the rest of the code can be streamlined.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6801028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6823641", "body": "args_hash[:rows] ||= 1000 would be a more compact way to say almost the same thing.  The only difference is that if someone passed in nil it would be set to the default with my suggestion and not with your code.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6823641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6823682", "body": "Thanks for cleaning it up so much!\n\nLooking through it now it seems like you could just call \"new_search\" from search in either case and remove old_search entirely, no?\n\nAnd if everything is going through new_search then it'd be safe to only default the values once (either in search or new_search, which would probably be the easier location)\n\nIf that happened then you could rename new_search to perform_search or something along those lines which would make its function clearer.\n\nIt's coming together!  Sorry I didn't the more structural feedback the first time around.  It's a lot easier to see now.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6823682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/6824376", "body": "LGTM, though the line length is getting exciting.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6824376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "simonoff": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/6984755", "body": "What the reason to still use 1.8 style if Ruby 1.8.x is unsupported?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/6984755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "tyler-ball": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/chef/chef/comments/7724206", "body": "Do we have any central config validation location?  If not, I'll leave this logic here and remove my comment.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7724206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/7724252", "body": "To clean this copy up, I was going to extract the logic to a module at ...lib/chef/encrypted_data_bag_item/check_encrypted.rb.  Then I can leverage this logic from both the knife location and the DSL location.  Thoughts?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7724252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/7724370", "body": "Can anyone give me a brief overview of why we have the `deps` method in the Knife DSL class instead of just declaring dependencies at the top?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7724370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/7724383", "body": "@sersut suggested _DataBagBase_ but I didn't want to do a file rename and have it mess up my diff.  Is the current pattern to use _Base_ as a suffix rather than _Common_?  Or does anyone care?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7724383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/7724406", "body": "I'm actually fine with leaving this as a module since it exemplifies composition over inheritence.  @danielsdeleo, I heard you were the Ruby master.  What do you think about leaving it is a module versus converting it to a parent class?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7724406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/comments/7724415", "body": "Do we have any policy about using code from StackOverflow?  It also seems like we could have more custom matchers down the line, so this should be moved out of the spec_helper and into its own file.  I couldn't find any existing files which contained RSpec extensions.  Unless anyone knows about one, I'll create it.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/comments/7724415/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "dan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/chef/chef/pulls/comments/11047026", "body": "Not sure why I'm getting these, can anybody tell me how to make it stop please?\n\n---\n\nDan Benjamin\nhttp://5by5.tv\n\n> On Mar 27, 2014, at 4:22 PM, Adam Edwards notifications@github.com wrote:\n> \n> In lib/chef/resource.rb:\n> \n> > @@ -820,5 +832,18 @@ def lookup_provider_constant(name)\n> >        end\n> >      end\n> > -    def translate_command_block(command, opts, &block)\n> >   Ok, makes sense, I'll make that change. There aren't many callers of this, so the impact of the parameter change should be relatively contained.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11047026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11087607", "body": "There isn't an unsubscribe button on the right.\n\nAny other ideas to help me make it stop?\n\nOn Mar 27, 2014, at 4:58 PM, Dan DeLeo notifications@github.com wrote:\n\n> In lib/chef/resource.rb:\n> \n> > @@ -820,5 +832,18 @@ def lookup_provider_constant(name)\n> >        end\n> >      end\n> > -    def translate_command_block(command, opts, &block)\n> >   @dan because someone accidentally mentioned you instead of me. (Also doesn't help that I have different handle in our company chat and here). Sorry.\n> \n> You should be able to mute this thread at least with the \"unsubscribe\" button on the right.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/11087607/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "martinisoft": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/chef/chef/pulls/comments/25198158", "body": "If you're proposing LT, doesn't this also make you a maintainer by definition of the RFC?\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/25198158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "adamhjk": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/chef/chef/pulls/comments/23453278", "body": "Yeah - I was matching existing style. :)\n\nSent from my iPhone\n\n> On Jan 22, 2015, at 10:54 PM, Lamont Granquist notifications@github.com wrote:\n> \n> In lib/chef/provider/execute.rb:\n> \n> > @@ -80,7 +80,9 @@ def opts\n> >          opts[:umask]       = umask if umask\n> >          opts[:log_level]   = :info\n> >          opts[:log_tag]     = new_resource.to_s\n> > -        if STDOUT.tty? && !Chef::Config[:daemon] && Chef::Log.info? && !sensitive?\n> > -        if (Chef::Config[:always_stream_execute] || run_context.events.formatter?) && !sensitive?\n> > -          opts[:live_stream] = Chef::EventDispatch::EventsOutputStream.new(run_context.events, :name => :execute)\n> > -        elsif STDOUT.tty? && !Chef::Config[:daemon] && Chef::Log.info? && !sensitive?\n> >          opts[:live_stream] = STDOUT\n> >        end\n> >   maybe factor out the !sensitive?s into an unless sensitive? that wraps both, and reduce the duplication and make it easier to see that sensitive resources don't output.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/23453278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/23459827", "body": "Got it.\n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/23459827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/chef/chef/pulls/comments/23460124", "body": "Also, there really isn't a cleaner way to write this that doesn't involve having multiple unless blocks or repetitive if. I actually think this terse style is right, a-la @danielsdeleo \n", "reactions": {"url": "https://api.github.com/repos/chef/chef/pulls/comments/23460124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}}}