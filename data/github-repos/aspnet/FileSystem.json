{"_default": {"1": {"Eilon": {"issues": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/313", "title": "THIS ISSUE TRACKER IS CLOSED - use the Home repo issue tracker", "body": "Hello, this issue tracker is no longer used. Please log new issues here: https://github.com/aspnet/Home/issues\r\n\r\nFor information about this change, see https://github.com/aspnet/Announcements/issues/283\r\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/38d6c55300fb1d48cf93432d559879725af19d00", "message": "Create ISSUE_TEMPLATE.md"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/1eb9364bb4511a96e9ec27f4b2d6f5edeea808a2", "message": "Fix package metadata"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/9977dbfa7321a314a56e4fa6848fabc734868667", "message": "Update Home master -> Home dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/1d5a77110ecb8c8a3a2aff0b96cd4b686c512255", "message": "Fix unit tests on Mono\n- Split up some unit tests into several smaller tests that each test one thing\n- Fixed some tests that were mixing physical paths and virtual paths\n- Disabled one test on Mono because Mono doesn't seem to support Hidden files in the Windows file system attribute sense (no big surprise - *nix file systems don't have that concept)"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/e50b4919967d997e2f222cd367f3ceb257b75e0d", "message": "Fix 101 - make all tests run on CoreCLR\n\nRemoved dependency on Shouldly (which doesn't exist on CoreCLR), and\nmade some other small compatibility fixes."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/37144965", "body": "Good point. But I'm not sure that it needs to be web specific, assuming we will use this interface in console apps and so forth. For a brief moment I was thinking IAppFileSystem (or similar) but I'm not sure it's true that this can read _only_ files from within the app's root...\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/37144965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/37146670", "body": "I'm predicting that very little (if any) of our code will use System.IO directly for actual IO (as opposed to merely calling `Path.GetExtension`, etc.) because we'll want to unit test our code, and customers will too. As such, I suspect that reading _and_ writing will be important because we'll probably end up with something like today's Web API's MIME multipart reader that can optionally write to disk. And you could imagine a disk-based caching implementation. These might be _different_ `I***FileSystem` interfaces, though...\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/37146670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/37153381", "body": "I remember once hearing of such a system that has many of these abstractions... something about not seeing the forest for the trees... a grove, perhaps? :smile: \n\nYes, if this interface is meant to be very specific, I can understand that, but then does it belong in the very general FileSystem assembly?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/37153381/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/52511826", "body": "This is an MVC bug, nothing to do with physical path handling.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/52511826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/56318358", "body": "Scenario? I want to make sure we design it right for whatever is needed. I assume something to do with pre-compilation, but more details would be good.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/56318358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/65287576", "body": ":shipit: from me too.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/65287576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67367192", "body": "Looks legit to me. @Tratcher @Praburaj @pranavkm can one of you review? (No CLA issues, so feel free to pull when ready.)\n\n@mj1856 good to hear from you again!\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67367192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/70585394", "body": "Renaming the repo :frowning: Maybe eventually. GitHub does automatically do redirects for such renames but I'm not sure if it redirects for scenarios like cloning, etc. I'm fine waiting for some future time where we'd rename this along with other stuff...\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/70585394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/70603053", "body": ":shipit: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/70603053/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/70716833", "body": "Yeah I just saw that earlier... I'm fine with renaming it. Just let me know when (because we have to update Universe, CIs, etc.).\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/70716833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/70748702", "body": "Done.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/70748702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/70903450", "body": "CLA approved. @Tratcher to merge.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/70903450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71106916", "body": "Recommend renaming the `Infrastructure` namespace to something more meaningful. Is it `GlobParsing`?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71106916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/72067086", "body": ":shipit: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/72067086/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/72324941", "body": "Looks :shipit: to me. @GrabYourPitchforks do you want to look to see if anything is missing?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/72324941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74595102", "body": "Looks cleaner to me!\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74595102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74595400", "body": ":shipit: !\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74595400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/75126595", "body": "@troydai do you want to merge?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/75126595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/93531578", "body": ":shipit: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/93531578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/95675728", "body": ":shipit: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/95675728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/96141268", "body": "Fixes #101 \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/96141268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/96143916", "body": "Looks like Mono tests are failing due to a difference between .NET Framework and Mono, so will investigate that later.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/96143916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/96144017", "body": "Fixed in e50b4919967d997e2f222cd367f3ceb257b75e0d.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/96144017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/96411037", "body": "@davidfowl \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/96411037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/96411116", "body": "@davidfowl we talked in theory about swapping these two checks: https://github.com/aspnet/FileSystem/blob/dev/src/Microsoft.AspNet.FileProviders.Physical/PhysicalFileProvider.cs#L85-L94\n\nHowever, I don't think that's right either. The real problem is that on Windows it's easy to tell the difference between a volume-rooted path (`C:\\...`) and an absolute path (`\\foo\\bar`), and on *nix there's no way to differentiate.\n\nHonestly not quite sure how we could fix this even in theory...\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/96411116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/100097261", "body": "@hishamco @troydai so can https://github.com/aspnet/FileSystem/issues/47 be closed?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/100097261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/113220943", "body": "Tests are failing due to this change. Please not that `[NotNull]` is not yet implemented, so if you pass `null` into such a parameter it will be allowed, and the method will likely have a `NullReferenceException`. So for now I'll keep this PR open because I don't want to change any product code or tests to account for this missing feature.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/113220943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/115493135", "body": "Don't worry it won't get randomly closed :smile: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/115493135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/comments/6306888", "body": "Hi @SLaks these interfaces are probably one of the earliest prototypes in the codebase, so they are not yet fleshed out. The interfaces are very limited right now, as you can probably tell. Would you like to file a bug to start a discussion on this?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/6306888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/8801597", "body": "Exception tests need to verify the message of the exception to ensure that the correct exception was thrown. If you change this to use string resources then you can assert against the string resource (instead of hard-coding the strings).\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/8801597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/8802824", "body": "The code _today_ might not have any other code in it, but part of the point of unit tests is to prevent regressions.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/8802824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20904711", "body": "Change doc comments to reflect what the type is. Also, in other doc comments please ensure that each comment is a complete English sentence (ending with a period).\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20904711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20904790", "body": "`in the underlying`\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20904790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20904809", "body": "`non-existing file`\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20904809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20904823", "body": "`if the file`\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20904823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20904867", "body": "In some places we say resource, in some we say file. Ultimately this is a _file_ system abstraction, so I'd just always call it a file.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20904867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20919071", "body": "Not a useful doc comment :smile: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20919071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20919108", "body": "`[NotNull]` on this? And maybe in many other places?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20919108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20919121", "body": "Why `internal`?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20919121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20919164", "body": "We should probably stop putting these silly `TODO:`s in the strings. And use `nameof()` instead of hard-coded type names in strings.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20919164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20919205", "body": "Why doesn't this throw?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20919205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20919211", "body": "Should these throw?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20919211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20919231", "body": "Should this assert the exact size?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20919231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20950483", "body": "Oh yeah I was going to comment on that as well and I guess I forgot. Don't need that namespace (doesn't add any meaning to anything).\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20950483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20950591", "body": "Yeah that looks nicer. The latter, especially.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20950591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20958376", "body": "We can change the contract :smile: Just seems like this class (and the interface) is very inconsistent with itself whether it throws or returns nulls/defaults for things. The reason I'm thinking exceptions are acceptable is that if `Exists` returns `false` then why would anyone call any of the other APIs.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20958376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20958394", "body": "(Should still discuss with @lodejard before changing this, though.)\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20958394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21177622", "body": "Current directory != app root!!! These have nothing to do with each other, aside from that they are often coincidentally the same.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21177622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21177694", "body": "End sentences with a period.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21177694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21479575", "body": "We generally say that for non-public types to use whatever access modifiers make sense _if_ the class were public. That makes it clearer to a consumer what the intended access is. Then if a class becomes public (which we often do), there's little (if any) additional work to do.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21479575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21479689", "body": "Additional thoughts on this here: http://ericlippert.com/2014/09/15/internal-or-public/\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21479689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21479796", "body": "Initialize inline on the property?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21479796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21479851", "body": "`_lockObject`?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21479851/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21479923", "body": "`into` is one word.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21479923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21555932", "body": "Add an example of what a filter looks like? Just `*.ext`? Or can I put in multiple patterns? Can I do `**\\*.ext` patterns?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21555932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22025979", "body": "Any way to make this test faster? This test looks like it'll take a minimum of 4 seconds... that's about 100 times longer than a unit test would normally take...\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22025979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22025986", "body": "Don't need to check `==true` in the lambda... if it's `true`, it's `true`.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22025986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22059249", "body": "Yes, that.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22059249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23202364", "body": "Since we're here, change \"for\" to \"of\"?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23202364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23412457", "body": "Style: Just return the value, don't need `if-else`.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23412457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23412533", "body": "Clean up return types, such as using `IList<T>` on public stuff, not the concrete types.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23412533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23412553", "body": "Avoid using public fields.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23412553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23412666", "body": "Avoid public nested types.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23412666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23412965", "body": "Can this get a better name? E.g. `DisposableFileSystem` or `TestFileSystem` or something?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23412965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23413074", "body": "Another type called `Scenario`? Not sure what these are...\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23413074/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23413390", "body": "Testing for superset and subset does not test for exact sequence equality, rather it tests for set equality. Should this use `CollectionAssert.Equal()` to verify sequence equality (https://github.com/xunit/xunit/blob/9890fb38bca4321353d3361786af8b507ec93f69/src/xunit.assert/Asserts/CollectionAsserts.cs#L156)\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23413390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23465666", "body": "These two method names have been confusing me. Is it really this:\n\n``` c#\nProcessFilesInCurrentFolder(...);\nProcessSubfolders(...);\n```\n\n?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23465666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "pranavkm": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/a94eeace5086b37411e547692ebd491050afae6a", "message": "Use unique names for properties\n\n* Add support for multi-targeting\n* Only add the generated manifest file if we decide to run the task\n* Cleanup some names to follow MSBuild-isms\n* Move user-settable properties to props file\n\nFixes https://github.com/aspnet/Home/issues/2811"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/f43b1752543786ee0ca7b7ab69aad7e24793f8ae", "message": "Specify runtime versions to install"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/9ac5925f780b0ccf2093127d32fdeb644d771f6d", "message": "Replace aspnetcore-ci-dev feed with aspnetcore-dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/34590f1172e4187c179989f545f04d278b4c9020", "message": "Use MicrosoftNETCoreApp21PackageVersion to determine the runtime framework in netcoreapp2.1"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/d3c4e7978ef19d91ae99fb82f9183692711f5c0c", "message": "Target netcoreapp2.1 in tests and samples"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/9355cb162be3ae18e8029088bafe3fad7a231c31", "message": "Updating to InternalAspNetCoreSdkVersion 2.1.1-*"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/94a06a37264fc922534e0de6749f25acb1302a28", "message": "Merge branch 'rel/2.0.0' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/3f1bcbc8c3b9426c980fe9e7976ded419b100314", "message": "Updating KoreBuild branch"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/98f6361dac358b1e8e3d59f40531b4d4c93d473b", "message": "Merge branch 'rel/2.0.0' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/9fbfc55e5ca79ad043e361d67789cf1722dc248b", "message": "Branching for 2.0.0 rtm"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/9e4f0ec4de5000da006f0df397a3e26eb54c949c", "message": "Update version suffix for 2.0.0 RTM release"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/d5615bc669d6a47ec0feee6039aaae44351116ab", "message": "Avoid unnecessary substrings n GetDirectoryContents"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/47a8c72bab0b11a8c5bcf52c37d58cc48e46dd19", "message": "Specify a comparer in EmbeddedFileProvider.GetDirectoryContents\n\nFixes #284"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/03e20e8b5687f56412aa49cfb5d32f0e923c2d14", "message": "Update LICENSE.txt text"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/c5e209426e9e569b58d945a38bc3fe77a758463c", "message": "Add NETStandardImplicitPackageVersion"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/56c74055c60d0d77def59d3f7d502574888c6e2f", "message": "Update Moq version (#281)\n\n* Update Moq version to 4.7.49"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/f54254605b1b12f0801506c242ef9598e6590b96", "message": "Updating versions to preview3"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/971707ea2f4b532a5cc8c91056a7f491dcddef80", "message": "Merge remote-tracking branch 'origin/rel/2.0.0-preview2' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/55e5208b4c306ee0a2c7fde8998a2a3fe1c99a6a", "message": "Updating build scripts to point to 2.0.0-preview2 KoreBuild"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/386180cf12e2df15fb9b4411f7cc0e1805ef6a1f", "message": "Merge remote-tracking branch 'origin/rel/2.0.0-preview2' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/225283967b54f71af437f6d94801ad7b72d77405", "message": "Branching for rel/2.0.0-preview2"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/ff67cb8ca63281918ac6ee87ab58a3b46c5c3bc8", "message": "Merge remote-tracking branch 'origin/rel/2.0.0-preview1' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/ece686996b558bab85cc7d3774fc89ec4f6a6885", "message": "Use the bundled NETStandard.Library package in netstandard targeting libraries"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/3d0c4c4d5c6b27abfbafa6830150fbc81c4da79a", "message": "Updating package version to preview2"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/9c9a29bf36b99e3819ad1b74a2308d54f23dbdf8", "message": "Merge branch 'rel/2.0.0-preview1' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/6c9f63c3919fafff88244e4a7203093f9e640c6c", "message": "Branching for 2.0.0-preview1"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/d9043aedd9a7f40582beea0ec23fd712be370743", "message": "Use Bundled NETStandard.Library \\ NETCoreApp versions instead of explicitly specifying one"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/803487115b7ea96679efde0f3e922b0e0483ce09", "message": "Updating versions to 2.0.0-preview1"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/1957ef9fa443b5d5ba65582aff5482b60eeedf09", "message": "Updating to 2.0.0 Internal.AspNetCore.Sdk"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/7f9018b839b89822d9e74ea8a9d78b81c66f7b13", "message": "Remove net451 as a cross-compile target"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/25de40c12f0c4e7288f2bca162f5b8269fa9024a", "message": "Updating to 4.4 CoreFx packages"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/a8e35f9c4c09fc15f5d1c82f57c219da66b3a174", "message": "Updating versions to 1.2.0-*"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/cb4bcb32f1d295bf915969043b8b6ed3e8a89528", "message": "Merge branch 'rel/1.1.0' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/56e1bf7def94c15030dff4d7fde0bc9a0ce8e5e5", "message": "Branching for 1.1.0"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/2938c4077dd8f7cedc86b670f7aa6b108d51900e", "message": "Merge remote-tracking branch 'origin/rel/1.1.0-preview1' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/bf2b6f0edf40f9a98728bd6a417d3cc0ff6df070", "message": "Branching for 1.1.0-preview1"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/62b46e684eafcb60da696b892a83b3a22510bd26", "message": "Updating to netcoreapp1.1"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/314002b434553551ecd557f21797f2e74b300a29", "message": "Revert \"Updating to netcoreapp1.1\"\n\nThis reverts commit 5b642122125001302144c5c596b96e214591bbb9."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/5b642122125001302144c5c596b96e214591bbb9", "message": "Updating to netcoreapp1.1"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/a91165a72bd96ecedd0194107751098645b0d057", "message": "Updating partner package versions"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/4e664f661a8281eee1b6689c662b4225ccdd2b57", "message": "Make the window for rescanning much smaller"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/9d60f6426f515fa162b4dfff7b0f99082a63621c", "message": "Modify PollingWildCardChangeToken to include the timestamp of the files\n\nFixes #238"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/204821f6deff8734ae0dd377778ca73bf878a99f", "message": "Modify PhysicalFileWatcher.Watch to work for new files being added\n\n* Modify PhysicalFileWatcher.Watch to work for new files being added\r\n\r\nFixes #233"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/0571e9a1ec179afb3c1454df5c11112eb89e8f1a", "message": "Switching to dotnet.myget.org feed"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/4ce656cc6cf14dd22716546c23409edaa1154e41", "message": "Updating to RTM builds of xunit"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/1c17e48f297cd924a6d3274f95ffccb6d00dab22", "message": "Updating to dev versions"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/258aa318977c45634d92c3e6cd99bb33e492fffa", "message": "Merge branch 'release' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/191eae01627cb44d27587245769b269c20182d71", "message": "Updating to release."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/01c1e95ae57456fb143a56d086a510082848d02c", "message": "Merge branch 'release' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/1224f5a49f342b29009608aa1dc2eb93778757b7", "message": "Fix build warning"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/84d2c4a2bba4b38d189fc4a0d5b67d3e19ab0173", "message": "Merge branch 'release' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/a090361f2859748dbb8ec8ad9d0423539779fdca", "message": "Fix build warnings"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/2f256c3381b94ab25d26d828741a2f89c2e80304", "message": "Merge branch 'release' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/c22515597524dfad7f65717cb7e759b9dd7236b6", "message": "Add support for polling file watcher\n\nFixes #181"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/ccffb66bea9d58778f76c789071777eb97f62338", "message": "Merge branch 'release' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/f28b8c62d402bbf55fea1084bf079b38946c078f", "message": "Use latest build of dotnet-test-xunit"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/9806cf08e6c686a7b8ccaafaa6c13e80a3217d8e", "message": "Merge branch 'release' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/3febd195d1d0b4a7b2b85be28fa68c361cdd36ba", "message": "Removing imports from src projects"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/f6acaa57a9cdd49e8bd3621a07bf65f2960dfff3", "message": "Merge branch 'release' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/beda6e0cea00ae555a07a9b392dc31af9343ee3f", "message": "Updating to release."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/102cc3566de36897ee9279b3977624cbeab75941", "message": "Revert \"Undo package changes\"\n\nThis reverts commit 32822deef3fd59b848842a500a3e989182687318."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/040aa1fe4d7544ac08c7763fc71087c80ec9c94b", "message": "Reacting to CoreCLR package changes"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/16fe33443c21a57d42fb7f495f2782f5e5305649", "message": "Reacting to new CoreCLR packages"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/ece552d664d156c9caa636ee9f02636f8b63923d", "message": "Target minimal TFMs"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/0a6262e13e0c16d6a369eff70fe21ce5e242f448", "message": "Revert NuGet.config"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/c12fe2e95a36ea3cc35038e32731d217d6fba67e", "message": "Reacting to Options changes"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/f8af38d578f8eaa1446b2cad4bf02718ea60c0f3", "message": "Reacting to CoreCLR package version changes"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/3da07c64b8840ea1bbbf7783961af18970636dea", "message": "Reacting to CoreCLR package version change"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/5d5d472a62d4bf9ebe7fa20ec9bf4b856e0bf5f3", "message": "Removing System.Runtime.Extensions"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/3e80b26399f22162fb7ae8f3cbda8c5742ccc451", "message": "Un-nest private implentations of IFileInfo and IDirectoryContents\n\nFixes #156"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/a78a82ae324b994e07998837230eae4a5bf6bf8c", "message": "Merge branch 'release' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/53dff062ec3171d55887b9676abb679ebf890b96", "message": "Updating to release NuGet.config."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/e2774ae7177041477da07d857f763f3651903910", "message": "Removing transitive CoreCLR dependencies"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/298315487aff88ba407c376a3bd2c84ff73886f0", "message": "Fixing CoreCLR package versions"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/c744dc4a5b04a52ec28dceec5a79a06310b5d15d", "message": "Merge branch 'release' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/bbeccf1ff126c9118a428f00ef57071e1ab5aef1", "message": "Updating to release NuGet.config."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/e8e3eb27911baaa972f221d3739ba78268c6c151", "message": "Switching to using generations TFM"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/d43cf411da66bb2a2d6b6c4c63cae90e531cceb7", "message": "EmbeddedFileProvider should allow paths with back slashes\n\nFixes #129"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/2a8225f94671cf2f7f5df23ade3172d51a42bdb0", "message": "Renaming Microsoft.Framework.* -> Microsoft.Extensions.*"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/229edc3a326a1f5ed773b36f1248373cee24c0ce", "message": "* Don't throw if test clean up fails\n* Minor FunctionalTests refactoring"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/d840f8845abc2dc05e0fbbd73a65d2ee1162c85f", "message": "Merge branch 'release' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/9174d18d2a50dddef28f6f9b45f5e68b9c239f20", "message": "Updating to release NuGet.config."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/bb6b6995eb852bde23661b0f9c27112172ebb3b8", "message": "Change FileProvider to use IChangeToken"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/4fbc09a477143852b6bbcd53d2cbc7e14d23d197", "message": "Remove chaining from HashCodeCombiner usage"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/c72b8302db2c5e0ee9adbfaf5fc9518d9986b272", "message": "Adding NeutralResourcesLanguageAttribute"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/dc62943a2f16334383659b40a66777dbd374b9ca", "message": "Updating to aspnetlitedev."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/65d7d1bffb389a1ae0f7e608113c3142d3671105", "message": "Merge branch 'release' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/b632b8e7f656174b99252d223cfcde5ce32c0bc9", "message": "Updating to aspnetliterelease."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/b6cc4530990ef792230a072606a51e87c280ec07", "message": "Merge branch 'release' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/10eba955ff4aa8e2ed0467755c5babaf01fc0060", "message": "Updating to release NuGet.config."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/893f658fa12ea2fdcd81b0e41e917334f2e8fd3f", "message": "Merge branch 'release' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/51adda5ca1129262b52b1b7e8e3781524d2735d9", "message": "Updating to release NuGet.config"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/b6793bbd79442270493e581d952aeb811c3b3127", "message": "Merge branch 'release' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/274427e56fca22a0d5300443d6f87731c7d6c702", "message": "Updating to release NuGet.config"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/88f93efc277de8d4827ace1f4a1829579d8a44ab", "message": "Reacting to updated CoreCLR packages"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/52360820", "body": "To expand on this, it would be useful to have more interesting features on `IFileSystem` that match what we had with `VirtualFile` \\ `VirtualPathUtility` gives us. Specifically, it would help to be able to\n1. Generate root-relative paths\n2. Convert absolute paths to root-relative paths\n3. Determine if a path is a subdirectory to the app-root.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/52360820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/52951551", "body": "This should be resolved via changes to #12.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/52951551/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/53066334", "body": "It wasn't. For *nix, some of the test data would (such as this - https://github.com/aspnet/FileSystem/pull/13/files#diff-2704e087354ec0adca0e1db93c424eddR83) would need  to be modified to adapt to the behavior of GetFullPath\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/53066334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/53341101", "body": "@davidfowl updated and verified this works on *nix\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/53341101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/55200242", "body": ":shipit: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/55200242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/65283935", "body": "Could you update the PR? The comments say done, but I don't see the changes.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/65283935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/65286293", "body": ":shipit: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/65286293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/66469929", "body": ":watch:  \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/66469929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/66678247", "body": ":shipit: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/66678247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/66832380", "body": ":shipit:  \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/66832380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67669572", "body": "Looks good. I'll have this merged in later today - it has a couple of downstream effects that also need to be changed.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67669572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/68303210", "body": "Shouldn't be an issue anymore. We use a single instance that's hanging off of `RazorViewEngineOptions` instead.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/68303210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/68617244", "body": "cc @Praburaj \\ @Tratcher  \\ @rynowak per our offline discussion \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/68617244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/68902979", "body": "Sorry should've closed this PR. I closed the corresponding PR in Mvc - https://github.com/aspnet/Mvc/pull/1727 - since it looks like the changes to use the file watcher are a bit more involved and it is unlikely I'll have a chance to look at it now. We'll revive this once we bring that back.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/68902979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74145109", "body": "Can you remove the reference to `Microsoft.Framework.Runtime` from the project.json if it's no longer necessary?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74145109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90762786", "body": ":shipit: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90762786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/119341338", "body": ":shipit: from me. Have either @davidfowl or @Tratcher also sign off\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/119341338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/119698534", "body": ":watch: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/119698534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/121676037", "body": "Looking at https://github.com/aspnet/FileSystem/blob/dev/src/Microsoft.AspNet.FileProviders.Physical/PhysicalFileProvider.cs#L56-L59, presumably not.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/121676037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/121676672", "body": "Looking at the code, this might be one of the problematic scenarios:\n\n`var result = new PhysicalFileSystem(\"/foo/bar\").GetDirectoryContents(\"/Foo/bar\");`\n\nExpected: `NotFoundDirectoryContents`\nActual: Returns results under `/Foo/bar`\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/121676672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/comments/16645482", "body": "See https://github.com/aspnet/FileSystem/pull/169#discussion_r55793374\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/16645482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/17061659", "body": "Moved to a sources project.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/17061659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/17061662", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/17061662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/9525805", "body": "This is to try out our CI dependencies. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/9525805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/16609532", "body": "Probably. Presumably we should base this on the OS (`Environment.OSVersion`)\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/16609532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/16610268", "body": "Tracking separately via https://github.com/aspnet/FileSystem/issues/16\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/16610268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17691082", "body": "Would it make sense to make it symmetric to `CreateReadStream` so that it returns a writeable stream? \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17691082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17695726", "body": "While we're refactoring these, could you also make these types public? There's not much of a reason for them to be private inner types, is there?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17695726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17695904", "body": "AFAIK, the suggestion was to pass in app relative paths. This way, the semantics of this method remains the same. That said, we should probably put a check for `Path.IsRooted` here to verify you don't pass in an absolute path.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17695904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20891239", "body": "Does this need a `#if ASPNET50 || ASPNETCORE50`?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20891239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20891261", "body": "System namespaces go first.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20891261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20891346", "body": "Sort usings.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20891346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20891389", "body": "Remove this. You'll get this transitively.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20891389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20891397", "body": "Remove this. You'll get this transitively.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20891397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20891405", "body": "Do you need this?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20891405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20891490", "body": "Why internal?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20891490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20891548", "body": "Sort usings\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20891548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892004", "body": "Why not?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892046", "body": "Is the plan to have it watch the entire directory?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892061", "body": "Remove\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892094", "body": "Shouldn't need most of them since you'll get these via `Microsoft.AspNet.FileSystems.Interfaces`\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892121", "body": "> Implementation for File System abstraction\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892148", "body": "License header. Sort usings.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892225", "body": "sort usings\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892289", "body": "Are we no longer going to support the notion of rooted paths? Is the plan that any path is considered app-relative path?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892335", "body": "What happens when you pass in a path with a leading `/` to `PhysicalFileSystem`?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892355", "body": "Shouldn't need this.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892451", "body": "You should remove this class if the plan is to not support the `TryGet` format. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892451/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20899702", "body": "@lodejard seems odd to have FileSystem have a dependency on Caching. Couldn't the adapter live as a separate type somewhere that depends on both these things?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20899702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20899742", "body": "> Per this design only file is being watched\n\nShouldn't you throw `NotSupportedException` in that case?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20899742/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20899923", "body": "Do we need to continue catching `ArgumentException`?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20899923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20949474", "body": "@Praburaj I think it might be nicer to just leave these be public. It allows you to write custom implementations without having to rewrite these things. If you feel strongly, make it public but put it in an Internal namespace.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20949474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20949612", "body": "`return GetEnumerator();`\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20949612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20949669", "body": "`name` isn't used anywhere. Do you need it?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20949669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20949749", "body": "Wasn't @loudej's suggestion to drop `Implementation` namespace\n?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20949749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20949814", "body": ":8ball: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20949814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20949915", "body": "Remove\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20949915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20949942", "body": "Trailing space after dot.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20949942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20949993", "body": "Need a space after `//`\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20949993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20950019", "body": "Isn't this behavior different from `PhysicalFileSystem`? \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20950019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20950070", "body": "`string.IsNullOrEmpty` \\ `subpath.Length == 0`\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20950070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20950151", "body": "Lambda properties would look so much nicer here\n\n`public bool Exists => false;`\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20950151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20950249", "body": "Should this be called `CreateTrigger` \\ `CreateFileChangeTrigger`?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20950249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20950492", "body": "I think the `IsRooted` needs to be changed to perform a `Path.IsRooted` instead. The current `IsRooted` check verifies if the file path starts with `Root` path which is not we're trying to guard against.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20950492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20950502", "body": "Space after `//`\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20950502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20950877", "body": "Test names need to change to match the new method names `GetDirectoryContents`. It'll also be nice to have them be a bit more descriptive. `GetDirectoryContents_ReturnsFiles`\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20950877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20955884", "body": "Nope. It'll call the other method.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20955884/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20956031", "body": "You're returning instances of the two types from `EmbeddedFileSystem`. Basically acts as an argument against these being specific to `PhysicalFileSystem`\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20956031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132106", "body": "Or have it throw. Seems like any operation on this type should throw a `NotSupportedException`. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132118", "body": "Use `nameof`\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132141", "body": "Have it be consistent with other exceptions in this type and throw with a message.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132179", "body": "`subpath[0] == '/'` should also work since it's a non empty string.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132218", "body": "Add a space between the closing brace and this statement.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132218/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132282", "body": "Seems like you could make add a `[NotNull]` on the parameter.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132341", "body": "Might want to add a remark to this type \\ `IFileSystem.GetDirectoryContents` that details what the behavior is for non-relative paths.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132341/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132351", "body": "singleton? There's never a scenario for having more than one instance of the type.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132404", "body": "return `_info.IsReadOnly;`\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132427", "body": "Well, nevermind. It's for a directory\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132450", "body": "Just throw from this instead. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132470", "body": "named parameter for bool args.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132728", "body": "Couldn't you use `Environment.CurrentDirectory` to generate the absolute path?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132803", "body": "Could you add a test to verify `GetDirectoryContents` returns entries when an empty string is passed in? Also tests to verify it throws when invalid operations `WriteContents`, `CreateReadStream` etc are performed on it?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132869", "body": "Can we get some tests to validate the behavior of these public types?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132984", "body": "Not super sure what this comment means.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21173810", "body": "Did this change? Or has the PR not been updated?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21173810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21173960", "body": "`throw new InvalidOperationException(string.Format(\"{0} does not support {1}.\", nameof(NotFoundFileInfo), nameof(IsReadOnly)))`. Same comment applies to other exceptions from this type.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21173960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21181497", "body": "Just do a `subpath.Length == 0` check instead.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21181497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21608052", "body": "~~This should probably only be done if your path has any wildcards. For a path that doesn't, it seems like overkill to have it run through a compiled `Regex` expression.~~ (ignore this bit) Additionally, I would rather not use compiled expressions here - unless we know for certain that the filters are going to be used repeatedly, it might be detrimental to have it be compiled.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21608052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21608105", "body": "> To imitate the actual underlying file system, the physical file system needs to know when to apply case sensitivity\n\nCould we start with non-case sensitive regexes then?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21608105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21608250", "body": "`readonly`. Also, you don't need to specify the `private set;`\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21608250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21608648", "body": "Since instantiating the trigger is inexpensive, couldn't you write this as \n`expirationTrigger = _triggerCache.GetOrAdd(pattern, new FileChangeTrigger(pattern));`. I don't see a reason to have the lambda?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21608648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21610313", "body": "Could we potentially move the `_triggerCache.Count == 0` outside the lock? It might avoid locking in the most common case when there are other file patterns we're watching for.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21610313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21610469", "body": "These need to be `async Task`.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21610469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21638099", "body": "Wouldn't the lock guarantee only one of them checks \\ changes the flag though?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21638099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21695916", "body": "`<returns>`An `<see cref=\"IExpirationTrigger\" />` that is triggered when a file matching `<paramref name=\"filter\" />` is added, modified or deleted. </returns>\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21695916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21695992", "body": "I would recommend throwing in the compiled flag once we have more data. Compiling regexes can be pretty slow.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21695992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21696730", "body": "Couldn't you do `Task.Run` here? You wouldn't need to do `Task.Start` later this way.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21696730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21696951", "body": "`await Task.WhenAll(tasks);`\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21696951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21697001", "body": "Could you update the comment to say that this is the trigger expiration task and not the tasks you just waited for?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21697001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21697169", "body": "Could we also get tests for verifying we get triggers when files get added or removed?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21697169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22016055", "body": "We're waiting on the CoreCLR team to get the `LastModifiedUtc` \\ `LastWriteTimeUtc` properties ported over. In the meanwhile, could you `#ifdef` this code to use `_info.LastWriteTimeUtc` on ASPNET50 where it's available?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22016055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23398255", "body": "Why isn't this an abstraction user IFileInfo \\ IDirectoryContents?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23398255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23398827", "body": "``` C#\n\nif (IncludePatternContexts.Any(pattern => pattern.Test(fileInfo) && \n    !ExcludePatternContexts.Any(pattern => pattern.Test(fileInfo))\n{\n      if (Frame.RelativePath == null)\n      {\n              Files.Add(fileInfo.Name);\n      }\n      else\n      {\n          Files.Add(Frame.RelativePath + \"/\" + fileInfo.Name);\n      }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23398827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23399117", "body": "Should this be Debug.Assert?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23399117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23399176", "body": "Sames goes for directories.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23399176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23399231", "body": "Needs comments on what scenario you'd get here\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23399231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23404598", "body": "Was that actually measured or is it hypothetical? We are doing file system scanning (and potentially reading files). So I'd be surprised if Linq shows up in the profiler with this.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23404598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23404642", "body": "Does `AcutalDirectoryEnumerator` need to be disposed here? \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23404642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23414589", "body": "Properties go to the top of the type.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23414589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23414691", "body": "`var context`. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23414691/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23414742", "body": "`var` all day\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23414742/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23414762", "body": "Can you add bracing here?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23414762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23414984", "body": "Could you throw in an example of what the start string looks like and what we get in individual bits? Would help debugging in the future.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23414984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23415230", "body": "I think there's only one derived type for this - does it need to be generic?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23415230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23415391", "body": "Ctrl K + Ctrl D\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23415391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23424031", "body": "`readonly`\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23424031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23424045", "body": "Maybe remove this?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23424045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23424117", "body": "`TFileSystemInfo`\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23424117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23424152", "body": "`var context in ..`\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23424152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "natemcmaster": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/22733af7d5665932647729aa8d7c28229061e9d6", "message": "Handle flaky OnRenamed events more gracefully (#314)\n\nIn some conditions, System.IO.FileSystemWatcher will raise OnRenamed without the new file name. This causes an ArgumentException when attempting to determine if this file change should trigger a change token"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/7a28a76f209dbf5799b31f22f49c6c791c9183f8", "message": "Use MSBuild to set NuGet feeds instead of NuGet.config"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/51e14a624c5f32bd2df62adf06dbe558574b4b11", "message": "Pin tool and package versions to make builds more repeatable\n\nPart of aspnet/Universe#575"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/f31fee6a12a974bd3dded3f8219a36e3af04a1ef", "message": "Use PackageLineup to manage PackageReference versions"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/cb0527b33185ca9e4ae05704dd9b83a4d16c2501", "message": "Upgrade to xunit 2.3.0-beta4"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/4469deec5530812def4043c4705acd1e8890a193", "message": "Use Directory.Build.props/targets"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/e469b8f244e38c346ab6a64f363df4d638cf5cee", "message": "Shorten folder names (#289)"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/dd447121a124c08ff7b581eaedf1246cfd2f898e", "message": "Fix syntax warning when running build.sh on older versions of bash\n\n[ci skip]"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/5ce326a6a6a24e54a70c8ff1a23de08e77204202", "message": "Update bootstrappers to use the compiled version of KoreBuild\n\n[ci skip]"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/278d53c00e40f04d7799249dbf4a417fa200bf90", "message": "Make FileSystemInfoHelper internal"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/a97b3ef7dc73ccab3259342700d463716b3482ea", "message": "Add API to allow the physical file provider to show hidden files. (#280)\n\nThe default behavior remains consistent: files beginning with a\nperiod, Hidden and System files are filtered from the watcher,\nenumeration, and any other file listing.\n\nAdds ExclusionFilters. These flags to control the filtering\nbehavior of the physical files provider."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/ecafb384b0eeab307e62ae4dd125c9eeb71b2f6d", "message": "React to aspnet/BuildTools#293\n\n[ci skip]"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/c5f7f302a2ababe2d33086835265a0b207111d21", "message": "Adding libunwind8 to .travis.yml\n\n[skip appveyor]"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/e2376d294e8d4c11fbde9b6aea781ed61ba7d36f", "message": "Remove optional parameter from DirectoryInfoWrapper ctor (#278)\n\nResolves #229. The 'isParentPath' parameter on DirectoryInfoWrapper was only meant to be an internal implementation detail, and should not be exposed publicly."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/3b6de3b1e3107ccab6d9c991593863f313cdd2c4", "message": "Make FileSystemInfoHelper internal\n\nTechnically a breaking change, however, this type was likely never used externally as it had no public methods or members."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/ab5c96bd032d8b144e041c38b9cf082068e9b1df", "message": "Remove unnecessary script from travis builds"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/c0e09fdbe1950d7047f39d373abfebcc1fd4553d", "message": "Target .NET Standard 2.0"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/12881c1bcd3d1c9bad49b93c5e5ed063cede592d", "message": "Upgrade test framework versions and fix test issues"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/0206d27ea4d0589095a07810eb1f22417072b786", "message": "Re-enable TokensFiredForNewDirectoryContentsOnRename and fix race conditions in the test"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/0e0fca00fec26ca4cb1e8d609fcd5a7e54cf1600", "message": "Update Travis to macOS Sierra\n\n[skip appveyor]"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/72d77a0b665e6a9d9ef7f36033551ccfa56892d2", "message": "Update appveyor and travis settings"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/2a6ebe0c1d947047b4c962f1cd4f8ac926964b20", "message": "Update appveyor to VS 2017"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/cb4d072ea4df280d6538be26f3a49dc8dd99f879", "message": "Remove unused solution configurations"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/1e3b3d7d16c83fa8e598cd85f0b6c8b7a387280e", "message": "Parameterize dependency versions and remove dead code"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/5630fb5db0a55952068b5b0f92b62749dfd07bc2", "message": "Revert ac5e3f27f5c3fcdfd35eb15d51efc3f509b0fa0f"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/0516b441e598d946058df14b6df0479129e958be", "message": "Update AppVeyor and Travis settings"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/5b0c85fb3e8c3efd59a41b383dd0ed6aefc6b744", "message": "Change korebuild branch and fix argument forwarding in bootstrapper"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/c2d31b2df95aab3c758fa82b22f1ba9782b4bfd8", "message": "Downgrade to stable packages"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/9a2a9534640bc2d3bb677d9d6e557b80b2cf5954", "message": "Upgrade to VS2017 RC.3"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/5a02f115e4b95a034ab4711f3a5692eebd677d08", "message": "Pin sdk version using global.json"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/d753f2c839f999486ab3636bc0862065d19132a6", "message": "React to aspnet/KoreBuild#155\n\nThis converts to using Internal.AspNetCore.Sdk instead of importing from the KoreBuild folder directly"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/f9b963ea129cfb94fb71e0b63f19da74941f8c6d", "message": "Upgrade appveyor image"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/a2fb486716f5e90773f72d69b2fd9677fbb38411", "message": "Remove redundant references"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/9a6e6e7130b27d4a2dce57540807f2d7f5c8e717", "message": "Upgrade to VS 2017"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/d05ce8716c59b23effb5e5058ba6fb37142c6b26", "message": "Compile shared sources from folder, not package (#251)"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/0865cf7a06edf5e58d32ddaf6fee476fe205092d", "message": "Clean tmp folder after unzipping KoreBuild"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/f539c68c444d20bac1430d39e89100340e9030f2", "message": "Fix breaking change in PhysicalFilesWatcher ctor. Resolves #245"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/6c94ab91a5ef9be84b0a3e0a710275932bf5083c", "message": "Revert breaking change from 0e2180335d6d9156840fbf8a4dca0c9c1ee77509"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/a54ef9c8391bfb4948365b9ee8a96075177ed721", "message": "Defer creation of directory contents enumerator"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/3275c01b4cc6e1fbe258961d0da7544278ef6a9c", "message": "Defer creation of file info in directory contents enumeration"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/9e31b0b17d99fe118c1452b2ad3e1dbffa2406b5", "message": "Add xmldoc to public surface area of FileSystemGlobbing (#225)"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/403d8ea1c62c0e8e72eafa77db2d6f4843ade75a", "message": "Add missing xml docs for FileProviders.Abstractions (#226)"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/0e2180335d6d9156840fbf8a4dca0c9c1ee77509", "message": "Add missing xml docs for all file provider implementations (#227)"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/c1cb740d11ddb289d4b1eb135d364276256c1670", "message": "Fix backslashes in yml config.\n\n[ci skip]"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/5ee856bc8611432ef166f68dad4866207c0afea9", "message": "Limit the branches that build on our public CI.\n[ci skip]"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/abfda86df2c949eb2240c84e2dba2a4dd280a664", "message": "Updating build script"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/comments/22666337", "body": "\ud83d\ude06 ", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/22666337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "aspnetci": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/642f88383c8ade6aaccf655ef3363feb126b90e1", "message": "Update dependencies.props\n\n[auto-updated: dependencies]"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/c67de8ff4eaf063e798ea276f8cdc83394599a05", "message": "Update dependencies.props\n\n[auto-updated: dependencies]"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/7af495a453d990b39f2cdd33510b942435955c70", "message": "Update dependencies.props\n\n[auto-updated: dependencies]"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/a4e2a667ce620b60cc5ba311a2a679a4a504d14b", "message": "Update dependencies.props\n\n[auto-updated: dependencies]"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/77adc4c94f4f38ebed055e6b7eb8ab029cd8e0c9", "message": "Update dependencies.props\n\n[auto-updated: dependencies]"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/7e6e3453fdc7b7baf4063e20129fee08f7dcd155", "message": "Update dependencies.props\n\n[auto-updated: dependencies]"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ryanbrandenburg": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/f2d4883db499ec642390b4e17adb7f2ec069d65f", "message": "Clean up NPV.json and update deps"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/c04796fbe9ae22c08e5fe2898c9e58d7bfd5aeb8", "message": "Update bootstrappers"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/2341bfa42515c9e7335657dfda39a490616a7244", "message": "Add RepositoryRoot"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/84425dfe11e60dc13a0609bbf9acda16eb7073fc", "message": "Update bootstrappers"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/f17c5655ad732a98fdd2fb52752b1adb3f6e9575", "message": "Set AspNetCoreVersion"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/5e1be520bd9a2a7f44c2ef298ab04578531897f3", "message": "2.0.0-rtm to 2.1.0-preview1"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/55b3c457f90a8f589944b342e4b68953ceeb7ec4", "message": "Set \"TreatWarningsAsErrors\" before NuGet restore\n\n* Ensures our build stays clean of NuGet warnings"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/11b7ea0e2bd7c806656f2d686bc7b8454cb9be16", "message": "Remove NETStandard.Library.NETFramework"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/32822deef3fd59b848842a500a3e989182687318", "message": "Undo package changes"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "javiercn": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/0d1ca6f660c33a22d8c3c4ddd7ec9383f3dbc065", "message": "Fix broken tests"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/a91742e8b9bb73e537c445cdea6dd61199bb3891", "message": "Fix manifest generation issues and fix default manifest name constant value"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/af6fa5abe701e62d6f3ef5e6ff336c5da293e5a8", "message": "Adds ManifestEmbeddedFileProvider\n* Adds an embedded file provider that uses a manifest to reconstruct the\n  original structure of the file system at the time the files were\n  embedded.\n* The file system is case-insensitive.\n* Manifests containing files with different casing are not supported.\n* The operating system path separators are used, for cross-platform code\n  the recommended path separator to use is '/'"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/2d01f63b9ab6962132fe936f6f74ce78893d6e03", "message": "Fixes to the Embedded file provider MSBuild task"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/d5998f1306ae529e125e951eefda4d5060ae6463", "message": "Add an MSBuild Task for creating a manifest from embedded files:\n* Generates an XML manifest respecting the original structure of the\n  file system at the time the files were embedded in the assembly.\n* `<GenerateEmbeddedFilesManifest>true</GenerateEmbeddedFilesManifest>`\n  enables the feature.\n* Supports changing the manifest name with the EmbeddedFilesManifestFileName\n  property.\n* Supports excluding specific files from the manifest using the attribute\n  ExcludeFromManifest=true on the EmbeddedResource item.\n* Supports changing the path to the file using the LogicalName property\n  on the embedded resource."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/8f62fced49caeb34fe9b5d91edd08dee10d9aae4", "message": "Created public API baselines"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "grahamehorner": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/bd96038a174eb960b2fdd3f160636aa09b1f98af", "message": "Update EmbeddedFileProvider.cs\n\nUpdate of constructor comment to avoid confusions"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jkotalik": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/8a5bec1ea068eb12c61fcc282c061fcf78c6d4f4", "message": "Increase Minimum Version of Visual Studio to 15.3.0"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JunTaoLuo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/185877fd12b0ce189e47a039ae1281d4b44fc2bf", "message": "Ensure fallback to curl after failed wget"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/8380b4a8b326bbb42894b36cc7748aa2b59e05b2", "message": "Update __get_remote_file logic"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/04c278966bc57c0b5474686357096079e59b47cd", "message": "Trim leading slashes in PhysicalFileProvider"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/6c86ff3fc1e8226b66f673e9664ff4e6f55d250d", "message": "Treat Path.GetFullPath exceptions as unknown files #201 #204"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/93c98d9eb8235953aba14e694294766b2a3d4cb4", "message": "Add NullFileProvider #174"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/ae5340aa9eb37cb5b452ebfe09a19d171607db97", "message": "Disable mono watcher"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/bd6070d481b16fa32460d92eb6d537528518d98d", "message": "Updating test TFMs for custom test discovery"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kichalla": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/ed69b312bc3dd826732e8d5153acd22389a5c274", "message": "Updated to use the latest shared runtime"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/712c22f27bccf64aaeca7beda2d16e686e5ab7e8", "message": "Converted test projects to run on net461"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/12388822c16e97fb8c6a76e73cd410d7c948a2a5", "message": "Converted test projects to run on netcoreapp2.0"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/b81e9f9c6197f21a5c75dee884886803209f3a66", "message": "Enable tests to run in dotnet xunit test runner"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/03a79886d8280da5417901e095f9be4d56a38f8c", "message": "Enable pinning build script"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/b355baa420946ee1273a0714a6e0dcc5e31fad7d", "message": "React to Caching api changes"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/121950753", "body": "Ah, so looks like this is a dupe of https://github.com/aspnet/FileSystem/issues/49\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/121950753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/121951610", "body": "@muratg Fixing this issue can help in fixing https://github.com/aspnet/Diagnostics/issues/157 where razor files could be(as MVC gives this option) coming from physical or embedded resources\n\ncc @davidfowl \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/121951610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "BrennanConroy": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/49de885623a7ee99cb35d07ed8712a1ddc390a7a", "message": "Fix: PollingFileChangeToken wasn't watching actual files (#274)\n\nAlso, add above root check to CreateFileChangeToken"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/999b3a8edb17efa10fc75ccfdb87acd7e7120d2b", "message": "Change Xunit versions"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/767f07ff39ec66e567d73a034f11bda260ab6123", "message": "In memory pattern matching files"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/7d9cc6206e1e76dde6da842f3d7fa48fb4c32200", "message": "Update .travis.yml"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/ec05b047d305da03c268dae2c5e69abcfa911315", "message": "Target net45 in Globbing package"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/71277b5cedeb9b424d98028053a1bfd030594085", "message": "Fix restore warning"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/1868755d54bc156a32e18f689b3bb391ca5f3c2e", "message": "Sake doesn't like comments in json"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/a5366af6614835ea4faff7e35c58604563ba5908", "message": "Set modified date in EmbeddedFileProvider"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/b58bbe011ab88335d532762740c43381b36244a7", "message": "Catch in background threads"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/4182ee510df7e817d65b8be07122db57d7f05449", "message": "Fix dependencies"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/4b4ccac36aaabd6a8c2a3c0e8a4b0f6f2a01c43a", "message": "Update Package Verifier"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/befcc5b974d060b011efa1f7655e1ca538da601c", "message": "Move to Extensions namespace"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/158dc437a9db16405436f533f6bd428d6820bc9c", "message": "Do not throw with invalid paths"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/a6ffb85a267cdc8f5985363bfc909904650003d5", "message": "Return correct stems from match"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/df5618509028be6489dbea9ee29626bd0909b586", "message": "Make PhysicalFile Watcher and Provider disposable"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/7efbb86ce93f7adc338a33d2146afcc7db1bab22", "message": "Revert \"Don't throw with : in path\"\n\nThis reverts commit f0577ce2841d7e439f601f6ff6e924b236218fb6."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/f0577ce2841d7e439f601f6ff6e924b236218fb6", "message": "Don't throw with : in path"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/d284b5b421a6e9c329fb1288b1c7d6c56564ff5f", "message": "React to caching package rename"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/7f693ac5cf4ad8b8a3c097cb55b196570fca673e", "message": "Interfaces->Abstractions"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/97617998", "body": "https://github.com/aspnet/FileSystem/commit/7f693ac5cf4ad8b8a3c097cb55b196570fca673e\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/97617998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/comments/18459765", "body": "Yeah https://github.com/aspnet/FileSystem/issues/212\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/18459765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "pakrym": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/4f57121a3d24f4e2b510eba24d317c9b4859031d", "message": "Merge branch 'rel/2.0.0-preview1' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/381c0806c2ee4b02f90267b58b38b1ea28e7f9dc", "message": "Update InternalAspNetCoreSdkVersion"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/138d0cc2abfe1d990301425eae7b067e266bbff4", "message": "Prevent buffer allocation in FileStream returned from PhysicalFileInfo.CreateReadStream (#216)"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/3e6a26e9c9f7b073d9acac93fb47ac6989dbf132", "message": "Reduce allocation in PhysicalFileProvider when used in StaticFiles (#214)\n\n* Don't make FileStream allocate large buffers for small files\r\n* Don't box enums"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/9900689beefef536ed788dad3b670e185f467951", "message": "Set embedded files provider namespace to assembly name by default"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/a08d8bb83c725836c1c158f08b389660fa3b36c6", "message": "Add test that ensures system files return NotFound"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/74f6c784bed7cef30ea6cb52c5eced654576aca0", "message": "Merge branch 'release' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/946fe3554bdf494489a2a7adeea67e882954030a", "message": "Bring Microsoft.NETCore.Platforms dependency back"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/1c4a57a78b4803fe86291dbff3c4ea82c808c6d5", "message": "Merge branch 'release' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/a76c820be3fa62a74f719fe8537bbc217458292b", "message": "Migrate tests, tools and samples to portable"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/7a06778a7e232aa6556913072fca2b7a9ce711ae", "message": "Change disable test message"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "smitpatel": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/839e526eb7ee5a1fad9426df0563a8c6086dca96", "message": "Update API Check related files\nReact to aspnet/BuildTools#238"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jbagga": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/4f4c40027d0e5605773ba8e3d69fb862d19f4129", "message": "Disable test (#265)\n\nSee #263"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/307f9a237ffd81a1fb33ccb530a3981dd6fd9877", "message": "Change CompositeFileChangeToken to CompositeChangeToken \n\nAddresses Common Issue https://github.com/aspnet/Common/issues/163"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "davidfowl": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/93332cb83bfaaedcef213466b167b5d76eaedad0", "message": "Merge pull request #260 from aspnet/no-mono\n\nNo mono"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/fe7c5b9e8409471ac88062237dc663e36e80d6cf", "message": "Update .travis.yml"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/a7462a492cc280ec8df6ec789813864a329eaba1", "message": "Fixed build"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/35363851", "body": "@nguerrera we can nuke it. It's a poor assumption anyways.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/35363851/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/37146561", "body": "Thing is, it's readonly and it's only used for a small subset of scenarios. There's still regular System.IO for the bulk of other stuff. Also I'm not sure which part of the system is going to be creating these? Is it the web host or is it the klr host?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/37146561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/46821531", "body": "It only exists in core clr it's not on the full .NET framework\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/46821531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/53021588", "body": "Was this tested on mono?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/53021588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/55471025", "body": ":shipit: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/55471025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/56325586", "body": "Unrelated by related question: Should the view engine be able to enumerate view locations so the precompiler doesn't need to bake that logic in?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/56325586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/66376057", "body": "Does this work for directory renames and deletes? \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/66376057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67525548", "body": "You may want to handle/catch/swallow long path exceptions.\n\nDoes this handle directory deletions as well?\n\nIf the file system has:\n\nC:\\foo\\1.txt\n\nI'm watching for *_/_.txt. When I delete the foo folder, will I be notified?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67525548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67533710", "body": "That patten doesn't match a directory. I'm not sure this code works for deletions\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67533710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67534658", "body": "No way, directory delete events don't trigger events for a files under that directory... Does it?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67534658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67539195", "body": "Recursively?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67539195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71072874", "body": ":shipit: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71072874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71072946", "body": "Lets get the initial commit in then clean up all the styles.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71072946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71301213", "body": "Why?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71301213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71779511", "body": ":shipit: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71779511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74138438", "body": "Can you give an example?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74138438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74551612", "body": ":shipit: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74551612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/78859468", "body": "This is in the wrong place. Can you file this bug on the Home repository.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/78859468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/78860338", "body": "Not likely, this library was written for a few reasons.\n- Regex is slow, we don't want it\n- We're very performance sensitive includes and excludes need to be evaluated folder by folder (so we don't enumerate the exclude to figure out what to exclude).\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/78860338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/86834774", "body": ":shipit: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/86834774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/86848966", "body": ":shipit: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/86848966/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90294545", "body": "Why is the CI failing?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90294545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/96415113", "body": "I think we have to drop this behavior completely. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/96415113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/99177352", "body": "I don't think we approved this bug.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/99177352/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/99547685", "body": "I don't think so. This isn't a generic file system abstraction. A blog storage implementation would be pretty weird.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/99547685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/117897050", "body": "Those types are in a .Sources package which is meant to be helper code referenced by your project and internalized. We don't currently publish .Sources packages to nuget.org but it should be possible to reference them via our myget feed\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/117897050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/118328174", "body": "file this on the dnx repository\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/118328174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/121566167", "body": "@pranavkm was this fixed?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/121566167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/comments/9454795", "body": "always use named parameters when you pass null, true/false or numbers (see the coding guidelines :smile: )\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/9454795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/14879143", "body": "What? Add comments please.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/14879143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/17061646", "body": "Our env variables are `ASPNETCORE_*`\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/17061646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/17061647", "body": "why\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/17061647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/17061648", "body": "wuat\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/17061648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/17061652", "body": "Should look like System.Runtime.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/17061652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/18459682", "body": "for nuget?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/18459682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17488986", "body": "Can we nuke this entire function and dictate absolute paths instead? \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17488986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17489581", "body": "Path.GetFullPath is relative to what though? Doesn't it assume current directory?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17489581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17490016", "body": "Ok how about we add a check for rooted paths? This way we can make sure it won't mess up the relative path resolution.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17490016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17913144", "body": "singleton?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17913144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21689137", "body": "Why are we compiling the regex? Can you remove that?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21689137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22056879", "body": "These look like functional tests. Why not just test the logic without actually raising file changes? This looks unreliable\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22056879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22057547", "body": "Of course there is. Just call a method that forces that code path without actually watching files. You're testing how the code reacts to changes not the watcher itself \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22057547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23202445", "body": "What is this crap?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23202445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23397614", "body": "No\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23397614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23436924", "body": "readonly?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23436924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "dougbu": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/d7b2748049203b8a1320b0b75bdc6bbdd4c2743d", "message": "Bump test projects up to .NET 4.5.2\n- aspnet/Testing#248\n- xUnit no longer supports .NET 4.5.1\n- build tests for desktop .NET only on Windows"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/839ec1b2af1bca4d236f9a03108ab28afcbe76d2", "message": "Revert \"Bump test projects up to .NET 4.5.2\"\n\nThis reverts commit 56a7da3f5eada8dca43052d97361ebd6d65e158e."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/56a7da3f5eada8dca43052d97361ebd6d65e158e", "message": "Bump test projects up to .NET 4.5.2\n- aspnet/Testing#248\n- xUnit no longer supports .NET 4.5.1\n- build tests for desktop .NET only on Windows"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/f578108e64d170550c306f896b90410b49eb1947", "message": "Increase .travis.yml consistency between repos\n- aspnet/Universe#349\n- minimize `dotnet` setup time; no need for caching\n- build with `--quiet`\n- `MONO_MANAGED_WATCHER` env variable is no longer relevant"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/8dca628d2646dbf9a0dec670178ae4b24cd02e6e", "message": "One build to rule them all\n- well, at least VS and command-line builds will share output\n- part of aspnet/Coherence-Signed#277"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/e2ad63cde8d24bfe0d6ec1f3ef9a104ca6b4604b", "message": "Remove project name from output path\n- aspnet/Coherence-Signed#187\n- remove `<RootNamespace>` settings but maintain other unique aspects e.g. `<DnxInvisibleContent ... />`\n- in a few cases, standardize on VS version `14.0` and not something more specific\n- correct outdated paths such as `..\\AspNet\\Microsoft.Web.AspNet.Props`"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/55382a84f173e4da0d8f3424cb145a4800963a97", "message": "Update `build.cmd` to match latest template\n- aspnet/Universe#347\n- `%KOREBUILD_VERSION%` doesn't work without this fix"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/5d9ae0147f000010184fcdc9704b589bf892c10d", "message": "Move Travis to supported Linux distribution\n- use Ubuntu 14.04 (Trusty)\n  - Travis support for Trusty is in Beta and currently requires `sudo`\n- run `dnu restore` with DNX Core since aspnet/External#49 is not fixed in Mono versions we can use\n- add required dependencies for DNX Core to `.travis.yml`\n- addresses part of aspnet/Universe#290"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/e23ae6c50736c99a926e16eb7ad6febdd01d0c90", "message": "Explicitly choose Mono 4.0.5\n- avoids future problems related to aspnet/External#48\n  - e.g. when Travis updates default Mono version in `csharp` bundle"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/be8f6105ac82cd93635f74cf5a434e2e10ff5e89", "message": "Fix local build break"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/b091b3383bdec227cceb24d89e1ec36e5ea67ff2", "message": "React to aspnet/Universe#290 fix"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/a676c9c6c6f3427c83bfaff29adbc7c168074460", "message": "Change hardcoded `bash` shebang to `env`\n- aspnet/Home#695\n- support various `bash` installation locations\n- in particular, enable building on FreeBSD"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23203293", "body": "FYI @ToddGrun is working on making this addition of the default schema stop.\nSuggest reverting these lines.  Otherwise you'll be locking in the current default.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23203293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "NTaylorMullen": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/ac5e3f27f5c3fcdfd35eb15d51efc3f509b0fa0f", "message": "Move conditional theory and facts to runtime verification steps.\n\n- This works around #254. Aka, new CSproj test infrastructure doesn't understand custom XUnit attributes.\n\n#254"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/985ac725e3bbb48ea678983465a98ea3b0dea5d7", "message": "Update .travis.yml osx image to xcode7.3."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/bb1c51d9591eb4ef53284db2a06c593c11afc1df", "message": "Pin global.json SDK to 1.0.0-preview2-1-003177."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/ff90ae8c18ef07fcc22ec6cbd2673c63df4052a8", "message": "Remove direct Microsoft.NETCore.Platforms dependency.\n\n- Microsoft.NETCore.App now pulls this package in.\n\naspnet/Coherence-Signed#344"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/818330ec4c8b7d8ca126fa82e5c2c384fe0b4914", "message": "Revert \"Add Visual Studio specific RC1 binaries.\"\n\nThis reverts commit 45a93924a14ea802dd8d18b250d7e712ce3e0671, 36bad41b355382c51d8a4a5d9cf022d33cbbb90b and 3ca5025090686dd6590aeacea42c7585f7820c55.\n\n#179"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/3027b0094b66ab43f3a97d008314b76f38be59b3", "message": "Merge branch 'release' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/98ea34e732734413da699959dd0342033de8c149", "message": "Swallow IO related exceptions on file rename events.\n\n- When enumerating files in the `e.FullPath` directory it's possible to get IO exceptions due to renames, folder structure changes and file locks. This swallows those exceptions.\n\n#187"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/3ca5025090686dd6590aeacea42c7585f7820c55", "message": "Ignore doc comments for VSRC1 projects."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/36bad41b355382c51d8a4a5d9cf022d33cbbb90b", "message": "Add `AssemblyCompany`, `AssemblyCopyright` and `AssemblyProduct` attributes to the assembly."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/45a93924a14ea802dd8d18b250d7e712ce3e0671", "message": "Add Visual Studio specific RC1 binaries.\n\n- This is needed for Visual Studio RC1 backwards compatibility."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/909c33952bedf691a9cf962c602b92790448af57", "message": "Transition to netstandard.\n\n- dotnet5.X => netstandard1.y (where y = x-1).\n- DNXCore50 => netstandardapp1.5.\n- Applied the same changes to ifdefs."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/095cb27713d89fe78bd3856a9410ae7454efd402", "message": "Update System.Linq 4.0.2-* => 4.1.0-*."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/0d5154eedfbd024cf06dc28dacd4f5c78e8a6a1f", "message": "Rename AspNet 5 file contents.\n\nSee https://github.com/aspnet/Announcements/issues/144 for more information."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/6e0392186716aa86db225e301247ed69a199814c", "message": "Remove System beta tag in project.json for coreclr packages."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/56d1df909f54074d7a0603b51e1e5b088be86f96", "message": "Update 'build.cmd' alias parameter to use full name."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/9d5cc8123a1b6d0424f79dbe426bc77e4c230e20", "message": "Update nuget.exe and corresponding feeds to v3."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/5357973fb95aa7c50f71131e927753ca22d337b0", "message": "Update 'build.sh' to pull Sake from v2 NuGet feed."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/07ce432a0444005ccc5dee3699e0e611a078f58a", "message": "Update 'build.cmd' to pull Sake from v2 NuGet feed."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/ec8f739ad18f5f9eea539591fc2bdf9681b62777", "message": "Update NuGet feed from v2 => v3."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/bbd3ab45b2837f5b7a73c3eadb182f43bb4bfc67", "message": "Add LICENSE.txt"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/830567aa0ceb752a5e5c051d075e8a0ab7df1dbc", "message": "Update LICENSE.txt and license header on files."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/21bf1d4b702e23596a202ef3759d56b65097dcd7", "message": "Add serviceable attribute to projects.\n\naspnet/DNX#1600"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/7772a3d472797ea3c181feda220512b69208a136", "message": "Update .travis.yml and appveyor.yml to build quietly."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ajaybhargavb": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/fee0b644cca74c817c118a297752df8cc8cab334", "message": "Removed packages list in NuGetPackageVerifier.json"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/f71c4939923d881a9c3bcc1b36007b3b7830f993", "message": "Added Company, Copyright and Product attributes to AssemblyInfo"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/5660ab190fbe067d952ac86e040a832ebfafecb0", "message": "Enabling xml doc generation"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/9a1fe8d0ce93cee082563bbcb1c4551f41197347", "message": "Enabling NuGetPackageVerifier"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dazinator": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/5f633a68f7d5ed27e9b65cb2b8324e8547511299", "message": "Link to InMemoryFileProvider (#246)\n\n* Link to InMemoryFileProvider\r\n\r\nAs per @pranavkm's comment on #221 - adding a link to my contrib project.\r\nMade it a table in case there are other community contributions.\r\n\r\n* corrected readme as per pr review\r\n\r\n* corrected readme"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/comments/22666312", "body": "Ah \"Pubternal\".. i'll have to remeber that :-)\nPubternal definately sounds better than internublic. ", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/22666312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "ardalis": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/c0380bd1863219b8db345364e2f1315cf2b1ad26", "message": "Typo fix (#230)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cesarbs": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/1297b7ff84b00a16b03e0a98c2441faa778180f5", "message": "Fix OSX build on Travis."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/9deb6098b2c031a2431cff4f5517da94ba271f59", "message": "Prevent navigation above the root of PhysicalFileProvider."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/325d550fa9e04be9927547123c5dd7c55d8e127a", "message": "Don't test FileSystemWatcher and FileInfo in PhysicalFileProvider tests."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/4c70f28dcb70ef7ae407e1c990c2dc915d403e80", "message": "Use separate directory for each PhysicalFileProvider test to avoid errors in FileSystemWatcher."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/1bc5120b507d8be7012e16ec7805f74ef175cea0", "message": "Merge branch 'release' into dev"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/7be0fb5688cb014446ae6daa63eef995cdeb1120", "message": "Strong name everything."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/4b393eba60ac7df960a6a198138b65f49a4a91a5", "message": "Refactor some PhysicalFileProvider tests. #134"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "victorhurdugaci": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/ee0d82e44b0478d3589919fcbc043cdd6f8e10fb", "message": "Renamed the environment variable used for polling watcher"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/f6ad00bcb549ebf3132c2904dbc0c62c7c3783fb", "message": "Webhooks notification"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/da74cca2b873935e8eeb0f8f0e13a27368fe2fea", "message": "Update the build scripts to the latest version"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/a4147d4f473619fe250ec732393b37d7dab0b090", "message": "Return the error code from build.cmd"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/598d61dac762bad6bddc8a26b89d2fb70c9af4ed", "message": "Update the build scripts"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/4a9a0fd8a37aeb6e21c06f065e43f5f036f10abf", "message": "Add imports for the latest CLI"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/132b083bb0bf07173848136067afb6ebbc9d81e4", "message": "Build with dotnet"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/1410e23fac00bbec69aa9f8820cd2ff061b6b8cb", "message": "Add repository information to project files"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/bf1b44521319f7366b0ab98142e349f436eca009", "message": "Update to the new resource names"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/69791321", "body": "The test change looks good to me but I am wondering if there is a real world scenario in which an app could have a different behavior on Win7 because of this.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/69791321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/69793211", "body": "ok, :shipit: then\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/69793211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90716380", "body": ":shipit:\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90716380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90762318", "body": "@pranavkm updated\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90762318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90987107", "body": "Overall looks good\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90987107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/comments/8547804", "body": "https://github.com/aspnet/Home/issues/183\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/8547804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/8721921", "body": "Part of https://github.com/aspnet/Home/issues/183\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/8721921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Driedas": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/f282bcee933debdbcb9765c51eeb4ef2ca190efc", "message": "expose NoopChangeToken, NotFoundDirectoryContents, NotFoundFileInfo as public, move to Abstractions"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "henkmollema": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/7dace21dc1db30c4eaa58d8fb90e33ad6d56dc02", "message": "Expose configured file providers in CompositeFileProvider"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bricelam": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/f966d4e5f722fff62bc5c2b2a1c931d03ca2a05a", "message": "Don't reference facades"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "moozzyk": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/40d5602fb5692d750436dca747865f3f63bb743e", "message": "Adding missing dependencies"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mgrosperrin": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/5469c5ba4334f1e9d33e620558e4496df2ec95f8", "message": "Change NoopChangeToken to return an empty IDisposable when calling RegisterChangeCallback\n\nThe EmptyDisposable is implemented as singleton to avoid memory useless\nallocation.\nThe CompositeFileChangeToken and the tests has been updated to reflect\nthis change.\n\nFixes #154"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/15c9f1d229b000d9b2472b1fcfd22120a116669e", "message": "Add CompositeFileProvider\nThe CompositeFileProvider merges the content of the directories\n\nFixes #49"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "anurse": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/8a835fc7b027418eccf1decf17206db6e12ad01a", "message": "teach Matcher to return Stems for matches\n\nrelated: aspnet/dnx#848"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "troydai": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/638e66f28af30f4585d6894221f12d4692ec1d28", "message": "Update packages' versions"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/fdde00e5b45a1d61b18d5493058282847905071b", "message": "Upgrade CoreCLR versions for globbing"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/fbba1a541bcd9e5e4efab0342a3da7343af24c50", "message": "Upgrade CoreCLR versions"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/1959ead87e0482b12ed1008ff23220c276447099", "message": "Enable configure the globbing comparison type"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/d77361954ed0e177937b76f892be6f64ca413e28", "message": "Update solution file"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/3eef64e783e8af00c9c46ada0543e38d757361d4", "message": "Package rename: Microsoft.AspNet.FileProviders.Common -> Microsoft.AspNet.FileProviders.Sources"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/f03327ca0114ee1c1658bcd2cf71edcf46706318", "message": "Update comments in DirectoryInfoWrapper.cs"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/b7688b13a4283558d94a427c12750eff292bb814", "message": "Get sub directory instead of form a path from literal path segment\n\nEnsure directory including is case sensitive."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/9f1ac956f710a150aa12ef33e543753a05ec72d0", "message": "Add test cover case-sensitive including and excluding"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/e6210f1dfebd10175b1f61f36dfcab4c3a48973b", "message": "Guard null for value in LiteralPathSegment"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/73a6f548452d8c51228e1669970671c10a9972d2", "message": "Add tests cover both backslash and slash in duplicat patterns scenarios"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/7cc92a258afe016745789f2a2060ce1bee05f3d5", "message": "Update MatcherContext's private fields"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/0bfb0eaae2eaf14e00344b87c176adf02cad12be", "message": "Use HashSet to eliminiate duplicate declared folder and files"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71067803", "body": "@davidfowl @lodejard \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71067803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71073653", "body": "I'll merge in a few minutes\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71073653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71074756", "body": "Rebased, will merge in a few seconds.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71074756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71075211", "body": "@pranavkm @Praburaj @davidfowl \nI'll keep monitoring this PR though I merged the changes. Please keep commenting I'll address the concern in next PR. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71075211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71131115", "body": "@loudej @davidfowl @Praburaj \nIn latest commit, I clean up the codes in `MatchContext`. I recognize that the `MatchContext.Execute` is essentially a **Pre-Order, Non-recursive, tree traversal**. Base on this assumption I made following changes:\n1. Remove the guardian `FrameData` which is used to determine the termination of the loop. Instead, it now directly detects the size of the stack.\n2. Remove unused stages. Instead, there will be only two stages for a node, _visited_ or _not visited_. Children enumerating will happen in when the current node has been visited.\n3. The original implementation of iterating the siblings requires three properties on the `FrameData` a boolean, a list and an enumerator. I change them to an array and an index to facilitate the logic. It not only reducing the number of properties but also make the logic more readable. In previous review it clear the enumerator brings confusions.\n\nThere are also other minor changes for cleaning up the codes. They were not listed. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71131115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71159411", "body": "@Eilon @pranavkm @davidfowl @loudej \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71159411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71690929", "body": "@davidfowl @loudej @Eilon @Praburaj @pranavkm  :watch: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71690929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71761033", "body": ":watch: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71761033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71770118", "body": "@davidfowl ship it?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71770118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/72718235", "body": "https://github.com/dotnet/coreclr/issues/29\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/72718235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/72754325", "body": "@lodejard @muratg \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/72754325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/72754336", "body": "@Praburaj \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/72754336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/72802537", "body": "Yes, after discuss with you guys that's what I'm intend to do.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/72802537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/73100620", "body": "@davidfowl @lodejard @muratg @Praburaj \nAny suggestions? \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/73100620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/73101007", "body": "https://github.com/dotnet/corefx/issues/616 is supposed to be fixed.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/73101007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/73339627", "body": "@muratg please take another look.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/73339627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/73596955", "body": "Thank you all for the review. I'm going to merge and push in minutes.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/73596955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/73809577", "body": "@lodejard @davidfowl @Praburaj \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/73809577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/73912203", "body": "Ping, any further comments?\n\n@davidfowl @lodejard @muratg \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/73912203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/73941961", "body": "Looks good? Going to merge soon.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/73941961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/73947456", "body": "@loudej @davidfowl @Praburaj @muratg \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/73947456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74015789", "body": "I should try `**`. And also `**.suffix` was supported. It is actually used in template https://github.com/aspnet/Templates/blob/master/src/StarterWeb/project.json#L43.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74015789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74108656", "body": "@lodejard looks good?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74108656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74113068", "body": "Super. I will rebase and merge in minutes.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74113068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74152727", "body": "@davidfowl Here's my understanding: For @DamianEdwards to unit test a component which uses the `Matcher` is difficult because the `Matcher` is none extensible. Therefore you can't mock it. \n\nThis is a good point. Given that almost or the other components in `FileSystemGlobbing` are mockable, the `Matcher`'s testability looks odd. I believe the solution is to either introduce a `IMatcher` interface.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74152727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74583279", "body": "Can't check in right now. Pending on **internialization** of FileSystemGlobbing in runtime. Otherwise the test will always fail because the runtime pull in old version of FileSystemGlobbing.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74583279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74595370", "body": "Assume it's a :shipit: ?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74595370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74595608", "body": "Fixed in ff1f436dc5457f2aa2f520806f23d9356a09b4ac\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74595608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/75116620", "body": "Thank you @Andorbal. The changes look good to me as well. :shipit: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/75116620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/75139320", "body": "Yes, I'll.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/75139320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/75142088", "body": "It is merged.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/75142088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/75147826", "body": "Oh, yeah. With the globbing be internalized in runtime. This PR can be merged as soon as there is a new KRE published.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/75147826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/75168832", "body": "Changes pushed, build passed, and the package is on the volatile feed. Enjoy.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/75168832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/75171203", "body": "https://github.com/aspnet/FileSystem/commit/3a00f0b05b163120a66ea6a1ec048aee34451dbd\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/75171203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/77701629", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/77701629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/86849596", "body": "@loudej @lodejard @davidfowl \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/86849596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/87005479", "body": "Ping @lodejard @loudej @davidfowl \n/cc @muratg @Praburaj \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/87005479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/87098097", "body": "Thanks @hishamco. It looks good to me. \n\nI'd like bring another pairs of eyes to take another look. \n@glennc @Praburaj \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/87098097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90161638", "body": "/cc @muratg \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90161638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90170261", "body": "I'm running a few more performance test to verify the fix.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90170261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90235108", "body": "Assign to @Praburaj since you're fixing the travis CI\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90235108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90292654", "body": "/cc @Praburaj \n\n@davidfowl @Eilon Updated :watch: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90292654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90404507", "body": "@Praburaj case-sensitive case will come in when I fix the directory case sensitive case.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90404507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90404845", "body": "@davidfowl CI failed at package restore.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90404845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90461293", "body": "/cc @muratg @glennc  please triage.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90461293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90606939", "body": ":watch: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90606939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90694554", "body": "CI passed. Any further comments, everyone?\n\n:watch: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90694554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90985711", "body": "Rebased. Add more reviewers\n\n@Praburaj @victorhurdugaci @BrennanConroy \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90985711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/91302935", "body": "Fixed\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/91302935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/99940129", "body": "Fixed in 3eef64e783e8af00c9c46ada0543e38d757361d4\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/99940129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/100047349", "body": "On it.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/100047349/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/100048274", "body": "@hishamco your change has been merged. Thanks for the contribution!\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/100048274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/100271785", "body": "Fixed in a2a6b9096c03ebbf356590944633343719d6aa0a\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/100271785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/115396114", "body": "Ping @davidfowl @lodejard @pranavkm @Tratcher @victorhurdugaci \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/115396114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/115867890", "body": "Yeah, it's ugly. But CLR essentially do the same thing:\nhttp://referencesource.microsoft.com/#mscorlib/system/string.cs,2388\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/115867890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/119297415", "body": "Ping @Tratcher @davidfowl @pranavkm \nAny further comments?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/119297415/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/119327979", "body": "I didn't look into this yet. I'll assign it to myself.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/119327979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/119345356", "body": "Can't repo on latest build. Close.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/119345356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/119362773", "body": "I found a bigger issue here.  More work is needed to enable this change on Linux. The key issue is that `DirectoryInfo.GetDirectories` of Mono is case sensitive. To enable case insensitive we need to fallback to get all the child filesystem object from current directory and then filter. The logic will also invalidate some of the original design because now it is possible that one literal string can match multiple results under case-insensitive policy.\n\nClearly the scope of the change is bigger.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/119362773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/119377031", "body": "Ping @pranavkm @Tratcher @davidfowl @lodejard please help to review the last commit. It addresses the issue that on Mono `GetDirectory` is case sensitive.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/119377031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/119460111", "body": "Ping\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/119460111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/119629600", "body": "Ping\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/119629600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/119692524", "body": "The impact to consuming code is minimal. The exposed interface `Matcher` is not changed. Unless there is user out there implement the _internal_ interfaces, no should would be affected.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/119692524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/120115862", "body": "Updated :watch: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/120115862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/121063509", "body": "Ping @davidfowl @pranavkm @Tratcher \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/121063509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/121382451", "body": "The change integrated with DNX has been tested in Universe Repo\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/121382451/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23395944", "body": "Yup. It shall be deleted. Adding the exclusion to .gitignore?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23395944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23403643", "body": "Linq has potential performance issue. One major goal of these code is for performance gain in file iteration.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23403643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23411128", "body": "It's hypothetical. However, as is the code should perform better than Linq style. Beside the relatively clean states we can benefit from using Linq, I don's see strong motivation here to adopt Linq. I'll try to see if I can clean up the repetitive logic here.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23411128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23433778", "body": "We are not going to this to avoid a reverse dependency from Microsoft.Framework.\\* to Microsoft.AspNet.*.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23433778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23433787", "body": "Please check this PR for the update https://github.com/aspnet/FileSystem/pull/52\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23433787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23433789", "body": "No. It's not an error.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23433789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23433810", "body": "This is a pre-order non-recursive tree traversal.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23433810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23433812", "body": "Will be remove. https://github.com/aspnet/FileSystem/pull/52\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23433812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23433817", "body": "Will update.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23433817/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23433832", "body": "This is cleaned up: https://github.com/aspnet/FileSystem/pull/52.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23433832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23433836", "body": "This is cleaned up: https://github.com/aspnet/FileSystem/pull/52\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23433836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23433838", "body": "This is cleaned up: https://github.com/aspnet/FileSystem/pull/52.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23433838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23433844", "body": "This is cleaned up: https://github.com/aspnet/FileSystem/pull/52.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23433844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23433851", "body": "Will address.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23433851/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23433857", "body": "Yup.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23433857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23434061", "body": "https://github.com/aspnet/FileSystem/blob/filesystemglobbing.followup.1/src/Microsoft.Framework.FileSystemGlobbing/Infrastructure/LiteralPathSegment.cs#L19\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23434061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23434122", "body": "Will address.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23434122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23434582", "body": "Got it. Will update.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23434582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23435427", "body": "Updated in #52 \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23435427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23435491", "body": "#52 \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23435491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23435515", "body": "Renamed to `FileSystemGlobbingTestContext`. #52 \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23435515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23435647", "body": "Will address.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23435647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23436030", "body": "Nah, there are actually two derived types.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23436030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23424159", "body": "yeah.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23424159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23424165", "body": "I'll use the Linq instead.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23424165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23424169", "body": "yup.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23424169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23437227", "body": "will do.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23437227/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23469226", "body": "Yeah, legacy names. I'll update.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23469226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23469282", "body": "You're right. There are a few other places using the same pattern. I'm going to sweep them together.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23469282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23469390", "body": "Yes, we do. The `? :` operator can't deduce the correct return type when the two variables on the both side of `:` are of different type even through they share the same base type. The operator simply don't climb the hierarchy on both type.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23469390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "ChengTian": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/aa45dc43c0d92597766f5fb832b5f5c9c3134e55", "message": "Add regex match timeout"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hishamco": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/a2a6b9096c03ebbf356590944633343719d6aa0a", "message": "Handles '/' and '\\' in PhysicalFileWatcher.IsDirectoryPath"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/84213554", "body": "@Praburaj Regarding the issue #41 this issue should be mark as \"Closed\"\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/84213554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/84453678", "body": "@Praburaj I don't think that GetFileInfo will take much time, but i'm with you that GetDirectoryContents should be async\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/84453678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/87096931", "body": "@troydai Done!!\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/87096931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/87233163", "body": "@pranavkm i'm agree with you that it will be nice to get to the Path of `IFileInfo` without it being ties to a PhysicalFileSytem, but instead of adding an extra property Path in `IFileInfo` I suggest to rename `IFileInfo.PhysicalPath` to `IFileInfo.Path` which is represent the physical path in `PhysicalFileSystem`, relative path in `EmbeddedResourceFileSystem`, resource path in `OneDriveFileSystem` .. etc\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/87233163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/96413752", "body": "@tugberkugurlu i don't think that the `Exists` property should be async\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/96413752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/99608342", "body": "@davidfowl I'm agree with you what you said before, nothing but if we have a file system directory that contains nested directories and files, the `GetDirectoryContentsAsync` will be very helpful in such situation\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/99608342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/100052032", "body": "You are welcome\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/100052032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/100186459", "body": "@glennc Can you close this?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/100186459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/100187510", "body": "Of course @Eilon , thanks for your reminder :)\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/100187510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/113140923", "body": "/cc @Eilon\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/113140923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/114729443", "body": "@Eilon can you please mark this as **Blocked** until the `[NotNull]` is implemented, to avoid close it by mistake\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/114729443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/115674924", "body": "I didn't mean you :smile: but this tag will notify the others this PR blocking something else, you can see https://github.com/aspnet/Identity/pull/485\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/115674924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Tratcher": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/5b5afb5b582a7c4b0aec74b352db8d45fd93cf6b", "message": "Add missing dependency."}, {"url": "https://api.github.com/repos/aspnet/FileSystem/commits/bf092bc5f10d38de03200c7d68b35596d86fe9fd", "message": "#48 Seperate Physical and Embedded into their own packages."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/52955563", "body": "Add relevant tests showing how to traverse both up and down a directory structure without relying on the IFileInfo.PhysicalPath property or doing any manual path manipulation.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/52955563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/53342552", "body": ":shipit: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/53342552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/55439497", "body": "Updated.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/55439497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/55959242", "body": "What feature are you working on that depends on these changes?\n\nHave you tried updating up StaticFiles yet? I suspect the TryGet APIs were easier to use there than the new version.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/55959242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/60784817", "body": "See also https://github.com/aspnet/Caching/issues/14\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/60784817/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/65163973", "body": "Looks fine. :shipit: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/65163973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/66375391", "body": "Looks good to me.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/66375391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/69795621", "body": ":shipit: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/69795621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/70583582", "body": "*Provider\nMs.Aspnet.FileProviders\nIFileProvider\nPhysicalFileProvider\nEmbeddedFileProvider\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/70583582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/70585271", "body": "@davidfowl @Eilon do you also want to rename the repo?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/70585271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/70698478", "body": "@Eilon  Github is now gracefully redirecting for repo renames. See http://github.com/aspnet/kvm\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/70698478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/70717159", "body": "Whenever you're ready. It won't impact my MVC fixes.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/70717159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/94963315", "body": "The code looks fine, though I'm not sure what is accomplished by fragmenting to this degree.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/94963315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/95363326", "body": "Updated @Eilon \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/95363326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/95673597", "body": "Updated.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/95673597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/115427210", "body": "Still weird, but better.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/115427210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/116778880", "body": "Ask @loudej \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/116778880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/119657388", "body": "Seems ok. How impactful is the change to consuming code? Will you send separate PRs for them or just hot patch them?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/119657388/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/16609383", "body": "Linux paths are case sensitive, no? Should we be accounting for that here?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/16609383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17489426", "body": "GetFullPath is still called for normalization (slash direction, resolve ..\\ segments, etc.). Later we do a path.StartsWith(Root...) so the format needs to be precise.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17489426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17489847", "body": "True. We can't choose which normalizations it does for us, and trying to filter out different kinds of relative paths before calling it is error prone.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17489847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17692226", "body": "Typo: \"Returns ____ if file does not exist.\"\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17692226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17692748", "body": "Why not delete the directory?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17692748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17692857", "body": "Inconsistent naming, `MissingResourceFileInfo` vs `NotFoundDirectoryContents`\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17692857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17692903", "body": "`RestrictedFileInfo` duplicates `MissingResourceFileInfo`\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17692903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17693077", "body": "Razor (or MVC) was using this. What's the plan here?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17693077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17693238", "body": "\" Folders will be created if needed. \"?\nCopy-paste error?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17693238/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17693246", "body": "\"Delete\"?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17693246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17694142", "body": "Does this update FileInfo.Exists?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17694142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17694461", "body": "Do we need an IsReadOnly property?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/17694461/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20894260", "body": "Remove redundant test cases.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20894260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20896997", "body": "No. Unless you have user scenarios for it?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20896997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21131863", "body": "NotSupportedException?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21131863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132003", "body": "Stream.Null would be worth considering. If they're not going to check for .Exsits, I doubt they'd check for null.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132112", "body": "InvalidOperationException seems more appropriate for a directory.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21345054", "body": "How is the caller supposed to know this isn't supported? SupportsChangeNotifications?\n\nReturn a no-op trigger instead. It should probably have Active = false and throw if you try to register a callback.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21345054/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21345155", "body": "Could this just say \"The file does not exist\"?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21345155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21345655", "body": "Is this property thread safe? Even if it is we don't want to set it on every change.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21345655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21355751", "body": "Yeah, they could all be more user friendly. e.g. \"Cannot create a stream for a directory\".\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21355751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21355777", "body": "nit: line length.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21355777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21355803", "body": "nit: internal classes should not have any public members.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21355803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21355836", "body": "CacheModified is no longer used.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21355836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21355882", "body": "nit: ordering.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21355882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21356029", "body": "TokenSource is an implementation detail, make it private and just add a Changed() method.\n\nAlso note that CTS.Cancel() executes all the registered callbacks inline, not to mention re-throws their exceptions. I don't think you want that happening inside of your OnChanged event, there's no telling what it will do to the FileWatcher. Push it to the threadpool with a Task.Run and catch all exceptions.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21356029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21557305", "body": "IgnoreCase may be a problem on Linux.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21557305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22473401", "body": "Internal?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22473401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22473505", "body": "FilePatternExpirationTrigger?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22473505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22473665", "body": "Consider using the ISystemClock pattern we use elsewhere for testing. See MemoryCache. It limits the number of custom test classes you need to create.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22473665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22473722", "body": "LessThan vs NotEqualTo?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22473722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23202734", "body": "Ask VS, they keep adding it.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23202734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23203487", "body": "It has already worked its way into many of the sln and kproj files. Once the issue is fixed in VS we'll want to do a general scrub to remove them.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23203487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "Praburaj": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aspnet/FileSystem/commits/ecfa7aa7c353520c147a9172dc50b5effecb66eb", "message": "Adding a package description for file globbing package\n\nFixes: https://github.com/aspnet/FileSystem/issues/75"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/64460209", "body": "@lodejard @Tratcher @pranavkm - Updated the PR. \n\nThis contains the new method I added for getting a file trigger in IFileInfo. This change will require changes in static files middleware package and razor. I will be making those changes and sending separate PRs. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/64460209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/64499127", "body": "Updated PR - addressed all the PR comments. \n\n@Eilon - All of the doc issues you pointed out are fixed. Let me know if anything is missed. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/64499127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/65162605", "body": "@pranavkm @Tratcher .I addressed all the feedback. Do you have any more feedback. Otherwise let me know I can merge. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/65162605/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/65285313", "body": "@pranavkm updated PR. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/65285313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/65289502", "body": "Thanks everyone\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/65289502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/65728927", "body": "@Tratcher @pranavkm updated PR with feedback. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/65728927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/65839280", "body": "@Tratcher Updated.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/65839280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/66342867", "body": "@loudej @pranavkm @Tratcher - Here is an updated PR with IFileSystem level Watch method taking in patterns to monitor file/directory. I also added a handful of tests. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/66342867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/66369910", "body": "@Tratcher @Eilon @loudej @pranavkm updated PR with CR feedback. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/66369910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/66385206", "body": "@davidfowl - yes it does. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/66385206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/66404992", "body": "@pranavkm - Did you have any specific comments? \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/66404992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/66493903", "body": "Updated PR.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/66493903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/66648110", "body": "@Tratcher @pranavkm - Can I get a sign off on this to merge? \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/66648110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67082396", "body": "Fixed with https://github.com/aspnet/FileSystem/commit/2663b9d0db12ef10717d8e9edcdba735ee8c708b\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67082396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67531619", "body": "Yes. You get notified for directory deletions for this filter.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67531619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67534131", "body": "The pattern does not match the directory. But the directory delete is accompanied by file delete events of the underlying content which triggers the FSW resulting in this event. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67534131/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67534310", "body": "The `Trigger_Fired_On_Directory_Name_Change` test covers this as well in last few lines where you can see that all triggers get fired on directory delete. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67534310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67538825", "body": "That's the behavior I'm observing. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67538825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67539441", "body": "hmm. I didn't try recursive. Let me try that. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67539441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67544648", "body": "I find that events are getting raised for items recursively or non-recursively if I do a programmatic delete (`Directory.Delete(..)`)or `shift-del`. If I do a `del` which moves items to recycle bin FSW does not seem to raise the event as OS probably is not physically removing the item, but just updating some flag that FSW is not able to understand as a change.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67544648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67901156", "body": "@davidfowl can I get a sign off for the directory rename case if you don't have any additional comments? \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67901156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/68279169", "body": "Instead can't MVC use the `PhysicalFileSystem` object created through the lifetime of the application? \n\n@pranavkm ?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/68279169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/68279233", "body": "I think this can be closed as the PR is merged. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/68279233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/68303410", "body": "Not an issue anymore. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/68303410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/69791077", "body": "/cc @victorhurdugaci \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/69791077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/69792525", "body": "Raising more events in general will not harm the app functionally. However it is possible that app will have to refresh the file content as the trigger is raised. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/69792525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71500569", "body": "This was out of the security review discussion. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71500569/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/72090325", "body": "Updated PR. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/72090325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/72507693", "body": "@GrabYourPitchforks - do you have any comments?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/72507693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/72718708", "body": "Changes merged : https://github.com/aspnet/FileSystem/commit/0d2d9b1913175a764faaa57dc40de3e3761797c9\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/72718708/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74151260", "body": "@pranavkm fixed. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74151260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/75105840", "body": "/CC @troydai \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/75105840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/75105897", "body": "Change looks good to me :shipit: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/75105897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82000368", "body": "Dupe of https://github.com/aspnet/FileSystem/issues/37\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82000368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82001467", "body": "@glennc @blowdart what do we want to verify in the unit test? \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82001467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82001784", "body": "sounds good. Let me send a PR. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82001784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82032987", "body": "@muratg \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82032987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82065039", "body": "This change is already in. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82065039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82498463", "body": "How about this? \n\nMicrosoft.AspNet.FileProviders (common stuff between providers - this contains implementation of `NoopTrigger`, `EnumerableDirectoryContents`, `NotFoundDirectoryContents` and `NotFoundFileInfo` etc..)\nMicrosoft.AspNet.FileProviders.Physical\nMicrosoft.AspNet.FileProviders.Embedded\nMicrosoft.AspNet.FileProviders.Interfaces\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82498463/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82517416", "body": "This will require some fixes in other repos. I'll fix them after this PR goes through. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82517416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82631448", "body": "https://github.com/aspnet/FileSystem/commit/ec74b1131e90663ea525d8a5ce8453de53248158\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82631448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82631524", "body": "yeah. This is internal and no one should be impacted. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82631524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82635997", "body": "Merged: https://github.com/aspnet/FileSystem/commit/ee72e744ffa8294b7e7caa9a99052da363e5ddea\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82635997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82636021", "body": "https://github.com/aspnet/FileSystem/commit/ee72e744ffa8294b7e7caa9a99052da363e5ddea\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82636021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82638901", "body": "@muratg its a bit hard to simulate as it happens on these conditions per the msdn docs. https://msdn.microsoft.com/en-us/library/system.io.filesystemwatcher.error(v=vs.110).aspx\n\nThis should be a safe change as we just raise all the triggers on an error. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82638901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82639758", "body": "https://github.com/aspnet/FileSystem/commit/7ef9d035875354f5e885436c223536c34ff3fda8\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82639758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/83812109", "body": "@muratg \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/83812109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/84222027", "body": "@hishamco thanks \ud83d\ude0a.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/84222027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/85088939", "body": "Thanks @hishamco for the PR.\n\n@lodejard @muratg @glennc - Did we get a chance to discuss about this work item? Are we okay doing this?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/85088939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90229318", "body": "@davidfowl I'm pushing this change as I got a sign off from you in your office. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90229318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90235581", "body": "This is fixed now. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90235581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90294560", "body": "Change looks good to me. Do you also need some tests for case sensitivity. Eg. \"sub/source.cs\" and \"Sub/source.cs\" etc. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/90294560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/93533650", "body": "Fixed.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/93533650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/94944562", "body": "@Tratcher @muratg \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/94944562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/94944725", "body": "Revived the PR and rebased with all latest changes. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/94944725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/94949095", "body": "Closing this PR and resending this PR from a feature branch in the repo.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/94949095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/94965354", "body": "This was out of the API review. My understanding is when user wants PhysicalFileSystem then we don't need to pull in Embedded one. Just a matter of organizing. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/94965354/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/comments/8801987", "body": "Verifying exception messages did not look more interesting in this specific test as there is no piece of code in these methods/properties which could throw InvalidOperationException. I also fixed the exception messages to use nameof(..) for both type name and method/property name as suggested by Pranav. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/8801987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/9265037", "body": "Ah.. Looks like I pushed a wrong set of changes to the repo which is still in code review. I'm going to revert the last 3 commits. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/9265037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/9265256", "body": "@Tratcher signed off on this PR (https://github.com/aspnet/FileSystem/pull/31#issuecomment-69795621). So I'm not reverting this change now. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/9265256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20891423", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20891423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20891482", "body": "The package is not building for net45 any more (only aspnet50 and aspnetcore50). So this change is not required. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20891482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20891501", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20891501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892024", "body": "Removed all the dependencies. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892124", "body": "Done. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892659", "body": "done\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20892659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20893163", "body": "Right. Removed. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20893163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20893263", "body": "Makes sense. I'm dropping the class and updating the tests. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20893263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20896515", "body": "Changed to \"Implementation for ASP.NET 5 File System abstractions.\"\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20896515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20896658", "body": "Per this design only file is being watched. Do you think we need to watch a directory? \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20896658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20896953", "body": "Fixing this - like this : \n\nDirectory.Delete(PhysicalPath, true);\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20896953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20898035", "body": "Because its just an implementation detail. Mostly consumers of methods giving this will operate with the IFileInfo interface. We can make this public if there is a scenario. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20898035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20903478", "body": "Hmm. I added this to reflect the default namespace = assembly name. I do see some other repos not having .interfaces in namespace. Removing\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20903478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20903803", "body": "Yes - Only relative paths will be supported.\n\nWith the previous code these were supported:\n1. Absolute paths rooted at application folder\n2. Relative paths with a leading slash.\n3. Relative paths without a leading slash. \n\nWith the new changes (1) will not be supported any more. This code still has some bugs that I will be fixing and updating the PR. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20903803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20903882", "body": "yeah - that's right. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20903882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20953824", "body": "yeah I did the change yesterday - yet to update the PR. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20953824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20953832", "body": "fixed\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20953832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20954020", "body": "Good point. I removed Try from a bunch of test names. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20954020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20954155", "body": "Fixed. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20954155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20954345", "body": "Removed TODOs and used nameof() for type names. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20954345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20954447", "body": "Changed this to CreateFileChangeTrigger\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20954447/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20954571", "body": "That's per the contract. \"Return file contents as readonly stream. Returns null if the file does not exist. Caller should dispose stream when complete.\"\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20954571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20954772", "body": "yeah - removed it. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20954772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20954837", "body": "Just GetEnumerator? Wouldn't that lead to a recursion? \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20954837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20955179", "body": "I just took over the code as it is from Louis and what was before. NotFoundFileInfo, NotFoundDirectoryinfo, PhysicalFileInfo are purely for the sake of PhysicalFileSystem returning messages. Per my understanding PhysicalFileSystem cannot be made to take a different type for these file infos. So if someone attempts to extend this it has to be purely for their new file system. In that case these public types may not add a lot of value as it just contains a minimal implementation of IFileInfo interface. I believe that's why they were private before. I can make these public if that will be useful. @Tratcher thoughts? \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20955179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20955244", "body": "Fixed. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20955244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20955304", "body": "You mean tolerating \"/\" in the beginning of file name. physical file system allows that as well. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20955304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20955376", "body": "returning this : \nif (string.IsNullOrEmpty(subpath))\n            {\n                return new NotFoundDirectoryContents();\n            }\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20955376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20955449", "body": "okay. @loudej 's comment was on not having .Interfaces in the namespace. I can fix this as well. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20955449/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20955677", "body": "@loudej was there a reason why you made that returning Enumerable.Empty<IFileInfo>().Enumerator instead of throwing? \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20955677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20955829", "body": "Changed this to \"Represents a directory's content in the file system.\"\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20955829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20955977", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20955977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20956001", "body": "fixed. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20956001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20956604", "body": "fixed. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20956604/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20956864", "body": "Added a IsReadOnly property to IFileInfo. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20956864/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20957202", "body": "Hmm. Still the interface matters to the consumer. I can make it public if @Tratcher does not have any strong opinion on this. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20957202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20960736", "body": "okay. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20960736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132232", "body": "done. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132424", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132432", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132532", "body": "I found there are some more places where I need to put the [NotNull]. I will fix that with an upcoming change. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21132532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21133218", "body": "I made it throw an InvalidOperationException as it is actually an invalid operation. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21133218/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21133429", "body": "I updated the XML comment of the IFileSystem to something like below:\n\n/// <param name=\"subpath\">Relative path that identifies the file.</param>\n        /// <returns>The file information. Caller must check Exists property.</returns>\n        IFileInfo GetFileInfo(string subpath);\n\n/// <param name=\"subpath\">Relative path that identifies the directory.</param>\n        /// <returns>Returns the contents of the directory.</returns>\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21133429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21134206", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21134206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21134208", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21134208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21134426", "body": "Not sure why it was written to use IAppEnvironment to get base path. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21134426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21178458", "body": "done\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21178458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21178956", "body": "Empty directory name is a valid case. So the check changed to 'null'. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21178956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21179331", "body": "Done.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21179331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21345615", "body": "I made it similar to the other methods in this FileInfo. Do you suggest changing them all? \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21345615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21346310", "body": "Good point. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21346310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21355737", "body": "This does not seem to iterate over all items in the array. Will fix it. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21355737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21355961", "body": "Fixed. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21355961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21355985", "body": "Fixed. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21355985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21356018", "body": "Fixed. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21356018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21356022", "body": "Removed. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21356022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21356256", "body": "Done.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21356256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21392714", "body": "Fixed. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21392714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21479916", "body": "Fixed this with new changes to this PR. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21479916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21546921", "body": "Fixed. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21546921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21547000", "body": "Already fixed with an upcoming PR. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21547000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21556057", "body": "Good point. I will add some examples. \n\nYeah you can do all of those patterns - same like \"code\", \"exclude\" fields on project.json.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21556057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21567359", "body": "This is going to be a bigger one as file names are case-sensitive on non-windows platforms. To imitate the actual underlying file system, the physical file system needs to know when to apply case sensitivity. I discussed with @Tratcher @loudej about this and that will be discussed/addressed separately.\n\nAs such with this implementation, if a consumer subscribes change alert for `a.txt`, but if the file `A.txt` is changed, the callback is going to be fired resulting in some inefficiency, but it should not cause harm.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21567359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21569016", "body": "@Eilon updating this to \n\n/// <param name=\"filter\">Filter string used to determine what files or folders to monitor. Examples: `**/*.cs`, `*.*`, `subFolder/**/*.cshtml` etc.</param>\n\nAny comments?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21569016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21619345", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21619345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21619408", "body": "That's to delay the FileChangeTrigger object instantiation. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21619408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21619620", "body": "But I could fix that. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21619620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21620241", "body": "These regexes may potentially be reused when there are multiple patterns to be watched and if a pattern does not match a particular file CRUD operation then it will be tried matched again in future for another file CRUD.\n\nOn windows `a.txt` and `A.txt` are the same. This will introduce difference in behavior between different methods of `IFileSystem` interface. `GetFileInfo()` will return the right `FileInfo` irrespective of `a.txt` or `A.txt`, but `Watch` will not. @lodejard  mentioned that there is another place in K core stack which needs a similar fix as well. We might try to address both of them together with similar solution. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21620241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21621147", "body": "If multiple files change at the same time, it is possible multiple threads will try to check for `_triggerCache.Count == 0` at the same time and try modify `EnableRaisingEvents`. Putting this in a together in a lock statement will streamline threads in checking for count and modifying `EnableRaisingEvents`. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21621147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21647411", "body": "I added a little optimization to the disable file monitor case of checking the _triggerCache.Count == 0 before the lock. But checking inside the lock is necessary as well. \n\nFor example the dictionary has 1 trigger and it is getting removed as file changed. Now `ReportChangeForMatchedEntries` removes the item from dictionary resulting in empty dictionary. If the count == 0 check is only outside lock, then we will go ahead and disable the monitor. For instance a trigger was added after `_triggerCache.Count == 0` check was made, but before the code entered the lock and modified the `EnableRaisingEvents`, we will end up accidentally disabling the monitor even though there is one trigger in it. So this check will optimize the disable case as for most common case code will not enter the `lock{}`. \n\nUpdated the PR.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21647411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21689508", "body": "Since the same regex can be used multiple times. If that's a matter of concern, I can remove that. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21689508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21691173", "body": "I feel compiling is the right thing to do. The same regex is being matched again and again for for every file system entry change until this pattern is matched and removed from cache. The regex creation also does not happen upfront while creating trigger, but when the first file system entry change is triggered by the watcher. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21691173/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21697090", "body": "Good catch. Added the comment. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21697090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21700254", "body": "okay. Removing :)\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21700254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21702346", "body": "I want to start all the tasks at the same time as much as possible so that I can verify the same trigger is being returned. While I do `Task.Run` in a loop, if some of them start early and finish. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21702346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21702420", "body": "done.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21702420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21702728", "body": "They are covered with `Trigger_Fired_For_File_Or_Directory_Create_And_Delete`\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21702728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21702883", "body": "done\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/21702883/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22537727", "body": "Can't we just implement checking `if(wildcard)` within the `FileChangeTrigger` itself so that it becomes an internal implementation detail rather than having separate trigger classes for wild card and regular file paths. Today files not monitored periodically for patterns is just a drawback which may eventually need to be fixed to provide guarantee. When that happens pattern / plain file name are not 2 different things. I feel that will also greatly simply the code changes needed to achieve this. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22537727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22015020", "body": "I will swap the order of this just so that trigger for old path is raised first followed by new. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22015020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22044425", "body": "I'll try reducing the wait time to see things are good. Because there is real file/directory CRUD operations, I had to give a little time for it to complete and the watcher events being raised. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22044425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22044442", "body": "I'll fix this. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22044442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22057184", "body": "there isn't a way to make the file system watcher to trigger unless making a real file change. But I can see scope to improve the runtime of the tests. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22057184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22063027", "body": "Some of the trigger behaviors are dependent on the behavior of the FSW itself. For example deleting a directory triggering delete events for contents inside that - some tests are dependent on this behavior. Also I prefer having these as functional tests as it provides good clarity on what really works as the functionality offered by this feature is mainly dependent on behavior of FSW. \n\nI agree the delay is an absolutely valid concern. I experimented a few timeout values and I reduced the wait time to `100 milliseconds` and I see the tests passing with several consecutive runs in a row without flakiness. Right now all the `29` tests in the suite run in `~5 seconds` as against `~47 seconds` before. \n\nUpdated the PR with all the feedback addressed. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22063027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23395845", "body": "Exclude? \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23395845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23396748", "body": "`FileProviderGlobbing` instead as we changed `FileSystem` to `FileProvider` everywhere?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23396748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23396841", "body": "`readonly` `directoryInfo`.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23396841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23397181", "body": "Can we add a short description of this package? \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23397181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23465460", "body": "Do you need this casting? \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23465460/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23465833", "body": "Can `Path.Combine()` be used instead here? \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23465833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23469664", "body": "why not just use a `if` `else` then? \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/23469664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "nguerrera": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/35361132", "body": "Note that GetCallingAssembly is not coming back. It's slow and causes hassle for the JIT. You should pass an explicit assembly, but I left it there for now as I'm unsure what callers are out there. \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/35361132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/35437617", "body": "Great. Can one of you remove it? In general, I'm going to send these pull requests for things I spot, but would rather let you as owners of the code make the final tweaks unless there's something really objectionable in my changes.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/35437617/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "lodejard": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/35367059", "body": "Yep!\n\n---\n\nFrom: David Fowlermailto:notifications@github.com\nSent: \u00fd2/\u00fd18/\u00fd2014 12:54 AM\nTo: aspnet/FileSystemmailto:FileSystem@noreply.github.com\nSubject: Re: [FileSystem] Reduce scope of #if NET45 to just the methods that need it. (#3)\n\n@nguerrerahttps://github.com/nguerrera we can nuke it. It's a poor assumption anyways.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/aspnet/FileSystem/pull/3#issuecomment-35363851.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/35367059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71778101", "body": ":shipit:\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/71778101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/73330612", "body": "looks like :shipit: to me\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/73330612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74011362", "body": "Couldn't the directory match be expanded to `directory/**` ?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74011362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74011442", "body": "Also, did the old regex based patterns support `**.suffix`?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74011442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74111505", "body": ":shipit:\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74111505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20898786", "body": "Should use same IExpirationTrigger interface as the caching libraries. Shouldn't make the end-user write wrappers between the two systems\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20898786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20898869", "body": "Don't add \"Interfaces\" to namespaces\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/20898869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "loudej": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/37152913", "body": "It sounds like what you're describing is a general-purpose interface between any code and file IO. I agree that's good, and we'll want one for IClock also. But this particular interface has a more specific purpose that isn't clear from the name, so we should call it something more specific and establish a different IFileSystem for abstracting file io.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/37152913/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/37153612", "body": "Nope, probably not, the assembly and interface would likely change together.\n\nWhich brings up the next question - where to keep interfaces that are for reaching platform features like file system, clock, maybe network, and maybe process? Anything else that should be shimmed for testability? Environment variables? Command line?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/37153612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "davkean": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/43397679", "body": "The current name of this is very problematic. It's feature set isn't even close to a full-feature file system API and because it's interface based, unless you get it correct now, you can't add to it without breaking changes. I would either consider working with the .NET Framework team that owns IO (ie my team) if you would like an abstraction here (we have considered it for other reasons) or rename it to something completely different to make it clear that this is not a framework feature.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/43397679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "ajcvickers": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/46596034", "body": ":shipit:\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/46596034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "moonpeng": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/46812399", "body": "what's the ApplicationContext's namespace? I con't find it with framework 4.0.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/46812399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "yishaigalatzer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/56323149", "body": "Scenario - I want to traverse a tree of folders, the API is available in System.IO and it avoids writing recursive code unnecessarily.\n\nExample:\nPrecompilation - Find all the .cshtml files in a site.\n\nBut really any time you want to traverse a folder structure you are forced to write boiler plate and potential buggy code.\n\nEnumeration + Traversal allows for writing linq select/where clauses.\n\nSo this makes two issues simple:\n1. You can directly write linq statements over the result without using an ugly `out` parameter\n2. No need to write potentially buggy boiler plate traversal code.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/56323149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/56327781", "body": "My current plan is for precompiler to live side by side with the view engine in `Microsoft.AspNet.Mvc.Razor`, but since the view engine is dynamic and the precompiler is not, I plan to precompile all the available .cshtml files and make them available to the view engine's compiler cache to pickup at startup. \n\nThis way there might be a bit more compilation that the view engine can actually reach (but that's just the same as dead code in normal C# files). And if the view engine is customized with expanders, the precompiler keeps working.\n\nAs a secondary enhancement it will be possible to provide the precompiler with a a collection of folders to enumerate through, to limit what is dynamic or precomiled (but I think it's a premature discussion). I also think we could provide a call back to remap file paths, such that views can be provided by multiple class library projects.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/56327781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mj1856": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/65861161", "body": "Yes.  Also, the `IFileInfo` API should expose dates as `DateTimeOffset` rather than as `DateTime`.\n\nThis will prevent consumers of `IFileInfo` from misinterpreting the data.  It's too easy to look over `DateTimeKind`.\n\nAs a specific example, consider the [aspnet/StaticFiles](https://github.com/aspnet/StaticFiles) project, which consumes `IFileInfo` and has several cases where the RFC1123 format specifier (`\"r\"`) is applied.  The [MSDN docs](http://msdn.microsoft.com/en-us/library/az4se3k1%28v=vs.110%29.aspx#RFC1123) explain a common bug:\n\n> _Although the RFC 1123 standard expresses a time as Coordinated Universal Time (UTC), the formatting operation does not modify the value of the DateTime object that is being formatted. Therefore, you must convert the DateTime value to UTC by calling the DateTime.ToUniversalTime method before you perform the formatting operation. In contrast, DateTimeOffset values perform this conversion automatically; there is no need to call the DateTimeOffset.ToUniversalTime method before the formatting operation._\n\nOne can't reliably expect consumers to remember this bit of trivia - therefore, it makes much more sense to expose a `DateTimeOffset`.  Implementations like `PhysicalFileSystem` should populate the value from `LastWriteTimeUtc`, which when assigned to a `DateTimeOffset`, will cast implicitly and use a zero offset.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/65861161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/65868039", "body": "PR #25 addresses this.  Note, it would not compile with `LastWriteTimeUtc`.  I think it's missing from the core runtime, but not sure why.  I used `LastWriteTime.ToUniversalTime()` instead.  That should still work and produce the correct value.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/65868039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/111766726", "body": "Not sure why this is still open.  It looks like these were already merged back in December.  Perhaps they were cherry-picked?\n\nAnyway, closing the PR.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/111766726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22057672", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/pulls/comments/22057672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "muratg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67234801", "body": ":shipit:\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/67234801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/72773620", "body": "@troydai are we moving the current Internals into .Internal namespaces and making them public?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/72773620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/73596813", "body": ":shipit: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/73596813/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/77703646", "body": ":shipit:\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/77703646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/78403891", "body": ":shipit:\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/78403891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82599809", "body": ":shipit:\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82599809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82600136", "body": "Was this tested? If not, can we add a test case?\n\nOtherwise :shipit:\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82600136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82600402", "body": ":shipit:\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82600402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82601037", "body": "Did you verify that no one uses this?  \n\n:shipit:\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82601037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/84087130", "body": ":shipit:\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/84087130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/84088085", "body": ":shipit:\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/84088085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/87124046", "body": "Looks good to me as well.  :shipit:\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/87124046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/91040012", "body": ":shipit:\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/91040012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/99545948", "body": "@davidfowl do we want this?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/99545948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/99546673", "body": "@troydai can you rebase and take this one?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/99546673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/116773189", "body": "@Tratcher Was there a specific reason to make `NotFoundFileInfo`, `NotFoundDirectoryContents` etc  `Internal`?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/116773189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/117232899", "body": "@loudej @lodejard @davidfowl \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/117232899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/119279895", "body": "@troydai does it look like a product bug or a test issue only?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/119279895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "DamianEdwards": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/73390781", "body": "There's an implementation using `IFileProvider` of the abstractions `Matcher` uses at https://github.com/aspnet/Mvc/blob/LinkTagHelperGlobbing-1581/src/Microsoft.AspNet.Mvc.TagHelpers/Internal/FileProviderGlobbingDirectory.cs \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/73390781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74557476", "body": ":shipit: \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74557476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74577431", "body": "Looks good to me\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/74577431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/75161392", "body": "I'll wait here then...\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/75161392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "msotclas": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/75102176", "body": "Hi **@Andorbal**, I'm your friendly neighborhood Microsoft Open Technologies, Inc. Pull Request Bot (You can call me MSOTBOT). Thanks for your contribution!\n    <span>You've already signed the contribution license agreement. Thanks!</span>\n        <p>The agreement was validated by Microsoft Open Technologies, Inc. and real humans are currently evaluating your PR.</p>\n\nTTYL, MSOTBOT;\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/75102176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/77680030", "body": "Hi **@NTaylorMullen**, I'm your friendly neighborhood Microsoft Open Technologies, Inc. Pull Request Bot (You can call me MSOTBOT). Thanks for your contribution!\n    <p>\n        It looks like you're a Microsoft contributor (Taylor Mullen). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla2.msopentech.com.\n    </p>\n\nTTYL, MSOTBOT;\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/77680030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/77938003", "body": "Hi **@NTaylorMullen**, I'm your friendly neighborhood Microsoft Open Technologies, Inc. Pull Request Bot (You can call me MSOTBOT). Thanks for your contribution!\n    <p>\n        It looks like you're a Microsoft contributor (Taylor Mullen). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla2.msopentech.com.\n    </p>\n\nTTYL, MSOTBOT;\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/77938003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/84453474", "body": "Hi **@hishamco**, I'm your friendly neighborhood Microsoft Open Technologies, Inc. Pull Request Bot (You can call me MSOTBOT). Thanks for your contribution!\n    <span>\n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.msopentech.com.\n    </span>\n\nTTYL, MSOTBOT;\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/84453474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/84619379", "body": "**@hishamco**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\n<br />Thanks, MSOTBOT;\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/84619379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/84649153", "body": "Hi **@hishamco**, I'm your friendly neighborhood Microsoft Open Technologies, Inc. Pull Request Bot (You can call me MSOTBOT). Thanks for your contribution!\n    <span>You've already signed the contribution license agreement. Thanks!</span>\n        <span>We will now validate the agreement and then real humans will evaluate your PR.</span>\n\nTTYL, MSOTBOT;\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/84649153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/84653972", "body": "Hi **@hishamco**, I'm your friendly neighborhood Microsoft Open Technologies, Inc. Pull Request Bot (You can call me MSOTBOT). Thanks for your contribution!\n    <span>You've already signed the contribution license agreement. Thanks!</span>\n        <span>We will now validate the agreement and then real humans will evaluate your PR.</span>\n\nTTYL, MSOTBOT;\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/84653972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Andorbal": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/75118955", "body": "No problem!\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/75118955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "am11": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/78822699", "body": "There is an implementation of `minimatch` in C# by @SLaks: https://github.com/slaks/minimatch. It is well tested, and all the `minimatch` rules in their documentation applies. \n\nPerhaps AspNet team can make use it?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/78822699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/78932651", "body": "@davidfowl, there are also other exclude related issues opened in this repo, which were redirected from Home repo. For instance #71.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/78932651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "xtianus79": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/78869352", "body": "filesystem seems like a logical choose no?  \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/78869352/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/79130896", "body": "Yea how is this not the similar issue as I posted. Keep in mind Node's insane packaging systems that run deep and present problems in deleting and loading projects into visual studio projects.  \n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/79130896/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "blowdart": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82001766", "body": "Hmm, nothing really. Not sure what we can test here.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/82001766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "glennc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/85674465", "body": "Thanks for the PR @hishamco. It looks OK to me. @muratg, @davidfowl, @Praburaj can one of you look at this as well? I don't remember exactly how we are using this, so someone else should give the shipit :)\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/85674465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "tugberkugurlu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/96404155", "body": ":+1:\n\nI am trying to implement Azure Blob storage on top for this and it would be great to have `async` methods. I also think that `IFileInfo.Exists` should be a `Task<bool>` returning method, not a property.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/96404155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/96421422", "body": "@hishamco depends on the purpose of this abstraction library. In my case, I need to make an HTTP call to figure out if the resource exists, which is a perfect fit for async.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/96421422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "dnfclas": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/99176956", "body": "Hi **@hishamco**, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    <span>\n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    </span>\n\nTTYL, DNFBOT;\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/99176956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/99177070", "body": "Hi **@hishamco**, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    <span>\n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    </span>\n\nTTYL, DNFBOT;\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/99177070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/99225218", "body": "**@hishamco**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\n<br />Thanks, DNFBOT;\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/99225218/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/99225222", "body": "**@hishamco**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\n<br />Thanks, DNFBOT;\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/99225222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mdekrey": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/100991099", "body": "I guess I'm not sure why the `FileSystem` repository wouldn't be a generic (read-only) file system abstraction.\n\nI'd also appreciate `async` on the file system methods. Instances off the top of my head where this might be relevant:\n- Network storage (whether NAS, SAN, Azure Blob Storage, or Amazon Cloud, or something more exotic)\n- Globbed files (compressed storage such that the directory tree is in a file)\n\nIn these instances, getting lists of files, existence of files, and getting file info could all benefit from being retrieved async. In cases where the async specification is not beneficial, a `Task.FromResult` would alleviate most implementation difficulties.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/100991099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "luisrudge": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/104725790", "body": ":+1:  for the asynt methods :)\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/104725790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "CoskunSunali": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/120034495", "body": "If I don't get you wrong, you mean that I should reference the mentioned classes using the .Sources packages directly and use the classes as if they were directly developed within my own projects. \n\nCan you please confirm?\n\nThank you.\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/issues/comments/120034495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "SLaks": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/comments/6306854", "body": "Why aren't these async?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/6306854/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "MartinJohns": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aspnet/FileSystem/comments/16637689", "body": "Why are you moving from the fields to the literals?\n", "reactions": {"url": "https://api.github.com/repos/aspnet/FileSystem/comments/16637689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}}}}