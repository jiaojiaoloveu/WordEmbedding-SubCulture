{"_default": {"1": {"willkg": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-services/socorro/commits/8fcdbe719fa95f64d0f70a52a294ef8877e454f2", "message": "Merge pull request #4299 from willkg/1416340-es-conn\n\nfixes bug 1416340 - use secure args for ES connections"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/42f32943a5d0f241768fa9a4c3296cb6ab9977ae", "message": "fixes bug 1416340 - add verify_certs=True for ES connections"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/7e46544721233caefe54958e689ec20f00660980", "message": "Merge pull request #4302 from willkg/1431763-aurora\n\nfixes bug 1431763 - add buildid for 59.0b1 to AuroraVersionFixitRule"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/d3192b8bab3d25df4f36a5ee46873b675e6ea4a8", "message": "fixes bug 1431763 - add buildid for 59.0b1 to AuroraVersionFixitRule"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/e2b7b2627b1c4ad11df14fbbc9f0b2247b263c87", "message": "Merge pull request #4298 from willkg/1431442-crontabber-state\n\nbug 1431442 - add \"mark-success\" to crontabber app"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/db8b6d238ec0aeef848c07f408c71e2b3a1daa98", "message": "Fix ftpscraper in run_update_data.sh to work with crontabber bookkeeping\n\nftpscraper runs once an hour, so we need to reset the crontabber bookkeeping,\notherwise running \"make dockersetup\" followed by \"make dockerupdatedata\"\nwill cause ftpscraper to start up, think it's run already, and halt without\ndoing anything."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/bbb8a9c62476dee1a5cb167eb8fe90c352a9b39c", "message": "Add \"crontabber --mark-success=all\" to run_setup.sh\n\nThis will initialize crontabber bookkeeping for all configured jobs as part\nof \"make dockersetup\"."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/e95869309cbb500bd35e7af3578abdf5e8451e7c", "message": "Remove unneeded imports"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/a06074ef1484494bbc1bd892c9d9f77d73ddfd83", "message": "bug 1431442 - add \"mark-success\" to crontabber app\n\nThis makes it easier to set up initial crontabber bookkeeping state in\nthe local development environment without having to run all the crontabber\njobs."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/ee70dca30578affb8cb93b56feba391acafad408", "message": "Merge pull request #4300 from willkg/1406025-es-image\n\nfixes bug 1406025 - switch to mozilla ES image"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/2ee107c0221d61afb0496f4dcc0035ce869e75af", "message": "fixes bug 1406025 - switch to mozilla ES image\n\nThis switches the local development environment to use the Mozilla\nElasticsearch 1.4.5 image. This is what we're using in the new infra\nso it behooves us to use it locally, too."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/9f7b7ce4b50895c89da12165ff0e24ca9859daa5", "message": "Merge pull request #4296 from amccreight/patch-14\n\nBug 1431167 - Add ReleaseData to the prefix list"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/87eb5aa4d85e355739b1db13df729e2675ceba99", "message": "Merge pull request #4292 from willkg/1424659-spaces\n\nfixes bug 1424659 - nix consecutive spaces in signatures"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/0fd04d4e99aeee5abdeb1bba73fb5031724211aa", "message": "Merge three similar test cases into a single test case"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/fde54c594874f575c4fd1c8995cb92dcf208a22c", "message": "fixes bug 1424659 - nix consecutive spaces in signatures\n\nPrior to this, it was possible (though rare) to have two spaces in a row\nin signatures. That's tough because the webui shows that as a single\nspace and if you search for the single-space version, you won't get any\nresults.\n\nThis fixes that by establishing that signatures can't have more than 1\nconsecutive whitespace character. Further, this makes sure that all\nnon-space whitespace characters are converted to space and this\nhappens all before we truncate the signature.\n\nI also changed SigTrunc to SigTruncate because \"trunc\" is an unnecessary\nabbreviation."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/1c0dcaedea738acc6d04f097a10d1afa78c84c29", "message": "Merge pull request #4287 from willkg/1371428-nix-quotes\n\nfixes bug 1371428 - nix quotes"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/3d8978c0115d19bf2af52478e485e98a6ce67dea", "message": "fixes bug 1371428 - nix ' to '' in signature generation\n\nFor years, there's been a bit of code to \"escape single quotes\" in\nJava and C signatures. As near as I can tell, it predates the current\nera of Socorro requirements and was likely added for some reason that\nis no longer relevant.\n\nOne consequence is that it makes searching for frames harder, so this\nremoves that behavior."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/4c6c519e37a8a5bd36e574ad5668437652924c19", "message": "Cleanup JavaSignatureRule tests\n\nThis renames all the JavaSignatureRule tests so they indicate what they're\ntesting. Plus it removes a couple of tests that are either an identical\nduplicate or a close-enough-that-it's-effectively-the-same-thing duplicate."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/64ea27c9ccb21252c3ddb4bbc3cf0fe5444bdccc", "message": "Merge pull request #4288 from willkg/1416841-drop-dotstar\n\nfixes bug 1416841 - nix .* at end of lines in siglist files"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/bcace36652ab9709bd77d0a098271e910c83eadf", "message": "fixes bug 1416841 - nix .* at end of lines in siglist files\n\nSince each line is a regexp that's joined with others with | and then\nused with .match(), they're effectively all \"startswith\" type matches\nso the .* at the end is superfluous."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/45e605d4f0d603a9c785c7cb9e2fb728be1c40dd", "message": "Merge pull request #4286 from willkg/1426186-reprocess-help\n\nfixes bug 1426186 - add reprocessing howto"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/3c2a3ba3af7c9e46d177f1d739bf6b0ca72cbb31", "message": "Reword note about balancing crash id production and consumption"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/1dd2bdd42ac76b1eed0912b3a544d37370c25268", "message": "Clarify how to specify a sleep value of 10"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/9d7d7c5482e28c53126a331fe924baf7fe31b0f0", "message": "fixes bug 1426186 - add reprocessing howto\n\nThis adds some crude documentation for reprocessing crashes including some\nhand-wavey warnings about being cautious about adding crash ids to the queue\nfaster than they can be processed."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/c50bbf4a8beb15f0bdce0ec1264a5ff6bd8908b2", "message": "Merge pull request #4284 from willkg/1429434-rtd-fix\n\nfixes bug 1429434 - fix e2e-tests README missing in RTD"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/8a799fb5d883f0146bac224959c4f45ee4d73f7a", "message": "Simplify the Makefile\n\nThis moves the cp to always happen in the catch-all target rather than as\na separate target."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/8018174521096fb30d9318d47542f120af6b2495", "message": "fixes bug 1429434 - fix e2e-tests README missing in RTD\n\nThis fixes the docs build scripts such that readthedocs will copy the\ne2e-tests README before building the docs. Otherwise, the e2e-tests README\ndoesn't get compiled into the docs on readthedocs."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/a4e62e368184e25af872b7d3ba1f422ddf51b76d", "message": "Merge pull request #4283 from willkg/1155165-truncate\n\nfixes bug 1155165 - truncate in one place"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/8ec02d3218c4d149cadc9230209b5746e51da4dc", "message": "Fix SigTrunc to use a constant"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/19bcab234391ab7b9468f54ceb526c7a78ece547", "message": "Re-add Java signature exception description truncation"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/49c01cbe128f535b1c2c9c353c43e22b9526998d", "message": "fixes bug 1155165 - truncate in one place in signatures\n\nPreviously, there were two points in the signature generation pipeline that\nwould result in signature truncation. One of them were the SignatureTool\nsubclasses. The other was a SigTrunc rule.\n\nThis nixes the SignatureTool truncation code in favor of the SigTrunc\ntruncation rule."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/82d9749e6f2579a6e5c95f8b1c24fbad9f20f36b", "message": "Move SignatureGenerator out of module __init__.py\n\nIt's easier structurally to have the SignatureGenerator in its own Python\nmodule. This moves it."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/9e330d40bf5c1ebc5339fa58a1ca3d8c67f1690d", "message": "Merge pull request #4282 from willkg/1191055-pages-commit\n\nfixes bug 1191055 - add pages_commit and friends to prefix list"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/707eb2caa51213bba2e95dd4d3ade1d48c50d758", "message": "fixes bug 1191055 - add pages_commit and friends to prefix list\n\nThis adds pages_commit, chunk_recycle, and chunk_alloc."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/12133cfae3e205cfec4cf7a87d762d17740a163c", "message": "Merge pull request #4280 from willkg/1309102-platform-memmove\n\nfixes bug 1309102 - add _platform_memmove things to prefix list"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/f9a0e25f9c25d67ee7f977374f51c0a7b9f283fa", "message": "fixes bug 1309102 - add _platform_memmove things to prefix list\n\n_platform_memmove$VARIANT$Haswell is already in the list, so this nixes\nthe Haswell part and generalizes it across the other variations.\n\nThis also adds the __platform_memmove$VARIANT$ version, too, with the\ndouble-underscore."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/e63d5a1dd9a3d7c46d9d2c97157877f5ab25076f", "message": "Merge pull request #4281 from willkg/1338190-terminatehandler\n\nfixes bug 1338190 - add CrashReporter::TerminateHandler to prefix list"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/dce65e4ee2ec4465f15dbe29721b228f176c5780", "message": "fixes bug 1338190 - add CrashReporter::TerminateHandler to prefix list"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/77b8fdd859ac50ec88ed785122aaf1fa0ddf9471", "message": "Merge pull request #4279 from willkg/1310694-kiuserexceptiondispatcher\n\nfixes bug 1310694 - add KiUserExceptionDispatcher to prefix list"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/ca8678161ab813b6f973ed390c7281353f7ee91c", "message": "fixes bug 1310694 - add KiUserExceptionDispatcher to prefix list"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/87aab764edfe7c035b30b55c7da5aeac132f424b", "message": "Merge pull request #4277 from willkg/1375183-middleware-removal\n\nfixes bug 1375183 - middleware removal"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/dcf2b56c72bdda3510f0d630acb3d22b81a83398", "message": "bug 1375183 - Remove old middleware service files\n\nThis removes files related to the old middleware service which we no longer\nuse."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/5ee8b64409b212f52922c6c25d72d3107ad436ab", "message": "bug 1375183 - Remove old middleware-related configuration\n\nWe no longer have a separate middleware service. This removes the configuration\nwe used for that."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/e463a0ec69318c105d84be574f497502dec3bdd0", "message": "Merge pull request #4275 from willkg/1013002-sql\n\nfixes bug 1013002 - remove sql/ directory"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/9ede03f0cb352e5aed65d46a2c7866f2ebaf832e", "message": "Remove rsync for sql/ directory\n\nWe no longer have a sql/ directory, so the rsync fails. This fixes that."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/f97cd3925309b2754f417d85f1184fd8cde94e7b", "message": "fixes bug 1013002 - remove sql/ directory\n\nThese files look really out-of-date and I don't see them being used\nanywhere. Best to nix them."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/4f332b6dbbbfb4347511a107c05563dcca2cd952", "message": "Merge pull request #4276 from willkg/fix-rtd\n\nDowngrade Commonmark to 0.5.4"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/5b1ffe3e8208701e5139253fa180eda3fe3af6bd", "message": "Downgrade Commonmark to 0.5.4\n\nThis fixes building docs on readthedocs."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/d24d4e8809e41e87f35dd9db781604f230428802", "message": "Merge pull request #4270 from davehunt/test-readme\n\nUpdate the e2e tests README"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/09e8408b899d1ffdae24e3b0d59d6759bf50cfe3", "message": "Merge pull request #4269 from willkg/update-deploy-bug\n\nTweak post-deploy steps in deploy_bug script"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/e159d4f35e18d99c17195d59b718d24a678f7c46", "message": "Tweak post-deploy steps in deploy_bug script"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/3a3c8dd1dbf43e6e545d47a63639154ff6930a17", "message": "Merge pull request #4268 from willkg/deploy-bug\n\nAdd scripts/deploy_bug.py script"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/c13e604b0b06a54ed00f0308848f28cecc974dd4", "message": "Add scripts/deploy_bug.py script\n\nThis script generates the text we can use to build a deploy bug."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/8b009eb5ad07f3cd1956b3d858a3388a708b5814", "message": "Merge pull request #4267 from willkg/1426225-no-space\n\nbug 1426225 - capture fetch raw crash errors"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/9565758b392c1a7c6a1558fb4115a977185462dd", "message": "More mock test cleanup"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/c191505efd904957c9b5f05e2ee64c58b0381de9", "message": "Cleanup sentry tests"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/8ff73900b78b70df41743ea5aaac3184761272f0", "message": "bug 1426225 - capture fetch raw crash errors\n\nThe part of the processor that fetches raw crash metadata and dumps and\nthen stores bits on disk could fail and when it did, it'd log something, but\nunless someone was watching the logs at the time, no one would ever know.\n\nThis fixes that in the same way we capture other processing errors--it\nsends any errors to sentry assuming sentry is configured."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/884c826028bfcfddbb2ed1b9f544c0b8952d5c56", "message": "Merge pull request #4261 from willkg/1424370-views\n\nfixes bug 1424370 - remove all the postgres views"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/65dea66b3d882adb58f1a09ec0d4cfedeff52b40", "message": "fixes bug 1424370 - remove all the postgres views\n\nNone of these views are used, so I removed all the views and the\ninfrastructure for loading views."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/698db08f335c50e0c5e812d41622f2ff54b3b721", "message": "Merge pull request #4262 from willkg/1419585-warnings-2\n\nfixes bug 1419585 - all the webapp warnings"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/8a3f0b12e6803ec6c445cccad6142e274fd43532", "message": "fixes bug 1419585 - Make all warnings into errors"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/4b3966379d3cb6580e5dae0808d76aa34d37155e", "message": "Upgrade middlewares\n\nDjango has a new middleware system and this upgrades our middlewares to\nuse it."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/20bc07bebac236261799fd1844ee8c5d979ab4db", "message": "Use is_authenticated property"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/2dbbfbf195235605ef86a5b7ea8dbe6d83de6a28", "message": "Add on_delete argument to ForeignKey creation in migrations"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/14a9f4a7f352fdbf56b423670f6e78f6432d47d0", "message": "Fix exception handler signatures\n\nThe 404 handler needs to have an \"exception\" parameter.\n\nThe 404 and 500 handlers both can get a \"template_name\" parameter."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/dc0ca166050ffee955b03714569983b3608b5e75", "message": "Switch from chlid-src to frame-src for CSP"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/c4c5589b446afaba37b1a47ae343b7b367e9d686", "message": "Update pinax-eventlog to 2.0.0\n\nThis picks up changes to fix deprecation warnings for Django 2.0."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/150b9d3aae6f809c0064a1e234c2d57f8d9b7ead", "message": "Merge pull request #4266 from willkg/1426144-rawadimover\n\nfixes bug 1426144 - fix job spec for fetch-adi-from-hive jobs"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/00bd83202e85618d0bc56a466ee9ccd40e5b0c9d", "message": "Switch to fake fetch-adi-from-hive jobs to 8:20\n\nThe -prod job runs at 8:00 and seems to take about 10 minutes. We need that\nto be done before the fake ones run because they look at that data. But we\nneed it to run before the other adu jobs run.\n\nSeems like 8:20 is a good number here."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/4edabdbff25ecd987a25495a2c9c0d7e2a01ce2c", "message": "fixes bug 1426144 - fix job spec for fetch-adi-from-hive jobs\n\nThe fake one and the rawadimover one were set to run at the wrong time\nin relation to the adu jobs that need that data. This fixes that."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/c1391b67290a4fef73aaff974bdcdb7165178cd6", "message": "Merge pull request #4265 from willkg/1425492-s3-region\n\nbug 1425492 - set the region for webapp s3 access"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/7064e5bc4fafe08db3f1e37e27d394c37dd952f5", "message": "bug 1425492 - set the region for webapp s3 access"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/4b2cf9906c7840b5d5c1f0f80cd5240658631b34", "message": "Merge pull request #4264 from willkg/1425492-webapp-s3\n\nbug 1425492 - log boto fetch errors"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/0a6f790f5a0b2d9e10e86d6b544af06ea6017ef0", "message": "bug 1425492 - log boto fetch errors\n\nThis adds logging for boto fetch errors. Previously, error messages\nwere getting thrown away.\n\nThis also fixes logging for crashstats models. Previously the logging\nconfiguration didn't cover them, so they were silently ignored."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/cbfc96fee5ca6bfbe5c4da1fa075d719f776c858", "message": "Merge pull request #4260 from willkg/1419585-warnings\n\nbug 1419585 - all warnings are errors for socorro tests"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/fd57c440bc781dc5fafc080afcfbdda91315e521", "message": "bug 1419585 - all warnings are errors for socorro tests\n\nThis fixes the socorro tests such that all warnings are now considered\nerrors. This also fixes the handful of warnings that were getting kicked\nup.\n\nThis doesn't fix the webapp tests--we'll do that in another PR."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/0eb47857c06653c4069aad33ecd6bbff31d2bd57", "message": "Merge pull request #4259 from willkg/1227900-api-metrics\n\nfixes bug 1227900 - add metrics gathering for api"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/af7a82238818d9b18f2dc2b5457b6b15f41018a4", "message": "fixes bug 1227900 - add metrics gathering for api\n\nThis uses markus to get frequency and usage data for API endpoints. It's not\ngranular to the point where we can see querystring data, but I think that's\nok for answering questions like \"Is someone using this API endpoint?\" which\nI really want to answer now."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/758089d6d36d2f4867440e04a26aa9f7a6107f79", "message": "Merge pull request #4258 from willkg/nix-missing-symbols\n\nRemove MissingSymbolsCronApp from -stage-new list"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/9472675614d3127205116950e53636bb80ff3a37", "message": "Remove MissingSymbolsCronApp from -stage-new list"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/88a4261a4e1f6604908f14cbdebd02c40ee83ba7", "message": "bug 1424027 - remove more stored procedures (#4252)\n\nThis removes a batch of stored procedures that fall into a few groups:\r\n\r\n1. utility functions for DBAs--we don't do this sort of thing anymore\r\n2. orphaned stored procedures used by things we don't have anymore\r\n3. stored procedures that are mysterious and want their origins and purpose\r\n   to remain in the dark shadows"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/42924e4dc60e37d196ee48bd93c6d759c4b7e576", "message": "Merge pull request #4256 from willkg/fix-test-bugzilla\n\nFix test bugzilla"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/459516586bbd5bef5bcfeea25b2b8854c0a47bf1", "message": "fix logger warning when running tests"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/c8d3f0962bb2afe1a78235a6b96d0f50972a78f9", "message": "fix test_bugzilla.py\n\nThis was setting up the configuration wrong such that in certain circumstances,\nit would hang indefinitely. I noticed this when I was on a plane with no wifi.\nMaybe it was hitting the network?"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/15bde98ac5dfc2969577e7098ace9258e1c4c03e", "message": "Merge pull request #4257 from willkg/remove-dead-code\n\nRemove dead code"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/47daaedb393e026b146327947fff755b8803b248", "message": "Remove product_details\n\nThis directory of files is never used and hasn't been updated in years. Pretty\nsure it's a holdover from when the Socorro webapp was derived from Playdoh.\nThose days are long gone."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/05bd8b5f382fb9b3596ea493b5e9b47a75b84e2f", "message": "Remove example_app\n\nWe're not building new Socorro apps these days and the existing code provides\nsufficient examples of how to build an app if we did need to."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/65d129ee5a542cdc4d15b4946df33aaab21693ed", "message": "Remove tools/ things that aren't used"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/d73502edbe1f38c3e35157ca49403f8a46a6be97", "message": "Remove more vestiages of middleware app"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/3aab33268b40cd1687825570119076970e21ffdb", "message": "Merge pull request #4255 from willkg/1424744-testcrash\n\nfixes bug 1424744 - remove testcrash/ directory"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/a2a6c744ee2068cef208d2870da9dcb2611a29c2", "message": "fixes bug 1424744 - remove testcrash/ directory\n\nThis removes a directory that was used by the integration tests which were\nremoved in 6ffefdc."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/29388dccc9a880fc47658015d669b48328018598", "message": "Merge pull request #4251 from willkg/crash-analysis-cleanup\n\nClean up after removal of crash-analysis"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/813caaa6229179cff26556818d3e67c3cd084ef6", "message": "Clean up after removal of crash-analysis\n\n* removes scripts only used by crash-analysis server\n* remove submitter script--we use a different one now\n* add comment to crontabber.sh so it has some vague semblance of\n  documentation so I don't have to wonder about it again next time"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/694efa8a06c65e81a46be4df06b8ff12d4a2b3b2", "message": "Merge pull request #4250 from willkg/1375255-nix-vagrant\n\nfixes bug 1375255 nix vagrant"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/08c4b29982fb25436fd9302c048a5fc7f8d57c0c", "message": "Clean up BUILD_TYPE usage"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/dfc0dcd2dec8393429ee24b80e8d6edb001a8b02", "message": "No need to lint puppet manifests anymore"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/2221e8265c0fc3c51c96f16ce4c1558f2e152ff1", "message": "First pass at scripts cleanup\n\nThis removes:\n\n* scripts related to building .deb packages--we don't do that anymore\n* scripts for managing the database--we don't use these anymore\n* Makefile rules used by Vagrant that we don't use anymore\n* scripts/lint.sh--we use flake8 now"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/f5e0ea2c4a311b0f75730ad74062bdff365ee889", "message": "bug 1375255 - nix Vagrantfile and related puppet files"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/8971d7c5b973814bbea88c421676a9d1f9cfb465", "message": "Merge pull request #4247 from willkg/1398946-fakedata-be-gone\n\nfixes bug 1398946 - remove fakedata code"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/aac68c90b76116a3b439ce64d11d688b669904d6", "message": "fixes bug 1398946 - remove fakedata code\n\nThis removes a bunch of code we use to generate fakedata. We no longer need\nthis, so this nixes it."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/1fdd752208eb71ef07c18271f8573716b0b118a1", "message": "Merge pull request #4248 from willkg/1424027-dead-procs\n\nbug 1424027 - remove unused stored procedures"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/84ab23c863e55627725f40c7efad71c8c5459618", "message": "fixes bug 1424027 - remove unused stored procedures"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/4b35f9d0cc4fca215c71c04412f7e3495ff573ec", "message": "Merge pull request #4249 from willkg/1387493-nix-heroku\n\nfixes bug 1387493 - remove all things heroku"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/fc00c9bf80164e1cbe8240846f2678e4206b2315", "message": "fixes bug 1387493 - remove all things heroku\n\nThere was some work to get Socorro to work on Heroku. That was never finished\nand Heroku never became a supported platform.\n\nThis removes that unfinished work."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/35922d1bc0637be4bfcb8b97deb00cc9ef3c552c", "message": "Merge pull request #4244 from willkg/1407655-raw-adi-mover\n\nfixes bug 1407655 - implement RawADIMoverCronApp"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/7dffd913d2cca30073da6045b131a7ee26856a76", "message": "Add step regarding my.env fix"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/de38bd5a9f8b332b44548a7196aa713319bc691d", "message": "fixes bug 1407655 - implement RawADIMoverCronApp\n\nThis implements a third fetch-adi-from-hive cron app. This variation has\na source db and a dest db and copies the data in the raw_adi table over.\n\nThis has no unit tests. There is a single integration test that's run\nas a shell script by hand and it requires manual verification."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/9d63e0d49c825ab66fa2b6806dff522b3a758d8a", "message": "Merge pull request #4243 from stephendonner/fx-57\n\nUpdate to Firefox 57, in Sauce Labs"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/c10b55c438494683e0ffef38ce0d9ea3ed218fc7", "message": "Merge pull request #4231 from mozilla-services/pyup-scheduled-update-12-01-2017\n\nScheduled monthly dependency update for December"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/658d3d8baad54dfb5685458243c432d31cea5922", "message": "Upgrade py to 1.5.2"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/b02bc6f389d68e78348f4bf0dc142316e2937063", "message": "Merge pull request #4239 from willkg/1422639-nsstringbuffer\n\nfixes bug 1422639 - prefix nsStringBuffer::FromDataCanaryCheckFailed"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/21cf3cfe55622670b2dd0463eff8d77ca4e04ebf", "message": "fixes bug 1422639 - prefix nsStringBuffer::FromDataCanaryCheckFailed\n\nThis adds that frame to the prefix list allowing signature generation\nto proceed to the next frame."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/8f1ae738ab743d4d3ba586a4fb769fa760e872e8", "message": "Merge pull request #4232 from willkg/1383067-urls\n\nfixes bug 1383067 - redo symbols-urls conf in BreakpadStackwalker2015"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/d858c233f7212dca454f9d964ac375eecef84bbe", "message": "Make sure to quote symbol url arguments"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/9134fe9b55720c0ad349114f97266c637b6dcfd9", "message": "fixes bug 1383067 - redo symbols-urls conf in BreakpadStackwalker2015\n\nThis drops the private-symbols-url and public-symbols-url configuration\nvariables for a single symbols-urls variable that takes a comma-delimited\nlist of strings.\n\nNow we can add arbitrary number of urls in the order we want them\nchecked."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/e9a255459fc4f348e35f0315c5a0e21e85bc01de", "message": "Merge pull request #4233 from willkg/1413925-bad-amd\n\nfixes bug 1413925 - extend is_dangerous_cpu"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/85046ca6edde8d4096658220c2e63d7a827e2389", "message": "fixes bug 1413925 - extend is_dangerous_cpu\n\nThis adds two new cases for is_dangerous_cpu to catch and also adds a\nunit test."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/46c4a3e2863356320af9762c137ea30978fe86be", "message": "Merge pull request #4227 from willkg/improve-reprocess\n\nImprove sleep and output for reprocess script"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/85277a3ef0f668eb4023027ff0a16fbe492b0137", "message": "Improve sleep and output for reprocess script\n\n* make \"sleep\" an argument you can pass on the command line\n* improve the output so that it's easier to see where you are in the list\n  and let you more easily kill reprocessing and restart roughly where you\n  left off"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/ba4280716c7585d07043457e5e82852c0cee003d", "message": "Merge pull request #4224 from willkg/1410167-cronjob-telemetry-bucket\n\nfixes bug 1410167 - fix UploadCrashReportJSONSchemaCronApp bucket name"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/82eaf90cbd8cc142e119fad320670840f1a06ca2", "message": "Fix logging message"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/46dce88ae2446a5363c9356d90083e0d202c9e60", "message": "Tweak code to log the bucket name used\n\nThis makes it a lot easier to test and verify."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/4de36b6d57d9ff7e0cf9c7f2612b852162d81c0d", "message": "fixes bug 1410167 - fix UploadCrashReportJSONSchemaCronApp bucket name\n\nThis fixes the UploadCrashReportJSONSchemaCronApp cron job to use similar\nlogic to determine the bucket name to use to save the schema file as the\nTelemetryBotoS3CrashStorage class does."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/218082e494a9a9c98a3a1d63fb1bb8686f075d2f", "message": "Merge pull request #4221 from willkg/system-checklist\n\nAdd e2e-tests and system checklist to docs"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/91d3f34205957d4775973586c902f4ea0b53b776", "message": "Adjust commentary on how to use the checklist"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/91fdfeabfd4ee34b885d38446ee103cabd19bb76", "message": "Redo urls\n\nThis redoes the urls so that it shows the paths rather than hosts and paths\nsince hosts will change over time."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/a8780d548c83c4019d1aef0b370bd41452dd7f5b", "message": "Add system checklist for realz"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/c8fbb8542258d9737957fe3b355ab9dfc9f16b53", "message": "Move tests docs into their own sub-directory"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/48689975ff1eaa59e8bc69b6fde458fc7e3405b6", "message": "Add e2e-tests and system checklist to docs\n\nThe e2e-tests README is written in Markdown, so this includes all the things\nwe need to use Markdown in the docs.\n\nThis adds the socorro system test checklist thing we had in my unofficial\nsocorro-zero repository. We've used variations of it several times now. I'm\nsure there are things that are missing, but it's designed to be an evolving\ndocument."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/a8060479c1e8b3ce950700db2333ce642d2e1526", "message": "Merge pull request #4219 from willkg/1419856-revision\n\nfixes bug 1419856 - implements /__version__ endpoint"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/f30d19d825c654f2a6765d2e55b5dbf61f5d4e6e", "message": "Fix no-version-json test which in Circle fails because it exists"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/a6395cd0e00060cae3054c054b6b42c43f586326", "message": "fixes bug 1419856 - implements /__version__ endpoint\n\nRather than fix the existing /status/revision/ endpoint to work with the\ndocker-based infrastructure, I implemented the /__version__ endpoint\nwe want to switch to anyhow. We can leave /status/revision/ as is for\nnow."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/8e91c03780e0d7c8701bbeac04d5f8dbcd229b8e", "message": "Merge branch 'master' into remove-unused-test"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/44510de6a91a4ffabbdb518e00a958c7b885416f", "message": "Merge pull request #4214 from willkg/1418488-drop-email\n\nfixes bug 1418488 - drop EmailCampaign, EmailContact, and EmailCampaignsContact"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/26a4c30e858db66d07af9c5b133ab2530e20a532", "message": "fixes bug 1418488 - drop EmailCampaign, EmailContact, and EmailCampaignsContact\n\nSocorro no longer uses these tables, so time to drop them."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/7a172101cfc87826c0d77dc6db63b372f3ca7a3f", "message": "Merge pull request #4215 from willkg/1417885-crash-analysis-monitoring\n\nfixes bug 1417885 - remove crash-analysis monitoring"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/4c09488e145a24db8b7b248c4d829d125c2c95ee", "message": "Nix unused conf example file"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/834f54eb7719399721489e7c909cfc925ff04169", "message": "fixes bug 1417885 - remove crash-analysis monitoring"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/248ff49aa6c7a4050579ba29766ac0a57c3bd010", "message": "Merge pull request #4212 from willkg/1418037-aurora\n\nfixes bug 1418037 - add AuroraVersionFixitRule"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/fa71b0c4eb959443bb6cd93031560a75b270b3eb", "message": "fixes bug 1418037 - add AuroraVersionFixitRule\n\nThe AuroraVersionFixitRule checks the crash and stomps on the version if\nthe crash is from Firefox with specific build ids. The build ids are\nfor builds that are on the aurora channel for devedition product, but have\na .0b1 beta-style version.\n\nWe're fixing the crashes in the processor because the alternative was to\nwork through the ball of spaghetti that is ftpscraper, the stored procedures,\nand related database table data to figure out why it's doing everything WRONG!\nThe Socorro team therapist suggested we do a processor rule now and rewrite\nftpscraper later and/or switch to buildhub."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/00182e5e1fe2bbb09b5b22528303b164b03516b0", "message": "Merge pull request #4209 from willkg/1410167-telemetry-bucket\n\nfixes bug 1410167 - fixes TelemetryS3CrashStorage bucket_name"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/747131a53c6bbbaad239db433e482e6860e06c0a", "message": "fixes bug 1410167 - fixes TelemetryS3CrashStorage bucket_name\n\nThis allows us to set the bucket_name value without having to specify it in the\ndestination4 configuration key.\n\nThat makes it easier for us to move crashstorage classes around without bumping\ninto an environment configuration variable which will be defined in a different\nplace in the new infrastructure."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/576097469abfdbdb24bca0f5b10e847996e26f96", "message": "Merge branch 'master' into 1346996-add-product-id-map-api"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/1e7c69450ecbde3258e07950fbcc141b2e10b719", "message": "Merge pull request #4211 from willkg/1418881-product-productid-map\n\nfixes bug 1418881 - populate product_productid_map table"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/bcc973211bfcfafea627782fb0ad3e2fee58cb72", "message": "fixes bug 1418881 - populate product_productid_map table"}], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/4303", "title": "fixes bug 1407625 - truncate values in Elasticsearch", "body": "This does three things:\r\n\r\n1. clean up a bit of Elasticsearch code in a fundamental way\r\n2. update the documentation because that helped figure out how I needed to do things\r\n3. implement truncating values for fields analyzed with the \"keyword\" analyzer\r\n\r\nI did some analysis on our data before implementing value truncating. That's covered in comment 4 and comment 5 in bug 1407625 (https://bugzilla.mozilla.org/show_bug.cgi?id=1407625). I can expand on that if that's helpful.\r\n\r\nThe unit tests cover testing the scenarios pretty well. I don't think I'd bother with manual testing.\r\n\r\nThe one thing the changes don't do is emit any kind of signal that a value was truncated, so we'll never really know. There's no way to add post-processing notes to crash data like we do in the processor rules. We can log something, but logs aren't a great way for normal people to answer questions like, \"I'm looking at crash XYZ--were values truncated?\". The person would have to ask one of us and we'd have to log into the logs host and grep the logs for the text to figure it out. That's ... rough. However, I don't think we have better options for signals in the Elasticsearch crashstorage.\r\n\r\nWe could do it as a processor rule, but I'm really hesitant to do that. This relies on `super_search_fields.py` to tell us what's up and that's Elasticsearch centric. If we convert that to a \"processed crash schema\" (which is probably a good idea to do some day), then we could use that and make a processor rule. Maybe some day in the future.\r\n\r\nMy data diving suggested we don't hit this situation very often--I wasn't able to find a problematic crash for the days I looked at. We do know it's happened in the past as evidenced by our problems migrating data over the summer. Maybe it happens less often now?\r\n\r\nThat's everything I can think of here.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/comments/22656463", "body": "This is what I love about using `.exception()` inside except blocks--it tosses all the `sys.exc_info` information into the logged message without you having to do it yourself.\r\n\r\nhttps://docs.python.org/2/library/logging.html#logging.Logger.exception\r\n\r\nIt always logs at the ERROR logging level. If you want to log at a different level, then passing `exc_info=True` is probably the better option.", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/22656463/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/22656532", "body": "Ugh. I had a funny feeling that `config.logger` is actually a `LoggerWrapper` and maybe it doesn't have `.exception`. It doesn't. Plus it does weird things that it should be doing with a filter.\r\n\r\nI'm going to add `.exception` to it now because it should mimic what Python logging module does correctly.", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/22656532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/22657319", "body": "https://github.com/mozilla-services/socorro/pull/3818 fixes that.", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/22657319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Osmose": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-services/socorro/commits/dd63ea70af4f1532a32c29c442e0f9aefbd2be85", "message": "Merge pull request #4301 from Osmose/linkify-buildid\n\nFix bug 687630: Linkify Build ID in crash report to BuildHub."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/4b4355a6d92dd576df5e4a26ade578e01eda44d9", "message": "Fix bug 687630: Linkify Build ID in crash report to BuildHub."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/4a1180ae4afecb074cfb11c56b5a31dd0ff8922d", "message": "Merge pull request #4297 from Osmose/crontabber-js\n\nFix bug 1431162: Fix errors in crontabber_status.js due to D3/sankey updates."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/5afc2c862bfca3106a93f49ed130d20c80d7fca5", "message": "Fix bug 1431162: Fix errors in crontabber_status.js due to D3/sankey updates.\n\n- Fix some inconsistent indenting that was failing eslint.\n- The `d.x`, `d.y`, and `d.dy` attributes on sankey datums appears to have been\n  replaced with `d.x0`, `d.x1`, `d.y0`, and `d.y1`. So we replace all old\n  attributes with the new ones (dy is computed from y0 and y1).\n- Pass nodes and links via the sankey constructor.\n- Replace `sankey.nodeWidth` call with a property computed from the datum's `x0`\n  and `x1` values.\n- Replace `sankey.update` with `sankey.relayout`.\n- Replace `sankey.link` with `d3.sankeyLinkHorizontal`.\n\nMost of these changes were found in the release notes on the sankey Github:\nhttps://github.com/d3/d3-sankey/releases."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/3e93f0e67df56a03922e2ff01c2b115d9131938e", "message": "Merge pull request #4291 from Osmose/e2e-tests-deps\n\nFix bug 1429431: Use pyup to monitor and update e2e-tests dependencies."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/3caa73dccebdefa50997bd508a33951577c5e4ec", "message": "Re-add isort linting on the e2e-tests directory."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/63c427d69be0757b51d30c0f1500e13f8fa11b52", "message": "Remove lint phase from Jenkins config."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/23a95d4ebb5d1176862355622f5911f76b8c3d10", "message": "Update e2e-tests README."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/dba18b8017fb52f6d3c65ea96ea802e66c792b65", "message": "Remove flake8 from e2e-tests tox config.\n\nWe already run flake8 as part of the automated test suite; this patch enables\nthat run to also lint the e2e-tests directory, and removes the tox environment\nuse for running flake8 on the e2e-tests.\n\nHowever, because we can't have per-directory configuration for flake8, we can't\nonly ignore line-length limits within the e2e-tests directory anymore, so this\nalso fixes those errors within e2e-tests.\n\nThe upside is that these files will now be linted by our standard automation."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/2a96318aed8c8009e7e09e0e026fd2fc1c6343f2", "message": "Fix bug 1429431: Auto-update e2e-tests dependencies via Pyup."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/962fab25f3ef3392c7b177d1e77ec8a639c52817", "message": "Merge pull request #4295 from Osmose/robust-poly-errors\n\nMake the string representation of PolyStorageError more robust."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/ee31cf5b712d3f6792dd00ae1e46f361a32446f9", "message": "Make the string representation of PolyStorageError more robust."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/e2bf40ed29f2cbcf2dd295b5a0d58b98479cb3bb", "message": "Merge pull request #4290 from Osmose/setup-data\n\nFix bug 1399305: Script deletion and creation of S3 bucket and ES indices in development environment."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/0a9eb91aacbbd34bd99346d359d27550f01686d1", "message": "Review fixes.\n\n- Fix S3 bucket script to ignore an error if the dev_bucket does not\n  exist.\n- Correct comment in run_update_data.sh.\n- Log which indices are being deleted by the clear_es_indices app.\n- Stop using minimum_es_version decorator in some tests.\n- Improve how we parse a date from a socorro index name."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/205b5f6b1b29930be33de95f99e8f325515b9bd2", "message": "Include awscli in base requirements for single setup script.\n\nThis lets us remove some complexity around installing awscli, and allows the\nmake dockersetup commands to be executed by a single container."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/7950d5aafe8e2e97c104d29bb5264699418f3cf3", "message": "Fix bug 1399305: Script elasticsearch index creation and deletion.\n\nModifies `make dockersetup` to clear out all Elasticsearch indexes, and\n`make dockerupdatedata` to create Elasticsearch indexes for the next two weeks."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/9b8a703d090d591783a0387fd6463e95c405be7d", "message": "Bug 1399305: Delete and recreate dev S3 bucket in dockersetup."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/e932ebb4ab4123ec554ba200c89c331988a2b9f0", "message": "Merge pull request #4289 from Osmose/fix-homepage\n\nFix bug 1429829: Use functions for `interpolate` param of metricsgraphics.js"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/ca7d08efddb17a20dbbb8190d83b1acd9116d5f5", "message": "Remind users of the system checklist to look at the JS console."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/bd9a1950259c94cbfd4e61146fe19a81f9c60c83", "message": "Fix bug 1429829: Use a function for the graph interpolate argument.\n\nThis changed in v2.10 of metricsgraphics.js, due to D3 v4.0 changes to how\nshapes work. See also\nhttps://github.com/d3/d3/blob/6480d20b3a352fcb579cd36ac34cfbb1f34b88c0/CHANGES.md#shapes-d3-shape."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/7b094d4d84ac070e7f2e1205769d290cb87fb773", "message": "Use un-minified source code as input for several libraries.\n\nThis makes it much easier to read errors during development since we're not\nusing minified files."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/59e62f65099694963d24298c29fa55d636622c17", "message": "Merge pull request #4278 from Osmose/expose-database\n\nExpose postgres on a port to make connecting via a client easier."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/e35771fb2fbb50e41f1f03be705b5dc2f5074d66", "message": "Expose postgres on a port to make connecting via a client easier."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/45f714c0f117d8d3cdada4d9afa293e79ca66c3c", "message": "Merge pull request #4272 from mozilla-services/renovate/all\n\nUpdate all packages"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/8c278ddb9eeb072f523f12980655b6f9510b46b3", "message": "Limit rate of output to avoid truncated logs in Travis.\n\nSee travis-ci/travis-ci#8973."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/66b9714ce1c00f967e27a677f1c1114484c8cdbb", "message": "Update location of d3.js file in node_modules."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/346b803722fab91527e0b092b0c62aa08fd719e3", "message": "Merge pull request #4274 from stephendonner/update-reqs\n\nUpdate test dependencies"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/d627310613aa153df06532effd725b5b57d24e52", "message": "Merge pull request #4273 from mozilla-services/pyup-scheduled-update-01-01-2018\n\nScheduled monthly dependency update for January"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/4d98f3704cba33bf25ae52e6d0c2f905d9373a10", "message": "Revert \"Update django from 1.11.7 to 2.0\"\n\nThis reverts commit 75368177d8e2fac66e67c8cc382407fa88da8e49."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/90992865606a9c536440077dc824e591645c1bd5", "message": "Revert updates to elasticsearch and elasticsearch-dsl.\n\nThis reverts commits 3ab187bde9fa6a82374f7e05f937b358c2fea8e7 and\n0c990f9d727156a7f5201594135b8f9c311f8083."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/a6f5c7f9b1b63578a78b590c56aa3377c0501e98", "message": "Merge pull request #4254 from mozilla-services/renovate/configure\n\nConfigure Renovate"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/09bfd3da915ad189f9d5a09c597a37c4e651233a", "message": "Configure renovate."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/cf11dd2d67c9ed569f624873c81dfdcc895a995e", "message": "Add pluggy 0.6.0 and attrs 17.3.0 to Python constraints."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/27bd9bf4da258d6e11cef2a231ac0a733d3637c5", "message": "Revert \"Update elasticsearch from 1.9.0 to 6.0.0\"\n\nThis reverts commit 8fbe495ade95f90066132c014e16b5f803b37e47."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/1ead2c990835b9e4fe46477efd5ed77a69207443", "message": "Revert \"Update elasticsearch-dsl from 0.0.11 to 5.3.0\"\n\nThis reverts commit 7eea0678c38a547bf55cd4da11ff2541d6e166ae."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/ae0b7dee4ebc81258d1cf107e4b7ff09a80d59e6", "message": "Merge pull request #4241 from Osmose/no-escape-bugzilla-comments\n\nFix bug 1423211: Do not escape stack frames in pre-filled Bugzilla comments."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/7253094b07b9ed5d69868f6693e24d7a15e6f3c3", "message": "Fix bug 1423211: Do not escape stack frames in pre-filled Bugzilla comments."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/2bebb6298128490b10fa6440fee30430584f4337", "message": "Merge pull request #4238 from Osmose/update-breakpad\n\nFix bug 1421988: Update Breakpad."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/625648315fffa6a48d22bea0a9e5d69bb50cfe88", "message": "Fix bug 1421988: Update Breakpad."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/7672061b86822afc859a2aa1a6d2437b0ef8e9ac", "message": "Merge pull request #4234 from Osmose/update-moment\n\nUpdate moment.js."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/86d6463437b2347b1b1f094253d3195d685ed3e4", "message": "Update moment.js."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/f12239d351e3280987f6aea38aa1be54531c310d", "message": "Merge pull request #4230 from Osmose/security-check-config\n\nBug 1411036: Add package_json_path config to dependency check cronjob."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/f9341ad032741b74727eac7f98eddd44979c962f", "message": "Bug 1411036: Add package_json_path config to dependency check cronjob."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/accca7878baadbf2857d26c9fd86f7d6eedee46e", "message": "Merge pull request #4213 from Osmose/security-checks\n\nBug 1411036: Add stage-only crontabber job for monitoring dependencies."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/b74f43f06d4e61c0005bb60c6fe73bb0b3248961", "message": "Fix order of Docker images being built.\n\nIf the webapp image isn't available, then trying to build the crontabber image\nfails, so we need to build it first."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/54ecbef61fbf7969f8e49efe200efe85d4337997", "message": "Add make command for running dependency check crontabber job."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/c1e4ada0a3a2beb5e4d1afb79724cb3d522a34ff", "message": "Review feedback: Swap crontabber dockerfile base and change monitor options."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/ec543eb4a9fc8588f3787fb26e47804ea1afdc46", "message": "Bug 1411036: Add stage-only crontabber job for monitoring dependencies."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/667ed82223b32b13b4b800dc9c86c2864c0def33", "message": "Merge pull request #4078 from mozilla-services/pyup-initial-update\n\nPyup initial update"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/c714d613e6a3064274f76d208e76cb5365915274", "message": "Drop unused legacy redirect for monitoring page."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/4bd00a0076626582cbf530ea408705a127c38ea2", "message": "Remove unnecessary shortDescription in base test class.\n\nIt was only required for nose, which we don't use anymore."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/43efd436ca99d00e05736dca4b38b6ebc71ce257", "message": "Catch TypeErrors when parsing ints, as well as a missed potential IndexError."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/b4feec64dbf41e1c10d91e4091c3cb30a675eb9f", "message": "Ignore intentionally-outdated requirements."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/eaebfd07ad28e62015607ceb23efad213cb90a2b", "message": "Fix login loop by setting correct authentication backend."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/b8b42f4421a2d20fec1a3f76e6f8617f084c0b01", "message": "Downgrade simplejson to a version that works with DotDict instances."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/e04348a9e896078b223ccde3f3c853c8cb343cfb", "message": "Fix naive datetime warnings during tests."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/f9729ccb4c25d34aff519bac8306044e12f63db1", "message": "Fix tests by being explicit about HTTP headers."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/6de00e595f7116bf3c920b05e1eca651ee6f50a5", "message": "humanfriendly is using decimal kilobytes now.\n\nSee https://github.com/xolox/python-humanfriendly/issues/4."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/230433251b9790cfcd34d2179f7e68e3dbe20908", "message": "Configure ALLOWED_HOSTS properly during test."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/a6f3272b23605f9a5de53e2f7354922e7fd5e2a5", "message": "Hook up legacy redirect to permanent redirect setting."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/3543235c91b0a4b6c0df886a220f52fe94810de9", "message": "Fix a ContentType name assignment that I missed.\n\nDjango deprecated the ability to set this."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/de8f047e4afedce0f2daaa880e9be3acf1ad3250", "message": "Allow inactive users to authenticate.\n\nEventually we should remove our custom magic to auto-logout users who are\ninactive, but for now adding this replicates Django's old behavior and fixes\na test."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/637e7213ca117bbee59c19518b84a352ef683fe1", "message": "Linting fixes."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/dd31ee2328a42dbdfd6715b242d69d71a2f41a8a", "message": "Run the webapp tests with DEBUG=False."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/1926c8c776cf09e7b6735df34f0093172bba095b", "message": "Move to new package names for pinax-eventlog and jsonfield."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/50ec25bba1ca925c271a8984cd61afbc1a924841", "message": "Update use of deprecated Django APIs."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/c9ce1929e000063d02fc3bc092a134ffb050bd9b", "message": "Fix mis-named assertion in Socorro tests."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/e021fd81585aaa811d166eb70fbd8c6234ee5954", "message": "Update lint issues from new flake8 version."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/bb53d0cdfc1792d9378488bc754f9c30ae05f492", "message": "Fix CSS paths to avoid Django's suspicious operation exception during builds."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/4a25255b1fa102ce404e07110b41024ef4c35aa7", "message": "Revert \"Update elasticsearch from 1.9.0 to 5.4.0\"\n\nThis reverts commit 889d2d2d79a533dd2f45d131e5cfebdd695b86ec."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/e6abdafb53b87b22555ae6ff23fdf2b8214220ca", "message": "Revert \"Update elasticsearch-dsl from 0.0.11 to 5.3.0\"\n\nThis reverts commit eb99646cef5eefd1a6f9cc1a87725631f954f6ca."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/e4c9e01329baf30d7eb7ea15b304942bf86eecd6", "message": "Add missing constraints due to new versions."}], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/4304", "title": "Fix bug 1321870: Use last IP instead of first from X-Forwarded-For.", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "amccreight": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-services/socorro/commits/96919c4505c9074d7fe86985902a47a2cd7ebcc7", "message": "Bug 1431167 - Add ReleaseData to the prefix list\n\nReleaseData is a generic function used to destroy string data."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "renovate-bot": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-services/socorro/commits/a1f5720fdae6fab781bd63a4ea3bfed909ea7cca", "message": "Update all packages"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stephendonner": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-services/socorro/commits/f076ba65e6b9095569ca544b7c67b353777915eb", "message": "Merge branch 'master' into update-reqs"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/f79368edcee2271f1a0245bbb2805833033d836e", "message": "Merge branch 'master' into update-reqs"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/7f1775ab6b5de5b42353ffcdf905557e0b3f9719", "message": "Merge branch 'master' into update-reqs"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/2408081ce16884a738b1538bf1b7b2853290826b", "message": "Merge branch 'master' into update-reqs"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/5315e998d3fb23a79b118c0cdc76d841ad2b1678", "message": "Merge branch 'master' into update-reqs"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/0bd61d9f3ac266fa6e2e6dff63bc7c86e3fdd0ed", "message": "Merge branch 'master' into update-reqs"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/31b71d7fee31e293efd6b5d65c415be179ebdbda", "message": "Bump two more deps"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/81401b62a92ebb1c02b425f9eb0760671928cb46", "message": "And, bump mozlog"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/ba83ca3a9c18c520cf61363e88794205fd5dddb0", "message": "Merge branch 'master' into update-reqs"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/19aaa995f704a754ad815bcba2a71b650502a3d9", "message": "Bump pytest (again)"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/504473f273100c14e873b10799b042e77d73539b", "message": "Update test dependencies"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/23ec35a0fa5f3c4ddc039d5e42850c03cea6791a", "message": "Correct, permanent fix from Sauce Labs for Firefox 57 (#4246)"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/c0adca64dd697f40bf50c2fd8a79bc862987fe6a", "message": "Update to Firefox 57, in Sauce Labs"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/acbaf70d9bdb2d3c27e94d9da16e4518eebf3437", "message": "Upgrade to latest pytest (#4242)"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/96481d10bf932b250697904361b8b8147e014fc6", "message": "Update pytest-selenium to latest (#4240)"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/f75753c9de436378a737481d99fcca791ba0ce57", "message": "Update to latest Selenium (#4229)"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/0ea73d5a702f2b9109e7b0acd69a7edb08434f8d", "message": "Fix inane test name (#4226)"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/dc5bb81a58ac79737c604329d7aef71af203b41d", "message": "Remove unused bidpom dependency (#4225)"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/168f782fb0a9a488ac9eaa6a2295a55ead1eca29", "message": "Update pytest and pytest-metadata to latest (#4222)"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/dd47650aba32e184b41c38cbcd6ea399c85a1be2", "message": "Update pytest to 3.2.5 (#4216)"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2044120", "body": "Filed https://bugzilla.mozilla.org/show_bug.cgi?id=685658 for this.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2044120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2044157", "body": "Filed https://bugzilla.mozilla.org/show_bug.cgi?id=685661 for this.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2044157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2044182", "body": "Filed bug https://bugzilla.mozilla.org/show_bug.cgi?id=685663 for this.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2044182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2044227", "body": "Filed https://bugzilla.mozilla.org/show_bug.cgi?id=685665 for this.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2044227/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/comments/783779", "body": "whether\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/783779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/783780", "body": "@Lonnen \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/783780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/783791", "body": "<3\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/783791/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "pyup-bot": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-services/socorro/commits/b387069007ab7eb87ef3846d7d4ad7c4f1ed7080", "message": "Update pinax-eventlog from 2.0.0 to 2.0.2"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/eeb654ed736ae3c7f0ee3f074e88aef3b8a20451", "message": "Update pytest from 3.3.0 to 3.3.1"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/fa6ad0700e479a926b4f8cd362b8c9e9038064a5", "message": "Update requests-mock from 1.3.0 to 1.4.0"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/67b7b038fb869a35ab7cdce7fe292112bfce02aa", "message": "Update django from 1.11.7 to 2.0"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/a60b27cd96474a69c163ab223398e814c1ace48d", "message": "Update python-memcached from 1.58 to 1.59"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/6418571e282470da62833502bcbbb25a61625316", "message": "Update statsd from 3.2.1 to 3.2.2"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/c4963c9d0df90f12975abec1ed8c2cfe08e66b64", "message": "Update raven from 6.3.0 to 6.4.0"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/95110f52ddb7ff611aa45c9f2852e0ab7f1712da", "message": "Update elasticsearch-dsl from 0.0.11 to 6.0.0"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/60b900ee20dbc734a13cceadae3e1e807cb5f4af", "message": "Update elasticsearch from 1.9.0 to 6.0.0"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/123b95effef493e192bca2929c6f55dabaaae920", "message": "Update sqlalchemy from 1.1.15 to 1.2.0"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/5a6f7ea5640221730f379100ea4200d06dd11343", "message": "Update commonmark from 0.5.4 to 0.7.4"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/ddbb7b69d8f616aa88e589b2dac96e980f0e6812", "message": "Update pytest from 3.2.3 to 3.3.0"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/639931d40d20039f9602a7a54376da552c3ae41d", "message": "Update django-jinja from 2.4.0 to 2.4.1"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/ab5e7dcde58ba5e7a6b4d34db7f3115e953feb09", "message": "Update newrelic from 2.96.0.80 to 2.98.0.81"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/5c9077cbe732e9dbc4b596be4e4229d283b5dba6", "message": "Update datadog from 0.16.0 to 0.17.0"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/ff2f2afaaaee764ca4ca95d44a9ea1a892a4a225", "message": "Update jinja2 from 2.9.6 to 2.10"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/78dc7068a1b05b1feb922f40f732472efacd34bd", "message": "Update elasticsearch-dsl from 0.0.11 to 5.3.0"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/8e0fb7733e1bb994c9889205226fd8250866539a", "message": "Update elasticsearch from 1.9.0 to 6.0.0"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/1635ae0734aee8f9ff58c1a547f3291778622a9c", "message": "Update pika from 0.11.0 to 0.11.2"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/30d6cf36fa2a1f8913542eb9b89212ed1b3289d5", "message": "Update whitenoise from 3.3.0 to 3.3.1"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/66c02f7f73ec0ad164e4c614c12be90502d42e73", "message": "Update pytest-env from 0.6.0 to 0.6.2"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/22ecc0e6b1b7a3372044caaf7fd24cb072e70502", "message": "Update pytest from 3.0.7 to 3.2.3"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/9de86945b8bcdc8829e4a6340b90dba22281bac4", "message": "Update django_csp from 3.1 to 3.3"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/f04456262a259102f4788939a3db6b0fe6c490ac", "message": "Update oauth2client from 2.2.0 to 4.1.2"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/0859a39b583a03727918fc3f4ae34cdd708efb86", "message": "Update isoweek from 1.3.1 to 1.3.3"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/d90589b7d704a70e4b856a49dffbd1604112aee7", "message": "Update requests-mock from 1.0.0 to 1.3.0"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/85aa00eb0a40364dc20bed73f47d9edbb94ecb49", "message": "Update jsonschema from 2.5.1 to 2.6.0"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/3b437651992dbe4a76bb85c993afe198332cd49a", "message": "Update humanfriendly from 1.44.7 to 4.4.1"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/cf9d94ec56dc76e3586dd634e5613482ccec4bc6", "message": "Update django-jinja from 2.1.2 to 2.4.0"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/0fae4073c598b94dec7fadf5b8be99d4fe25124d", "message": "Update django-pipeline from 1.6.9 to 1.6.13"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/528d918adc180510ea99712aa5cbb04c42ae131b", "message": "Update contextlib2 from 0.4.0 to 0.5.5"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/f11eae73fe91f78bcc7d69caa9c78cc801466444", "message": "Update newrelic from 2.56.0.42 to 2.96.0.80"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/6d6f643e83c299a2bb26001dc0fbab701f636fb7", "message": "Update freezegun from 0.3.6 to 0.3.9"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/97f476cfad13359dbdcd240a386be8b51751a0ad", "message": "Update dj-database-url from 0.3.0 to 0.4.2"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/9243fd32bd70a48ef5d6861ff8c7bd3428a3173a", "message": "Update python-decouple from 2.3 to 3.1"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/40515de58affd3cc19feb8b16512c7eb60bbe40b", "message": "Update flake8 from 3.4.1 to 3.5.0"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/57d35d5bb4faadac716c986dbf2c7b1ce1c285b6", "message": "Update eventlog from 0.8.0 to 0.11.0"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/f7f0b246941b8cc6ca13ddf9fab8f617fe3402cb", "message": "Update django from 1.8.18 to 1.11.7"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/25a9d542f3c68e011ddade4e9dd2665dfd26b644", "message": "Update jinja2 from 2.8 to 2.9.6"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/bc64a356c054672fbe1940b575598f22c477d275", "message": "Update django-waffle from 0.11 to 0.12.0"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/d9cbef951d535e41c70205a408deea5c2bb8e42a", "message": "Update django-ratelimit from 1.0.1 to 1.1.0"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/994bd1c0d35cc7e8dd64f6483ec8c02217543c21", "message": "Update pyquery from 1.2.17 to 1.3.0"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "davehunt": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-services/socorro/commits/7b75737799270e3d4f994216bcbe43636f5eb469", "message": "Update the e2e tests README"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/838b4e6d93c79f460cabbf9dc15d6c8dd6be5920", "message": "Add flake8-isort to check import sort order (#4208)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "renovate[bot]": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-services/socorro/commits/e35ec0ed88184b590b0743129dc20089b582ce7d", "message": "Add renovate.json"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lonnen": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-services/socorro/commits/d8faf71d407cb04af28a92b71ee1255dc23202dc", "message": "Merge pull request #4245 from mozilla-services/fixes-1346993-osprettyversionrule\n\nfixes bug 1346993 - OSPrettyVersionRule"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/ca799c711c19f372e1752dc197a3287d620e137a", "message": "fixes bug 1346993\n\nmoves window pretty name lookup table into the name prettifying rule, refactors, and documents the rule. removes one more instance of direct database access from the processor."}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/f4381838358d0bf1c5596989ab4bc58f1e3940d9", "message": "Merge pull request #4237 from mozilla-services/fixes-1422551\n\nfixes bug 1422551 - move rewrite rules to in-memory in processor"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/f2b19020e79566fc3c296aba1a7a5a6996f58bd9", "message": "Merge branch 'master' into fixes-1422551"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/64d1a530da5944d270095bfa33820e13fb1ae018", "message": "Merge branch 'master' into fixes-1422551"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/c75841d4bafecabd19079d2904baabd902e90dcf", "message": "remove inactive products from ProductRewrite Rule"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/57005a67c0f77fe89210466f222b0069f253bff8", "message": "fixes bug 1422551\n\nputs the contents of the product_id_map table into the transform rule and simplifies both the data structure and the logic of the rule a bit. also modifies the tests to accomodate the new data strucutre, removing the mocking, database connections, and config aggregate"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/79b4b41e62b1e9f37c0b2dc5fe44355866ae8d7b", "message": "unmerge the 1346996 fix"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/3978dffaa5b29ff9e93bc7dc86947215eb6555c2", "message": "Merge pull request #4218 from mozilla-services/remove-unused-test\n\nFixes Bug 1419866 - removes statsd benchmark test of unused behavior"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/bf49ee05b01a19e3cc4cb8e30905a65d8c7e1de0", "message": "removes statsd benchmark test of unused behavior\n\nthe statsd benchmark tests wrapping transform rules, which is not a behavior we implement. removing the affected test and dependencies, but leaving the tests covering how we actually use the module"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/feed782291643b4fbf5bcd1885c6af51b60c890b", "message": "Merge pull request #4210 from mozilla-services/1346996-add-product-id-map-api\n\nfixes bug 1346996 - adds new product_id_map api endpoint"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/bfb65c4c4c2692194bd1d29b7e7a0660e0c1ad73", "message": "Merge branch 'master' into 1346996-add-product-id-map-api"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/cb712a8c459722b8fb364b4b1bd982e3fc4253ba", "message": "Merge branch 'master' into 1346996-add-product-id-map-api"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/a8c473267f5ad23c171d45b24237d476dc009f6e", "message": "adds new product_id_map api endpoint\n\nthis exposes a new endpoint, product_id_map, which could called by the processor in lieu of directly access the database"}], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/4253", "title": "[ready] 1409648 gc rule sets part 2", "body": "This is ready for consideration.\r\n\r\nnotable changes:\r\n* this alters processor config keys\r\n* rules are no longer configurable, but like the signature utils can be supplied at run time to make testing easier\r\n\r\nI believe this is up-to-date with processor changes as they happened, but it's good to double check. This was in flight for a while.", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2045280", "body": "bug: https://bugzilla.mozilla.org/show_bug.cgi?id=685654\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2045280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2045298", "body": "r+, but you'll need to merge it yourself\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2045298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2047753", "body": "I don't know what all of those commits are... maybe ghost commits from my previous git install. I've spent over an hour trying to figure it out and I see some old history that was preserved in my network that isn't linear with svn, but otherwise I'm a little stumped. They're too scattered me to destroy with a rebase, but they effect no change on the code in the repo. \n\nOnly the last two changes are actually important to this commit. You'll see in the branch diff / files changes that they are the only ones that actually affect the code base.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2047753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2048226", "body": "I'll have to completely nuke my repo and create a new fork. These ghost commits are in my master also.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2048226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2053369", "body": "closing this to redo it with fewer ghost commits.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2053369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2088119", "body": "https://bugzilla.mozilla.org/show_bug.cgi?id=686547\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2088119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2097778", "body": "I'm going to resubmit this without the dangerous binary changes.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2097778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2170860", "body": "11:01:08 AM laura: lonnen: r+\n11:01:13 AM laura: nice catch\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2170860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2171778", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2171778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2183697", "body": "Going to clean up the history a bit and reopen under a new name. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2183697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2183921", "body": "closed for renovation.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2183921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2195217", "body": "5 commits for a single line change?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2195217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2251807", "body": "Schalk, can you open a bug for this in bugzilla? Product webtools, component socorro. Paste a link to this pull request in the bug and someone can r+ it and merge it in.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2251807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2254614", "body": "Thanks. Our process is in a little bit of flux, but for the moment it looks something like this:\n1. file or find a bug\n2. develop code in a branch that starts with the bug number (i.e. 690691, or 690691-prettify-the-headings)\n3. open a pull request, link the pull request in a bug\n   - if you fancy a particular reviewer, name them in the comment (i.e. \"lonnen r?\"), maybe pester them in IRC if its urgent\n4. someone will review\n   - r-, reviewer should give you a reason\n   - r+, reviewer merges it for you, post a link to the merge in the bug, and mark it 'resolved fixed'\n\nAs for this patch:\nr+, thanks!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2254614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2385096", "body": "This agrees with my personal .git/exclude file\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2385096/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2412318", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2412318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2412391", "body": "Remember to merge this into 2.3.1\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2412391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2431632", "body": "Yep. In the box where you write up a new comment there is a 'close pull request', or there is a comment & close button below it. Afterwards, feel free to submit a new issue.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2431632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2431636", "body": "er, not a new issue, but a new pull request.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2431636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2432848", "body": "r+, merge away!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2432848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2432933", "body": "r+ merge go\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2432933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2433043", "body": "Date picker, eh? Is there an update for that we could use to make it work? There's no saying we can't update all of the JS libs, because of jQuery we'll have to retest so much anyway.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2433043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2433135", "body": "I don't think we're wed to any particular date picker, so feel free to grab a different one.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2433135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2436587", "body": "r+, tested the branch data sources, email page, and daily date fields for mouseclicks and tabbing through the form\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2436587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2473087", "body": "No need to open a merge request for stuff you want feedback on. Just put it up in a branch and link us to the comparison.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2473087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2521653", "body": "Excellent. Please rebase or rewrite to squash these into one commit and this can be merged.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2521653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2521656", "body": "whoops. didn't mean that close.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2521656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2521746", "body": "Please rebase these down to a single commit.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2521746/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2521653", "body": "Excellent. Please rebase or rewrite to squash these into one commit and this can be merged.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2521653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2521656", "body": "whoops. didn't mean that close.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2521656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2522901", "body": "molto bene, r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2522901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2579769", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2579769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2628004", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2628004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2640619", "body": "Adrian: updated. r?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2640619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2824019", "body": "Left a few more line notes. Last item -- have you looked at https://github.com/davedash/elasticutils? It's probably outside the scope of this reorg, but we could probably clean and remove more ES code with it.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2824019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2689780", "body": "Since this isn't something I can reproduce, I'm not very confident in my review that this fixes the bug. However, the code looks fine and implements ted's proposed solution.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2689780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2782400", "body": "Looks good! r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2782400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2742186", "body": "This patch removes the fix from one of your earlier bugs. Also, your fixes in general seem to change the surrounding spacing arbitrarily.\n\nIf you want to fix the spacing of the file you're working on that's great; a lot of our code doesn't quite line up with the style guide. Please include it as a second commit independent of your work for the bug fix.\n\nr-\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2742186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2767409", "body": "eww. mangled that force push. setting things straight with a clean branch.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2767409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2781972", "body": "grepped around and I've eliminated 'solaris' and 'sol' as they pertain to the OS. Any other abbreviations for this I'm missing?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2781972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2782400", "body": "Looks good! r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2782400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2793550", "body": "This also changes the way the branch admin panel works, which I believe is unintended. When I update a product in the branch panel it swaps the date and month from what the user expects, i.e. setting a date to Nov 04, 2011 with the datepicker calendar enters the date as April 11, 2011.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2793550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2793857", "body": "achievement unlocked: interactive rebase\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2793857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2795011", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2795011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2824019", "body": "Left a few more line notes. Last item -- have you looked at https://github.com/davedash/elasticutils? It's probably outside the scope of this reorg, but we could probably clean and remove more ES code with it.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2824019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2853410", "body": "did some halting and retesting and something got stuck. fixed that up and it works. r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2853410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2964996", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2964996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2979536", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2979536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3040869", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3040869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3087548", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3087548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3087828", "body": "discussed with schalk -- for non-trivial (formatting / whitespace) r- reviews I'm going to start closing the pull request. They can be reopened after the fixes.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3087828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3156326", "body": "The axis labels get wider as you enlarge the window, in order to stay centered under the graph ticks. After a certain screen size : count(data) ratio they start to overhang their bounding div, which triggers horizontal scrolling... it's really a flot bug. If it's a deal breaker I'll have to go patch flot.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3156326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3156564", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3156564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3173061", "body": "cleared for landing.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3173061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3173137", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3173137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3173197", "body": "post patch there are no errors. r+\n`This document was successfully checked as HTML5!`\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3173197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3173299", "body": "works as advertised. r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3173299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3173358", "body": "this pulls the topmost version in the drop down. When we fix the bug related to version sorting this will choose the newest. WFM. r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3173358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3180704", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3180704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3222722", "body": "already r+ from rhelmer on dev\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3222722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3283985", "body": "Should we be logging this failure case?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3283985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3298209", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3298209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3298851", "body": "Left a comment on the commit about a possible place to DRY out this change set, but otherwise this works for me.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3298851/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3302601", "body": "comments are in bugzilla. please reopen later\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3302601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3407422", "body": "on a clean `vagrant halt; vagrant destroy; vagrant up;` the response from http://crash-stats is `application/x-httpd-php` so something isn't working right.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3407422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3407506", "body": "bash output: http://lonnen.pastebin.mozilla.org/1440769\n\nthis is the same form `vagrant destroy; vagrant up;` and `vagrant reload;`\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3407506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3408008", "body": "hrm. deleted everything and started over and the box loads, but the website has errors. The database correctly loads with waterwolf data (when I check it directly) but all the config files are setup for standard products. will try again tomorrow\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3408008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3421578", "body": "r+ from me. This change predates the 2.4 stuff, and the isodate dependency introduced for 2.4 will not be properly installed. That's outside the scope of this, though, and waterwolf loads and will work fine.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3421578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3421853", "body": "Adrian: this code cannot be automatically merged anymore. I know its been sitting in the queue for a bit -- sorry. You'll need to fix the conflicts.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3421853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3436254", "body": "Thanks. Will have to wait until 2.4 is done to merge this.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3436254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3537975", "body": "I think that `/crashes/top_signatures/` should instead be `/crashes/signatures/` but otherwise this is an r+. If you agree, feel free to make the change and merge it yourself.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3537975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3538043", "body": "@rhelmer -- you'll need to fix the merge conflicts before this can be merged.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3538043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3539872", "body": "these are cool. @lauraxt  you should check to make sure github bot catches and closes all these bugs, but I'll add them to the config change list for the upcoming release.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3539872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3555295", "body": "works in my vm. r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3555295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3555767", "body": "I've resolved the merge conflict in my own repo. closing this, but reopening / merging from my repo.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3555767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3555785", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3555785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3624444", "body": "The patch moving the branch model sql to the middleware will probably remove more lines then it will add, but it was too much to put into this already large changeset. Leaving it for an additional bug.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3624444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3624560", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3624560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3625516", "body": "`webapp-php/application/controllers/report.php` accesses the same idiom on line 114. Does this need to be changed there, too?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3625516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3640435", "body": "got one r+ from Brandon, but looking for a second before this merges. Any takers?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3640435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3642998", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3642998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3643029", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3643029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3643138", "body": "This break's non-LDAP modification in the admin panel, which might be a big deal for 3rd party installs. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3643138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3646749", "body": "Checked `webapp-php/modules/auth/libraries/drivers/Auth/NoAuth.txt` and it claims:\n\n```\nThe application is responsible for *not* instanciating the Auth library if the auth.driver variable is set to NoAuth\n```\n\n... so maybe use a ternary op checking the config value, and set the user name accordingly?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3646749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3647912", "body": "I made some changes and got this ready to merge: https://github.com/mozilla/socorro/pull/301\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3647912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3660509", "body": "Looks good. r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3660509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3692993", "body": "I've filed bug 721827 for this. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3692993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3692997", "body": "https://bugzilla.mozilla.org/show_bug.cgi?id=721827\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3692997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3783811", "body": "```\ngit checkout master && git pull origin master\ngit checkout -b bugXXXXX-short-description\ngit cherry-pick d1a22ab7\ngit cherry-pick 080df264\n```\n\nIf you can join us in #breakpad on irc.mozilla.org I'd be happy to walk through git problems with you.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3783811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3788451", "body": "Brandon, please file a bug for this, target it for 2.4.2, marked resolved fix with a link to the pull request. Thanks.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3788451/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3802840", "body": "I could do without the lars style `#------------------------------------` comments, but they're a de facto part of our style guide at this point. Everything else looks good. r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3802840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3803388", "body": "This also fixes the ADU times, so graph dots line up now. Huzzah! r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3803388/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3802840", "body": "I could do without the lars style `#------------------------------------` comments, but they're a de facto part of our style guide at this point. Everything else looks good. r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3802840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3783811", "body": "```\ngit checkout master && git pull origin master\ngit checkout -b bugXXXXX-short-description\ngit cherry-pick d1a22ab7\ngit cherry-pick 080df264\n```\n\nIf you can join us in #breakpad on irc.mozilla.org I'd be happy to walk through git problems with you.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3783811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4131079", "body": "closing because of the r-, feel free to reopen if you update the pull\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4131079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3851800", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3851800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3859134", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3859134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3918336", "body": "r = rhelmer\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3918336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3898757", "body": "9 and 9, r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3898757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3972455", "body": "Github is hung on `Checking for ability to automatically merge\u2026` but when that resolves it's fine to merge. Works in my VM.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3972455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3972287", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3972287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3976416", "body": "r+ from me, the new make target seems to work.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3976416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3995093", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3995093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3995307", "body": "patch works, but I'm not sure its necessary. see https://bugzilla.mozilla.org/show_bug.cgi?id=712586#c7\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3995307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4012536", "body": "That's the dumbest idea you've ever had. No.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4012536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4091929", "body": "This has conflicts because it includes another patch that has already been applied. Please rebase it so the pull includes just your commit.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4091929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4126288", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4126288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4128315", "body": "Don't just move the function, the whole conversion should take place in the model.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4128315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4146851", "body": "gg, r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4146851/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4099134", "body": "Hard to test this on my VM, because the dump has no bug associations. Instead I loaded up crash-stats-dev and ran this new javascript on there. Seems ok to me. r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4099134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4128217", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4128217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4091867", "body": "comments in bug. r-\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4091867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4126264", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4126264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4090892", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4090892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4090466", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4090466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4128891", "body": "r+ by execution, not by visual inspection or study.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4128891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4129665", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4129665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4203778", "body": "r+, lgtm\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4203778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4220864", "body": "AMO uses [less](http://lesscss.org/) to bring mixin's to css. You can write:\nhttps://github.com/mozilla/zamboni/blob/master/media/css/impala/lib.less#L37\n\nand then with a one liner get all the vendor prefixes applied in the compiled css:\nhttps://github.com/mozilla/zamboni/blob/master/media/css/impala/buttons.less#L14\n\nDuring the rewrite this will be attractive. All valid CSS is valid LESS, so we can drop right in. Since Q2 is fast approaching, I think this is the direction we should move.\n\nFor now, I've added vendor prefixes back for all border radius and box shadow rules, including where we didn't honor them prior. I've also added a second commit, expanding all tabs and trimming the trailing whitespace.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4220864/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4224062", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4224062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4318370", "body": "My apologies, but this will need to be rebased because of the history mangle last week.\n\n```\ngit checkout master\ngit checkout -b bugXXXXXX-change-verion-to-version\ngit cherry-pick 0a674f4\ngit push github bugXXXXXX-change-verion-to-version\n```\n\nand reopen from the clean branch. Also, please file a bug for this.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4318370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4318356", "body": "My apologies, but this will need to be rebased because of the history mangle last week.\n\n```\ngit checkout master\ngit checkout -b bug528578-improperly-identified-crashing-thread\ngit cherry-pick 6c1e7bf\ngit push github bug528578-improperly-identified-crashing-thread\n```\n\nand reopen from the clean branch\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/4318356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/comments/1289482", "body": "![r+](http://i.qkme.me/3p3wd4.jpg)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/1289482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/5531104", "body": "wtf? how does this still work?!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/5531104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/5533690", "body": "I see now that its checked into vendor local below.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/5533690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/243291", "body": "I thought you were converting non-lists to lists as soon as you could and removing the methods like this one and `def append_to_var` that rely on `isinstance` to implement different behaviors.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/243291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/243725", "body": "is this search specific still?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/243725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/243771", "body": "Return earlier from here to the end of the function. `if impl: return impl` will let you remove more `if`s farther down the code path.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/243771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/243780", "body": "This seems to be another case of writing dual code paths to support lists and strings that should be singleton lists. If it isn't, it would be clearer as `if fields in authorized_fields:`\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/243780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/243805", "body": "Another case of supporting paths for lists and singleton lists.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/243805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/247031", "body": "Yep. I got that from the ReST spec.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/247031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/321050", "body": "main(ExampleApp) and ExampleApp.main() is less intuitive than it could be, perhaps. Maybe it's just the newness of the convention.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/321050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/321051", "body": "and while I'm at it I'd like my bike shed to be green, plz.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/321051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/378156", "body": "filed as https://bugzilla.mozilla.org/show_bug.cgi?id=720539 and attached to the tracker for moving sql to the mware.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/378156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/378308", "body": "fixed in latest version, same branch.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/378308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/381382", "body": "``` python\nresults = []\n\n#no need to call Postgres if we know there will be no results\nif total != 0:\n    try:\n        results = db.execute(cur, sql_query, sql_params)\n    except Exception:\n        util.reportExceptionAndContinue(logger)\n```\n\nSomething a little DRYer\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/381382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/381458", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/381458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/393653", "body": "+1 to Brandon's comment.\n\n```\nif (isset($pv[1])) {\n    $v1[] = $pv[1];\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/393653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/730513", "body": "This is a really slow algorithm (O(n!)). Can you come up with something a little faster?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/730513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/730538", "body": "You change spacing here from 4 to 2 spaces. Use 4 throughout.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/730538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/730540", "body": "spacing\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/730540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/243291", "body": "I thought you were converting non-lists to lists as soon as you could and removing the methods like this one and `def append_to_var` that rely on `isinstance` to implement different behaviors.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/243291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/243725", "body": "is this search specific still?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/243725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/243771", "body": "Return earlier from here to the end of the function. `if impl: return impl` will let you remove more `if`s farther down the code path.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/243771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/243780", "body": "This seems to be another case of writing dual code paths to support lists and strings that should be singleton lists. If it isn't, it would be clearer as `if fields in authorized_fields:`\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/243780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/243805", "body": "Another case of supporting paths for lists and singleton lists.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/243805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/321050", "body": "main(ExampleApp) and ExampleApp.main() is less intuitive than it could be, perhaps. Maybe it's just the newness of the convention.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/321050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/321051", "body": "and while I'm at it I'd like my bike shed to be green, plz.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/321051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/378156", "body": "filed as https://bugzilla.mozilla.org/show_bug.cgi?id=720539 and attached to the tracker for moving sql to the mware.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/378156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/378308", "body": "fixed in latest version, same branch.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/378308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/381382", "body": "``` python\nresults = []\n\n#no need to call Postgres if we know there will be no results\nif total != 0:\n    try:\n        results = db.execute(cur, sql_query, sql_params)\n    except Exception:\n        util.reportExceptionAndContinue(logger)\n```\n\nSomething a little DRYer\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/381382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/381458", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/381458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/393653", "body": "+1 to Brandon's comment.\n\n```\nif (isset($pv[1])) {\n    $v1[] = $pv[1];\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/393653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/155448609", "body": "I lifted this from static data, and used a supersearch query faceted on different version fields to verify that this is _probably_ the right data. That said, it's worth checking the prod database to make sure I got the data right (I no longer have access to make this kind of check myself, sorry)", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/155448609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/155448796", "body": "This is not a legit windows version (yet), changed it to an actual one listed in the table.", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/155448796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/155449038", "body": "removed this seemingly arbitrary constraint.", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/155449038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/155693875", "body": "errant paste. good catch, removing", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/155693875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "milescrabill": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-services/socorro/commits/a8283188aa4ff7e3614490db963ef3fc10172bf2", "message": "Merge pull request #4217 from mozilla-services/circle-build-tags\n\ncircle config: add a workflows section so we build tags"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/commits/8ec09a9e9f81ed393b32b463b573a6038c504925", "message": "circle config: add a workflows section so we build tags"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "calixteman": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/4294", "title": " Bug 1430181: Add an API endpoint (CrashStopData) to Socorro. ", "body": "The purpose of this endpoint is to have in one shot all the data needed by the webextension CrashStop which displays crash data in Bugzilla.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Lehych": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/4271", "title": "Ack RMQ message on exactly same channel", "body": "RMQ message should be acknowlodged on same channel and connection it was\r\nrecived. Lets store channel near with the message.\r\nHere also removed rety on basic_ack since if ack failed connection or\r\nchannel error it means we could not ackowledge task anymore.\r\n\r\nWhat led us to this issue is that if one of RMQ HA Cluster nodes fails we got lots of errors \"unknown delivery tag\" errors. And due to using transaction for  both `basic_get` and `basic_ack` this error could lead to very long performance degradation on processors. This is because every time \"unknown delivery tag\"  happen we close connection and all crashes we are processing now will get same error on save.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "johnp": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/4007", "title": "bug 1401669 - allow filtering for crashing thread name in super search", "body": "This is my first commit here and I have <1h experience with the code base, but this seemed to be easy enough(?).  \r\n\r\nI don't know the exact meaning of most of the members in super_search_fields and therefore set them based on other entries for now.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "luser": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/3853", "title": "bug 1378836 - Make stackwalker detect likely-wrong crash addresses", "body": "There's also a cleanup commit here that removes the pipe dump output that we haven't used in ages.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rhelmer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2046395", "body": "https://bugzilla.mozilla.org/show_bug.cgi?id=685612\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2046395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2047816", "body": "The last two lgtm. \n\nDo you want to rebase this pull request down to just those? Could do it on a new branch if you want to leave the history on this one alone.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2047816/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2047818", "body": "(thinking you could do new branch off master, merge just those two, rebase that so the commit messages make sense. haven't tried, ymmv, etc but seems like it should work)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2047818/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2052887", "body": "merged in https://github.com/mozilla/socorro/commit/20b185066336561bfce8b6a74b50b5da5bf2ccd2\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2052887/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2052889", "body": "https://github.com/mozilla/socorro/commit/20b185066336561bfce8b6a74b50b5da5bf2ccd2\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2052889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2053280", "body": "This has the changes suggested by lonnen and ted:\n- use \"git rev-parse HEAD\"\n- modify revision.php not revision.php-dist\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2053280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2171484", "body": "BTW the diff is so large because of the whitespace trimming lonnen did; the point of this merge is just to have a snapshot of master at the time of the release though so this commit is purely for historical/archeological concerns.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2171484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2184010", "body": "for great justice\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2184010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2195292", "body": "You are too fast, check now :) \n(sorry, branch was in a weird state and I didn't notice before doing the pull request)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2195292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2207401", "body": "Actually just to avoid confusion let's hold off until after the current 2.2.4 release goes out (the DB server pulls from master)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2207401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2315124", "body": "fix\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2315124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2349861", "body": "I neglected to merge this one, brandon is going to send a new pull request.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2349861/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2353307", "body": "needs more work, unfortunately\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2353307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2402136", "body": "Josh is redoing this to not be so painful. We should have to make few if any changes to the code, there'll be a simpler SP and also a view for the frontend to query.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2402136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2689684", "body": "Per IRC, we have the original line in MDSW output, so not important to log it here. I can't think of any exception that would be thrown here that would cause a problem (except system ones of course but they won't be caught here). r=me\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2689684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2704057", "body": "r+, these queries look right to me. Given bug 701601 I have no objections to landing this now.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2704057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2711142", "body": "Adrian, I suggested this in the last round but I think Brandon wanted to make it easier on you :)\n\nI think we're pretty much out of time to redo it for 2.3.3 at this point, it's minor and self-contained enough I think we should take this now and move it to middleware for 2.3.4\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2711142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2752047", "body": "We've decided to move socorro-docs into the ./docs/ directory instead of being a separate repo.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2752047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3039521", "body": "r+ thanks for catching that!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3039521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3154640", "body": "Seems to work as advertised, but I get a horizontal scroll bar if the window is too _wide_, which is freaking me out :) Happens in Nightly and also latest Chrome. Any idea what's up with that?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3154640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3172875", "body": "oops meant to push a different branch\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3172875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3284264", "body": "I'm not sure it's worth logging, since we'd log it on every run. However I did file a bug to remove the dir that caused this and would prefer these things be done in a consistent way on the server, so maybe it's worth logging.\n\nI'll add a logger.info() in there.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3284264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3360450", "body": "r+, changes look fine and wfm locally.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3360450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3363749", "body": "Two ways to test this (I've done both locally):\n\n1) new vagrant install \n\nvagrant destroy # if necessary\nvagrant up\n\nhttp://crash-stats/ should show a screen like http://imgur.com/zHhnx\n\n2) existing vagrant install (replacing existing DB)\n\nlocalhost:socorro-vagrant rhelmer$ vagrant ssh\nvagrant@lucid64:~$ sudo /etc/init.d/supervisor force-stop\nvagrant@lucid64:~$ sudo /etc/init.d/apache2 stop\nvagrant@lucid64:~$ cd ~/dev/socorro/ && git checkout master && pull origin master\nvagrant@lucid64:~$ sudo su - postgres -c \"dropdb breakpad\"\nvagrant@lucid64:~$ logout\nlocalhost:socorro-vagrant rhelmer$ vagrant reload\n\nhttp://crash-stats/ should show a screen like http://imgur.com/zHhnx\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3363749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3375867", "body": "peterbe, we've been discussing using an integration branch to get this and everything it depends on changed.\n\nCan you update the commit range on this pull request to use bug537003-timezone-integration instead of master?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3375867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3381652", "body": "These changes look ok to me, and it does not introduce any new unit test failures to the integration branch.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3381652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3390508", "body": "looks ok to me, but why comment out the tests instead of removing them?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3390508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3403115", "body": "Hmm good point, I actually tested this by running one of the cron startup scripts, wonder why it worked.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3403115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3403172", "body": "Ah the reason it appears to work is that TypeError is silently caught here:\n\nhttps://github.com/mozilla/socorro/blob/master/socorro/lib/ConfigurationManager.py#L275\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3403172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3403192", "body": "We should probably at least log at https://github.com/mozilla/socorro/blob/master/socorro/lib/ConfigurationManager.py#L275 but I will leave that to a separate issue\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3403192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3437897", "body": "r+ from me\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3437897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3438565", "body": "wfm locally\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3438565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3542266", "body": "Thanks @lonnen for the reminder - here's the merge (haven't retested yet just resolved conflicts)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3542266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3551212", "body": "OK tested in my local VM:\n\n1) pre-patch code does break \"bad\" signature (\"FakeSignature4...\")\n2) patch doesn't break normal signature (\"FakeSignature4\")\n3) patch works with \"bad\" signature (\"FakeSignature4...\")\n\nGood work, thanks!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3551212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3637296", "body": "Hmm possibly, thanks for catching that.. I need to figure out exactly what that is for\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3637296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3640226", "body": "lgtm, this is trivial enough (and the test setup is painful enough) that I think we should just push when bug 701002 goes in, and test on crash-stats-dev\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3640226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3641115", "body": "diff lgtm, works as expected, r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3641115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3641321", "body": "Ah ok so controllers/report.php is needed, it's part of what's causing https://bugzilla.mozilla.org/show_bug.cgi?id=718958#c10\n\nThe other part is that the the users are obviously expecting the build hour to match, but the common model only sends the date back. I'm working on another version of this patch.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3641321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3641601", "body": "OK it's obviously wrong that the SQL is doing date_trunc('day', ...) while further on it's doing gmdate('YmdH', ...)\n\nTBH I don't see why we're truncating the date at all (I guess we don't typically start successive release builds in the same hour, but I don't see why it isn't possible), but anyway this changeset will actually work to hourly resolution.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3641601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3641777", "body": "which bug(s) is this pull request for? please put the bug # in the branch in the future (not a huge deal as long as the bugs are mentioned in the commit messages, ideally there'd be one bug per branch but I know it doesn't always turn out that way)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3641777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3641919", "body": "r+, code looks fine and works fine for me locally, just a few nits. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3641919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3645917", "body": "Hmm hadn't considered that - do we even provide any other auth options that work, besides NoAuth?\n\nThe email feature breaks in the same way FWIW.\n\nI can probably put in a check to see if the NoAuth driver is in use.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3645917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3656760", "body": "Yes I like this approach, thanks!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3656760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3787109", "body": "oops :) thanks!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3787109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/comments/737009", "body": "This part doesn't look right on RTD:\nhttp://socorro.readthedocs.org/en/latest/installation.html#configure-socorro\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/737009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/1599649", "body": "I thought we didn't need this anymore, does something complain?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/1599649/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/5175363", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/5175363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/5580213", "body": "@peterbe yes, we build and ship a virtualenv and point Apache mod_wsgi at it. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/5580213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/5580290", "body": "@peterbe stage has been busted for the last half-week because the vendor libs haven't been working, and nobody noticed until we did a clean build.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/5580290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/331867", "body": "why is this renamed?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/331867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/341351", "body": "You don't really need the () around %end(s), in SQL you can cast just like:\n\nTYPE 'value'\n\nNot important though, works either way.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/341351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/341352", "body": "I should've made this more DRY here but not really your problem :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/341352/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/320793", "body": "Why is there a **main** check here, what is generic_app supposed to do if run directly? Isn't an initial_app required here? This will throw AppDetailMissingError on line 107 otherwise since initial_app defaults to None.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/320793/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/320794", "body": "Why does the comment above say that it isn't necessary to provide the app_name while the code below provides the app_name ? :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/320794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/320807", "body": "Shouldn't this be \"socorro/app/example_app.py --help\"?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/320807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/320811", "body": "Hmm so it looks like part of the initialization is setting up logging, I am confused as to why I see things like \"--syslog_host\" in the \"example_app.py --help\" output when this super() is commented out. Isn't that option added in generic_app.logging_required() ? \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/320811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/382049", "body": "these could stand to be indented :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/382049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/382056", "body": "Agreed with above, also ','.join() is pretty idiomatic, would not bother with \"glue = ','\" unless you expected it to change or something.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/382056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/398608", "body": "We should really make this part of \"make test\", but I think it's useful to call out here (since you can run check.py without postgres etc. required for unit tests to work).\n\nTotally agree on the todo - I can suggest jshint for js, not sure about html/css and there are several for php.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/398608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/398622", "body": "\"make test\" does all of this for you, and installs all the deps you need, might suggest this instead.\n\nMight want to mention here that you need a running postgres server for this to work, with the user/db/pass in socorro/unittest/config/commonconfig.py\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/398622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/453864", "body": "--install-lib causes it go right into $(ABS_PREFIX)/application/configman instead of $(ABS_PREFIX)/application/lib/python/site-packages/configman\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/453864/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "adngdb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2047647", "body": "This pull request would erase changes made by rhelmer earlier today. Canceled. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2047647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2620530", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2620530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2624232", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2624232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2635092", "body": "After you fix the config problem, it's a r+. I believe it hit every possible link in the webapp without trouble. And automated tests will tell us quickly if I missed something.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2635092/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2666678", "body": "r+. Will merge as soon as I'm sure I can. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2666678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2764910", "body": "Okay, I made a few changes following your advices. Please read the last commit to see what changed recently!\n\nlonnen can you r? and test please? Only search (/query) is impacted. \n\nrhelmer, lars and peterbe could you please read and approve/disapprove my code?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2764910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2778115", "body": "And here we go once again! \n\nPeter I believe I fixed everything you suggested. Thank you very much for your comments, I learned a lot!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2778115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2832875", "body": "I know about elasticutils and chose not to use it because I needed control over my complex query and I was unsure I could do everything I wanted with that tool. \n\nNow I agree we may want to switch to that, will make the code better. I'll file a bug. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2832875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2710841", "body": "Why are those SQL queries in the webapp? I'd rather have them as an old style service in the middleware, it will be easier to switch to the new model afterward... \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2710841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2764910", "body": "Okay, I made a few changes following your advices. Please read the last commit to see what changed recently!\n\nlonnen can you r? and test please? Only search (/query) is impacted. \n\nrhelmer, lars and peterbe could you please read and approve/disapprove my code?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2764910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2778115", "body": "And here we go once again! \n\nPeter I believe I fixed everything you suggested. Thank you very much for your comments, I learned a lot!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2778115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2780259", "body": "You forgot to modify line 34 of file `.../wepapp-php/application/models/platform.php`. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2780259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2782221", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2782221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2832875", "body": "I know about elasticutils and chose not to use it because I needed control over my complex query and I was unsure I could do everything I wanted with that tool. \n\nNow I agree we may want to switch to that, will make the code better. I'll file a bug. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2832875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2838675", "body": "It looks way better now, great work!\n\nI'll wait for your answer to my little question before I r+ and merge. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2838675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2866934", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2866934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2867129", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2867129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3055142", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3055142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3085765", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3085765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3085886", "body": "What's up with this pull request? It's been here for almost a month, any update?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3085886/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3163920", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3163920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3180993", "body": "I can find at least one example where the expand appears but is useless: http://crash-stats/report/index/4ed8326b-b549-408f-8558-028ec2111209 . It does something, but it's useless: the reduced size is the same as the expanded one. It may be out of scope, in which case I'll just r+ this. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3180993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3182642", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3182642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3203079", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3203079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3313458", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3313458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3370544", "body": "Oh damn! That's stupid! Well then I guess what you suggested is totally worth it. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3370544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3371558", "body": "Ok, this is breaking search because of comparison between offset-naive and offset-aware datetimes. I can write a simple fix for this problem, but if we are going to add a utc_now() function then I'd like to wait for it as I intend to use it. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3371558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3373086", "body": "I agree on the r+, search will be broken on dev but I'll publish a fix very soon. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3373086/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3387159", "body": "Removed lines from search.py were useless. I already do that conversion in `socorro.lib.search_common.py`. I just cleaned this while I was at it! :)\n\nWill remove the unneeded datetime import before merging. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3387159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3387508", "body": "Unit tests for those files run, and code looks good. \n\nr+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3387508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3390338", "body": "r+ as soon as the missing `tz` is added. Unit tests pass in my VM. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3390338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3391972", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3391972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3428691", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3428691/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3431503", "body": "@Lonnen This pull request can now be automatically merged. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3431503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3514506", "body": "Master is ready to receive this, I guess? Chris, is it an r+ from you? \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3514506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3545976", "body": "I was thinking of making search `/crashes/signatures` as that's what search really is in terms of aggregation. And TCBS is not only signatures but signatures + ranks + ranking movements... Does it sound reasonable, or should we name search something else?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3545976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3554568", "body": "That's about it for my comments so far! Good job for a first service, and thanks for your questions, I'll use them to make documentation better. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3554568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3613593", "body": "This part of report/list is not coherent with the rest as it does not provide any way to specify a date range. It always assumes that report/list goes from X days ago to now. This leads to inconsistencies when looking for data from a week ago, as the \"Reports\" tab will show more results than the \"Summary\" tab do. \n\nPlease add `from_date` and `to_date` parameters to the middleware service, and make use of them in your SQL query! :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3613593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3631543", "body": "@peterbe I fixed everything you raised. About the tests, there is none so far. I have a plan to create a good and easy way to test the entire middleware, but had no time to work on it yet. \n\nI'll do my best this afternoon to add as much unit tests as I can. \n\nAbout SQLAlchemy, so far we've been using psycopg2 everywhere and I don't know if it's worth switching. I never used SQLAlchemy so I can't really have an opinion for the moment. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3631543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3631785", "body": "@ossreleasefeed I fixed all the typos you raised. Thank you for your review! If you my answers to your suggestions are convincing enough, could you please merge?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3631785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3659489", "body": "I just updated this. I made 2 new commits so you can clearly see what I changed. Also, I filed a bug to add more unit tests: https://bugzilla.mozilla.org/show_bug.cgi?id=721187\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3659489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3766566", "body": "@peterbe \nI understand your point about consistency and will make everything use `unittest` fully.  `check.py` doesn't raise any error on those files (unless I missed something). \n\nTest coverage is close to 100% on concerned functions / methods. Which means that I have code for all functions I can test without needing a running DB with data. However I don't think I cover 100% cases, I'm pretty sure there are some edge cases I missed. I am particularly thinking of the build_report_sql_where() method which is long and complex, and it would take at least 3 times more code to test it entirely. I tried to test as many different common cases as possible though. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3766566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3769077", "body": "Just updated this pull request to make everything consistent, and fixed the ugly import. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3769077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3837945", "body": "Testing in my VM I get the following error:\n\n<pre>\n[Mon Feb 06 14:02:47 2012] [error] [client 127.0.1.1] ERROR trace back follows:\n[Mon Feb 06 14:02:47 2012] [error] [client 127.0.1.1] ERROR Traceback (most recent call last):\n[Mon Feb 06 14:02:47 2012] [error] [client 127.0.1.1] ERROR File \"/data/socorro/application/socorro/webapi/webapiService.py\", line 60, in GET\n[Mon Feb 06 14:02:47 2012] [error] [client 127.0.1.1]     result = self.get(*args)\n[Mon Feb 06 14:02:47 2012] [error] [client 127.0.1.1] ERROR File \"/data/socorro/application/socorro/middleware/signature_summary_service.py\", line 19, in get\n[Mon Feb 06 14:02:47 2012] [error] [client 127.0.1.1]     return impl.get(**params)\n[Mon Feb 06 14:02:47 2012] [error] [client 127.0.1.1] ERROR File \"/data/socorro/application/socorro/external/postgresql/signature_summary.py\", line 138, in get\n[Mon Feb 06 14:02:47 2012] [error] [client 127.0.1.1]     for row in sql_results:\n[Mon Feb 06 14:02:47 2012] [error] [client 127.0.1.1] ERROR File \"/data/socorro/application/socorro/database/database.py\", line 87, in execute\n[Mon Feb 06 14:02:47 2012] [error] [client 127.0.1.1]     aCursor.execute(sql, parameters)\n[Mon Feb 06 14:02:47 2012] [error] [client 127.0.1.1] ERROR ProgrammingError: column \"architecture\" does not exist\n[Mon Feb 06 14:02:47 2012] [error] [client 127.0.1.1] LINE 1: WITH counts AS ( SELECT  architecture  as category, count(*)...\n</pre>\n\n\nDo I miss some SQL update?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3837945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3850244", "body": "r+, tested with devdb. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3850244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/comments/783790", "body": "Just fixed this. Thanks! \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/783790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/1599735", "body": "My VM did. Is it because I missed something that you recently added in vagrant? \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/1599735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/11499352", "body": "It looks good now, how about opening a pull request? :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/11499352/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/18653655", "body": "I don't think we do. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/18653655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/19654131", "body": "Yep, what Peter shows is what we do everywhere else in Socorro. Please follow that pattern! :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/19654131/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219557", "body": "Is \"Common\" not enough? That base class is common to all ElasticSearch implementations. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219557/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219616", "body": "Is `not array` even better?\n\nAnd btw what is the difference between \"is\" and \"==\"?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219623", "body": "Nope, I made quite a lot of research on that point, and Python's MRO system implies that only the first **init** method in the list will be called. \n\nCf. http://fuhm.net/super-harmful/\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219623/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219630", "body": "Is Socorro using the UTC timezone? I remember this was discussed recently but don't remember the answer... \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/221684", "body": "Thank you Lars, I feel stupid for not having tried something like that... Happy we can stay consistent and keep using super()!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/221684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/227427", "body": "I don't want that exception to be raised because I'm trying here to find a module I can load. There will be an exception raised if no module can be found. See function get_module() in the same file. \n\nThis function here is supposed to be \"protected\" and used only inside the DataAPIService class. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/227427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/243468", "body": "Fixed.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/243468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/244630", "body": "Mmm... I thought I changed that already... Fixed anyway. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/244630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/248966", "body": "That's done, but with debug logging it's not much visible. Didn't change the code much though, even if it's slightly better now. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/248966/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/300133", "body": "Why is that declared as a variable and not simply as a function? Like:\n`function addExpand(sigColumn) {`\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/300133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/329550", "body": "This is actually great for what I do in the middleware, it allows more formats in URL args and makes it more user-friendly. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/329550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/332948", "body": "Not sure but I think the goal here is to transform `end_date` so that it is the end of the day and not any time in the day. Which would explain the `, 23, 59, 59`. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/332948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/333588", "body": "You forgot one `tz` on this line. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/333588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/333828", "body": "Not that it really matters, but there's an indentation problem here. Also, using simple quotes instead of double quotes is still better in PHP. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/333828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/333961", "body": "This is never used in the file. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/333961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/334009", "body": "Importing utc_now here is useless. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/334009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/334025", "body": "These 3 imports are not used in the file. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/334025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/334036", "body": "No need for utc_now.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/334036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/327520", "body": "How will we specify the value_sources for each different app? \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/327520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/379452", "body": "Nah, I don't think it makes sense as those are configurable values. But I'll add something about the config key being used. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/379452/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/379455", "body": "I actually don't want people to do that! :D\n\nThe next evolution of middleware will allow mandatory parameters but in an other way, closer to what you did by checking if the `signature` argument had a value or not in your recent service. \n\nI'm leaving that comment though because I want people to know that it is possible to change the URI if needed. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/379455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/364989", "body": "There's a `_service` missing at the end of the imported module name. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/364989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/365002", "body": "`\"int\"` instead of `\"integer\"` here and the line bellow. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/365002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/365025", "body": "Oh dear God! Lars could kill you for using `+` for concatenation in Python! \n\nMore seriously, as Lars taught me, concatenating using + is pretty slow, you should use Python string formatting, or maybe more more appropriately in this case, join(). \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/365025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/365047", "body": "I think what you return here is not what you think, you do not return a dictionary but a simple, flat list of lists. I suggest that you make a bit more of formatting on your result so it has more sense. \n\nConsider looking at what I did at the end of products_builds.py in the same directory for example.\n\nAlso, maybe you already know but `logger.debug(stuff)` will output to `/var/log/debug` and is pretty handy for debugging! :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/365047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/367489", "body": "That's something I need to fix in my own files: you'd better not use `as` if you can avoid it, and use `from ... import` instead. \n\n`from socorro.lib import external_common`\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/367489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/367499", "body": "Use `[\"list\", \"str\"]` here instead of just `\"list\"` as you want a list of strings. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/367499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/368288", "body": "Weird. Why don't you just put that `%` at the end of the previous line? \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/368288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/368296", "body": "<pre>\n            version_search = (' AND reports_clean.product_version_id IN (%s)' %\n                              glue.join(params['versions'])\n</pre>\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/368296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/375897", "body": "Why is there a SQL query here? The goal of all this is to remove them and move them to the middleware. Should that be a service instead? \n\nI'll be OK to accept this into master, but I'd like to have a new bug to move that piece of SQL to the middleware first, please. :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/375897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/375902", "body": "When calling a URL with only a signature, i.e. `http://crash-stats/report/list?signature=nsThread%3A%3AProcessNextEvent%28int%2C%20int*%29` I get the following error: \n\n<pre>error: [5xx Error] File: application/views/report/do_list.php; Line: 14; Message: Undefined offset: 0</pre>\n\n\nPlease make sure no parameter other than `signature` is mandatory as I know users do call report/list without parameters but the signature.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/375902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/379300", "body": "That conflict doesn't seem to be fully solved... :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/379300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/379797", "body": "This makes no sense. That date should be computed from GET parameters like `date=01-24-2012 02:39:48&range_value=1&range_unit=weeks` instead. I know `do_list()` does it, maybe you can use the same variable or at least the same code?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/379797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/384509", "body": "Good catch. I took that from configman without thinking that `param` could be something other than a string here. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/384509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/390254", "body": "Ok, I was wondering about that. So far my way of using configman was this one, but I'll change it if we won't do that in the future. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/390254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/391419", "body": "Added a line about that.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/391419/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/391421", "body": "Yes, indeed, that is better and simpler. Thanks! \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/391421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/399545", "body": "I added JSHint for JS, the W3C tools for CSS and HTML and just a note to say there are tools for PHP. We can improve this later. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/399545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/399556", "body": "Done. Thanks for reviewing! :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/399556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/407759", "body": "Because I was lazy and took this from someone else? ^^\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/407759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/429823", "body": "I would say this is better in `platforms.php-dist`. That platform file is ugly, adding some cleaner ways of handling platforms wouldn't be a bad thing. Also, this is not only related to TCBS, any other report could use that config key. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/429823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/429941", "body": "Mmm... I don't really like this hard coding of platforms... Can you not use the platforms config file a bit more to do this? \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/429941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/429995", "body": "What is that 3 limit for? You don't want to display more than 3 bugs? \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/429995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/529248", "body": "Yes, it's not the first time that I find myself adding it. Having it in by default will make debugging a lot easier. And it's useful information, that url can tell a lot about what's happening in the webapp. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/529248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/524435", "body": "There a parenthesis that is not closed here. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/524435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/527706", "body": "Please don't do that for all fields, but only specific fields that we know can contain a slash. The problem is that we decode those double encoded slashes on the middleware only for some fields (signatures only at the moment). This should be unneeded here. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/527706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/527715", "body": "Just a question out of curiosity: why are we using `$my_array->{'my_attr'}` instead of `$my_array->my_attr` in cases where the later is possible? I read that the former is for accessing attributes at runtime, so it would useful when you want to access an attribute which name is in a variable. But when the attribute name is known, why don't we stay consistent and use the classic way of accessing attributes?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/527715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/527727", "body": "Oh good, I have an occasion to raise this problem: this file is a controller, and controllers should not care about retrieving data. That is the role of models. So everything that is related to a middleware service should not be here but in the topcrasher model.\n\nMaybe not in the scope of this bug, but I needed to tell you that. I was kind of lost when I last looked for this code for debugging purpose. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/527727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/527731", "body": "It may sound stupid, but we're trying to remove all line-ending white spaces. Lonnen and I for example use software that automatically remove them, so if we end up editing a file full of ending white spaces, it can become a pain... \n\nAlso, please make sure you use white spaces instead of tabulations for indentation. Most code editors have options to automatically replace tabs with spaces. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/527731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/527769", "body": "A bit of background: there is a security option in Apache that makes it refuse encoded slashes in URLs. rhelmer and I tried to understand why it is there and couldn't find much. We decided that there must be a good reason for this to be activated by default, and chose to double-encode slashes in fields that we know can contain some. That only means signatures, as I don't think any other field needs a slash. If we end up with a similar problem for an other field, we'll either consider turning that Apache option off, or adding a special case for that field. But we're not dealing with it until it happens, basically. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/527769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/528046", "body": "Here you're using variables that you deleted just before. You need to change `$p`, `$v` and `$pg`. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/528046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/530100", "body": "Here, should be `$params['duration'] = ...`\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/530100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/533539", "body": "There are white spaces at end of lines and tabulations in this file. Please remove/replace them. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/533539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/533599", "body": "Another few tabulations and line-ending white spaces around here. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/533599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/533641", "body": "There are spaces at the end of the following 4 lines. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/533641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/533688", "body": "`error: [5xx Error] File: application/views/report/index.php; Line: 238; Message: Undefined variable: current_product_bug_url`\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/533688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/533557", "body": "`veritcal`? :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/533557/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/533560", "body": "I'm fan of having css properties sorted by alphabetical order. Why did you move it here instead of leaving it where it was?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/533560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/533682", "body": "Yes, but `veritcal`? :D\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/533682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/533684", "body": "Ok, fine by me. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/533684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/558399", "body": "Python's `str(my_datetime)` doesn't put a T here, so why should I? :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/558399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/558465", "body": "Heh, that was just a debugging log, it shouldn't be there anymore... \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/558465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/560969", "body": "I updated this part. What do you think of using `else:` here? Is it a good thing or overkill? As this part of the code is common to most PostgreSQL-related functions, I'd like to find the very best way to write this. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/560969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/560980", "body": "I made a change there, and used the `datetimeutil.date_to_string` function that I changed a bit to fully respect ISO 8601. It's ugly but it's the best I can do, I think. Python's `datetime.strftime` functions are useless, and `isodate` doesn't seem to do a better job with timezones. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/560980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "peterbe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2228728", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2228728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2609771", "body": "R+ \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2609771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2687859", "body": "As a general note, the code is using far too many staticmethods. Is the only reason grouping by name (i.e. the class name)? Class methods that don't actually use \"self.\" inside of them don't really belong to the class. However, I think of exceptions. Consider moving pure python functions into a little utils.py or something similar. Getting rid of that standard python stuff out of the classes will make the classes shorter and easier to read. You can then also develop unit tests just for the utility functions on its own. \n\nI'm attacking this from a purely python line-by-line point of view. I would put an r(-|+) if I knew what the code actually achieves. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2687859/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2752426", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2752426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3025398", "body": "Landed in master \nhttps://github.com/mozilla/socorro/commit/04829bf6e8623eaf50ba74b8c74a2645bcae81e3\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3025398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3362624", "body": "Note-to-self: @rhelmer r+'ed the dependency change in irc. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3362624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3377791", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3377791/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3386991", "body": "Looks good to me!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3386991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3387129", "body": "r+\n\nDon't really understand the removal in search.py but the lines individually all look good. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3387129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3388095", "body": "r+ \n\nbut it feels a bit rushed. Some PEP8 is lost in the addition of `,tzinfo=UTC` (as opposed to `, tzinfo=UTC`) but there's a LOT more PEP8 to be done anyway. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3388095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3388101", "body": "Also, it's hard from a pull request to see what you potentially missed since the diff only shows what you changed. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3388101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3391750", "body": "Clicking the Diff tab does interesting things to my whole computer. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3391750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3551476", "body": "@twobraids Actually, I'm not particularly liking the infinite nature of the TransactionExecutorWithBackoff. I'd rather we do something like 2, 4, 6, 10, 15, raise error. Otherwise, if it takes more than 2+4+6+10+15 seconds, it's very unlikely to be a temporary problem and if it still is, there's a risk that too many of these parallel sleeps is clogging up. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3551476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3557440", "body": "Landed https://github.com/mozilla/socorro/commit/f5d2bb56f7e2b18be77b87295315cce7ec775b71\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3557440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3620084", "body": "Line-by-line it looks great. I think. In a sense I don't care about the sql_param_foo and param_list_bar. I just assume it works. \n\nMore importantly: where are the tests? If the test coverage (unit or integration or even better: both) I'd just believe the code is good. \n\nAlso, would you consider replacing all the SQL noise with SQLAlchemy? \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3620084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3674683", "body": "r+ but with a couple of nits. I think the argument against un-user-friendly code. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3674683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3690148", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3690148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3696590", "body": "Landed https://github.com/mozilla/socorro/commit/f0ee79ed7aee29c3d2148971c2dd1f12f1d6b087\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3696590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3696811", "body": "This code has been rebased and committed into master\nhttps://github.com/mozilla/socorro/commit/def1a68d194c66f95c21e41971f3d549ae874040\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3696811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3765373", "body": "r- but it hurts to say that. \n\nI see that you _are_ using `self.assertTrue` later so the points about using `assert` wasn't really needed. \nWhat I would like to see is consistency. And for that I'd prefer 100% unittest methods.\n\nThe actual tests look great otherwise! I like your method names. Agruably sometimes, if the name is obvious you don't need to put in a doc string that just overstates the obvious. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3765373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3765388", "body": "Also, I could be wrong but there seems to be cases where pyflake would find some unused variables. \n\nHave you got a non-complaining check.py on all of this?\n\nAlso, what's your test coverage at the moment over the relevant code?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3765388/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3767111", "body": "Awe. Some! I like it!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3767111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3770126", "body": "r+ but maybe someone who actually understands the purpose of the tests, i.e. the business logic, should also take a look. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3770126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3783218", "body": "This is awesome @xni !\nThe code changes look good but I can't officially approve it because I'm not owning the code or the functionality and I wouldn't really know how to test it properly. The guy who would know is unfortunately sick today and might need a day or two to recover. \nThanks for your work though!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3783218/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/comments/4014833", "body": "Debugging left \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/4014833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/4050386", "body": "Where did you get these? \n\nSee https://github.com/mozilla/socorro/pull/1485\n\nI think `TmPMMyXedc-Y_61AvnL6aXU96CRpUXMXj3TANP5PUmA` is supposed to be for `nose` and `6QTt-5DahBKcBiUs06BfkLTuvBu1uF7pblb_bPaUONU` for `mock`. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/4050386/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/4201043", "body": "It means nothing. The tests aren't actually affected by its actual real content. The tests just makes sure the field is there. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/4201043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/5426019", "body": "Really happy that we're switching to nvd3. It's a great library. \n\nI do think we should use their minified version instead of trying to do it ourselves. For big libraries like that, the minification process is quite different. \nI think django-compressor will notice that it's already minified and thus won't need to be done again. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/5426019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/5426031", "body": "Any particular reason why this is done in the view and not in the template?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/5426031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/5580181", "body": "Are we using this file for anything? If so that's a bug. (not in the far future but for now it is)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/5580181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/5580284", "body": "@rhelmer that's bad. We have `requests` (amongst many other things) in `./webapp-django/vendor` and `./webapp-django/vendor-local`. That's the definitive place to put dependencies. Due to a couple of funfactory lines in `manage.py` it makes sure those two directories trumps anything in the environment. \n\nActually it's quite harmless then. So if you have `requests` version X in the virtualenv (or system python for that matter) and you have `requests` version Y in vendor-local, then django will pick up `requests` version Y.\n\nIt is by far the worse decision every made for playdoh to try to maintain a requirements file when what really matters is the vendor directories. That's why I always wipe it from all but compiled stuff. At least I try to. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/5580284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/8464903", "body": "This is no longer correct. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/8464903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/15885425", "body": "@vishnumohanm Hmm... I wasn't aware of that. We're not using 2.6 any more in production and I don't use Vagrant. \nThe whole point of pipstrap is to make sure you get pip8 installed. If you can comment out the `python tools/pipstrap.py` and replace it with `pip install -U pip`, does the rest of things work?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/15885425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/15925015", "body": "Yeah, entirely dropping it might be a good idea. Because, like you said,\nnobody's using it.\nHowever, Socorro is open source and if you're reasonably good at coding\nVagrant we'd be totally up for some contributions. Meet us on #breakpad on\nirc.mozilla.org and we can chat.\n\nOn Fri, Feb 5, 2016 at 2:48 PM, Vishnu Mohan notifications@github.com\nwrote:\n\n> Yeah, that worked. Thanks. But I noticed that there was a whole bunch of\n> dependency errors I had to work through to make it finally work. When I\n> selecting the Vagrant development option I was expecting a painless\n> experience. But it ended up being worse than setting it up on a fresh linux\n> box. Maybe you guys should get rid of the Vagrant option if no one is\n> updating it.\n> \n> On 4 February 2016 at 18:45, Peter Bengtsson notifications@github.com\n> wrote:\n> \n> > @vishnumohanm https://github.com/vishnumohanm Hmm... I wasn't aware of\n> > that. We're not using 2.6 any more in production and I don't use Vagrant.\n> > The whole point of pipstrap is to make sure you get pip8 installed. If\n> > you\n> > can comment out the python tools/pipstrap.py and replace it with pip\n> > install -U pip, does the rest of things work?\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > <\n> > https://github.com/mozilla/socorro/commit/e376bb92a45e89a5532d14a34c2c5527a48708fd#commitcomment-15885425\n> > \n> > .\n> ## \n> \n> Vishnu Mohan\n> Computer Science and Engineering (2008-2012)\n> Govt. Model Engineering College\n> Cochin-21\n> +919916582948\n> vishnumohanm@gmail.com\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mozilla/socorro/commit/e376bb92a45e89a5532d14a34c2c5527a48708fd#commitcomment-15923328\n> .\n## \n\nPeter Bengtsson\nMozilla Tools & Services\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/15925015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/18609357", "body": "If we call it this we'd need a different function if the date is a future date. \nPerhaps we never have future dates??\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/18609357/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/18609379", "body": "\ud83d\udc4d \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/18609379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/19647599", "body": "The correct style to type something like this is like this:\n\n``` python\nif (\n    'product' in params and\n    'FennecAndroid' in params['product'] and\n    'Firefox' not in params['product']\n):\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/19647599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/19682422", "body": "debug", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/19682422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/19682428", "body": "I still think you ought to move this into the class. It doesn't make sense to have this importable on a module level. ", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/19682428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/19812767", "body": "You probably mean `return null;` since '' is a value. ", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/19812767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/19812979", "body": "\ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/19812979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/22656325", "body": "Shouldn't that have `, exc_info=True)` as a second parameter so we can at least log the traceback. ", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/22656325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/23603087", "body": "\ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/23603087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219360", "body": "this should be \n\n``` python\n\nfor i, element in enumerate(var):\n    var[i] = element.lower()\n```\n\nor even better\n\n```\nvar = [x.lower() for x in var]\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219676", "body": "I guess I'm hinting it should be called \"BaseElasticSearch\" or \"ElasticSearchBase\".\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219695", "body": "`not array` != `is not None`.\nWhat if the value was deliberately set to a blank string. Then it \"becomes\" false but is not None. \n\nReason to use \"is\" over \"==\" is because None doesn't implement comparison in any way. It's just not done. Sorry for the vague explanation. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219714", "body": "Wow! That's so surprising. Well caught. However, the case of inheriting two classes that both needs to be instanciated is quite odd altogether. Class hierarchy is suppose to be quite linear in nature. Like Hut, House, Building. And like Zebra, 4legs, Animal. In a sense it wouldn't make sense to make an overriding class that is a bit of both. \n\nI remember learning that the ultimate trick is to be consistent. Either use super() all the time or use NamedClass.method() all the time. \nWhat bothers me the most is the need to know the names of something more than once.  \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219720", "body": "Generally Socorro is still suffering because it doesn't implement UTC times. If this is a chance to slowly correct it, then take it. In a sense your code is \"wrong\" in using `now()` instead of `utcnow()` and if you really need to use `now()` then explain it so that the next developer doesn't read it and thinks \"hmm... I wonder why they did this odd choice here to use non-utc time\"\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219738", "body": "Arguably, don't use this function then. It's not right to do `lower(MyClass())` for example. \n\nEither stop calling the function if you're variable is something else or let this function be more pure and if, for some bizarre reason, a strange object (that can't be string lowered) is sent in let an error be raised and then trap that in your unit tests. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219750", "body": "this function adds so little that isn't already in python. A code-reader would be able to digest something like this:\n\n``` python\nnames = '--'.join('mr. ' + x for x in my_sequence)\n```\n\n...much faster than he would be if he had to look up what `list_to_string` does, what it does differently and what errors it might raise. \n\nStay pythonic and simple. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219758", "body": "As a general comment, try to start your doc strings with the word \"Return\". E.g.\n\n``` python\n\ndef eat_sequence(foo):\n    \"\"\"return a cloned sequence where all elements' last character is removed.\n\n    Note: will raise an exception if the sequence is of length 0\n    \"\"\"\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219763", "body": "Why is this not an important exception? Surely something is broken if an import doesn't work out. \n\nThe method name isn't \"_attempt_import_gently()\". \n\nAlso the `return False` never gets called on the last line. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/221745", "body": "Mixins is a very different issue. Mixins don't exist on their own so they never have an `__init__` method. It makes sense to have a \"linear hierarchy\" of Hut, House, Building, and a Handyman mixin added. \n\nThe non-standard but common practice is to name mixin class by appending \"Mixin\" to the class name. E.g. \"TwitterAuthMixin\"\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/221745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/221774", "body": "BTW, it's not unlikely that the authors of the base classes Adrian is mixing (no pun intended) haven't bothered to propagate the `__init__` to the super classes. Consider this:\n\n``` python\nclass A(object):\n  def __init__(self):\n     print \"A\"\n\nclass B(object):\n  def __init__(self):\n     print \"B\"\n\nclass C(A, B):\n  def __init__(self):\n    super(C, self).__init__()\n    print \"C\"\n\nc = C()\n\n# output\nA\nC \n```\n\nWhat I think I would ideally like to see is \n\na) a re-think about the use of inheritance. I.e. Am I mixing (again, no pun intended) classes that don't belong together? Can I use a Mixin pattern and if so name the classes with \"Mixin\" suffix. Are my classes too big?\n\nb) Use super() everywhere and if for some unusual reason I need to reach other to other classes that aren't the first inherited class do something like this:\n\n``` python\nclass A(object):\n  def __init__(self):\n     print \"A\"\n\nclass B(object):\n  def __init__(self):\n     print \"B\"\n\nclass C(A, B):\n  def __init__(self):\n    super(C, self).__init__()\n    # here I document why I'm doing this rather weird class dance\n    B.__init__(self)\n    print \"C\"\n\nc = C()\n\n# output\nA\nB\nC \n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/221774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/316993", "body": "looks correct. I did the same in my first attempt of the weekly partitions topic-branch\nhttps://github.com/peterbe/socorro/commit/de9c3ed99961ad7298726d659a1834f2a320f89e\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/316993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317023", "body": "We should avoid the `as` trick more. \"config_manager\" is easier to read than \"cm\". The `as` should be used when there's potential name clash or in extreme circumstances, when you need to save line width space. \n\nI think this should become:\n\n``` python\nfrom configman import Namespace\nfrom configman.config_manager import RequiredConfig\n```\n\nArguably, perhaps we should change configman's project **init** so we can do:\n\n```\nfrom configman import Namespace, RequiredConfig\n```\n\nsince that appears to be the two most common things to get out of configman. \n\n```\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317032", "body": "Again, maybe this is a matter of configman rather than socorro but ... I've already specified the name of the app. It's called \"ExampleApp\" (i.e. the class name).\n\nconfigman should be able to help you avoid having to type and maintain the app name more than once. Do you envision problems with name clashes?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317110", "body": "I'd like this moved outside that if block. The import should work on import time (as opposed to run time). If that import is only going to work in run time then we should put a comment to explain that. \n\nBy having imports on import time, it's a better safe guard against anything broken with your paths before you start running things. The only reason for putting imports inside functions or blocks (i.e. run time) is to avoid circular- or conditional imports. Neither is applicable here. \n\nCan we change it to:\n\n``` python\nfrom socorro.app import generic_app\n...\nif __name__ == '__main__':\n    generic_app.main(ExampleApp)\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317111", "body": "`from configman import converters`\n\n\"conv\" means less than \"converters\" and there's plenty of space :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317126", "body": "This should be:\n\n``` python\n\n   lc.add_option('syslog_error_logging_level',\n             doc='logging level for the log file from logging '\n                 '(DEBUG, INFO, WARNING, ERROR or CRITICAL)',\n             default=logging.ERROR)\n```\n\nWe don't want to expose those numbers and just stick to the constants. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317131", "body": "``` python\n   lc.add_option('stderr_error_logging_level',\n             doc='logging level to stderr from logging '\n                 '(DEBUG, INFO, WARNING, ERROR or CRITICAL)',\n             default=logging.DEBUG)\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317131/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317134", "body": "remove. No one is expecting a return value. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317138", "body": "We _could_ change this to:\n\n``` python\nif __name__ == '__main__':\n    import sys\n    sys.exit(main())\n```\n\nbut then every app would need to be prepared to return an error code and I don't think we really need that at the moment. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317183", "body": "If you're not going to use `local_unused` and `args_unused` I think the function signature should be:\n\n```\ndef setup_logger(app_name, config, *args, **kwargs):\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317270", "body": "Somehow I don't like this. First of all, RequiredConfig doesn't even have an `__init__` defined (might do in the future maybe). Secondly, why does the app even need to be instantiated? The user of the generic_app (i.e. the author of a cron script app for example) only really cares about the `main()` method. Instantiating is a private business of the generic_app and should be abstracted away. \n\nI suggest we simply do this diff:\n\n``` diff\n-    def __init__(self, config):\n-        super(ExampleApp, self).__init__()\n-        self.config = config\n-\n\n-    def main(self):\n+    def main(self, config):\n```\n\nIt just feels better that config doesn't get set. The purpose of setting instance attributes is for some sort of persistency. The idea with generic_app is that the main() method is run once and then exits. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317271", "body": "As per my suggestion above about removing the `__init__` method and letting the `main()` method get a config as first parameter, then this would need to change to:\n\n``` python\napp_object()(config)\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317272", "body": "r- on \"unknown\". That's not the name of the app. If the name isn't important, just make it `None`. If it is important then expect it to be there with `app_object.app_name`. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317278", "body": "Again, if it's not important make it `None` or an empty string. \n\nAlso, what if `app_object` is `None`. After all, the app_object is reassigned inside the with block. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317281", "body": "There's something strange about how app_object is reassigned and it confuses me. The optional app_object sent into this function; is that just a teaser so that the app_name and stuff can be pre-extracted before the real application is configured and created (from the factory). \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317283", "body": "``` python\nelse:\n    raise NotImplementedError(type(app_object))\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317295", "body": "Damn it! You're right. You mean that sooner or later they're going to have to learn the numbers instead of relying on the constants. E.g. when editing the .ini file. \n\nStill though, isn't this going to come up many times? Also, if we write a from_string_converter, it could be as easy as:\n\n``` python\ndef loglevel_converter(value):\n    if not isinstance(value, int):\n        return {'ERROR': logging.ERROR,\n                    ...\n                   }.get(value)\n    assert isinstance(value, int)\n    return value\n...  \n   lc.add_option('syslog_error_logging_level',\n             doc='logging level for the log file from logging '\n                 '(DEBUG, INFO, WARNING, ERROR or CRITICAL)',\n             default=logging.ERROR,\n             from_string_converter=loglevel_converter)\n```\n\nWhat do you think? After all, these numbers are very python logging specific and it would be great to avoid exposing them. Typing \"WARNING\" instead of \"30\" in a .ini file feels so much more robust. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/318750", "body": "Pragmatically, the `__init__` boilerplate looks the same for every copy of the sampleapp. So we shouldn't add the noise. \n\nHowever, you envision that maybe there will an app that that gets instantiated once and its `main()` called repeatedly? Looking at the list of if statements in generic_app, it would some how feel unfair or unbalanced to treat modules differently. \n\nAlso, you could always do something like this:\n\n``` python\n    def main(self, config):\n        self.config = config\n        self._do_something()\n```\n\nI guess what I'm objecting to is:\n- the amount of boilerplate noise\n- that you can do `self.config = config` within `main()` if you like to\n- there are 2 (1 too many) points where generic_app touches the ExampleApp\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/318750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/318755", "body": "@classproperty? what would that be?\n\nIf the class name is called \"ExampleApp\", the filename should become \"exampleapp.ini\" or \"exampleapp.conf\". Another solution would be to name it based on the `__file__`. E.g `myapp.py` --> `myapp.ini`\n\nWhat else is `app_name` used/needed for?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/318755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/318761", "body": "Hmmm... Tricky. I see your point. \n\nWell, can we at least drop the \"_unused\" suffix on the parameter names?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/318761/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/318770", "body": "Then let's just call it `initial_app` and `app`. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/318770/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/319158", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/319158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/319218", "body": "confirmed\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/319218/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/331345", "body": "If you want the 00:00:00 of a date you can do:\n\n```\nself.nowstamp = utc_now().replace(hour=0, minute=0, seconds=0)\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/331345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/332911", "body": "This makes my head hurt. Maybe now's not the time but this code is ugly. I'm assuming that prior to this line, `end_date` is a `datetime.date` instance right? Then what it should be is::\n\n``` python\n\nend_date = datetime.datetime(end_date.year, end_date.month, end_date.day, tzinfo=UTC)\n...\nSOME_DATE < %(end_date)s\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/332911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/332849", "body": "do you still need datetime here? Run check.py on it. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/332849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/333026", "body": "presumably that casting of `TIMESTAMP WITH TIME ZONE ...` was there to convert `end_date` before the comparison operator. Right? So, is this still correct and needed?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/333026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/333037", "body": "Let's try to be consistent whilst we're at it. All other files above seem to do `from socorro.lib.datetimeutil import string_to_datetime` so then this should have that too. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/333037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/333056", "body": "This is the third instance of this monster. Ideally we should avoid the 23:59:59 \"pattern\" and change from \"<=\" to \"<\" and use 00:00:00 instead.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/333056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/333062", "body": "previously this was `%(end_date)s` and not just `%s`. Is that a risk/bug?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/333062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/333070", "body": "Yuck! ...but necessary :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/333070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/377150", "body": "We should aim to not use this style from now on. Just `import datetime .... datetime.timedelta(...)` is the preferred way. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/377150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/377153", "body": "Avoid `as` as much as you can. This line can just become `from socorro.lib import search_common`\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/377153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/377157", "body": "You can delete this if it's not doing anything\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/377157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/377159", "body": "The word \"list\" is a builtin. Avoid if you can. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/377159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/377164", "body": "Don't we have a new function name that returns a timezone aware datetime. Isn't it something like `string_to_datetime`?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/377164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/377177", "body": "Can be deleted\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/377177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/381655", "body": "r- \n\nKnow what error to expect instead. List them. If you accidentally typed `sql_parrams` in there you'd be misled to think there aren't any values when in fact it was just a python typo. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/381655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/381814", "body": "If param is integer `1` then it's not a `bool` and `param.lower()` would fail thus the result would be `param = False`\n\nHow about something like:\n\n``` python\nelif datatype == \"bool\" and not isinstance(param, bool):\n    param = str(param).lower() in (\"true\", \"t\", \"1\", \"y\", \"yes\")\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/381814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/361162", "body": "I like it. Or we could just call it `run(self)`. Then it would be really obvious what it does. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/361162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/364337", "body": "Will this override configman if it is already installed? \n\nIt might cause some confusion to people in that configman is located in the root of the repo (sort of) but that's not the files that are being executed. The installed files (virtually a copy) is what's being installed. \n\nThe alternative solution would be to use `site`. (e.g. `import site; site.addsitedir('../configman')`) with a `.pth` file like the Django playdoh projects do it. I'm inclined to prefer the regular setup.py install instead of it being an imported module. Deserves a healthy discussion. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/364337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/388992", "body": "shouldn't this be:\n\n```\ngit fetch rhelmer my-dev-branch:my-dev-branch\ngit checked my-dev-branch\n```\n\nOtherwise you'll potentially fetch ALL of rhelmer's branches into your tree.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/388992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/388995", "body": "Great!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/388995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/389000", "body": "What I often do is I react to things that aren't obvious. And if it's not obvious what something does a doc string or an inline comment should remedy that. Non-trivial code that isn't document isn't easy to read and understand and should therefore be attacked in the review. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/389000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/389017", "body": "That's not right. Configman shouldn't be inserted like that by python path. It should be installed. \n\nIn an upcoming branch (merged today if all goes well) configman is installed under the \"virtualenv\" section in the Makefile. So you should not need to add configman to the PYTHONPATH. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/389017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/407430", "body": "Generally I suggest you use `self.assertTrue(somevalue)` instead of `assert somevalue, <reason>`.\n\nUsually, maintain the reason string is dead obvious and should better be used to write some exceptional notes if it's ever needed. \n\nAlso, I deliberately make a distinction between `self.assertTrue` and `assert`. For example, when making sure things are set up, use `assert`. When testing actual values, use `self.assertTrue`. For example:\n\n``` python\ndef test_something(self):\n    assert settings.SAVE_DIRECTORY.startswith('/tmp')\n    value = run_something()\n    self.assertEqual(value, 'expected')\n```\n\nWhen it fails, `assertEqual`, `assertTrue`, `assertRaises` prints much more practical messages. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/407430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/407438", "body": "Here's a typical example of what `self.asserEqual` already does for you. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/407438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/407502", "body": "With long names and lost of parameters you can write this like this instead:\n\n```\nversion_where = pgbase.build_reports_sql_version_where(\n    key, \n    versions\n    versions_info,\n    x, \n    sql_params,\n    version_where\n)\n```\n\nIt's easier to read and it means that you don't have to re-mess-about with the indentation if/when you change the name of the function. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/407502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/407506", "body": "\"tutil\"?? why not \"testutil\"? :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/407506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/428549", "body": "This really ought to be configured rather than hardcoded. What will Skype say?\n\nI know I know. This isn't the point right now. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/428549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/450246", "body": "Is there anything we can do to investigate the exception _message_. Perhaps it contains an error code. \n\nI too find it bothersome because ProgrammingError is usually reserved to syntax trouble inside the SQL which deserves a properly raised error. I'm going to investigate instead of guessing. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/450246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/450787", "body": "Hmm.... It's hard to reproduce. However I did find that with the ProgrammingError you _do_ get an errorcode that you can technically do something with. Check this out:\n\n``` python\nimport psycopg2\n\ndef test():\n    conn = psycopg2.connect('dbname=peterbecom')\n    cursor = conn.cursor()\n\n    try:\n        cursor.execute('complete rubbish;')\n    except psycopg2.ProgrammingError, msg:\n        assert msg.pgcode == '42601'\n        assert 'syntax error' in msg.pgerror\n\n    cursor.execute('rollback;')\n\n    try:\n        cursor.execute('select * from doesnotexist')\n    except psycopg2.ProgrammingError, msg:\n        assert msg.pgcode == '42P01'\n        assert 'relation \"doesnotexist\" does not exist' in msg.pgerror\n\ntest()\n```\n\nI was hoping to find a way to start a query (e.g. `select pg_sleep(60);`) and in the middle of it, pull the plug to the database server but I honestly don't know how to restart a postgres server here on my macbook. \n\nLong story short, we ought to dig deeper into these error codes. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/450787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/450807", "body": "Following on about the idea of interrogating the `pgcode` this would/could become:\n\n``` python\nexcept exceptions_eligible_for_retry, msg:\n    if logger:\n       util.reportExceptionAndContinue(logger=logger, error_code=msg.pgcode)  # guessing\n   if msg.pgcode in ('XX123', 'YY414'):\n     # IT's fault\n     database_connection_pool.dump_connection()\n  else:\n    # programmer's fault\n    raise\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/450807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/453810", "body": "Using positional arguments against keyword arguments is generally not a good idea. At the moment, in the signature of the `generate` method, the second (excluding `self`) keyword argument is \"hang_type\" and \"crashed_thread\" the third. That's not predictable enough. When supplying arguments to KEYWORD arguments you should always specify the keywords themselves. The code here should thus become::\n\n``` python\nsignature_notes = self.c_signature_tool.generate(signature_list,\n                                                 hang_type=hang_type,\n                                                 crashed_thread=crashed_thread)\n```\n\nI don't have a direct link to some Guido gospel to back this up but it's something I often see around the interwebs. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/453810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/453671", "body": "I don't actually understand the install-lib thing but I guess it makes sense. Does it go into \"$(ABS_PREFIX)/application/lib/python/site-packages\" or right there in \"$(ABS_PREFIX)/application\"?\n\nI like the use of the section called \"install-submodules\". Makes it obvious where to add the next one. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/453671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219083", "body": "RTD updates immediately if you commit to the master on socorro-docs on github. post-commit hook love\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219092", "body": "If this is a base class, name it so. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219092/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219127", "body": "why isn't this self.get_parameters(...)?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219134", "body": "oh, it's a staticmethod. right?\nStill looking quite odd. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219159", "body": "Why are all of these static methods? Generally using class methods is preferred and if there's a reason to make it a static method, it might deserve a comment in the code that explains 'why'.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219165", "body": "remove and de-dent maybe. Makes for less indentation from hereon. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219281", "body": "use `isinstance(array, list)` instead\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219290", "body": "`array is None` not `array == None`\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219301", "body": "Pretty sure that you can do this by doing:\n\n``` python\nsuper(Search, self).__init__(config)\n```\n\nand it'll run the __init__s of all super classes. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219301/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219317", "body": "why not `utcnow()`? \n\nIf `today()` (aka. `now()`) is a necessary hack, maybe it should be documented with a \"hack warning\" comment. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219360", "body": "this should be \n\n``` python\n\nfor i, element in enumerate(var):\n    var[i] = element.lower()\n```\n\nor even better\n\n```\nvar = [x.lower() for x in var]\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219676", "body": "I guess I'm hinting it should be called \"BaseElasticSearch\" or \"ElasticSearchBase\".\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219695", "body": "`not array` != `is not None`.\nWhat if the value was deliberately set to a blank string. Then it \"becomes\" false but is not None. \n\nReason to use \"is\" over \"==\" is because None doesn't implement comparison in any way. It's just not done. Sorry for the vague explanation. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219714", "body": "Wow! That's so surprising. Well caught. However, the case of inheriting two classes that both needs to be instanciated is quite odd altogether. Class hierarchy is suppose to be quite linear in nature. Like Hut, House, Building. And like Zebra, 4legs, Animal. In a sense it wouldn't make sense to make an overriding class that is a bit of both. \n\nI remember learning that the ultimate trick is to be consistent. Either use super() all the time or use NamedClass.method() all the time. \nWhat bothers me the most is the need to know the names of something more than once.  \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219720", "body": "Generally Socorro is still suffering because it doesn't implement UTC times. If this is a chance to slowly correct it, then take it. In a sense your code is \"wrong\" in using `now()` instead of `utcnow()` and if you really need to use `now()` then explain it so that the next developer doesn't read it and thinks \"hmm... I wonder why they did this odd choice here to use non-utc time\"\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219738", "body": "Arguably, don't use this function then. It's not right to do `lower(MyClass())` for example. \n\nEither stop calling the function if you're variable is something else or let this function be more pure and if, for some bizarre reason, a strange object (that can't be string lowered) is sent in let an error be raised and then trap that in your unit tests. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219750", "body": "this function adds so little that isn't already in python. A code-reader would be able to digest something like this:\n\n``` python\nnames = '--'.join('mr. ' + x for x in my_sequence)\n```\n\n...much faster than he would be if he had to look up what `list_to_string` does, what it does differently and what errors it might raise. \n\nStay pythonic and simple. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219758", "body": "As a general comment, try to start your doc strings with the word \"Return\". E.g.\n\n``` python\n\ndef eat_sequence(foo):\n    \"\"\"return a cloned sequence where all elements' last character is removed.\n\n    Note: will raise an exception if the sequence is of length 0\n    \"\"\"\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219763", "body": "Why is this not an important exception? Surely something is broken if an import doesn't work out. \n\nThe method name isn't \"_attempt_import_gently()\". \n\nAlso the `return False` never gets called on the last line. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/219763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/221745", "body": "Mixins is a very different issue. Mixins don't exist on their own so they never have an `__init__` method. It makes sense to have a \"linear hierarchy\" of Hut, House, Building, and a Handyman mixin added. \n\nThe non-standard but common practice is to name mixin class by appending \"Mixin\" to the class name. E.g. \"TwitterAuthMixin\"\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/221745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/221774", "body": "BTW, it's not unlikely that the authors of the base classes Adrian is mixing (no pun intended) haven't bothered to propagate the `__init__` to the super classes. Consider this:\n\n``` python\nclass A(object):\n  def __init__(self):\n     print \"A\"\n\nclass B(object):\n  def __init__(self):\n     print \"B\"\n\nclass C(A, B):\n  def __init__(self):\n    super(C, self).__init__()\n    print \"C\"\n\nc = C()\n\n# output\nA\nC \n```\n\nWhat I think I would ideally like to see is \n\na) a re-think about the use of inheritance. I.e. Am I mixing (again, no pun intended) classes that don't belong together? Can I use a Mixin pattern and if so name the classes with \"Mixin\" suffix. Are my classes too big?\n\nb) Use super() everywhere and if for some unusual reason I need to reach other to other classes that aren't the first inherited class do something like this:\n\n``` python\nclass A(object):\n  def __init__(self):\n     print \"A\"\n\nclass B(object):\n  def __init__(self):\n     print \"B\"\n\nclass C(A, B):\n  def __init__(self):\n    super(C, self).__init__()\n    # here I document why I'm doing this rather weird class dance\n    B.__init__(self)\n    print \"C\"\n\nc = C()\n\n# output\nA\nB\nC \n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/221774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/231332", "body": "This file needs to be removed and `docs/_build` needs to be added to the socorro's `.gitignore`\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/231332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/231334", "body": "These two paragraphs are now wrong. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/231334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/245520", "body": "Are you sure this will work with ReST?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/245520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/316993", "body": "looks correct. I did the same in my first attempt of the weekly partitions topic-branch\nhttps://github.com/peterbe/socorro/commit/de9c3ed99961ad7298726d659a1834f2a320f89e\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/316993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317023", "body": "We should avoid the `as` trick more. \"config_manager\" is easier to read than \"cm\". The `as` should be used when there's potential name clash or in extreme circumstances, when you need to save line width space. \n\nI think this should become:\n\n``` python\nfrom configman import Namespace\nfrom configman.config_manager import RequiredConfig\n```\n\nArguably, perhaps we should change configman's project **init** so we can do:\n\n```\nfrom configman import Namespace, RequiredConfig\n```\n\nsince that appears to be the two most common things to get out of configman. \n\n```\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/503103", "body": "I genuinely don't understand this! First of all, surely args should be to the right so the extra ones are checked last.\n\nLastly, I think we should change the return codes to a single value: None, True or False. To begin with, there is no loss of information between those 3 and the 3 tuples you already have. \n\nAlso, I'm thinking that instead of return codes should be only for the predicate, not for the action. Instead, for the action, it should either just run or it should raise a ActionError exception.\n\nDjango does that pattern for its HTML Form framework. Every input field has a validator function (either defined or implicit by type) and each validator function returns the value or a ValidationError exception which is wrapped and swallowed by the `myforminstance.validate()` which upon being false sets `myforminstance.errors`.\n\nAlso, tuple return codes are generally more trouble I think.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/503103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/503116", "body": "As per our discussion:\n\n``` python\ndef __eq__(self, another):\n    if isinstance(another, TransformRule):\n         return self.__dict__ == another.__dict__\n    return False\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/503116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/503125", "body": "if `an_iterable` is an iterable, you should be able just iterate on it. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/503125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/503146", "body": "We're not using predicate_result here. Fuel for my argument of making this a single return code function that can potentially raise an ActionError exception. :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/503146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/503159", "body": "debugging?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/503159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/503203", "body": "s/format/format_str\n\nIn fact, let's just call it \"format\" and change the function signature too. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/503203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/503263", "body": "We had the same discussion in the crash storage discussion and it bothered me. \n\nThe prefix is \"json\" here but it's not actually a \"json\" string. It's a dict or something like `collection.Mapping`. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/503263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/503325", "body": "can we change this to \n`from socorro.lib import transform_rules`\nor \n`import socorro.lib.transform_rules as transform_rules`\ninstead?\n\nBecause, as you're reading the code (or debugging) it's easier on the brain to read \"tranform_rules\" than \"tr\". \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/503325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/503336", "body": "r- on this\nThis is exactly what `self.assertEqual` does. \nAlso, \"assert_expected\" is an ambiguous name as it's not obvious what it does from the function name. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/503336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/503348", "body": "Can we replace all \"assert\" with \"self.assertTrue(...)\" instead?\n\nI do sometimes use regular \"assert\" in amongst all the \"self.assertTrue\" statements. It tells the reader that it's not really a _test_; it's more of a pre-condition. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/503348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/503389", "body": "That does the exact same as:\n`r = rule.act()`\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/503389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/557869", "body": "Why doesn't this have a 'T'?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/557869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/557878", "body": "Not needed if you're not going to do anything inside it. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/557878/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/557889", "body": "Perhaps it's a bit late but after having talked to Lars about this, he agrees that it's better to use the logger directly. I.e.:\n\n``` python\nlogger.error(\"Failed to foo and bar\", exc_info=True)\n```\n\nThat does the exact same thing and uses \"pure standard lib\". \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/557889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/557894", "body": "move this to line 52\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/557894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/557897", "body": "is `row[\"date_processed\"]` a datetime instance with time zone information? If so, don't trust the str() method to format the date. Use an explicit strftime format string or one of the built in functions if there is a good one. str() is unpredictable because I think it can apply locale difference based on where the server is located. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/557897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/557937", "body": "r- on the use of the connection. If you have to close the connection you have to do it right (sorry for sounding like a douche bag when saying that). \n\nHow about something like this:\n\n``` python\ndef get(...):\n    ...bla bla...\n    connection = self.database.connection()  # NOTE: don't make it a class instance attribute, just a normal variable\n    try:\n       cur = connection.cursor()\n       ...stuff...\n       return results\n    finally:\n        connection.close()\n```\n\nAlternatively, use contextlib.contextmanager() to create and close the connection. Then it'll look like this:\n\n``` python\ndef get(...):\n    with self.get_connection() as connection:\n        ...blabla...\n        return result\n```\n\nI personally don't mind the which way. The `finally:` pattern is pure and simple. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/557937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/557994", "body": "This isn't a really helpful debug log statement. Can you prefix is with something like `logger.debug(\"Extension: %r\", args[0])`?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/557994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/558035", "body": "Very good!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/558035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/558900", "body": "Scroll down to \"Formats\"\nhttp://www.w3.org/TR/NOTE-datetime\n\nThat's ISO 8601 and according to that the default format is **with** the `T`\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/558900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/558903", "body": "Can we use the `isodate` python module for rendering the datetime instance?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/558903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/560358", "body": "Good! However, it's not a \"BadArgument\". It's \"Missing\". It's never wrong to be explicit. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/560358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/560360", "body": "what's with the `~`?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/560360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/560369", "body": "Not true. If ``params.uuid == ''` this exception won't be raised. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/560369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/560403", "body": "I'm still unhappy about this and I should have voiced it more earlier. \n\nThis file is in external but you're using it as a web service. I know we've been talking about a major refactoring but for now can we make it a bit more right instead? \n1. Instead of calling it `json_result` (because it's not JSON anyway) we call the variable `result`\n2. Instead of swallowing the error, let it raise. This is quite a low level API class and the swallowing should be done \"higher up\". \n\nAlso, does a cursor need to be closed? If so, the other code I reviewed this morning needs to close the cursor too. And if it does need to be closed, that can go wrong and that would mean the `connection.close()` doesn't get called. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/560403/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ghost": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2254092", "body": "DId that, thanks Chris\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2254092/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2254290", "body": "Here is the bugzilla : https://bugzilla.mozilla.org/show_bug.cgi?id=690691\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2254290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2427252", "body": "Sending new pulll request based on lonnen's suggestion above.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2427252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2429152", "body": "Bit of a problem with this pull request. When I sent this request the upgrade to jQuery 1.6.4 was still going to be incremental and hence the latest version was mapped to the jQ variable using noConflict.\n\nAfter a discussion with @lonnen it was decided to just go big or go home and upgrade to 1.6.4. Now, in this pull request I am using the jQ varialbe but, because that no longer exists in the revised pull request for the jQuery update, this is going to cause errors.\n\nBig question, is there any other way then closing this pull request and submitting a new one to resolve this issue? Thanks\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2429152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2432039", "body": "Thanks @lonnen just was not sure if there was a way to get this fixed without having to close and open a new pull request. Will submit a new one soon.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2432039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2432047", "body": "btw, except for the date picker, everything else seems to work without any problems with jQuery 1.6.4\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2432047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2433084", "body": "Hey lonnen, I am going to be looking into that later tonight. Pretty sure there should be an update to that one, if not, we might need to plug in another one that is actively developed and compatible with 1.6.4\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2433084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2435752", "body": "Also fixes bug 695200\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2435752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2485932", "body": "nOOb issues\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2485932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2514178", "body": "Added explicit casting as suggested.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2514178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2742809", "body": "If you are referring to the nowrap removal, this one and the one for the options are not related. I was meaning to ask about the spacing and whether those should be handled as a separate bug focused on fixing that.\n\nSo, you are saying do one commit for the bug fix and then a separate commit for the spacing fix to the same branch?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2742809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2748860", "body": "Pull this one if it makes sense, will add the formatting later\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2748860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2838729", "body": "You can totally wack that Adrian, thanks\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2838729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3202588", "body": "In some cases it is really extremely minor, something as simple as a ) being hidden before expand. There is a follow up bug to improve this in general but, for this particular one, it works as requested.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3202588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "brandonsavage": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2313096", "body": "Overall I think this is a good patch that will do what you want it to do. I've never found pagination to be a particularly easy thing to accomplish in code, even with \"in the box\" solutions. \n\nTypically I'd like to see this in as few commits as possible, rebased down to make the patch easy to revert if the need ever arose. If there's a good reason for multiple patches (sounds like you may have one) then that's fine too. I give you r+ with those comments; let me know when I should merge the request.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2313096/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2379661", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2379661/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2709021", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2709021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2708991", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2708991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3055959", "body": "r+; holding merge until after 2.3.4 branch\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3055959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3316147", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3316147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3622574", "body": "A basic review of the code indicates that this is good work. Observing the branch.php file one asks if some of the functions are potentially redundant, and if there might be a way to reduce the number of functions there; this is something worth exploring in a later release. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3622574/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3641855", "body": "This branch was named what it is because it incorporates fixes to five bugs. It wouldn't have been practical to list them in the branch name.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3641855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3693699", "body": "WRT to this logic, what is the consequence of allowing the \"vs\" variable to be set to the whole string? Would it not be better to simply continue and ignore the passed version, and then 404 if no valid versions were parsed?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3693699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3781333", "body": "r+ from my testing. This looks to work. Merging to master.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3781333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3835108", "body": "adrian, rhelmer: r?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3835108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3838211", "body": "The architecture column exists only on devdb I believe. Not sure if Josh uploaded it to the repo, but you probably need to run his migration script for 2.4.2.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3838211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/377730", "body": "The URI no longer needs the regex it appears.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/377730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/377737", "body": "Is there a bug for moving this into the middleware? I can't seem to find one, don't recall filing one, and it should be moved.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/377737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/393615", "body": "While I don't typically get up in arms about style in PHP, it's considered bad karma to not use { } around an if statement. I'd like to see this on the next line with the brackets, just to be on the safe side.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/393615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/429024", "body": "If $bugs is an array, you should consider using foreach instead. It will reduce the number of calls to count() since the count never changes, and will iterate for you.\n\nforeach($bugs as $bug) {\n    View::factory('common/bug_number')->set('bug', $bug)->render(TRUE);\n    echo ', ';\n}\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/429024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/429026", "body": "Again, foreach is your winner here.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/429026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/529218", "body": "Did you mean to leave this in?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/529218/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "lauraxt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2531791", "body": "Trying to get another commit to show up...going to try a new pr instead\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2531791/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3538103", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3538103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "twobraids": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2698324", "body": "I believe one should always build for inheritance.  By using a class as a container for a set of static methods, you enable overriding those functions through inheritance.  If you move them into a module, you've lost the ability to change behavior without monkey patching or duplicating code.  http://breakpad.pastebin.mozilla.org/1379406\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/2698324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3111511", "body": "r+  from me\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3111511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3170232", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3170232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3287329", "body": "I request a review.  On acceptance, I will rebase these into one commit, and then I'll do the merge myself.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3287329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3304849", "body": "withdrawn.  New one coming soon.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3304849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3304857", "body": "no longer needed as a demo.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3304857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3370462", "body": "@AdrianGaudebert, unfortunately, the 'datetime.datetime.utcnow' function doesn't return a datetime instance with a properly imbued UTC timezone object.  Using the 'utcnow' method would necessitate an additional step:\n\n```\nnaive_utc_now = datetime.datetime.utcnow()\nutc_now = naive_utc_now.replace(tzinfo=somewhere.UTC)\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3370462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3372983", "body": "in this state, I say r+   \n\nwe need to get done by tomorrow.  We can tweak it further later if necessary.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3372983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3387349", "body": "r+  \n\nI traced out your deletions from search.py and was satisfied\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3387349/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3390880", "body": "@rhelmer, I confess I'm a code hoarder and never want to throw anything away.  I'll file a bug for an intervention.\n\ngood point, I'll just kill those files and call it done.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3390880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3391702", "body": "My name is K Lars Lohn and I approve of this merge.  r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3391702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3393111", "body": "r+ from me\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3393111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3402617", "body": "r-  \n\nBecause None is not a type, I don't think that test can work:\n\n```\n>>> n = None\n>>> isinstance(n, None)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: isinstance() arg 2 must be a class, type, or tuple of classes and types\n```\n\nI think the proper code would be:\n\n```\nif date is None:\n    return None\n...\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3402617/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3432974", "body": "@rhelmer, in reading the bug, it looks like they're wanting two additions to the list, but they spend most of the time discussing only the second one.  See comment #0 it the bug.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3432974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3433436", "body": "r+  it works\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3433436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3464491", "body": "rebased and merged\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3464491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3517727", "body": "see http://lars.pastebin.mozilla.org/1451255 for my take on how to write the unit test.  \n\nIsn't this more of an integration test than a unit test?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3517727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3554396", "body": "the backoff being infinite is a necessary.  It is a system requirement that Socorro apps recover without IT intervention from even a protracted outage.   The processor and crash-mover both already have this infinite retry feature.  Sometimes the processor doesn't recover on its own and that's a thorn in the side of IT.  They want it fixed so that Socorro recovers on its own without their prompting.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3554396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3557433", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3557433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3619976", "body": "this pull req is not yet tested.  I'm looking for a jump start on a sanity review since testing is delayed by being stuck on this train.  \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3619976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3696469", "body": "r+\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3696469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3750563", "body": "r+\n\nOpened Bug 722908 for this issue\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3750563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3750602", "body": "Thank you for your contribution to this project.  We'd love to hear how you are using Socorro.  \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3750602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/221612", "body": "not odd to my eyes, I think that static methods should always be called like this.  It shows at the time of invocation that we know and acknowledge that the function call is not dependent on the state of the instance.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/221612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/221653", "body": "\"Python's MRO system implies that only the first init method in the list will be called. \"  That is easily proven incorrect:  http://breakpad.pastebin.mozilla.org/1379403\n\n\"Class hierarchy is suppose to be quite linear in nature.\"  It is supposed to be linear in languages like Java that don't support multiple inheritance.  In C++ as well as Python, multiple inheritance is a perfectly legitimate way to implement mixins.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/221653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/287322", "body": "I'm somewhat concerned that loading only once means that the table could be changed out from under the processor.  The only way to pick up new changes to the ProductIdMap table would be to restart the processor.  We ought to consider either an update thread that reloads the cache every N minutes or a counter that reloads after every X access to the cache.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/287322/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/287394", "body": "laura says the frequency will be very low, as in one or two per year.  At that frequency, updating is not a major issue.  We just need to document that when the table is changed, processors need to be restarted to pickup the change.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/287394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/316459", "body": "I'd really like someone to double check that I've done this right.  Submodules are somewhat enigmatic.  I checked and 4474113c4527dd3965c2a9033af04cbe6ba34591 is indeed the HEAD of configman master branch for version 1.0\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/316459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317187", "body": "we'd have to add more structure to get this to work.  Since logging.ERROR resolves to an integer, the default 'from_string_converter' will be int.  In your suggestion, we're telling the user to use the terms rather than the numbers.  Any term they put in will result in a cannot convert exception because int('WARNING') fails.\n\nTo implement this correctly, we'd have to make a custom 'from_string_converter' function and have a mapping of names to ints.\n\nis it worth the effort?\n\nI jus\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/317187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/318636", "body": "Yeah, I can see that argument, I'm all for DRY.  The 'app_name' is used to create the default basename of generated config files.  Which makes more sense a config file named 'ExampleApp.ini' or 'sample.ini'?    If 'ExampleApp.ini' is acceptable, it wouldn't be difficult to change the generic_app function to fetch the name of the class and use it in place of the 'app_name'.  A more interesting solution would be to create a @classproperty decorator for the definition of 'app_name'.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/318636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/318696", "body": "When originally written, I examined the separation of instantiation/initialization and function.  The ConfigurationManager class itself unifies these concepts. I chose to  keep them separate for apps to allow greater degree of freedom in the future.  These app objects aren't dedicated the exclusive use of the generic_app function.\n\nWhile none of the current stand alone crons benefit from  separate initialization from function, it is likely that we'll have a cron_manager_app in the future.  That app would initialize a flock of crons that it is responsible for and then, perhaps, run them multiple times over hours or days.  Again, the first of these Socorro crons are pretty simple minded and do very little in their constructors, but it may not always be that way.   I'd like them to be able to initialize (allocate data, instantiate thread pools) just once in preparation to being run many times.  \n\nBy keeping initialization separate from function, we allow the app classes to be used in different contexts than just the generic_app system.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/318696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/318705", "body": "I have no objection and rather like the idea.  \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/318705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/318717", "body": "it seems like a bad idea to hide the parameters that way.  This a function of the style required by Aggregates.  This function type will always have a three argument signature.  That signature alone should give the programmer a hint that this function of a special template style.  The form lets future programmers know that they could use these parameters if they had a need.  I guess you could say that it is self documenting.  If that detail is hidden, then an additional comment ought to explain.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/318717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/318735", "body": "yep, that is confusing.  I'm also not enamored of the name 'app_object'.  It's really an 'app_class', well, except when it is a function or module, so, 'app_type' should work better. I'm also going to separate it into two vars to avoid the reassignment.  I'll have 'initial_app_type' and 'app_type'.   \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/318735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/318744", "body": "this is addressed by https://github.com/mozilla/configman/pull/16\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/318744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/318799", "body": "btw, if you really don't like the way the app class works, you could just keep your app in its original form (a 'run' function accepting just a config object).  Just pass your function to the generic_app class instead of an app_class.  However, you must remember to tag your function with 'app_name', 'app_version' and 'app_description'.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/318799/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/319147", "body": "Derived classes, if they don't need more initialization, don't need to implement a constructor.  \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/319147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/319162", "body": "now instead of deriving from RequiredConfig, we derive from a much more understandable \"App\".  This base class implements the saving of the config object in its constructor.  \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/319162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/332612", "body": "PyFlakes pointed out that there were two tests with the same name.  I renamed one of them to ensure that both were being run\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/332612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/332885", "body": "oops - overzealous global replace  -- fix coming\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/332885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/332977", "body": "this is not the time to make aesthetic changes. I'm not going to speculate as to why the original programmer made this odd looking choice.  peterbe, the entire email campaign system could use a make over if not wholesale rewrite.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/332977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/333075", "body": "the cast is to ensure that the exact type matches the partitioning check constraint for the reports table.  If the type doesn't match perfectly, Postgres can't optimize the query effectively.  Note that the substitution var has quotes around it.  That means we're casting a string to 'timestamp without timezone'.  We cannot use a bound expression (thereal utc datetime var), again because that would short circuit the Postgres query optimizer.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/333075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/333082", "body": "this a drop of inconsistency in the ocean of inconsistency that is Socorro.  We'll address this issue at the same time that we apply PEP8 to everything.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/333082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/333631", "body": "fixed\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/333631/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/340317", "body": "'xul.dll.so\\s_@\\s_0x.*'  should be included, too?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/340317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/340325", "body": "make that:\n\n``` 'xul.dll.so\\s*@\\s*0x.*'```\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/340325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/323786", "body": "good call, rather myopic on my part.  Through our incessant revisions we've broken a feature that was little used.  We need to judge if the ability to specify the app class at the command line is worth restoring or if we should drop it entirely.  Opinions?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/323786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/323810", "body": "logging is actually set up in generic_app.py:114.  The 'main' function takes the requirements defined by the application object, and adds the logging config requirements.  Then the combined requirements are fed to configman.   Any app object passed to the 'main' function will be imbued with logging.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/323810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/355805", "body": "yeah, this is precisely what I said on Friday morning.  It's the only way I can think of that we can control the config environment for testing.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/355805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/361061", "body": "remove the commit from the sql and replace it with a commit on the connection object.   Mixing commit modes is asking for trouble.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/361061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/361063", "body": "the connection will need a commit here, too.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/361063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/361081", "body": "After writing some code with this class, i'm wondering if we might be able to simplify the use syntax by writing a **call** method:\n\ncurrent:\n`config.somethng.db_transaction.do_transaction(some_func, some_parameter)`\n\nvs\n\n`config.something.db_transaction(some_func, some_parameter)`\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/361081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/361099", "body": "why not use module level scope for this constant rather than creating it twice?  It's temporary code that'll be replaced once the old configmanager config modules go away.   Eventually, I figure that we ought to leverage configman to create a config file with temporary database credentials.  Then we can use configman to create the database and handle the transactional parts.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/361099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/450020", "body": "this is bothersome.  I've discovered where Postgres going down in the the midst of a transaction can result in a \"ProgrammingError\" exception being raised.  It has to be covered here or the processor can't recover.  However, I'm afraid that this would result in other actual programming errors to be retried forever with no hope of resolution.  Suggestions welcome.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/450020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/450815", "body": "=== How to kill and restart Postgres on Vagrant ===\n\nas user postgres, kill postgres unceremoniously:\n\n   /usr/lib/postgresql/9.0/bin/pg_ctl stop -D /var/lib/postgresql/9.0/main -m i\n\nto restart it:\n\n   /usr/lib/postgresql/9.0/bin/pg_ctl start\n\nBTW, I closed this pull req because it wasn't what I had intended.  There is a new one representing the better fix: https://github.com/mozilla/socorro/pull/345\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/450815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/504538", "body": "and I have the opposite opinion.  The args and kwargs are not for the method itself, but to be used by the function that's passed in.  I'll rename the vars to make that clearer, but I think using the _args, *_kwargs form here would be misleading.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/504538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/504582", "body": "I defer this discussion to a future date, you have valid points, but it is too late to make such a fundamental change.  We will revisit this issue at a time of more leisure.  \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/504582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/504668", "body": "it is, of course, actually a simple dict.  In the future, it is likely to be a DoctDict.  In the past, you've objected to tagging variable with the expected type, a practice that I find very useful.  The variable name in the processor has been 'json_doc' since the earliest iterations.  It refers to the dict that contains information that was originally in json format.  Would you object to 'json_dict'?\n\nI think the problem here is in name overloading.  We've gotten into the habit over the years of using term \"the json\" to mean the crash meta-data.  It's not technically meta-data, either, but that's a discussion for another time.  Neither of these terms is correct nor particularly descriptive.  We've got this same naming problem in the api for the CrashStorage class methods.  It would be difficult to change the terminology in Socorro culture. Until such time as we do change the vernacular, I'm leaving it as json_doc.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/504668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/504712", "body": "I personally believe that the avoidance of abbreviations is a significant factor in making code _less_ readable.  This is especially true in light of the asinine PEP8 rule on line length.  However, I'm tired of the argument and don't honestly think that it is worth bike shedding over.  I acquiesce to  assimilation.  \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/504712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/504804", "body": "`assert_expected` and `self.assertEqual` are not quite the same.  The difference lies in the message that you get out of them\n\n`self.assertEqual` tests for equality and optionally allows you to add a message on failure, but you've got to create that message yourself every time you use the method.  `assert_expected` creates a standardized, easy to parse message for you.   \n\nIn many cases, I'm comparing dicts or lists of many elements.  During problems, I want to see how expected varies from the actual.  `assert_expected` gives me the two vars printed aligned on separate lines.  It makes it simple to scan down the parallel lines to where the differences are.  \n\nOn the other hand, if I were to use ``self.assertEqual`, I would have to format the string each and every time I wanted to use the method.  Call me a lazy programmer if you will, but I'll take my automation over manual work every time.\n\nI could compromise here.  Since `assertEqual` is a method of `unitTest.TestCase`, I could use my object oriented prowess and override it to make it behave like I want it to.  However, the deadline looms, so I'll defer this until later...\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/504804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jberkus": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3391246", "body": "The new version looks good to me.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3391246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3437942", "body": "Actually, hang_report uses a DATE, not a TIMESTAMP.  So what you actually want is:\n\n```\n    AND report_day > ( CURRENT_DATE - %(duration)s ) \n```\n\n... assuming that %duration is an integer.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3437942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3437992", "body": "Small, correction, we want this to be inclusive:\n\nAND report_day >= ( CURRENT_DATE - %(duration)s )\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3437992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3438212", "body": "If there were some reason we needed to pass a date (which I don't believe there is), then we could do:\n\nAND report_day >= ( DATE '%(end)s' - %(duration)s )\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3438212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3438407", "body": "Since it appears that we cannot pass a date to the middleware, here's the syntax we need to use:\n\nAND report_day >= (  ( %(end)s AT TIME ZONE 'US/Los_Angeles' )::DATE - %(duration)s )\n\n... however, per IRC ducussion that doesn't appear to be necessary, since the middleware runs in UTC.  Thank goodness.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3438407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "xni": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3753605", "body": "Thank you for making this project open sourced!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3753605/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3783579", "body": "Oh, what's a pity. I wish him to recover ASAP.\n\nUnfortunately, the commit e1bc96f is from another pull request, because I have already pushed in into master branch. I don't feel comfortable with git yet, may be you can suggest me, how to leave only two commits d1a22ab and 080df26 in this pull request? Thank you.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3783579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3793527", "body": "I've found that some more files need to be fixed.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3793527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3793533", "body": "Thank you! I'll try to follow your advice, if you don't mind :-)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3793533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3828015", "body": "Oh, I'm sorry, this patch duplicates the https://github.com/mozilla/socorro/pull/324 one.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/issues/comments/3828015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/comments/1932728", "body": "Hi! I have a question about the current scheme (as I can see, it was mostly inherited in futher versions).\n\nI see an error on execution `update_reports_clean` procedure.\n\n```\nFile \"/usr/lib/yandex/socorro/cron/reportsClean.py\", line 20, in update_reports_clean\\n    [startTime, timedelta(seconds=3600), False])\nIntegrityError: null value in column \"os_name\" violates not-null constraint\nCONTEXT:  SQL statement \"INSERT INTO reports_clean_20121001\n ( uuid, date_processed, client_crash_date, product_version_id,\n   build, signature_id, install_age, uptime,\n   reason_id, address_id, os_name, os_version_id,\n   hang_id, flash_version_id, process_type, release_channel,\n   duplicate_of, domain_id )\nSELECT uuid, date_processed, client_crash_date, product_version_id,\n  build, signature_id, install_age, uptime,\n  reason_id, address_id, os_name, os_version_id,\n  hang_id, flash_version_id, process_type, release_channel,\n  duplicate_of, domain_id\nFROM reports_clean_buffer;\"\nPL/pgSQL function \"update_reports_clean\" line 271 at EXECUTE statement\n```\n\nCrash report was not processed properly and that caused NULL value in the os_name column.\nI'd like to filter null values to delete this rows from reports_clean and add them into the reports_bad.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/1932728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/1932760", "body": "Oh, sorry, I was wrong, It's my fault.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/1932760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/2051032", "body": "I've faced with error because of this line. The problem is databaseConnection is not updated in the whole loop, so if connection to the database is lost, it will not be established again. I'd recommend to introduce `invalidate` method to the `databaseConnectionPool` or exit monitor at this point.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/2051032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/2051384", "body": "If an exception was raised, threads in the threadPool are not stopped properly, so the whole process remains alive forewer.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/2051384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/2085890", "body": "signature is a text in the `signatures` table.\nI've graphed a histogram with a signature length distribution, and I have about 3% of long signatures that causes an exception:\n\n```\nFIle \"socorro/processor/processor.py\", line 587\nthreadLocalCursor.execute(reportsSql, infoTuple)\nDataError: value too long for type character varying(255)\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/2085890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "mnoorenberghe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/comments/1082372", "body": "FYI, the bug number in the commit is incorrect so it posted on the wrong bug in bugzilla.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/1082372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jezdez": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/comments/3388651", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/3388651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4280279", "body": "noooooo\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4280279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4280311", "body": "it's common practice to use the implied line breaks of brackets instead of backslashes to wrap lines, e.g.\n\n sequences = self.session.execute(\"\"\"\n     # some SQL statement\n \"\"\")\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4280311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4563597", "body": "Do you have to define those types in this migration, even if it's not used in the file? Asking more out of n00bness with Alembic than actual knowledge.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4563597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4569785", "body": "Oh good, I'm happy to remove that piece.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4569785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4569795", "body": "Ah. Renaming..\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4569795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4569810", "body": "Yep. Copy/pasting like a pro :(\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4569810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4569822", "body": "Agreed\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4569822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4571915", "body": "Understood, thanks for clarification :+1: \n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4571915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4630424", "body": "Nice bikeshed, I like your color choice.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4630424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4630475", "body": "Good catch, a merge error.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4630475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4630665", "body": "makes sense.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4630665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4630668", "body": "d'oh!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4630668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4630879", "body": "I used the `date_to_string` function since that's being used in other parts of the file already.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4630879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4661331", "body": "Yeah.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/pulls/comments/4661331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "Yoric": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/comments/4200784", "body": "Out of curiosity, what does this `12345` mean? If it's some kind of docstring, you should know that `AsyncShutdownTimeout` is actually a JSON string with a number of fields that I can provide if you need them.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/4200784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "flodolo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/comments/4665932", "body": "Wrong bug number ;-)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/4665932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "phrawzty": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/comments/8721572", "body": "@AdrianGaudebert Let's talk about this mapping, as in before we merge, heh.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/8721572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Tchanders": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/comments/11954530", "body": "Is this better?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/11954530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "vishnumohanm": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/comments/15878569", "body": "Pipstrap.py breaks on CentOS since it comes with python 2.6. I am running into the following error when running `make dev`.\n\n```\nTraceback (most recent call last):\n  File \"tools/pipstrap.py\", line 28, in <module>\n    from subprocess import check_output\n```\n\nI am using the Vagrant image provided.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/15878569/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/15923328", "body": "Yeah, that worked. Thanks. But I noticed that there was a whole bunch of\ndependency errors I had to work through to make it finally work. When I\nselecting the Vagrant development option I was expecting a painless\nexperience. But it ended up being worse than setting it up on a fresh linux\nbox. Maybe you guys should get rid of the Vagrant option if no one is\nupdating it.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/15923328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "marco-c": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/comments/19647655", "body": "I followed https://www.python.org/dev/peps/pep-0008/#multiline-if-statements, which doesn't suggest one option over another, but I don't mind changing to what you're usually using on Socorro.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/19647655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/19812829", "body": "Isn't `null` a value too? \ud83d\ude04 \r\nI'm changing it!", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/19812829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "m8ttyB": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/comments/20600631", "body": "lgtm. Nice job on the clarifying comments and variable names.", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/20600631/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/20600632", "body": "r+", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/20600632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "taskcluster[bot]": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-services/socorro/comments/25991810", "body": "<details>\n\n<summary>Submitting the task to TaskCluster failed. Details</summary>\n\n\n```js\n\nYou do not have sufficient scopes. This request requires you\nto have one of the following sets of scopes:\n[\n  [\n    \"queue:create-task:aws-provisioner-v1/github-worker\",\n    \"queue:create-task:aws-provisioner-v1/gecko-misc\"\n  ]\n]\n\nYou only have the scopes:\n[\n  \"assume:repo:github.com/mozilla-services/socorro:pull-request\",\n  \"queue:create-task:aws-provisioner-v1/github-worker\",\n  \"queue:create-task:aws-provisioner-v1/win2012r2\",\n  \"queue:route:index.garbage.*\",\n  \"queue:scheduler-id:taskcluster-github\",\n  \"secrets:get:garbage/*\",\n  \"secrets:set:garbage/*\"\n]\n\nIn other words you are missing scopes from one of the options:\n * Option 0:\n    - \"queue:create-task:aws-provisioner-v1/gecko-misc\"\n----\nmethod:     createTask\nerrorCode:  InsufficientScopes\nstatusCode: 403\ntime:       2017-12-01T22:40:18.304Z\n```\n\n</details>", "reactions": {"url": "https://api.github.com/repos/mozilla-services/socorro/comments/25991810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}}}}