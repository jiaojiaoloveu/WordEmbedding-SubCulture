{"_default": {"1": {"Novantix": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3573", "title": "Cannot rearrange/move tabs.", "body": "The ability for moving, rearranging and possibly even pinning frequently use tabs in the tab bar so it does not disappear when scrolling to other tabs would be excellent.\r\n\r\n I want to learn programming to be able to start contributing to Firefox on ios but as of yet I am not of ability to do so. \r\n\r\nAnyone that could possibly implement this feature would be fantastic!", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "xuxueyong": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3559", "title": "compile error", "body": "Share module compiled, reported No such module SwiftyJSON, hoping to give advice, how to do it", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3559/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gregz83": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3553", "title": "No Clear Browsing History button", "body": "In Firefox for Android, when you go to the History tab, there is a \"Clear Browsing History\" button directly at the bottom, which provides a quick and easy way to delete your History.  Firefox for iOS lacks this.\r\n\r\nPlease add this to the iOS version.", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rleaplaza": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3547", "title": "Unable to inspect a date element in a bootstrap datepicker", "body": "Hi, I'm using selenim webdriver and I have a problem to inspect a date element in a bootstrap datepicker.\r\n\r\nWhen I click an specific date and try to inspect it, the control datepicker hides, its happening with firefox 57 and google chrome 63.0.\r\nSteps\r\nPut the cursor over a bootstrap datepicker with no icon, it displays the calendar.\r\n\r\nClick on an specific date, try to inspect it.\r\n\r\nThe calendar hides and cannot see the date html through console.", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "youngwifemoliy": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3527", "title": "if tabbar can be fixed,it is great", "body": "if tabbar can be fixed,it is great", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jaxondu": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3508", "title": "Provide option to enlarge font size", "body": "Some site uses small fixed font which is hard to read even on 5.5 inch screen. For example Hacker News. It would be useful to provide settings to adjust the base font size, similar to what is possible on Firefox desktop. UCBrowser is one example of mobile browser that implements this feature.", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3508/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dowZhang": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3507", "title": "No such module", "body": "When I bulid this project accoding to the document of readme.But the shared framework have something wrong it's \"swift compiler Error \" and \"No such module 'XCGLogger'\".How can i do.Please help me.", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mopperwhite": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3472", "title": "Night Mode for Websites with Dark Backgound", "body": "Websites with dark background color like Steam became dramatically bright when I was using the night mode.\r\n\r\n![img_2599](https://user-images.githubusercontent.com/5031868/32937856-185a43b2-cbb5-11e7-8d6e-c74f27fa0d7a.PNG)\r\n\r\n\r\n \r\n\r\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aranasaurus": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3451", "title": "readerModeBar (and status bar) should hide on scrolling down.", "body": "Currently when using reader mode, the readerModeBar and status bar are always visible (and light-colored). I expect reader mode to be full screen with no chrome whatsoever (like Safari). \r\n\r\nI went looking through the BrowserViewController and didn\u2019t see anything related to scroll events, so if it\u2019s not possible to hide the bar completely, it\u2019d be nice if it at least respected the dark mode toggle. Currently if you turn on reader mode and set it to dark, you\u2019re stuck with a bright light-gray bar at the top along with the default status bar.", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3451/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "t-kitsune": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3426", "title": "Provide an option to blur the app when you leave it", "body": "This works in private mode, but I believe because Firefox is focused on the privacy of each and everyone of its users, that providing an option to blur Firefox when you're in the app switcher or you go home, that Firefox would be _quite literally_, the most private browser available on iOS. ", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3426/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Delphine": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3288", "title": "Localize mozilla.org Firefox iOS test page", "body": "Can we get https://www.mozilla.org/en-US/firefox/ios/testflight localized?\r\nIt says that \"This pre-release program (\u201cProgram\u201d) is only available in English.\" however this is not true. We currently have this available in 61 languages.\r\n\r\nI believe that if we localize this page, we would get much more testers worldwide and more eyes on this project. This will help in turn ensure much better quality overall. \r\n\r\n@peiying2: Do you have any idea on how to kickstart this process on your side (this is a mozilla.org website). thanks!", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/493507bcfdf0685c7c6f887c1e7076b564fa6a35", "message": "Update master with current shipping locales (#3412)\n\n(excluding 4 RTL locales)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jhugman": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3272", "title": "ScreenGraph evolution", "body": "#### Preamble\r\n`ScreenGraph.swift` is a way of describing an iOS app as a graph of screen states. It is written with `XCUITest` and GameplayKit. \r\n\r\nIts primary use case is to make setup and tear down of UI tests trivial and less brittle.\r\n\r\nThis issue identifies a number of issues with `ScreenGraph`, problems test authors have identified, and potential fixes for them. It does not intend to go into the implementation details.\r\n\r\n### Introduction\r\n`ScreenGraph.swift` has been a great success. Since we've introduced it the QA folk have really taken to it, making our UI tests much more readable, and less brittle in the face of changing UI.\r\n\r\nThis is well and good, however, the intention of `ScreenGraph` is not just to make testing easier: \r\n\r\n * to serve as an easily readable way of describing the UI of the app, either as the raw swift file `FxScreenGraph.swift`, or as an image. \r\n * capable of\r\n driving the localization screenshots process. These attempt to represent all strings the user will see that are shipped by the app. They _need_ to be comprehensive.\r\n\r\n![pre-photon-graph](https://user-images.githubusercontent.com/99338/31352950-87feaaba-ad28-11e7-8e36-40d54b6874e9.png)\r\n\r\nHowever there are a bunch of times where we'd like to improve things. \r\n\r\n * there is no internal way of **representing actions that change the app state**. e.g. switching to and from Private Browsing Mode.\r\n * there is no internal way of **representing parameterized actions that change the app state** e.g. \r\n * there is no way of representing **multiple actions that achieve the same thing**. e.g. opening a URL by typing it into the URL bar or long pressing and pasting from the URL bar.\r\n * there is no real way of **representing actions that changes the graph**. e.g. some of the graph is not accessible if the passcode is not set.\r\n\r\nAll of these things have led to hacks and compromises: \r\n\r\n * hacking the shape of the graph, most notably in the duplication of the graph nodes for `BrowserTab` and `HomeScreenPanels`. \r\n * many menus and context menus aren't very well represented in the graph. e.g. alternative user routes to do things, and thus not well tested, or represented in screenshots.\r\n * adding progressively more methods to the `navigator` extension,  e.g. `openURL`, increasing test and L10n screenshot complexity.\r\n * lots of brittle tests trying to work with the hacked up graph and hacked up navigator.\r\n * makes the process of writing screenshot code more and more labor intensive.\r\n\r\nAnd these hacks, have lead to graphs (and thus tests) that have not been especially easy to grok, or re-use (e.g. for screenshots).\r\n\r\n![post-photon-graph](https://user-images.githubusercontent.com/99338/31352988-a6661d08-ad28-11e7-872f-8530672c1c52.png)\r\n\r\nThe rest of this document introduces some concepts, and API to solve these problems.\r\n\r\n### Strawman Proposal\r\n#### Rename existing concepts\r\n\r\n- `Scene` becomes: `ScreenState`.\r\n- `createScene` becomes: `addScreenState`\r\n- In gesture methods, `to:` becomes `transitionTo:` [not yet implemented]\r\n\r\n```swift\r\nlet map = ScreenGraph()\r\nmap.addScreenState(LoadedTab) { screenState in \r\n  screenState.tap(app.button(\"TabToolbar.menuButton\"), transitionTo: LoadedTabMenu)\r\n  screenState.noop(transitionTo: URLBarAvailable)\r\n  screenState.tap(app.buttons[\"TabLocationView.pageOptionsButton\"], transitionTo: PageOptionsMenu)\r\n}\r\n```\r\n#### New concept: `UserState`\r\nThese are objects representing the user's mental model of the state of the app.\r\n\r\nThey are a way of communicating data from the tests to the graph.\r\n\r\n```swift\r\nclass FxState: UserState {\r\n  var url = \"\"\r\n  var hasPasscode = false\r\n  var tabCount = 0\r\n  var isPrivate = false\r\n}\r\n\r\nlet map = ScreenGraph()\r\nmap.initialUserState = FxState()\r\n```\r\n\r\n`userState` is available from the `navigator`. The `BaseTestCase` should probably make `userState` available as a property.\r\n\r\n```swift\r\nnavigator.userState.url = \"https://mozilla.com\"\r\nXCTAssertFalse(navigator.userState.isPrivate)\r\n```\r\n\r\nThe user state is supposed to very simple, and very easy to evolve as you write your tests.\r\n\r\nThe user state can record the state of the app as it transitions into the screen state.\r\n\r\n```swift\r\nmap.addScreenState(LoadedTab) { screenState in\r\n  \u2026\r\n  screenState.onEnter() { userState in \r\n    userState.url = app.textField.text()\r\n  }\r\n  \u2026\r\n}\r\n```\r\n\r\n#### New concept: `ScreenAction` nodes\r\nThese are nodes on the graph that represent actions the user might take. They can represent multiple ways to do the same thing; they can read or write the `userState`.\r\n\r\nActions do not need to be added to the `map`, but can be created as gestures. You might think of them as named gestures.\r\n\r\nActions can read and write to the `userState`.\r\n\r\n```swift\r\nmap.addScreenState(TabTray) {\r\n  screenState.tap(app.button[\"tabTray.privateBrowsingMask\"], forAction: TogglePBM) { userState in \r\n    userState.isPrivate = !userState.isPrivate\r\n  }\r\n}\r\n```\r\n\r\nTests can perform actions using the `navigator`.\r\n\r\n```swift\r\nnavigator.performAction(TogglePBM)\r\nnavigator.toggleOn(userState.isPrivate, withAction: TogglePBM)\r\nnavigator.toggleOff(userState.isPrivate, withAction: TogglePBM)\r\n```\r\n\r\nActions can be lead to other actions, which may transition to screen states. These might be thought of \"aliases\", but are really action nodes which only have other action nodes joined to them.\r\n\r\n```swift\r\nmap.addScreenState(URLBarAvailable) { screenState in\r\n  screenState.gesture(forAction: TypeURLAction, LoadURLAction, transitionTo: LoadedTab) { userState in \r\n    let urlString = userState.url\r\n    let urlBar = app.textField[\"URLBar\"]\r\n    urlBar.tap()\r\n    urlBar.type(\"\\(urlString)\\r\")  \r\n  }\r\n\r\n  screenState.gesture(forAction: PasteURLAction, LoadURLAction, transitionTo: LoadedTab) { userState in \r\n    let urlString = userState.url\r\n    let urlBar = app.textField[\"URLBar\"]\r\n\r\n    UIPasteboard.general.string = urlString\r\n\r\n    urlBar.longPress()\r\n    app.menuButton[\"pasteURL\"].tap()\r\n  }\r\n}\r\n``` \r\n\r\nTests may use the `navigator` to perform the task, with whichever action is quickest; or a specific action to achieve the task.\r\n\r\n```swift\r\nnavigator.userState.url = \"https://mozilla.com\"\r\nnavigator.performAction(LoadURLAction)\r\n\r\nnavigator.performAction(TypeURLAction)\r\nXCTAssertTrue(navigator.userState.url.beginsWith(\"https://mozilla.com\"))\r\n```\r\n\r\nScreen actions can also have code run each time they are performed.\r\n```swift\r\nmap.addScreenAction(LoadURLAction) { userState in\r\n  userState.tabCount += 1\r\n}\r\n```\r\n\r\nScreen Actions can optionally lead directly to `ScreenState`s.\r\n\r\n```swift\r\nmap.addScreenAction(LoadURLAction, transitionTo: LoadedTab)\r\n```\r\n\r\nWithout leading to a screen state, the final screen state of the navigator is to return to the state from which the action was taken. `dismissOnUse` is respected, so in the chain `BrowserTab` -> `BrowserTabMenu` -> `ToggleNoImageMode`, if `BrowserTabMenu` is `dismissOnUse`, then the navigator would assume the screen would reset to `BrowserTab`.\r\n\r\n#### New concept: predicates\r\nThese are based on the well known `NSPredicate`.\r\n\r\n##### Using predicates to change the navigable graph.\r\nBuilding on `userState` and Screen Actions, predicates enable us to describe the application more fully, and enable the `navigator` to choose different routes through the graph based upon the `userState`. \r\n\r\nRecall: transitions between screen states, and between screen actions and between screen actions and screen states are all edges on the same graph.\r\n\r\nPredicates are string queries over the `userState` object. Edges can be made conditional on the `userState`.\r\n\r\n```swift\r\nmap.addScreenState(SettingsScreen) { screenState in \r\n  \u2026\r\n  let passcodeSettings = table.cells[\"TouchIDPasscode\"]\r\n  screenState.tap(passcodeSettings, PasscodeSettingsOn, if: \"hasPasscode == true\")\r\n  screenState.tap(passcodeSettings, PasscodeSettingsOff, if: \"hasPasscode == false\")\r\n  \u2026\r\n}\r\n```\r\n\r\nThis might allow the test author to: \r\n\r\n```swift\r\nnavigator.userState.passcode = \"1234\"\r\nnavigator.performAction(EnablePasscodeAction)\r\n```\r\n\r\n##### Predicate generalizes `screenState.existsWhen`\r\nWe are more used to seeing predicates when applied to `XCUIElement`s, especially around waiting for elements to appear or disappear. \r\n\r\n```swift\r\nmap.addScreenState(LoadedTab) { screenState in\r\n  \u2026\r\n  // wait for the progress bar to disappear.\r\n  screenState.onEnterWaitFor(\"exists != true\", element: app.progressBars(boundBy: 1))\r\n  \u2026\r\n}\r\n```\r\n\r\n`element` can be `Any` object.\r\n\r\nThere is some limited functionality to wait for an element if a `userState` predicate is true.\r\n\r\n```swift\r\nscreenState.onEnterWaitFor(\"exists != true\", element: app.progressBars(boundBy: 1), if: \"loadNormally == false\")\r\n```\r\n\r\n\r\n\r\n### Request for Comments\r\nNone of this is implemented.\r\n\r\nImplementation effort is relatively low; tests are currently being updated for photon. The L10N screenshots have not been started. We should make these changes sooner rather than later.\r\n\r\n * Have I missed any use cases?\r\n * Does the proposed API solve the use cases we need to solve?\r\n * Can the proposed API be nicer for\u2013/more usable by\u2013 test authors?\r\n\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/c7b9aef5d16024a9b2cf4bc3fbfbb23022eb61aa", "message": "Bug \t1427911 \u2014 Remove close tab menu item from iPads (#3576) r=garvan\n\nwhen top tabs are visible."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/3834f9e9ce23def95d5a603c81dc53f703a3f503", "message": "Bug 1417034 \u2014\u00a0Fixup unsafe live SQLite cursor to be used only in conjunction with a live connection. (#3531)\n\n* Bug 1417034 \u2014 Fixup runQueryUnsafe to force cursor usage within the connection.\r\n\r\n* Bug 1417034 \u2014 Ensure we check for cursor status."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/d30915fe4fbc85b7e2cf19367d528dabbfd269f4", "message": "Bug 1390293 \u2014 Implement Handoff with TabEvents (#3513)\n\n* Bug 1390293 \u2014 Rename TabHelper to TabContentScript.\r\n\r\n* Bug 1390293 \u2014 Initial commit of TabEventHandler\r\n\r\n* Bug 1390293 \u2014 Implement UserActivityHandler.\r\n\r\n* Only parse metadata (and things associated with it) for non-local webpages.\r\n* Dead code removal.\r\n* Rename SpotlightHelper to UserActivityHandler\r\n* Implement UserActivityHandler.\r\n\r\n* Bug 1390293 \u2014 Hook up TabEvents to actual events in the app.\r\n\r\n* Bug 1390293 \u2014 Add orphaned/stateless tab event handlers to a singleton holder."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/596c8f01b1f8a4398851715df415803e535475b2", "message": "Bug 1417034 \u2014\u00a0Simplify SQL to find the most recent visits to the list of recently visited sites. (#3522) r=justindarc\n\nThis fixes an out of memory crash."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/ed8eb073f393a71d3c5258fa0add6b48a92584f7", "message": "Bug 1416859 \u2014 Use canonical URL from non-cached page-metadata-parser. (#3480) r=garvan\n\nThis also fixes the URL used for AMP pages, so the correct AMP page is used."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/1076610cbeb7da41db77aebd1a27664fef7cad09", "message": "Bug 1416820 \u2014 Add a close button to page menu and long press tabs tray menu. (#3476) r=farhan"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/8c50051ccff2a5537f6986e0336e057f337f8d00", "message": "Bug 1416850 \u2014\u00a0Fixup SyncSettings regressing l10n screenshots (#3446) r=eoger"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/bf833f637d76d47ea1fcd8b7320360454ccc0d04", "message": "Bug 1397934 - Fix ios10 deprecation warnings (#3421) r=jhugman\n\n* Bug 1397934 - Convert OSSpinLock to os_unfair_lock\r\n\r\n* Bug 1397934 - Convert openURL(_:) to open(_:, options:)\r\n\r\n* Bug 1397934 - Convert UILocalNotification to UNNotification\r\n\r\n* Bug 1397934 - Convert UIColor(colorLiteralRed:,green:,blue:) to UIColor(red:,green:,blue:)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/240eb59f672b96171bba73b7e9807b0ee6cc6483", "message": "Bug 1406515 \u2014 L10n screenshots for Photon, & ScreenGraph Evolution. (#3303) r=justindarc\n\n* Bug 1406515 \u2014 Generate L10n screenshots for Photon\r\n\r\n * Fixup NoImageTest.\r\n * Fixup passcode test, as it now uses 6 digits.\r\n * Fix launchArguments to work on both fastlane and Xcode\r\n * Add testPageMenuOnWebPage\r\n * Fixup Permissions, but not yet detecting the OK button for iOS native dialog.\r\n * Added test16PasscodeSettings.\r\n * Add toggles for hideImageMode and nightMode.\r\n * Fixup test24BookmarksListTableRowMenu\r\n * Fixup test12WebViewAuthenticationDialog, test17PasswordSnackbar, test20BookmarksTableContextMenu\r\n * Fixup test12WebViewAuthenticationDialog\r\n * Added TODO for geolocation.\r\n * Add accessibilityIdentifiers.\r\n * Enable all tests that pass, disable tests that fail.\r\n * fixup test18TopSitesMenu, test19HistoryTableContextMenu.\r\n * Fixup l10n screenshots for Photon intro.\r\n * Fixup screenshots to work with Photon and FxScreenGraph.\r\n * Add accessibility identifiers to the Photon ActionSheet (#3300)\r\n * Add accessibility identifiers to Photon ActionSheet.\r\n * Generate L10n screenshots for Photon (+2 squashed commits)\r\nSquashed commits:\r\n[2ea74bb] Bug 1409837 \u2014 FxScreenGraph, use new ScreenGraph facilities for Snapshotting.\r\n\r\n * Add extra settings screen\r\n * Add a forEachScreen for tables.\r\n * Comment use of actions.\r\n * Fixup FxScreenGraph to use last button as cancel button.\r\n * Fixup FxScreenGraph: isIpad --> isTablet.\r\n * Fixup FxScreenGraph for typing into the URL bar.\r\n * Fixup FxScreenGraph to remove troublesome URLBarAvailable and ToolbarAvailable states.\r\n * Add home panel context menus.\r\n * Fix iPad XCUITests (#3323)\r\n * Fixup FxScreenGraph to display the Passcode settings page and passcode interval page.\r\n * Fixup FxScreenGraph for nightMode and noImageMode.\r\n * Fixup FxScreenGraph for Settings, and Bookmarking.\r\n * Split the Settings Screen into two, and add TrackingProtection.\r\n * Add BaicAuthDialog, with backAction.\r\n * Add home panel context menus.\r\n * Move common FxUserState patterns to navigator.\r\n * Fixup test13ReloadButtonContextMenu\r\n * Fixup test11WebViewContextMenu\r\n * Intro, LoadingURLs, some menus, most Settings.\r\n * Add skeleton FxUserState to FxScreenGraph.\r\n[7aab386] Bug 1407702 \u2014\u00a0Move navigator into BaseTestCase so XCUITests compile.\r\n\r\n* Bug 1407710, 1407707, 1407709, 1407702 \u2014 Add ScreenActions, ScreenState and UserState to ScreenGraph.\r\n\r\nhttps://github.com/mozilla-mobile/firefox-ios/issues/3272\r\n\r\n[ba0457f] Bug 1407710 \u2014 Add better tidy up of the backstack.\r\n[e420368] Bug 1407710 \u2014 Uncontroversial cleanup\r\n[baa1fcc] Bug 1407710 \u2014 Migrate to new onEnter methods.\r\n[bde8f5b] Bug 1407710 \u2014\u00a0Add navigator.plan()\r\n[61709d2] Bug 1407710 \u2014 Split onEnter into onEnter and onEnterWaitFor.\r\n\r\nThis lets us add a conditional waitFor.\r\n\r\nscreenState.onEnterWaitFor(element:, if: \"\")\r\n[04cc405] Bug 1407710 \u2014 Reduce visibility of test identifiers\r\n\r\nThis was causing clashes with FxScreenGraph.\r\n[5631de4] Bug 1407710 \u2014 Add back() method, press() method, synchronizeWithUserState() method\r\n[a2f9332] Bug 1407710 \u2014 Add extra methods to expose new actions and conditional edges to all gestures.\r\n\r\nImprove error reporting.\r\n[c03a87e] Bug 1407707 \u2014 Add conditional edges to the screen graph.\r\n\r\nThis lets us define edges (including actions) as conditional on the current userstate.\r\n\r\nIf the userState changes (even mid `goto`), the conditional edges are re-evaluated, and the navigator is re-routed.\r\n\r\nUnfortunately, this commit adds mutable state to the graph, which means that there is now a one-to-one navigator-to-screengraph mapping (before you could have multiple navigators from the same instance of the ScreenGraph. This is almost certainly not worth worrying about.\r\n[e73fc54] Bug 1407706 \u2014 More testing of actions\r\n[9bd748e] Bug 1407706 \u2014 More testing of actions\r\n[904c492] Bug 1407706 \u2014\u00a0Add toggleOn and toggleOff actions.\r\n\r\nThese depend on the userState being up to date.\r\n[868d2e5] Bug 1407706 \u2014\u00a0Move enter and leave into its own private extension.\r\n[13bdbd4] Bug 1407706 \u2014\u00a0Ensure actions always end in screen states.\r\n[327f9b5] Bug 1407706 \u2014 Actions can be added from within screen states.\r\n[a012a0e] Bug 1407706 \u2014 Refactor navigator.goto() into a enter and leave methods.\r\n\r\nThis also changes currentScene to be using the new generalization of GraphNode.\r\n[059a011] Bug 1407706 \u2014 Start ScreenActionNodes\r\n\r\nRefactor ScreenGraphNode to ScreenStateNode and GraphNode.\r\n[6f994c0] Bug 1407709 \u2014 Add predicate tests for entry criteria into nodes.\r\n[dc3063e] Bug 1407702 \u2014 Add onEnter user state recorders.\r\n\r\nUnify how we look at the state of the app.\r\n[3558577] Bug 1407702 \u2014 Add failing tests for onEnter state changes\r\n[84cbccf] Bug 1407702 \u2014 Add UserState to ScreenGraph.\r\n\r\nThis is the basis of adding actions and predicates to the screengraph. As neither of these exist, this is not very useful."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/23b7242c184aebc7c66cdf8bd942f1931ba87f23", "message": "Bug 1415531 \u2014\u00a0Fix up RelateDatesTests to account for DST changes. (#3429) r=gkeeley"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/4efd198b4ece8d8765eea924a8562e103ffd2fb1", "message": "Bug 1413896 \u2014\u00a0Hide URLs displayed in a notification from iOS' data detectors. (#3410)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/64680b2a1e5115af996519780269ed1de1033c5c", "message": "Bug 1375988 \u2014\u00a0Assume empty messages are account verified. (#3279) r=vbudhram"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/ce38a0eb3ad42083159d9d2370c0624e706ce039", "message": "Bug 1406125 \u2014\u00a0Fix up waiting for elements when they're not on the screen (#3266)\n\n* Bug 1406125 \u2014\u00a0Fixup waiting for elements.\r\n\r\nPreviously, the handler was called regardless of whether or not the element eventually turned up.\r\n\r\nThis meant our error handler was being called all the time, and thus reporting failure, everytime. This was our bug.\r\n\r\nNow replaced it with the more modern Xcode 8.0 way of doing things.\r\n\r\n* Bug 1406125 \u2014 Improve reporting of failures within the test\u2026\r\n\r\n\u2026instead of in the BaseTestCase.\r\n\r\n* Bug 1406125 \u2014\u00a0Fixup `loadWebPage()` for better reporting."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/89f2c8baf0aa5a705f70a54e0b5c02ae4f8ccef5", "message": "Bug 1394599 \u2014 Use canonical links for sharing AMP links (#3261) r=farhan\n\n* Bug 1394599 \u2014 Upgrade page-metadata-parser to v1.1.0.\r\n\r\nThis decreases the size of the js from 111K to 16.7K.\r\n\r\n* Bug 1394599 \u2014 Move construction of PageMetadata object to where metadata is found.\r\n\r\n* Bug 1394599 \u2014\u00a0Add the pageMetadata object to the Tab object.\r\n\r\nThis is the first part of moving to a more unified AppState model; but is not really supposed to be doing this work now.\r\n\r\nRather: we need to have this available to us once we start sharing.\r\n\r\n* Bug 1394599 \u2014\u00a0Tidy up ShareExtensionHelper, and now uses canonicalURL.\r\n\r\n* Bug 1394599 \u2014\u00a0Use canonicalURL for copy links from context menu and page action menu."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/398cac68cf3b7e4d6ed05b89931b704eea83a38f", "message": "Bug 1405043 \u2014 Trivial speed optimizations for XCUITests. (#3247) r=njpark\n\n* Bug 1405043 \u2014 Add Skip What's New and Skip Intro to all tests.\r\n\r\nThis tidies up the launchArguments to just being used in the TestAppDelegate, instead of spread around AppConstants. Each of SKIP_WHATSNEW, SKIP_INTRO and CLEAR_PROFILE can be used independently of one another.\r\n\r\nAdditionally, this cleans up the `restart()` method to the home button instead of `terminate()` and use `activate()` instead of `launch()`. This does not affect test setUps, but does help with tests that require restarts.\r\n\r\n* Bug 1405043 \u2014\u00a0Speed up the animations to 100 times as fast."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/aa8402c25fbb67b5734ca84681befd5e1c4abccf", "message": "Bug 1404920\u00a0\u2014 Use UIPasteboard.general.asyncURL() in Today widget. (#3242) r=farhan"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/f68ff84632b61f19661574ab6bbdb8ad58fb513f", "message": "Bug 1392761 - Pull Down in Bookmarks to Trigger a Bookmark Sync Refresh (#3240) r=jhugman\n\n* Pull to refresh bookmarks\r\n\r\n* Pull to refresh bookmarks - remove target\r\n\r\n* Bookmarks Refresh: Add UITest"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/8c0dfc0ea8e19f969c3975f4da32263f3942767f", "message": "Bug 1403142 \u2014 Instrumenting notifications with sentry. (#3226)\n\n* Bug 1403142 \u2014 Instrumenting notifications with sentry.\r\n\r\n* Bug 1403142 \u2014\u00a0Enable only on Beta.\r\n\r\n* Bug 1403142 \u2014 Add messageDelivered flag, and log when it's false."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77897792", "body": "Are we using mergepbx yet? https://github.com/simonwagner/mergepbx\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77897792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "farhanpatel": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3193", "title": "daringfireball.net favicon not showing up", "body": "@garvankeeley adding this bug, editing to link to buddybuild feedback\r\n\r\n [Link to buddybuild feedback from build 6123](https://dashboard.buddybuild.com/apps/57bf25c0f096bc01001e21e0/feedback?fid=59c09b203a598b00015e7f55&bnum=6123)\r\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/2904", "title": "Buddybuild crash report on build #3099", "body": "Buddybuild detected a crash\n\n[View Full Crash Details](https://dashboard.buddybuild.com/apps/57bf25c0f096bc01001e21e0/crashreport/94904e199977a0d0021730fe7070b20c)", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/2904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/2628", "title": "Buddybuild crash report on build #2356", "body": "Buddybuild detected a crash from Unknown user\n`Client/Frontend/Browser/TabTrayController.swift` line `711`\n\n```swift\n\n            self.collectionView.insertItems(at: [IndexPath(item: index, section: 0)])\n        }, completion: { finished in\n            if finished {\n                tabManager.selectTab(tab)\n                // don't pop the tab tray view controller if it is not in the foreground\n                if self.presentedViewController == nil { <-- CRASHED\n                    let _ = self.navigationController?.popViewController(animated: true)\n                }\n            }\n        })\n    }\n```\n\n[View File](https://github.com/mozilla-mobile/firefox-ios/blob/58ededc6e2a534df3b2d77883319346774fb1da3/Client/Frontend/Browser/TabTrayController.swift#L711) | [View Full Crash Details](https://dashboard.buddybuild.com/apps/57bf25c0f096bc01001e21e0/crashreport/d8822a688b24ab69617ed25f6a1509d2)", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/2628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/5c80018d6ba1dca0a5ad7a674c99dee450c9b36b", "message": "Bug 1419650 - Use type inference where possible to remove unneeded static type specifications  (#3568)\n\n* adamnemeceks changes without whitespace changes.\r\n\r\n* Fix review nits.\r\n\r\n* Build errors: change string.endsWith to hasSuffix,\r\nNotification name was wrong\r\nisGIF not used correctly"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/903fbda9cc56e7f3c4d652c4bb76de6dd401e34f", "message": "Bug 1420887 - Find in Page bar needs a width constraint. (#3560)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/8b7be4a2c1e299147ad5d5cb404bb721b2b1b7fb", "message": "Bug 1302815 - Switch Firefox iOS to use list.json (#3555)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/829034cb94e7433ccdbaf73cdf5acf8f7d39c70b", "message": "Bug 1425933 - Call hasURLs before trying to access pasteboard URL (#3561)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/64f73d717b7a62907f2403b4a32bb0598d1f0c92", "message": "Bug 1424413 - make sure webViewWebContentProcessDidTerminate is passed to delegates. (#3562)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/3ac4dfea9279f9d19754a65dbbe9ca07d7fbc11d", "message": "No Bug - Add quotes around 1Password cartfile entry."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/621029bf0b95bc41aefebec757b82e8cfe6b2b67", "message": "Bug 1425304 - Update Cartfile to point to latest 1Password App Extension (#3556)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/47f93ac00bff74e03b742b6bf20cd41ecbb1fc94", "message": "Bug 1421226 - make sure to reset selectedIndex when force removing private tabs. (#3534)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/27b67852d2f821733cb4eea1ec67fdd9aba54de3", "message": "Bug 1423006 - Update project to support Xcode 9.2  (#3526)\n\n* Bug 1423006 - Update project to support Xcode 9.2"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/39e5f7696716111983a99eafceaf53e058da657e", "message": "Bug 1414242 - Refactor our LeanPlum integration. (#3498)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/5ecb177eb499136d13c0459ba58953ee6c74f8ff", "message": "Bug 1420106 - make sure toasts are shown. regression from stackview rewrite. (#3505)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/ff360efa82b71845cd89d4d1be6c002c619e3d10", "message": "Bug 1422421 - Remove bookmark status from tab. (#3517)\n\n* Bug 1422421 - Remove bookmark status from tab. This removes Db queries from happening on page load and urlbar focus."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/b875f0910f8e500ec8f75accb5fa1840ee97f14b", "message": "Bug 1418295 - Localize Pocket More button string. (#3493)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/5d5ed5ee0a30e6199d851463baf015fef0c2cda1", "message": "Bug 1414812 - Fix overlapping icons in Send Tab page on iPad. (#3492)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/9c3a64593dbc1aa5c406e057cc14bba081e0da80", "message": "Bug 1417671 - Followup, remove duplicating text in Snackbar. (#3494)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/f806a393feadd6326c10c03cb12bdd64d3b7b1bb", "message": "Bug 1417671 - Rewrite a few view layouts using UIStackview (#3433)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/8f47543b9e7deadcaf81dcfc37142d32133d1ebe", "message": "Bug 1393301 - UIColor cleanup. Move all colors into UIConstants (#3428)\n\n* Bug 1393301 - UIColor and Theme cleanup.\r\n- Remove Theme array abstraction in favour of BrowserColor struct\r\n- Cleanup all UIColors spread across the app in favour of using UIConstants\r\n- Name colors using the Photon Color system"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/d0000d60aca6e96f488e649059384015c16e99e8", "message": "Bug 1416835 - Update Pocket locales. Remove EN_CA, add EN_ZA. (#3449)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/848c67ec5c0cf70939da3b7c8957373430e6ac0e", "message": "Bug 1416829 - Update pocket trending stories link. (#3448)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/9818a2fdbcb7a7442144006c6f8036a8ff3a16c5", "message": "Bug 1414973 - Update Private mode mask in tabs tray. (#3425)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/a33769fd4cf6d11462f1616214d5dea71b0f82fe", "message": "Bug 1414831 - Make sure header in toptabs appears underneath the selected tab (#3423)\n\n* Bug 1414831 - Make sure header in toptabs appears underneath the selected tab.\r\n\r\n* TabCell also needs to apply its zIndex."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/005877c3cc4571c9457db359aee578ce31d3a465", "message": "Bug 1414969 - Use the actual reading list icon instead of the reader view icon. Also move all reader assets into images.xcassets. (#3424)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/dd49344591ff9e58f59603a4cd739137ea5ed08f", "message": "Bug 1414251 - Do not call didRemoveAllTabs when wiping private tabs on exit. (#3418)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/52a638fb5ea60966de2db96860bd372122164be6", "message": "Bug 1413638 - Check both the footer and header height when setting the toolbar state. (#3407)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/04ad6ff35c2d1e23ce6321f3584965cbd061c3c7", "message": "Bug 1413616 - Reuse SendTab string from the 3DTouch actions in order to land SendTab in the page options menu for v10. (#3406)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/73081c03882fed7ea1fa45d4e0a566687acd5616", "message": "Bug 1397887 - Fix 1Password support. (#3400)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/3ffcc249efdb1cdb5c9bfa8665bff7131a29be73", "message": "Bug 1412124 - Don't show toolbars when opening a link in the background. (#3394)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/39959b9dd7371ab9eba39c2818bce7e601416fc1", "message": "No Bug - Add a few linting rules via Danger. (#3369)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/9653a62c5f5fe07cf3ff7be57b2e16ca6aa45efb", "message": "Bug 1411665 - Add Pocket behind a feature flag. (#3384)\n\n* Bug 1411665 - Add Pocket behind a feature flag.\r\n\r\n* Remove flag."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/5e2ad2fb4eb8aa656cd7bf8ef7064b0921c4f097", "message": "No Bug - Update ruby in CI (#3392)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/712b8512711d4695af9b0924f4d7194e5d184b5b", "message": "Bug 1411025 - New FaceID string. (#3380)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/567cc3f3e78e437a2bf844300d2346744f5af0f9", "message": "Bug 1411025 - Add NSFaceIDUsageDescription string.  (#3365)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/efd48eadd7e262780a3d3ab2f5f628d2543ef5f9", "message": "Bug 1407443 - The LocalAuthContext should be reused. (#3357)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/f3795fd6b691cf7057aa92a83150805ee5a71aa1", "message": "Bug 1410229 - Improvements to Sentry logging (#3359)\n\n* Bug 1410229 - Improvements to Sentry logging\r\n- Rename SentryIntegration to Sentry\r\n- Add a new SentryTag enum to prevent typos\r\n- Add a new description field which adds a parameter errorDescription to the extra dict\r\n- make sure the message in a sentry event is always the same. Push error info into the extra field\r\n- remove all logging that happens alongside Sentry. Instead just log sentry events in the console\r\n* Use the severity level to decide if we should send a sentry event on release instead of Tag."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/04de636bfbda07b550b9f5327b441313445a499b", "message": "Bug 1410523 - Update assets for ShareTo extension. (#3356)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/eb3afe003fe8e3b0947c41d8002169cde74e615f", "message": "Bug 1408192 - Use correct environment API key for Pocket.  (#3349)\n\n* Bug 1408192 - Use correct environment API key for Pocket.\r\n\r\n* There is only a production and staging key."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/cd51fa956875446d25e9fcc2f3ad787def74dd64", "message": "Bug 1409886 - Add a LeanPlum event for when a user clicks on a Pocket story. (#3332)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/4774988018a20a7ef24d90a6d81e620ff918cae7", "message": "Bug 1404023 - enable search suggestions by default. Users can opt out in Settings->Search. (#3350)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/411b93314ce442bb15a4022343741d8014ab7278", "message": "Bug 1409948 - update EmptySync asset with the new firefox logo. (#3329)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/7eaa2448c714d2e71e6d8a9f64596b1109da1831", "message": "Bug 1407474 - Reduce padding at the top of the copy url toast. (#3313)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/5e4c46512e0bfdced0d4759c8532976c670b2fc4", "message": "Bug 1410126 - update reader mode empty state assets. (#3346)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/1a6daf3a0d12973f2fbe2a9cc8924d385ca3b0f8", "message": "Bug 1409950 - update tour-welcome asset. (#3345)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/8ef38474946d30aa80b5edc3e5ff3c59ccf010d2", "message": "Bug 1410224 - update feature flags to match v9.x and enable beta flags on release. (#3337)\n\n* Bug 1410224 - update feature flags to match v9.x and enable beta flags on release.\r\n\r\n* Disable MOZ_BOOKMARKS_REPAIR_REQUEST in release.\r\n\r\n* Enable SENDTAB_IN_PAGE_ACTIONS on release/beta."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/7ff3dcc55e0d0cf687c2bd050bec6d2f9453ade0", "message": "Bug 1409610 - Limit the width of the Photon menu when in landscape mode. (#3330)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/84e4a949003ad039e0a1144612765c3c3e4caab4", "message": "Bug 1409095 - remove generic UINavigationController extention which was causing the staus bar to appear white when it shouldnt. (#3310)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/1cb507cbe5b25cf095447812fa38eff7715f67a9", "message": "Bug 1404927 - The app extension icons should not be greyscale. They should be black/white. (#3311)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/fac4e03e6103cd0b038325cb7207681e949e685d", "message": "No Bug - Git is case insensitive so icons had the wrong case.  (#3304)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/46154d987c976983047dc4a9d8d12cdd9b1c7dce", "message": "No Bug - Reenable swiftlint. Fix a small number of linting errors. (#3278)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/c17db926ecb38c82658845ebcce68494da1ede0d", "message": "Bug 1405825 - Add accessibility identifiers to the Photon ActionSheet (#3300)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/ddd2d2ccbe5925fc0def941793024039946789fb", "message": "Bug 1406931 - Make sure to refresh Highlights when bookmarking.  (#3295)\n\n* Bug 1406931 - Make sure to refresh Highlights when bookmarking."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/22afc1e878b1207181e48c3be244145c2bc5c883", "message": "Bug 1404927 - Add icons for extensions.  And update App Release/Beta Icon (#3294)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/e2d2aee590d7eee208a362884914d38c90fd1c76", "message": "Bug 1408076 - remove Set HomePage action from page options menu (#3293)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/f4e692439478b5358cbb64a8700d80bb2d6dc7c3", "message": "Bug 1390664 - update Send anonymous usage string in settings. (#3283)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/0dffee79753ba8e9fee8060deba5a4f14bfa145d", "message": "Bug 1407443 - Make sure that on the iPhone X we say Face ID instead of Touch ID. (#3277)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/1bf6544b6c925d8d7622ab31be1a92421cfa40c3", "message": "Bug 1407315, 1406926, 1407231, 1406924 - Fix a bunch of visual regressions  (#3273) r=garvan\n\n* No Bug - Should not be a var. Fixes a warning.\r\n\r\n* Bug 1407315 - Make sure more button does not appear in other section headers.\r\n\r\n* Bug 1406926 - Make sure we do clean up even if the animation does not complete properly.\r\n\r\n* No Bug - Update Highlight string text.\r\n\r\n* No Bug - Make sure the tabsbutton color matches the toolbar buttons in PBM.\r\n\r\n* Bug 1407231 - make sure the statusbar is not transparent when opening a tab via peek.\r\n\r\n* Bug 1406924 - Make sure statusbar styles properly when transitioning via toast.\r\n\r\n* Remove self."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/0d72f9360cb1e5352ca82528f3c40f9f4c73276a", "message": "No bug - update missing beta icons."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/97fdf943bbbeec9e417a1cd9930d9ea2a3b24868", "message": "Bug 1383337 - Add ability to disable sections in Activity Stream (#3251)\n\n* New Pref panel for AS Topsites sections. Allow users to turn on/off highlights pocket stories.\r\n\r\n* Allow the frontend to override the locale so users who enable pocket via settings can still use it.\r\n\r\n* Don't calculate highlights if we aren't going to show them.\r\n\r\n* Move the old settings panel into the Settings Folder.\r\n\r\n* project file changes.\r\n\r\n* Update AS frontend to honor the user prefs. Don't show Pocket title header when there are no pocket stories.\r\n\r\n* Rename visit again to Highlights.\r\n\r\n* Forgot logic.\r\n\r\n* Fix nits.\r\n\r\n* Tint the pinbutton correctly.\r\n\r\n* Clean up the pocket logic.\r\n\r\n* Testfix"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/277eb8cbe4308b9d37ff9927c88f9f304b53a005", "message": "Bug 1406021 - fix split screen related bugs on the iPad. (#3265)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/1384c89b4aeebfb0362a6e5611d2c320de239721", "message": "No Bug - new beta icon. (#3269)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/38f7656c3180124e68393d4d70b5d71f4b57a89a", "message": "Bug 1406497 - update the settings page for Photon. (#3268)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/941fd947bfbf0a649d878eb39ba6e334005c27e9", "message": "Bug 1405423 - Remove monochromatic Firefox logo in Settings (#3256)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/e5cc6efed1622696ece4cbb01852b6525c5ed1db", "message": "Bug 1393175 - Add more stories link for Pocket.  (#3258)\n\n* Bug 1393175 - Add more stories link for Pocket.\r\n\r\n* Fix insets for ipad.\r\n\r\n* Move into pocket class."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/3f65aabf2b9639a601f444748df10c946ea53147", "message": "Bug 1404335 - check if the tab animation completed sucessfully before doing any cleanup. (#3259)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/78a0620bd78b1b286a9a3b853fe1f79bf17abb42", "message": "Bug 1382704 - Update openwith strings. (#3260)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/35ff5473a87cf66498c6d5689ea975788a059133", "message": "Bug 1403862 - remove homepage button swap pref. It no longer works in photon. (#3252)\n\n* Bug 1403862 - remove homepage button swap pref. It no longer works in photon.\r\n\r\n* Forgot one."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/f2452a446ec9c41eeab47cdfcbfc700225687b5f", "message": "Bug 1403684 - Reader mode has too much padding. Reduce padding by using vw units. (#3254)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/21b3636792d13f0d5598ad92023c3fb6030637ea", "message": "Bug 1364583 - Update Private browsing mode colors (#3243) r=garvan\n\n* Bug 1364583 - Update Private browsing mode colors.\r\n\r\n* Make sure the popover styles with the arrow.\r\n\r\n* The page options button should match the toolbar buttons.\r\n\r\n* Review fixes.\r\n\r\n* review nit."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/540657b451099ddfee5d6149a944fb8e30d4f4dd", "message": "Bug 1401278 - Allow to long press suggestions. (#3208) r=farhan\n\n* Bug 1223460 - Show search engine bar when returning to search mode. r=farhan\r\n\r\nRight now, if you enter a search, load the search page, and then tap\r\nthe URL bar, the search terms are displayed but neither the search\r\nengine bar nor the most recent search suggestions are displayed.  That\r\nmakes it awkward to redirect searches to an alternate search engine:\r\nyou need to tap the URL bar before the engine bar is displayed.\r\n\r\nThis patch fires urlBar(didEnterText:) when entering overlay mode and\r\nthe location is recognized as search terms.  That will re-query search\r\nsuggestions and display the engine bar.  This does not display the Top\r\nSites/Pocket Suggestions UI as frequently, but makes re-querying an\r\nexisting search work smoothly.\r\n\r\nThe existing code paths handle extracting search terms from\r\nnon-default engines already.\r\n\r\nIn the cases where the search term is a valid URL, no information is\r\nleaked: the search term is recognized as a URL and no search\r\nsuggestion query is performed.\r\n\r\n* Bug 1401278 - Allow to long press suggestions. r=farhan"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/93d86375d60e9246c7febda3d4096f66703cebf5", "message": "Bug 1403772 - Don't animate progressbar when the page is localhost. (#3230) r=justin\n\n* Bug 1403772 - Don't animate progressbar when the page is localhost.\r\n\r\n* Bug 1404348 - Fix issue with progress bar not loading when running tests."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/869ad22405784decab7e3a003ec97e9b9791fd2c", "message": "No Bug - Remove upgrading of swiftlint in buddybuild postclone. (#3241)"}], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3581", "title": "Bug 1399083 - Remove swiftrouter and refactor our deep links.", "body": "This removes swiftrouter completely! We wern't using it for anything complicated just some basic string matching. \r\n\r\nThe new router uses enums to route around the app. I've written tests for this and although the tests wouldn't really work to test what we had before its still useful as documentation on how the deep links should work. \r\n\r\nI've moved a lot of the configuration and routing into a different file. Having things in the AppDelegate are hard to test so moving it out made sense. \r\n\r\nThere is one important change though. Deep links can now be made by any app. Before the deeplinks (not /open-url) used to make sure that it was an extension or notification before navigating. For simplicity sake I just decided to remove it. \r\n\r\n\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3571", "title": "Bug 1415720 - Separate onboarding view from configuration. This will allow us to customize onboarding via LP.", "body": "The introViewController was very tightly coupled to our current intro slides. I've abstracted out the slides into `IntroCard`s that can be created on initialization of the ViewController. This will allow us to A/B test our onboarding. \r\n\r\nI haven't made the necessary LP changes. I will probably need to clarify with the MMA team first exactly what it is they want to test and how that will be represented in the LP backend. ", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stonie08": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3150", "title": "Support for self-hosted firefox sync/auth/content server", "body": "There are instructions on how to run your own Firefox sync/auth/content server [1,2] and according to [2] it's even possible to use the self-hosted solution for Firefox for Android. Unfortunately this isn't the case for Firefox for iOS (as there's no about:config to begin with). It'd be awesome to have a small link of some kind to enter the custom URL to one's self-hosted solution on the login screen, making this feature available on the iOS version as well and having all my bookmarks with me on my mobile. \r\n\r\n[1] https://mozilla-services.readthedocs.io/en/latest/howtos/run-fxa.html\r\n[2] https://mozilla-services.readthedocs.io/en/latest/howtos/run-sync-1.5.html", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ExE-Boss": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/2901", "title": "Display a can\u2019t install extensions notification when trying to open an .xpi file", "body": "### Steps to reproduce:\r\n1. Go to the desktop version of [AMO](https://addons.mozilla.org)\r\n2. Go to the page of any extension (ex. [one](https://addons.mozilla.org/en-US/firefox/addon/application-menu/) [of](https://addons.mozilla.org/en-US/firefox/addon/firefox-about-button/) [these](https://addons.mozilla.org/en-US/firefox/addon/new-tab-image_exe-boss/)) \r\n3. Click \u201cDownload Anyway\u201d\r\n\r\n### Actual results:\r\nRight now, when a user opens an `application/x-xpinstall` file, Firefox for iOS currently displays the \u201cFirefox is unable to download or display this file.\u201d popup.\r\n\r\n### Expected results:\r\nA notification should pop up telling the user that extensions can\u2019t currently be installed in Firefox for iOS.\r\n\r\nThis popup would also display the name (and possibly the icon) of the extension in the text.", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/2901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zhongwuzw": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/2725", "title": "bug: `Find in Page` not work in `iframe` or `frame`", "body": "`Find in Page` not work in `iframe` or `frame`, we only search text in `window`'s `document` , we should search in `window.frames`'s `document` too.\r\n\r\np.s. [example url](https://m.baidu.com/?from=1000969a&normalload=1#iact=wiseindex%2Ftabs%2Fnews%2Factivity%2Fnewsdetail%3D%257B%2522linkData%2522%253A%257B%2522name%2522%253A%2522iframe%252Fmib-iframe%2522%252C%2522id%2522%253A%2522feed%2522%252C%2522index%2522%253A0%252C%2522url%2522%253A%2522https%253A%252F%252Fm.baidu.com%252Ffeed%252Fdata%252Flandingpage%253Fs_type%253Dnews%2526nid%253D15009804825284495144%2526n_type%253D0%2526p_from%253D2%2522%252C%2522title%2522%253A%2522%25E5%2587%25A4%25E5%2587%25B0%2522%257D%257D)\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/2725/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sheng168": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/2621", "title": "Support for WebDriver", "body": "", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/2621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JamesFano": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/2536", "title": "Wikipedia (+some others) not picking up latest release version num automatically", "body": "Hi! I'd like to point out a problem I have with your repository.\r\n\r\nOn Wikipedia there are some bots that update some informations on pages, such as software's version number and so on. Unfortunately, the one working on Github can't catch your last releases' version number via Github API because I suppose some flags on your repository are missings.\r\n\r\nAs you can see here https://github.com/mozilla-mobile/firefox-ios/releases?after=v2.0b2005 and here https://api.github.com/repositories/26133979/releases last build marked as \"Release\" is 1.0.0RC3 which is pretty old.\r\n\r\nCan you please fix it?\r\nThanks.", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/2536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "shree007": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/2504", "title": "Proxy", "body": "\r\nI would like to integrate Proxy for Mozilla Firefox iOS, like Proxy Switcher (\"https://addons.mozilla.org/en-US/firefox/addon/best-proxy-switcher/\" ) which is there for Desktop version, since iOS won't support addon's or extensions I need to integrate the proxy into the core.\r\n\r\nI am not getting from where I need to start. I request you to guide me on this. \r\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/2504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/2425", "title": "Private Tab", "body": " I opened my gmail account in private tab ,after some time, I closed  private tab without sign out. Again I opened gmail in **private tab** it automatically opened my gmail account . Whereas I know private tab does not store cookies and history . I am using Mozilla Firefox iOS 6.0(2).", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/2425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bhavnapanchal": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/2481", "title": "Could not access window created using window.open('about:blank' .... code", "body": "Hej,\r\n\r\nI found weird behavior in firefox-iOS, while opening new window/popup using about:blank new window created by browser is not accessible and this is happening in Firefox-iOS only not in safari.\r\n\r\nTo make long story sort i created demo javascript to produce the error please have a look at it.\r\n\r\n[Code:javascript]\r\nvar win = window.open('about:blank','windownamenew','width=1,height=1,left=5,top=3');\r\nsetTimeout(function() { win.close();}, 3000);\r\n[Code:end]\r\n\r\npurpose of above code is to create new window and then close it after few seconds.\r\nbut it not behave proper in firefox.\r\n\r\nhere is a video to demonstrate.\r\nhttps://drive.google.com/file/d/0B7fztZykJUJMcldoRHB6QTBLSUE/view?usp=sharing\r\nOR\r\n[firefoxBug.zip](https://github.com/mozilla-mobile/firefox-ios/files/812551/firefoxBug.zip)\r\n\r\nIn it you can see that safari works fine but in firefox it not.\r\n\r\n[Next-step]\r\nIf you guys approve it as an issue then i have solution.\r\n\r\n  ", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/2481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/2484", "title": "Bug #2481 Could not access window created using window.open('about:blank' .... code", "body": "ISSUE https://github.com/mozilla-mobile/firefox-ios/issues/2481\r\n\r\n[Reason]\r\nabout: url scheme was going to ignore and consider as not valid url scheme for open model/tab in browser.\r\n\r\n[Solution]\r\nAdd about in array of valid url scheme for open model/tab\r\n\r\n[Test url]\r\nhttps://bhavnapanchal.github.io/firefoxpopuptest.github.io/\r\n\r\n[Side note]\r\nI could not understand why other schemes are not added into list or why\r\nthat list is added here.\r\n\r\nI think we should remove that logic or reconfirm valid url scheme list (SchemesAllowedToOpenPopups).", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "xoudini": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/2272", "title": "Update Singleton patterns to use `static let instance=` style", "body": "Around the project there are several singletons with redundant accessors, such as the `sharedInstance` in [WebServer.swift](https://github.com/mozilla-mobile/firefox-ios/blob/master/Client/Application/WebServer.swift#L9-L13).\r\n\r\nIn Swift, static properties are by design dispatched once, so the [recommended pattern](https://developer.apple.com/library/content/documentation/Swift/Conceptual/BuildingCocoaApps/AdoptingCocoaDesignPatterns.html#//apple_ref/doc/uid/TP40014216-CH7-ID14) would suffice:\r\n\r\n    class WebServer {\r\n        static let sharedInstance = WebServer()\r\n        ...\r\n\r\nWhile this wouldn't impact the performance in any way, it would improve legibility.", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/2272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "artella-coding": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/2144", "title": "Remembering bookmark folder of last visited bookmark", "body": "Feature request : currently in Firefox for iOS if you navigate to bookmarks, traverse down the folders to the bookmark, and click the bookmark, then the next time you go to bookmarks you are taken to the top folder in the bookmark folder heirarchy. This means that you have to traverse down all the way to the folder you were last in if you want to look at other bookmarks in that folder. \n\nBoth Safari & Chrome on iOS remember the last visited bookmark folder, and take you to that folder upon the next visit to the bookmarks. It would be nice to have this functionality in firefox for iOS as well.\n\nI am using firefox 5.3 (2) on iOS.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/2144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "garvankeeley": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/1941", "title": "[code cleanup] Split BrowserViewController.swift into multiple files", "body": "This file is an overly long monolith of Space Odyssey proportions, consider splitting up by extension type for the larger extensions, like so:\n\n```\nmkdir Client/Frontend/Browser/BrowserViewController\n```\n\nand in there maybe 6-8 files along with the main BVC.swift with larger extensions pulled out:\n\n```\nBrowserViewController+ReaderMode.swift\nBrowserViewController+ToolbarDelegate.swift\nBrowserViewController+URLBarDelegate.swift (or combine these two, just giving examples)\nBrowserViewController+ etc ...\n```\n\nIf no interest, feel free to close, if interest don't mind doing.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/1941/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/4e2ed90d2bf95f9ba502b392890daa29e536b19d", "message": "Bug 1432114: Search text was set before setup call to SearchLoader (#3589)\n\nAnd was ignored as a result."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/9d1614d7aa2d3072605949f0e7eb0fb371712795", "message": "Bug 1169322: Use a temp table to speed up frecency query. (#3554)\n\n* Bug 1169322: Use a temp table to speed up frecency query.\r\nMultiple views are recalculated on every keystroke, but one can assume\r\nthe database is unchanging while in the autocomplete view state.\r\nThus, create a temporary table when the autocomplete state is entered to\r\nreduce the number of queries.\r\nAlso, joining result sets with favicon tables is adding 15-20% more time\r\nto the query, and the client code never uses this data in the result\r\ntable. The client view that shows the favicons (correctly) looks up the\r\nfavicon for a site as needed.\r\n\r\niPhone5 queries are 2.5-3 sec per keystroke, with this patch they are\r\n0.4 sec consistently. There will be some overhead to create the temp\r\n  table, however it is off main, and the overall perf is so much better\r\nI don't notice any issues.\r\n\r\nThe next thing to do is to remove the favicon sql joins from the code.\r\nI think it is a valuable cleanup task.\r\n\r\n* OptimizedFrecency lacked a proper protocol\r\n\r\n* Fix logic for delete/create and topsitesquery\r\n\r\n* Rename to FrecentHistory\r\n\r\n* Instatiate SearchLoader on-demand when search state entered.\r\n\r\n* Fix tests\r\n\r\n* Create FrecencyParams enum to encapsulate conditional arguments\r\nfor frecency query generation. Otherwise arguments can conflict such as\r\nbookmarksLimit > 0 and top sites type query performed and produce bad SQL.\r\n\r\n* Fix tests to match interface changes\r\nChange top sites cache test to explicitly use top sites interfaces, not\r\nurl frecency interface.\r\n\r\n* Address review comments\r\n\r\n* Set searchLoader = nil in BVC when exit search mode"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/ad7c0b350e79a8bd84f49f5788f7f34a692d35e3", "message": "Bug 1427992: Add negative size check to PDF scrollview crash guard (#3569)\n\nIn theory, it should be possible to stop this internal crash by blocking\r\nthe cases where bad values are passed up through the view hierarchy."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/b9c115defef93f8354dce08e3fb471047ac39fcc", "message": "Bug 1429006: stackview parent of find-in-page needs to be set full BVC width. (#3583)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/5020ac23d25ed4bf9941e9e0d63c7d12274a61b4", "message": "Bug 1427693: update blocklists (#3579)\n\nUpdated from https://github.com/mozilla-services/shavar-prod-lists\r\nCommit: e969a342103ef081438028d76a6d01b0a3ccd039"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/0d452107e66a9e97af52808fbd0b3b40b70f111b", "message": "Bug 1427693: TP webfont block breaking sites, let's not block this (#3580)\n\n* Bug 1427693: TP webfont block breaking sites, let's not block this"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/9e663f9204765983f20dfb6f3f4f0edde1e6fd54", "message": " Bug 1429882: deprecations fix for openURL and String.characters (#3577)\n\n* Part 1, openURL.\r\n* Part 2: remove use of String.characters\r\nUse String.count and String.isEmpty instead\r\n* Missed .characters usage for index, indexOf, map, reduce\r\nRemoved openURL() wrapper call in screengraph tests"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/5a86c9b756b15ecd70361b6c43399b86f7670e52", "message": "Bug 1424053 - SQL debugging for trace, explain, and timing (#3533)\n\n- Add sql EXPLAIN QUERY PLAN debugging\r\n- sqlite trace added.\r\n- Add perf timing to SwiftData"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/16ea51497cbdeff81c36b199f5a48c2d39e90645", "message": "[nobug, cleanup] TabPeekViewController accessibilityLabel incorrect (#3500)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/dbdf907fba8d923c5c891c326863588d22428387", "message": "Bug 1417117 - Make DB handle acquisition off-main, add back Cancellation  (#3524)\n\n* Bug 1417117 - Make DB handle acquisition off-main, add back Cancellation\r\nPART 1 : add back cancellation logic of a deferred db operation.\r\n\r\n* PART 2: Move connection acquisition to bg thread. Typing is liquid smooth now.\r\n`withConnection` calls `getSharedConnection` which can end up scheduled on the main thread.\r\nBecause of the single queue of DB ops, the main thread will block while DB operations are running.\r\nOn startup, this is adding multiple 1-sec main thread lockups. For this bug there are multiple\r\ndb operations happening and blocking happens on the main thread.\r\n\r\nBasically, the existing implementation is a workaround to fix background crashes.\r\nKilling the performance of the entire app is not the way to workaround the crash.\r\nSwiftData already has a flag for 'closed' that is set when the db is shutdown, if there is a bug with backgrounding still, we need a better solution than what was done here.\r\n\r\n* Post-review fixup, 1) no weak, 2) close() func, 3) remove comment\r\n\r\n* Updates for weakification\r\n\r\n* Use WeakRef<T>\r\n\r\n* Add queue suspend/resume"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/c0aea86f063b5cf02f4d76c1a66b680353c0b682", "message": "Bug 1418641: ReaderMode font default reduce by 2pts (#3503)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/345112875c657e2f959d9a0ea4876dc1a4f2d875", "message": " Bug 1418366: Night mode: set webview bgcolor to black (#3502)\n\n* Bug 1418366: Night mode: set webview bgcolor to black\r\n\r\n* Post-Review update\r\n\r\n* Post-review part deux"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/cfe4a043dce4ed1f7e0bdde2fe9513c5f2603bdb", "message": "Bug 1420443: Cleanup HelperManager, no strong webview ref (#3501)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/9789fe159a3ba596022511d610f686438ecbb044", "message": "Bug 1417152: Fix bad comparator in scrollview swizzling (#3509)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/8ea0e15803363b5bf66e1048f0cb7c8a36247421", "message": "Bug 1417152: guard against NaN bounds being set on the scrollview (#3488)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/c30a30a310e16a8b1ca5385f30acd029678c0790", "message": "Bug 1419057: Ensure Tab is weakly held by closures (#3490)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/8dd7868241e08024f3c3f113661dcf726c0427af", "message": "Bug 1417659: L10N screenshot for tracking protection long-press-reload (#3461)\n\n* Bug 1417659: L10N screenshot tracking protection long-press-reload\r\n\r\n* Address review comments (partial/attempting)\r\n\r\n* Review update: move enum to toplevel+fileprivate, is nicer there"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/83f278b2817315a01eed737230d5fe80012e9895", "message": "Bug 1409090 - Long-press reload button to disable content blocker (#3430)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/73a86c3261d0a1973186e2e623b43d1ff473f935", "message": "Bug 1415687: Navigation keeps scroll position w/ showToolbars (#3444)\n\n* Bug 1415687: Navigation keeps scroll position w/ showToolbars\r\n\r\n* Review updates"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/20ba0e0088f5547f00a148ec76268b58261fd1d5", "message": "Bug 1415830: goBack() key command not working (#3456)\n\nRenaming the selector fixes this; I am assuming because 'goBack' is a function name that appears multiple times in the project\r\nthe swift selector lookup has a bug. As a safety measure to avoid future selector name collision, add a suffix KeyCommand to all selectors used as key commands."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/a34b0547cb578bad20c22485c5f32b15078023bc", "message": "Bug 1416211: QR button was computed var, not lazy (#3440)\n\nAlso make it an InsetButton for greater hit area"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/049a35158af48267e137a2af8ffc6b5f4471ae90", "message": "Bug 1397934 - Followup: An unlock was changed to a lock, and crashing (#3432)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/952a2dfd02c030793d3c256ded460aa75684db97", "message": "Bug 1412897: UIPasteboardChanged notification infinite loop (#3401)\n\nDisable the notification observer while calling UIPasteboard, as that triggers notifications."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/199cd71a873c7980a82176741fcb5dfc2e34d455", "message": "Bug 1411966: reload history panel after clear private data (#3389)\n\nAlso change off-main-thread bind() to use main thread for the clear history completion block."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/eece882001c49f1a3d9dc9cae874cec0c32e72e0", "message": "Bug 1411633: Add padding to bottom of action sheet (#3375)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/a56e7d7138e30e56d6f27318c7a08435bfc7d157", "message": "Bug 1403833: only open external urls for tapped links (#3376)\n\nDo not do this for JS-navigations."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/1a267d63da7efc6f0077f7263e0ac4e632a964c9", "message": "Bug 1411702: clear the page metadata when clearing history items (#3382)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/392bb1558d5ecefc2f79af1d60ee6e217d186246", "message": "Bug 1410916: Beta-only sentry log instead of assert() (#3368)\n\nThe content blocker has some odd/undocumented code paths where return values are optional,\r\nadd Sentry reporting"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/dd1928e70de161e288418b575c5a2d1dd5198150", "message": "Bug 1411389 and 1411044: update telemetry ios to v1.0.6 (#3367)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/9887810ac6d411a40c59c33a67c010e3072d9aa3", "message": "[nobug] PR #3354: fixing bad merge (#3364)\n\nI rushed the conflict resolution and removed needed code (a KVO observer in the deinit, not a NotificationCenter observer)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/bbc597a52b902c09fc9d837826c342fbe4deef3c", "message": "[nobug] update telemetry-ios in Cartfile.resolved (#3348)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/7201a8030541c17a187819ad8527c49b3946cbd3", "message": "[nobug] Disable telemetry-ios Sentry reports from simulator (#3331)\n\nhttps://github.com/mozilla-mobile/telemetry-ios/issues/55"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/06f3bbbc3c7c8570c465bb80e78d045db4db6316", "message": "Bug 1410179: Remove unused Hide Images feature flag (#3333) r=farhan"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/b029d64addc87530bfdaf78777c6ae33cc09ef0e", "message": "[nobug] update telemetry in carthage to use master branch (#3319)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/dc2a11829c5aeb028f07ebe0b377e4639acc1399", "message": "Bug 1409068: use error.debugDescription for internal Sentry logging (#3309)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/49cf8712bf58a31222062648b7096e0f8ddfb797", "message": "bug 1385845: Detect PDF mime type, and don't animate-block to show toolbar (#3302)\n\nAvoiding using animation-block syntax to show the toolbar works around this bug,\r\nand showing is instead performed like hiding, that is in-sync with touch-drag."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/0dc5c3fdc286908074d474300fc96480558c71b0", "message": "[nobug] Cartfile.resolved update for latest telemetry-ios (#3292)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/2ff3eb8c9d503ff4554a3f55c125f9d854e1ce6c", "message": "Bug 1405331/1407995: Hide Image with CSS in addition to ContentBlocker (#3282)\n\nBug 1405331 and 1407995: Hide Image with CSS in addition to ContentBlocker"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/2b5985dda508a3e003cafa8ea5ab704ea65e1c42", "message": "[nobug, beta-only] Re-add sentry logging for unified telemetry (#3275)\n\nWe were getting spammed with upload error messages, this should ensure\r\nthese are aggregated in Sentry. I hope."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/610185705a4dd0328a3de3f8411b16df1641dca8", "message": "Bug 1407396: Sentry interface now has 'extra' field (#3274)\n\nThis is for non-indexed metadata"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/b22ef91c12596d170f62b5654ecab04c8c2e9576", "message": "[nobug] Update telemetry-ios in Cartfile.resolved (#3267)\n\nCloses issues\r\nhttps://github.com/mozilla-mobile/telemetry-ios/issues/32\r\nhttps://github.com/mozilla-mobile/telemetry-ios/issues/25"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/4051ed3a3fad3e8679a180252d66e3d07fd56b31", "message": "Bug 1405079: Add back `defaultNewTabExperience` and `defaultMailClient` (#3263)\n\ntelemetry-ios lib now has facility to add arbitrary data to core ping JSON."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/ebe43649f18a9ad2445ceb34e910d876210aebad", "message": "Bug 1405730: Wrong telemetry setup code (#3257)\n\n* Bug 1405730: Wrong telemetry setup code\r\n* Build error, need to use rawValue of enum\r\n\r\n* Update cartfile as setup changed in telemetry-ios"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/276b10cdf16ebf7936b349ee9d50e803f354302d", "message": "Bug 1402483: Remove BVC logging spam (#3250)\n\n* Bug 1402483: Remove BVC logging spam"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/63752ecf74acf8d821270d0a88d2b00ecba23381", "message": "Bug 1389649: Test bookmark deletion (#3180)\n\nTests 1) cannot delete non-root view bookmarks\r\n2) root-view mobile bookmark can be deleted"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/3650fbba316aeaeea6db358907cf00ad142d6de7", "message": "Bug 1405131: Sentry logging for telmetry uploads (#3246)\n\nBug 1405131: Sentry logging for telemetry uploads"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/71b2dce20226fad7a5d56d52eaa40d7d7bb00d28", "message": "Bug 1405086: don't show hide images on ios 10 (#3248)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/44b7d542a65da24d53f6abe7c3925375756dc426", "message": "Bug 140297: integrate new unified telemetry library (#3214)\n\n* Bug 1402976: Separate old telemetry from new\r\n- rename existing telemetry to SyncTelemetry\r\n- remove existing CorePing code\r\n- add telemetry-ios to Cartfile\r\n- add a constant for getting pref for data sharing on/off\r\n* Hookup new telemetry library.\r\n* Use telemetry-ios with patch for sequential uploader\r\nand built-in AppEvent management"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/a0188c8e05bd8c809746e409e34e6a91f89c9b65", "message": "Bug 1404265: crash: tab needs to init content blocker before didCreateWebView (#3238)\n\nRemove the assumption that an Tab object will have helpers installed.\r\nThe ContentBlockerHelper now gets init'd in Tab init, and then installed to the\r\nwebview in didCreateWebView. This makes more sense in retrospect, not all of the\r\nclass function is a webview helper, unlike most of the other helpers."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bwoodruff": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/1319", "title": "Consider supporting TextExpander SDK for text expansion", "body": "TextExpander offers an SDK that allows text expansion in 3rd party apps from Bluetooth keyboards, etc:\nhttps://smilesoftware.com/textexpander-ios/sdk\n\nPlease consider adding support for this to Firefox for iOS.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/1319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vbudhram": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/f2b6a8d80fa7541c492340307599575c1bc5a36d", "message": "Bug 1414010 - Adds support for checking that lean plum is enabled via locales and lean plum config value (#3471)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/4b81a9dddebcc9d4a514989aa690c2b018275eeb", "message": "Bug 1404089 - checks for a sign-in code query param and launches fxa (#3438), r=@farhanpatel"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/165cbc2a0852b7f1828fd3c3b1de4a9f879bacaa", "message": "Bug 1411293 - Add ellipses truncation for FxA settings email/username (#3371)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/a55d85bd54d62b8116e970e5516a733c421a09be", "message": "Bug 1411297 - fix fxa account confirm page being cropped (#3370)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/22030505b4fa4ea89ba245f37399242b78ef5f80", "message": "Bug 1412038 - Disable FxA Leanplum A/B testing (#3387)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/b81fec9c8082860eaa9a8c5394cbc4b806bb4e1c", "message": "Bug 1400871 - Add FxA Leanplum AB test flag (#3207), r=@jhugman"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/3de78602b0de2e9cb9b93323bccfc09e75275389", "message": "Bug 1404089 - When using defer deep link load FxA signin first (#3290), r=@farhanpatel"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/9e75635bfd1df567839719e034fc38070ccd1bcd", "message": "Bug 1394436 - Update to `Disconnect Sync` (#3255), r=@justindarc"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "justindarc": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/21bb6e3166c5af9724e53d39a3e5718daa413644", "message": "Bug 1431438 - SQL error or missing database no such column: f.type (#3587)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/2d5ca06880b9288be74b7eb1a6cb7c937292387d", "message": "Bug 1408127 - Integrate a pre-processor for user scripts (#3585)\n\n* Bug 1408127 - Integrate a pre-processor for user scripts\r\n\r\n* Forgot about the metadata parser.\r\n\r\n* Addressed review nits."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/e26f073c9f8caef6c5c5beef8a68f96c99f6d97f", "message": "Bug 1430753 - [Regression] Pin to top Sites does not work (#3584)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/77b5fdc20d21e3016780076e4216d75f2d2dd483", "message": "Bug 1406165 - Remove Favicons.js as a TabHelper. (#3541)\n\n* Bug 1406165 - Remove Favicons.js as a TabHelper.\r\n\r\n* Switched from NotificationCenter to TabEvents.\r\n\r\n* Addressed review comments. Fixed tests.\r\n\r\n* Addressed more nits and that damn DevelopmentTeam stuff in project.pbxproj :-/"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/1c40fd242dea0d820650812bdb3aa06ea0af1d3e", "message": "Bug 1424727 - Firefox will crash while syncing after disconnecting an\u2026 (#3540)\n\n* Bug 1424727 - Firefox will crash while syncing after disconnecting and reconnecting sync account on iOS device\r\n\r\n* Addressed review comments."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/5c4867c3187d74539040a158c78e9878a547ca8a", "message": "Bug 1424339 - Update telemetry-ios to v1.0.10 (#3537)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/ac844b12cf5f68d62402c8740f75ca62e49e0f80", "message": "Bug 1424345 - SyncTelemetry ping may incorrectly format dates to the \u2026 (#3536)\n\n* Bug 1424345 - SyncTelemetry ping may incorrectly format dates to the wrong calendar\r\n\r\n* Addressed review comment."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/a9ada0c8595144c86393e67b06b2ee9d49ccdc08", "message": "Bug 1422396 - Add UI event telemetry probes (#3516)\n\n* Bug 1422396 - Add UI event telemetry probes\r\n\r\n* Added event telemetry probes for settings changes and reading list actions.\r\n\r\n* Remove unused UNUserNotificationCenterDelegate telemetry probe.\r\n\r\n* Added event telemetry probes for Bookmarks.\r\n\r\n* Get UserDefaults settings.\r\n\r\n* Use tag instead of SHA in Cartfile.resolved."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/761e424d551f9624bd6d5d23761c60615078760c", "message": "Bug 1417186 - Crash: BrowserViewController.addCustomSearchButtonToInputAssistant(_:) (#3457)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/ec90268d63efe49e317ae0729128071d81ce6c38", "message": "Bug 1397625 - <form method=\"post\" target=\"_blank\"> not send variables\u2026 (#3434)\n\n* Bug 1397625 - <form method=\"post\" target=\"_blank\"> not send variables to server on Firefox for ios\r\n\r\n* Addressed review nits."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/3a438b156a21766ff5f70e87ae7d357d3d19c659", "message": "Bug 1418075 - Memory leaks in FxA (#3469)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/8324eb6aa4f84391138d89319e41e4604b6208ac", "message": "Bug 1418057 - Memory leak in KeyBundle.swift (#3468)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/772ffcc635092591a02de95f5d054f519c5f6c0b", "message": "Bug 1416339 - Forced unwraps in QRCodeViewController causing crashes (#3439)\n\n* Bug 1416339 - Forced unwraps in QRCodeViewController causing crashes\r\n\r\n* Addressed review comments."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/ba67c0a4063d54405937758292b6131a68c22392", "message": "Bug 1416361 - Crash: SwipeAnimator.animateAwayWithVelocity (#3441)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/66f010f44cb7120a27e49955308646c63705e8db", "message": "Bug 1414257 - Cookies are not cleared when leaving private browsing with \"Close Private tabs\" On (#3417)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/aeb80d641282df23cd19a24e23abee08a61aa1ad", "message": "Bug 1411549 follow-up -- make frameworks optional (#3409)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/1f0f709c959f68043c91477106af47b4875d5f0d", "message": "Bug 1411549 again - Operation Shrink NotificationService (#3404)\n\n* Bug 1411549 again - Operation Shrink NotificationService\r\n\r\n* Conditionally import dependencies in Profile."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/d80fd66a745bd884f050799c6bb57eda2d076585", "message": "Bug 1410496 - Night mode CSS follow up: background-image gets inverted (#3397)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/fd2e27a0e6861cae704882dac7e344548b97af0a", "message": "Bug 1412270 - \"Go to copy link\" toast is not displayed on build 10.0(7233) (#3396)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/9966bf5c25c2b426497af875568c5e50308803a4", "message": "Bug 1411549 - Empty notification received after re-connecting the account (#3391)\n\n* Bug 1411549 - Empty notification received after re-connecting the account on desktop\r\n\r\n* Addressed review comments."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/9b5dc47e2f864cd6a71d60b0f030597b496beefd", "message": "Bug 1411976 - Crash: _swift_arrayDownCastConditionalIndirect in TabManager.swift (#3386)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/23cd239ad073307a984a5855901d5e49a52621ad", "message": "Bug 1411653 - Crash in TabManager.removeTab() caused by window.close() (#3377)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/5117327101c4b4a03fd3bcc78bba159e0a382fec", "message": "Bug 1386874 - Startup crash in TabManager.removeTab() (#3381)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/d0d126c5bbf89a6cca51129b3f164dbc520ad01d", "message": "Bug 1410085 - Bookmarks query getRecentBookmarks in highlights doesn'\u2026 (#3366)\n\n* Bug 1410085 - Bookmarks query getRecentBookmarks in highlights doesn't return non-local bookmarks\r\n\r\n* Addressed review comments."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/1e85c7f856bf3b7dd72cd09845a1de3c4fce5795", "message": "Bug 1410942 - Don't adjust brightness when using Night Mode (#3362)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/49b84434f60aa24782e43bb916b1173b6cfd166f", "message": "Bug 1405604 - [Regression] The clipboard is incorrectly cleared after\u2026 (#3353)\n\n* Bug 1405604 - [Regression] The clipboard is incorrectly cleared after following specific steps\r\n\r\n* Eliminate the need to re-check the clipboard when backgrounding the app.\r\n\r\n* Don't prompt for links copied in Firefox.\r\n\r\n* Clean up clipboard notification observer."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/441feb539d61cdd7d91d14a6ed48b362c9553ad1", "message": "Bug 1408363 - Allow users to send image URLs to other devices (#3343)\n\n* Bug 1408363 - Allow users to send image URLs to other devices\r\n\r\n* Don't use the broken build system. It can't deal with predicates in Info.plist :-("}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/0ea24ae227c028ab3609da44fd431e84b3b7774c", "message": "Bug 1409368 - Night mode needs some CSS magic (#3324)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/f04a94ea636ea596ddae3533e73aafc2b461d251", "message": "Bug 1211348 - Don't restore private tabs after killing the app if \"Close Private tabs when leaving private browsing\" is enabled (#3340)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/13cb9c5407bbaf01d275622e6b85d38a5a35a310", "message": "Bug 1409017 - Link is opened in Safari when tapping \"Open Link\" via 3DT Peek & Pop (#3320)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/e986d44c2c9df1e6fc0bd5eafd91924c00e200a9", "message": "Bug 1408837 - Long pressing on links opens them (#3314)\n\n* Bug 1408837 - Long pressing on links opens them\r\n\r\n* Added comment linking to original referenced WKWebView source."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/25a900615db8954db633386f05e43b092fa57212", "message": "Bug 1407954 - Links are not highlighted when long pressing on them (#3301) r=farhan\n\n* Bug 1407954 - Links are not highlighted when long pressing on them\r\n\r\n* Dismiss popover on iPad when drag-and-drop is activated."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/b4d1a57fb16375139cb2e276a254d08a0e09b45f", "message": "Bug 1407233 - Wrong context menu can be triggered on some links when \u2026 (#3280)\n\n* Bug 1407233 - Wrong context menu can be triggered on some links when long tapping on a area near the text\r\n\r\n* One-liners FTW"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/39c467d34699ddfc61e2c811b5245c9d3322dfcd", "message": "Bug 1404874 - [Regression] Context menu is triggered when single tapp\u2026 (#3271)\n\n* Bug 1404874 - [Regression] Context menu is triggered when single tapping on some images\r\n\r\n* Addressed review comments.\r\n\r\n* Deleted Dangerfile."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/cdd2c019a9f2a4202315b8f6f3a865394a3bba9f", "message": "Bug 1404087 - Make BrowserDB/SwiftData async by default (#3237)\n\n* Bug 1404087 - Make BrowserDB/SwiftData async by default\r\n\r\n* Just remove 'synchronous' argument from BrowserDB to prevent blocking calls."}], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3543", "title": "Bug 1420267 - New (about:blank) tab instead of Google Maps app", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3455", "title": "Bug 1417034 - Don't treat SQLITE_NULL as an integer.", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "st3fan": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/439900656e4efd2d2799086224366f7bf5c20612", "message": "Bug 1432221 - Upgrade Sentry client to 3.11.1 (#3588)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/eacfe2149ca03bdcf272fbed5385e01455caaf77", "message": "Bug 1416088 - Allow Leanplum to be tested in Development Mode (#3532)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/f49020bf40226466f1e61a9aeb96db23f2e56bc0", "message": "Bug 1422949 - Upgrade Leanplum to 2.0.4 (#3523)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/78743a93bb77c14e8faca7b201fb75be674e89f1", "message": "No Bug - Updating version to 10.4"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/26b04d9a37c51d3e5baa0e96513552435496de06", "message": "Bug 1418039 - Upgrade Sentry client to latest version (#3467)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/b330c5e898393f26f7f0407af9b05b34ed29cfcf", "message": "Create PULL_REQUEST_TEMPLATE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/d0d811dd8d2186d4000156749100ddc8657290bf", "message": "Bug 1416075 - Only show the What's New page on major upgrades (#3435)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/1a905a216b4e3110e720d4d0161556d4f9bc6960", "message": "Bug 1414239 - Do not include Leanplum API keys in Simulator builds (#3415)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/021cd38ed804b9cac7d1b2bdc7afb683cb5aeae0", "message": "Bug 1408101 - Update Leanplum SDK to 2.0.3 (v9.x) (#3374)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/c07bd1a47293f32bf720bbef98308260afa934c5", "message": "Bug 1411075 - Expand Leanplum to fr, it, id, pt-br, pl, ru, es_ES, es_MX locales (#3378)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/a7bb2873b143b5c319a33412a2a4296526d6e8ec", "message": "Bug 1407825 - Remove force tries from SQLiteRemoteClientsAndTabs (#3286)\n\n* Bug 1407825 - Remove force tries from SQLiteRemoteClientsAndTabs\r\n\r\n* change if let to guard"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/1f9628983fc16a57f072bb8f75e9c18f2ee9477b", "message": "Bug 1407862 - Remove force casts and unwraps from AdvanceAccountSettingViewController (#3289)\n\n* Bug 1407862 - Remove force casts and unwraps from AdvanceAccountSettingViewController\r\n* Bug 1407862 - Remove force casts and unwraps from AdvanceAccountSettingViewController\r\n* Bug 1407862 - Remove force casts and unwraps from AdvanceAccountSettingViewController"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/5570a7f3b07b7b3f6f24c279dc22d066c0c5f15b", "message": "Bug 1408654 - Prisjakt search engine does not work (#3322)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/3b60d82e662f8bf64652443ae0252ea8901c1098", "message": "Bug 1407834 - Remove force casts and unwraps from ContextMenuHelper (#3287)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/937c3303cce16978946479ca60a16b0bd5b94531", "message": "Bug 1408031 - Strings cleanup (#3291)\n\n* Bug 1408031 - Correct spelling mistake in Strings.PocketTrendingText\r\n\r\n* Bug 1408031 - Unexport Advanced Account Settings\r\n\r\n* Bug 1408031 - Update IDs for SendUsage strings\r\n\r\n* Bug 1408031 - Update Menu.SharePageAction.Title to use ellipsis\r\n\r\n* Bug 1408031 - Better comment for the Settings VC Title"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/47832336e28e1b5a427e7821629107a4625bac8c", "message": "Bug 1407704 - Update Adjust SDK to v4.11.5 (#3281)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/60448ec998bcf449866948cb796d25449dd832d7", "message": "No bug - Updating l10n-screenshots.sh with updated l10n repository name"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/8e83d57350da9cbd182c41fa4a4800c6e580a00c", "message": "Bug 1393787 - Remove L10N scripts from firefox-ios repository (#3262)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/88d7541df49bcc1aa694f8cf4455ba456d518e20", "message": "Bug 1403985 - Only show Pocket Stories for specific locales (#3231) r=farhan"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/efd06db1364681a16ae4685bb5d886b935377697", "message": "Bug 1281845 - Tests must be forced to run in en_US (#3235)"}], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3496", "title": "Always enable file sharing", "body": null, "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/62764532", "body": "NSDictionary takes AnyObject? and I think the JSON serialization does proper checks on that. The test for nil is just there because the backend expects a string and not a nil value.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/62764532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/63663832", "body": "This looks good. Let's merge it in.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/63663832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/63666563", "body": "Other than the Locking code I think this is good to merge. I'm no against the Locking code but I think we need to figure out if we really need it.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/63666563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/63668871", "body": "Looks good to me.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/63668871/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/63706606", "body": "Not looking at details of the actual code, I think this is fine. Brute force away.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/63706606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/64411723", "body": "Manually merged.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/64411723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/64424745", "body": "This is an interesting solution but I think doing it with a `UIScrollView` subclass is too complicated.\n\nHow about this instead:\n- Create a plain container `UIView` and put the login items in there\n- Add the container to the viewcontroller\n- Start listening for keyboardWillShow and keyboardWillHide notifications\n- When you receive a show or hide notification, resize the containerview: decrease/increase its height with the height of the keyboard. (the notification's `userInfo` contains the keyboard height and also animation settings - if you animate the containerView height change with the same settings you get a nice synchronous resize of the login dialog while the keyboard goes up)\n- In the container view you can use just constraints to make sure the dialog items are properly positioned. If they all fit in the top part when the keyboard is showing then there should be no dynamic changes needed. Otherwise you can also show/hide or reposition items in the notification handlers. \n\nIf you want to use autolayout for the container view, then you can add constraints to it to snap to the viewcontroller's view as usual. For the constraint at the bottom, keep a reference to the `NSLayoutConstraint` instance that you created and then instead of changing the container's view `frame`, just change the constraint's `constant` property. (Which should be padding between the bottom of the viewcontrollers view and the container view. Changes to constraints are animated if done within an animation block.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/64424745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66398085", "body": "Looks good to me! Merge it!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66398085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66624157", "body": "@ncalexan I can't comment inline on `TokenServerClient` because it was already in the repo so here are a few things that I noticed:\n- I think `TokenServerToken.uid` should be a int64. The SQL schema for our server uses a BigInteger which is int64 on Postgres.\n- Maybe you already have something in mind for error handing, but I was thinking of adding a `isUserRecoverable` or `canBeRetried` flag to errors that are returned. This does not make sense in case of malformed JSON of course, but if there is something like a temporary network error or a HTTP 5xx Try Later then we can set that flag which can result in code that retries later or some UI popping up asking the user to try it again at a later time. Right now it is difficult to see what is fatal and what is not.\n- For all the different `NSError`s, should we assign a unique `code`?\n- Do we need to localize those errors? Not sure if they will be presented to a user. If true then  we simply need to use NSLocalizedString() for the error message.\n- Should every client have it's own `Alamofire.Manager` ? Or should we share a single instance that can be used for all http clients in this project? (I don't know)\n- Instead of `TokenServerClient.tokenFromJSON` .. maybe it is nicer to have a `TokenServerToken.init(json: JSON)?` If that initializer returns an optional then it can also do the validation and simply return null if the JSON is invalid or incomplete.\n\nThe tests look good. Are we going to add integration tests later that talk to a real token server? I have some at https://github.com/st3fan/bookmarks/blob/master/FirefoxAccountsTests/FXATokenClientTest.m - We can ask Services to spin up an instance on EC2 and run the token server.\n\n(To make testing this stuff easier I have written a REST API to generate MockMyID assertions. That means we can skip the MockMyIDFactory and just obain an assertion and key pair from a simple REST API and then submit that to production and staging token servers to see if our code is compatible against those. See https://github.com/st3fan/moz-mockmyid-api/blob/master/README.md)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66624157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66995162", "body": "Thank you very much for the contribution @TBonnin. I think @thebnich would probably want to deal with this PR since he is currently refactoring the surrounding code to deal with multiple tabs.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66995162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67010504", "body": "I also see Apple sample code use `arc4random`.\n\nSee https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man3/arc4random.3.html - which has a note:\n\n> There is no need to call arc4random_stir() before using arc4random() functions family, since they auto-matically automatically matically initialize themselves.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67010504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67022638", "body": "This looks like a great first iteration. Lets merge it.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67022638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67490415", "body": "Looks good!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67490415/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67503357", "body": "I have updated the delegate method and some variable names so that it is more clear what the individual strings mean. I'm keeping the `LocationTextField` because I think we mostly prefer the longer more descriptive names.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67503357/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68747267", "body": "_Would you be calling the (expensive) system layout size methods more than once?_ - This is a straw man. It takes a few milliseconds to layout a screen like that. Performance is not an issue.\n\nBut let's merge this in. Or was this fixed with another bug? I saw something keyboard related flying by.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68747267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68793287", "body": "@wesj Yeah I think you are right about doing async operations. Unless we can somehow guarantee that lookups are within a certain time range. (But maybe our history API is async anyway, which means we have no choice)\n\nNot entirely sure yet how to map async lookups to the text field yet. We may have to cancel previous lookups if keystrokes happen before a running query is finished. (How likely is that?)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68793287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68793452", "body": "@wesj _Not having the caret when the completion is active seems sad. Follow up to fix?_ - I've followed the visual design of completion in Safari.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68793452/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68881947", "body": "This is obviously work in progress. Looks good to me.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68881947/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70193040", "body": "I am going to close this PR and create a new one. I am also going to remove the (toolbar) UI bits from this PR and submit a separate PR for a new location bar that includes a Reader Mode button.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70193040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70376564", "body": "This needs to be rewritten with all the recent changes regarding the location field. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70376564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70376640", "body": "Just a quick note that I'll take a look Monday to see if we can merge this\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70376640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70556378", "body": "Yeah I like that idea. I'll write some utility functions or a subclass to deal with that.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70556378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70924139", "body": "I'll look at this bug tonight.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70924139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71469422", "body": "I am going to merge this with the comment that this is not perfect but it will give us a much better idea of what kind of usable information WebKit errors contain. I am also going to file a followup but to turn these error messages into a more final design.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71469422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71578675", "body": "Just a quick note that on second thought we think it is better to revert this merge. There are a couple of things in the changes that we want to do in a different way and we need to give this some more thought.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71578675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72128278", "body": "I think that setting needs to be in the project that generates the framework? So in `Storage/Storage.xcodeproj/project.pbxproj` ?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72128278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72128940", "body": "The extensions should already have it. I am pretty sure I fixed that a while ago because I saw the same errors.\n\nWhat the flag does is set some preprocessor flag that trigger warnings when you use some specific APIs when compiling your framework code. (An extension is a framework). This is why it needs to be part of the target that builds the framework and not in the target that consumes the built framework.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72128940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72129376", "body": "Confusion resolved. I did not get the warning for the extensions but for the dependencies:\n\nhttps://github.com/mozilla/firefox-ios/search?utf8=\u2713&q=APPLICATION_EXTENSION_API_ONLY\n\nSnappy and Alamofire.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72129376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72223808", "body": "With regard to namespacing .. can we do a similar thing as in https://github.com/mozilla/firefox-ios/pull/116/files#diff-2 ? I am also going to follow that pattern for the ReaderMode.js code.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72223808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72272635", "body": "Looks like checking the state for `Began` is a common way to do this when having a `UILongPressGestureRcoginzier` on a `UIButton`. Looks good.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72272635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72708381", "body": "We inject our code as a user script that runs when the page has loaded.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72708381/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73175038", "body": "Just a quick note that besides the Fennec Aurora build, I can also still successfully run the app in the simulator and on the device.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73175038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73238993", "body": "Looks good to me. I'm not a reviewer for this bug but I would give a +r :-)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73238993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73240317", "body": "@shaleengarg Hi there! All our bugs and tasks are in Bugzilla. We currently do not have a whole lot of bugs that are marked as good starter bugs, but we will work on that. If you want to make a contribution then I would suggest to start playing around with the Swift programming language.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73240317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74252437", "body": "I'm getting a build failure:\n\n```\n/Users/sarentz/Mozilla/firefox-ios-thebnich/Client-Bridging-Header.h:6:9: error: 'SWXMLHash/SWXMLHash.h' file not found\n#import <SWXMLHash/SWXMLHash.h>\n        ^\n<unknown>:0: error: failed to import bridging header '/Users/sarentz/Mozilla/firefox-ios-thebnich/Client-Bridging-Header.h'\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74252437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74253110", "body": "Btw. This is awesome. Lets work through the build failures and get this going. We can also do this side by side next tuesday if that is easier. I don't want to rush it because keeping the builds working is high priority.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74253110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74254334", "body": "It looks like this patch or Carthage changes the default Build Configuration for the Archive phase back to Release instead of FennecAurora.\n\nI changed the Client scheme to change it back to AuroraNightly, but then the project does not build because the dependencies pulled in by Carthage are built using the Release build configuration while our app is using the FennecAurora one.\n\nI solved that by simply making our dependent projects aware of the FennecAurora configuration but I don't know if that is possible with this new setup because we basically pull the dependencies in as-is and cannot make changes to those projects.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74254334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74256097", "body": "Also see https://github.com/Carthage/Carthage/issues/314\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74256097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75619165", "body": "@ncalexan yes, Fennec is the local developer build.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75619165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76047700", "body": "@sleroux Just a quick note that I will review and merge this today or tomorrow. Proooobably tomorrow.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76047700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76808203", "body": "Yeah I'm asking our product manager to provide the email and a small piece of template text that we can put in the email  by default.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76808203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77229287", "body": "@jhugman can you also please commit the `Cartfile.resolved` after you have run `carthage checkout --no-build --no-use-binaries` - Our build systems expect the `Cartfile.resolved` to be up to date. (Right now the entry for XCGLogger is missing)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77229287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77640160", "body": "Note that the change to `Storage/ThirdParty/SwiftData.swift` is part of the PR that this one builds on. Please review #202 first.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77640160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77668690", "body": "When i try to build this, it fails on not finding `FirefoxAccountConfiguration`. Maybe this patch needs to be rebased?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77668690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77668810", "body": "@ncalexan do you know what happened here? Is `FirefoxAccountConfiguration` missing?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77668810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/81915318", "body": "I squashed and merged this manually.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/81915318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9365125", "body": "Yeah I am ok with that.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9365125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9365589", "body": "Nope. User scripts are loaded globally. So any page that uses a top level variable named ReaderMode will run into trouble.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9365589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9365621", "body": "On Android it is used to display error messages. The flow on Android is a bit different and I don't think we will actually use the reader-message element for that.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9365621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10058413", "body": "This is not correct and actually a bit dangerous. For example in case of `tel:` we do not blindly want  to pass that to `UIApplication.openURL()` because that will actually result in a phone call immediately.\n\nWe should not default to `UIApplication.openURL()` - We can _only_ do that for schemes that we know are OK to pass to the OS. In case of `tel:` we must show a confirmation dialog first.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10058413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10220084", "body": "No I changed that actually because it took me a while to find that out. Either I was going to rename `wrapInEffect` to `addWrappedSubview` or remove the `addSubview` from wrapInEffect. I chose the former because i think that has the least surprises.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10220084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10220135", "body": "We have plans to handle a long press to customize the behaviour of that button so I'll leave it in for now.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10220135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10825733", "body": "Hi @stephencelis .. So I changed a few things:\n- Changed the deployment target from Automatic to 8.0 - Because I am unable to change this value on dependencies that are pulled in (automatically on a CI server)\n- Set `APPLICATION_EXTENSION_API_ONLY` to `YES` to make the code compatible with app extensions\n- Removed the SQLCipher targets\n\nThe first two may be things that you want to cherry pick from my fork. It makes the project more compatible. I don't think there is anything 8.0+ specific in the project anyway.\n\nDisabling SQLCipher was more a workaround for us. The project without SQLCipher builds fine locally both for simulator and device but when we do CI builds (on Xcode Server) the build always fails on SQLCipher. I tried to do this the right way (not sure what that is though) without success so I ended up just removing the targets completely.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10825733/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10867690", "body": "Unclear what the correct way to do this is. Apple has preprocessor macros that can check for availabilty in an app extension but I don't know how those translate to Swift. Lets do this for now until we find something better. Maybe add a `TODO` in the code so that we can find it later?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10867690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10963096", "body": "Yeah don't worry about migrations during development. I think that is something we can start to worry about when this app has been released.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10963096/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/19916175", "body": "Can we enable this code? I disabled it because it did not work for some reason. But I think it will be good if we can open bookmarks in Safari.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/19916175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20292840", "body": "Yeah I don't think the accountManager should be so deeply integrated in the `TabBarViewController`. Ideally the `TabBarViewController` is just a generic component very much like the standard `UITabBarController` is. I think it should just manage a bunch a view controller and a button bar but not know anything about the details of those view controllers.\n\nThis also means that all the view controllers can simply be `UIViewController` instances instead of `ToolbarViewController` instances. (Why would the Bookmarks view have to know anything about the account manager?)\n\nI think we need to design things, specially view controllers, as much as standalone components that you can take and use in a different app. Not that we would do that at this point, but if that is possible then it is a good indication that you have decoupled it correctly.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20292840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20293007", "body": "It is better to add and remove observers in the `viewWillAppear` and `viewWillDisappear` lifecycle methods I think.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20293007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20293237", "body": "How about giving `TabViewController` an API that lets us move all the application specific logic into the class that owns the TabBarViewController? (Probably the app delegate)\n\nI think our `AppDelegate` would then also be the observer of `PanelsNotificationName` notifications, and simpy instal the new panels on the `TabBarViewController`.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20293237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20587318", "body": "Shouldn't all those strings be `NSLocalizableString()`s?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20587318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20686757", "body": "It is required because the InitialViewController is set as the PrincipalClass in the extension's Info.plist.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20686757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20720149", "body": "That is how xcode completes callbacks. Is there an actual difference between the two?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20720149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20586604", "body": "I don't think it should be optional. It is better to be forced to set a descriptive name so that we can see those threads correctly named in the debugger if needed.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20586604/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20824863", "body": "It is used in both extensions. Since they are separate binaries they can only share code if it is factored in its module module. It is specific for UIViewControllers since that is where the extensionContext lives. I'm also happy turn turn it into a global function if that is more appropriate. Could be something like `extractSharedItemFromExtensionContext(...)`\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20824863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20863669", "body": "Will do. Sorry, i created it in 'Shared' and thought that was a folder reference. Seems it is not.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20863669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20863904", "body": "I think it is fine to create global identifiers in a top level project. Apple used to recommend that you prefix classes and category methods with something like `MOZLoginViewController` or `moz_categoryMethod` but they stopped doing that with Swift. They even removed the 'Class Prefix' field in the New Project wizard.\n\nI think the rule is: do whatever you want in your _application_ but if you create a module or file that is supposed to be used in other projects, then namespace it. Since this is something we may want to use in other projects later on, lets move it to a ExtensionUtils struct.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20863904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20865023", "body": "This one is entirely on @wesj because I copied his Bookmarks.swift as a template for this file, haha :-)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20865023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20865188", "body": "These are file references, so probably because ExtensionUtils is used in the main app, tests and extension targets.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20865188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20865251", "body": "This file is only used in the Send To Extension, which is separate from the application. So they are already separate Swift modules that do not interfere.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20865251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20585111", "body": "Was the lowercase K intentional?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20585111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20587135", "body": "Also, I don't think testUser is a valid username. Firefox Accounts expects email addresses.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20587135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20586381", "body": "I'm a bit worried that we need locking. Ideally the things that are now protected with locks are only accessed from the main thread/queue. Which is serial, so there would be no locking or concurrency issues. If we think that we are accessing those resources from multiple threads then maybe it is better to add an assertion that triggers if the code is called from the wrong thread. Then we can fix the calling code?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20586381/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21823462", "body": "No the UIAppFonts were already in there. See complete diff.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21823462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21823551", "body": "@rpowelll is correct. This message is shown once when the first site requests location data. Individual sites will also trigger a followup doorhanger that the `WKWebView` will show.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21823551/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21680014", "body": "Curious why `@objc` is needed here.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21680014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21680649", "body": "I think this is more swifty:\n\n```\nswitch bookmark {\n    case let item as BookmarkItem:\n        // Open the link\n    case let folder as BookmarkFolder:\n        // Decent into the folder\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21680649/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21680788", "body": "Why did you lift this out of the `ExtensionUtils` struct? We were using that struct as an artificial namespace.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21680788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21681001", "body": "Can this fail? What if this code is executed at the same time as a sync session and that indexPath.row does not exist anymore? Should this code work on a snapshot of the data? Or is it already doing that?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21681001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21683044", "body": "What happens if it fails? We show an empty cell? Shouldn't we work with a consistent  snapshot of the data so that it is impossible to fail?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21683044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21685756", "body": "To simplify that a little bit: live changes in the tableview, while you are watchingbrowsing it, are extremely annoying from a UX POV and should probably be avoided. I think the only time we refresh a tableview that you already have or had open is when you:\n- Go back to the view because you had the app in the background or you had selected a different view in the app previously\n- Manually pull to refresh\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21685756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21829869", "body": "If we bring back the tabs, that means people who are now working on the browser part will be in trouble. We also don't want the login to be required. What would be a good way to deal with this?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21829869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21830095", "body": "These folder names would be good candidates for an enum\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21830095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21830338", "body": "SEMICOLONS! :-)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21830338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21830568", "body": "If the compiler requires a default case that means that the `bookmark` could resolve in something other than `BookmarkItem` or `BookmarkFolder`. Maybe that means the type needs to be more strict? Dunno, maybe that is impractical.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21830568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21830888", "body": "These Javadoc style comments don't work. If you use the `///` style as this code previously did, Xcode will actually generate nice inline/popup documentation for you.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21830888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21831023", "body": "I think this should be 'createDefaultFavicon`or`Placeholder`instead of using the term`Mock` here?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21831023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21831086", "body": "Would it make sense to turn this into an optional initializer that return nil if any of the input values are invalid?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21831086/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21831423", "body": "Would it make sense to use the Swift `Sequence` protocol here? Then you can use `for node in folder`. And instead of `get()` we could do `subscript(index: Int) -> BookmarkNode` - which fails hard on out of index, which is more correct than returning an optional I think.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21831423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21831591", "body": "Or at least constants if an enum is not approprite.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21831591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21833139", "body": "I think we need to figure out of storing these in the database is a good idea. Maybe we can create a test to run on a device and then check with Instruments.app what the consequences are. Instruments has good inspections of Core Data Fetches and Memory Usage.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21833139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21833198", "body": "Why `AnyObject` and not something more specific like even `NSData` ?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21833198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21833526", "body": "There are a lot of `println()`s in this code.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21833526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21918148", "body": "Also, even though this message is in Info.plist, it can be localized. I'll file a bug for that so that we don't forget.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21918148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22042965", "body": "Please get rid of this empty method.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22042965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22109528", "body": "This is simply the delegate (Objective-C) way of naming things. Read it as: `locationTextField:suggestionForPartialLocation:` - this is pretty much how all UIKit delegates are named.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22109528/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22794331", "body": "Why a setter? Isn't that non-idiomatic for Swift? I think `searchViewController.searchEngines = mySearchEngines` is preferred?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22794331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22794440", "body": "If `didEnterURL` is called with an optional, then what does it mean if url is `nil` ? I think what you originally had is more correct.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22794440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23106074", "body": "Filed bugs for moving them out of this file.I think it will be good to have them available non-private because that means we can use them in future unit tests for example.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23106074/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22937379", "body": "Maybe it is nicer if all this is done just once before the tableview is shown? Now you loop through the list for every cell. I don't think that is noticable in performance but from a code point of view it is nicer to build the list table contents once at view controller setup.\n\nAlso, my documentation says that `NSIndexPath.item` is for the `UICollectionView`, and that it is not available in Swift? I think you want to use `NSIndexPath.row` instead.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22937379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22937417", "body": "Same here, I think this should be `indexPath.row` .. It may work, but officially `item` is for the `UICollectionView`.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22937417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23016369", "body": "In the `SearchSuggestClient` you can capture the Alamofire request it is currently executing and cancel it or set a flag so that it will ignore the results.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23016369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23016933", "body": "This is nice. I had previously used a setter/getter in combination with a shadowed 'real' variable. Much easier with `didSet`.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23016933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23171506", "body": "The intrinsic size is just the 'ideal' size. Auto layout constraints will override these. I took the height from the existing control. If that is not correct or if we need different values for different orientations then we can configure that. The cool thing about intrinsic size is that autolayout also looks at it. So you can set less constraints. The width is obviously wrong, but it is just a suggestion, so in our case autolayout makes sure the control is stretched correctly horizontally while keeping the control's preferred height.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23171506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23346803", "body": "I was counting on native code for the interface.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23346803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23346827", "body": "Yes. I'll file bug.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23346827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23347103", "body": "Why did you move this out of `setupWebServer()` ? Oh I see the name of the commit now. Is it not possible to add more handlers after `startWithPort` has been called? If that is the case, can you rename `setupWebServer` to `startWebServer` then?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23347103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23347258", "body": "I don't see `resultString` being used. Is this just for debugging or do you intent do include it on the page?\n\nI think it would be interesting to display all those values on the page: that will give us a good idea of what is actually relevant and then we can decide what we want to show in a more final version.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23347258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23462293", "body": "Have you tried putting this in `viewWillAppear` or `viewDidAppear`?  Isn't that a more logical place?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23462293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23462621", "body": "I saw your note about the order of creating/initializing things being important. Are you sure this did not work before? Because I am successfully adding user scripts to the `webView.configuration.userContentController` from the ReaderMode helper without issues.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23462621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23462844", "body": "What happens if a tab in the background requests one of these alerts?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23462844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23469143", "body": "I don't know if this has changed in iOS8 but it used to be so that you cannot call `reloadData()` from any thread other than the main thread. I don't know who ultimately calls this but you may want to verify that or add a check for the current thread + dispatch to main thread.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23469143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23497135", "body": "I think ideally i'd like to keep Reader.css in sync with aboutReader.css in the gecko project. For example the small tweaks that I added for WebKit could probably also go back into a shared version. Have to talk to @leibovic to see how much of that is possible. I am for example not sure how we can do conditional CSS things like those resources.\n\nHmm maybe we can split up the CSS and move toolbar specific styles out of the main file.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23497135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23534675", "body": "@leibovic I filed https://bugzilla.mozilla.org/show_bug.cgi?id=1125839 as a reminder to merge back changes we make for iOS.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23534675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23567030", "body": "Why can't we make the locationview simply the right height and instead of doing something relatively low level like `hitTest` instead just install the `tapGestureRecognizer` on the whole `BrowserLocationView` instead of the `locationLabel` ? Then the whole thing from top to bottom is a hit target. Teh label needs to have its `userIntractionAllowed` removed then so that clicks pass through it.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23567030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23655907", "body": "Thanks this is a good suggestion. I'll rejig the code.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23655907/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23655949", "body": "Print is really Sepia. I also think the name is confusing but we can argue about that in a different bug.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23655949/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23656032", "body": "I forgot about the context menu. Either what you suggested or I'll think of something better. I think it is nicer to not have the recognizer hang around all the time.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23656032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30154263", "body": "This is tricky. By reusing `pass` it is possible that encryption fails and that we store an unencrypted password. Better to use a new variable, encryptedPass, and use that. And not store antyhing in case of failures.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30154263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30154387", "body": "shaW? Typo?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30154387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30154557", "body": "All these exclamation marks. This will crash if any of the above operations fail and return nil. Needs to go into an `if let` to not crash. Since sha256 returns an optional there is no reason to do this. Check to be safe and return `nil` in case of failures.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30154557/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30154604", "body": "This can fail and crash.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30154604/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30154884", "body": "Options is a bitmask so values should be 'or'ed instead of '+'ed.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30154884/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30155020", "body": "Every time you use force unwrap something you introduce a possible crash. Better to `if let` for more stable and predictable code.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30155020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30155201", "body": "All these `decodeObjectForKey` calls can fail. Need to go in an `if let` with `as?`. Why not return an optional tuple from `decodeData` so that this function can fail?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30155201/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30155440", "body": "decoding Base64 can fail. In which case this code crashes below where data is passed to `decodeData`.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30155440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30155652", "body": "I don't know if adding \"Salt\", a fixed string, to the key actually adds anything from a crypto point of view. My gut feeling says it is meaningless. We should ask one of our in-house crypto gurus I think.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30155652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30179276", "body": "Ha! No this is just confusing because of the way the images are named. If the article state is `unread` then we want to show the `MarkAsRead` button image.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30179276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30320364", "body": "@thebnich \nThis is here because this seemed to be the best place to run something when we have switched back to the web view after showing the home panels. Is it causing problems? Maybe we should introduce a callback for it?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30320364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30322826", "body": "Can you please remove the parentheses? And I think it is a good idea to also check if the selectedIndex is not greater than the number of tabs. (Be aware that the selectedIndex is zero-based). If the selectedIndex is not in range then just open the first tab. If there is one.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30322826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30363892", "body": "Why must this be in `UIApplication`? Can't this live in a `XCTestCase` base class?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30363892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30377642", "body": "Why is this here? Aren't you using the server that is created in `AppDelegate`?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30377642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30378435", "body": "I think it could be nice if we had an `enum` containing the Build or Channel type. What do you think?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30378435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30597132", "body": "This patch also upgrades other dependencies. I think that is fine in this case because they are all minor version increments, but we should be careful with that.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30597132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30597408", "body": "We don't want all these files in the project. They are also part of the Client target which means they are processed/copied to the packaged build. Can you remove all of them except `Readability.js`? It is fine that Carthage checks them out, we just don't want them in the project.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30597408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30598978", "body": "@b-andris I'm going to grab this PR and fix it up so that we can merge it. Thanks for your contribution!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30598978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30600015", "body": "Can't we use the SQLCipher.framework that is part of SQLite.swift?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30600015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30893950", "body": "No we still need it. Otherwise when you move the app to thr background and back to foreground, with the app not being hard-suspended, the server port changes _and_ the WKWebViews stay alive, which means that the webviews have internal state that points to URLs that may not exist anymore. This option prevents that.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30893950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30893992", "body": "I assumed we dont want to restore empty `about:home` tabs. Is there a good reason to do so? I dont think so?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30893992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30898054", "body": "Yeah these are good suggestions. Let me think about it.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30898054/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30898207", "body": "I'm not sure if this is happening actually. I tested this code and selectTab(nil) does open a new about:home tab I think. Will try again. I don't think an empty screen is a good first impression.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30898207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30898271", "body": "Oops good catch!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30898271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30915064", "body": "Yeah so lets do it. I'll fix this patch.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30915064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30984197", "body": "Do you think we can do some kind of visual effect here? Like do a css animation to show a box with rounded corners around the link element that faded away in like 0.25 seconds? Would that be a good alternative to the native link highlighting that WebKit does?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30984197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30984276", "body": "People have also been asking for \"Open in new Background Tab' I think. Should we add that also?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30984276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30984433", "body": "Is it possible to take this straight out of the `WKWebView` instead of doing a network request?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30984433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30989256", "body": "I think this class needs a more descriptive name. How about `AccessibilityAction` instead?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30989256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30989398", "body": "The only unique field in the reading list database is the URL. So if you can check for `SQLITE_CONSTRAINT` then that is enough to know that the page was already in the reading list.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/30989398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "isabelrios": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/878238d182900690aa56f98254b5850a9c5e983d", "message": "Bug 1429733 - Adapt iPad XCUITests to the deletion of the Close Tab Button from PAM (#3578)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/2cd6c837d60309945a3f02b126a3777909fbe85e", "message": "Bug 1429080 - NewXCUITest Open a PDF and check different options (#3575)\n\nremove debug line and two new tests"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/eee19705c7a53e61c1ecf895e95dd3b7a6b63f05", "message": "Bug 1428840 - Fix SearchEngine XCUITest due to Unsuccessfully entered WebpageLoading intermittent error (#3572)\n\ncomment amazon search line"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/8455287fd90b8c5c766bdd36d10704cf39c2e735", "message": "Bug 1424851 - New XCUITest Add to reading list from private mode (#3544)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/a484fc6f9e1247ad1aa512bb92b8df7cd0ac804d", "message": "Bug 1421303 - New XCUITests: New Tab Settings (#3538)\n\naddressing reviewers comments\r\n\r\nfixing warning about NSLocalizedString"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/b37f5a423b07c87c1f07d02c121b471799b01c1f", "message": "Bug 1424857 - NewXCUITest Close All Tabs Private Mode (#3545)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/d8cb66f8cd1f47fede2a647ecbd5d12e93678e6d", "message": "Bug 1425425 - New XCUITest Clear Private Data Removes Top Sites (#3549)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/96ccf16421406e84ef73919fb46cdefff1db4f18", "message": "Bug 1425823 - Fix XCUI Photon Action Sheet Tests (#3550)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/fdd4d6858ef6cb2b1a74d180b63c89e8864022fc", "message": "Bug 1424742 - UITests EarlGrey Timeout error (#3539)\n\nadd a wait"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/4a5da0c4acfe50366cad452584931b1d4e36c718", "message": "Bug 1420393 - Fix Unsuccessful Enter Web Page Loading XCUITests intermittent error (#3519)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/3b3df42f4bf3b1a23cc49cff6e1b9e52c3d0e8c1", "message": "add iPad specific path (#3528)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/4e41bee2e9c4085e2d0694ca7a60eb56d9aeae4e", "message": "Bug 1420201 - New XCUITests Close button Page Options and Long Press Tab Tray (#3511)\n\nfix reviewers comments\r\n\r\nfix merge conflict"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/a972db77016d3439aa6d5c3010aa1b2bd29fe4bd", "message": "Bug1421352 - Fix UITests tearDown on iPad (#3512)\n\nBug1421352 - Fix UITests different acc.id and EarlGrey timeout to tap on element on iPad"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/61d2f9e8d8c8de169c564642563d7c2c97f456a8", "message": "Bug1420207-XCUITest iPad Access Private Mode directly from HomePanel (#3497)\n\nfix reviewers comments and merge conflict\r\nremove unused var for action"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/e42b7499336c0f9c7aa3cb9b4a90259f9f2896b4", "message": "Bug1418960-Disable failing NavigationXCUITests v10.x (#3499)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/d1a1cba9c01cbe511668671008ffebb3e1a4646e", "message": "Bug 1416156 - Update Authentication XCUITests new FxScreenGraph (#3452)\n\nfinal fixes\r\n\r\nremove uncommented lines and fix test as per latest changes dismissOnUse"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/5d279294b8b9ae7da8b31ed4fde728c0fdc7a0fe", "message": "Bug1418307-XCUTests Timing issues new FxSG (#3477)\n\nremove one step"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/34bd93f81d75b29f8bed16abfb6427ad5393c0ce", "message": "Bug1418340 - The first XCUItest executed fails in BB (#3473)\n\ninitialize the pasteboard with an url\r\n\r\ninitialize correctly the pasteboard"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/5452376d8761109cfb5993ad7330753d42afa186", "message": "Bug 1417084 - Change Search Enginge in XCUITests (#3464)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/c73fb8c20b5f00f40ad6c19c1dbc24e6ec1992f7", "message": "Bug1416290 - Fix iPad issues when routing with new FxScreenGraph (#3463)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/2014c23ab341aa85ab2353b1fc98d305cd10308a", "message": "Bug1416263 - Update NavigationXCUITests New FxScreenGraph (#3443)\n\nupdate test and fix ipad routes\r\n\r\nAddress reviewers comment"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/94a108b581e5148668d9b416acc70a82b4349580", "message": "Bug1417347 - Fix Find In Pages From Menu XCUITest (#3460)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/c3072a4bdae11f4fdd61ffee4de6955d0924a3fe", "message": "Bug 1416157 - Update Private Mode related XCUITests to new FxScreenGraph (#3437)\n\naddressing reviewers comments\r\n\r\nFix Activity Test openTabInPrivateMode\r\n\r\nFix merge conflict"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/157ad3fe4e89c6fcafd550bafbe3510377b7e773", "message": "Bug 1414787 - New ReaderXCUITests to check the context menu from items in reader list (#3420)\n\nmake test pass on iPad"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/5733328148044f3a2139e1107524c870caff613d", "message": "Bug 1414200 - Fix navigation tests changing views desktop mobile (#3419)\n\nchoosing different elements for the checks"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/db1feb82c6662b106a486d104cc45e23008d8f76", "message": "Bug 1413338 - Intermittent tests failures in BB - part1 (#3399)\n\nBug 1413338 - Intermittent tests failures in BB - part1"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/6261b4e7adcf62f844e24156577506c9690ebdf1", "message": "Bug 1411930 - Add basic History XCUITests to have the test suite (#3388)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/e9ab91d8c2f23643cf29f294dedc5ff9bbedbc69", "message": "Bug 14111910 - Add XCUITest to Open Top Sites from Browser Context Menu (#3385)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/268046d6f4d6961077431082cc4ecc102986cdbf", "message": "Bug 1411514 - SendToDevice XCUITests user not logged in (#3373)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/07fc1f6435a2a5c6c847a3f49474d5477be66994", "message": "Bug 1411168 - Adapt Search XCUITests to new implementation (#3372)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/2823b1b5530c43793225400de43bbc94ee329c62", "message": "Bug 1410337 - Fix NightMode and NoImage XCUITests iPad (#3351)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/9f46cedf718d5c5089a9398c29ef72ada805474b", "message": "Bug 1409750 - XCUITests for new shortcuts implemented (#3328)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/4a48c9f6c710df79f71e16c0be47f568bec6ac76", "message": "Bug 1409987 - Adding to reader List from Page Options menu XCUITest (#3326)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/794c04d68292424dc244cb926cbe9214449b0bfe", "message": "Bug 1409644 - Fix iPad XCUITests (#3323)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/65e109450879d84843235f11d93fbeaf767d3c80", "message": "Bug 1409343 - Re-enable ThirdPartySearchXCUITest (#3318)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/ee31d3fee6741d06f35cf0ede8961c9774105b6b", "message": "Bug1409035-Re-enable NavigationXCUITest Desktop-Mobile View (#3315)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/ae6d05899886fb396dd3cf5b668ecf01402002c0", "message": "Bug 1408956 - Disable HomePageXCUITests from PageOptionsMenu (#3316)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/6a76e9c9e9afd247afd699b8778ddce7665cc3eb", "message": "Add new Bookmark test to check context menu option (#3308)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/20ebe1792d6cd28e62c9ec3fc5742a04aaa07bf4", "message": "Bug 1408684-Fix NoImageXCUITest change in context menu IDs (#3307)\n\nAdding check for correct label"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/dc9b564d80a426b72a636eb3cb6262885f3d2c60", "message": "Bug 1408326 Fix XCUITests for iPad (#3296) r=farhan"}], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3518", "title": "Bug1422492 - Fix OpenSumoXCUITest timeout error on iPad", "body": "This test is failing both in v10.x and master:\r\ntestHelpOpensSUMOInTab()\r\n\r\nLocally with this change it passes all the times, lets see after a few runs on BB", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thomcc": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/e8a32bd09f44352d998f236bf1ea5cd1edc099dd", "message": "Bug 1374760 - Include os information in sync ping (#3447)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/baa9e523e148935e5d1db1c7f662fecce516b353", "message": "Bug 1415746 - Fix sync ping recording failed outgoing records under the \"sentFailed\" property. (#3445)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "eoger": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/7e038a2eb6051a3fc53265393283f59b73dc95ff", "message": "Bug 1426307 - Store only derived keys instead of storing kB/kA. (#3574) r=rnewman, garvan"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/717b71c94993cef87eb5121f48ab8c254d3cf01d", "message": "Bug 1419942 - Sync settings screen enhancements (#3491)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/70da0293f718692b0f5902b64c963ee313ec5a90", "message": "Bug 1419054 - Fix date_added migration is multiple migration paths (#3478) r=rnewman"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/a7bed48a3ce4b9332e44c740021d11ba6d13d331", "message": "Bug 1139045 - Allow users to choose what to sync  (#3355)\n\n* Bug 1139045 p1 - Expose Sync engines checkboxes in Settings\r\n\r\n* Bug 1139045 p2 - Handle Choose What to Sync FxA Screen"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/d4d49ba3a779fe7460437b07cd3b22841126a5fb", "message": "Bug 1409917 - Less verbose logging of simple bookmarks syncing errors (#3335)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/260aaafb6c51b408dc7a75dd5b68c049de65f23d", "message": "Bug 1407730 - Add reason field to messages sent with /notify (#3284) r=justindarc"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/c44f5934f2d903375ba6f95ce335a67b39e30ba7", "message": "Bug 1335201 - Fix a view not being migrated (#3244) r=newman"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/2f82e938168912d966f51e1788897d132b4740be", "message": "Bug 1335201 - Sync bookmarks creation date (#3165) r=rnewman"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "npark-mozilla": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/18a70a5e2d3104ab8aa42419bb06ad609c5dc127", "message": "Bug 1428904 - Fix LoginManager/closeLoginManager routine (#3570)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/0376ed2388463a7bc2fdff1d907b91da4cb13135", "message": "Bug 1428065 - in testListFiltering UITest, the login lists are not filtered in time (#3565)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/eaf597f9ca392b275b10c6ff148f0b047a7c4fe6", "message": "Bug 1427832 - Use replaceText() to enter URL instead of typeText() (#3563)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/4e23d7e2a476708b74305e9df36f19f059ff1609", "message": "Bug 1337907 [swift-3-regression] SessionRestore crashes when migrating from swift2.3 build to swift3.0 build (#3450)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/c8430066efd35f2cd99b5414b840d7e9edf1bc3a", "message": "Bug 1419963 - rewrite cleanup methods for UITests in Earl Grey (#3495)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/eedc08e7349c8825134accdc2c229c2aaaa6863d", "message": "Bug 1418493 - remove unnecessary check in UITests/ClearPrivateDataTests.swift (#3475)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/654f23be20d1fd05c24806d379bc029921b8cdd3", "message": "Bug 1415338 - Fix UITest failure on ToolbarTests and SecurityTest (#3427)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/6fc6b9a8f4d97456774d41e8c0e83cba84545800", "message": "Bug 1414346 - Integrate UITest fixes (#3416)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/0752259d3d4c8f63c09373f240d5f52872626e84", "message": "Bug 1412064 - Upgrade Earlgrey to 1.12.1 (#3390)\n\nalso, Fix intermittent AuthenticationTest/ClearPrivateData UI Tests"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/c1314f1fec41683bc71566b8014c136499de6938", "message": "Bug 1411757 - Eliminate codecov failures (#3383)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/fc2dd19dd24311bd5248e55dd96d7c020ebe8891", "message": "Bug 1410201 - UITest Failures: SecurityTests (#3347)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/6a935e5e49321c585da45038dd5de4ea7b753c0b", "message": "Fix AuthenticationTest, and disable BrowserTest with Bug 1409851 (#3338)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/7eb81909b4d21cfed09821b139d047e6bf474ce1", "message": "Bug 1409944 - Update ToolbarTests and TrackingProtectionTests (#3325)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/bec498959b541af5f026ca44297548e7415e5d29", "message": "Bug 1406400 update Screengraph to match Photon UI (#3249)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "adamnemecek": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/c515d82faf7c2f0c3657d6bfcd1edbd2dce4053f", "message": "Bug 1419650 - Use type inference where possible to remove unneeded static type specifications (#3558)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/4921a8d37904b5b7ee3c7701ce868d1b86c14019", "message": "Bug 1419650 - Use type inference where possible to remove unneeded static type specifications (#3557) r=farhan"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/39783de096c6e490472b8603c0262cf352b73c45", "message": "Bug 1420521 - Refactor TimeConstants.swift (#3506)\n\n* * use shorthand for date formatters\r\n\r\n* * more refactoring in timeconstants.swift"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/82e800afa829a6c43b43a80fa18ec43e6edc1dd8", "message": "Bug 1419510 - Use .utf8 instead of String.Encoding.utf8 r=farhan"}], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3486", "title": "Bug 1419650 - Use type inference where possible to remove unneeded static type specifications", "body": "* use built in functions hasPrefix, hasSuffix in lieu of rolling custom ones\r\n* define notifications as static extensions on notification.name\r\n* use type inference where possible", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rnewman": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/0c03a43f119e50bb9d677c2a9cc629b03469e27c", "message": "Bug 1425927 - Eliminate KVO usage within clipboard bar. (#3551) r=farhan\n\n* Pre: use KVOConstants for KVO paths.\r\n* Pre: fix some warnings.\r\n* Introduce a trivial URL change delegate on Tab, using that instead of direct observation of TabWebView."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/1a9b30d09da7a1255d11043190a8b58354fb0e93", "message": "Restore a space inside a query, removed in 1b9bfcd7d8. (#3510) r=jhugman"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/3b5b5e8ad90c130a8421f8749d2cf318bf13be73", "message": "Bug 1417034 - Don't treat SQLITE_NULL as an integer, or validate deleted bookmark parents. (#3454) r=justindarc\n\nThis squashed commit does three things:\r\n\r\n- It passes `NULL` values returned from a query to callers as Swift `nil`, not `0`. This requires a few changes to queries that expected a non-`nil` value.\r\n- Fixes a test that was expecting an integer to not match, rather than a `nil`.\r\n- A bookmark validation query could, by inspection, return a `NULL` for one of its values. This would result in an integer being returned by SwiftData, which would then be optionally cast to a string. This is supposed to safely fail, but it seems that we're tickling a compiler bug, resulting in the crash reported in this bug. In this commit we change the query to not return those values."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/ede4ca40b3fbd1d52b8f25f28f16b7abef34eb12", "message": "No Bug - Remove unused AppConstants (#3458)\n\n* No bug - Remove unused MOZ_ADHOC_SYNC_REPORTING.\r\n\r\n* No bug - Remove unused AppConstants.isDebug."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/cab33d2fb711f2c88e852e552fe9cd901d4ebc7e", "message": "Bug 1410085 - Follow-up: remove unnecessary LEFT JOINs. (#3403)\n\n* Bug 1410085 - Follow-up: remove unnecessary LEFT JOINs. r=justindarc\r\n\r\n* Fix typos."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/6034d74d82af9f4c1d1521b7043a672cd4272186", "message": "Bug 1409777 - Don't store or offer to store large bookmarks. (#3339) r=justindarc,farhan\n\n* Pre: typo.\r\n* Pre: ignore SQLite SHM and WAL files.\r\n* Part 1: add Tab.urlIsTooLong.\r\n* Part 2: add URL, title, and description maximum lengths to match desktop.\r\n* Part 3: add logic to bytewise-truncate strings on character boundaries.\r\n\r\n* Part 4: bump the schema version to delete over-long URIs from bookmarks and history.\r\n* Part 5: truncate long titles before bookmarking, disable bookmarking if the URL is too long.\r\n\r\nWe allow bookmarking in:\r\n\r\n- The Photon page action menu.\r\n- Force touch in the tabs tray.\r\n- Share handler.\r\n\r\nWe make the DB layer throw, and we don't offer bookmarking or reading\r\nlist in the UI.\r\n\r\nThis commit also fixes the menu building checks to use the provided Tab,\r\nrather than using the currently selected tab."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65841156", "body": "Thanks for taking the time to do this, but this is third-party code, so we won't take this pull request.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65841156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67038838", "body": "Yeah, IIRC `arc4random` draws from the same entropy pool as `SecRandomCopyBytes`.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67038838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67696468", "body": "This hit a bug:\n\nhttps://devforums.apple.com/thread/257509\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67696468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68227128", "body": "@st3fan, any thoughts on this before I land it?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68227128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68328044", "body": "Merged.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68328044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68389738", "body": "The first commit in that series is on `master` now; you can rebase with glee.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68389738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68574688", "body": "Most of the design hasn't even been nailed down yet. We'll be supporting iPad eventually.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68574688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68976135", "body": "And we encourage you to open pull requests for any work you do that you'd like to incorporate into the mainline.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68976135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70196402", "body": "Replaced by #91.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70196402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70205591", "body": "@wesj your push seems to be missing sqlite itself, at least on some architectures:\n\n```\nUndefined symbols for architecture x86_64:\n  \"_sqlite3_bind_blob\", referenced from:\n      __TFC6Client18SQLiteDBConnectionP33_C63D02BE667AD05513AD0E66E20BA0D74bindfS0_FTGSaGSqPSs9AnyObject___4stmtVSs14COpaquePointer_GSqCSo7NSError_ in SwiftData.o\n  \"_sqlite3_bind_double\", referenced from:\n```\n\nCould you append a commit to this pull request that adds whatever you have locally (or otherwise point me to the file)?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70205591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71925560", "body": "Deprecates #99.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71925560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72128653", "body": "Hmm, poorly worded docs!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72128653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72128751", "body": "I think it's safe to leave that flag set for the extensions themselves, so leaving that in the commit.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72128751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72129292", "body": "Yeah, the concept makes sense, which is why I was a little confused by the docs in the first place!\n\nI noticed that Xcode kinda thought the extensions had that setting already, sometimes showing No and sometimes Yes, but after some effort it stuck, and they're new in the diff, so _shrug_. Yay Xcode.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72129292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73603296", "body": "LGTM. This is the same approach we take for measurements in FHR on Android, by the way.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73603296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73749334", "body": "Please use `Bytes.generateGUID()` instead of `NSUUID().UUID`.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73749334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73749850", "body": "This looks good to me. Please run this past @ncalexan; I recall he was doing some profile-related work that might intersect with this.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73749850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73817453", "body": "Yeah, generateGUID is super fundamental, so it should be in our earliest utils-ey place.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73817453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76849551", "body": "My only real concerns here:\n\n\u2022 Querying the history table. I need to pull this out and get it into a single query string that I can read, so I can do some analysis and noodle a bit.\n\n\u2022 Running N queries where one will do. This is particularly bad if you're doing four non-overlapping date ranges, covering the entire DB, but to compute each range requires trawling the whole DB.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76849551/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77663754", "body": "Worth noting, too: part of optimizing these queries will be adding indices.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77663754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77735799", "body": "We have an etherpad here:\n\nhttps://etherpad.mozilla.org/rnewman-history-sql\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77735799/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/78375347", "body": "Pah, one snuck in.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/78375347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/78662019", "body": "The only thing I'd suggest thinking about: do we want to allow null titles, given that that's the reality of the data we're modeling?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/78662019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/78744839", "body": "Yeah, I think I agree with you.\n\nMostly this is a vague feeling that it seems like doing a little bit of an end-run around the type system, and it means that there are some cases where the title is a string, but we're not going to show it.\n\nI think your point that we'll want to ignore empty titles for other reasons is enough to swing it \u2014 we won't just be switching null checks to empty string checks, because the empty string checks will be there anyway.\n\nI don't think there's any practical value in distinguishing.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/78744839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/78763032", "body": "This looks good. I don't like the amount of project file churn that's smeared throughout, so if you can fix that I'd be less scared. Otherwise, see comments inline.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/78763032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/79052511", "body": "This still needs to have the project added in Xcode, but I've run out of time.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/79052511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/82588129", "body": "Landed.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/82588129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/84056724", "body": "Merged, complete with moving `Bytes` into Shared.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/84056724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10359135", "body": "Yeah, I wouldn't mind. This I copy-pasted straight out of the Android tests.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10359135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10359168", "body": "Will do in a follow-up.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10359168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10370701", "body": "I'm gradually building up a list of these invalidation events! For example, our local mirror storage should be keyed off the collection syncID; if it changes, we should do a full fetch of the server contents.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10370701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10380010", "body": "Btw, kB and client state aren't alone enough as a key: we might request a token and get a new node assignment even with the same client state, right? So I think we're back to a desktop-style approach: if the server changes, or we detect a meta/global (syncID or enablement) or key change, clear our tracking metadata.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10380010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415638", "body": "The reason I kept the envelope is because it carries the modified time.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415657", "body": "Yes. I left this (and the one below) for two reasons:\n- They come out as the same fucking length!\n- We're going to need more sophisticated logic here in the failure case, so the simple helper might be too simple.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415680", "body": "On the other hand, this approach will give a compiler error in the case of _calling_ `advanceSyncState` if the compiler can't determine that the input is in the set of supported types. This also allows me to encode the state machine in the type signatures of each type's `advance` method, at the cost of not having them implement a protocol method :/\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415800", "body": "We don't actually use the labels yet, but I figure we will.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415813", "body": "I got rid of my plain `Initial` state in favor of these two, the idea being that you make one with an expired token, you make the other with a fresh token. Not sure those concepts map to after/before; can you be more explicit?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415813/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415863", "body": "Yeah, I'm expecting these states to fork little sub-states for upload, perhaps also for fetching, as we flesh this out. The pattern for having a parent state automatically skip the sub-states seems to work OK, so it'll probably roll like that.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415994", "body": "That raises some (perhaps minor) concerns.\n\nFetching the token can result in the server URL changing during any request, so we actually _can't_ just wrap up authorization and hide the details of tokens altogether. I would love to be able to encapsulate the token management, but unfortunately the Sync state machine needs to know when the token changes.\n\nIn the face of this, I'm more inclined to use `InitialWithExpiredToken` to explicitly model this: we take that state, issue an `i/c` fetch to see if there are remote changes (which is the only operation that state is allowed to perform), and then reuse its scratchpad with a newly fetched token if we wish to re-enter the state machine to do more work.\n\nThoughts?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10416153", "body": "Sadly not.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10416153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10416167", "body": "Yeah, I figured these were self-documenting :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10416167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10416848", "body": "I don't think we can guarantee that node assignments will never change for a user, nor should we; it's still the mechanism for load adjustment and server maintenance. And that will certainly be first noticed when tokens are allocated (perhaps more than any other situation, simply because it'll be the first time the client finds out after a long absence!), so we can't simply rely on correctly handling 401s as the only reallocation point. (Unless, of course, we ensure we fetch a new token at the start of a sync, or refuse to use an expired token \u2014 that is, we choose when to do the difficult bits.)\n\nEach time we transition between tokens we need to make sure the URI is the same, and if not we need to abort what we're doing and go to a non-steady-state flow (wipe some timestamps, discard cached stuff, etc.).\n\nThat observation either needs to be part of this state machine, or it needs to be explicit in the interaction between the storage machine and auth/token machine, which really just shifts an `==` onto the other side of some function call; we still need to pay attention and do the cleanup.\n\nI think I feel that noticing that a server allocation has changed, and deciding what to do about it, is exactly what this particular state machine is supposed to do; the auth mechanism maintains your FxA state and is a factory for tokens, but it's not in a position to decide what to do about changes in the contents of the tokens over time, right?\n\n`SyncStateMachine` isn't really a records machine, it's more like `GlobalSession` on Android.\n\nThe scratchpad handoff is part of that \u2014 we wouldn't handoff a cached meta/global or info/collections if the server URI changed, for example.\n\nWhen you say \"so the records is more...\" I think you're talking about the thing that `Ready` produces to do syncing, which does exist only within the scope of a single working token, and aborts on 401. I haven't built that yet :D\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10416848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10416897", "body": "This, my friend, is cargo-culting.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10416897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10416923", "body": "Did I mention I hate our non-choices around failable init?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10416923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10534612", "body": "I knew you'd complain about the missing line :)\n\n`get` is a reserved keyword.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10534612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10534624", "body": "`contains` is lazy. I'd use the `filter` idiom in Haskell\u2026\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10534624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10534647", "body": "Hmm, maybe. There's a lot of JSON nonsense that I'd like to leave behind\u2026\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10534647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10534651", "body": "Long lines are the devil!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10534651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10672126", "body": "Why bother: \"Boyscouting\". Leave things cleaner than you found them.\n\nI find it much easier to read.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10672126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10672626", "body": "Three reasons:\n1. Matching column names.\n2. Matching Sync record fields, where that applies. (GUID is \"id\").\n3. Matching the majority of code in the tree, which uses \"id\" and \"guid\" unless they follow as camelGUID:.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10672626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10672634", "body": "Matching record fields.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10672634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10672646", "body": "Yeah, I asked you a question on IRC before I wrote this, and didn't get a reply, so I rolled on. We can make a `DatabaseError` struct.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10672646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10672650", "body": "Nope, it's all kinds of crazy.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10672650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10672657", "body": "You mean in the mock? It should be.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10672657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10672671", "body": "Sure.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10672671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10672687", "body": "Yes! I self-corrected on this a little after this was written.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10672687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10672707", "body": "I think I tried this and failed (you can do it with class functions, but I think instances are too stupid to pretend to use `.apply`), but I'll give it another shot.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10672707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10672728", "body": "We null-check above. I'll add a `let`.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10672728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10674118", "body": "Yeah, I altered that naming elsewhere, failed to do so here.\n\nI didn't derive this for a few reasons. One is that in theory I'd like to be able to clean up without having your keybundle. Another is that I don't want to accidentally load keys just because the sync key was the same. Randomly generating a token offers all of the benefits with none of the problems, with only the cost of persisting that token alongside the rest of the state.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10674118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10674130", "body": "Yeah, the `?.` operator means this'll just be the same as `\\(nil)`.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10674130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10674165", "body": "That gets hairy: when we switch out keys (which is really a `Fetched`!) we'd need to rebuild the pair. This is more of a caution to me than to anyone else :D\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10674165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10674211", "body": "I see your point, but:\n1. It's much more convenient to do this, and in practice using a mutable collection here is equivalent.\n2. From a certain perspective this is more correct, because these timestamps \u2014 other than meta/global and crypto/keys, for which the state machine is the \"synchronizer\" \u2014 are really tied to persistent local storage. Once you've applied a record locally, an earlier Scratchpad with an earlier timestamp is no longer correct, and it should reflect the new collection timestamp. So this (again, arguably) is a valid breaking of immutability.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10674211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10674250", "body": "Yeah. NSUserDefaults is thread-safe for individual operations, but not for the whole sequence we do. I expect we'll use the Deferred queue mechanism to ensure that these all happen together.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10674250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10674267", "body": "I felt that way as I wrote this code, yes.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10674267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10676560", "body": "Remove this. (If you need to log, use XCGLogger.)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10676560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10676566", "body": "What happens when we change the format here? Rule 1 of any format: add a version code, and check it!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10676566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10676571", "body": "Sanity check that `0 <= selectedIndex < count`.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10676571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10676778", "body": "Alas no: you get crazy shit like \"_ is not coercable to StringSomethingorother\". Basically it's non-syntactic.\n\nWhich is a big shame \u2014 no use of constructors or instance methods as HOFs.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10676778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10676782", "body": "Correction: you can use instance methods as HOFs, but only as `self.method` within another method in the class definition.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10676782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10702754", "body": "The favicon is part of the tab data model, and RemoteTab is the ORM-style way of getting that into the DB.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10702754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10702805", "body": "Also, yeah, `urlHistory` _is_ the URL of the tab \u2014 it's usually a one-element array.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10702805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10703139", "body": "It's a mock with immutable storage. I found it this way!\n\nI was meaning to move this to tests, tho.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10703139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10703176", "body": "Yeah, this is just plain ol' HOF in the absence of macros.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10703176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10703182", "body": "That's long gone! DatabaseError is the new king.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10703182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10703190", "body": "Also I really hate this `NSError` `inout` business. At some point I want to get rid of it. And also use factories and type arguments to make `Table` strongly typed.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10703190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10703218", "body": "Yeah, this is half modeled \u2014\u00a0I was waiting until we have experience with a non-trivial synchronizer, and scheduling, before nailing it down.\n\nFor example, we likely need to suggest whether there's anything new, whether it failed, whether we just did a partial download but still have more to do \u2014 all the stuff that `SyncResult` does on Android and more.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10703218/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10703228", "body": "Maybe later.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10703228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10704356", "body": "`record.id` is addressing the `id` JSON field that's in the generic record envelope. It's not part of the tabs payload; we only know which client it is because it's part of the envelope. This is a protocol ugliness/elegance, depending on which way you look at it.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10704356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10704361", "body": "Yeah, it's really not bad. The complex ones will be basically a composition of this with a local resolver.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10704361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10704370", "body": "Once this split into two functions, it became much less painful to do an ordinary conditional, so this little trick is gone.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10704370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10749487", "body": "I went for \u2022.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10749487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10766555", "body": "Flatten dat pyramid doe\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10766555/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857490", "body": "Field removal or type changes, primarily, but perhaps we'll rip out visits into a higher-level structure for history records, then have to serialize them back into JSON to make a record for upload.\n\nI'd rather not bake in an assumption of perfect equivalence: `{ $0 }` is so short, and this gives us explicit symmetry.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857508", "body": "Logging code needs some cleanup, for sure. All I was doing here was getting rid of `println`.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857512", "body": "Sure. `bodyTransformer` perhaps.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857563", "body": "All I changed here was to eliminate the redundant single-argument function parens, which makes this a little visually clearer.\n\nThe \"chained arrows\" is something I've seen around in functional Swift, and seems to follow the Haskell/Miranda style \u2014 though of course our partial application abilities are much more limited.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857574", "body": "Yeah, I kept doing that myself, and Xcode kept undoing it :(\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857574/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857585", "body": "We didn't use that particular old signature, so when a rebase did this, I opted not to argue with fate!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857621", "body": "Yes. The reasoning is as we discussed before: it's not something that really belongs in the state machine scratchpad, which contains immutable things and stuff that advances by creating new scratchpads \u2014 that upload timestamp is a side-effect of an upload, so it goes in the mutable prefs of the synchronizer.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857637", "body": "There's the very practical concern that the clients synchronizer does an upload smack in the middle of a sync, which might be half-way through a tab sync! Not easy to get a new scratchpad out of the middle of that, build a new Ready, and re-run the sync.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857665", "body": "We could, but (a) I'm concerned about the (lack of) coupling being hard to discover, and (b) dropping shit on the floor when we don't have an app. At least this way it's explicit when we don't have an app, and we can queue. Do we have a way to have a fallback notification handler?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857677", "body": "This might be a merge error. Will investigate.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857687", "body": "Nope, it didn't make 1.2. They're hoping for 1.3.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857690", "body": "I forgot to take it out after I added the delegate!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857702", "body": "Model will be reflected in `device`. But yes, this needs a follow-up bug for being more specific.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857727", "body": "I don't think reducing it is necessarily the right approach. It's three weeks so that, when you go on vacation for two weeks and want to send tabs to your desktop before the flight home, your desktop still appears in the list!\n\nI agree with uploading more frequently, but the TTL here will always be a bad compromise.\n\nFiled https://bugzilla.mozilla.org/show_bug.cgi?id=1157527\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10857727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10896929", "body": "I think this spot will be pretty obvious when someone addresses https://bugzilla.mozilla.org/show_bug.cgi?id=1157303.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10896929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10898583", "body": "To a point. This'll get cleaned up when we do Bug 1157306.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10898583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10898588", "body": "No, we'll be flipping lastFetched to zero whenever we decide to start over, or if we've unlinked and relinked, so this clears the DB before adding zero-onwards, which is everything.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10898588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10955979", "body": "It verifies that it round-trips, which is the API; yes, we could poke inside and verify the behavior of MPP itself, so I'll do that as a separate test.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10955979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10955985", "body": "Oh hey! I didn't know we had that!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10955985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956120", "body": "None of those consumers exist yet \u2014 those are in `rnewman/sync-history`.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956127", "body": "Existing data is gonna burn (which is our only migration strategy right now), and it's gonna get worse \u2014 we haven't got to the schema changes yet. But yes, I'll make sure this does something sane, probably by bumping the DB version.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956128", "body": "Me neither!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956144", "body": "Yeah, I'll add a comment.\n\n`SiteVisit` is there as a sop to the existing API, which expects to be able to go backwards from a visit to a site, and preserve the ID of the database row.\n\n`Visit` is the model of what lives on the wire: just a date and a type. Ultimately we'll end up with something similar to `ClientAndTabs`: the tabs don't need to know about the client, and visits don't need to know about the site, because they're bound together.\n\n(Furthermore, we probably shouldn't ever need something like `SiteVisit` to reach the UI: we care about \"last visited\", \"visit count\", or just \"places ordered by frecency\" \u2014 we don't care about lists of visits.)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956200", "body": "Yeah, I wanted to limit this sequence of commits so we could be confident in the tests not changing too much. I'll file a follow-up.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956210", "body": "This was the only case in which we failed without it. The other UI code places I maintained main-thread because I don't believe in changing thread properties for no reason :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956215", "body": "You mean `SiteVisit`? Yeah, I guess it should!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956260", "body": "This is an artifact of the Table stuff, AFAIK. That is, we need that generic parameter so that uses of `visits` returns `SiteVisit`.\n\nThe concrete answer to your question is that we could use `VisitsTable<Visit>` here and things would mostly work.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10964971", "body": "\"Classes derived from generic classes must also be generic\". \n\nAnd I get very confusing compiler errors if I switch `T` to `SiteVisit`. `Visit` works, but that doesn't make any sense at all.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10964971/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10965270", "body": "There is an area of concern here, btw \u2014 we made that particular column a `REAL` (which is what sqlite calls an 8-byte `double`), so it has enough precision to represent milliseconds and likely microseconds for the entire affected range.\n\nHowever, it might end up skipping through a signed `long long` on its way back out of the DB.\n\nI'll test and address this when I amend the DB layer.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10965270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10965274", "body": "Old further reading: http://jakegoulding.com/blog/2011/02/06/sqlite-64-bit-integers/\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10965274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10990965", "body": "Yeah.\n\nThere's an obvious and simple improvement here where we pull the ID out of recordVisitedSite and pass it through to here, changing `>>>` to `>>=` in `addLocalVisit`. But with an index this approach should be very very cheap anyway.\n\nBut note that this _is_ more efficient than calling `getIDForURL`, which is what we did before in some cases! I suspect that the situations where we know the site ID are few or non-existent, because we're recording the visit by URL and type after a page load, right?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10990965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11030376", "body": "The long method names are because there are multiple protocols that expose `clear`.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11030376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11030411", "body": "I agree; I seem to recall that I did this for some kind of compiler reason, but that might have evaporated by now.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11030411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11030459", "body": "That's a reasonable point; it might be worth (temporarily?) bridging `Result` and `Cursor`.\n\nI've been keeping my eye on LlamaKit, PromiseKit, etc. in the hopes of something better coming along.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11030459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11030483", "body": "It seems to be the prevailing style for constants, and it avoids the need to qualify their names. That's all, I think.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11030483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11032016", "body": "Actually, there isn't a completely solid mapping here: `Cursor` conflates success/failure with open/closed. I wonder if we can go the other way: strip out success/failure from `Cursor`.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11032016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11032199", "body": "I got part-way down this rabbit hole. It's not bad, but it involves changing more code than I'd like to touch right now; let's save this for Bug 1160400.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11032199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11032269", "body": "Yeah, this already disappeared in a later patch.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11032269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21680995", "body": "Because I needed it in order for `Bookmarks` to implement `shareItem`, and either this or this _and_ `ExtensionUtils` needed to be public, because the protocol I was defining referred to that type.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21680995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21681095", "body": "Compiler complained. You can't use a `protocol` everywhere you can use a `class`.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21681095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21681117", "body": "Neat!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21681117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21682151", "body": "It can fail, which is why it returns an optional.\n\nBut this kind of failure is why I'm tucking much of this logic down into the bookmarks model: in theory, once ownership of the data is encapsulated like that, we can make sure that changes happen in lockstep, and we can reverse the `refreshData` channel to be a little more like observation.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21682151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21684939", "body": "We will; this is a step along the path.\n\n(It can't fail right now, any more than the current code does, but I'm assuming background changes.)\n\nAs this evolves we'll be backing it with something more sophisticated than a tree of simple objects. Mutations will all go via the model, so we'll be driving the refresh from something like an `onDatasetChanged` callback. It's conceivable that we'll actually be doing that by swapping out the model for a new one, at least for bookmarks \u2014 from that perspective, you can think of `BookmarksModel` as a snapshot of a particular layer in the folder hierarchy, and navigation will grab a new model.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21684939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21686557", "body": "That works for me. Regardless, this should be an uncommon situation.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21686557/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21840656", "body": "Yeah, I think constants \u2013 it's an open set with some well-knowns.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21840656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21841426", "body": "It's because the input is a `BookmarkNode`, and so this could be a `BookmarkItem`, a `BookmarkFolder`, or anything that implements `BookmarkNode`.\n\nThere's no good syntactic way to show that; if you try `case let thing as BookmarkNode` the compiler will complain \"`is` test always true\". So `default` here really means \"any other kind of `BookmarkNode`\".\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21841426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21841610", "body": "Xcode shows me this regardless of which of those commenting styles I use:\n\n![screenshot 2014-12-15 17 37 41](https://cloud.githubusercontent.com/assets/91722/5440512/24b3c9a4-8481-11e4-933c-a19fe0c6db3b.png)\n\nis there another place that it shows docs?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21841610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21842075", "body": "I'm going to call it `createSizedFavicon`, 'cos that's what it actually does!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21842075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21843441", "body": "There's one compelling reason not to.\n\n`SequenceType` has a Self constraint: \n\n```\n    /// The type of element generated by `self`.\n    typealias Element\n```\n\nIf we make `BookmarkFolder` a `SequenceType`, such that we can have it expose a generator method, then we can't use it as a concrete type (e.g., as the type of a member variable).\n\nI discovered this the hard way, by implementing it. I'm going to dig a little, see if there's a workaround, but otherwise I'll drop this until we need it.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21843441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21843548", "body": "I can make `MemoryBookmarkFolder` a sequence. WFM.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21843548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22392192", "body": "This also isn't likely to play well with Sync for two reasons.\n\nFirstly, the `lastVisit`/`numVisits` approach is expedient, but doesn't match up to Sync's model. On Android we have to jump through horrible hoops to make this work, synthesizing fake visits and such. Additionally, it causes problems with the user experience to not distinguish between local and remote visits, and I will be unbreaking the model in Bug 1046709 to allow for a distinction to be made. We should be sure to draw that same distinction here.\n\nSecondly, the underlying data model for history will be _two_ sets of data (local and remote), each of which contains a number of visits attributed to different clients, each visit having a type and a timestamp. Your total history is a merge between these two sets, with some sites only being visited locally, others only being visited remotely, some never synced yet. I don't know how that maps to the kind of Core Data view that you want for the frontend; it's doable if something like this `NSManagedObject` is a virtual entity that's the read-only result of a merged query over both data sources.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22392192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23562569", "body": "We probably also want a numeric primary key, so that visits can refer to it without using a GUID or an implicit _rowid.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23562569/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23562627", "body": "Is it meaningful to query history without also querying visits? E.g., should this return rows that have no visits?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23562627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23562688", "body": "I think this is a bit of a bad smell.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23562688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23562785", "body": "I think there are a couple of changes here:\n- Visits probably don't need a GUID.\n- The place reference (\"site\" might be misleading?) should probably be a foreign key reference to the numeric ID of the place.\n- Visits should have a type (see Places docs).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23562785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jhonatasrm": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/1ebaf9199e2789b2435536109500453bb5c76146", "message": "Bug 1413716 - The back arrow when viewing Recently closed tabs is hidden behind the notch on the iPhone X (#3481)\n\n* Bug 1413716 - The back arrow when viewing Recently closed tabs is hidden behind the notch on the iPhone X\r\n\r\nSee: https://bugzilla.mozilla.org/show_bug.cgi?id=1413716\r\n\r\n* Using extension for SnapKit\r\n\r\nUpdated using the extension for SnapKit"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/dd2046bab1882f6b8bfb9c5798bcc9306482b457", "message": "Bug 1413642 - URLBar buttons need safeArea insets on the iPhone X (#3487)\n\n* Bug 1413642 - URLBar buttons need safeArea insets on the iPhone X\r\n\r\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=1413642\r\n\r\n* Using extension for SnapKit\r\n\r\nUpdated using the extension for SnapKit\r\n\r\n* Using extension SnapKit\r\n\r\nUsing the extension for SnapKit in TabTrayController and IntroController"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/99f51f5dbc77bedf7f178de3df00a5f202b2d0dd", "message": "Bug 1413718 - Tabs in the TabTray overlap the safe area on the iPhone X (#3474)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/e187a2c4b7e11cf3892a7675d4f744cdda4e0e6d", "message": "Bug 1413713 - \"Start Browsing\" button on the Onboarding screen should respect Safe Area Insets on the iPhone X (#3459)\n\nSee: https://bugzilla.mozilla.org/show_bug.cgi?id=1413713"}], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3542", "title": "Bug 1419634 - Highlights behind the notch on the iPhone X when in landscape", "body": "See: https://bugzilla.mozilla.org/show_bug.cgi?id=1419634", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lugearma": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/39860f31545d648205c1ffd03f3be75d2fa4807a", "message": "Remove code is not being used anymore (#3514)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ssavinel": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/2aedbb448a5add9581d853f2e6b8f52e49eb04b4", "message": "update qwant.xml with correct client for suggest (#3442)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mkaply": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/f36ee9253feb098db196bf81228e1582ee219dd8", "message": "Bug 1417074 - Change default search engine for US, HK and TW to Google. (#3453)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ugarlapati": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/9d14200b6db83334abc02173e9a30d794e5bb6ca", "message": "Bug 1410196 - UITest Failures: LoginManagerTests (#3405)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/4c790a5059ac5bf07eb1e1d2465ee62178fa7ac1", "message": "Bug 1410199 - UITest Failures: NoImageModeTests (#3379)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/c5ff5b0974b416e167690e0264be53287e354643", "message": "Bug 1410193 - UITest Failures: HistoryTests (#3358)\n\nAlso make sure tests can run continuously"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/0a741c41b7bf33eacc95ad83a3c6110f1ba4f545", "message": "Bug 1410200 - UITest Failures: ReadingListTests (#3361)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/8eb8ea1031b1ed94dbfcfcd00f7c177b3bdbef62", "message": "fixed ClearPrivateDataTestsAndDomainAutocompleteTests for UI test (#3344)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/ce6347add76dbcaaeaf95ef311041eb95bbad457", "message": "Bookmarks panel test cases fixes. (#3297)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "joeyg": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/754cdb1067077c755b6ff2c4cac1b85311008617", "message": "Bug 1404388 - Increase the number of digits in the passcode from 4 to 6 (#3270) r=jhugman\n\n* Increase the number of digits in the passcode from 4 to 6\r\n\r\n* Fix tests"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/ed50c9e58d86dd5c6af796b4cf2c9c578c669dde", "message": "Bug 1410078 - Invalidate highlights cache after 15min total (#3341)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/79e33d7ca1741eb5642b990ba079b659e0548494", "message": "Fix Toast being incorrectly displayed when view changes (#3312) r=farhan"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/be7a5af90c65f9d204f683ba5ebbc27be7cd11a2", "message": "Bug 1407455 - Long Press Actions similar to Safari (#3305)\n\n* Add long press actions to tabs button and page options button\r\n\r\n* remove unused func"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/f7a1ba983661b2dfb02172d1cc1568aaa487f77a", "message": "Bug 1406894 & 1406916 - Fix display issues with SimpleToast and ButtonToast (#3276) r=farhan\n\n* Fix display issues with SimpleToast and ButtonToast\r\n\r\n* fix bug with how SimpleToast was presented on ipad"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/06f686c01eb05641aa2737127e0271866926120e", "message": "Bug 1393307 - Add SimpleToast confirm messages for actions (#3264) r=farhan\n\n* Add SimpleToast confirm messages for copy url, add/remove bookmark, and add to reading list\r\n\r\n* add confimr message for add to reading list\r\n\r\n* fix message\r\n\r\n* Adjust toast height, color, and animation"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/5e42ed6ef72f8f66be0da71ba455b913dbe9c494", "message": "Bug 1399244 - Implement method for user to assign a site as a Top-Site (#3239) r=farhan\n\n* Add Pin to top in action sheet\r\n\r\n* Remove the unpin functionality from this pr\r\n\r\n* clean up code\r\n\r\n* Add tests and simplify logic\r\n\r\n* remove unneeded change\r\n\r\n* simplify the code around getSitesForURLs call"}], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3117", "title": "Bug 1395353 - Display Livemark Feed", "body": "This PR changes the way Live Bookmarks are displayed in the Firefox iOS app. Instead of providing a link to the site, this PR downloads the Atom or RSS feed and displays the feed items in a list providing easy access to the feed items.\r\n\r\nNotes:\r\n - I used FeedKit (https://github.com/nmdias/FeedKit) as part of this PR. It is under MIT license and seemed to be actively maintained. Open to suggestions here.\r\n - Live Bookmarks (\"Livemarks\" in the code) have a icon associated with them in the Firefox desktop app. Does anyone have a mobile version of this icon? https://hg.mozilla.org/mozilla-central/raw-file/3529b653ede2/browser/themes/osx/page-livemarks.png\r\n - This PR does not support subscribing to Live Bookmarks in the Firefox iOS app - I plan to do that work separately.\r\n - Feed items are not opened in Reader View - should they be?", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kesun421": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/0d9285cd23c8f7499629d4871a6c6a4bcc50d553", "message": "Bug 1313317 - History list overlaps the spinner when pull to refresh \u2026 (#3395) r=farhan"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kusumotoa": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/13ec96fa7d3e2ac06ae9d1f293f45f48281749b4", "message": "Remove removeObserver in deinit when added in viewDidLoad and init (#3354)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "q2r5": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/4ca9fd81183b4eb04383f0a4e27d1a06f43a66ef", "message": "Bug 1408067 - Add Send to Device entry point to the Page Action Menu. (#3306) r=farhan"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Bunn": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/8c6a8f938ec0644872be0956b43cced91527edcb", "message": "Bug 1410185 - Browser action sheet not respecting safe area for iPhone X (#3334) r=farhan\n\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=1410185"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/6a8700bc7c34bc5e20edbd53c18248ca68ec5308", "message": "Bug 1409487 - Toolbar not respecting safe area on iPhone X (#3321)\n\n* Bug 1409487 - Toolbar not respecting safe area on iPhone X\r\n\r\nTake safe area into consideration when calculating toolbar size\r\n\r\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=1409487\r\n\r\n* Add BottomToolbarHeight property\r\n\r\nThis property calculates the ToolbarHeight + SafeAreaInsets.bottom for iPhone X"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chuckSaldana": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3564", "title": "Bug 1413715 - Added alternative constraints for iPhone X in landscape\u2026", "body": "- Added constraints for background view to work well for iPhone X, iOS 11.\r\n- Fixed background color of header view.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ColdGrub1384": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3489", "title": "Added files downloads", "body": "# Feature\r\n\r\nI added files downloads: When a file URL is clicked, the file is downloaded and opened in an ActivityViewController.\r\n\r\nScreen recording: https://vimeo.com/244105656\r\n\r\nI added localized strings constants for \"Downloading...\", \"Open\", \"Download finished!\", \"Click Open to view the file\" and \"Error downloading file!\".\r\nBut I don't see where is the .strings file, so I only need to translate these strings.\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alyssais": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3466", "title": "Bug 1417864 - Don't use the URL keyboard in custom search title", "body": "Previously, `CustomSearchEngineTextView` set the keyboard type of every text view it created to `.URL`, which prevented spaces being entered using the keyboard.\r\n\r\nThis commit changes that text field so that it uses the standard keyboard, but with word-based autocapitalization so custom search titles are title-cased.\r\n\r\n## Pull Request Checklist\r\n\r\n- [ ] My patch has gone through review and I have addressed review comments\r\n- [x] My patch has a standard commit message that looks like `Bug 12345678 - This fixes something something`\r\n\r\n- [ ] I have updated the *Unit Tests* to cover new or changed functionality\r\n- [ ] I have updated the *UI Tests* to cover new or changed functionality\r\n- [ ] I have marked the bug with `[needsuplift]`\r\n- [ ] I have made sure that localizable strings use `NSLocalizableString()`", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mauryat": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/2526", "title": "Bug 1246448 - Re-filter login search results in-memory", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wesj": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/62590969", "body": "Not the PR I wanted. Fixing up.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/62590969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/64290121", "body": "I accidentally made a new PR with this. Closing\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/64290121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/64478015", "body": "Lets talk about the Locking at the work week\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/64478015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67673252", "body": "Closing this. I'm pulling it apart.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67673252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68804226", "body": "I think we'll still do something like this, but with the new sqlite backend, it will look different. Closing this for now\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68804226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68804302", "body": "I think we'll still do something like this, but with the new sqlite backend, it will look different. Closing this for now. The rest of the requests on top of this should actually not change much (i.e. they should be backend independent). We'll see how that goes...\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68804302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68960795", "body": "This has some issues if you actually use FMDB in it (just stuff missing from the project files). I fixed them up in the next pull request, and this should be fine (since it doesn't actually use FMDB).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68960795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69144638", "body": "Doing this in a new PR\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69144638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69144661", "body": "Doing this in a new PR\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69144661/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70180298", "body": "I merged these over on top of the SwiftData stuff. I'm closing this and will put up a new PR, but since there are no real changes, I'm not going to re-ask for review on it.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70180298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71243790", "body": "Should be fine. History methods always call back on the main thread right now. If we ever find good ways to assert if you're on the wrong queue, I'd love to use them.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71243790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71752862", "body": "Wound up on a new branch here. Put up a separate PR. Sorry :(\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71752862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72412919", "body": "Yeah, we don't really have any mockups from UX on this yet. I was looking at making these a unified list in https://github.com/mozilla/firefox-ios/pull/104 but this feels pretty clean (and both seem a lot better than whats in right now).\nOne nice thing about the single cursor is that we can intermix different types of rows and use accessory icons/views on the right hand side to designate the row type (that's what we do on Android right now as well...) I wonder if we can UX to weigh in on what they'd like to move towards.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72412919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72500427", "body": "Taking my r+. We can address any more comments in follow ups?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72500427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72514597", "body": "Sure. Right now this looks like: https://www.dropbox.com/s/ecvhntd7r6h1r5d/sections.png?dl=0\n\nWe can (obviously?) customize the section headers, or probably hide them if we want. That would bring us in line with Android (after I finish adding bookmarks in here)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72514597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72541952", "body": "I'm deprecating this with https://github.com/mozilla/firefox-ios/pull/131\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72541952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73275156", "body": "Yeah. That should be fixed in https://bugzilla.mozilla.org/show_bug.cgi?id=1128363 if it ever gets reviewed. If you reset you simulator, it should also work.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73275156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73372406", "body": "Merging this because the travis CI things seem unrelated (and it fixes one of them).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73372406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73816759", "body": "I had to move Bytes.generateGUID to use it. I'm not sure if you'll like that or not. Easy to move back!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73816759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74787762", "body": "I didn't see you updated this. I rebased it and all appears good! I'm going to land the rebased version.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74787762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74982887", "body": "This landed in a60bc0917bbbd7c12298247747095a6af018d927\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74982887/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74983057", "body": "This landed in bug 1134050 https://github.com/mozilla/firefox-ios/commit/7f3c18dbf0bc1840aa7c3d970d1e40b89e3c5036\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74983057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156184", "body": "This method is similar to what we do in Android: http://mxr.mozilla.org/mozilla-central/source/mobile/android/base/home/BrowserSearch.java#430 I think we could steal some (all?) of that code here.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156314", "body": "What's going on in these touch methods? I assume we're just ignoring touches if there's a completion? That feels a bit annoying. Again, Android actually watches for selection/cursor changes and does different things depending on if you could the autocompletion text or the regular text:\n\nhttp://mxr.mozilla.org/mozilla-central/source/mobile/android/base/toolbar/ToolbarEditText.java#441\n\nMaybe good for a follow up (but if this isn't the behavior we want, I don't think we should check in the touchesX() overrides.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156373", "body": "I would probably name these methods without locationTextField. i.e. didBeginEditing, didCommit, and didEnterText. That matches WKWebView (but these method names could wind up too generic.... I also think making a generic AutocompleteTextField would actually be nice, and these are sorta url-specific. Maybe that's someone else's project.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156382", "body": "What are these numbers? A comment about what's going on here would be helpful.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156564", "body": "Oops. I forgot about this strange syntax. Christmas break :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156569", "body": "I'm not sure what this method does from its name. If its a getter, can we use a getter?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156569/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156596", "body": "Why is there a separate if statement here? is completedAndMarkedString ever set outside of the above block?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156610", "body": "Not having the caret when the completion is active seems sad. Follow up to fix?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156781", "body": "Something in here should probably be async, shouldn't it? i.e. the completion might take some time to find? I'm tempted with the history api to make this method return an NSOperation so that we have some way to cancel in progress tasks. But I'd also like to just tie this to the list history api. I wonder if we can do something like:\n\n```\nlocationTextField.textChangeDelegate = tabsViewController\ntabsViewController {\n    func textField(textField: UITextField, shouldChangeCharactersInRange range: NSRange, replacementString string: String) -> Bool {\n       // When the text changes, fire off an async history request\n       history.filter(searchString) { sites in\n             viewController.data = sites\n             locationTextField.autocompletion = findCompletion(sites, searchString)\n       }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721202", "body": "I usually avoid declaring types if they're implies like this.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721244", "body": "I've been declaring these guids as NOT NULL and just assigning them when an item is added lately. i.e.\n\nif item.guid == nil { item.guid = generateGuid(); }\nargs.append(item.guid)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721246", "body": "You may want to add a parameter or method here to remove a single entry. I assume you'll probably also have markAsRead and things like that, but we can do that later :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721257", "body": "Likewise, is there any reason to let these be null ever?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721289", "body": "heh. Yeah. I agree, not a great decision.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721373", "body": "Does this fulfill need to happen after your asserts in here?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721378", "body": "I actually should have removed this now if I didn't. We do table versioning per-table now, so you just need to override the version: Int field in your ReadingListTable.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9899382", "body": "It looks like itunes actually redirects us to an itms-appss:// url. I'd rather this looked like\n\n```\nif !canHandle(scheme) {\n    if app.canOpenURL(url) {\n        app.openURL(url)\n    } else {\n        // Show a message saying that we're stumped? Maybe a link to open the iTunes store to search for apps? \n    }\n} else {\n    decisionHandler(Accept)\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9899382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10833032", "body": "NIT: I think I'd prefer this was just optional.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10833032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10833077", "body": "Sharing this entire configuration feels a bit dangerous (I have no idea what the webview's do with it internally...). You might just use a pool like this suggests: http://atmarkplant.com/ios-wkwebview-tips/\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10833077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10969628", "body": "I agree, I don't like this dialog either. This is a little better. I'm still not sure if this fixes whatever bug people were seeing...\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10969628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10990345", "body": "Heh. I wrote this sql in those history perf patches I never landed. It is not very efficient for cases where you know the ID of the site already.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10990345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10991028", "body": "We should just flip this to site.lastVisitDate or something (heck, we could even store it as a column and avoid the entire join here). I hate having it around at all.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10991028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10991137", "body": "Oh no. We still need the visit count for frecency.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10991137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11029760", "body": "Is there any reason to keep these outside the class here?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11029760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11029893", "body": "I hate Result<Cursor> (i.e. Cursor is already a Result all by itself), but we should also rip out Deferred and Result and find something better IMO (i.e. even the author in his talk about them winds up saying \"This code doesn't really look any better.\"). That's another big change, with no real win for users (except we could have some sane deferred error handling...)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11029893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11029941", "body": "You don't really gain much with this function pulled out here (and it makes this harder to read).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11029941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11030023", "body": "Since you like really long method names, you might name this clearAllHistory to make it clearer what it does.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11030023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11032701", "body": "Heh. Thanks for trying :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11032701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20832902", "body": "This sounds good. But I don't want to do it here. This coupling is already present (in fact, its lessened here by moving knowledge about what panels exist outside of the TabBarViewController. Lets use a second bug to develop this sort of interface if we want it.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20832902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20881633", "body": "I was at one point to unregister something I think.\n\nBut I left it in because I think it should be there. I don't understand why we'd make this API asymmetric. There's no way to know who is logging out here without access to it. i.e. Since this is passed to the initializer, its awkward to try and closure it in.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20881633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21848656", "body": "Hmm.. This is autogenerated, but I'm fine making it more specific if we can.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21848656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21850231", "body": "Storing the images there vs storing file paths or something? I agree....\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21850231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21918059", "body": "I like this style from promises TBH. Its harder to ignore the error callback than it is to ignore an error parameter. But it also ruins nice looking block code:\n\ni.e. you wind up with method({ result in }) { error in }\ninstead of method { (result, error) in }\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21918059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22395291", "body": "I think was just a typo on my part (the optional part here). I saw a crash at one point because of a separate error, and made this optional while trying to sort things out. Can undo\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22395291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22395809", "body": "AFAIK, it should be safe as long as we're not using the main for whatever thread we're on. In this particular case, we ask for the Site OMT. MagicalRecord is smart and uses the right context for us automatically in that fetch:\n\nhttps://github.com/magicalpanda/MagicalRecord/blob/4a332d9ea5360b6e2837e04a52bcc8acef00da46/MagicalRecord/Categories/NSManagedObject/NSManagedObject%2BMagicalFinders.m#L144\n\nWhile we're still on that thread, we update the model and push it back to CoreData. There we do the save in a block (which has its own context, we could probably remove that and use the current background thread context, but its more boilerplate code that MR is trying to hide from us). Then we actually send the model back on the main thread. That bit should probably actually pass across the stored ObjectID instead, and then regrab the object in the parent context.\n\ngetAll() is the scarier piece there. We could wrap these ID's on one of our cursors to hide some of that work... I'll look into it.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22395809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23631027", "body": "Yeah, this runs into a Swift problem that I haven't found a good solution to yet (its also why our Cursors aren't generic). i.e. https://stackoverflow.com/questions/24888560/usage-of-protocols-as-array-types-and-function-parameters-in-swift\n\nBasically, if you make a protocol generic, it isn't useful anymore outside of a constraint on a class definition. You can declare a class that implements the protocol Table<T>, but you can't store an array of Table<T>[] anymore. I've tried to get around this a few times. For instance, declaring base-class that implements the protocol and having everyone inherit from that, but even then storing an array of BaseTable<T> where T varies from obj to obj isn't possible (AFAICT). That's why I've just taken to passing around a lot of Any types here. Its as clean as I can seem to make things...\n\nAn alternative idea I had: remove the array of tables entirely from BrowserDB and do things more like we are in tests? i.e.\n\nBrowserDB.insert(tableName, object) would become:\nBrowserDB.withConnection(.ReadWrite) { conn in table.insert(conn, object) }\n\nLet me give that a shot.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23631027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23646296", "body": "The way this is written now, querying the HistoryTable would do that. Querying the JointHistoryVisitsTable would (I think) not (I'll add a test for that!). I've been using QueryOptions as a way to change that behavior if you wanted. i.e. to get all the History entries with zero visits, you'd query the JointHistoryVisitsTable with some option set.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23646296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23646875", "body": "r.e. the second dot here: I'd like to keep some implementation details like the foreign key bits invisible to users. i.e. they'd at best have a url or Site to pass us. I did the other two though, and I can stop using guid's in favor of a numeric ID...\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23646875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "thebnich": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/64277311", "body": "Looks good to me. Should probably squash most/all of these commits unless they make sense individually.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/64277311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65834978", "body": "Thanks for the fix. Can you please squash your changes into a single commit?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65834978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65837557", "body": "Closing as dupe of #30.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65837557/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66322624", "body": "The sentence is correct as is. There are two independent clauses, so a coordinating conjunction (\"so\") is needed to avoid a comma splice.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66322624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66377071", "body": "Changed FxWebView to Browser, which now uses composition to wrap a WebView instead of subclassing.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66377071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66683535", "body": "Looks good to me!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66683535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66844544", "body": "Several style nits, but I think this approach looks good. But I'd prefer to wait for tab support to land first since we'll have to figure out how to make the toolbar work with multiple WebViews.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66844544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66845043", "body": "Also, can you please squash your commits together (either into a single commit, or two commits: one for the progress bar UI, and one that uses KVO to update that UI)?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66845043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67084067", "body": "@Chuongv You just need to rebase your branch onto the firefox-ios master branch. Try doing \"git rebase origin/master\" (assuming origin is the name of your mozilla/firefox-ios remote). You'll have to fix the merge conflicts, then you \"git add\" them, followed by \"git rebase --continue\". Feel free to ping me in IRC!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67084067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67089369", "body": "PR #44 landed, so if you're interested in rebasing this PR to be tab-aware, we'll still happily accept it! I'm not working on this particular bug myself ATM.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67089369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67237363", "body": "Thanks, this mostly looks good, but I think the current plan is to expose the WebView in Browser to avoid forwarding delegates. Can you please make the following changes?\n1) Rename Browser \"view\" to \"webView\", and return WKWebView rather than UIView.\n2) Have BrowserViewController implement WKNavigationDelegate directly, assigning the delegate to Browser.webView.navigationDelegate.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67237363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67275378", "body": "Landed with b8455c81b016e86657fcda6069c241d5324e5607.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67275378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67276303", "body": "Looks great. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67276303/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67567828", "body": "Looks good, though it'd be nice to see this rebased on the latest master with comments fixed before r+.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67567828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67572155", "body": "This works pretty will from some light testing. One change I recommend is not including \"http://\" or \"www\" at all in the autocompletion, but instead autocompleting only after they've entered part of the domain. Some examples:\nw -> wikipedia.org (currently matches www.apple.com)\nwww -> nothing (currently matches www.apple.com)\nhttp:// -> nothing (currently matches http://www.apple.com)\n\nThis would follow desktop's and Android's behavior.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67572155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67573895", "body": "Thanks for the contribution! Looks good to me -- I think this can be merged once it's rebased again.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67573895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67576135", "body": "As @Chuongv mentioned, this will change a bit since we've exposed the webView on Browser. Please implement the KVO handling in BrowserViewController instead, attaching to tab.webView whenever a tab is added.\n\n@palewar I'd do this in a separate PR since that isn't directly related.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67576135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67714169", "body": "Rather than setting the progress to 0 when switching tabs, we might be able to improve this slightly by reading the estimatedProgress from the WebView every time the select tab changes, and updating the toolbar with that value. That way, we don't need the WebView's estimatedProgress to update again before the progress bar shows the correct value (which will likely be a problem only on slow loading pages).\n\nBut this is great for now. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67714169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67801043", "body": "Thanks for taking care of this!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67801043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68758261", "body": "We'll probably want something like this eventually for all cases where the keyboard can obscure the view, but the login screen is gone for now, so closing this PR.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68758261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68803987", "body": "See this thread for a discussion on this abstraction: https://mail.mozilla.org/pipermail/mobile-firefox-dev/2014-December/001010.html\n\nSince we're building a full web browser, we might as well expose the entire WebView since we'll likely hook into nearly every method in the API anyway. The idea is that BVC is already so tightly coupled to the WebView that it might as well have access to it directly. But we intend to (manually) limit the number of consumers that access the WebView -- currently just BrowserViewController -- to prevent leaking the WebView API everywhere.\n\nOther components, like the toolbar, need only know about a basic Tab interface (with a URL, title, back/forward state, etc.). If we can figure out a clean way to prevent these components from accessing the WebView at all (perhaps a more restricted Tab interface that Browser implements), I think we will; for now, we're simply making sure we don't touch the WebView outside of BVC.\n\nAlso, apologize for the late response to this PR. Most of us have been on vacation for the past couple of weeks!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68803987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68807803", "body": "@hirohisa, can you please <a href=\"https://bugzilla.mozilla.org/enter_bug.cgi?assigned_to=nobody%40mozilla.org&bug_file_loc=http%3A%2F%2F&bug_ignored=0&bug_severity=normal&bug_status=NEW&cf_fx_iteration=---&cf_fx_points=---&component=Browser&contenttypemethod=autodetect&contenttypeselection=text%2Fplain&defined_groups=1&flag_type-4=X&flag_type-607=X&flag_type-791=X&flag_type-800=X&flag_type-803=X&form_name=enter_bug&maketemplate=Remember%20values%20as%20bookmarkable%20template&op_sys=iOS%207&priority=--&product=Firefox%20for%20iOS&rep_platform=All&target_milestone=---&version=unspecified\">file a bug</a> and update this PR to reference that bug # (instead of \"XXX\")?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68807803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68807892", "body": "Looks OK to me (after rebase).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68807892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68808005", "body": "Looks good to me. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68808005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68808270", "body": "Closing this since it will be fixed by #59.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68808270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68888170", "body": "CocoaPods just recently added Swift support a couple weeks ago with the <a href=\"http://blog.cocoapods.org/Pod-Authors-Guide-to-CocoaPods-Frameworks/\">0.36 beta</a>. Once our libs have been updated to work with CocoaPods, I think we'll consider it.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68888170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69237478", "body": "Thanks! Can you post the steps to reproduce the NSRangeException that your first commit fixes?\n\n@wesj might be a good reviewer for this since I think he wrote the settings button handling.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69237478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69669043", "body": "Thanks for working on this! I'd like to see another iteration here first before granting review. Also, please rebase your updated PR on the latest master branch -- I noticed your commits are based on commits that are nearly a month old that won't be easy to merge.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69669043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69670706", "body": "Looks good. Thanks for the investigation/explanation about the navigation state!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69670706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69672157", "body": "Merged 0444b4eb80f67547831896347a7be6b49f72398b.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69672157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69673367", "body": "Lots of this is redundant with the search engines work, so closing for now. Might be worth trying again if UX wants to allow filtering within individual panels.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69673367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69673766", "body": "Thanks for the PR! Can you please <a href=\"https://bugzilla.mozilla.org/enter_bug.cgi?assigned_to=nobody%40mozilla.org&bug_file_loc=http%3A%2F%2F&bug_ignored=0&bug_severity=normal&bug_status=NEW&cf_fx_iteration=---&cf_fx_points=---&component=Browser&contenttypemethod=autodetect&contenttypeselection=text%2Fplain&defined_groups=1&flag_type-4=X&flag_type-607=X&flag_type-791=X&flag_type-800=X&flag_type-803=X&form_name=enter_bug&maketemplate=Remember%20values%20as%20bookmarkable%20template&op_sys=iOS%207&priority=--&product=Firefox%20for%20iOS&rep_platform=All&target_milestone=---&version=unspecified\">file a bug</a>, then update the title of this PR to reference that bug #? You can use the other open PRs as a reference if helpful.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69673766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69676360", "body": "Addressed comments.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69676360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69832188", "body": "As you pointed out, <a href=\"https://github.com/mozilla/firefox-ios/pull/61#discussion_r22818831\">this suggestion</a> won't work exactly as described since the gesture recognizer holds a weak reference to the handler, which immediately goes out of scope.\n\nHow about making a WebViewLongPressGestureRecognizer class that extends UILongPressGestureRecognizer and implements the UIGestureRecognizerDelegate protocol? Your WebViewLongPressGestureRecognizer init would accept a webView (weak reference), it would call <code>super.init(self, \"didLongPress\")</code>, and it would set <code>delegate = self</code>. Then your code in BVC would simply be:\n\n```\nlet recognizer = new WebViewLongPressGestureRecognizer(webView: tab.webView)\ntab.webView.addGestureRecognizer(gestureRecognizer: recognizer)\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69832188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69977507", "body": "Thanks for the comments. Updated.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69977507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70023656", "body": "Like you, I'm not too thrilled about the way Browser is coupled to the reader code; it'd be nice if we could pull this out into BVC or some separate class. But I'd also be OK with doing this in a follow-up just to get this landed since you already have other WIP stuff based on this.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70023656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70320494", "body": "Heh, I saw this got merged early again. Not worth reverting again, but please at least comment on or file follow-ups for my last couple comments.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70320494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70751109", "body": "Hey @codestergit, are you still looking at this? Happy to answer any questions here or in IRC, if needed!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70751109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70761282", "body": "Thanks for the contribution!\n\nUnfortunately, it looks like this got bitrotted by #100. Would you mind rebasing this PR so we can merge it?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70761282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70763336", "body": "Thanks. We should probably create a theme class to group this stuff together instead of having colors/accessibility checks spread out everywhere, but this should be OK for now.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70763336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70897293", "body": "I've been trying to test VoiceOver, but the phone (not just the app) becomes unresponsive after swiping through the elements in the page on http://www.mozilla.org -- specifically, whenever I reach the pink \"become a webmaker\" section. I have to wait several minutes for things to unfreeze before I can do anything again...it's completely unusable.\n\nInterestingly, this happens on Safari too, but not on Chrome. I'm assuming there's some bug with WKWebView + Voice Over that Chrome isn't hitting since they use UIWebView. Known issue?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70897293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70908765", "body": "Looks great, thanks!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70908765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71133097", "body": "Had to change a few things because of the way createWebViewWithConfiguration works. The returned WKWebView must use given configuration, or else we crash, which is why I added the configuration parameter to addTab (and Browser init). Also, the configuration cannot be changed once we assign it to a WebView, so the line <code>webView.configuration.userContentController = WKUserContentController()</code> had no effect before. Now, we create the WebView only after setting up the configuration.\n\nAlso had to change the way the initial tab URL was loaded. We don't want to load mozilla.org in tabAdded since new tabs may be opened for different URLs. I fixed this by adding another optional parameter to addTab, which falls back to the default URL if none is provided.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71133097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71133508", "body": "Also, was going to include test cases here, but we don't currently have support for UI tests. Might try out <a href=\"https://github.com/kif-framework/KIF\">KIF</a>, and do the tests in a follow-up.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71133508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71244507", "body": "Landed ff5e14d3089f7954e64eb7b07129b041f5fd188c and f0e4d4a9f4ab97d6ff0722efe5a41cd722b68975.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71244507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71569652", "body": "Could this also be solved by content hugging priority? Setting width to the toolbar height feels kind of hacky, and it's not obvious what it's for -- could you add a comment in the code?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71569652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71570467", "body": "Weird that we have to do this. <a href=\"http://stackoverflow.com/questions/5434656/ipad-layout-scales-up-when-rotating-from-portrait-to-landcape\">Sounds like an iOS bug</a>, though the accepted answer there says it should be fixed in iOS 7...\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71570467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71578808", "body": "No longer needed with the backout (#112).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71578808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71709502", "body": "Thanks, this is looking a lot better! I'll add my feedback in a moment -- I think this can be merged after one more iteration.\n\nCan you please squash all of your commits into a single commit rebased onto master? We prefer to avoid a bunch of temporary/merge commits to keep the git history as clean as possible. Here's one way to do this easily:\n\n```\ngit pull origin master\ngit reset --soft origin/master\ngit commit -m \"Customize behavior when long-pressing a link\"\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71709502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71758559", "body": "Thanks for researching this! Merged https://github.com/mozilla/firefox-ios/commit/13799553ec2f9c778ca724481eeddea1372f5463.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71758559/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72093265", "body": "Looks great, thanks for all the hard work! There is a race condition here with the JS response since we assume we get the response before we disable other delegates, and the other recognizers may be triggered first. But we can handle this in a follow-up and merge this now.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72093265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72118256", "body": "Looks OK, but:\n- Can we point directly to the webserver in our CSS files so we don't need the code hacks?\n- Yikes, 12MB of fonts! Can we remove unneeded ones now instead of a follow-up to avoid polluting the git repo?\n- Please squash before merging so we don't have unnecessary merge commits and temporary commits in the history.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72118256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72120294", "body": "Looks good to me. Minor nit: XCode -> Xcode.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72120294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72290899", "body": "Merged 4219726.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72290899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72582785", "body": "Hm, what problem are you having? You should be able to just do\n\n```\ngit pull --rebase\ngit push -f\n```\n\nto update your PR branch.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72582785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72715311", "body": "Unfortunately, I just hit this bug again with the PR applied. :(\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72715311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72717263", "body": "I can't reproduce this reliably, so I don't have great STR. I'm doing things erratically to introduce as much variation as possible, such as waiting different time intervals between changing pages, reloading in the middle of redirecting, going to other sites (yahoo.com) in between, etc.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72717263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72767971", "body": "Yeah, the above should work here. It's common (and preferred) to rebase your pull request rather than introducing merge commits and follow-up commits on top of it. You'll just need to use <code>git push -f</code> after rebasing since it rewrites your history.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72767971/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73324235", "body": "Note the build error here.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73324235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73338404", "body": "Thanks for the fixes! When making this last change, could you try rebasing your commit <a href=\"https://github.com/mozilla/firefox-ios/pull/126#issuecomment-72582785\">as suggested here</a>? After rebasing, your <a href=\"https://github.com/mozilla/firefox-ios/pull/126/commits\">commits</a> should show only two entries: <code>load page of suggestion url, not search url.</code>, and <code>Not about this bug, just BrowserToolbar doesn't need follow UITextFie\u2026</code>.\n\nIf you're having trouble, you can ask here or on <b>irc.mozilla.org</b> in the <b>#mobile</b> channel. My nick is <b>bnicholson</b> :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73338404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73338838", "body": "Fixed by #133.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73338838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73341201", "body": "Merged f9f159ab8a2d3db40c913888b73bc7f40da44883.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73341201/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73567727", "body": "Thanks, looks good! Merged af817f1.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73567727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73569420", "body": "Merged c934e5d with nit fixed.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73569420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73950437", "body": "Merged 9e07b94.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73950437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74145668", "body": "Looks OK as an initial implementation, though your comment in <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1129631\">bug 1129631</a> confuses me:\n\n> Also fixed the delay using a dispatch to the main thread.\n\nWhere? I don't see any dispatches in this. If it's not needed anymore, how did you fix it?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74145668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74173768", "body": "Before I look too much at the JS, would you be able to include LoginManagerContent.jsm in an initial commit, then apply these commits on top? Git should then recognize that Passwords.js is a modified version of that file, and it would show a diff from the original. This would be helpful for both reviewing and blame context.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74173768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74180991", "body": "Hi @MichaelKohler, thanks for the PR. We actually just removed the settings XIB in PR #149, so this PR is no longer needed. In general, we're killing off all of our XIBs in favor of programmatically defining our layouts.\n\nIf there are any <a href=\"https://bugzilla.mozilla.org/buglist.cgi?f1=OP&list_id=12003005&f0=OP&emailtype1=exact&o2=substring&f4=CP&emailassigned_to1=1&query_format=advanced&j1=OR&f3=CP&f2=product&bug_status=UNCONFIRMED&bug_status=NEW&bug_status=ASSIGNED&bug_status=REOPENED&email1=nobody%40mozilla.org&v2=iOS\">unassigned iOS bugs</a> that look interesting to you, please let us know and we can help advise you :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74180991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74181076", "body": "Looks OK to me.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74181076/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74205389", "body": "To get a working project with these changes:\n1. <a href=\"https://github.com/Carthage/Carthage#installing-carthage\">Install Carthage</a>.\n2. Run <code>carthage update --no-build</code>.\n\nSome notes:\n- We still have a swift-json git submodule sitting in the tree. Looks like it was unused, so removed.\n- Snappy was renamed to Snap. Updated the code accordingly.\n- We were importing SWXMLHash.swift directly before, and we were using some non-public APIs. Moving it to a subproject encapsulates those methods and caused build errors, so I updated the code to use the equivalent public APIs.\n- I imagine this will break Travis CI. I'll leave that to @st3fan :) Note that when testing this, I had to delete the ~/Library/Developer/Xcode/DerivedData directory whenever removing a project since it stays cached in Xcode. Travis might continue to pass for the same reason.\n- We'll also want to update the README. I can tack on a commit doing that before landing this, but figured I'd get some feedback on this first.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74205389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74286486", "body": "> I'm getting a build failure:\n\nDid you try deleting DerivedData? Everything is working for me with a clean build. Though I did just find another Snappy -> Snap change that I had to make from the recent Settings XIB PR, which is fixed now.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74286486/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74707676", "body": "Thanks! Sorry for the review delay. This looks good to me with the suggested change above.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74707676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74773592", "body": "Thanks for the PR! I made a build using this and added some extra buttons <a href=\"https://github.com/mozilla/firefox-ios/blob/master/Client/Frontend/Home/Panels.swift#L54\">here</a> so that the toolbar overflowed, but I'm not able to scroll horizontally. Is that what this PR is for, or something else?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74773592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74915014", "body": "The specs for <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1131284\">bug 1131284</a> have changed quite a bit since it was filed, and scrolling is no longer necessary for the V1 release. That said, it would still be useful to have for the future since you already have an open PR for it. I moved this scrolling to a separate bug (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1134282\">bug 1134282</a>).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74915014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74916049", "body": "> I notice that the buttons are getting laid out manually in the container's layoutSubviews call here\n\nYeah, this file is one of the older artifacts from our very early prototype implementation (before deciding that we were even making a web browser!). It doesn't work well at all across different devices; on my smaller iPod touch, the icons don't even fit on the screen. I have a mostly complete patch I'll put up today that refactors most of this code, including autolayout :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74916049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74940683", "body": "Looks good as an initial implementation. r=me with comments addressed.\n\nRather than hiding the webView, loading the page, then showing the webView again, another option could be to load the reader URL/do the parsing in a separate (hidden) webView. This might give us a bit more flexibility with transitions since we could show the previous page longer, or show some loading animation directly in the about:reader HTML while we wait for the result.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74940683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75098331", "body": "That's probably the easiest way forward since the spec changed for V1, but thanks for the contribution! <a href=\"https://bugzilla.mozilla.org/buglist.cgi?f1=OP&list_id=12021289&f0=OP&emailtype1=exact&o2=substring&f4=CP&emailassigned_to1=1&query_format=advanced&j1=OR&f3=CP&f2=product&bug_status=UNCONFIRMED&bug_status=NEW&bug_status=ASSIGNED&bug_status=REOPENED&email1=nobody%40mozilla.org&v2=ios\">Here's a full list of unassigned bugs</a> if you want to find something else :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75098331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75117995", "body": "@dusek, I filed <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1134757\">bug 1134757</a> to use <code>accessibilityIdentifier</code> when appropriate. I think we should continue to use <code>accessibilityLabel</code> whenever possible since the idea behind KIF (and most UI automation tests) is that the tests should be run \"as a user\"; <code>accessibilityLabel</code> is a user-facing label, but <code>accessibilityIdentifier</code> is not. As mentioned in the bug, one element we may want to change is the URL bar's \"Address and Search\" label -- this should likely be used as the identifier instead.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75117995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75166564", "body": "Added these follow-up commits to #153.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75166564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75617087", "body": "Thanks for digging into this!\n\nAs you said, the issue here is that the site is providing an invalid URL with invalid characters missing the necessary encodings. We need a way to encode these invalid characters. Breaking the URL down into components might be one way to do that, but what if we use <code>stringByAddingPercentEncodingWithAllowedCharacters</code> to escape these characters instead? Then we don't need to touch LongPress.js at all, and we save some complexity overall.\n\nAFAICT, there's no built-in character set that includes all valid URL characters, so we'd have to roll our own. Perhaps something like this:\n\n```\n// top-level define in LongPressGestureRecognizer.swift\nprivate let URLCharacterSet = NSCharacterSet(charactersInString: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~:/?#[]@!$&'()*+,;=%\")\n...\n    let encodedString = hrefStr.stringByAddingPercentEncodingWithAllowedCharacters(URLCharacterSet)\n    if let linkURL = NSURL(string: encodedString!) {\n...\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75617087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75617429", "body": "Also, note that image src URLs could have the same issue, so we should do the same thing a few lines below for <code>imageElement</code>.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75617429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75618474", "body": "Thanks, this is looking good! This should be ready to go with a few additional changes.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75618474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75670589", "body": "Looks good, thanks! Merged d0b9046.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75670589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75822371", "body": "Looks OK with cleanup. I know the PR for the first two commits landed, but I'm not sure about the third (`Create a Join table for bookmark favicons`). I guess this needs to wait for that commit since this depends on JoinedHistoryVisitsTable.swift?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75822371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76037413", "body": "Thanks, looking good! In addition to the png file, we should also remove the entire leaf.imageset asset directory.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76037413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76070404", "body": "Also fixed HomePanelDelegate to include a reference to itself as the first argument like other delegates.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76070404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76225318", "body": "Looks good to me. Glad we're finally getting rid of this code!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76225318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76234753", "body": "> Now to figure out why the CI failed. :disappointed:\n\nNot your issue, we're still getting things sorted out since we just added Carthage support :) Thanks for the fix, looks great!\n\nMerged 7d9ad93.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76234753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76251024", "body": "Looks like my comments got clobbered again, so still lots of questions/comments...\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76251024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76354530", "body": "Argh, I found that this still doesn't work the first time the keyboard is shown. What's happening here is that `KeyboardWatcher.defaultWatcher` isn't getting created until we access it for the first time, after which the `keyboardWillShow` notification has already been fired. A semi-hackish fix would be to touch `KeyboardWatcher.defaultWatcher` in AppDelegate so it gets created ASAP, but I'll try to think of something better.\n\nI already tried fixing it by doing this:\n\n```\nprivate let DefaultKeyboardWatcher = KeyboardWatcher()\n\nclass KeyboardWatcher: NSObject {\n    class var defaultWatcher: KeyboardWatcher {\n        return DefaultKeyboardWatcher\n    }\n...\n```\n\nThat doesn't work either because apparently globals in Swift are always computed lazily. Yet another lesson learned in this bug!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76354530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76429753", "body": "I can't think of a way to make `defaultWatcher` automatically register itself to receive notifications, so I put the `NSNotificationCenter` handling in a `startObserving` method, which is called at startup in AppDelegate.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76429753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76845430", "body": "Merged 09c5ba0.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76845430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76849524", "body": "> Using these formatted strings for localized strings is probably a bad idea. It removes the ability to reorder the arguments.\n\nFiled [bug 1138711](https://bugzilla.mozilla.org/show_bug.cgi?id=1138711).\n\n> These wil need an active/hover state. Make sure its filed at least.\n\nFiled [bug 1138713](https://bugzilla.mozilla.org/show_bug.cgi?id=1138713).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76849524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77087212", "body": "Updated to use a wrapping flow layout instead of a scrollable one. Like the other search UI bug, this turned out to be much more effort than I had hoped.\n- I spent awhile trying to do the wrapping in a `UICollectionView` with a `UICollectionViewFlowLayout`, and got pretty far (with cells wrapped and positioned properly using [UICollectionViewLeftAlignedLayout](https://github.com/mokagio/UICollectionViewLeftAlignedLayout)). But I got stuck when trying to limit the suggestions to a certain number of rows, and ended up switching to manually setting the layout in `layoutSubviews`.\n- One issue was that `heightForRowAtIndexPath` is called _before_ `cellForRowAtIndexPath`, so we need some way to calculate the height of the suggestion view. I ended up keeping a reference to `suggestionCell` around so that we could trigger an early layout to find its height before it's added. Let me know if you have any better ideas.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77087212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77227257", "body": "Added two additional commits addressing some of the questions answered by UX this morning (not including the default engine at the bottom, and using the user-entered query if there are no suggestions).\n\nI also threw in a fix that ellipsizes suggestions that are too long to fit on their row -- @darrinhenein, is this how you want these handled?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77227257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77253397", "body": "@darrinhenein Thanks, updated with the new assets!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77253397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77285400", "body": "Merged 3220566 with review comments addressed.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77285400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77624101", "body": "@jhugman, any reason you closed this?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77624101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77624559", "body": "Ah, I see. Looks like this got moved to #201. I know it's annoying, but make sure Bugzilla stays in sync! The bug is still pointing to this PR, and there's mention anywhere that a new one was opened.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77624559/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77926383", "body": "Thanks for the pull request! I'll wait until UX has made a decision in bug 1135814 before reviewing this.\n\n@tecgirl, @darrinhenein: it's still a work in progress, but maybe using the PR here as a prototype would be helpful.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77926383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/78739288", "body": "I was wondering the same thing. I had a WIP commit that switched title over to nil everywhere, then changed my mind. Is it useful for us to differentiate between empty titles and nil ones? I can't think of any situations where it would be.\n\nWe'd have to check nil _and_ empty strings everywhere (though that's admittedly less painful with optionals), and it's unclear to me when we'd use one over the other: if a user edits a bookmark and removes the title, should we consider that \"no title\" or \"empty title\"? And unless all of our other platforms support null titles, that difference would be lost syncing anyway...\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/78739288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/79358286", "body": "Blah, just realized I'm looking at an old PR. Should be safe to close then, right?\n\nEdit: Nope\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/79358286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/79367212", "body": "> For the left and right swiping of the row (for Mark as Read/Unread and Delete) I have imported the SWTableCellView dependency. This did not work as a Carthage dependency so I imported the sources straight into the ThirdParty directory.\n\nAs discussed on IRC, we could still import it and add the files directly instead of the .xcodeproj (which is what we do for GCDWebServer). That still gives us the versioning benefits of Carthage.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/79367212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/81922953", "body": "Thanks, works great! Merged 0fdaa8d.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/81922953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/81927843", "body": "Looks like this needs to be rebased onto master, but other than that, this looks good. Note: your commit comment `Bug111837` is missing the last `8`.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/81927843/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/81932273", "body": "Nice. Merged 46647ae.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/81932273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/81933059", "body": "Pushed 25e3ddb0d5eb245579b1915827a6658ff9a95711.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/81933059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/8740009", "body": "This block is almost exactly the same as the block in Clients.swift, with some minor differences. Can we factor this out into a shared method?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/8740009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/8740058", "body": "Nit: drop newline\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/8740058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/8937205", "body": "Nit: whitespace\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/8937205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/8937229", "body": "Nit: remove newline\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/8937229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/8937315", "body": "private\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/8937315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9364976", "body": "What do you think of moving this class to your BrowserLocationView.swift? It's a pretty small class that I'd consider a part of the location view, and we could keep it private if we kept it there.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9364976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9365303", "body": "If we want to match Android's behavior, you could also look for \"m\" or \"mobile\": http://mxr.mozilla.org/mozilla-central/source/toolkit/components/reader/AboutReader.jsm?force=1#556.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9365303/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9365372", "body": "What is <code>%READER-MESSAGE%</code> supposed to be used for?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9365372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9365482", "body": "Adding a namespace seems like a good idea, but \"_firefox_ReaderMode\" is kinda ugly. Any reason we can't just use \"ReaderMode\"? The only namespace collisions we should have is with our own user scripts, right? If so, the _firefox_ prefix seems superfluous.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9365482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9964239", "body": "Eh, using tags always screams hack to me, but I guess this case is OK.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9964239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10193501", "body": "Can you do this part now? Should only take a second to cut/paste it, and it'd be nice to avoid polluting BVC more.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10193501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10193537", "body": "Remove this hunk?\n\nEdit: Oh, looks like you just commented out all the URL bar scrolling parts since you said they didn't work. Can you maybe add a `// FIXME - URL bar scrolling` or similar to the top of every section you commented out just to make sure these things don't get overlooked/deleted?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10193537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10193566", "body": "I'd remove these changes...they don't do anything, and just add noise to the commit (and `git blame`).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10193566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10194108", "body": "This line is redundant since `wrapInEffect` already adds the effect view.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10194108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10194169", "body": "Oh...you removed it here. I agree it's less confusing to keep all of the `addSubview`s in the same place, so ignore my other comment.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10194169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10194218", "body": "So can we just remove `browserToolbarDidLongPressBookmark` altogether? Unless there are already plans to make it do something else.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10194218/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10194239", "body": "Remove \n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10194239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10194254", "body": "Remove\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10194254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10194300", "body": "What's this change for? Won't it break scrolling the URL bar off screen?\n\nEdit: Oh, I need to read bug comments more carefully.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10194300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11008409", "body": "Thanks for the info. How about when adding an attachment? I see a <b>Reassignment:</b> field that allows me to take that bug when uploading -- do you have that option?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11008409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11008706", "body": "Thanks, I'll remove this part from the README then. But I agree you should get [editbug privileges](https://bugzilla.mozilla.org/page.cgi?id=get_permissions.html) since you're such an active contributor!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11008706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20265768", "body": "I'm mixed on this. It's nice to enforce an Account being set on construction, but we break compatibility with anything relying on this constructor. This reminds me of Android's View, where it has only the context/attrs/defStyle params, and you have to use separate setters for anything else you need to pass in.\n\nAlthough I'm generally against storyboards over code, I think they are occasionally useful for throwing together quick prototypes. Blocking off this constructor prevents IB compatibility altogether. Are we OK with that?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20265768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20333775", "body": "Nit: If we're following the conventions at https://github.com/raywenderlich/swift-style-guide#classes-and-structures, we should drop the space before the colon (\"cell: \" and not \"cell : \"). Here and throughout.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20333775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20334725", "body": "I think we changed these to be set in the initializer. Rebase?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20334725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20334754", "body": "Nit: no semicolons (here and elsewhere). Also, make this private?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20334754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20335436", "body": "A bit nicer to use 'for i in 0..panels.count'.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20335436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20335458", "body": "Nit: newline\nnewline\nnewline\nnewline\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20335458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20335515", "body": "What's this data2? Doesn't look like you're using it.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20335515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20335531", "body": "Nit: newline\nnewline\nnewline\nnewline\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20335531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20335547", "body": "Nit: fix missing EOF newline\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20335547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20335864", "body": "What's going on here? Why would we want to allow setting nil items?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20335864/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20336139", "body": "Blegh, when will _selectedButtonIndex be -1? Can we force it to always be set to something? This code is quickly growing complex.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20336139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20336961", "body": "Missing an override here? Or do you not include override for protocols? (I don't remember and I can't test it now).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20336961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20337567", "body": "Can you add a few comments in the block above describe what this is doing (sorting the items based on prefs, I think)? It's not immediately clear what's happening here.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20337567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20337855", "body": "Dispatch async to background thread, then dispatch async to the main thread. I've seen this somewhere before! :)\n\nFile a bug to factor this out into something AsyncTask-ish? We'll probably be using this pattern a lot.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20337855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20338159", "body": "This isn't threadsafe is it? The Controllers array and the actual controllers in this array are manipulated on the UI thread. Also worried about self.accountManager below. If we're going to start throwing things onto other threads, we need to be sure those things are built with thread safety in mind.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20338159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20338230", "body": "Nit: Put init at the top of the class\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20338230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20338550", "body": "viewWithTag() is pretty terrible here since we have to use magic numbers to get refs to these views. If we must use nibs, can we set up IBOutlets? Otherwise, just set this up in code and hold the ref?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20338550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20683251", "body": "Yeah, hence the TODO right above it. :)\n\nI figure this is best left for bug 1092387 once we've established a localization plan.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20683251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20678794", "body": "What's the point of this @objc annotation?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20678794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20678880", "body": "Nit: We generally use trailing braces instead of putting them on a new line.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20678880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20679098", "body": "Any reason to prefer \"(item, error) -> Void\" over just \"item, error\"?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20679098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20679699", "body": "A comment would be useful here -- it's difficult to tell what's going on in this big code blob.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20679699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20680189", "body": "For the sake of future-proofing, maybe this should be using account prefs instead of using NSUserDefaults directly. Maybe a TODO item once we have an Account here that we can use?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20680189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20680397", "body": "Ack, NSLayoutConstraint is nasty. Any reason you aren't using Snappy for these?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20680397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20680492", "body": "Nit: Not sure what these empty \"//\" lines mean -- I'd just remove them.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20680492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20680672", "body": "Can you file these as follow-up bugs, marked blockers of this bug, and then put the bug # in the comments?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20680672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20680911", "body": "Wow, I hate boilerplate stuff like this. Doing some brief Google searching, it looks like this is the accepted way to detach view controllers. Maybe we can start creating some Swift extensions to factor out redundant code.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20680911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20681013", "body": "Why not use Snappy for all of these?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20681013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20526159", "body": "Nit: semicolons!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20526159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20527963", "body": "The label in dispatch_queue_create is optional, so change this to \"String?\"?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20527963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20824518", "body": "As mentioned in https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/CustomizingExistingClasses/CustomizingExistingClasses.html, under \"Avoid Category Method Name Clashes\", it's recommended to use a 3-character prefix to avoid namespace collisions for other libs extending the same classes (e.g., see Snappy's snp_ prefix). I'd say moz_ seems like the obvious choice :)\n\nI'm iffy on whether this should be an extension at all, though. Is this something most UIViewControllers would want to use, or is it more specific? Since this is used only in ActionViewController, would it make sense to keep this function local to that class? Or do you expect to be using this in other places?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20824518/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20826129", "body": "Nit: I'd use icon: nil instead of icon: \"\".\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20826129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20826658", "body": "Can we make these classes private? It'd be nice to avoid exposing LoginViewController outside of this file if it's not used anywhere else (especially since we already have a class called LoginViewController in Client, which could get confusing).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20826658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20826829", "body": "Nit: drop semicolon\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20826829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20827446", "body": "Nit: I think you could simplify this to just \"loginCallback: { _ in () }\" if you want to remove the extra line/empty return.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20827446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20827806", "body": "Yeah, maybe inside of a struct so it's still not completely global? So you could use it like <code>ExtensionUtils.extractSharedItemFromExtensionContext(...)</code> or something. At least that's what we would do on Android to prevent polluting the global namespace -- I'm not sure what the iOS conventions are.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20827806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20827870", "body": "Can we create a Utils/ folder for this instead of putting it at the top level? We'll probably be adding a lot more util-like classes in the future.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20827870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20827980", "body": "I'll never understand these generated XML files...any idea why it adds ExtensionUtils 4 times here?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20827980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20828004", "body": "Weird, what's this (null) entry?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20828004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20546736", "body": "Hardcoding these in AccountManager adds complexity and couples these values to the test. Can we create an internal subclass of AccountManager used only for the test?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20546736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20546765", "body": "What's this for? Remove it?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20546765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20546835", "body": "Nit: Leave this as is.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20546835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20546869", "body": "Why modify logoutCallback to take an account? I don't see you using this anywhere.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20546869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20546968", "body": "Semicolons!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20546968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20955102", "body": "Nit: I don't think there's generally a newline after doc comments\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20955102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20955118", "body": "Same newline nit\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20955118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20955134", "body": "// -> ///\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20955134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20955492", "body": "Shorthand: object[\"title\"] = item.title ?? \"\"\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20955492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21778323", "body": "When is this message shown to the user? If this is an on-demand message that appears when the site requests location data, we should probably change this to something like \"Would you like to share your location data with this site?\"\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21778323/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21778351", "body": "Unrelated change? I'd leave this out to keep the diff small :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21778351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21776931", "body": "Nit: No space before \":\"\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21776931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21776943", "body": "Nit: Remove this newline\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21776943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21776952", "body": "Nit: Remove this newline\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21776952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21776972", "body": "Nit: No space before \":\"\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21776972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21777037", "body": "Nit: Space before and after \"{\"\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21777037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21777049", "body": "Nit: Remove newline\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21777049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21777069", "body": "Nit: Space before \"{\"\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21777069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21844070", "body": "Yeah, I'm talking about moving this block in the file. Any reason for it?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21844070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21844165", "body": "Looks good then. Thanks for the clarification.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21844165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21866692", "body": "Nit: No parens around if condition (here and elsewhere).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21866692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21867192", "body": "The callback pattern I've seen so far (here, and in Alamofire) use a single callback with different variables for the result. Should we do the same, instead of having multiple callbacks?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21867192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21933275", "body": "Nit: Please remove these MARK comments.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21933275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21934044", "body": "Nit: No space before colons.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21934044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21934078", "body": "Nit: Please use \"URL\" over \"Url\" throughout.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21934078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21998122", "body": "Nit: indentation (I don't know why Xcode insists on breaking this every time we paste it)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21998122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22009141", "body": "Nit: prefer let over var\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22009141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22009106", "body": "Nit: prefer let over var (here and elsewhere)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22009106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22009243", "body": "Nit: semicolons! (here and throughout)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22009243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22006907", "body": "Nit: no space before colon (here and throughout)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22006907/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22000774", "body": "Nit: indentation again (here and throughout)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22000774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22013265", "body": "As discussed in IRC, we probably don't want the OrCreate version here just for a getter.\n\nSide note: I can't find any documentation on some of these methods, and Xcode's autocompletion is broken for me for all MR-related code. Sigh.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22013265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22013434", "body": "Nit: no parens around condition (here and throughout)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22013434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22014219", "body": "So what's the reason a site holds multiple favicons? Is it because it can serve them at different resolutions? We could just save the highest res favicon we need and use that like everywhere to avoid managing a set of favicons per site, especially since our designs have trending away from favicons recently.\n\nAlso, should Favicon be storing dimensions, or will we need to pull that from the image?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22014219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22014657", "body": "Please use /*\\* style comments so this documentation shows up in Xcode for classes (here and throughout).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22014657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22014684", "body": "s/throws/throw/\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22014684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22014819", "body": "I can imagine us passing this into places that expect a GenericCache that try to set a value, and nothing will happen. Maybe add an assertionFailed() as the setter body?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22014819/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22014927", "body": "Nit: drop the unused assignment\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22014927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22014964", "body": "needsUpdate is unused.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22014964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22015118", "body": "Oh, I guess a failed assertion won't work if we're doing this.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22015118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22015565", "body": "Do we really want getForUrl() to return a set of favicons? Getting an array of favicons vs. a single favicon can cause things to get messy, leading to things like this (arbitrarily using the first item in the array).\n\nI'd probably prefer just storing a single favicon per site as mentioned above, but if we don't do that, can we still make getForUrl() return a single icon that best matches the parameters given to it? For example, the options could include a preferred size.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22015565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22016047", "body": "Since we only return after a cache hit, we lose the benefit of an LRU cache for cache misses. Have you considered restructuring things a bit to remove the default cache, and instead having the master cache update the LRU cache with the default item for misses?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22016047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22016220", "body": "Nit: I think you can leave the \"_ in\" off the end of these callbacks.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22016220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22016366", "body": "?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22016366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22016409", "body": "What's the point of this check? Where/why would we save the default favicon?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22016409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22072151", "body": "Wes and I discussed using https://github.com/raywenderlich/swift-style-guide#constants as a basis for style conventions over IRC. Not sure if you were part of those discussions, but it recommends using CamelCase for constants instead of ALL_CAPS. If you agree with those conventions, we should probably update the README and try to enforce them rigorously to keep our code more uniform.\n\nAlso, I'd defined this as a \"static\" private let outside of the class so it's not created every time this method is called (and keeps the method body a bit shorter).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22072151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22071891", "body": "I'm sad GitHub doesn't show trailing whitespace since \"git show\" shows them as big nasty red blocks. In general, I think it's good style to not commit trailing whitespace. Can you rebase this with --whitespace=fix? It would also be good to enable Xcode's \"Automatically trim trailing whitespace\" with \"Including whitespace-only lines\".\n\nOn a related note, I saw that 799b2fd8b36501d8997703f9058f10b7324ea238 introduced a lot of whitespace, which I just clean up in ba7055cd1ac40c3eb41da2633076fc1d0070ffdf. I wish there were a good way to enforce this for contributors somehow...\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22071891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22073970", "body": "\"locationTextField\" doesn't seem like a very useful method name. Rename this to \"getSuggestion\"? Then you could reduce \"suggestionForPartialLocation\" down to \"partialLocation\".\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22073970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22074630", "body": "Why dispatch_async here? A comment would be useful to explain why it's needed.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22074630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22074927", "body": "Nit: Please define all variables at the top of the class.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22074927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22075366", "body": "Nit: If we're using the aforementioned style guide, we should avoid unnecessary uses of \"self\".\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22075366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22075581", "body": "Nit: indentation\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22075581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22078666", "body": "Note that you'll have to rebase this again since some of this BrowserToolbar code has been moved into TabBarViewController. Sorry for all the churn -- things are changing pretty fast :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22078666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22078738", "body": "Nit: I believe the \"_ in\" is unnecessary.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22078738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22079182", "body": "Since we update the progress bar only for KVO changes, the progress bar will be out-of-sync if we switch between two tabs while one of them is loading. We could fix this by updating the progress bar with the selected WebView's progress every time the selected tab changes. I'd be fine with pushing this to a follow-up.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22079182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22079958", "body": "Please remove all trailing whitespace (here and throughout).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22079958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22080131", "body": "Please use \"update\" instead of \"set\" for consistency with other methods here.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22080131/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22080404", "body": "Nit: We're following the style conventions listed at https://github.com/raywenderlich/swift-style-guide, which means no space before colons (here and throughout). I'll have to update the README so our conventions are more explicit :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22080404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22390386", "body": "All files use the standard MPL format as of bug 1114294, so please use that instead.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22390386/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22390631", "body": "I wouldn't have expected lastVisit to be optional. When will we add history entries that don't have a date? If possible, making this required will likely be helpful for avoiding special cases when sorting, syncing, etc.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22390631/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22390457", "body": "Shouldn't we be avoiding the OrCreate\\* versions in getters?\n\nEdit: Reading where this is used below, I guess not. This is basically a lazy getter, which makes sense.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22390457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22391240", "body": "Unused?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22391240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22393141", "body": "I still need to spend a day or two experimenting with MagicalRecord/Core Data, but from what I've been reading [1][2], I'm not convinced this is safe. Every thread has its own NSManagedObjectContext, and you're implicitly using multiple contexts here for the same object.\n\n[1] http://stackoverflow.com/a/4264793\n[2] http://stackoverflow.com/a/23769540\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22393141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22497672", "body": "Progresss -> Progress\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22497672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22499926", "body": "I don't think we want to update the back/forward state every time the load progress amount changes. Perhaps UIWebViewDelegate#webViewDidStartLoad would be a suitable place to handle this.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22499926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22833067", "body": "Shorthand: you can replace these with just \"make.edges.equalTo(headerView)\".\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22833067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22983206", "body": "Currently, Browser just holds state, and the controller logic, acting on the WebView, is all done by BVC. If possible, it'd be nice to keep this toggling logic separate from Browser and have it in BVC or some ReaderMode class tied to the WebView.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22983206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22983524", "body": "Since the WebView (and now Browser) pass themselves along in their delegates, maybe we should just leave these delegates attached all the time? When they're called, we can just bail if webView != selectedTab.webView (or browser != selectedTab).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22983524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22983615", "body": "Missing license header.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22983615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22983840", "body": "Can we just throw here instead? Hopefully this will get caught by your completionHandler error callback?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22983840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22984169", "body": "Would it be possible to:\n1) Return the raw article data in mozReaderize() instead of the template,\n2) Replace your template <code>%READER-KEY%</code>s with elements that have those keys as IDs,\n3) Load the template string using loadHTMLString(),\n4) Then pass in JS with the article, along with a method that uses <code>document.getElementById()</code> to load the article into the template?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22984169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23043325", "body": "Nit: indentation\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23043325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23043536", "body": "I think it's generally a good idea to make delegates weak -- that's what iOS does everywhere. I don't think you have a ref cycle in this case, but it'd be a good change anyway for the sake of future proofing.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23043536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23043563", "body": "...but there is one here as mentioned in IRC. ReaderMode -> Browser -> helpers -> ReaderMode.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23043563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23103236", "body": "Can we keep this private since it's not used outside this file?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23103236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23103251", "body": "Same here (private).\n\nOr maybe keep the internal access level and move BrowserLocationView to its own file? Since it's a self-contained view with a delegate and all, maybe it'd be cleaner to keep this separate.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23103251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23107974", "body": "This line concerns me a bit. Where did these values come from? What happens on different orientations/devices?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23107974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23108060", "body": "Can you change this to didSet? Then you can get rid of both the getter and the second var.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23108060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23118548", "body": "Added a cancel method.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23118548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23056363", "body": "We keep having a hard time keeping these comments indented properly. You guys should use my Mozilla Xcode Swift template!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23056363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23269558", "body": "According to <a href=\"https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIAccessibility_Protocol/index.html#//apple_ref/c/data/UIAccessibilityScreenChangedNotification\">the docs</a>, UIAccessibilityScreenChangedNotification expects a parameter, \"which is either an NSString object that VoiceOver speaks or an accessibility element that VoiceOver moves to\".\n\nCould passing nil here be causing the strange behavior you're seeing? What happens if you explicitly choose the element?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23269558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23340641", "body": "I assume this will break going from landscape -> portrait (or vice-versa). I guess we'll need some orientation change listener?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23340641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23340971", "body": "Are we planning on having the reader theme controls be native or shown as an element in the page? Android does the latter -- if we followed, then these could all be defined in the JS instead, and the page would just send a JSON string to Swift whenever the user changes prefs (and Swift wouldn't need to actually parse the string).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23340971/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23467188", "body": "Yep, see initial PR comment and the comment in code. <code>viewWillAppear</code> is still too early and crashes. <code>viewDidAppear</code> works, but it's delayed -- there's noticeable lag before the text is highlighted and the keyboard appears.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23467188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23468213", "body": "Good question -- it shows the dialog, but the selected tab doesn't change (same behavior as Safari). To be consistent with desktop/Android, we should probably switch to the alerting tab. I'll file a follow-up.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23468213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23471597", "body": "Should have MPL license header.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23471597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23471834", "body": "Yuck. I'd prefer doing this instead:\n\n```\nlet stylePath = ...\nlet css = ...\nif stylePath == nil || css == nil || ... {\n    return nil\n}\n```\n\njust to avoid all this nesting, but your call.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23471834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23472064", "body": "Can you file a follow-up for removing/fixing all of these invalid resources?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23472064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23577937", "body": "The reader button is part of BrowserLocationView, so wouldn't that interfere with it?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23577937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23652835", "body": "I know this code is temporary, but it seems quite fragile since it will break with other gesture recognizers attached to the webview (including the context menu PR). As a more robust temporary fix, can we attach this recognizer permanently, then just bail in <code>SELshowReaderModeStyle</code> if the readerMode state is not Active?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23652835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23652962", "body": "Remove this\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23652962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23653208", "body": "Nit: spaces around operators <code>/</code> and <code>-</code>\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23653208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23654473", "body": "It's nice that you're able to use a rows array to reuse logic in certain places, but it's not so nice that you have a bunch of magic indices everywhere. Would you object to something like this?\n\n```\nlet fontTypeRow = UIView()\nlet fontSizeRow = UIView()\nlet themeRow = UIView()\nlet sliderRow = UIView()\nlet rows = [fontTypeRow, fontSizeRow, themeRow, sliderRow]\n```\n\nThen instead of <code>for idx in 0...3</code>, you would have <code>for row in rows</code>. And instead of things like <code>inRow: rows[0]</code>, you could do <code>inRow: fontTypeRow</code>. So things are more named this way, but you still have the benefits of your row array.\n\nEdit: although I guess you can't really use <code>for row in rows</code> if you want to do things like <code>self.rows[idx-1]</code> that you have below.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23654473/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23654842", "body": "What is this \"Print\" theme?\n\nAlso, we have \"Auto\" on Android, which switches between light and dark depending on the ambient light. I wonder if that's possible on iOS.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23654842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22815505", "body": "Nit: Please remove newline\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22815505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22815543", "body": "Please remove newline (we generally do not add extra lines before or after curly braces).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22815543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22815633", "body": "Please fix indentation (the \"*\"s should line up vertically).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22815633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22815691", "body": "No newline (etc., here and everywhere else below).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22815691/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22815874", "body": "Please undo this change -- the stars should be aligned :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22815874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22816570", "body": "Please remove all trailing whitespace (git rebase HEAD^ --whitespace=fix).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22816570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22816608", "body": "Undo this change\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22816608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22816684", "body": "All new files need to include the Mozilla license header, so please add that here (copy it from any other Swift file).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22816684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22816828", "body": "Nit: Please add spaces after colons and commas (url: NSURL, location: CGRect). Here and throughout.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22816828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22817533", "body": "You can drop the comment here -- I don't think this code is ambiguous at all.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22817533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22817585", "body": "Nit: Space after \"//\" or \"///\" (here and throughout).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22817585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22818831", "body": "Rather than wrapping all of the WebView methods in delegates, we've been simply adding the delegates directly to the WebView in BrowserViewController (<a href=\"https://github.com/mozilla/firefox-ios/blob/master/Client/Frontend/Browser/BrowserViewController.swift#L99\">example</a>). Please use the same pattern here -- remove this delegate, and have BVC assign the gesture recognizer directly (tab.webView.addGestureRecognizer(...)).\n\nEdit: To elaborate, I recommend something like this in BVC when a tab is added:\n    let recognizer = UILongPressGestureRecognizer()\n    recognizer.delegate = BrowserLongPressHandler(tab.webView)\n    tab.webView.setGestureRecognizer(recognizer)\n\nThen you can remove the BrowserLongPressHandlerDelegate protocol, plus all gesture recognizer-related code from Browser.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22818831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22819221", "body": "Rename longPressGesture -> longPressGestureRecognizer.\n\nAlso, same here about being non-optional. It's assigned in init(), so it should never be nil.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22819221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22819327", "body": "Remove \"//\", just have an empty line here.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22819327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22819475", "body": "Nit: space after \"if\"\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22819475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22820200", "body": "didLongPress -> SELdidLongPress (we've been prefixing all selectors with SEL).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22820200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22820690", "body": "Make this private (along with all other methods below that aren't called outside of this class).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22820690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22825484", "body": "Spaces after commas\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22825484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22826261", "body": "I'd leave this change out of the patch. It might be worth putting in another PR, but it's not related to the issue here.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22826261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22828996", "body": "This should be non-optional since it's being assigned in init() (and can never become nil after that). Also, please make this variable private since it's not used externally.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22828996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22829625", "body": "Delegates should be declared using \"weak var\" to prevent any accidental ref cycles.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22829625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22831259", "body": "I don't really see the value of doing this. Why not just unconditionally call findHrefLinkAtPoint/findImageSrcLinkAtPoint?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22831259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22831669", "body": "Why are you calculating these rects? I don't see them actually used anywhere.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22831669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22831913", "body": "What's going on here? Why are you disabling other gesture recognizers? If you're simply trying to override the built-in gesture recognizers, have you considered <a href=\"http://stackoverflow.com/a/15603818\">doing this</a>?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22831913/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22832149", "body": "This looks like an ugly hack. We should definitely look for an alternative approach here.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22832149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22832442", "body": "Why only accept \"http\" and \"https\" schemes? This may be useful in the Open In New Tab case for schemes the browser can't handle, but I may still want to copy the URL for other schemes, for example. To keep this patch simpler, just omit this and accept all schemes for now.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22832442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23634287", "body": "Since this is going into the global scope, please rename this to LongPressElementType so its purpose is more clear.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23634287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23634614", "body": "Rather having an array of enums, I think it would be cleaner to use a dictionary of type <code>[LongPressElementType: NSURL]</code> instead since the collection will have either 0 or 1 of a given type. Please remove the NSURL part of these cases and rename them to <code>Image</code> and <code>Link</code>.\n\nSo, in summary:\n\n```\nenum LongPressElementType {\n    case Image\n    case Link\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23634614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23634729", "body": "For consistency with the <code>ReaderMode</code> helper, let's remove the Browser prefix and just call this <code>LongPressGestureDelegate</code>.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23634729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23635179", "body": "For consistency, please rename <code>browser</code> -> <code>longPressRecognizer</code>, and pass a <code>LongPressGestureRecognizer</code> instead of a <code>Browser</code>. Also, with the dictionary changes above, the <code>elements</code> type should change to a <code>[LongPressElementType: NSURL]</code> dictionary.\n\nSo, in summary:\n\n```\nfunc longPressRecognizer(longPressRecognizer: LongPressGestureRecognizer, \n    didLongPressElements elements: [LongPressElementType: NSURL])\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23635179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23635236", "body": "Nit: only one space after <code>private</code>.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23635236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23635367", "body": "Since this is a private one-line function that isn't used anywhere else, you can just inline this into the SELdidLongPress callback above.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23635367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23635432", "body": "Nit: only one space after <code>elementsDict</code>.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23635432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23635645", "body": "With the dictionary changes mentioned above, this will become <code>var elements = [LongPressElementType: NSURL]()</code>, and your append calls below will turn into <code>elements[LongPressElementType.Link] = linkURL</code>.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23635645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23635977", "body": "I still strongly dislike doing this, and I'm not even sure you need it. Testing this PR locally, I removed this dispatch and called <code>disableGestures.map({ $0.enabled = true })</code> immediately after calling the delegate above. It still seems to work fine -- so can we remove this delayed dispatch altogether?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23635977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23636398", "body": "Nit: remove extra space after <code>self</code>.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23636398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "raheelahmad": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65737945", "body": "Please use optional chaining instead of forced unwrapping, for the sake of safety.\n\nSo, this:\n\n``` swift\ncell.nameLabel?.text = ...\n```\n\ninstead of:\n\n``` swift\ncell.nameLabel!.text = ...\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65737945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "nghialv": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65739502", "body": "Thanks @raheelahmad . I have just changed to optional chaining.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65739502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "hikari-no-yume": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65784633", "body": "This works for me and fixes building, will it be merged?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65784633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65843653", "body": "@thebnich whoever merges it could do this, mind\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65843653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "modocache": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65814697", "body": "I encountered the same issue, but I was using Xcode 6.2 beta. Also, I think this is a duplicate of #30.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65814697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "RyanMaciel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65827756", "body": "I was on 6.1.1. Also I believe the optional chaining changes were around the same time as in #30, but yes, it is a duplicate.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65827756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "grgcombs": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65948526", "body": "That's _less_ complicated than a UIScrollView that adjusts insets?\n\nConditional visibility of views based on their ability to fit within a view with all the relevant constraints seems like a bigger headache. Would you be calling the (expensive) system layout size methods more than once?  The nice thing about the scroll view approach is that it only lays out content with constraints once and then pushes an inset on keyboard. No conditional visibility logic needed. \n\nBut maybe I'm over thinking it?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65948526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ncalexan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66525570", "body": "@wesj @thebnich y'all might have opinions too.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66525570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70556033", "body": "Sorry, I was imprecise.  This looks fine; I have not (yet) tested locally.  I do worry about the hard-coded port -- it will always bite eventually, especially in automation.  Extract a test subclass, randomize the port range, and expose it as a member variable.  Later, we can check for binding failures.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70556033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72096478", "body": "@st3fan updated with a pre commit to clean up testing pain.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72096478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72576993", "body": "I've pushed the review follow-up -- which was significant -- as a separate patch, but I'm going to fold and land as a single patch.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72576993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72579467", "body": "Landed.  Leaving this review commit for posterity.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72579467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73334165", "body": "@st3fan has already given r+ to parts 1 through 6.  Those are straight clean-up.  @st3fan or @thebnich, could one of y'all look at Part 7, which imports a modified version of https://github.com/jrendel/SwiftKeychainWrapper.  You can see that I essentially use it as a key-value store for a single key, so I'm not wedded to it and we could easily replace it or roll our own.  Finally, perhaps @rnewman could look at Part 8 and say \"yes, persistence in Swift is awful\".\n\nI apologize for all the TODO items, but I spent most of 3 days fighting Swift to do a 3 hour task and it's better to iterate than get everything perfect.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73334165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73334279", "body": "I think the travis build failure is because I deleted stuff that was maybe a git submodule?  @st3fan might know better?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73334279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73334409", "body": "Finally, I tested this in the simulator (and it persists the account across simulator restarts), but I didn't test on a device.  I think we may have issues on device because the extensions (Share and SendTo) require Profiles -> Account -> KeyPair -> the FxA framework, which produces a warning.  Again, I don't know what the way forward is here.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73334409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75480077", "body": "I skimmed this and it looks reasonable.\n\nI'm was concerned that this was not extensible, but it appears to not impact our ability to have home panels that do not derive from `HomePanelTableViewController`.  I was concerned because the settings panel has subsections, which are most naturally handled by a `UINavigationController`; and I also expect a `UITableViewController` to not be appropriate for the mooted top sites grid view.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75480077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75480499", "body": "I have some questions, but this looks reasonable to me.  I haven't tested it locally, but I say land it and let UX play!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75480499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76249027", "body": "This looks basically fine, but I expected basic bookmark favIcon tests.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76249027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76495443", "body": "I landed this, but I notified #firefoxios instead of #mobile.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76495443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76562457", "body": "@sleroux thanks for this -- I saw this locally.  Do you know anything about UI testing?  I wonder if we can ensure this doesn't regress.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76562457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77233151", "body": "I'll get back to this eventually.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77233151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77664916", "body": "In the front-end meeting, I agreed to pick this up.  I addressed the review nits and moved to a `HistorySection` abstraction, but I ran into significant problems with the actual functionality: tests are failing.  I'll dig in more next week.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77664916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77939167", "body": "This has landed.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77939167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77939205", "body": "This has landed.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77939205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/78375249", "body": "Sync/StorageClient.swift shouldn't be involved in these commits.\n\nOn Wed, Mar 11, 2015 at 2:13 PM, Richard Newman notifications@github.com\nwrote:\n\n> There are two commits in this that I'm not sure are good; my Xcode is now\n> in a working state, but _raised eyebrows_.\n> \n> I filed two issues to get tags in the upstream repos. Using \"master\" isn't\n> \n> ## too worrying, because Carthage won't advance without being told.\n> \n> You can view, comment on, or merge this pull request online at:\n> \n>   https://github.com/mozilla/firefox-ios/pull/212\n> Commit Summary\n> - Add Deferred and Result via Carthage.\n> - Xcode decided to remove application-identifier from\n>   Fennec.entitlements.\n> - Xcode decided that CODE_SIGN_IDENTITY and DevelopmentTeam needed to\n>   change.\n> \n> File Changes\n> - _M_ Cartfile\n>   https://github.com/mozilla/firefox-ios/pull/212/files#diff-0 (2)\n> - _M_ Cartfile.resolved\n>   https://github.com/mozilla/firefox-ios/pull/212/files#diff-1 (2)\n> - _M_ Client.xcodeproj/project.pbxproj\n>   https://github.com/mozilla/firefox-ios/pull/212/files#diff-2 (185)\n> - _M_ Client/Fennec.entitlements\n>   https://github.com/mozilla/firefox-ios/pull/212/files#diff-3 (2)\n> - _A_ Sync/StorageClient.swift\n>   https://github.com/mozilla/firefox-ios/pull/212/files#diff-4 (9)\n> \n> Patch Links:\n> - https://github.com/mozilla/firefox-ios/pull/212.patch\n> - https://github.com/mozilla/firefox-ios/pull/212.diff\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mozilla/firefox-ios/pull/212.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/78375249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/79244530", "body": "Closed via #221.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/79244530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/79513721", "body": "Landed.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/79513721/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/79513911", "body": "Landed.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/79513911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/83066720", "body": "This landed.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/83066720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/83066856", "body": "Whatever this is, it's no longer appropriate.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/83066856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/83067015", "body": "This has passed it's useful life; we folded Box and Result into a new Shared target.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/83067015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/83067766", "body": "This has been handled in a different way: we rolled Deferred and Result to a new Shared target.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/83067766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/83072062", "body": "I am going to say that this address Bug 1135768: https://bugzilla.mozilla.org/show_bug.cgi?id=1135768.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/83072062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/83196540", "body": "I made fairly extensive changes to this and landed it.  More in the ticket and follow-ups.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/83196540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/83878119", "body": "wfm.  It would be nice to move Bytes into Shared now, although I guess Sync will depend on Storage for ever...\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/83878119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9965052", "body": "On Fri, Feb 27, 2015 at 12:11 PM, Brian Nicholson notifications@github.com\nwrote:\n\n> Eh, using tags always screams hack to me, but I guess this case is OK.\n> \n> It's hacky, I agree.  In general I want to associate items to cell views,\n> and the hack is that the tags are not `AnyObject?`.  However, there's\n> really no way to go from a `UIControlEvent.ValueChanged` to an\n> `NSIndexPath`.  The method described at\n> https://developer.apple.com/library/ios/samplecode/Accessory/Listings/AccessoryViewController_m.html#//apple_ref/doc/uid/DTS40008066-AccessoryViewController_m-DontLinkElementID_4\n> does not in fact work, because the `event`'s passed (to Swift, at least)\n> are always nil!  (This was an SO question.)  We live with what we are given\n> :(\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9965052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10108562", "body": "@st3fan all that has happened here is that the project has been mangled.  Sometimes that's a bad merge.  @jhugman: yes, I have been using https://github.com/simonwagner/mergepbx for several weeks and it has been helpful.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10108562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10108598", "body": "I removed this, so don't add it back.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10108598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10108603", "body": "This looks bad.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10108603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10108973", "body": "I pushed a move of the `FirefoxAccountConfiguration` source into the `Providers` group to master.  Here's a local version of this branch that works fine.\n\nhttps://github.com/ncalexan/firefox-ios/tree/mozilla-jhugman/Bug1136294-XCGLogger\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10108973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10134787", "body": "Ugh.  I guess Sync will depend on Storage long term, so 0fg.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10134787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10134794", "body": "If you're certain.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10134794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10320307", "body": "This looks great.\n\nnit: I prefer\n\n```\nlet closure = { arguments in\n ...\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10320307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10351220", "body": "You might be able to assert the map equality with `[\"bar\": 999]`?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10351220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10351250", "body": "This should be called `optMapValues` or something.  It's confusing otherwise.  And I think vanilla `mapValues` has value too!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10351250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10359037", "body": "Urgh.  It's not hard to include JSON in the test bundle; might be worth doing more systematically.  Especially 'cuz `fxa-sync-client` dumps JSON easily...\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10359037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10359042", "body": "Include the error string.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10359042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10370088", "body": "Worth mentioning that i/c is a snowflake in that the auth layer can accept an expired token server token, and that we're going to try to take advantage of this fact.  This inverts the control, pushing the Sync service to ask for auth, rather than first obtain auth and then proceed.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10370088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10370137", "body": "I'd suggest modeling \"computed and uploaded\" as a terminal state that re-enters the state machine at the beginning, to remove an unusual pathway.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10370137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10370226", "body": "This suggests we should cache Sync service metadata keyed by kB, the client state header, or another derivative, and invalidate when we witness a change.  There's another interaction here that might not be appropriate for this document: if we see a 401 from the Sync endpoint, we need to invalidate the existing token, ask for a fresh token, and re-start.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10370226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10414910", "body": "Comments, please!  Although mostly this is clear from the types.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10414910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10414951", "body": "Is it not possible to just say `f = KeysPayload`?  Is a class callable, like in Python?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10414951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415032", "body": "I may be prematurely optimizing, but: I _really_ want to try to use expired tokens for i/c.  My intention is for you (Sync) to invert the control and ask `SyncAuthState` to produce a token when desired, trusting the auth state to cache as appropriate, etc.  That is, `self.authorizer = SyncAuthState().tokenAuthorizer` or whatever.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415103", "body": "Mmm, I was delaying writing chain helpers of this style, mostly 'cuz they can't be (or I can't figure out how) to include them in extensions.  But this is pretty nice -- I have some code to update!\n\nWorth including these helpers in your \"Things I learned\" section tomorrow.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415133", "body": "Ah, so you're following the login state machine model.  It's lame that you can't make a closed type with rich subtypes pleasant :(\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415169", "body": "Consider making the temporal explicit here.  I turned with/without into After/Before to make it easier to understand the expected order of states.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415198", "body": "I can't ever see one caring about the envelope.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415280", "body": "This can be expressed as `chainResult`, right?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415298", "body": "s/so we/we/\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415343", "body": "Interesting, you made a different call than I did.  You're dispatching into your state functions, separating the implementations.  I actually _like_ the big switch statement (on `label`) for state machines, since all the cases are in one place and you get type checking that you've handled the closed set of subtypes.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415355", "body": "I think `metaGlobal?.global?` answers your earlier question :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415410", "body": "You get better error messages if you do\n\n```\nXCTAssertEqual(result.failureValue!.toString(), \"\")\n```\n\nIt's best to put the expected value last, since Xcode scrolls terribly and you can only see the first thing most of the time.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415419", "body": "What is this achieving?  Where is the `error` coming from in this handler?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415419/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415460", "body": "A general note on this approach: I found that life was easier if each state \"only did one thing that could fail\", so the states are very granular.  Consider how that will work in to your scheme for caching m/g, c/k, and i/c.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415460/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415467", "body": "This is pretty nice :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10415467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10416407", "body": "On Thu, Mar 26, 2015 at 9:30 AM, Richard Newman notifications@github.com\nwrote:\n\n> That raises some (perhaps minor) concerns.\n> \n> Fetching the token can result in the server URL changing during any\n> request, so we actually _can't_ just wrap up authorization and hide the\n> details of tokens altogether. I would love to be able to encapsulate the\n> token management, but unfortunately the Sync state machine needs to know\n> when the token changes.\n> \n> s/token/endpoint included in token/.  I'm not sure we're node\n> re-allocating, ever -- we should ask rfkelly.  I guess we still might in\n> the case of disaster :/\n> \n> In the face of this, I'm more inclined to use InitialWithExpiredToken to\n> explicitly model this: we take that state, issue an i/c fetch to see if\n> there are remote changes (which is the only operation that state is allowed\n> to perform), and then reuse its scratchpad with a newly fetched token if we\n> wish to re-enter the state machine to do more work.\n> \n> We could have the sync auth state be the guarantor of endpoint stability,\n> although you mentioned in your comment that you foresee a partial\n> transition of the scratchpad across endpoints.\n\nMy put in this area is: Sync is big: handling the Sync client protocol\ncomplicates everything in the Sync records protocol.  (The records protocol\nis complicated enough without mixing the client protocol into it!)\n\nI'd like to push the Sync machine to only doing the records protocol and\nstorage stuff, and to have other machines ensure the Sync client actions\nare maintained.  That is, the auth state mechanism maintains \"this is the\nsync endpoint and I have credentials for it\", \"this is my device details\"\n(device name, say, but not client syncid), etc.  So the records is more\nabout getting the server into a good state and maintaining the synced state\nof the device, and less about handling server and auth transitions.\n\nThe devil is, of course, in the details -- it's hard to tease out the\nclient protocol from the records protocol.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10416407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10534514", "body": "nit: line between.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10534514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10534522", "body": "Why not call this `get`?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10534522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10534585", "body": "This feels like `filter {  }.length > 0`.  Not sure I like your version.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10534585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10534598", "body": "This `b, m, k` stuff is definitely not Swift-y!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10534598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10534604", "body": "Can `GlobalEnvelope` die?  Isn't it just `Fetched<MetaGlobal>`?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10534604/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10671599", "body": "Why are you changing case on me?  And names in general?  iOS style is camelCase and descriptive.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10671599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10671606", "body": "Why bother?  I hate aligning like this.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10671606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10671612", "body": "Why?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10671612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10671654", "body": "I don't support this.  We've discussed it multiple times; I think it makes it too easy to be lazy.  It's basically impossible to distinguish `NSError` instances, and I think you pretty much always want to know the type of the error you're getting back.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10671654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10671668", "body": "Is it just me or is this indentation all kinds of crazy?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10671668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10671890", "body": "While we're churning names, something should give here.  Why is `.clients` not `.clientsAndTabs`?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10671890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10671921", "body": "`clientsAndTabs`?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10671921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10671969", "body": "Is it possible to reference `Class.asPair` directly as a higher order function?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10671969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10671975", "body": "I think it's more Swift-y to say `keyBundleFromPair()`.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10671975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10672108", "body": "Maybe we should `let response = response!` or include the response type as `Response!` to get rid of all the bangs.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10672108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10672173", "body": "I find it much harder to maintain :(\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10672173/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10673566", "body": "This needs a description somewhere.  A comment on how we store the various pieces (secure/in-secure) would help.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10673566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10673581", "body": "Replace \"key\" with \"opaque token\", add verbosity around Sync/collection keys, etc.  Also, perhaps we should just derive the opaque token from the syncKeyBundle?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10673581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10673591", "body": "Can we enforce this with some kind of pair `(KeyBundle, Keys)` or similar?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10673591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10673595", "body": "Does this do good things when the optional is nil?  I think so, but worth checking.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10673595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10673609", "body": "This Scratchpad has a bit of the feeling of `SyncConfig` from android-sync: it's a big ball of mud.  We'll see how it grows and how much we can keep the state immutable.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10673609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10673841", "body": "Is this intended?  I expect the scratchpad to be deeply immutable.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10673841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10673938", "body": "I like the Builder pattern but I'm worried about the potential for races with `checkpoint`.  I guess this is always a concern, but it will be really quite easy to make a mistake if and when we add more threads.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10673938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10673973", "body": "I think this is fine.  I can't remember if we handle this one way or the other in android-sync.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10673973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10673989", "body": "Man, Sync clients are just a giant stream of punches to the face.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10673989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10700960", "body": "This should be in Utils somewhere.  It's valuable.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10700960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10700996", "body": "Is the idea that `icon` is a favicon?  I think we should say as much if that's the case.  But I'm not convinced the `RemoteTab` model should know that -- it's strictly a presentation concern at this time.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10700996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701017", "body": "`$0.asURL`?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701024", "body": "Also, `asURL` should be a computed value rather than a method.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701056", "body": "Do all of our clients include history?  I feel like this should forgiving of `null` at least, if not undefined.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701067", "body": "Ah, `jsonsToStrings` takes an optional.  As you were.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701099", "body": "client GUID.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701107", "body": "Or maybe this should take a real `RemoteClient`?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701116", "body": "What does -1 mean here?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701125", "body": "Also, give me a line explaining what the integer return is.  Number of tab records updated?  Number of client records?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701279", "body": "There's a better abstraction in here somewhere.  We should figure out a `Deferred/Result` version of this synchronous callback.  This'll do for now I guess.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701282", "body": "Non-composability for the loss :/\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701295", "body": "Still not a fan of `NSError: ErrorType`.  I bet you it screws us at least once.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701436", "body": "I feel like empty result value is probably not what we want in most circumstances.  I'd rather return status in some form -- like, how many remote clients did we download, did we upload our own, etc.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701446", "body": "Using `$0` in complicated expression like this is punishable by death.  Help me and the compiler by naming your argument _and declaring it's type_.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701609", "body": "`id` is strictly more confusing than `clientGUID`.  Please always call it `clientGUID` when it is a client GUID; it's too irritating to disambiguate constantly.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701631", "body": "I think extracting the two inner functions into methods (here and below) would help a good deal.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701631/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701643", "body": "What happens in error cases?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701665", "body": "I think it's reasonable to fail, loudly, earlier if we can't unwrap.  Something's fucky with the server, and we shouldn't compensate.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701669", "body": "Huh, the expression of the simple synchronizers is pretty reasonable \\o/\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701706", "body": "Heh, I get it but this reads so strangely.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701711", "body": "For future, I like `maybeWipeLocalClients` for such switches.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701738", "body": "ditto with `ForClientGUID`, etc.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10701738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10702406", "body": "We can update our local timestamp to the i/c timestamp if we choose.  This would allow us to show fine-grained per-collection last synced stamps, would it not?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10702406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10740793", "body": "Haskell uses `>>=`.  But I like this.  Can I get a test showing the desired formatting?  I guess it'll look like:\n\n```\nonward >>= { successValue in\n...\n} >>= { nextSuccessValue in\n...\n}\n```\n\nwhich is pretty nice.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10740793/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10740809", "body": "I worry about operator precedence and would like to see it in a few examples.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10740809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10740828", "body": "I prefer `deferResult`, because we have legit uses of `Deferred<T>`.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10740828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10740855", "body": "nit: newlines.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10740855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10740880", "body": "I don't think this is enough of a win to use the weird symbol.  How about `@`, if that's legal?  Or can we use `*`?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10740880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10740899", "body": "I don't think I support composing with `Void`.  If you're sequencing, you should use a block and really sequence.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10740899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10740922", "body": "Empty `Result<()>` values are an anti-pattern.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10740922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10740941", "body": "Did you forget to actually use `updateMeta`?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10740941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10740973", "body": "Is `>>=` associative?  I haven't thought of what `a >>= (b >>= c)` does with the deferred queues.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10740973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10740984", "body": "This is much better, but I do prefer `deferResult`.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10740984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10805747", "body": "Interesting.  I know that you're trying to avoid the \"remote client altered client timestamp\" but I think this approach is likely to mislead more than the other approach.\n\nCould we track the timestamp for the actual tabs record?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10805747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10805753", "body": "Oh, but that doesn't do better.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10805753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10805798", "body": "Yes, but not the last time the other client synced.  Which is, I think, more valuable.  It's less useful to know the tabs are 1 day old (even though the device synced a second ago) than to know the device synced a second ago.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10805798/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10853682", "body": "Hurrah for automatic initializers!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10853682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10853766", "body": "All `encode` instances are the identity.  This surprises me.  Given that `T` extends JSON, what are you anticipating here?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10853766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10853795", "body": "I thought you had nice response logging?  We should use it more generally.  Are we worried about the log leaking on iOS?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10853795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10853849", "body": "Can we give `f` a better name?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10853849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10853874", "body": "This looks weird.  If there wasn't  `<>`, you'd write it\n\n```\nfactor(f: JSON -> T) -> (String -> T?)\n```\n\nto emphasize the HOF, right?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10853874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10853882", "body": "We have `String.utf8data` IIRC.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10853882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10853903", "body": "nit: dedent `])...`\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10853903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10853921", "body": "Worth a comment on the IVs here.  Does `iv: nil` generate a fresh IV, or is it like all zeroes or something?  Is there a Sync limitation on the IVs?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10853921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10853969", "body": "Did you mean to _add_ a new curry?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10853969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10853987", "body": "Dangerous.  Log here, for sure!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10853987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10853997", "body": "Verify that the intention is for the clients/tabs synchronizer to manage this timestamp?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10853997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10854045", "body": "This feels pretty weird.  Can we get @st3fan to comment on whether this is a reasonable approach?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10854045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10854069", "body": "Could we use Notification Center to serve as a decoupled message bus here?  So that when Sync sees a tab, it just broadcasts, and the ambient `UIApplication` -- if there is one -- reacts as appropriate?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10854069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10854080", "body": "This requires an `app` and otherwise fails silently, which sounds terrible.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10854080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10854092", "body": "The fact that this is necessary strongly suggests our abstraction is wrong here.  We should think carefully about this.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10854092/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10854103", "body": "Apparently this got better in 1.2?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10854103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10854123", "body": "I think we ended up on `org.mozilla.ios.FennecAurora`, so this should follow suit.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10854123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10854134", "body": "This is funky -- we should reflect something better here.  iPad vs. iPhone at least; and hopefully size and/or model.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10854134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10854170", "body": "This has been a bugbear for ages.  Let's reduce this, a lot, and upload our client record more frequently too.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10854170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10854182", "body": "I ran out of steam part-way through this commit. Eating lunch instead.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10854182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10895384", "body": "Comment on the motivation for this, especially why the App is threaded through.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10895384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10895389", "body": "Bug reference?  I think you already filed it.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10895389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10895414", "body": "I think I'd rather all creators consider this implication.  Maybe even call it, like, `applicationForBackgroundSomething` to highlight hte implications.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10895414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10895421", "body": "As I said, this doesn't continue if `self.app == nil`.  That's not what you want, right?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10895421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10895449", "body": "Mozilla is a family friendly establishment, sir.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10895449/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10895453", "body": "Looks like this already happened.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10895453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10895469", "body": "Should this be `!=`?  You'd want to wipe if we have ever fetched, right?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10895469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10895481", "body": "Heh.  This is nifty.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10895481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10895501", "body": "Maybe extract constant?  Not a big deal.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10895501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10895522", "body": "drop parens?  Also, prefer `record in records`.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10895522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10895557", "body": "Can we name `wipeIfNecessary` better?  Is it really `wipeIfNeverSynced`?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10895557/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10955962", "body": "Move this to ProfilePrefsTests.swift?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10955962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10955973", "body": "I agree that this is correct -- good catch -- but your test doesn't actually verify that this is fixed, since you never assert the final key is anything in particular.  If `MockProfilePrefs` exposes its dictionary, considering making it official.  Otherwise, round trip is good enough.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10955973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10955998", "body": "`.values` is unordered, right?  Can we call this something that doesn't imply an order or even suggest that this is a well-defined function?  Maybe `findOneValue`?  I feel like Smalltalk's collection protocol has this notion, something like `anyElement`.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10955998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956011", "body": "Presumably this doesn't compile, since you didn't update implementors.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956035", "body": "This is coming from an existing DB row, right?  Why does this not need a migration?  Does `(0.5 as! NSNumber).unsignedLongLongValue` do something sensible like truncate or round?  (Or return an optional?)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956043", "body": "Can we get a few lines on what the differences between `Visit` and `SiteVisit` are?  When would you have a `Visit` that doesn't correspond to a `SiteVisit`?  What other types of `Visit` might there be?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956049", "body": "While we're here, can we call `s` something meaningful, like `expectSuccess`?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956067", "body": "Where is the type `T` used in the definition of this table?  (I searched in GH and don't see it.)  Is this type a marker in some way?  (If so, I don't understand what this might accomplish.)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956072", "body": "Further to my question about `VisitsTable` and the generic parameter `T`, what other type of `VisitsTable<>` might we see?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956081", "body": "Anything that subclasses a `Hashable` type should also specialize `Hashable` itself, I think.  Although I guess this is not strictly necessary?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956087", "body": "Better.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956097", "body": "If this comment applies more broadly, include it in all the places it applies.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956101", "body": "Can we make this not callback-y, or file a follow-up?  (It is only test code, but...)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956334", "body": "Kill it.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10956334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11008474", "body": "Boris may not have editbugs.  But he should!\n\nOn Fri, May 1, 2015 at 2:44 PM, Brian Nicholson notifications@github.com\nwrote:\n\n> Thanks for the info. How about when adding an attachment? I see a\n> _Reassignment:_ field that allows me to take that bug when uploading --\n> do you have that option?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mozilla/firefox-ios/commit/81f1cf76197c8253e03f3d423fad75c2533b2230#commitcomment-11008409\n> .\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11008474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11091672", "body": "Consider unifying these signatures and having `func ...(..., callback: ... -> T) -> T` throughout.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11091672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11091679", "body": "Did you play taps?  Pour some out?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11091679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Chuongv": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66829324", "body": "Closing this one due to merge conflicts. Will resolve this one in the next pull request.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66829324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66954009", "body": "@thebnich I think I messed up trying to squash my commits since now it says I want to merge 33 commits :fearful: \n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66954009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67291171", "body": "Closing this one since I created a new PR [here](https://github.com/mozilla/firefox-ios/pull/54)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67291171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67449422", "body": "@apbendi \nThe functionality works great and it looks like you added a KVO for estimatedProgress. However is there a reason why you created a new class just for the KVO instead of placing it within the BrowserViewController? I guess it was because webView was private?\n\nI think you could take a different approach now since with the latest commit, the webView is actually public. I would recommend rebasing with master and continue from there. I'm curious to hear thoughts from the rest of the team too.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67449422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67598049", "body": "@thebnich \nI took your suggestion and made the change to update the progress bar to zero when switching tabs. Also I rebased it correctly this time :laughing:  \nThanks\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67598049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22025008", "body": "@mfinkle \nI just made a slight update checking the ofObject to ensure that the selected tab has the right web view prior to updating the progress bar. Let me know if that is what you are looking for.\n\nThanks for suggestion!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22025008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "TBonnin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66904472", "body": "@st3fan I just read the thread about abstracting away WKWebView. https://mail.mozilla.org/pipermail/mobile-firefox-dev/2014-December/001014.html\nFeel free to reject this PR if you prefer to use the KVO approach.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66904472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67006418", "body": "No problem. I'll let @thebnich deal with it.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67006418/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67104587", "body": "I rebased the PR to be tab-aware. Let me know what you think.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67104587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67275792", "body": "@thebnich Thanks for your comments.\nI made the changes and squashed to commits.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67275792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "palewar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67492992", "body": "Done.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67492992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67512103", "body": "Buttons should also look pressed when touched. Should we also tackle that small bit with this, although not part of original description?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67512103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9038074", "body": "@thebnich Thanks. Will be careful about this in future.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9038074/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "apbendi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67742992", "body": "> The functionality works great and it looks like you added a KVO for estimatedProgress. However is there a reason why you created a new class just for the KVO instead of placing it within the BrowserViewController? I guess it was because webView was private?\n\nBasically, yes. Since the webView was private, I thought I needed to put the KVO of the webView in the Browser. To implement KVO you need to inherit from NSObject, but I didn't think it'd be good to drag NSObject baggage onto the Browser abstraction. Hence the private class.\n\nUsing callbacks seemed like a clean way to keep KVO boilerplate out of the BrowserViewController. If the decision has been made to go in that direction, then yes, there would be a different approach.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67742992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67747711", "body": "Just throwing this up here for the sake of conversation. The updates I've made retain all functionality of the toolbar but:\n1. Keeps KVO out of the BrowserViewController\n2. Avoids implementing WKNavigationDelegate in the BrowserViewController\n\nGiven this approach, it would actually be possible to keep the webView private to the Browser abstraction (though I did not go all the way back to that here).\n\nSince the webView is public, I'm struggling to see what the purpose of the Browser class is.\n\nAnother adavantage to this approach is the BrowserViewController is limited to simply defining how to translate the state of a Browser tab into changes to the BrowserToolbar, and only in one place (the `updateToolbarStateForTab(tab: Browser)` method). It doesn't have to make fine grained changes to the BrowserToolbar based on specific actions from the webView.\n\nWould love feedback on this approach and why exposing the webView is a better route, which I'm totally willing to believe it is. Like I said, just throwing this out there. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67747711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68977582", "body": "Cool, thanks for pointing me in the direction of the thread. Makes sense! Appreciate you taking the time to review. And don't worry, I was on vacation too! Happy New Year =)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68977582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69249495", "body": "All cleaned up let me know what you think.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69249495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22570536", "body": "I remember thinking the same thing, then trying it via webViewDidStartLoading and having some issue, then deciding it was OK since UIKit optimizes this anyway and it's not expensive unless the state actually changes (I _believe_).\n\nI'll dive back in and see if I remember/encounter whatever the issue was and update accordingly. Thanks.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22570536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22677398", "body": "Think I have it resolved. To clarify, in the previous comments we both referenced the `webViewDidStartLoading` method which is part of the UIWebViewDelegate protocol but we obviously both meant to reference the WKNavigationDelegate protocol method ;)\n\nThe method in that protocol I remembered trying was `webView:didStartProvisionalNavigation` and the problem was that the webView's `canGoBack` property does not seem to be updated at the time this delegate method is called (not sure if this is by design or not, but it is the observed behavior). However, it does seem up to date by the time `webView:didCommitNavigation` is called, so I will update the button statuses there and update the pull request.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22677398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "mfinkle": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67922309", "body": "This pattern does have some code-cleanliness advantages. I like it. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/67922309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72707337", "body": "How are we injecting the reader JS script? After page load?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72707337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22004702", "body": "| prefix.hasPrefix | seems a little strange. Is \"prefix\" a prefix, or a whole string?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22004702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22004843", "body": "Naming thought: LocationTextField -> LocationField and do the same with the delegate?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22004843/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22002419", "body": "Can we use the \"ofObject\" param to tell which WebView sent this update? If so, we should make sure we only update the toolbar if the progress change is from the selected WebView.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/22002419/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "hirohisa": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68826211", "body": "@thebnich Thanks, I try to do it\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68826211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69283520", "body": "@thebnich, Thanks comment. If you import only second commit, it reproduce with same steps.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69283520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70045847", "body": "Thanks @wesj for review. I pushed it that include marking to icon into updateButtons.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70045847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71245872", "body": "Thanks @wesj ! Sorry, I dont know `buttons[selectedButtonIndex].item`. It's better! I pushed.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71245872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sveinhal": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68885054", "body": "Why pull in whole third party libs into the repo? Why not use CocoaPods or git sub modules? This question obviously also relates to already existing code in the repo and not just this pull request.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68885054/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "soulwind": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68973894", "body": "Can I upload my own modified version of this project to Appstore?\n\nThank you \n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68973894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68983319", "body": "I understood it\nCan I use some name like Firefox Unofficial ?\nThank you\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68983319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "andreasgal": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68974404", "body": "It's open source! Yes you can but you can't use the Firefox name or logo. If you make your own branding you are welcome to fork this and publish it anywhere you like. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68974404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68983595", "body": "You cannot use the name \"Firefox\" or the Firefox logos (or Mozilla) in any form or shape but you are welcome to make up your own brand and logo. Be creative! Good luck with your project.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/68983595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dusek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69710030", "body": "Thanks for the quick turnaround. I did:\n- submit [the](https://bugzilla.mozilla.org/show_bug.cgi?id=1120827) [bugs](https://bugzilla.mozilla.org/show_bug.cgi?id=1120831)\n- reference them in the title of the PR\n- reference them in individual commit message titles\n- rebased on current master while I was at it\n- added note to this PR that we are OK with MPLv2.0\n\nPlease let me know if there is anything else to make a contribution properly, it's my first time contributing to Mozilla. :-)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/69710030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70404839", "body": "I made some updates:\n- rebased to latest code\n- reflected latest code (address field becomes address and search field)\n- added accessibility label to avatar image, secure connection image, reader button, search suggestions for search engines\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70404839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70800826", "body": "> Would you mind rebasing this PR so we can merge it?\n\nDone.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70800826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70801278", "body": "My thoughts too about some theme class. More when I consider what will need to be done with fonts, as based on different accessibility (or partly accessibility) settings, we might choose to use:\n- bolder font (accessibility setting to use bold text)\n- bigger font (dynamic type size user setting, and accessibility provides even bigger values for this setting)\n\nI will log these two as bugs in the coming days.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70801278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70900907", "body": "> I have to wait several minutes for things to unfreeze before I can do anything again...it's completely unusable.\n\nFor me, turning VoiceOver off helps immediately in such a situation (I have accessibility shortcut set in Settings > General > Accessibility > Accessibility Shortcut > select VoiceOver (and only VoiceOver) - then quick triple-press of Home button turns VoiceOver on/off wherever you are).\n\nI did hit similar issues in Firefox (iOS) and Safari (iOS), including on [this page on our company website](http://a11y.ltd.uk/accessibility), so I am aware of these kind of problems with Safari. I have not reported a rdar, but I guess many VoiceOver users must already have reported it to Apple.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70900907/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70903730", "body": "> I've been trying to test VoiceOver, but the phone (not just the app) becomes unresponsive\n\nOne site I used for testing and did not exhibit these problems was [wikipedia.org](wikipedia.org). The other was [idnes.cz](idnes.cz) (but that's in Czech).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70903730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71335432", "body": "> Interestingly, this happens on Safari too, but not on Chrome. I'm assuming there's some bug with WKWebView + Voice Over that Chrome isn't hitting since they use UIWebView. Known issue?\n\nThere is an [app](https://itunes.apple.com/app/id928647773) that lets one switch between UIWebView and WKWebView, which is nice for testing :-) The problem we are hitting w.r.t. VoiceOver \"freezing\" is really specific to WKWebView; UIWebView works fine. I think Apple has some bug fixing to do :-) Just reported it as &lt;rdar://problem/19590964&gt;\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71335432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73356886", "body": "I would recommend working with `accessibilityIdentifier` instead of `accessibilityLabel` for unit testing. They serve different purposes: `accessibilityLabel` should be set if and only if you decide it is good for the user. You should not set it just because you need to reach an element in a test. On the other hand, `accessibilityIdentifier` was added explicitly to avoid misusing `accessibilityLabel` for purposes of uniquely identifying UI elements in unit tests. I looked at KIF and it seems to support getting elements based not only on `accessibilityLabel`, but also `accessibilityIdentifier` (through [`KIFUITestActor (IdentifierTests)` category](https://github.com/kif-framework/KIF/blob/9c9cfa339dbfd6c5be9617a464ca7f177cedcddd/IdentifierTests/KIFUITestActor-IdentifierTests.h)).\n\nA few observations how `accessibilityIdentifier` is better for testing:\n- **stability**: `accessibilityLabel` could be tweaked often to be more understandable for the user (it's a user-facing string), and it would be bad to have to change corresponding tests to reflect the label change each time; on the other hand, `accessibilityIdentifier` could stay the same through these changes because it does not affect the user at all, no need to \"tweak\" it once it is uniquely set.\n- **localization-independent**: `accessibilityLabel` changes based on the localization - should a user with non-English UI run the tests on their machine, then I imagine they would all fail.\n- **uniqueness**: two views could have the same `accessibilityLabel` and be distinguished just by the element type (like text field and button), or there could really be two `UILabel`s with same text.\n- **code-style**: this is a bit subjective to me, but as it is not a user-facing string, you can afford to use \"identifier\"-like values in `accessibilityIdentifier`, i.e. no spaces, camel-case, e.g. \"webContent\" ;-) At least for me, it is \"nicer\" in tests.\n\nSo using [`accessibilityIdentifier`](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIAccessibilityIdentification_Protocol/index.html) is IMHO \"the proper way\" here.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73356886/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10634430", "body": "Accessibility label missing for a button without text.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10634430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10974754", "body": "The field is not editable; it usually displays Assigned To: \"Nobody; OK to take it and work on it\", clicking the value reveals a pop-up with Profile, Activity and Mail, all for user named nobody@mozilla.org. I tried before to assign myself to bugs, but without success. Most other fields are editable.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10974754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10974756", "body": "Same problem here (during filing, a reduced form with little fields is displayed, after filing it's the same as in the comment above.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10974756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11008636", "body": "> Thanks for the info. How about when adding an attachment? I see a Reassignment: field that allows me to take that bug when uploading -- do you have that option?\n\nNope: \n![screen shot 2015-05-02 at 12 00 11 am](https://cloud.githubusercontent.com/assets/41975/7438041/47812244-f05e-11e4-87f8-5115eecd6a61.png)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11008636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11008842", "body": "Thanks guys, I just applied.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/11008842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23284524", "body": "You're right the docs speak about a parameter. I tried passing the webview, but that selected the whole webview and cursor was stuck at it. On the other at that time I used just ScreenChanged and did not follow it with LayoutChanged (or the other way round). I will try to experiment with it a bit more and get back with results.\n\nBut it seems that passing `nil` is OK, as an Apple employee from accessibility team put it on the slides this way (see [slide 30 here](http://www.slideshare.net/cheinyeanlim/session-210-accessibilityforios)).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23284524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "lyle-luan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70301564", "body": "Please ignore this, I made a big mistake here.\nI should load HTML to display error, and I am working on it.\nAlso I will test a bit manually for some common scenarios, thanks for Stefan Arentz's suggestion.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70301564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70498618", "body": "Load web page to display errors, make it look like the way Safari deals with errors. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/70498618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71646533", "body": "I am going to merge the tests of GCDWebServer to WebServerTests.swift, Should I working on it?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71646533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71646640", "body": "Thank you all the same, it is much better.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71646640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72634945", "body": "There are four commits of \"Merge branch...\", I want to make these just one. What you mentioned above works for this situation?\nBefore I push my commits, I should rebase the local repo to make my commits look better?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72634945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73398292", "body": "I didn't mean this!\nI will make it right!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73398292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73399481", "body": "I will learn more about Git and Github, It's a chance to learn Git.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73399481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74184157", "body": "Here it is, awesome!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74184157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75359332", "body": "Sorry, I am spending my happy time of Chinese New Year :]\nThank you for the merge, I will come back. ;]\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75359332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23375235", "body": "Yes, that's what I want to, display these all on the error page, I forget to add a //comment, sorry.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23375235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23375503", "body": "Thank you for your review, I will change the func name. :]\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23375503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "codestergit": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71919089", "body": "Addressed the comments.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/71919089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23573248", "body": "@thebnich  I have tried all the things but it seems not possible to avoid default `longPressHandler` with old `document.body.style.webkitTouchCallout='none'` with `WKWebView`.Someone already posted on dev forums https://devforums.apple.com/message/1024729#1024729\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23573248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "darrinhenein": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72467192", "body": "@wesj I'd love to weigh in :) Do you think you could attach a screenshot or a clearer description of what the question is? I'm guessing this is regarding the list that appears while editing the url field... I would say on first thought we'd want something similar to desktop and Android, where a combination of history, bookmarks and search results are presented (the goal here is to just let the user get to where they're trying to as quickly as possible).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72467192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72522926", "body": "(Firstly, :+1: for screenshots in PRs!)\n\nI think one design showed the one-off searches as just icons across the top, similar to our one-off search on desktop (no need to repeat the term 10 times)... and I think row decorations for bookmarks/history items probably eliminate the need for section headers. Will get a mockup to you asap.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/72522926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76194635", "body": "Functionally it looks great, can we move the Done button to the left side? See http://invis.io/M52BE4WD3.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76194635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76825243", "body": "A couple of comments:\n- I know I haven't delivered specs for any of this yet, but in my mockup the pills have a height of 26pt (including 0.5pt inner stroke) , with 10pt margin above and below... looks like you're pretty close\n- i don't like the horizontal scrolling \u2013 can we have 2 lines of tags and see how that feels? I suspect for v1 we will ship with either 2 or 3 (maybe even conditional on screen size and # of other results?)\n- nit, but i can provide a magnifying glass (or grab a placeholder from android) to include in the first pill\n\nupdated mockup (also in [InVision](http://invis.io/ND25IXZ7T)):\n<img src=\"https://cloud.githubusercontent.com/assets/792313/6450644/3aee6cb2-c0f7-11e4-8054-d8921b9d805b.png\" width=\"300\" />\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76825243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77238682", "body": "@thebnich: Pointed out to you in channel that the first tag's text is a bit blurred.\n\nAlso, ellipsizing suggestions that exceed the row width, I think thats a reasonable solution for a pretty rare edge case  :+1: \n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77238682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "shaleengarg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73239806", "body": "Hello Everyone,\nI am a newbie to the world of open source and github.I have just started to\nuse github now and I want to contribute to mozilla.\nI know decent programming in C and have started to learn python.Please\nguide me through . I would be very greatful to all the contributors of\nMozilla.\nThankyou\n\nOn Fri, Feb 6, 2015 at 7:23 PM, Stefan Arentz notifications@github.com\nwrote:\n\n> Looks good to me. I'm not a reviewer for this bug but I would give a +r :-)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mozilla/firefox-ios/pull/135#issuecomment-73238993.\n\n## \n\n_shaleen_\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/73239806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sleroux": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74795686", "body": "Ah yup I see the problem. I was doing a test by changing the content size to simulate a larger panel. Let me fix this up.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74795686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74797503", "body": "I notice that the buttons are getting laid out manually in the container's layoutSubviews call here: https://github.com/mozilla/firefox-ios/blob/master/Client/Frontend/Home/HomePanelViewController.swift#L245 which is making the container frame not update it's bounds. Was this to center the buttons? With additional buttons being added, do we need this code anymore? If not I can replace it with autolayout to make the items equally spaced out.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74797503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74985927", "body": "Alright sounds good! Feel free to close this PR if you want - I can hunt something else down :+1: \n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/74985927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76051525", "body": "No problem. I'll keep an eye out for any changes needed tonight/tomorrow. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76051525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76562998", "body": "Hey Nick, no problem and thanks for merging this in.  For something like this I will normally write a unit test that covers the behavior of the data source / delegate methods and edge conditions. I noticed that KIF is in the project so we could write a test scenario using that or UI automation. \n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76562998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76784947", "body": "Before this PR goes into the filing bin, just a quick note that \nAppDelegate.swift:L95 still needs an email to be filled in.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76784947/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "TomACPace": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75349898", "body": "Hi @thebnich,  this branch and pull request are updated with the recommended changes.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/75349898/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "gowansg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76210119", "body": "Your suggestion worked perfectly, and as you said simplified things quite a bit. \n\nI had previously tired using `stringByAddingPercentEncodingWithAllowedCharacters` with `NSCharacterSet.URLFragmentAllowedCharacterSet()`  but the fragment character (#) was being percent encoded.  I didn't realize at the time that it was because that character isn't included in the set.\n\nAnyway, I implemented the change you suggested and applied it to both the `hrefElement` and the `imageElement`.\n\nNow to figure out why the CI failed. :disappointed: \n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/76210119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "AaronMT": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77423199", "body": "Building to device is currently restricted to internal Mozilla staff. I imagine at some point in the future we may open that up. For now, using the Simulator is the best bet.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77423199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/79086697", "body": "ref bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1142998\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/79086697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "rodmoreno": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77671543", "body": "Ok, how sad. I'll have to wait, thank you very much.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/77671543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ddzcoeur": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/8847136", "body": "how to login?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/8847136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "stephencelis": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10823823", "body": "Is this merely for Carthage compatibility? Does the SQLCipher target clobber the SQLite target?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10823823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10830963", "body": "Cherry-picked, thanks! If there's anything I can do to help with the CI situation, please let me know. Maintaining a fork is a pain.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/10830963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "rpowelll": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21795698", "body": "This message will be shown the first time the application itself requests location access. Ideally we'd want the user to allow the application to access their location, and then have  some other UI (handled by the app) that deals with a specific site asking for location permissions. If we phrased the initial message as 'this site would like your location', and the user did not grant permission, that would bar all other sites from using their location and could create confusion.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/21795698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "leibovic": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23513148", "body": "@st3fan I started trying to split out the content styles into a shared file while working on bug 1117258, but after talking with UX, I decided to hold off on that, since there are still some differences that they want between Android/desktop. However, in the long run, I would ideally like to have something shared for the article text, since those styles should be similar.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/23513148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}}}