{"_default": {"1": {"davidcpell": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1697", "title": "Stubbing Errors Results in ArgumentError", "body": "### Issue description\r\n\r\nThis is related to the SDK stubbing feature: https://docs.aws.amazon.com/sdk-for-ruby/v3/developer-guide/stubbing.html\r\n\r\nAt the bottom, the documentation indicates that the user should pass the error class name to `#stub_responses`. However, when doing this, we ran into an ArgumentError:\r\n\r\n```ruby\r\nclient = Aws::IAM::Client.new(stub_responses: true)\r\nclient.stub_responses(:get_role, Aws::IAM::Errors::NoSuchEntity)\r\nclient.get_role(role_name: \"foo\")\r\nArgumentError: wrong number of arguments (given 0, expected 2)\r\nfrom /Users/davidpell/.rbenv/versions/2.4.2/lib/ruby/gems/2.4.0/gems/aws-sdk-core-3.14.0/lib/aws-sdk-core/errors.rb:16:in `initialize'\r\n```\r\n\r\nFollowing the error shows that it's happening because two arguments (context and message) are needed to initialize an error. So it seems like there's either a documentation error and it should have something like:\r\n\r\n> s3.stub_responses(:head_bucket, Timeout::Error.new(\"context\", \"message\"))\r\n\r\n...or there's a bug in the SDK stubbing code and it should be providing those args automatically somewhere when the user supplies the error class name. (edited)\r\n\r\n### Gem name ('aws-sdk', 'aws-sdk-resources' or service gems like 'aws-sdk-s3') and its version\r\n\r\n`aws-sdk` 3.0.1\r\n\r\n```\r\n\u279c bundle show aws-sdk\r\n/Users/davidpell/.rbenv/versions/2.4.2/lib/ruby/gems/2.4.0/gems/aws-sdk-3.0.1\r\n```\r\n\r\n### Version of Ruby, OS environment\r\n\r\nMacOSX 10.12.16\r\nRuby 2.4.2\r\n\r\n### Code snippets / steps to reproduce\r\n\r\nSee above\r\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jeffb-stell": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1696", "title": "(unnecessary) Incompatibility between golang and ruby sdk S3 client-side encryption", "body": "Please fill out the sections below to help us address your issue\r\n\r\n### Issue description\r\n\r\nThe Ruby aws sdk's encryption handler labels its CBC client-side encryption \"AES/CBC/PKCS5Padding\", golang labels it \"AES/CBC/PKCS7Padding\" . The golang sdk is technically correct (AES CBC uses a 16 byte pad, hence it is PKCS7. PKCS5 is 8 bytes only).\r\n\r\n### Gem name ('aws-sdk', 'aws-sdk-resources' or service gems like 'aws-sdk-s3') and its version\r\n\r\naws-sdk-s3 1.8.0\r\n\r\n### Version of Ruby, OS environment\r\n\r\nUbuntu, rvm, ruby 2.4.3\r\n\r\n### Code snippets / steps to reproduce\r\n\r\nCreate Aws::S3::Encryption::Client, do .put_object, examine the object's metadata in S3.\r\n\r\nhttps://stackoverflow.com/a/20770158 covers the issue slightly. As there is an unneeded difference between the golang aws sdk provider for AES CBC and the ruby aws sdk provider, and the golang header is technically more correct, I'd propose that the Ruby sdk change the header it sets, and accept \"AES/CBC/PKCS5Padding\" as well as \"AES/CBC/PKCS7Padding\" for decryption with the CBC handler.\r\n\r\nAlternatively, if the ruby sdk adds \"AES/CBC/PKCS7Padding\" as an accepted header for CBC decryption handling, that would solve my particular issues.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vanguard737": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1692", "title": "No valid waiter names for SSM API", "body": "In the v2 SDK, it appears that SSMs don't expose any valid waiters.  If I throw a bogus waiter at (for example) the CloudFormation client, I get a well-formed exception with the list of valid CFN waiter names.  However, when I do the same to the SSM client, I don't get any waiter names back.\r\n\r\n[This](https://github.com/aws/aws-sdk-ruby/issues/1185) issue may be relevant.  Perhaps this has been implemented for SSM in the latest v3 SDK (and not v2)?\r\n\r\nGem:  aws-sdk, 2.9.26.\r\nEnvironment:  Ruby 2.4.1, Windows 10.\r\n\r\nCode, run from irb:\r\n```\r\nrequire 'aws-sdk'\r\nAws.config.update({\r\n    region: 'us-west-2',\r\n    credentials: Aws::Credentials.new('AKIAid', 'secret')\r\n})\r\n\r\ncfn = Aws::CloudFormation::Client.new\r\ncfn.wait_until(:bogus)\r\n\r\nssm = Aws::SSM::Client.new\r\nssm.wait_until(:bogus)\r\n```\r\n\r\nThe respective exceptions:\r\n\r\nCFN:\r\n```\r\nAws::Waiters::Errors::NoSuchWaiterError: no such waiter :bogus; valid waiter names are: :stack_exists, :stack_create_complete, :stack_delete_complete, :stack_update_complete, :change_set_create_complete\r\n        from C:/tools/ruby24/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.9.26/lib/aws-sdk-core/waiters/provider.rb:29:in `waiter'\r\n        from C:/tools/ruby24/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.9.26/lib/aws-sdk-core/client_waiters.rb:108:in `wait_until'\r\n        from (irb):7\r\n        from C:/tools/ruby24/bin/irb.cmd:19:in `<main>'\r\n```\r\n\r\nSSM:\r\n```\r\nAws::Waiters::Errors::NoSuchWaiterError: no such waiter :bogus; valid waiter names are:\r\n        from C:/tools/ruby24/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.9.26/lib/aws-sdk-core/waiters/provider.rb:29:in `waiter'\r\n        from C:/tools/ruby24/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.9.26/lib/aws-sdk-core/client_waiters.rb:108:in `wait_until'\r\n        from (irb):9\r\n        from C:/tools/ruby24/bin/irb.cmd:19:in `<main>'\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "comjf": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1685", "title": "ECS register_task_definition validation bug (log_driver)", "body": "### Issue description\r\nI'm taking an existing valid task definition in json format, converting it to the proper casing and then resubmitting via the SDK. Only 1 validation error on submission: \r\n```\r\n2017-12-29T15:34:58.285Z 79621 TID-oumh4as1o WARN: ArgumentError: missing required parameter params[:container_definitions][0][\"log_configuration\"][:log_driver]\r\n```\r\n\r\nI can hack around this by either doing ```task['container_definitions'].first['log_configuration'][:log_driver] = 'awslogs'``` to explicitly set the log_driver to be a symbol or it also works if I disable validation entirely ``` Aws::ECS::Client.new(region: 'us-east-1', validate_params: false)```\r\n\r\n### Gem name ('aws-sdk', 'aws-sdk-resources' or service gems like 'aws-sdk-s3') and its version\r\n```\r\n    aws-sdk (2.10.105)\r\n      aws-sdk-resources (= 2.10.105)\r\n    aws-sdk-core (2.10.105)\r\n      aws-sigv4 (~> 1.0)\r\n      jmespath (~> 1.0)\r\n    aws-sdk-resources (2.10.105)\r\n      aws-sdk-core (= 2.10.105)\r\n    aws-sigv4 (1.0.2)\r\n```\r\n### Version of Ruby, OS environment\r\n2.3.1  on OSX \r\n### Code snippets / steps to reproduce\r\n- Logging definition in json\r\n```\r\n      \"logConfiguration\": {\r\n        \"logDriver\": \"awslogs\",\r\n        \"options\": {\r\n          \"awslogs-group\": \"awslogs-some-service\",\r\n          \"awslogs-region\": \"us-east-1\",\r\n          \"awslogs-stream-prefix\": \"some-service\"\r\n        }\r\n      },\r\n```\r\n- Main code body\r\n```\r\n    ecs = Aws::ECS::Client.new(region: 'us-east-1')\r\n    task = JSON.parse(File.read(task_file))\r\n    task['containerDefinitions'].first['image'] = publish_image\r\n\r\n    skip_transform = task['containerDefinitions'].first['logConfiguration'].delete('options')\r\n    task.deep_transform_keys!(&:underscore).with_indifferent_access\r\n    task['container_definitions'].first['log_configuration']['options'] = skip_transform\r\n   \r\n    task_revision = ecs.register_task_definition(\r\n        {container_definitions: task['container_definitions'], family: task['family'], task_role_arn: task['task_role_arn']}\r\n    )['task_definition']['revision']\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "brettburley": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1683", "title": "Message verifier for SNS does not use configured http_proxy", "body": "### Issue description\r\nThe aws-sdk-sns gem's `MessageVerifier` does not use the `http_proxy` configured in `Aws.config`. Since it's using `Net::HTTP` directly, it will use any `ENV` variables, but there doesn't appear to be any other way to configure a proxy for it to use otherwise.\r\n\r\nSee: https://github.com/aws/aws-sdk-ruby/blob/master/gems/aws-sdk-sns/lib/aws-sdk-sns/message_verifier.rb\r\n\r\nI think I would expect the  the `Aws.config.http_proxy` option to apply to all network requests made.\r\n\r\n### Gem name\r\naws-sdk-sns 1.1.0", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "llibicpep": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1677", "title": "Support credential_source from shared profile", "body": "### Issue description\r\n\r\n`credential_source` currently is not supported.\r\n\r\n### Gem name ('aws-sdk', 'aws-sdk-resources' or service gems like 'aws-sdk-s3') and its version\r\n\r\naws-sdk-core 2.10.104\r\n\r\n### Version of Ruby, OS environment\r\n\r\nMac OS, Debian, ruby v2.4.2\r\n\r\n### Code snippets / steps to reproduce\r\n\r\nThe following config:\r\n\r\n```bash\r\nAWS=\"aws --profile ${PROFILE_NAME}\"\r\n${AWS} configure set role_arn \"${ROLE_ARN}\"\r\n${AWS} configure set credential_source \"${CREDENTIALS_SOURCE}\"\r\n```\r\n\r\nWill produce error:\r\n\r\n```\r\n/opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/aws-sdk-core/shared_config.rb:156:in `assume_role_from_profile': Profile jarvis has a role_arn, but no source_profile. (Aws::Errors::NoSourceProfileError)\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/aws-sdk-core/shared_config.rb:111:in `assume_role_credentials_from_config'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/aws-sdk-core/credential_provider_chain.rb:95:in `assume_role_with_profile'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/aws-sdk-core/credential_provider_chain.rb:78:in `assume_role_credentials'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/aws-sdk-core/credential_provider_chain.rb:12:in `block in resolve'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/aws-sdk-core/credential_provider_chain.rb:11:in `each'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/aws-sdk-core/credential_provider_chain.rb:11:in `resolve'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/aws-sdk-core/plugins/request_signer.rb:37:in `block in <class:RequestSigner>'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/configuration.rb:70:in `call'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/configuration.rb:205:in `block in resolve_defaults'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/configuration.rb:57:in `each'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/configuration.rb:57:in `each'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/configuration.rb:204:in `resolve_defaults'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/configuration.rb:200:in `value_at'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/configuration.rb:189:in `block in resolve'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/2.4.0/set.rb:324:in `each_key'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/2.4.0/set.rb:324:in `each'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/configuration.rb:189:in `resolve'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/configuration.rb:177:in `apply_defaults'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/configuration.rb:150:in `build!'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/base.rb:68:in `build_config'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/base.rb:19:in `initialize'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/base.rb:105:in `new'\r\n\tfrom /home/jenkins/workspace/test@tmp/durable-7147b3d0/script.sh:4:in `<main>'\r\n```", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "oyeanuj": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1666", "title": "More detailed changelog entries?", "body": "Hi folks! Firstly, thank you for all of your work in these gems. One suggestion - would it be possible to add more details to the changelog in the individual gems so that developers know what to expect?\r\n\r\nRight now, most entries look like this:\r\n> Feature - API update.\r\n\r\nThis doesn't give enough information on what to expect, thus creating uncertainty and needing a developer to first look through commits in history, narrow down to the gem in question and go file by file.\r\n\r\nI am sure there is already a lot on your plate, but this would really help the DX a lot.\r\n\r\nThank you!", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lwoggardner": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1649", "title": "Where are Client options described in V3 documentation?", "body": "\r\n### Issue description\r\nIn V2 docs the available options for a client are enumerated on the Client initialize() method documentation.\r\n\r\nhttp://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CloudFormation/Client.html#initialize-instance_method\r\n \r\nIn V3 I cannot find the client options documented anywhere.\r\n\r\nhttp://docs.aws.amazon.com/sdkforruby/api/Aws/CloudFormation/Client.html#initialize-instance_method\r\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1649/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1646", "title": "Aws::CloudFormation::Stack.stack_name regression", "body": "### Issue description\r\nIn version 2 Aws::CloudFormation::Stack.new(<stack_id>).stack_name would invoke DescribeStack api and return just the stack name.\r\n\r\nIn version 3 it is just an alias to #name, and thus returns whatever was passed into the constructor, which might have been a full stack id arn.\r\n\r\n\r\n### Gem name \r\naws-sdk-cloudformation 1.2.0\r\n\r\n### Version of Ruby, OS environment\r\nruby 2.3 windows and linux\r\n\r\n### Code snippets / steps to reproduce\r\n```ruby\r\ncfnr = Aws::CloudFormation::Resource.new()\r\nstack_id = 'arn:aws:cloudformation:ap-southeast-2:<redacted>:stack/AStackName/<uuid>'\r\ncfnr.stack(stack_id).stack_name\r\n# expect 'AStackName', get 'arn:aws:cloudformation....'\r\n```", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1419", "title": "How do I get a DBClusterSnapshot using just the db_cluster_snapshot_identifier?", "body": "For non-Aurora RDS snapshots I can do this..\r\n\r\n```ruby\r\nr = Aws::RDS::Resource.new(**client_args)\r\nr.db_snapshots(db_snapshot_identifier: db_snapshot_identifier).first\r\n```\r\n\r\nbut there seems no equivalent for Aurora cluster snapshots.\r\n\r\nThe only method to get a DBClusterSnapshot requires knowing the cluster_id, which for instance is not embedded DBClusterSnapshot.db_cluster_snapshot_arn\r\n\r\nNote that ideally there would also be a method directly on RDS::Resource\r\n\r\n```ruby\r\nr = Aws::RDS::Resource.new(**client_args)\r\naurora_snapshot = r.db_cluster_snapshot(db_cluster_snapshot_identifier)\r\ndb_snapshot = r.db_snapshot(db_snapshot_identifier)\r\n```", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1419/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1407", "title": "More flexible backoff strategies  #1336", "body": "Added  jitter functions, max delay cap, configurable base delay\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "amalagaura": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1624", "title": "Explicitly deleting tempfile after closing to save disk space", "body": "### Issue description\r\nWe upload large encrypted files and have limited disk space. Tempfile are created to encrypt but they are not cleaned up after the file is uploaded.\r\n  \r\n### Gem name ('aws-sdk', 'aws-sdk-resources' or service gems like 'aws-sdk-s3') and its version\r\naws-sdk-s3\r\n\r\n### Version of Ruby, OS environment\r\nRuby 2.3\r\n\r\n### Code snippets / steps to reproduce\r\nhttps://github.com/aws/aws-sdk-ruby/blob/9ea447b7e9e57e27bb7924aca40a5bf0c3265a94/gems/aws-sdk-s3/lib/aws-sdk-s3/encryption/io_encrypter.rb#L42 Closes the tempfile but does not `unlink` it. This leaves large files on disk which only get cleaned up when the process exits. This is not suitable for large running processes which upload large files. Can we add an `unlink` to this?", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "route": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1572", "title": "Seahorse::Client::NetworkingError: Connection reset by peer - SSL_connect", "body": "I'm seeing an intermittent error like this sometimes in my long running process. So it all works but all of a sudden sometimes this start happening when I want to send a message to SQS with:\r\n\r\n`sqs.send_message(queue_url: queue_url, message_body: message.to_json, message_group_id: bla)`\r\n\r\n```\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/2.3.0/net/http.rb:933:in `connect_nonblock'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/2.3.0/net/http.rb:933:in `connect'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/2.3.0/net/http.rb:863:in `do_start'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/2.3.0/net/http.rb:858:in `start'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/2.3.0/delegate.rb:83:in `method_missing'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/seahorse/client/net_http/connection_pool.rb:285:in `start_session'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/seahorse/client/net_http/connection_pool.rb:92:in `session_for'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/seahorse/client/net_http/handler.rb:119:in `session'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/seahorse/client/net_http/handler.rb:71:in `transmit'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/seahorse/client/net_http/handler.rb:45:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/seahorse/client/plugins/content_length.rb:12:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/xml/error_handler.rb:8:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/request_signer.rb:88:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/helpful_socket_errors.rb:10:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/retry_errors.rb:89:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/retry_errors.rb:120:in `retry_request'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/retry_errors.rb:103:in `retry_if_possible'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/retry_errors.rb:91:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/retry_errors.rb:120:in `retry_request'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/retry_errors.rb:103:in `retry_if_possible'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/retry_errors.rb:91:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/retry_errors.rb:120:in `retry_request'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/retry_errors.rb:103:in `retry_if_possible'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/retry_errors.rb:91:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/sqs_queue_urls.rb:13:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/query/handler.rb:27:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/user_agent.rb:12:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/seahorse/client/plugins/endpoint.rb:41:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/sqs_md5s.rb:17:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/param_validator.rb:21:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/seahorse/client/plugins/raise_response_errors.rb:14:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/jsonvalue_converter.rb:20:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/idempotency_token.rb:18:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/param_converter.rb:20:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/seahorse/client/plugins/response_target.rb:21:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/seahorse/client/request.rb:70:in `send_request'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/seahorse/client/base.rb:207:in `block (2 levels) in define_operation_methods'\r\n```\r\n\r\nThen boom after a few more tries it works again which gives me an idea it's unlikely an issue in my code. I wonder why this happens.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pchaganti": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1454", "title": "No way to add CloudTrail permission to SNS topic", "body": "Sometime recently, AWS changed the way you add permissions to SNS topic to enable CloudTrail notifications. In the earlier version, you could add AWS account ids of the principals (which were accounts provided by the AWS docs).\r\n\r\nNow that has changed, and you need to specify the service **_cloudtrail.amazonaws.com_** as the principal.\r\n\r\nThe SNS client does not seem to have a way to do this. If I use the **add_permission** method, it is looking for account ids. How can I add a permission like below to a topic?\r\n\r\n```\r\n{\r\n\t\"Version\": \"2012-10-17\",\r\n\t\"Statement\": [{   \r\n\t\t\"Sid\": \"AWSCloudTrailSNSPolicy20131101\",\r\n\t\t\"Effect\": \"Allow\",   \r\n\t\t\"Principal\": {\r\n\t\t\t\"Service\": \"cloudtrail.amazonaws.com\"\r\n\t\t},\r\n\t\t\"Action\": \"SNS:Publish\",   \r\n\t\t\"Resource\": \"arn:aws:sns:Region:SNSTopicOwnerAccountId:SNSTopicName\"\r\n\t}]\r\n}\r\n```\r\n\r\nthanks\r\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wjordan": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1331", "title": "RuntimeError: can't add a new key into hash during iteration", "body": "On our production application we are receiving intermittent stack traces on S3 requests- the errors arrive in bursts of a couple hundred over an hour or two, then nothing for a few days, then another burst (6 over the last 30 days). I suspect this might be some sort of concurrency issue related to network-error retries somewhere deep in the `seahorse` stack, but could use some help figuring out what exactly is going on and how to fix.\r\n\r\n Using [`aws-sdk-core` 2.6.1](https://github.com/aws/aws-sdk-ruby/tree/v2.6.1/aws-sdk-core/lib).\r\n\r\nRelevant part of the stack trace (`net_http`):\r\n\r\n- [lib/seahorse/client/net_http/connection_pool.rb:40 :in `block in initialize`](https://github.com/aws/aws-sdk-ruby/blob/v2.6.1/aws-sdk-core/lib/seahorse/client/net_http/connection_pool.rb#L40)\r\n- [lib/seahorse/client/net_http/connection_pool.rb:89 :in `yield`](https://github.com/aws/aws-sdk-ruby/blob/v2.6.1/aws-sdk-core/lib/seahorse/client/net_http/connection_pool.rb#L89)\r\n- [lib/seahorse/client/net_http/connection_pool.rb:89 :in `block in session_for`](https://github.com/aws/aws-sdk-ruby/blob/v2.6.1/aws-sdk-core/lib/seahorse/client/net_http/connection_pool.rb#L89)\r\n- [lib/seahorse/client/net_http/connection_pool.rb:87 :in `synchronize`](https://github.com/aws/aws-sdk-ruby/blob/v2.6.1/aws-sdk-core/lib/seahorse/client/net_http/connection_pool.rb#L87)\r\n- [lib/seahorse/client/net_http/connection_pool.rb:87 :in `session_for`](https://github.com/aws/aws-sdk-ruby/blob/v2.6.1/aws-sdk-core/lib/seahorse/client/net_http/connection_pool.rb#L87)\r\n- [lib/seahorse/client/net_http/handler.rb:116 :in `session`](https://github.com/aws/aws-sdk-ruby/blob/v2.6.1/aws-sdk-core/lib/seahorse/client/net_http/handler.rb#L116)\r\n- [lib/seahorse/client/net_http/handler.rb:68 :in `transmit`](https://github.com/aws/aws-sdk-ruby/blob/v2.6.1/aws-sdk-core/lib/seahorse/client/net_http/handler.rb#L68)\r\n- [lib/seahorse/client/net_http/handler.rb:42 :in `call`](https://github.com/aws/aws-sdk-ruby/blob/v2.6.1/aws-sdk-core/lib/seahorse/client/net_http/handler.rb#L42)\r\n\r\nFull `aws-sdk` stack trace with all handlers:\r\n\r\n```\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/net_http/connection_pool.rb:40 :in `block in initialize`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/net_http/connection_pool.rb:89 :in `yield`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/net_http/connection_pool.rb:89 :in `block in session_for`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/net_http/connection_pool.rb:87 :in `synchronize`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/net_http/connection_pool.rb:87 :in `session_for`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/net_http/handler.rb:116 :in `session`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/net_http/handler.rb:68 :in `transmit`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/net_http/handler.rb:42 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/plugins/content_length.rb:12 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_request_signer.rb:88 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_request_signer.rb:23 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/xml/error_handler.rb:8 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/helpful_socket_errors.rb:10 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_request_signer.rb:65 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_redirects.rb:15 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/retry_errors.rb:87 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_dualstack.rb:31 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_accelerate.rb:42 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_md5s.rb:31 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_expect_100_continue.rb:21 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_bucket_name_restrictions.rb:12 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_bucket_dns.rb:31 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/rest/handler.rb:7 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/user_agent.rb:12 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/plugins/endpoint.rb:41 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_url_encoded_keys.rb:39 :in `manage_keys`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_url_encoded_keys.rb:31 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/param_validator.rb:21 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/plugins/raise_response_errors.rb:14 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_sse_cpk.rb:19 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_dualstack.rb:23 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_accelerate.rb:33 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/param_converter.rb:20 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/response_paging.rb:26 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/plugins/response_target.rb:21 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/request.rb:70 :in `send_request`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/base.rb:207 :in `block (2 levels) in define_operation_methods`\r\n[...Application code stacktrace...]\r\n```\r\n\r\nReproducing the issue with debug logging would be challenging (since the issue only occurs intermittently in production), so I'm hoping to track this down by inspecting the codebase directly.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bittrance": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1324", "title": "S3 API assumes IO object is seekable beacause it has #rewind", "body": "Consider this streamed download of S3 object:\n\n```\nrequire 'aws-sdk'\nrequire 'csv'\n\ndef s3_reader(region, bucket, file)\n  bucket = Aws::S3::Resource.new(region: region).bucket(bucket)\n  reader, writer = IO.pipe\n  t = Thread.new do\n    bucket.object(file).get(response_target: writer)\n    writer.close\n  end\n  t.abort_on_exception = true\n\n  CSV.new(reader, headers: true).each_with_index do |_, n|\n    print '.' if (n % 1000).zero?\n  end\nend\n```\n\nThis fails with ESPIPE because pipes are not searchable:\n\n```\n./vendor/bundle/ruby/2.3.0/gems/aws-sdk-core-2.6.12/lib/seahorse/client/http/response.rb:103:in `rewind': Illegal seek (Errno::ESPIPE)\nfrom ./vendor/bundle/ruby/2.3.0/gems/aws-sdk-core-2.6.12/lib/seahorse/client/http/response.rb:103:in `signal_done'\nfrom ./vendor/bundle/ruby/2.3.0/gems/aws-sdk-core-2.6.12/lib/seahorse/client/http/response.rb:116:in `signal_error'\nfrom ./vendor/bundle/ruby/2.3.0/gems/aws-sdk-core-2.6.12/lib/seahorse/client/net_http/handler.rb:90:in `rescue in transmit'\nfrom ./vendor/bundle/ruby/2.3.0/gems/aws-sdk-core-2.6.12/lib/seahorse/client/net_http/handler.rb:68:in `transmit'\nfrom ./vendor/bundle/ruby/2.3.0/gems/aws-sdk-core-2.6.12/lib/seahorse/client/net_http/handler.rb:42:in `call'\n```\n\nhttps://github.com/aws/aws-sdk-ruby/blob/master/aws-sdk-core/lib/seahorse/client/http/response.rb#L103:\n\n``` ruby\n          elsif options.empty?\n            @body.rewind if @body.respond_to?(:rewind)\n            @done = true\n            emit(:done)\n          else\n```\n\nIO.pipe, filesystem fifos (and BSD sockets?) all have rewind() but can't be seek'd. \n\nMy opinion would be that the API should not assume that you want the IO object rewound even if that is possible, but I suppose that that would be a breaking change. The next best thing might be to eat seek errors?\n\n(For those who are landed here by Google, you can work around this issue by `writer.instance_eval('undef :rewind')`.)\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cjyclaire": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/ac835306cc3e7b86d89f5a86b3c64199af881145", "message": "update customer service gem dependency (#1694)\n\n* update customer service gem dependency"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/795f391a26181f0f99ec58bdb1b6b2b0a20e1fbf", "message": "Update custom service plugin"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/879275e23e153842be7dab0a5987281920f1efdc", "message": "fix typo"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/91c0fca3e01d242ab96de4952f7c259e420364b8", "message": "Update yard dependency"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/324435c0097558e40aa00b8a62158dbe8053b940", "message": "Update APIG User-Agent to Prefix (#1679)\n\n* separate user agent plugin"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/7d55a0d26e55531fd360486f9126f7dda1506d5a", "message": "Fix EC2 resource path bug (#1676)"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/55aaef1b75e730386f6e34154e40f15efbab82e5", "message": "Update feature backlog with resource issues"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/3e70118e27a4f9c3d8150a0079b074262247359f", "message": "Update JS Analytics (#1671)"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/2ffd93fedde4a89626014384e41578e857de9f4d", "message": "Update repl file in docs (#1673)"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/e0f084054f5fa112d3ad4184b5c25f9e46aa2e00", "message": "adress comments"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/d6f7908d0d7b232452b59d27ebd7276a158379bd", "message": "Update as suggested"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/2c623109140171fcf1b8d066532ef1a1a099c8fa", "message": "Remove old ox testing"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/b0ade445ce18b24c53a4548074b214e732b8b627", "message": "Add support a protocol and custom build service (#1660)\n\n* Add support for apigateway protocol and custom service build"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/d41b41077315a031d63f3a2cd6256f888fd20355", "message": "Merge branch 'master' of github.com:aws/aws-sdk-ruby"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/d0ded0eb0aa8f206722f44c695d05153a0644200", "message": "Prepare s3 unit tes"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/5ada355547a434e81d05ddcd0a1c28eec5276374", "message": "[Version 3] Fix pagable response empty stub regression (#1655)\n\n* Fix pagable response stub regression\r\n* Add changelog entry [ci skip]"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/79ffaaed21e26bde6c79f2a18e34d67942d86604", "message": "Revert s3 test"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/9f805f583c43b7f0e670cdc87f321fc48552eb71", "message": "Update models changes and unit tests for release"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/32b5168a721aa748834958917a1cd6a1333e8c8e", "message": "handler empty endpoint entry per service (#1647)"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/947169ce5c05d97aeaaf57b2a8e36db574c964ad", "message": "cloudformation changed their error message"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/09cc03cfbe45f69a61a0a45b80b5e738888ab956", "message": "add serviceId for metadata field (#1638)"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/5d0e43b0926be35a2abd89dee090c901e46838e3", "message": "Update feature backlog with #1630"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/0a67d636752dbb71e24ba6eab53ffa3d1a2d53a4", "message": "Update changelog explanation"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/44a72698abd7427a56133096dde9011fca47d39f", "message": "Fix travis failure on OJ etc (#1626)\n\n* Fix travis failure on OJ etc\r\n* Add s3 changelog entry [ci skip]"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/b306e9423773fbcc2f2bb3cc7e84d120a107c471", "message": "update changelog spec"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/1befd32b16e6e7f0cdc4e8db22aa02e189268f6f", "message": "Update feature backlog with #1598"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/a86c0d98ee0ffd98105fda53352c264e17bb9547", "message": "Update ec2 smoke test with correct region"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/339c07f89d1d89abeb4740acc006d9d03c8f7628", "message": "Fix EC2 smoke test"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/cc0a76a0586e962da9e024bdfb7cabd1dc75d36c", "message": "Add Resource#wait_until regression with deprecate warnings (#1614)\n\n* Add Resource#wait_until regression with deprecate warnings\r\n* Add spec test & EC2 smoke test"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/bc3307e267573d3f9b41df1c28efc92d53e557dc", "message": "Allow resource constructor taking data hash (#1609)"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/4464cc98ea7b325e0a254f6593b877057d95c6c2", "message": "Wrap super long description in shared examples at client (#1612)"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/4a4b857d4f0ba4a94e61e4b1dd06c838c8a2f883", "message": "Update feature backlog with #1580"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/2ec3c1986aef22043932be81af918338d5a9be8b", "message": "Update ruby 1.9.3 dependency on kramdown (#1605)\n\n* Update ruby 1.9.3 dependency on kramdown\r\n\r\n* avoid duplicate"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/07fd83a498b0640801eed35f741982d844a59168", "message": "Fix batch operation behavior (#1604)\n\n* Fix batch operation behavior\r\n* Add changelog entry"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/734a23dfb940c4dfa8e2fb8fb6056d947bfef20a", "message": "Support block streaming for resource object as well (#1601)"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/38160c7ae16f68a2b418ffa11393e9fe3f7a525e", "message": "Let code gen re-generate the examples\n\ndiff will be detected and used as version bump."}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/32ccd99e314e4d3352a3b6d706254cb977e68f1f", "message": "Update KMS Changelog"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/5361c0cf4aefcd0dbb7317d404e57363f801be87", "message": "Remove redundant version file at core gem (#1595)\n\n* Remove redundant version file at core gem\r\n\r\n* Add a changelog entry for the update"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/c04b73bec68a1c7eb0868a833a50b80f5c5b8a71", "message": "Compact those super long string (#1597)"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/69d89842cdbbe3dbd49410e9dcb60075ddd6f5d5", "message": "Update streaming operations with block streaming ability (#1591)\n\n* Update streaming operations with block streaming ability\r\n* Add generation spec test and s3 changlog"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/dad6433b6c4940442b2eeda431c15f3cc576e94f", "message": "Update gemspec metadate with correct information (#1586)\n\n* Update gemspec metadate with correct information"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/f6686ee8d7dcb86d1fc5985481e0df476f9e5fce", "message": "Update version-2 branch info"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/f4a99c7e7c9b4a46f232d96b5badb406b9d01fd7", "message": "Port over #1579"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/78b87029981ccf325b1e66bf721373b9172c75ea", "message": "Update aws.rb"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/5800198a89fabfffd4a4f4469d1d630a571b4e7b", "message": "Fix switch gem dependency at bin files"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/452fc14ef3c04120783efeb1587b6108cdc152b5", "message": "Port over multipart downloader fix from v2"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/be3b33f049f07f742aa137462accf80eb65595d6", "message": "Add V2 doc link at layout instead of V1"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/0b361d628914761c039fb95a50f4d99a01e14142", "message": "Update V3 Doc path"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/9471f21d7910ed1eae513af2fa8cf033100059af", "message": "Merge branch 'code-generation' of github.com:aws/aws-sdk-ruby into code-generation"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/568b75d9798e74e320ae1e42fad18857dbc8b974", "message": "Sync FEATURE_REQUEST.md"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/4e4ab44d8e39ab1ad6ad949998f637fec64386bd", "message": "Make file read utf8 encoding"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/f848db95fe2e8be4e761d3c1d741016a937e8504", "message": "Correct encoding line format"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/e7aca6d207f2d0ac05f611899265ec4ad994756a", "message": "Make UTF8 encoding explicit in spec test"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/dffa6ea7dab0ffbd60a094dcd600277f169f8e97", "message": "Fix typo"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/963c2c1254b037b1c5518e898e3c9db7d41e1089", "message": "[Version 3 Preview] Add github templates for issues and PRs (#1551)\n\n* Add github templates for issues and PRs"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/c0b8effd5379048eaf7f8b3f15d51867c6a4feb5", "message": "Updated API models and rebuilt service gems."}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/eafccfcb2e4d0f065c3cd4c6df6122a97eb7c7b8", "message": "Manual fix changelog"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/2a6bdd28af5b4a00a9e5808ccc6f8a6a89e29a8a", "message": "Fix changelog and port over underscore enhancement"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/9afeedca94ea8236de50d03d481f2a074aa27bce", "message": "[Version 3 Preview] Add/Port Over Shared Examples support for V3 (#1548)\n\n* Add Shared Example support for V3"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/948cade0134ddd565e00c94136d8a5d4cb087722", "message": "[Version 3 - Preview] Switch the order of `aws-sdk` and `aws-sdk-resources` gems (#1533)\n\n* Swith gems\r\n* And changelog and update build logic"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/b6957aad1da1ac234c151c35ec3a9b4887c6ad2a", "message": "Port over V2 default creedntial chain fix"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/34e110f7dea2d336067c271f6ebe18d91c31da01", "message": "Port over dynamic stubbing example from v2"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/3fec9bb28cab005527e0bfb7287a418294faa7c6", "message": "Port over feature backlog update"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/55e8be67594d66a42145e0a2b98bd9a407e91f91", "message": "[Version 3 Preview][Doc] Fix rest body IO streaming documentation"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/42da8c2100f91729b4b75343137fd1b17ee51603", "message": "Fix typo"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/1894b577415b0dc3193242a6873a89c28bd33289", "message": "Update core non-preview dependency per service gem"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/74a789e06fc892854f03d2084e758b44112e3792", "message": "Fix aws-sdk-resources dependency update with non rc gems"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/319e6785db3c11131c43f05970b258ae25aa4783", "message": "Port over :s3_host_id to V3"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/17a420a2dde43d89b897eeb947d1f2759265727d", "message": "Update doc layout with outdated doc version 1\n\nversion 2 doc are almost the same with version 3"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/bf9cdb1049a4261d96cf6b3e205b1a30db149a71", "message": "[Version 3 - Preview] Update V3 README.md (#1525)\n\n* Update V3 README.md"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/85de311d8aee121686ca496d0a2d9b5c2f273b81", "message": "Updated API models and rebuilt service gems."}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/12f22bffe04cb2f633ca666ad41b9c2caa1812bf", "message": "Port over dynamodb empty sets updates"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/6ad906d2791e4d6db03bb5b6c3fb4de982d4f49c", "message": "[Version 3 - Preview] Add aws-sdk-resources preview gem v3 (#1518)\n\n* Add aws-sdk-resources preview gem v3"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/35e7500a2696069ca3a8112ddeb00ca7301adf82", "message": "Fix build tool to update core gem version per gem"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/f780b8611746cba8b10cc573ba8901a8d32e79cb", "message": "Update user-agent and throttling retry error"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/1482dc63c2a5473bec9c2c32c0168ae3aa347343", "message": "Fix kms s3 dependency in service.json"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/4fec0ab13acdea98ef3890116426b2534e1b271a", "message": "Updated API models and rebuilt service gems."}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/1a45c62726609fc28a4a362862c4bfc3eb728583", "message": "Updated version for release."}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/f3a94aae24d64225f4f25602393eec1ae17f9f6a", "message": "Update kms preview dependency in s3 gem"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/b1cde6fb59fae2b95b233ba683b632276b65feb8", "message": "Update s3 gem changlog"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/3e5df7fc0152c534accf251a772ea7adc555c2b5", "message": "Manually update KMS preview dependency in S3 gem\n\nThis is a dependency problem with `.rc` only"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/c71bb3b9294c52a61cad8c3ddade502604c4d969", "message": "Updated API models and rebuilt service gems."}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/4d837df5dedf0740c1e113ec81b7dbb8570b5c83", "message": "Update preview core gem dependency version\n\n* This fix will update core rc version at build step"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/3698851e6623e8cf663509fdca34edd5d056b357", "message": "Fix resource model load path & update CHANGELOG.mds"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/ed2c059b20e6cc232a2274ed9daff96176e895e9", "message": "Mark deprecation and update UPGRADING.md"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/d9055cc0762581ec9ed421c41f9a34b04a8e718b", "message": "Updated API models and rebuilt service gems."}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/56bd4768f8dffec22eae4eac39f5f7e6152c1a34", "message": "Sync service module overwrite and update changelog"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/accc83ef511445caf9f3f8927d7b059591ed8c27", "message": "Port over Ruby 2.4 support for Code-Gen (#1508)\n\n* Port over Ruby 2.4 support for Code-Gen"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/0ab23b93a9344a518b96c3276dc3e1b8ad84c6e9", "message": "Port over some v2 tests"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/d05dbaa0510d83a9f7c027a5ca6b61f2df1023be", "message": "Brings back cgi to fix Ruby 2.4"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/d8cae42f35f1983298693b85852a292b7080beca", "message": "[Code Gen] Port over Rds auth token generator to code-gen (#1500)\n\n* Port over Rds auth token generator to code-gen\r\n* port over ox fix as well"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/842de59f01ee43c59e13a0c25ff430cc2a699cd5", "message": "Bring back cgi for Ruby 2.4 (#1498)"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/0042d194a2b6588cc97a97388f05d420e66c670b", "message": "Update sigv4 changelog with `cgi\\util` replacement"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/ea3958da4782c52ba44d166d4d65f21ad1198ecb", "message": "Update sigv2 changelog with `cgi\\util` replacement"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/0e372496f9b02537071f3c3d84c760a5399c37db", "message": "Merge branch 'master' into code-generation"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/3c7a47e0cb89b08d0cac2ec8376fb97c0505afce", "message": "Updated API models and rebuilt service gems."}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/8503f62e331407383dbf028c7a086061f5b8792e", "message": "Fix typo"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/438428130af32a351b12b4b69c9dc72a75df9559", "message": "More clarification"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/abef381eb18bab1df693d2b4bfffeae1d58d485b", "message": "Adding Multipart Download Helper feature"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/bc6ec03cbe64244117f03db75c36497d23d32538", "message": "Update FEATURE_REQUESTS.md\n\nMultipart Downloader is merged."}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/d38496d4791746c245ed65e276123fba901abd99", "message": "Add Multipart Download Helper (#1213)\n\n* Add Multipart Download Helper"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/e1fc62dfc9915408846db3cbbe599ce3e5d96f3d", "message": "require only cgi/util"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/1a40701631824e65754737dbc74b72dc11ecdd1a", "message": "Merge branch 'master' into code-generation"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/206148b17b3ffa187cc256cbbc097f6508a0e817", "message": "Enhance Aws::Log::Formatter with BlockIO (#1479)\n\n* Fix log formatter"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/af68be1defde1601577e20ba30dbed2e32f58730", "message": "Add support for new traits: JSON && authtype (#1474)\n\nAdds support for JSON value trait and unsigned-payload trait."}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/cadeb922ba1031db2af2420cf05f7732e38195cb", "message": "Bumped version for 2.8.11 release."}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/769ccb7ec5ab643dc50ba120f0af5317f6b922ab", "message": "Updated service API models for release."}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/727690e18402f7d453649d50a9a624e0c2bd716f", "message": "Fix changelog"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/38a2c2be46dfed0bb2d9def2c7acba19adc818eb", "message": "Bumped version for 2.8.10 release."}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/a66967f250fd2278b0e830f7b6a13073f467fb81", "message": "Bumped version for 2.8.9 release."}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/b7a7af598b465d41b2cb25630914d186b2e74eae", "message": "Bumped version for 2.8.8 release."}], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1680", "title": "Add more Rest-Json Protocol tests", "body": "Support `timestampFormat` at metadata.", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1631", "title": "Add support for custom plugins", "body": "Adds support for adding custom plugins to generated service clients.", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1477", "title": "Add enhanced presign request feature", "body": "This PR adds support for `Aws::S3::PresignedRequest` that allows more flexible and customized presigned behaviors, refractored based on `aws-sigv4` gem and provides helpful `#headers` for bucket policy work arounds etc..\r\n\r\nDocumentations and tests(rspec & smoke) both have been addressed in the PR, here is a sample usage:\r\n``` ruby\r\nreq = Aws::S3::PresignedRequest.new(:put_object,\r\n  bucket: 'bktname',\r\n  key: 'key',\r\n  acl: 'private',\r\n  cache_control: 'max-age=20000'\r\n  headers: {\r\n    'foo' => 'bar',\r\n    'cache_control' => 'max-age=20000'\r\n  }\r\n)\r\n\r\nreq.uri\r\n# => #<URI::HTTPS https://bktname. ... .&X-Amz-SignedHeaders=host%3Bx-amz-acl%3Bx-amz-canche-control%3Bx-amz-foo...\r\n\r\nreq.headers\r\n# => {\"x-amz-acl\"=>\"private\", \"x-amz-canche-control\" => \"max-age=20000\", \"x-amz-foo\"=>\"bar\"}\r\n```\r\n\r\nRelated issues, PRs and feature requests:\r\nhttps://github.com/aws/aws-sdk-ruby/issues/874, https://github.com/aws/aws-sdk-ruby/issues/1152, https://github.com/aws/aws-sdk-ruby/issues/1384\r\nhttps://github.com/aws/aws-sdk-ruby/pull/1228, https://github.com/aws/aws-sdk-ruby/pull/1403 ( https://github.com/aws/aws-sdk-ruby/issues/1400, https://github.com/aws/aws-sdk-ruby/issues/1401)\r\n\r\ncc:\\ @awood45 @trevorrowe ", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/70452942", "body": "That's true, I was thinking checking the intersection of  the 2 arrays before getting the result. It seems redundant, I'll remove that.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/70452942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/85233999", "body": "Typo indeed, thanks for catching\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/85233999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/101588618", "body": "Could those url parsing part use a method from `Signer` module? ", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/101588618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/101589066", "body": "Maybe separate a helper method  that could be reused in `CookieSigner` ?", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/101589066/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/101589614", "body": "Perhaps separate `signed_content.map{ |k, v| \"#{k}=#{v}\" }.join('&').gsub(\"\\n\", '')` to a `signature` variable in another line to make this more readable?", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/101589614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/101590511", "body": "Since `Signer` module is available, then this `#signed_url` might doesn't need to duplicate the code?", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/101590511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/101857860", "body": "Perhaps you are testing this as what PHP SDK does : )\r\nI'd more like to have this to test the actual value, since we already have a mock private key there.\r\ne.g., similar to how we test [`url_signer`](https://github.com/aws/aws-sdk-ruby/blob/master/aws-sdk-core/spec/aws/cloud_front/url_signer_spec.rb#L53), I'd like to see not only those key matches, but also their value make sense : )", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/101857860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102060166", "body": "@hamadata  Sounds good, make sense to me : )", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102060166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102060401", "body": "Since `#signed_url` has been removed from this class, could you make changes at documentations as well?", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102060401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102061040", "body": "Using hash is fine, I'd prefer having `expect` key by key, which might make debugging easier in the future.\r\n\r\nPerhaps something like \r\n``` ruby\r\nexpect(cookie['CloudFront-Policy']).to eq(' ... ')\r\nexpect(cookie['CloudFront-Signature']).to eq(' ... ')\r\nexpect(cookie['CloudFront-Key-Pair-Id']).to eq(' ... ')\r\n```", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102061040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/106057301", "body": "That's fair, tests added : )", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/106057301/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/106057323", "body": "Added.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/106057323/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/106057431", "body": "Make sense, renaming done.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/106057431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/106057469", "body": "Fixed and refactored in the latest commit.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/106057469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/106057560", "body": "Sounds good, fixed and refactored in the latest commit. Happy for offline discussion if I still miss something  : )", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/106057560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/106058163", "body": "Good to know, Initially, I use `=` because for ranges, it will look like `bytes=12345-56789`, thus I use `part_number=` prefix to echo that, sounds like it might not be a good option there. Happy to discuss a better naming strategy : )\r\n\r\nP.S. `sort_files` is introduced because I noticed that original Ruby string compare is having trouble in comparing strings like \"12345-56789\" in a expected numerical way.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/106058163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/107028578", "body": "That's correct, thanks for catching! Will do that :)", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/107028578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/107028765", "body": "Make sense, thanks for the suggestion, taking a look at `#copy_stream` :)", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/107028765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/112017581", "body": "@janko-m Great catch! I did some simple test and you are right about this. I started this PR before the partNumber is released, looks like the actually API differs a bit, anyways, thank you so much for catching this! I'll  fix this and add another cucumber test to make sure that scenario is taken care of properly : )", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/112017581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/112017835", "body": "Make sense, thanks for the advice, will address those : )", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/112017835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/112018218", "body": "Ah that's right, I'll fix that", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/112018218/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/138789357", "body": "Make sense, fixed in the latest commit.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/138789357/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/151850965", "body": "Ah that's fair, fixed this in the latest commit.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/151850965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "awood45": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/065adedc1eb698a55bbe0bcbb60d90ac8a533e3c", "message": "Merge pull request #1693 from aws/apig\n\nUpdate custom service plugin"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/ebdf2a90d2e530ebecb0ed74caf6d1db087c1efa", "message": "Add CHANGELOG Entries for Ruby 2.5 PR\n\nWill allow these updates to be published."}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/ca67b76bf96b705532bfcc3a31d43c611e18f393", "message": "Merge pull request #1690 from utilum/assigned_but_unused_variable\n\nAssigned but ununsed variable"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/5bb9a159a9ae3f5b430d626430afb079470bc295", "message": "Fix Custom Service Plugins"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/c98164d1c8828a0bc1ec83355b274f916583b4b7", "message": "Merge pull request #1684 from aws/update-yard\n\nUpdate yard dependency"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/fd0373ea9765e03a64697785b8b1c2229d66ec67", "message": "Merge pull request #1681 from aws/credential-source\n\nAdd credential_source Support"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/db10eb9b1d82bd474a7980935991bcb9bd21e205", "message": "Merge branch 'master' into credential-source"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/14fbac9594e93d5357988c22506c35823b98521b", "message": "Add CHANGELOG for credential_source Change"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/e5dab8c57e73e16d044ac79f0f8a93616ba0d146", "message": "Add credential_source Support\n\nAllows use of `credential_source` in shared configuration in order to\nspecify credential sources for role assumption of `Ec2InstanceMetadata`\nand `EcsContainer` credentials.\n\nResolves GitHub Issue #1677"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/bd833191c4a26c3698f4f5255ad55688d2f94842", "message": "Merge pull request #1665 from aws/remove-old-ox\n\nRemove old ox testing"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/ddb9180d7efb84ce13e3c4f0c1c4d6a15db1dd7d", "message": "Merge pull request #1657 from rhyas/master\n\nUpdate README.md"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/54c6e9e434a53ba6ab0918dd7eda5d0ae73ad67d", "message": "Merge pull request #1656 from Doug-AWS/patch-1\n\nUpdate client.rb documentation"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/b42672716051c6a88405bbb1749fc6841a2c0709", "message": "Merge pull request #1634 from aws/changlog\n\nUpdate changelog explanation"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/74201fff0bb1453b378003f4378f63d0c1855713", "message": "Merge pull request #1606 from vivekbisen/fix-typo\n\nAn attempt to fix a typo"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/9ea447b7e9e57e27bb7924aca40a5bf0c3265a94", "message": "Fix aws-sdk-resources Gemspec\n\nRename aws.rb to aws-v3.rb in executables."}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/6e011a1b77f50d4db181413c29b39e31d265b280", "message": "Rename aws.rb to aws-v3.rb"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/894b729a4cf5ade07cc85a253fd68452f7ad83d4", "message": "Fix Changelog"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/ca47d4e7c422c2425fd7e7bbe3ee2d19519cf2d1", "message": "Changelog for CloudHSM"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/f3c857829c77d064478826767cbee21240903698", "message": "Remove CloudHSM Integration Tests\n\nCloudHSM V2 tests would cover this now."}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/6c5e52f0b45489ef56d4b05a58227cb2bb91a558", "message": "Remove rc Tag From New Services"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/e89ebe4369e77f1bcd60cb699442229a97ff0de9", "message": "Add Upgrading Guide"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/9acd4eb53811b4106a5da46748b504750d52dc89", "message": "Bump aws-sdk Gem Version"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/5c3c186ac2d932f5081db17dc4260315c024cb98", "message": "Merge pull request #1531 from aws/cg-fix-doc-generation\n\nProposed Patch: Safely Check Shapes and Members"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/5f44b3f5b6eed5f1e16ebb2b3c3e8cba543d628e", "message": "Proposed Patch: Safely Check Shapes and Members\n\nIn the case of issues with the API and Doc models (which can and do\nexist in production), the modular SDK doc generation hard-crashes where\nthe monolith SDK's doc generation just skips. This is intended to bring\nthese behaviors in line."}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/308d23f9dc164a3b002771007d0c94e789a873a2", "message": "Update FEATURE_REQUESTS\n\nReferences #1452, #1455, and #1480"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/dcc6538cd5b4879e60ab8872cd8e9a61d63eeb3d", "message": "Merge pull request #1487 from janko-m/require-cgi-util\n\nRequire only cgi/util for escaping and unescaping"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/a7916d7d4a026b2061a359271e7841bf1b467b70", "message": "Add CHANGELOG Entry for Connection Pool Clearing"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/f6600f892debaaa9e981b9a15eafc351e956215b", "message": "Merge pull request #1451 from iamatypeofwalrus/add-empty-connection-pools-api\n\nAdd Aws.empty_connection_pools! API"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/bc6e5f75660e7a9981afb86c577ee328d2de97e4", "message": "Undo Version Bumps"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/baf17f9a0ad3f27f6f17be8292cab177bfe370af", "message": "Update CHANGELOG for Bug Fix\n\nRelated to #1406"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/bfbe1b10678f56d75f213f74aa852ca9d4b5d6e7", "message": "Merge pull request #1476 from aws/issue1406\n\nFix Mutation Bug in DynamoDB Simple Attributes"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/19b1e5b264ae7a95a8d3587785b0a3355aebec79", "message": "Fix Mutation Bug in DynamoDB Simple Attributes\n\nUnder a particular set of circumstances, a return value struct can have\nSimpleAttributes transformations applied multiple times, which can case\nincorrect types and values to be written (or more likely, fail to be\nwritten).\n\nThis doesn't happen for hashes, but we hadn't applied the same approach\nto structs. This change applies the same approach to type structs,\nincluding a previously failing test case.\n\nResolves GitHub issue #1406"}], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1687", "title": "Assume Role Chaining Support", "body": "Current drawback is that it is required to specify a profile region in\r\ninner roles, if AWS_REGION env variable is not set. This will likely be\r\nchanged before shipping.\r\n\r\nSee related GitHub issue #1677", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1420", "title": "Add DBClusterSnapshot to Aws::RDS::Resource", "body": "Related to issue #1419\r\n\r\nStill need to look at options for direct creation of a snapshot object.", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/16433437", "body": "I'm able to recreate this, working on the fix.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/16433437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/16433674", "body": "Changed in next diff.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/16433674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/44962035", "body": "This is a fairly lengthy retry period, I'd like to see this start with a tighter default (like 3), with an option that can be passed in to set your own retry period.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/44962035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/45105589", "body": "Add a comment around this to explain the magic number, at least. That way, it's a less confusing failure if the defaults are changed later. Or, move out to variables that are grouped together.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/45105589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/48989056", "body": "s/Status/State\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/48989056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/48989068", "body": "s/Status/State\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/48989068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/48989079", "body": "s/Status/State\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/48989079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/48989089", "body": "s/Status/State\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/48989089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/49672024", "body": "I understand what `&unhandled_callback` is for because of the full context of the change, but it could be hard to remember or not intuitive to someone reading. Can we add this to the docs above?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/49672024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/49654043", "body": "Optional: Could we output the actual type we received in this case?\n\n``` ruby\nmsg = \"Only list of strings supported, was: #{member.shape.member.shape}\"\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/49654043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/50046392", "body": "Let's take out any TODO comments, as a style matter - I agree we should add this (although that isn't a blocker to me for accepting this PR, given the bug related to this), but we can handle that via other means.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/50046392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/55859368", "body": "This if statement will _always_ return true. You would instead write something similar to:\n\n``` ruby\nstatus_code = context.http_response.status_code\nif status_code == 307 || status_code == 303\n  # do things\nend\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/55859368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/55062579", "body": "I don't want to encourage hard-coded credentials at all. Given that we have a default credential provider chain explained in the guide already, I'd stick with:\n\n``` ruby\nAws::SQS::Client.new(region: region_name)\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/55062579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/60311422", "body": "This is just for doc examples, right? And I assume this is to avoid the default presumption of examples being \"accelerate on\"?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/60311422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/60311659", "body": "Long term nervous about hard naming these. Fine for now, should consider alternatives down the road.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/60311659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/61179044", "body": "I'd love the \"all everything in everywhere\" example to be present, since that's a use case some have. For example:\n\n``` ruby\nAws.partitions.each do |partition|\n  partition.regions.each do |region|\n    region.services.each do |service|\n      # Do anything you'd want to do for all services in all regions.\n      puts \"#{service} is in #{region.name} in #{partition.name}\"\n    end\n  end\nend\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/61179044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/66328239", "body": "Nitpick: Personally prefer non-realistic looking account IDs, such as `123456789012`.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/66328239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/66329021", "body": "I know currently that we're doing this ranged get call due to the nature of GCM decryption, but a comment explaining why we're doing this (and why we're doing this instead of double-reading the object) would be useful for 1-2 years down the road.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/66329021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/66330132", "body": "Can we document these two options, even if very succinctly? Very helpful down the line when debugging and needed to reload context.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/66330132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/66330361", "body": "By previous convention, we may want to consider releasing this feature as `2.4.0`. Arguably minor enough to not bother, but it's technically a breaking change of a private API.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/66330361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/66330510", "body": "Why is this defined twice? Copy error?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/66330510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/66330674", "body": "Is it possible for this to end up undefined, given the case switch below?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/66330674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/67415276", "body": "Technically this will make it show up BEFORE 'Expires' in my testing, not after.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/67415276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/65258671", "body": "I've removed it from the Gemfile, I still think it's fine in the `.gitignore` file unless we would intend on tracking some sort of byebug history in the repo at any point.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/65258671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/65258702", "body": "Moved to a method, updated tests and usage to reflect this.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/65258702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/65258812", "body": "Done. Also removed an unused method from the class (development artifact I neglected to remove).\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/65258812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/65259098", "body": "You're correct, this hasn't yet been hooked up. Next change will hook it up (conditional to the env variable being set) to the default credential provider chain.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/65259098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/65451431", "body": "This is done with the most recent change.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/65451431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/65451549", "body": "Last diff doesn't wire this up yet since we're still resolving behavior questions. Will resolve that before merging.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/65451549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/65451675", "body": "I think that may also be the current behavior. I'm going to add some tests for this specific case so we can handle it properly.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/65451675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/65457516", "body": "I've added some specific tests and configuration cases around this behavior. It will now explicitly fall through shared credentials, then to shared config, then to returning `nil` if credentials are incomplete as defined by the `Aws::Credentials#set?` method.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/65457516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/71222059", "body": "This was fixed in the most recent commit.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/71222059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/71473531", "body": "Could be worth mentioning poorly formatted custom endpoints here, which is also a common cause.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/71473531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/70099519", "body": "I might be missing something, but why not just remove this whole block and use:\n\n``` ruby\n@blacklist = BLACKLIST_HEADERS - whitelist_headers\n```\n\nYou already set whitelist headers to be an array by default, so once we get to this point, I'm not sure the if-else block is doing anything.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/70099519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/85211606", "body": "Is `ConertName` intentional or a typo?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/85211606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/85211663", "body": "Same typo question for `ConertLocation`\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/85211663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/98555220", "body": "Let's go ahead and link it - for example:\r\n\r\n`* Come join the AWS SDK for Ruby [Gitter Channel](https://gitter.im/aws/aws-sdk-ruby)`", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/98555220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/98555527", "body": "Let's provide a link to the tag. For example:\r\n```\r\n* Ask a question on StackOverflow and [tag it](http://stackoverflow.com/questions/tagged/aws-sdk-ruby) with `aws-sdk-ruby`\r\n```", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/98555527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/98555847", "body": "I'd potentially add a note along the lines of:\r\n\r\n* If in doubt as to whether your issue is a question about how to use AWS or a potential SDK issue, feel free to open a GitHub issue on this repo.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/98555847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/105792861", "body": "Should expand this to note that the method should return before making client calls in the child process. In theory, a threaded system might call this, start API calls before we clear, and have issues.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/105792861/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/99238171", "body": "Everything in this `else` block would be a good candidate for another helper method.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/99238171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/99248748", "body": "Curious: Why not have each thread's `#get_object` call write directly to a file? It seems like we're going to be keeping every single chunk in memory, which could be problematic.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/99248748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/99248857", "body": "Same comment here - parallel writing seems to be the best approach, no?", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/99248857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102093432", "body": "Now that we are creating large files, I'm a bit concerned that we might be leaking tempfiles with how our tests are written. We should add explicit cleanup steps and a shared tag for these tests like `@large-file` or similar.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102093432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102093660", "body": "Could we also integration test our cleanup of temp files? That would be a bad regression if it ever happened.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102093660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102093841", "body": "We could do a bit of refactoring here for clarity. Let's rename `obj` in the block to make it more clear it's the output file, something like `output_file`. Similarly, the inner `file` could become `part_file`. This will make it more clear what we are doing.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102093841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102094187", "body": "I'm concerned about error handling in this case. We may want to put this method's logic in a private inner method, and wrap it in a begin/ensure loop. For example:\r\n\r\n```ruby\r\ndef concatenate_files(fileparts)\r\n  begin\r\n    concatenate_parts(fileparts) # put the existing method logic in a private method here\r\n  ensure\r\n    fileparts.each do |part|\r\n      File.unlink(part) if File.exist?(part)\r\n    end\r\n  end\r\nend\r\n```", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102094187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102094263", "body": "The thought here is that if we have some sort of File issue partway through the write, we're going to leak temp files. The `ensure` step performs a cleanup of remaining part files.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102094263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102094625", "body": "I'd like to consider refactoring this, as the logic feels a bit fragile. Could we, for example, create the chunks and sort the chunks into thread batches ahead of time, then process the thread batches one at a time? I'm worried that a later logic mistake makes it really easy to hit an infinite loop here.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102094625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102094636", "body": "Happy to pair on this as well.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102094636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102095110", "body": "The `=` character is considered something to avoid in a filename. Let's change our naming scheme (possibly even in a private method) to something like: `targetfilename.txt_part_0013` and so on. The other advantage is this is string sortable (reducing complexity elsewhere) when done right. We can also pair on this.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102095110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/111443093", "body": "I'd consider removing integration test steps that have to do with implementation details. All we care about in an integration test is that the user behavior will result in the proper output. Unit tests can go into a deeper level of detail (such as for mocks).", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/111443093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/111443284", "body": "That said, checking the implementation behavior here may be appropriate if we're promising certain behavior, like in this case.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/111443284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/111801177", "body": "I would consider renaming `#get_range` and `#get_part` as these function names are confusing elsewhere in code given what they do. Perhaps:\r\n\r\n* `#multithreaded_get_by_ranges`\r\n* `#multithreaded_get_by_parts`\r\n\r\nThat way, when you run in to these method names, you understand what's going on, especially with `#get_part`", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/111801177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/111801775", "body": "This needs to have some safety checks added. As it appears to operate now, if you get an exception during processing, you risk having orphaned files because the exception from the client will bubble up as soon as we join a failed thread.\r\n\r\nSince this method creates the intermediate files, it should be responsible for cleaning them all up before completing.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/111801775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/112743538", "body": "Given that we're rescuing all of StandardError, perhaps we could simplify this to be an `ensure` block, which means we only ever need to call `#clean_up_parts` here whether the method succeeds or fails. It also eliminates the need to catch only to re-raise the same exception.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/112743538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/112744472", "body": "Lift this in to the begin/ensure block.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/112744472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/112744701", "body": "Make sure this can handle a `nil` value for `parts`, since an ensure block is going to call this method.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/112744701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/112744838", "body": "Not needed here if this is run within the outer begin/ensure block which handles cleanup.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/112744838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/118059032", "body": "Why the rename? Generally even for API private classes, a rename like this triggers a minor version bump (just in case).", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/118059032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/118126605", "body": "s/these branches/this branch", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/118126605/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/118126763", "body": "I'd call this \"Major version 3 of the aws-sdk packages\" - emphasizes further that the code is backwards compatible.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/118126763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/118126860", "body": "I'd combine \"1\" and \"2\" here, since the recommendation to migrate towards service gems is the same.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/118126860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/118127049", "body": "Should show how `require` statements change as well. For example:\r\n\r\n```ruby\r\nrequire 'aws-sdk-core'\r\n```\r\n\r\n...would become...\r\n\r\n```ruby\r\nrequire 'aws-sdk'\r\n```\r\n\r\nWe may also add a section about how V1 users need to now explicitly move to using the `aws-sdk-v1` gem and require line, rather than `aws-sdk` major version 1.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/118127049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/120724882", "body": "Given that this field is S3-specific (especially in case other such fields come up for other services in the future), perhaps a name like `:s3_host_id` would be appropriate.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/120724882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/122252307", "body": "This is probably something to revisit - we want this changelog at the top level, despite the disconnect in the dependency chain.\r\n\r\nI believe this is also related to the test failure this PR creates.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/122252307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/122252451", "body": "This isn't really right - we should reverse the code, but the release count is still the release count.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/122252451/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/123090685", "body": "Let's add the actual credentials from the stubbed credential files here, otherwise LGTM", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/123090685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/125746315", "body": "s/gem correspondingly/corresponding gem", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/125746315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/125746393", "body": "Let's capitalize these.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/125746393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/138783997", "body": "Use the cleanup logic you stubbed above. If the test fails you won't clean up the resource as written now.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/138783997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/151850298", "body": "This seems like it's prone to an unusual, but possible, edge case where somebody makes something called \"httpservice\" or similar which would then be an invalid endpoint. We should be checking for `http://` or `https://`.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/151850298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/153303948", "body": "This is possibly too specific - if regressions appear in new 'ox' versions, we will miss it with this version lock. If we want, this could be the \"new\" `OLD_OX` and we keep the unbounded dependency for later tests.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/153303948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/157825254", "body": "I think either here or in the near future we should pull this out of the API Key plugin - this wouldn't cause harm if the API Key plugin were removed, but it's turning this plugin into a catch-all for bringing along other configuration.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/157825254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/157865436", "body": "This is going to create a difficult to read user agent. I'd go with this:\r\n\r\n```ruby\r\nua = \"aws-apig-ruby/#{CORE_GEM_VERSION}\"\r\n```", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/157865436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "utilum": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/0e164974af5e8344912049c34e6283ea4004d72a", "message": "Assigned but ununsed variable\n\nRuby 2.5 warns about this."}], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1691", "title": "Shadowing outer local variable", "body": "Ruby 2.5 warns about this.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rhyas": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/8540a0148d1ed7f23f46116a0a1e28cf0886dc88", "message": "Update README.md\n\nClarify credentials and profile options when fed to the SDK to be more clear."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Doug-AWS": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/5f7c6361db1b89118a7247f360a382204e7192db", "message": "Update client.rb\n\nFixed typo (jut -> just)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "trmmy": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/f2f135fdf999d8aa83043caa08c10c5e6619e516", "message": "Fix typo (#1629)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "linkyndy": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/320879c461fe4a936a4c539de743634ed9efdb32", "message": "Fix typo (#1627)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vivekbisen": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/9407f39395ea4623c7af980101da5caaec6c6bc1", "message": "yet another attempt"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/c8fd987d478ab952521162e1a361c6d3473e74a2", "message": "an attempt to fix a typo"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "janko-m": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/e6d1d3b2fc055f58ea553519f42a9f06a4759417", "message": "Require only cgi/util for escaping and unescaping\n\nFor CGI escaping it's not needed to require the whole cgi.rb standard\nlibrary, it's enough to require only cgi/util.rb, which is almost 5x\nsmaller.\n\nWhile here we also remove superflous cgi.rb requires, and add\ncgi/util.rb requires that were missing."}], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1617", "title": "Retry streaming S3 object downloads", "body": "When downloading S3 objects with a block, aws-sdk-s3 internally creates a `BlockIO` to be the writable response target.\n\n```rb\nobject.get do |chunk|\n  # streaming\nend\n```\n\nNormally aws-sdk-s3 retries any failed downloads in case of network errors, but not for streaming downloads. This is because `BlockIO` is not truncatable, unlike a response target like `StringIO` or `Tempfile`, and aws-sdk-s3 needs it to be because it retries the whole download from the start.\n\nIn [Shrine][https://github.com/janko-m/shrine] and [tus-ruby-server](https://github.com/janko-m/tus-ruby-server) I'm using aws-sdk-s3's streaming download feature, mainly for streaming the S3 object through a web application. It would be great if these downloads were to be retried in case of network errors in this case as well, especially for tus-ruby-server where the S3 objects will typically be very large.\n\nThis PR adds this functionality. It does so by remembering how many bytes of the content was \"written\" to the response target so far; when the request is retried, part of the response body that has already been written is simply skipped, until it reaches the part it hasn't written yet.\n\nAfter this PR I plan to add support for [range requests](https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests), so that the requests are retried from the last byte offset. But for start I wanted to add this because I didn't know whether all S3 endpoints support range requests, so I thought we would still need this as a safety net.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1546", "title": "Use Digest#base64digest method", "body": "Other than being shorter, it has two qualities over `Base64.encode64` that\nare desirable in this case. One is that it doesn't include a trailing\nnewline at the end of the result. Other one is that it doesn't wrap the\nresult in 60 columns, meaning it doesn't add a newline after each 60\ncharacters.\n\nA general alternative to `Base64.encode64` is `Base64.strict_encode64`,\nwhich should have the same desirable behaviour, but calling\n`#base64digest` is shorter.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1545", "title": "Use buffer when generating MD5 checksum", "body": "When IO is #read without a buffer string, it allocates a new string for each read chunk. Even though by reading the file in chunks we keep memory usage low, we still give GC work to clean up all those strings.\n\nHowever, if we pass an additional buffer string to #read, instead of allocating new string for each chunk, each chunk will be read into the existing buffer string (replacing any previous value). That means that the buffer string is the only string that's allocated.\n\nThe IO body already has to accept the additional buffer argument, because Net::HTTP uses IO.copy_stream to stream the IO to the TCP socket, and IO.copy_stream will throw an exception if the IO body only accepts the length argument.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1523", "title": "S3: Refactor MultipartFileUploader to be like ObjectMultipartCopier", "body": "This aim of this PR is to bring consistency between the two implementations.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/106785671", "body": "I think here it would be much better to open both the chunks and the result files in *binary* mode instead of UTF-8, to copy the bytes exactly as they are, because this looks like it could cause problems with other encodings.\r\n\r\nAlso, currently the chunks are read in memory whole before they are appended (~5MB each), but you can avoid that by reading and writing in smaller chunks, which you can automatize with `IO.copy_stream`:\r\n\r\n```rb\r\nFile.open(@path, \"wb\") do |result_file|\r\n  sort_files(fileparts).each do |part_path|\r\n    # automatically opens the source in binary mode and copies it in chunks\r\n    IO.copy_stream(part_path, result_file)\r\n  end\r\nend\r\n```", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/106785671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/106785801", "body": "Here you can use the `:response_target` option with a path, which will automatically download the file in chunks, and also correctly uses the binary format.\r\n\r\n```rb\r\n@client.get_object(\r\n  :bucket => @bucket,\r\n  :key => @key,\r\n  param.to_sym => chunk,\r\n  :response_target => file\r\n)\r\n```", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/106785801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/108199039", "body": "What does the `:part_number` here do exactly? From the API docs:\r\n\r\n> Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a \\'ranged\\' HEAD request for the part specified. Useful querying about the size of the part and the number of parts in this object.\r\n\r\nWouldn't this mean that the `content_length` in this response would return only length of that one part? I mean, probably not, but just wanted to check \ud83d\ude03 ", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/108199039/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 1, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/111856431", "body": "Good catch on setting `Thread#abort_on_exception`, I think this `ObjectMultipartCopier` and `MultipartFileUploader` should also be updated to set `Thread#abort_on_exception` (otherwise the thread won't propagate the error, and nothing will be cleaned up).\r\n\r\nBtw, you probably need to set `Thread#abort_on_exception` *before* the exception is raised (at the top of the thread definition), otherwise that part of code will never get executed in case an exception is raised. While here, instead of using a `thread` local variable, you could also use `Thread.current` to access the current thread:\r\n\r\n```rb\r\nthreads << Thread.new do\r\n  Thread.current.abort_on_exception = true\r\n\r\n  begin\r\n    # execute\r\n  rescue\r\n    # clean-up\r\n  end\r\nend\r\n```", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/111856431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/111856888", "body": "`Array#push` returns the modified receiver, so this could be just\r\n\r\n```rb\r\nparts = batches.inject([]) {|a, batch| a.push(*batch.values) }\r\n```\r\n\r\nEven better, you could use `Array#flat_map`:\r\n\r\n```rb\r\nparts = batches.flat_map(&:values)\r\n```", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/111856888/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/118146755", "body": "Only because the `MultipartObjectCopier` uses  the name `PartQueue`. I reverted it back to `PartList`.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/118146755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "kriskhaira": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/68dcf3a084474ed6592533443b34b02e81db96d9", "message": "Fix Gitter badge not displaying properly (#1483)\n\n* Also update to latest format shown in the Gitter Room's settings page. See http://blog.gitter.im/2014/01/27/badgers/"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/3f2bcb1db9209e78422344c8a8b69b7275f9cfe7", "message": "Fix typo (http_reed_timeout) (#1482)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vpagliari": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/926351976919bf92f50bc832befce45d3ba7cd54", "message": "Update README.md (#1466)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "penntaylor": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1695", "title": "Fixed ox parsing of xml documents containing significant whitespace", "body": "...*semantically*-significant whitespace, that is.\r\n\r\nThe `:skip_white` flag being passed to Ox parser clobbers all whitespace during parsing. This strips out whitespace that may be semantically significant, such as in the case of sending YAML documents via SQS. The setting proposed in this pull request strips only trailing spaces from contained content, which should leave most real-world white-space significant documents semantically intact. It certainly fixes Ox for use with YAML over SQS.\r\n\r\nThis proposed change explicitly changes a prior fix made in #1496, related to issue #1495. ~~I was unable to locate the \"kitchen_sink\" test harness referenced there, so was unable to manually check this change against whatever the undesirable behavior for that issue was.~~ [Edit: I see now that KITCHEN_SINK is a Travis target.]", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gaurish": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1661", "title": "[Perf] Time.iso8601 is 3x faster than Time.parse", "body": "The \"Expiration\" key in response is always ISO8601, for example \"2017-11-19T18:08:11Z\".\r\n\r\nHere is a simple bechmark\r\n\r\n```ruby\r\nrequire 'time'\r\nrequire 'benchmark/ips'\r\n\r\nBenchmark.ips do |x|\r\n  TIME = \"2017-11-19T18:08:11Z\".freeze\r\n  x.config(:time => 10, :warmup => 4)\r\n  x.report(\"using Parse\") { Time.parse(TIME) }\r\n  x.report(\"using iso8601\") { Time.iso8601(TIME) }\r\n  x.compare!\r\nend\r\n```\r\n\r\n```\r\nWarming up --------------------------------------\r\n         using Parse     4.104k i/100ms\r\n       using iso8601    11.737k i/100ms\r\nCalculating -------------------------------------\r\n         using Parse     42.068k (\u00b1 4.3%) i/s -    422.712k in  10.068115s\r\n       using iso8601    124.765k (\u00b1 2.5%) i/s -      1.256M in  10.072182s\r\n\r\nComparison:\r\n       using iso8601:   124764.6 i/s\r\n         using Parse:    42067.5 i/s - 2.97x  slower\r\n```\r\n\r\nGood Idea?", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "makeready": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1615", "title": "Allow DynamoDB to write empty set attribute values, part 2", "body": "Hello,\r\n\r\nFirst off, thanks for merging in my original PR for this feature. However, now that it's usable in the wild, we're trying to save empty sets and getting errors from param_validator.rb. After tracing through the error it became clear that I forgot to create the new AttributeValue definitions to support empty sets. This PR is to fix those omissions.\r\n\r\nBTW, I wasn't clear on how to test this change - param_validator_spec uses a fake list of shapes, and client_api.rb doesn't have a corresponding test file, which means the definitions \r\nin client_api aren't actually tested anywhere. If you'd like me to write an integration test to cover it I can, but I assume this feature is too minor to deserve an integration test.\r\n\r\nThanks", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sorah": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1516", "title": "File#path may not point the corresponding file", "body": "According to [RDoc][1], `File#path` returns a string of the pathname used to create a `File` object. So, it doesn't guarantee a returned pathname points the pathname of File object's corresponding file.\r\n\r\nFor instance, File may have replaced with another file after original `File` object opened. Also, `File.open` with `File::TMPFILE` option don't create directory entry for created files (see `open(2)` manual). On current Ruby implementation, `O_TMPFILE` file objects returns a path of directory used to create a temporarily file.\r\n\r\n``` ruby\r\nFile.write '/tmp/foo', 'a'\r\nFile.write '/tmp/foo2', 'a'\r\nopen('/tmp/foo', 'r') do |io|\r\n  File.rename '/tmp/foo2', '/tmp/foo'\r\n  s3.put_object(..., body: io) # Reads different file!\r\nend\r\n\r\nopen('/tmp', File::RDWR | File::TMPFILE) do |io|\r\n  s3.put_object(..., body: io) #=> error: Errno::EISDIR\r\nend\r\n```\r\n\r\nThis patch changes Checksums module to correctly handle IO objects for\r\ncalculating digests.\r\n\r\n- Use `IO#dup` (`dup(2)`), `IO#rewind` and `IO#read` for calculating digest from `IO` object, always\r\n- Ensure binary mode when calculating digests\r\n- For non `IO` like objects, use #to_str to ensure the value is a `String` like object.\r\n\r\nSee also today's documentation change to note this pitfall. https://github.com/ruby/ruby/commit/efd36678e6041593a6b9cd64bdbe4318f1e7ad0e\r\n\r\n[1]: https://docs.ruby-lang.org/en/2.4.0/File.html#method-i-path", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "malept": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1274", "title": "Allow setting config/credential files via environment variables", "body": "Adds support for setting the paths to the config and credentials files via environment variables, named the same as the ones used by botocore/awscli.\n- config file: `AWS_CONFIG_FILE`\n- credentials file: `AWS_SHARED_CREDENTIALS_FILE`\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mattyn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1581369", "body": "Thanks for catching this!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1581369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1581381", "body": "Thanks for the patch, we'll check it out.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1581381/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1581434", "body": "Thanks for the bug report!  We'd like to direct all bug reports through the AWS Developer Forums:\n\nhttps://forums.aws.amazon.com/forum.jspa?forumID=125&start=0\n\nIt would be great if you could post your question there so other AWS developers can see the answers.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1581434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1600269", "body": "Thanks for the patch!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1600269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1619328", "body": "Thanks for the patch!  I think [this request](https://github.com/amazonwebservices/aws-sdk-for-ruby/pull/2) covers the same issue.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1619328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1628400", "body": "Thanks again for reporting this issue!  This has been resolved with the latest release of the SDK.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1628400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1647688", "body": "Thanks for the patch!  We'll look into it.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1647688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1647689", "body": "Thanks for the patch, we'll look into it!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1647689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1656747", "body": "It seems like a potential workaround would be to set the option on the HTTPartyHandler.  For example:\n\n```\nAWS.config(:http_handler => AWS::Http::HTTPartyHandler.new(:ssl_ca_path => \"/etc/ssl/certs\"))\n```\n\nDoes that help with your use case?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1656747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1703753", "body": "I'm not able to reproduce the issue which this patch is meant to fix.  Can you post on the forums (http://forums.aws.amazon.com) with more details about where you are seeing this issue?  It would be great to know the ruby version and platform.  Also, when S3 can't verify the signature it returns an XML response including the expected string to sign.  If you can reproduce the problem under a non-critical bucket (e.g. one you create for this purpose) it would be great to see that XML response so we can pinpoint the problem further.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1703753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1793265", "body": "Thanks for the patch!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1793265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1819977", "body": "Thanks for the patch!  We'll take a look.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1819977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1829024", "body": "Hi,\n\nWe just released version 1.1.0 of the SDK, which should address this issue.  Let us know if you run into any more problems.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1829024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1934492", "body": "Thanks for the patch!  We'll take a look.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1934492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2031581", "body": "Thanks for the patch!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2031581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2045694", "body": "Thanks again for the patch.  We incorporated your first commit with version 1.1.4 of the SDK.  We've also made some sweeping changes to the way the library loads that should help to address the overall load time.  I'm going to close this request, but please let us know if you have any issues with the latest version.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2045694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2045738", "body": "Thanks again for the bug report and patch.  We've just released version 1.1.4 of the SDK, which should address this issue.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2045738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "msavy": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1619537", "body": "I didn't realise there were separately documented extensions to Time offering the RFC methods (hence constructing the format manually!).\n\nThe other solution is better I think.\n\nCheers.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1619537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "geoffyoungs": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1662941", "body": "Yes it does - thanks - I'd missed that.  It's a much cleaner solution :)\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1662941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "prashantrajan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1708565", "body": "Version 1.0.3 seems to have fixed this issue for me.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1708565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "krishan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2297187", "body": "With aws-sdk it is not yet possible to alter the content_type of an existing s3 object (without downloading and re-uploading it).\nThis patch enables the developer to do just that by supplying a new content_type when copying an s3 object, i.e. \n\n```\nobj1.copy_from(\"bucket/key\", :content_type => \"image/png\")\n```\n\nFor more info, see my question in the aws-sdk developer forums: https://forums.aws.amazon.com/thread.jspa?threadID=76578&tstart=0\n\nI'd be real happy if you could merge that into a new release.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2297187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "awendt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2297849", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2297849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kostia": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2303221", "body": "Updated to Tag `1.2.0`\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2303221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "amscotti": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2823829", "body": "This is my first pull request on github, so if the code needs to be improved or if there is a more formal process let me know.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2823829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "trevorrowe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3170479", "body": "I merged in a different pull request that addresses this issue.  Should go out with the next release.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3170479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3170489", "body": "Version 1.2.4 of the SDK should address all of the remaining issues from this pull request.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3170489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3362651", "body": "This has been released with version 1.2.6 of the aws-sdk gem.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3362651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3622543", "body": "Thank you for your submission!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3622543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3622546", "body": "Thank you for your submission!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3622546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3622548", "body": "Thank you for your submission!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3622548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3626624", "body": "I added a few questions to commit 7115e00.  Please take a look at those.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3626624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3895441", "body": "Thank you for reporting this issue.  I just released version 1.3.4 of the aws-sdk gem which addresses this issue in a broader sense (and added a few tests).\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3895441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/4576622", "body": "The nokogiri gem dependency was previously expressed as '>= 1.4.4', but this became an issue when 1.5.1 was released.  Version 1.5.1 was not compatible with Ruby 1.8:\n\nhttps://github.com/tenderlove/nokogiri/issues/632\nhttps://github.com/tenderlove/nokogiri/issues/631\n\nBoth of these issues have been resolved in 1.5.2; I will revisit this with the next release.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/4576622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/4851707", "body": "I'll be releasing shortly and rolling the dependency back to >= 1.4.4.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/4851707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5341562", "body": "I haven't had a chance to take this for a spin yet, but it looks like an excellent start.  For integration testing, we can probably setup (and then latter tare down) and SNS topic and an SQS queue.  I'll try to take a look at the subscription confirmation issue.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5341562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5359308", "body": "You found a method that is no longer in use.  It was removed to AWS::Core::Configuration.  This method should have been removed (which is why it does not generate runtime errors).  I'll go ahead and just drop this method in the next release.  Keep up the good work!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5359308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5367812", "body": "If any of the service classes (e.g. AWS::S3, AWS::EC2, etc) ever return nil when they receive the message #client then there is a bug that needs to be resolved.  How often does this happen?  Do you have a simple case that you can reproduce this issue with?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5367812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5467659", "body": "It definitely sounds like a thread safety issue that needs to be resolved.  Is the client missing only at startup or are you experiencing this after things are underway?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5467659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5916557", "body": "Sorry for the slow response.  This is the correct place.  It looks like a good patch.  Let me merge it locally and take it for a spin.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5916557/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6188359", "body": "Sorry for this taking a while.  I've merged this in.  It will go out with the next gem release.  Thanks for the submission!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6188359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6188361", "body": "Sorry for this taking a while.  I've merged this in.  It will go out with the next gem release.  Thanks for the submission!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6188361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6189124", "body": "There is no explicit rescue in the code because there is little that can be done in most error cases.  The AWS::S3::Client examines the response and either returns a successful response or raises a runtime error based on the error code returned by S3.  Generally, all 300+ responses are raised as errors.\n\nIt is also worth noting that all 500+ responses from the service are automatically retried 3 times (for a total of 4 attempts) with an exponential back-off (this helps deal with throttling errors).  The error is raised only if all 4 attempts fail.  \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6189124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6254336", "body": "Closing this pull request as this issue has been resolved here: https://github.com/amazonwebservices/aws-sdk-for-ruby/pull/51.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6254336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6316116", "body": "Looks good, will go out with the next release.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6316116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6513556", "body": "Sorry for the slow response.  I've been working on the approval process to accept a large contribution.  I'm going to send kadwanev a CLA.  I should be able to merge this in soon.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6513556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6513565", "body": "Sorry for the slow response.  I've been working on the approval process to accept large contributions.  I'm going to send yyuu a CLA.  I should be able to merge this in soon.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6513565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6950492", "body": "I'll be releasing an updated gem with support for Amazon CloudWatch support shortly.  I changed the names of a few classes, added documentation, split the MetricAlarmCollection class into 2 parts and added chainable filter methods to the collection classes to be more consistant with other collection classes.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6950492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6950914", "body": "Version 1.5.7 of the aws-sdk gem (with Amazon CloudWatch support) should now be live.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6950914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/7259807", "body": "Go ahead and create a new pull request and reference it here.  I'll get back to you once I know if a new CLA is required.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/7259807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/7294492", "body": "I've released version 1.5.8 which includes EMR support.  The JobFlow class was refactored to behave more like the rest of the SDK.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/7294492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/7696361", "body": "I would like to merge this pull request, but it would be preferable to not have the gemspec added.  Is there a particular reason to have a gemspec file instead of running \"rake gems:repackage\"?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/7696361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/8288393", "body": "Thank you for the submission.  I've added this for the next release (the pull request can not be automatically merged).\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/8288393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/8628631", "body": "Looks good, I'll make sure this goes out with the next release.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/8628631/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/9248509", "body": "Looks good, thanks for the contribution!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/9248509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/9265796", "body": "Looks good, thank you for the contribution.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/9265796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/9271322", "body": "I'm going to be reverting a push I made that contained an RDS client so I can work in yours.  The affected commits I plan to revert are:\n\nc6beb0537b7bbe84190e6aeed1e73e19aaff2ea4\ncdabb8967b6c20cb4e2458d406688b47228d3c70\n5db2951ab8a24004631ef4b3fc25e3979bdfc89a\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/9271322/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/9513233", "body": "Looks good.  Thank you for the bug fix/submission!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/9513233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/9999610", "body": "I pulled your commits into a local branch, added some unit and integration tests, and fleshed out a few more parts of the DBInstance and DBSnapshot classes.  I'll go ahead and close this pull request.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/9999610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/10193368", "body": "Currently, most services represented in the aws-sdk gem have a higher-level abstraction built on top of their client class.  We have been considering splitting the gem into 2.  The aws-sdk gem would remain as is (with higher level abstractions) and would rely on the aws-sdk-clients (or aws-sdk-core) gem.\n\nThat said, this is a rather large contribution.  I have not spent the time yet to see how we can get this merged.  I am confident we can though.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/10193368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11209687", "body": "Unfortunately the stack trace you gave doesn't help resolve the issue.  The error indicates that the queue url is missing.  This could be reproduced with the following code:\n\n```\nAWS::SQS.new.queues[nil].send_message('abc')\n```\n\nWhat bothers me is how this could have happened.  In the example you gave above, the call to #first returns either a `AWS::SQS::Queue` object or `nil`.  Calling something like s`#send_message` on `nil` would have raised a very different error.  Your stack trace shows that you called `#send_message` on a queue object and that it had a `nil` url attribute.  The error was raised while validating the request parameters.\n\nI was not able to reproduce this issue myself.  It would be helpful to see the actual HTTP response body from the call to ListQueues (i.e. from calling `AWS::SQS::new.queues.with_prefix(domain).first`).\n\nWould it be possible for you to enable wire logging on the request?  You can do this when constructing the http request.\n\n```\nsqs = AWS::SQS.new(:http_wire_trace => true)\nqueue = sqs.queues.with_prefix(domain).first\n```\n\nBy default this will send it to your configured logger.  If you are running a Rails application, this is likely the Rails.logger.  If you do not have a configured logger, then output will be sent to $stdout. You can specify the logger with the `:logger` option.\n\n```\nrequire 'logger'\nsqs = AWS::SQS.new(:http_wire_trace => true, :logger => Logger.new($stderr))\n```\n\nThank you for reporting the issue.  I'd like to get this resolved!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11209687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11209964", "body": "Looks good, thanks for your contribution!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11209964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11210653", "body": "Thank you for point this out.  The fix was pretty straightforward and can been seen here: 4978bb35ad -- the live documentation should get updated with the next gem release.  You can test this locally by cloning the git repo and running:\n\n```\nyard server -r\n```\n\nYou can view the generated documentation then at localhost:8808/docs/frames\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11210653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11211918", "body": "Thank you for reporting this issue.  There appears to be a thread-safety issue with how the service interfaces (e.g. `AWS::SimpleEmailService`) construct their client.  I will try to resolve this issue soon, but you should be able to work around this by constructing the ses interface outside the loop:\n\n```\nrequire 'aws-sdk'\nses = AWS::SimpleEmailService.new(...)\npool = Array.new(10) do |i|\nThread.new do\n  ses.send_email(\n    :subject => 'subject',\n    :body_html => 'body_html',\n    :body_text => 'body_text',\n    :to => 'success@simulator.amazonses.com',\n    :from => 'some@email.com',\n  )\n  end\nend\n\npool.each(&:join)\n```\n\nPlease watch this issue for updates.  \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11211918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11219573", "body": "The stack trace really helps.  Thank you for sharing.  I'm working with the SQS team to try to better understand and isolate the issue.  I'll update when I have more information.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11219573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11223079", "body": "We may have isolated the issue.  Please give it another try.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11223079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11223447", "body": "I pushed a commit that should address this issue (f1f45a7cf4).  This should go out with the next release.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11223447/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11223781", "body": "The call to `#bytesize` is happening when building the HTTP request (while trying to specify the `content-length` header of the HTTP request.\n\nhttps://github.com/aws/aws-sdk-ruby/blob/master/lib/aws/core/http/request.rb#L159-L167\n\nThis was modified with the 1.6.7 release.  Previously it was using the `#size` of the HTTP body, this failed to correctly set the content length for some non-ascii payloads. \n\nCan you generate a simple example that demonstrates the issue you are experiencing?  Also, what version of Ruby are you using?  I'd like to reproduce this issue so I can resolve it, and then add tests to ensure this does not break in the future.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11223781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11223914", "body": "Closing stale issue.  This should have been resolved a while ago.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11223914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11224123", "body": "What sort of failure are you experiencing?  I'm concerned about the proposed solution as leading slashes in an object key are significant and should not be removed. Two objects with the keys \"foo.txt\" and \"/foo.txt\" are different objects in S3.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11224123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11256458", "body": "The issue you experienced previous was caused server side.  My understanding is this issue has been resolved and the SDK should work when listing queues.  \n\nThe issue you are reporting above appears to be unrelated.  It is difficult to tell what happened from the logger message.  The SDK uses Net::HTTP to send/receive AWS requests.  The status code 0 (zero) happened when the http handler tried to cast the http response status code from a string to an integer.  It appears that Net::HTTP returned an empty response (possibly a networking error).  \n\nThe only way to know for certain is to enable wire logging (see my example above).  This would allow us to see what example Net::HTTP returned to us.\n\nI'm guessing this raised an error in your application.  This should be improved so the net http handler triggers a retry on your behalf.  If this is correct, please open a new issue and put you debug message there so we can track it as a separate issue.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11256458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11257809", "body": "Given the following example\n\n``` ruby\nrequire 'aws-sdk'\nses = AWS::SimpleEmailService.new # loading credentials from environment\npool = Array.new(10) do |i|\nThread.new do\n  ses.send_email(\n    :subject => 'subject',\n    :body_html => 'body_html',\n    :body_text => 'body_text',\n    :to => 'success@simulator.amazonses.com',\n    :from => 'some@email.com', # replace this with a verified email address\n  )\n  end\nend\n\npool.each(&:join)\n```\n\nI was able to execute this many times without issue.  If I moved the ses assignment inside the Thread.new block, then it would fail every time due to thread safety issues.  Is this what your test example looks like?  \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11257809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11322916", "body": "The `AWS::Core::Data` classes were added quite a while ago.  The client classes (like AWS::EC2::Client) used to construct responses where the values where dynamically created objects with methods punched onto them.  This proved to be a performance bottle neck.  To address the performance issues, the client response data objects were changed to plain old nested hashes and arrays.\n\n`AWS::Core::Data` and `AWS::Core::Data::List` were added to provide a backwards compatible interface for accessing response data.\n\n``` ruby\nresp = ec2.client.describe_regions\n\n# deprecated interface, currently handled via AWS::Core::Data\nresp.region_info[0].region_name\n\n# preferred access style\nresp[:region_info].first[:region_name]\n```\n\nAccessing response data via `#[]` returns plain old hashes and arrays.  Accessing response attributes via named methods return these same structures wrapped. Method style access is deprecated and will not exist in version 2.  Unfortunately some sections of the SDK still access response data via the old interfaces.  The `AWS::EC2::Instance#create` method is one such section.  Unfortunately this abstraction leaked out because of the call to #map in this method.\n\nI agree with Loren, the core data abstractions can be improved (to prevent this issue).  That said, I consider this also a bug.  The #create method previously did return an array and the documentation should probably not change.  Ideally all such uses of response objects through method missing (that returns a core data object) should be removed.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11322916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11322976", "body": "Commit 79cbc73d16 should resolve the immediate issue of `AWS::EC2::InstanceCollection#create` not returning an actual array.  Changes still need to be made to the core data classes.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11322976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11323316", "body": "I pushed a branch with a proposed change to the core data classes (core-data-fix branch).  You can view the changes here: https://github.com/aws/aws-sdk-ruby/commit/bfc4dc6bb1f7cbf0a39c52a57ebc227022e98e8c. \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11323316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11461265", "body": "Could you provide some additional information (version of Ruby, stacktrace, etc.)  I attempted a quick reproduction and was unable to trigger the error.  Here is what I did:\n\n``` ruby\n1.9.3p327 :001 > require 'aws-sdk'\n=> true\n1.9.3p327 :001 > class TestModel < AWS::Record::Model; end\n => nil\n1.9.3p327 :002 > TestModel.create_domain\n => #<AWS::SimpleDB::Domain:TestModel>\n1.9.3p327 :003 > TestModel.first\n => nil\n1.9.3p327 :004 > Enumerator.new{|y| y << TestModel.first}.next\n => nil\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11461265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11622138", "body": "There appears to be a yard documentation issue causing the client method documentation to generate on the parent class.  I'll try to push out a fix shortly.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11622138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11622650", "body": "I've been able to resolve the issue locally with commit b76f81738b.  I'm going to rebuild and deploy the hosted docs next.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11622650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11626730", "body": "The hosted docs have been updated.  Thank you for reporting this issue.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11626730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11799892", "body": "Sorry for not commenting on this pull request earlier.  It is a known issue that the SDK does not hold onto etag values from the list objects response.  This is problematic when you need the etag for objects you are enumerating.  \n\nYour pull request would resolve this issue, but it would be inconsistent with the SDK's strategy for caching data.  I was hoping to resolve this issue by making the S3Object extend AWS::Core::Resource.  This would make S3 behave like the other service interface and allow you to selectively hold onto volatile attributes.\n\nI'll be back in the office soon and I'll try to take a look at this.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11799892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11829563", "body": "I'm working on a patch that addes the `:expires` option to the S3 client `#copy_object` method and allows additional options to be passed in via `S3Object#copy_from` and `#copy_to`.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11829563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11851670", "body": "Thank you for the bug fix!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11851670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11851788", "body": "I'm guessing there is some other issue at play here.  Leading slashes are significant in Amazon S3.  The objected stored in a bucket with the key \"/path\" is different from the object stored at the key \"path\".  Are you using any other tool to put these objects in the buckets which may be removing slashes on your behalf?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11851788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11894698", "body": "Sorry for the long absence on this.\n\nRight now my primary concern with this feature is the dependency on HTTParty.  This gem is still expressed as a dependency to support a deprecated HTTP handler.  This handler will soon be removed as will the dependency on the gem.  \n\nA secondary concern would be for adding tests.  I added a while back a mock EC2 metadata server (https://github.com/aws/aws-sdk-ruby/blob/master/spec/mock_ec2_metadata_server.rb).  It shouldn't be very difficult to add support for mocking user metadata.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11894698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11895033", "body": "I pulled in the second commit and removed the duplicate definition of the client operation, that way the additional method and test were added.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11895033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11895186", "body": "I believe this issue has been resolved with 58ff1b923a27.  Can you verify if this issue is still a problem?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11895186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11895267", "body": "Ping.\n\n@frederickdubois Can you confirm is this is still an issue or if you are still using some sort of workaround?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11895267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11902714", "body": "The `:metadata` of an object stored in S3 is defined as the user-supplied hash of metadata.  I don't think mixing additional HTTP response headers into the user metadata hash would be the correct solution here.  \n\nUsing rspec syntax this is what I mean:\n\n``` ruby\ns3.buckets['aws-sdk'].objects['key'].write(data, :metadata => meta)\ns3.buckets['aws-sdk'].objects['key'].metadata.to_h.should eq(meta)\n```\n\nI agree that the additional http response headers should be accessible.  Would it be sufficient if all of the other header values were merged into the response data from `#head_object`?\n\n``` ruby\nresp = s3.client.head_object(...)\nresp[:content_encoding] #=> '...'\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11902714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11903671", "body": "Thanks for the contribution!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11903671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11904160", "body": "Thanks for the contribution!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11904160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11904990", "body": "Thanks for the contribution!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11904990/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11905177", "body": "Thanks for the contribution!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11905177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11905654", "body": "I pushed a commit earlier today that added support for CopySnapshot to the EC2::Client class (10ace102d6fe9d).   I have not added any higher level methods to AWS::EC2::Snapshot at this time.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11905654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12308052", "body": "Thank you for the pull request.  I've added a few integration tests as well.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12308052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12308063", "body": "I merged 8766e78 into master.  This should resolve this issue.  This will go out with the next release.  Thank you for reporting the issue.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12308063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12335115", "body": "Thanks for the bug fix!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12335115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12335178", "body": "Thanks for the contribution!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12335178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12335267", "body": "I'm closings issue for now.  I'll be happy to revisit this issue if we can get a test case that fails.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12335267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12335317", "body": "Looks good!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12335317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12359875", "body": "Thank you for the pull request.  \n\nI just added support for s3 website configuration to the client in commit 27f1c26cd5ee4b8cbffd86b85aff199781847a84 and to the bucket class in 17cc9a1f08d9405e866e030f0ad1c42396e97f82.  The primary differences are the structure of the arguments in the client (I chose to map directly to the API, this helps when the API changes so we don't have to make backwards incompatible changes).  I also took a slightly different approach with the WebsiteConfiguration class.  \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12359875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12509952", "body": "There are two issues at play:\n1. Times stored should be converted to UTC first\n2. When querying by DateTime or Time the value should be converted to UTC for correct comparison\n\nThese are indeed both issues that need to be fixed, but the pull request fixes these by adding a dependency on ActiveSupport extensions.  I would be inclined to accept the pull request if this dependency was removed.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12509952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12517752", "body": "We have purposely avoided extra dependencies, especially those that extend or modify core Ruby classes (like the ActiveSupport extensions).   There is definitely a good argument to make in the other direction, but I do not feel that someone who wants to build a simple command line application or Sinatra web app should be forced to install a large number of dependencies to use the `aws-sdk`.\n\nI have considered breaking the AWS::Record code away from the `aws-sdk` gem and making it a separate project.  In this case I would have a more favorable opinion of an ActiveSupport/ActiveModel dependency.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12517752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12517777", "body": "I should also add, that extracting AWS::Record into a separate project would likely not happen until a major version change of the SDK (i.e. version 2).\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12517777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12518610", "body": "I reopened the issue so we can track this as a missing feature of the `aws-sdk`.  The SDK should be following 307 temporary redirects (and currently does not).  Yes, we would accept a pull request.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12518610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12532751", "body": "I'm actually leaning towards removing the HTTParty gem dependency all-together at this time.  The AWS::Core::Http::HTTPartyHandler has long since been replaced as the default handler.  This would be a minor backwards-incompatible change (would break for users who explicitly replace the default handler with the deprecated HTTParty handler).\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12532751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12563347", "body": "Thanks for the doc fix!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12563347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12564889", "body": "I merged this in with a few minor edits (I trimmed trailing whitespace from the entire file, and squashed the commits).  You can view the commit here: 58943f647723574e75adfe42c257fe3d5c5dffb8.  Thanks!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12564889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12565351", "body": "I went ahead and removed the private tag from the AWS::IAM::Resource class.  This will allow the exists? method to show through in the docs.  This fix will affect all of the IAM resource classes, not just User.  Thanks for bringing this to our attention! (see 75319b2f6f7adbaa57d0c776676a0a3216dea3bf)\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12565351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12565483", "body": "I was unable to reproduce this issue.  Are you using the latest version of the `aws-sdk` gem?  If the issue persists, it would be helpful if you could provide a full stack trace as well.  Thanks!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12565483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12633922", "body": "I think your code comment is useful.  Let me see what we can do about getting it into the source documentation that feeds into the client operation documentation.  If I merge your pull request, the comment will get clobbered the next time the client is updated.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12633922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12816020", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12816020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12816141", "body": "Closing in favor of 7490ef1 (removed HTTParty dependency and handler).\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12816141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12866014", "body": "We released an update (version 1.8.1) last night that addresses this issue.  Could you update and verify this issue no longer persists?\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12866014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12866334", "body": "The `:s3_origin_config` is not marked as required because it is only needed when the origin is an S3 bucket. If the origin is outside Amazon S3, then you would need to pass the `:custom_origin_config` option instead.  The documentation you linked to is built directly from the public API documentation here: \n\nhttp://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/DistributionConfigDatatype.html#DistributionConfigDatatype_Elements\n\nIt can be generally difficult to document these conditionally-required parameters as the conditions that makes a param required can be complex.  Do you have a suggestion that you feel would improve this for the next user?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12866334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12867477", "body": "I will pass along the suggesting to the documentation team for Cloud Front.  I'm going to go ahead and close this issue as thanks,  Thanks for the feedback!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12867477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12910947", "body": "Thanks for the fix.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12910947/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12911436", "body": "Thanks for the PR.  I'll take a look at the cause to this and check whats up with the test.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12911436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12912683", "body": "I merged this locally and pushed your commit (542f075b5f6205d6d7b1a67edb504eb79d96321e).  I was able to isolate the issue with the specs not failing (https://github.com/aws/aws-sdk-ruby/commit/793aa0d4f38e866db0d0bbe952bce791f46615ad#spec/aws/s3/multipart_upload_spec.rb#diff-1).  Thanks for the fix!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12912683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12918337", "body": "Closing due to inactivity and inability to reproduce the issue.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12918337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13008718", "body": "Thanks for the doc fix!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13008718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13085598", "body": "I will push the gem today.  I was unable to previously because the Rubygems.org API was in previously in read-only mode.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13085598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13087738", "body": "Version 1.8.1.2 is live now.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13087738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13088129", "body": "No, it is not necessary.  The issue is the SDK does not know what or how many attributes you require.  In the abscence of the list of attributes to select, it will request only the table schema attributes.  In your example, this is \"id\" and \"date\".  The table schema attributes are required so the yielded Item object will know how to operate on itsel f (for example, what if you only wanted to delete each yielded item, you would need to know its schema attributes).\n\nIf you pass in a list of attributes to select, the block will instead yield an ItemData object (instead of an Item object).  \n\n```\ntable.items.query(:select => [ATTRIBUTES_TO_SELECT], :hash_value => \"1\", :range_value => \"22\") do |item_data|\n    puts item_data.attributes #=> a hash of selected attributes\n    item_data.item #=> the AWS::DynamoDB::Item object for this attribute bag\nend\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13088129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13208673", "body": "Thanks for the doc update!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13208673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13209034", "body": "Thanks @qminhdo for answering the question.  Please re-open the issue @karlfreeman  if there is anything else this doesn't resolve.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13209034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13209653", "body": "The documentation on conditional put/delete for SimpleDB appears to be lacking.  You can add the expected options to the following SimpleDB methods:\n- AWS::SimpleDB::Attribute #set, #add, #delete\n- AWS::SimpleDB::AttributeCollection #put, #replace, #58 \n\n``` ruby\nitem = sdb.domains['domain-name'].items['item-id']\n\n# add values to an attribute if the attribute 'attr' contains 'value'\nitem.attributes['attr-name'].put(values, :if => { 'attr' => 'value' })\n\n# delete a list of attributes unless the attribute 'attr' exists\nitem.attributes.delete(attributes, :unless => 'attr')\n```\n\nDoes this help?  I would like to leave this issue open regardless, so we can track adding the missing documentation on these options.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13209653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13209801", "body": "Thank you for pointing out the error in the documentation.  I've pushed a fix.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13209801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13390698", "body": "I went ahead and removed the API version from the other operations and client documentation as well.  Thank you for the fix!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13390698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13390844", "body": "It looks good.  Could you add a few unit tests to cover the intended behavior?  I'd be happy to merge with tests.  Thanks for the good looking contribution!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13390844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13391259", "body": "I pushed a commit that should resolve this issue for now.  We are looking into a few options that would support adding arbitrary options to the request.  \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13391259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13391837", "body": "Please let me know if this does not work, but it still passes our integration tests against AWS.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13391837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13442992", "body": "I was hoping to get this released yesterday, but was not able to.  I just cut a 1.8.1.3 release.  Enjoy!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13442992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13468149", "body": "Thanks for the commit!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13468149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13586730", "body": "A test would be good, If you would please.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13586730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13741120", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13741120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13743350", "body": "Thank you for reporting this issue.\n\nThe API configuration is actually correct.  The bug you have was caused by a deficiency in the option validator. \n\nMap types and hash types are fundamentally different.  Hash types are more like structures, with a fixed possible set of keys.  Map types accept variable (user-defined keys).   I pushed a commit that should resolve this issue.  I'll try to cut a release shortly with this bug fix.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13743350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13748084", "body": "There are no current plans to add a flow like abstraction to the `aws-sdk` gem.  It is possible that something like this might get developed as a separate project (e.g. aws-flow).  I would stress this is not something we are currently discussing though.  \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13748084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13748392", "body": "I just pushed a commit (c67468a2037983b117b91804652d4542e446ab7a) that adds the missing operations.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13748392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13749932", "body": "Thank you for reporting the issue.  \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13749932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13954387", "body": "A commit was pushed to master earlier this week (https://github.com/aws/aws-sdk-ruby/commit/cda7e7d3f28714e3a2175b1e91501db01909d26b).  Can you verify if this resolves your issue?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13954387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13972408", "body": "I see the issue.  The commit I referenced above resolved this issue for AWS::EC2::Instance class, but there is a related issue with AWS::EC2::Image (I miss-read the original issue). I'll try to get a fix posted shortly.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13972408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13975605", "body": "I just published a release (version 1.8.3.1).\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13975605/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/14129288", "body": "I went ahead and added the headers identified in this issue to the #get_object and #head_object client responses.  I'm avoiding making other sweeping changes at this time because we are currently looking into more major changes related to the AWS::S3::Client that would accompany a major version bump (e.g. v2.0).  These changes would include a few backwards incompatible changes.  \n\nPrimarily I want to get rid of the hand-coded s3 client and replace it with a modeled client using a service model.  Similar service models are being used by the new Node.js SDK, the unified aws-cli, the new PHP SDK and boto core.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/14129288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/838094", "body": "Yes, but this has since been fixed/re factored in later releases.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/838094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/838117", "body": "Yes, but this has since been fixed/re factored in later releases.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/838117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/1124915", "body": "You can see a short discussion on the issue in this pull request: https://github.com/amazonwebservices/aws-sdk-for-ruby/pull/33#issuecomment-4576931 -- in short, nokogiri 1.5.1 was the lastest version at the time of this release, but it was broken for Ruby 1.8.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/1124915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/1522778", "body": "You are correct, looks like a merge goof from adding the instance export.  I'll try to get a fix for this shortly.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/1522778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/1522870", "body": "I released a hotfix (v1.5.6) which addresses this issue.  See the commit here: https://github.com/amazonwebservices/aws-sdk-for-ruby/commit/743a91222593765191a7bd19143c1b4fe10d000e\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/1522870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2517708", "body": "Thanks for the heads up.  I just fixed this in c25952ed50d568172de6eb1756525a35eeb2fa77.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2517708/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2517743", "body": "I cut a new gem release (1.8.1.1) with the updated gem specification.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2517743/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3451330", "body": "@uberllama @webdevotion Lets move the conversation to the linked issue (#273).  I agree it is something that needs to be addressed.  \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3451330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3496272", "body": "@benhamill You are correct.  This should be changed to set a minimum version.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3496272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3499264", "body": "We could eliminate this list entirely with a slightly larger refactor.  These modules have one thing in common that make it necessary to  trigger autoloading for each; each module is defined directly in lib/aws/core.rb and not autoloaded itself.  If we move each of these into their own file (e.g. lib/aws/core/options.rb, lib/aws/core/signature.rb, etc) then these modules would simply be registered as autoloads themselves.  Thoughts?\n\nI don't think selectively autoloading is the correct thing to do, unless the user is choosing the default set.  Otherwise we may not autoload something a user needs and that causes an issue in a concurrent environment (the only reason to autoload).\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3499264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3555270", "body": "I agree that is an awkward (yet still correct) usage of the === operator.  I'll happily change that to `==`.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3555270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/4920939", "body": "I see the issue.  The endpoints.json file is not in the gem spec file.  I'll fix this momentarily. EDIT: Fix live.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/4920939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/5330204", "body": "Documentation updates are found in the followup commit: https://github.com/aws/aws-sdk-ruby/commit/6174ee59f4bedb9b5112bd95a3c0ec76d999f3bb\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/5330204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/6465274", "body": "Not possible.  The later API version is not backwards compatible, and therefore not compatible with AWS::DynamoDB mid-level abstractions.  We are looking to update these in the v2 SDK (https://github.com/aws/aws-sdk-core-ruby).  \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/6465274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/6652903", "body": "Amazon S3 documents many of error codes they use here:\nhttp://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/6652903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/6702848", "body": "Thanks, fixed in in v1.43.3 and this commit: 92ace953fd2810fd218c63d374848dcfd1d455d8\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/6702848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/6966371", "body": "Adding a warning would be a reasonable idea.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/6966371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/9790146", "body": "@YorickPeterse The aws-sdk-resources gem had never made a stable release when this was removed. It was being published with a \".preview\" on the gem version. This required users to opt-into a specific version, ensuring they would not update without changing their dependency.\n\nThe change was added to the release notes, changelog and the upgrading document. Additionally, it was made intentionally to avoid a breaking change in the stable version. The plan is to add this back in the future, based on feedback from the SQS service team and pending. Even then it will return with a different interface. \n\nIt would be possible to vendor the existing model and to force this interface for users wanting to upgrade now without changes.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/9790146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/9803512", "body": "Yes. I'm looking at building a separate SQS polling abstraction, and then exposing that via a poll method. I hope to build the QueuePoller first though.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/9803512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/10228277", "body": "@luccasmaso Sorry, that URL is forward looking. It will be valid once the SDK is tagged and released with this change. If you'd like to preview these docs, you can git clone the repository, bundle install, and then `rake docs`.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/10228277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/10277919", "body": "Feel free to open an issue where we can discuss general retry strategies and issues.  Very quickly, a 400 level error is not retired normally. Only 500 level errors are. AWS considers ~400 errors client errors.  That should explain why you are not seeing retries.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/10277919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/14929892", "body": "The range header is a valid parameter the customer can set in `Aws::S3::Client#get_object`. This should be signed.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/14929892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/16433642", "body": "Minor change, in the rescue, you should return the non-markdown docs. This is functional, and is what we used to do:\n\n``` ruby\nbegin\n  require 'kramdown'\n  Kramdown::Document.new(docs, input: 'html').to_kramdown.strip\nrescue LoadError\n  docs\nend\n\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/16433642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/16433817", "body": "I've yanked 2.2.21.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/16433817/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/44684621", "body": "Be sure to remove the pair of debug statements here.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/44684621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/44684771", "body": "Stylistically, I prefer the method invocation with parenthesis, i.e. `option(:signature_version, 'v4')`\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/44684771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/44684810", "body": "This is a good opportunity to improve this existing error message. Add into the message the valid signature versions.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/44684810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/54757392", "body": "We should reword this documentation to indicate the `:content_length` is only needed when `:multipart_copy` is `true`.  The content_length is used for calculating the number of parts and their size.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/54757392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/54758479", "body": "This could also be expressed as:\n\n``` ruby\noptions[:copy_source_client] ||= source.client if source.respond_to?(:client)\n```\n\nThe `||=` is less important, the `respond_to?` check makes this a little more future proof. Currently we have not added support for `Aws::S3::ObjectVersion`, but this is likely to happen. No need to change this unless you feel inclined. If you don't, we will make the change when adding object version support.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/54758479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/60440783", "body": "Yes, that is only for the documented request syntax examples. Another option would be to do something like `\"true || false\"`. The important part of this is to ensure the example shows that a boolean is provided. It should also be valid Ruby syntax.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/60440783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/60441914", "body": "Completely understood, not sure of a valid alternative. `#create_bucket` and `#list_buckets` are simply not supported. The reason is the s3-accelerate endpoint must have an accelerated bucket as the endpoint prefix. Create is creating a new bucket that does not previously exist and list buckets is outside the context of a single bucket. `#delete_bucket` was added on request from the S3 team. There is no deterministic characteristic of these that makes it possible to not hardcode.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/60441914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/56543275", "body": "The #get_partition method could own the logic of returning 'aws' as the default partion if the region does not match the regex of any known partition. This removes the need for the nil check above.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/56543275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64938244", "body": "The yard comments should be formatted like:\n\n```\n@param [String] key_pair_id Then documentation goes at the end.\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64938244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64939072", "body": "I would suggest:\n\n``` ruby\n# @param [String] url\n# @option options [Time, DateTime, Date, String, Integer<timestamp>] :expires \n# @option options [String<JSON>] :policy A JSON policy document.\ndef signed_url(url, options = {})\n  expires = options[:expires]\n  policy = options[:policy]\nend\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64939072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64939622", "body": "We can probably use `URI.parse(string)` here on the url, instead of parsing it ourselves.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64939622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64939787", "body": "You should add a `private` statement here to keep these methods from being documented as part of the public interface.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64939787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64940024", "body": "In Ruby, only `nil` and `false` evaluate to `false` in a boolean context. You can remove the not nil checks here.\n\n``` ruby\nelsif resource && expires\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64940024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64940645", "body": "Inline your major assertion.\n\n``` ruby\nsigner = UrlSigner.new(key_pair_id, private_key_path)\nexpect(signer).to ...\n```\n\nTry to not hide the main code under test in a let expression.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64940645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64941145", "body": "We should add options here:\n\n``` ruby\n# @param [String] private_key_id\n# @option options [String] :private_key\n# @option options [String] :private_key_path\ndef intilaize(key_pair_id, options = {})\n  private_key = options[:private_key]\n  # if both :private_key and :private_key_path are unset we should raise an argument error\n  private_key ||= File.open(options[:private_key_path], 'rb') { |f| f.read }\nend\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64941145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/65581106", "body": "I would suggest DRY'ing up the code by having a single re-usable string for the got value (class) instead messaging. You can create a const string at the top of the class like:\n\n``` ruby\nGOT_INSTEAD = \"got value %s (class: %s) instead.\"\n```\n\nThen you can simply append the following to each error message\n\n``` ruby\nGOT_INSTEAD % [values.inspect, values.class.name]\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/65581106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/65581211", "body": "Also note, we should use the `#inspect` of the value for each error message instead of the default `#to_s` that results from passing the raw value through string interpolation. This makes for a better error message.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/65581211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/65744368", "body": "I'd like to see if we can improve the implementation to not buffer, seek, truncate and rewind the target IO object. I think this can be improved by making a 2nd GET request to the object with a range header that will retrieve only the trailing authentication tag. This can be used to initialize the cipher that we give to the IO decrypter which should eliminate the need for the extra reads.\n\nI've pulled this down locally, and I'm going to try this out.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/65744368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/66342974", "body": "I'm not worried about the interface change here. It has never been documented, and poses no general purpose utility. That said, I'm happy to simply revert this part of the change.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/66342974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/66343054", "body": "Yup. I wrote the code original in the one file for convience and failed to remove it when I added it to its own file. I'll clean that up.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/66343054/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64637138", "body": "You will want to remove byebug from the Gemfile and gitignore.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64637138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64637599", "body": "I would suggest replacing the constant with a method that memoizes. We had to make a similar change because of how autoload works. It is possible for a second threat to get a no such constant error under concurrency. The code below mitigates this. It is possible that multiple threads hit the method, but a single object will be memoized for later use.\n\n``` ruby\ndef shared_config\n  @shared_config ||= SharedConfig.new\nend\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64637599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64637790", "body": "Given there are three class level methods, I would move them inside the eigenclass:\n\n``` ruby\nclass << self\n  def ini_parse(raw)\n  end\n  # ...\nend\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64637790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64638213", "body": "Good catch on the empty ENV region string. I don't believe we check for this previously.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64638213/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 1, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64639065", "body": "I would suggest moving the `ENV['AWS_SDK_LOAD_CONFIG']` completely outside the shared config class. Loading from the shared config should be the default behavior of this class. It could instead accept a boolean at construction time to disable this feature. The code above that constructs the default shared config object could do the environment check. This ensures defaults are preserved and eliminates the need for a process wide environment variable in applications that construct this directly.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64639065/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64644439", "body": "Rather than using assignments in the conditionals, I would suggest:\n\n``` ruby\ncredentials = credentials_from_shared(p, opts)\ncredentials ||= credentials_from_config(p, opts)\ncredentials\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64644439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64645062", "body": "Also, I haven't tested this, but I suspect this will be problematic if the credential keys exist in the document, but they have no values. The `credentials` object will exist, but it will be empty, and we should continue to the next check.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64645062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64645323", "body": "I understand this may still be in flux, but it does not appear that this is hooked up anywhere. It should probably return an instance of `AssumeRoleCredentials` automatically when the assume role profile is set.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/64645323/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/70130520", "body": "Minor nitpick. I try to limit the top-level utility functions. A simple change would be to keep this function inside the `Aws::SharedConfig` module. You could name the method something like `.default_config`, e.g `Aws::SharedConfig.default_config`.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/70130520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/70130841", "body": "This method call will fail with an incorrect number of arguments error.  I would suggest something like:\n\n``` ruby\ndef assume_role_credentials(options)\n  if Aws.shared_config.config_enabled?\n    profile = nil\n    region = nil\n    if options[:config]\n      profile = options[:config].profile\n      region = options[:config].region\n    end\n    assume_role_with_profile(profile, region)\n  else\n    nil\n  end\nend\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/70130841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/110497550", "body": "We do this in multiple places, so this pattern is not new (inject or construct a client), but we do not actually require a client. We actually need a region, and a set of credentials. The client object in inconsequential. It seems like a better solution would be to have a public interface for getting the default region, and a public interface for getting default credentials. \r\n\r\nThe client configuration can be updated to use these interfaces, so the behavior remains consistent, and then the code can be reduced down to injecting an optional region and or credentials.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/110497550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/110497723", "body": "We can determine this correctly for every API operation by simply using the API object.\r\n\r\n```ruby\r\nAws::S3::Client.api.operation(method).http_method\r\n```\r\n\r\nThis has the benefit of it will work for more than object operations.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/110497723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/110498060", "body": "This implementation of `build_headers` is limited to only support those params that have x-amz-* prefixes. As such you will run into issues with things like x-amz-metadata-* headers that are given as hashes normally, but this method will require them to be given as strings with metadata-{key} prefixes. \r\n\r\nIt would be ideal to preserve the same interface we use when making client calls.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/110498060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "trobrock": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3623310", "body": "Just added a rake task for generating a gemspec for this project also so I can use the gem on my fork until this gets into the official version\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3623310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3624687", "body": "I couldn't find a place in the tests that really tests any of these config points, am I missing something?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3624687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3626674", "body": "Those should be addressed here ecdea0040a1e997057f54e36c34167d33110f690 and 301a811a8bb656241703b55e7cc1679a923ec957\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3626674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "professor": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3641367", "body": "Trevor,\n\nI'm glad to see that S3 does versioning, it's still not clear to me how to retrieve old versions and get them onto my filesystem. I'm probably missing something really obvious. I can get the ruby Object Version that I want, but then I need to .....?  I posted this question here: https://forums.aws.amazon.com/thread.jspa?threadID=85452&tstart=0 \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3641367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "ghost": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3895550", "body": "Great, thanks! I'll have a go of it.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3895550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jtarchie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/4059286", "body": "Any word on the support for this? It would be great to have this HTTP handler instead of using the TCPSocket EM replacement.\n\nOtherwise, can we pull this out into its own gem?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/4059286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "JoshMcKin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/4060216", "body": "https://github.com/JoshMcKin/em_aws\n\nNeeds some clean up but using it in prod for a while now\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/4060216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6374658", "body": "Use https://github.com/JoshMcKin/em_aws if want this feature.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6374658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11206889", "body": "Opened a discussion on AWS to see it some else was suffering the same outages. It may be that SQS is sending an unexpected response.\n\nhttps://forums.aws.amazon.com/thread.jspa?threadID=111726&tstart=0\n\nOpened an issue with AWS and will update if anything pertinent is found.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11206889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11212032", "body": "Been running a script  with :log_formatter => AWS::Core::LogFormatter.debug but have yet to catch one. We've been doing some pondering and the C# guys are getting bad URI exceptions from their SDK. We believe that the initial queue url lookup might be return a nil or blank value for the queue's url or even a blank response entirely.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11212032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11215281", "body": "Below is a response we received from AWS when attempting to retrieve queue information using the SDK\n\n```\n <?xml version=\"1.0\" encoding=\"utf-16\"?><ResponseMetadata xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns=\"http://queue.amazonaws.com/doc/2009-02-01/\"><RequestId>edbece41-b384-5596-9d21-8701f347edc0</RequestId></ResponseMetadata>\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11215281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11218035", "body": "Was finally able to catch one with the ruby logger. Looks like they're giving back some different XML when getting queue urls, usings a strange tag 'queueUrls' which should be 'ListQueuesResult'\n\n# GOOD:\n\n```\n | AWS us-east-1 SQS list_queues 0.222552 0 retries\n +-------------------------------------------------------------------------------\n |   REQUEST\n +-------------------------------------------------------------------------------\n |    METHOD: POST\n |       URL: https://sqs.us-east-1.amazonaws.com::443:/\n |   HEADERS: {\"content-type\"=>\"application/x-www-form-urlencoded; charset=utf-8\", \"content-length\"=>239, \"user-agent\"=>\"aws-sdk-ruby/1.7.1 ruby/1.9.3 x86_64-darwin12.0.0\"}\n |      BODY: AWSAccessKeyId=HIDDEN&Action=ListQueues&QueueNamePrefix=EMailQueue&Signature=HIDDEN&SignatureMethod=HmacSHA256&SignatureVersion=2&Timestamp=2012-12-10T20%3A34%3A46Z&Version=2011-10-01\n +-------------------------------------------------------------------------------\n |  RESPONSE\n +-------------------------------------------------------------------------------\n |    STATUS: 200\n |   HEADERS: {\"X_AMZN_REQUESTID\"=>\"d8777c33-558f-599c-822d-35731c28586d\",      \"CONTENT_TYPE\"=>\"text/xml\", \"CONTENT_LENGTH\"=>\"326\"}\n |      BODY: <?xml version=\"1.0\"?><ListQueuesResponse xmlns=\"http://queue.amazonaws.com/doc/2011-10-01/\"><ListQueuesResult><QueueUrl>https://sqs.us-east-1.amazonaws.com/CHANGED_JUST_INCASE</QueueUrl></ListQueuesResult><ResponseMetadata><RequestId>d8777c33-558f-599c-822d-35731c28586d</RequestId></ResponseMetadata></ListQueuesResponse>\n +-------------------------------------------------------------------------------\n```\n\n# BAD:\n\n```\n +-------------------------------------------------------------------------------\n |   REQUEST\n +-------------------------------------------------------------------------------\n |    METHOD: POST\n |       URL: https://sqs.us-east-1.amazonaws.com::443:/\n |   HEADERS: {\"content-type\"=>\"application/x-www-form-urlencoded; charset=utf-8\", \"content-length\"=>243, \"user-agent\"=>\"aws-sdk-ruby/1.7.1 ruby/1.9.3 x86_64-darwin12.0.0\"}\n |      BODY: AWSAccessKeyId=HIDDEN&Action=ListQueues&QueueNamePrefix=EMailQueue&Signature=HIDDEN&SignatureMethod=HmacSHA256&SignatureVersion=2&Timestamp=2012-12-10T20%3A35%3A02Z&Version=2011-10-01\n +-------------------------------------------------------------------------------\n |  RESPONSE\n +-------------------------------------------------------------------------------\n |    STATUS: 200\n |   HEADERS: {\"X_AMZN_REQUESTID\"=>\"eaa8c1e2-ed52-52f2-9228-88a2a4e435bf\", \"CONTENT_TYPE\"=>\"text/xml\", \"CONTENT_LENGTH\"=>\"312\"}\n |      BODY: <?xml version=\"1.0\"?><ListQueuesResponse xmlns=\"http://queue.amazonaws.com/doc/2011-10-01/\"><queueUrls><QueueUrl>https://sqs.us-east-1.amazonaws.com/CHANGED_JUST_INCASE</QueueUrl></queueUrls><ResponseMetadata><RequestId>eaa8c1e2-ed52-52f2-9228-88a2a4e435bf</RequestId></ResponseMetadata></ListQueuesResponse>\n```\n\nEDIT: added requests\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11218035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11224716", "body": "Ill run the following script inside the Rails.console for a couple hours and if doesn't fail we should be good, if it does fail it will throw the exception and kill the loop and I'll get the log\n\n```\n while true\n   puts AWS::SQS.new(:log_formatter => AWS::Core::LogFormatter.debug).queues.with_prefix(domain).first.approximate_number_of_messages\n   sleep 15\n end\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11224716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11227416", "body": "Almost got the bad after running the test script for a couple an hour or so, no response at all.\n\n```\n +-------------------------------------------------------------------------------\n |   REQUEST\n +-------------------------------------------------------------------------------\n |    METHOD: POST\n |       URL: https://sqs.us-east-1.amazonaws.com::443:/\n |   HEADERS: {\"content-type\"=>\"application/x-www-form-urlencoded; charset=utf-8\", \"content-length\"=>239, \"user-     agent\"=>\"aws-sdk-ruby/1.7.1 ruby/1.9.3 x86_64-darwin12.0.0\"}\n |      BODY: AWSAccessKeyId=HIDDEN&Action=ListQueues&QueueNamePrefix=HIDDEN&Signature=HIDDEN&SignatureMethod=HmacSHA256&SignatureVersion=2&Timestamp=2012-12-11T01%3A15%3A52Z&Version=2011-10-01\n +-------------------------------------------------------------------------------\n |  RESPONSE\n +-------------------------------------------------------------------------------\n |    STATUS: 0\n |   HEADERS: {}\n |      BODY:\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11227416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11227517", "body": "I'm continuing to work the issue with AWS but we can be sure this not an SDK issue. I can post any more finds as AWS support continues working the ticket here if you like, but for now I will close the issue.\n\nThanks for you help.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11227517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11244644", "body": "Sorry to reopen this one, @trevorrowe, but is there any reason the SDK would print a status 0 with no body or headers?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11244644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11257904", "body": "Ok, running with :http_wire_trace => true\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11257904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11258720", "body": "Forgot to answer the rest. As of right now, I have not gotten an error in the application that relates to the empty response, due in large part to the fact most of with work does on in a delayed job and the job just retries if an exception is thrown. Was looking for a bit of advise as to the best approach in narrowing the search for the cause of the empty response and http_wire_trace sounds like the best place to start.\n\nThanks again.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11258720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11297618", "body": "Ran the test again for 4 hours at 15 second increments and no errors. I think we can safely call this a non-issue ;)\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11297618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11809514", "body": "Get the same error when attempting to get content_type\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11809514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11813103", "body": "bucket and dir are strings and I am able to retrieve the object, because prior to attempting to get the expiration_date I get a temporary url. Below is a better example of the code:\n\n```\ns3 = AWS::S3.new \no = s3.buckets[bucket].objects.with_prefix(dir)\no.each do |f|\n  puts f.url_for(:read, :expires => 10*60, :secure => true) # => returns url as expected\n  puts f.expiration_date # => raises exception 'can't convert nil into String'\n  puts f.content_type # => raises exception 'can't convert nil into String'\nend\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11813103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11813232", "body": "I should also state the all objects in dir use server side encryption, although it probably does not matter.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11813232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11814299", "body": "These are csv files and I'm setting the content_type. I'll create a test script that should reproduce the error, which I should have done in the first place ;-)\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11814299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11818289", "body": "I understand completely. Expire date is set a bucket to expire all objects after 1 day, the expire for the url is just the expiration for that particular url. In the midst of some refactoring, should be done in an hour or so then i can create a test script. Thanks for your continued help.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11818289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11819374", "body": "This reproduces the error.\n\n```\nbucket_name = 'my-test-bucket-123321123'\ndir = 'temp/'\nfile_name = 'test.csv'\ncsv = \"1,2,3\\t\\n4,5,6\"\ns3 = AWS::S3.new\n\nbucket = s3.buckets.create(bucket_name)\nbucket.lifecycle_configuration.update do\n  add_rule dir, 1\nend\n\n\nbucket.objects.create(\"#{dir}#{file_name}\", StringIO.new(csv),:content_type => 'text/csv')\n\no = s3.buckets[bucket_name].objects.with_prefix(dir)\no.each do |f|\n  puts f.url_for(:read, :expires => 10*60, :secure => true) # => returns url as expected\n  puts f.expiration_date # => raises exception 'can't convert nil into String'\n  puts f.content_type # => raises exception 'can't convert nil into String'\nend\n\nbucket.delete!\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11819374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11821399", "body": "Well...looks like your suggestion to pull out some gems was the right one. We're using the em-aws driver which adds support for EM-Synchrony for making asynchronous requests and it looks like its not pulling everything out of the header or something.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11821399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jjb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/4576931", "body": "ahh i see.\n\nsorry, i should have searched old tickets first.\n\nOn Mon, Mar 19, 2012 at 12:09 PM, Trevor Rowe <\nreply@reply.github.com\n\n> wrote:\n> \n> The nokogiri gem dependency was previously expressed as '>= 1.4.4', but\n> this became an issue when 1.5.1 was released.  Version 1.5.1 was not\n> compatible with Ruby 1.8:\n> \n> https://github.com/tenderlove/nokogiri/issues/632\n> https://github.com/tenderlove/nokogiri/issues/631\n> \n> Both of these issues have been resolved in 1.5.2; I will revisit this with\n> the next release.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> \n> https://github.com/amazonwebservices/aws-sdk-for-ruby/pull/33#issuecomment-4576622\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/4576931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sikachu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/4848466", "body": "@trevorrowe 1.3.8 was released without the change in the gemspec. I saw it was released on March 16th while [Nokogiri](http://rubygems.org/gems/nokogiri/versions) was updated on March 9th. (1 day after you release 1.3.7, dang!)\n\nAre you going to do another release soon? I think having something like `~> 1.5.1` would be better, though.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/4848466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/1124195", "body": "Can I have some rationale behind this? What is breaking on the latest Nokogiri?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/1124195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "mattmoskwa": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/4960869", "body": "Thanks for this. I was about to open my own pull request :)\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/4960869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "petemounce": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5353012", "body": "Cool.  I had a thought just now that given that this has no dependencies on the SNS class, perhaps I should instead wrap this up into a new class `AWS::SNS::Message`, which can then have `AWS::SNS::Message#authentic?` as well as maybe some future customisations for wrapping the different types of AWS-emitted SNS' like AutoScaling notifications (where the `Message` field of the SNS is itself nested JSON, so that could get parsed out the box and dumped into an `OpenStruct` or something).\n\nre: testing - I don't understand why we'd need an SQS queue...?  Is it because that's the most convenient end-point to set up within the test context...?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5353012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5354250", "body": "Yeah, the more I think about it as I write my SnsListener, the more I'd like to have a rich model for an AutoScalingSnsMessage with methods like `#event` (to return `:ec2_instance_launch`, `:ec2_instance_terminate` etc), `#instance_id`, etc.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5354250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5440077", "body": "I've made a bit of progress on the `AWS::SNS::Message` class that I need for my SnsListener; I'll push it in a while.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5440077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5844905", "body": "It's ready in and in production for us, but I need some permission before contributing it back.  Working on that.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5844905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5871685", "body": "I don't know why this pull-request got merged - I didn't think I had permission to do that, and I didn't mean for that to happen at all since 46 supercedes this one.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5871685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5871719", "body": "When I run `bundle exec rake spec` it bombs out with \"command line too long\".\n\nWhen I run `rspec spec` I get an error relating to the spec files not knowing about `AWS::SNS::Message` constant - I assume I've messed up somewhere along the line with includes.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5871719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6056552", "body": "Ping @trevorrowe can you please help me get my tests green, so I can try to go further and write some integration tests?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6056552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/7248165", "body": "@trevorrowe Oh, damn, I've pulled in way more commits than I actually wanted to there.  I think I rebase'd when I should have merged, or something like that.  Would you like me to try again in a fresh pull-request?\n\nI fixed the failing specs that I had; see b6768ee and 18a5765.\n\nStill to-do:\n- integration tests as mentioned earlier\n- fuller coverage for the `FromAutoScaling` originator mixin\n\nComments welcome!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/7248165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/7248398", "body": "@trevorrowe if I re-create the pull-request, will I need to submit another contributor agreement?  Or, shall I just reference the new pull-request from this one and indicate that the new one supercedes this one?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/7248398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/7281476", "body": "This replaces pull-request #46.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/7281476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/7281495", "body": "@trevorrowe done.  Apologies for the mess :(\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/7281495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/10225203", "body": "@trevorrowe ping?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/10225203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/10845537", "body": "@trevorrowe travis-CI wiring is _awesome_.  I've fixed a couple of failures; hadn't appreciated that the gem is backwards compatible (duh).\n\nAfter that, though, I now don't understand why [this build](https://travis-ci.org/aws/aws-sdk-ruby/builds/3416300) is red:\n- I'm guessing it's the pending test - but this is pending in each of 8.1 through 8.4\n- I lack a linux box (at the moment; this is a great excuse to build a VM) to repro on - is it possible to download maybe a Vagrantfile to reproduce one of the travis-CI build-runner machines onto, locally, so I can repro using that...?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/10845537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12931433", "body": "@pas256 I need a bit of help making the [Travis CI](https://travis-ci.org/aws/aws-sdk-ruby/builds/3416300) build pass, and after that, figure out what to do about supplying credentials to some end-to-end integration tests without putting them into source control.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12931433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12931794", "body": "@lsegal I don't understand why 3 of the 4 jobs didn't care about the pending test, though, so I assumed it wasn't that.\n\nre: env - `AWS_ACCESS_KEY_ID` and `AWS_SECRET_KEY`, right...?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12931794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12931862", "body": "Speaking of which, the pending test is pending for want of not rolling my own version of `retryable`.  At justeat, I did robertsosinski/retryable#4; does that look like an acceptable thing to introduce, or is there already a similar implementation internal to aws-sdk?\n\nre: env - thanks, saw that, couldn't remember for sure the variable names without checking.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12931862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kml": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5359885", "body": "I have problem with missing s3_client and I thought that using this method could help.\nI'm processing messages from queue. For each message a Job object is created and perform is invoked.\nSometimes I'm getting errors because there is no client. I think that this code can ilustrate my problem:\n\n```\nrequire 'retryable'\nclass Job\n  class MissingS3Client < StandardError; end\n  def initialize(..., options)\n    #...\n    retryable(tries: 3, sleep: 3, on: MissingS3Client) do\n      set_bucket(options[:bucket])\n    end\n  end\n  #...\n  def perform\n    # @bucket...\n  end\n\n  private\n\n  def set_bucket(bucket_name)\n    # get an instance of the S3 interface using the default configuration\n    service = AWS::S3.new\n    raise MissingS3Client, \"There is no S3 client\" unless service.client\n    @bucket = service.buckets[bucket_name]\n  rescue\n     AWS.add_service('S3', 's3', 's3.amazonaws.com')\n     raise\n  end\n end\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5359885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5380867", "body": "@trevorrowe I'm using JRuby with TorqueBox, so maybe that's some thread-safety problem (one shared client - many threads).\nSimplified version of my code is here: https://gist.github.com/2508894\n\nI'm uploading ~1kk small images daily (thumbs).  During last 4 hours I've got 1 occurence of MissingS3Client exception (logged after set_bucket's rescue), but sometimes I've got thousands of them. AWS.add_service('S3', 's3', 's3.amazonaws.com') seems to help.\n\nCan I help somehow? I can log something after rescue, but I don't know what would be usefull.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5380867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "JasonLunn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5497970", "body": "Looking forward to having this facility working for subscription and notification messages.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5497970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "bhuga": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5746392", "body": "Is this the right place to post pull requests, or are submissions preferred via another route?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5746392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "davetchen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5804287", "body": "Hi jfieber, I've been working on a Rails 3.2/ruby-1.9.3 app using appoxy/aws to manage EC2 instances Now I need to integrate paperclip with S3, which is looking for the aws-sdk gem. In my Gemfile I have:\n\ngem 'aws'\ngem 'aws-sdk', :git => 'git://github.com/jfieber/aws-sdk-for-ruby.git', :branch => 'appoxy-conflict'\ngem \"paperclip\", \"~> 3.0\"\n\nBut I get the following 'bundle' error.\n\n$ bundle\nUpdating git://github.com/jfieber/aws-sdk-for-ruby.git\nFetching source index for https://rubygems.org/\nCould not find gem 'aws-sdk (>= 0) ruby' in git://github.com/jfieber/aws-sdk-for-ruby.git (at appoxy-conflict).\nSource does not contain any versions of 'aws-sdk (>= 0) ruby'\n\nAny ideas? Thanks!\n-dave\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/5804287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "pmarreck": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6136799", "body": "(I work with alussos)\n\nI also wonder why there's no begin/rescue/end code in the event the put/write fails for some reason, or any check of the response to see what it actually is... It is nice to assume that S3 never goes down or errors on writes/puts, but we all know this is not the case :)\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6136799/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6136901", "body": "FYI this happens in conjunction with the Paperclip gem, version 3.0.2, in its \"flush_writes\" method.\n\nHere is a fuller stack trace:\n\n/our_web_app_path/shared/bundle/ruby/1.9.1/gems/aws-sdk-1.5.1/lib/aws/core/response.rb:175:in `method_missing'\n/our_web_app_path/shared/bundle/ruby/1.9.1/gems/aws-sdk-1.5.1/lib/aws/s3/s3_object.rb:313:in`write'\n/our_web_app_path/shared/bundle/ruby/1.9.1/gems/paperclip-3.0.2/lib/paperclip/storage/s3.rb:286:in `block in flush_writes'\n/our_web_app_path/shared/bundle/ruby/1.9.1/gems/paperclip-3.0.2/lib/paperclip/storage/s3.rb:272:in`each'\n/our_web_app_path/shared/bundle/ruby/1.9.1/gems/paperclip-3.0.2/lib/paperclip/storage/s3.rb:272:in `flush_writes'\n/our_web_app_path/shared/bundle/ruby/1.9.1/gems/paperclip-3.0.2/lib/paperclip/attachment.rb:197:in`save'\n/our_web_app_path/shared/bundle/ruby/1.9.1/gems/paperclip-3.0.2/lib/paperclip/instance_methods.rb:17:in `block in save_attached_files'\n/our_web_app_path/shared/bundle/ruby/1.9.1/gems/paperclip-3.0.2/lib/paperclip/instance_methods.rb:10:in`block in each_attachment'\n/our_web_app_path/shared/bundle/ruby/1.9.1/gems/paperclip-3.0.2/lib/paperclip/instance_methods.rb:9:in `each'\n/our_web_app_path/shared/bundle/ruby/1.9.1/gems/paperclip-3.0.2/lib/paperclip/instance_methods.rb:9:in`each_attachment'\n/our_web_app_path/shared/bundle/ruby/1.9.1/gems/paperclip-3.0.2/lib/paperclip/instance_methods.rb:16:in `save_attached_files'\n/our_web_app_path/shared/bundle/ruby/1.9.1/gems/activesupport-3.0.13/lib/active_support/callbacks.rb:436:in`_run_save_callbacks'\n/our_web_app_path/shared/bundle/ruby/1.9.1/gems/activerecord-3.0.13/lib/active_record/callbacks.rb:273:in `create_or_update'\n/our_web_app_path/shared/bundle/ruby/1.9.1/gems/activerecord-3.0.13/lib/active_record/persistence.rb:60:in`save!'\n/our_web_app_path/shared/bundle/ruby/1.9.1/gems/activerecord-3.0.13/lib/active_record/validations.rb:49:in `save!'\n/our_web_app_path/shared/bundle/ruby/1.9.1/gems/activerecord-3.0.13/lib/active_record/attribute_methods/dirty.rb:30:in`save!'\n/our_web_app_path/shared/bundle/ruby/1.9.1/gems/activerecord-3.0.13/lib/active_record/transactions.rb:245:in `block in save!'\n/our_web_app_path/shared/bundle/ruby/1.9.1/gems/activerecord-3.0.13/lib/active_record/transactions.rb:292:in`block in with_transaction_returning_status'\n/our_web_app_path/shared/bundle/ruby/1.9.1/gems/activerecord-3.0.13/lib/active_record/connection_adapters/abstract/database_statements.rb:139:in `transaction'\n/our_web_app_path/shared/bundle/ruby/1.9.1/gems/activerecord-3.0.13/lib/active_record/transactions.rb:207:in`transaction'\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6136901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "copernicus": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6208387", "body": "This is really cool. +1 for EMR support in the sdk.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6208387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6298164", "body": "Wow. +1 for this too. Please add CW support to the SDK. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6298164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6459235", "body": "Any chance this will get merged?\n\nthanks!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6459235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/9825687", "body": "+1 for a release with the RDS support. Thx!!!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/9825687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11486488", "body": "Trying to add this myself to my local copy of the SDK. I changed the ec2/client.rb to new API version, and added the CopySnapshot operation to a new EC2-2012-12-01.yml. When I try to use the EC2.client.copy_snapshot, I am getting back an error like this:\n\ncan't convert Symbol into String - (TypeError)\n/Library/Ruby/Gems/1.8/gems/aws-sdk-1.7.1/lib/aws/core/client.rb:479:in `delete'\n/Library/Ruby/Gems/1.8/gems/aws-sdk-1.7.1/lib/aws/core/client.rb:479:in`build_request'\n/Library/Ruby/Gems/1.8/gems/aws-sdk-1.7.1/lib/aws/core/client.rb:434:in `send'\n/Library/Ruby/Gems/1.8/gems/aws-sdk-1.7.1/lib/aws/core/client.rb:434:in`client_request'\n/Library/Ruby/Gems/1.8/gems/aws-sdk-1.7.1/lib/aws/core/response.rb:180:in `call'\n/Library/Ruby/Gems/1.8/gems/aws-sdk-1.7.1/lib/aws/core/response.rb:180:in`build_request'\n/Library/Ruby/Gems/1.8/gems/aws-sdk-1.7.1/lib/aws/core/response.rb:108:in `initialize'\n/Library/Ruby/Gems/1.8/gems/aws-sdk-1.7.1/lib/aws/core/client.rb:183:in`new'\n/Library/Ruby/Gems/1.8/gems/aws-sdk-1.7.1/lib/aws/core/client.rb:183:in `new_response'\n/Library/Ruby/Gems/1.8/gems/aws-sdk-1.7.1/lib/aws/core/client.rb:433:in`client_request'\n/Library/Ruby/Gems/1.8/gems/aws-sdk-1.7.1/lib/aws/core/client.rb:334:in `log_client_request'\n/Library/Ruby/Gems/1.8/gems/aws-sdk-1.7.1/lib/aws/core/client.rb:420:in`client_request'\n/Library/Ruby/Gems/1.8/gems/aws-sdk-1.7.1/lib/aws/core/client.rb:316:in `return_or_raise'\n/Library/Ruby/Gems/1.8/gems/aws-sdk-1.7.1/lib/aws/core/client.rb:419:in`client_request'\n\nWhat am I doing wrong?\n\nthanks for your help\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11486488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11486976", "body": "Found the issue. It was an error with how I was passing the options.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11486976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kadwanev": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6208989", "body": "Client usage roughly described: http://stackoverflow.com/questions/10942410/can-you-programmatically-control-elastic-mapreduce-jobs-easily\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6208989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/7307306", "body": "Love it! Thank you very much.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/7307306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/9783136", "body": "When can we hope for a cut release including RDS?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/9783136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "rcrogers": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6682827", "body": "Thanks for these fixes.  I monkeypatched them into AWS in my app, because it doesn't look like they'll get included in the gem anytime soon.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6682827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11463343", "body": "My bad.  I'm using Ruby 1.9.3 p286.  Gem version is 1.7.1.  The backtrace is unfortunately useless:\n\n```\nSystemStackError: stack level too deep\nfrom /usr/local/rvm/rubies/ruby-1.9.3-p286/lib/ruby/1.9.1/irb/workspace.rb:80\n```\n\nHere's a gigantic trace generated by set_trace_func: https://gist.github.com/4322620\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11463343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11464149", "body": "Upgrading to p327 solves this (wish I knew why!).  Thanks for testing it out and pointing me in the right direction.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11464149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "daniel-nelson": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6686315", "body": "Glad the patch is useful to you! We've been running it all this time, and it is working well for us.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/6686315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "moorecp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/7696423", "body": "The gemspec wasn't supposed to be included in the pull request. I did that later just to make bundler happy when used in another project and forgot github would include the change in the pull request. I have removed that commit from the pull request.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/7696423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ab": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/8028650", "body": "@trevorrowe I see that this is listed as resolved in the 1.6.4 release notes, but unless I'm missing something it doesn't look a fix was actually included. Thanks!\n\nhttp://aws.amazon.com/releasenotes/Ruby/0311621489672106\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/8028650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "m-badov": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/9010747", "body": "I'm having the exact same issue with Ruby 1.9. When uploading from multiple threads, client is sometimes nil. If it helps, it seems that the issue occurs precisely when a worker thread is used for a second time. Additionally, this problem does not happen with Ruby 1.8, which uses 'green threads'.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/9010747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Flameeyes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/9057509", "body": "Hrm, you're right, sorry.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/9057509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/9057576", "body": "Hrm, something went wrong, but at least the commits now seem correct.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/9057576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "lsegal": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/10023249", "body": "Thank you for helping to improve the AWS SDK, @ohookins!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/10023249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/10023270", "body": "Thanks for the quick patch @natemueller!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/10023270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/10032527", "body": "Yes :)\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/10032527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/10419042", "body": "Thanks for pointing this out!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/10419042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/10422645", "body": "Oops! Thanks again, @tedsparc!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/10422645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11322127", "body": "To clarify: it seems like the underlying issue here is that calling `#dup` on `Data::List` will not perform a deep copy-- that and the fact that our docs are misleading in reporting an \"Array\" return rather than the proper `Data::List` class that is returned (which actually wraps the Array). I think we can fix both of those things, so that a) the docs don't refer to the returned instance data as a plain array, and, b) we can better handle dup to perform a deep copy so they work better when a user wants to mutate the original object.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11322127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11584628", "body": "Thanks for the fix!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11584628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11586525", "body": "Closing this since it seems to be a Ruby issue. Thanks for reporting-- let us know if this happens on a later version than p286!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11586525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11588589", "body": "The biggest change in this PR is something we cannot accept without breaking a lot of existing users with a backward incompatible change to the SDK, so, unfortunately, we cannot merge this in.\n\nI do like the fixes to our documentation and tests so that users know to require the SDK by the correct library name, but these changes are superficial at best without actually removing the 'aws.rb' file, which, again, would break existing users.\n\nThis is something we will certainly make sure happens if we do a major version bump in the SDK, but this change will require a major version bump. Until then, we can update the README to point to the right gem name.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11588589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11595474", "body": "That's not exactly what is happening. Our gem actually uses the `AWS` namespace, which is compatible with the 'aws' gem's `Aws` namespace, since Ruby constants are case sensitive. The real issue happens when you require 'aws-sdk' before 'aws', RubyGems will throw the path to the gem in the load path, and any subsequent require for 'aws' will hit the load path before it does a full gem lookup. Bundler makes this a little more complicated, since it does loading in a different way.\n\nUnfortunately there's no way of fixing the issue inside the aws-sdk library until the next major revision (when we can make backward incompatible changes), but we're working on some potential workarounds that you can apply to your project.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11595474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11598411", "body": "The above commit should allow users to pass `-raws` to ruby commands in order to make the aws gem work with the aws-sdk gem. In the context of rails, this might mean running `ruby -raws -S rails` or exporting the `RUBYOPT='-raws'` environment variable.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11598411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12693081", "body": "Can you provide a backtrace for the above exception?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12693081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12931626", "body": "@petemounce the build didn't fail, it simply had a pending test. I don't know of any pending tests in our current codebase-- have you tried running tests recently? As for integration tests, you should make use of your credentials provided through your environment variables, and never commit them into source control.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12931626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12931848", "body": "`AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`, see @trevorrowe's recent series on credential management: http://ruby.awsblog.com/post/Tx15SMGKHNB9N28/Credential-Management-Part-1\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12931848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13863972", "body": "@styliii first, thanks for the pull request! I believe encouraging users to use the latest JSON gem is a great idea. However I don't believe we should be enforcing this from a library perspective, as this should be an application level decision, and there are better ways to manage this kind of a thing (a Gemfile.lock, for one).\n\nFrom a technical perspective, this patch addresses the Gemfile for local development but does not modify the gemspec, which is what we use to generate the gem, so we would still not be enforcing 1.7.7+ for users doing a `gem install aws-sdk`. I've just made a change in 080badd83387f8e9c70bf657f82fc46827e8acd2 to grab dependencies in our Gemfile from the gemspec so this duplication of dependencies is no longer a source of confusion.\n\nAs much as we want people to upgrade to 1.7.7+, I don't think the aws-sdk should force users onto these versions for the simple reason that certain applications might be locked down to a very specific version of the JSON gem prior to 1.7.x which would cause odd failures during bundle installs. Note that our dependency list is meant to mark the versions  that we are _compatible_ with, so I think it's correct to keep it the way it is. I think that educating developers as to why they should upgrade their JSON gem is a more productive step than silently upgrading it for them in a `gem install`-- the latter hides the fact that there was a behavioural change in their application. I hope that makes sense.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13863972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2105075", "body": "@JoshuaOSHickman can you provide a backtrace for this?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2105075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2113161", "body": "@JoshuaOSHickman FYI if you want to disable CRC checking for the time being you can do it with:\n\n``` ruby\nAWS.config(:dynamo_db_crc32 => false)\n```\n\nOr:\n\n``` ruby\nAWS::DynamoDB.new(:dynamo_db_crc32 => false)\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2113161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2377290", "body": "The bug is at http://bugs.ruby-lang.org/issues/7629 \n\nUnfortunately Ruby 1.9.3p362 is completely broken, so the results from Travis are of no value until the version is downgraded or another Ruby release is made. \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2377290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3413952", "body": "I still think adding \".rb\" as a binary name suffix will save us from painting us into a messy corner we can't get out of (a boto repl? Node.js?). I know it's not common to add a suffix, but it makes sense to me in this context. Or at least \"-rb\"?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3413952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3413959", "body": "This was already required up top.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3413959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3413963", "body": "Nitpick: \"amend\"\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3413963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3496440", "body": "There's a maintenance burden here to make sure that this list is kept up to date as we add more core modules. Given that it's buried in the file (L692), how are we going to make sure that we keep it up to date? How will contributors (and maintainers) know they need to modify this when adding certain core modules. I foresee this as a point of future regressions. Is there any way we can get a less error-prone way of defining these? Perhaps putting it at the top of the file would be a step-- or maybe we should just be eager loading some of these core modules anyway?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3496440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3496486", "body": "We're calling `Array(modules)` twice here. I get why we have separate instances, but it might be more efficient to take our existing `autoloaded` and just do a shallow `autoloaded.dup` instead of re-building the Array() out of the input. Haven't really benchmarked this though, so I don't know which is more efficient, but educated guess says dup would be. It's certainly more DRY.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3496486/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3553979", "body": "\"===\"?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3553979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3597070", "body": "What do the docs look like when linking to `{new}`? Should we not link to `#initialize` and consolidate the \"new\" docs into the constructor?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3597070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3597314", "body": "Would it make sense to .join these execution lines _before_ running them so they are evaluated in the same context? That would allow any local variables to be shared between switches. Might be a rare case, but it would allow for:\n\n``` bash\n$ aws-rb -e 'bucket = s3.buckets.first' -e 'bucket.objects[\"foo\"].write(\"hello\")'\n```\n\nMakes for easier code too:\n\n``` ruby\neval options[:execute].join(\"\\n\")\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3597314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/6608822", "body": "@monde a lot of this is very old code that is not necessarily still used. If you want to comment on the current state of the SDK, I would recommend commenting on code from the tip of the master branch. That said, using `const_missing` can be useful in moderation. We still use it to generate error classes, which is necessary for idiomatic exception handling in Ruby. There is no security hole, as we never arbitrarily execute remote code.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/6608822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "natemueller": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/10023504", "body": "No problem.  Are you guys planning to cut a release soon?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/10023504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "ariejan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/10181326", "body": "Nice, but I don't see this getting pulled in to the (low level) aws-sdk gem. It would be a great candidate for a wrapper gem, though. \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/10181326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/10326868", "body": "@trevorrowe In that case, this gets a :+1: from me :-)\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/10326868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "tedsparc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/10422443", "body": "Hi lsegal,\n\nThanks so much for the fast response here.  I thought I'd mention that I think the line after your change in README.rdoc needs to be also be modified slightly:\n\n```\n   $ git clone git://github.com/aws/aws-sdk-ruby\n-  $ cd aws-sdk-for-ruby/samples/\n+  $ cd aws-sdk-ruby/samples/ \n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/10422443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "organicveggie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11210196", "body": "Yeah, I just happened to be trying to launch an EBS Optimized instance and I had to check with support to figure out how to do it. Once I realized the support was already in place to accomplish this, it just wasn't documented... Seemed like the least I could do. :)\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11210196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "joelhewitt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11225355", "body": "We have fixed the problem.\n\nThanks for bringing this to our attention.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11225355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rubysolo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11226385", "body": "When I store a file at a \"path\" with a leading slash, it does not show up in my bucket -- it only works if I remove the leading slash from the key.\n\nWhen I don't strip the slash from the source key, I get \"No such key\" errors.  When I don't strip the slash from the target key, it doesn't give me a failure, but the new file does not exist at the expected path.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11226385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "desheikh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11232758", "body": "@trevorrowe, thanks for the response, but please note that keeping the initialization out of the loop will still have the same issue.\n\n~/.rbenv/versions/1.9.3-p327/lib/ruby/gems/1.9.1/gems/aws-sdk-1.7.1/lib/aws/core/signature/version_4.rb:87:in `service': NotImplementedError (NotImplementedError)\n\n~/.rbenv/versions/1.9.3-p327/lib/ruby/gems/1.9.1/gems/aws-sdk-1.7.1/lib/aws/core/client.rb:499:in `build_request': undefined method`add_authorization!' for #AWS::SimpleEmailService::Request:0x007fdff13558d0 (NoMethodError)\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11232758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11258961", "body": "@trevorrowe, I've been able to execute it multiple times without issue as well, but If I keep at it I do get the occasional add_authorization error. Havn't been able to reproduce the error at \"version_4.rb:87\" again though.\n\nMy test file is exactly the same except for the array size which I've set to 90 and of course the from email.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11258961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "bensie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11313700", "body": ":metal: \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11313700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13340730", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13340730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "erikh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11320538", "body": "Sorry, gave you the wrong link: https://github.com/aws/aws-sdk-ruby/blob/master/lib/aws/core/data.rb#L230\n\nFundamentally this lies, because methods defined on Object will never hit your method missing proxy, and therefore in this case I've duplicated AWS::Core::Data::List, which of course does not duplicate the array that it's delegating to.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11320538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jagthedrummer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11583413", "body": "Any chance of merging this in?  I'm running into the same conflict.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11583413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11592298", "body": "Yeah, I've tried the require 'aws-sdk' trick and it still does not prevent conflict with the Rightscale/Appoxy 'aws' gem.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11592298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11592812", "body": "The issue is that the 'aws-sdk' gem clobbers the 'Aws' namespace (used by the 'aws' gem) when it is added to a project, which makes it impossible to access any of the classes from the 'aws' gem that live in that namespace.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11592812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11600764", "body": "Excellent!  I'll check this out first thing in the morning.  Thanks for the help.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11600764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12428717", "body": "I've add a new commit (https://github.com/Octo-Labs/aws-sdk-ruby/commit/2134e04f200ba16aac8e7e905cb570d60b6e3618) in response to this comment from Loren. https://github.com/aws/aws-sdk-ruby/pull/125#commitcomment-2448789\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12428717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12508368", "body": "Is there any reason that this can't be accepted into the library?  Trying to query based on a date seems to be completely broken in the main library at the moment....\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12508368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12511965", "body": "Is there a reason that you're against adding the dependency?  It seems more maintainable/stable to add the dependency and to use code that already works as opposed to having to duplicate and maintain the code for time zone conversion as a new module.  Just curious about the philosophy at play.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12511965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12518793", "body": "Ah, yeah, I can see where you're coming from on avoiding libs that modify core classes.  That could be a nasty surprise to someone not prepared for it.\n\nThe idea of breaking AWS::Record out sounds interesting.\n\nThanks for the response.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12518793/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12553554", "body": "I just packaged this set of fixes into a gem so that it can easily be included in a project.\n\nYou can just add this to you Gemfile to get these fixes:\n\n```\ngem 'simple_date_fix'\n```\n\nhttps://rubygems.org/gems/simple_date_fix\n\nhttps://github.com/Octo-Labs/simple_date_fix\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12553554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12553713", "body": "Any chance of getting this pulled in?  (I'm trying to decide if should create a separate gem for this, or if it's going to get into the main library...)\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12553713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12565854", "body": "Woo-hoo!  Thank you!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12565854/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12567443", "body": "I was needing this in a couple of different projects, so I packaged it as a stand alone gem called `simple_unique`.  \n\nhttps://github.com/Octo-Labs/simple_unique\n\nhttps://rubygems.org/gems/simple_unique\n\nIf/when this one gets pulled in (or some other implementation of `validates_uniqueness_of`) I'll just deprecate `simple_unique`.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12567443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "ohookins": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11622508", "body": "Thanks! :+1: \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11622508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11883643", "body": "In general, it would be nice to have access to any object metadata that does not begin with `x-amz-meta-`\n\nThis is where the filtering takes place:\nhttps://github.com/aws/aws-sdk-ruby/blob/master/lib/aws/s3/client.rb#L914\n\nThe fix is trivial, but requires Amazon to make a design decision. @trevorrowe ?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11883643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11902869", "body": "@trevorrowe Admittedly, there is an issue with mixed concerns here. Unfortunately the fact still stands that fields like Content-Disposition are valid user-supplied metadata that can be set on the S3 object and retrieved when you GET/HEAD that object in all other circumstances. In fact the console allows you to set more or less any header on the object for retrieval.\n\nI think what you say makes sense - it does seem logical to have a mechanism for retrieving `x-amz-meta-` only, keeping the standard (or other non-standard) HTTP headers as a separate concern.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11902869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "monfresh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11812142", "body": "The with_prefix method takes a string as an argument. My guess is that you didn't enclose the prefix with quotes. I just tried it and it worked for me.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11812142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11812263", "body": "Also, when you say o = s3.buckets[bucket].objects.with_prefix(dir), \"bucket\" and \"dir\" have to be actual bucket and folder names, both enclosed in quotes. \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11812263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11814118", "body": "From the \"content_type\" documentation: http://docs.aws.amazon.com/AWSRubySDK/latest/AWS/S3/S3Object.html#content_type-instance_method\n\n\"Returns the content type as reported by S3, defaults to an empty string when not provided during upload.\"\n\nHow did you upload your objects to S3?\nWhen you uploaded them, did you specify the content-type?\nWhat happens if you manually set the content-type in the S3 console and then run your block with just \"puts f.content_type\"?\n\nI have an S3 folder I use to test with, and when I ran \"puts f.content_type\" on a series of objects that did not have the content-type explicitly set on upload (even though the Content-Type key does appear in the S3 console - it was added automatically but with the wrong content type: image/jpeg for css files for example), then I just get empty strings returned. Once I set the Content-Type manually in the S3 console for one of the objects to \"text/css\", that's what was returned to me for that object.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11814118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11815244", "body": "I think you are misunderstanding the meaning of \"expiration_date\". When you call \"puts f.expiration_date\", it is reading the field labeled \"Expiry Date\" in the S3 console (in the Properties tab for the object). The \"Expiry Date\" is set at the bucket level on a series of objects via the \"Lifecycle\" section in the Properties tab for the bucket, as explained here: https://forums.aws.amazon.com/ann.jspa?annID=1303\n\nIf you click on one of your csv objects in the S3 website, then click on the Properties tab, and if the \"Expiry Date\" field is empty, then \"puts f.expiration_date\" will return an empty string.\n\nWhen you call \"f.url_for(:read, :expires => 10*60, :secure => true)\", it is NOT setting the \"expiration_date\" of the object. It is simply creating a URL that expires in 10 minutes.\n\nNow, the fact that you are getting an error instead of an empty string is another issue that I can't explain. My guess is that there might be a conflict with another gem. I would create a clean gemset with RVM that only contains the aws-sdk gem and see if you still get the same error.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11815244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11821196", "body": "Thanks for the script. I'm going to be away from my computer for the rest of the day, so I can't try it now. I also haven't played around with creating buckets and objects with the sdk yet, so I can't evaluate your code. \n\nIf you haven't already, I would troubleshoot this by manually setting an expiry date (via the s3 website) for objects in a new clean test bucket, then running only the portion of your script that reads f.expiration_date. If you get the expiry date back, then you know the issue lies with your script that sets the expiry date. Repeat with content type. \n\nOn Jan 2, 2013, at 13:56, \"Joshua T. Mckinney\" notifications@github.com wrote:\n\n> This reproduces the error.\n> \n> bucket_name = 'my-test-bucket-123321123'\n> dir = 'temp/'\n> file_name = 'test.csv'\n> csv = \"1,2,3\\t\\n4,5,6\"\n> s3 = AWS::S3.new\n> \n> bucket = s3.buckets.create(bucket_name)\n> bucket.lifecycle_configuration.update do\n>   add_rule dir, 1\n> end\n> \n> bucket.objects.create(\"#{dir}#{file_name}\", StringIO.new(csv),:content_type => 'text/csv')\n> \n> o = s3.buckets[bucket_name].objects.with_prefix(dir)\n> o.each do |f|\n>   puts f.url_for(:read, :expires => 10*60, :secure => true) # => returns url as expected\n>   puts f.expiration_date # => raises exception 'can't convert nil into String'\n>   puts f.content_type # => raises exception 'can't convert nil into String'\n> end\n> \n> bucket.delete!\n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11821196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "evanwieren": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11822958", "body": "Thanks. I know there are a number of items to look at when it comes to this. \n\nThanks.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11822958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2158719", "body": "This fails the test, because it does not know about content.etag. though it works perfectly fine. \n\nI will change and submit a new request. \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2158719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "kaluznyo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11904630", "body": "My issue is fixed in paperclip gem (https://github.com/thoughtbot/paperclip/issues/1000)\n\nFor me you can close this issue\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11904630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "pas256": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11905935", "body": "Hey Trevor,\n\nCan you post the work around code we talked about at re:invent here please?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/11905935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12076011", "body": "Just checking how it works in Python with Boto - this is their approach\n\napi_params (dict) \u2013 a dictionary of additional parameters to pass directly to the EMR API (so you don\u2019t have to upgrade boto to use new EMR features). You can also delete an API parameter by setting it to None.\n\nhttp://boto.cloudhackers.com/en/latest/ref/emr.html\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12076011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12923769", "body": "I would love to see this get merged in. What is needed for that to happen?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12923769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "almegeddon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12049026", "body": "Sorry, close/reopen on accident.\n\nI believe returning the other HTTP headers in the head_object response is the right approach and as you've both pointed out, keeps the non-HTTP S3 meta as a separate concern.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12049026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "vsespb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12298335", "body": "also #122 \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12298335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jeffshantz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12383958", "body": "I should add that I am using version 1.8.0 from the repository:\n\n``` ruby\ngem 'aws-sdk', git: \"https://github.com/aws/aws-sdk-ruby\"\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12383958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12384420", "body": "Looking in to this further, when I create an IAM user in IRB, it appears that the user's name is not set in the object that is returned:\n\n``` ruby\nu = iam.users.create('testing')\n => <AWS::IAM::User name:> \nruby-1.9.2-p290 :004 > u.name\n => nil \n```\n\nThis explains the first error above (`expected string value for option user_name`).  I reiterate that the user **is** created successfully, but the user's name in the returned object is not set.\n\nIn fact, it appears that user's names are never set (even when using `each`):\n\n``` ruby\niam.users.each { |u| puts \"#{u.name} (#{u.inspect})\" }\n (<AWS::IAM::User name:>)\n (<AWS::IAM::User name:>)\n => nil \n```\n\nAs you can see, both of my test users (which appear just fine in the web console) are being returned, but they appear to be empty when retrieved using `each`.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12384420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12385052", "body": "I tried creating the login profile manually:\n\n``` ruby\nruby-1.9.2-p290 :034 > u = iam.users.create(\"testuser\")\n => <AWS::IAM::User name:>\nruby-1.9.2-p290 :036 > u = iam.users[\"testuser\"]\n => <AWS::IAM::User name:testuser> \nruby-1.9.2-p290 :037 > lp = AWS::IAM::LoginProfile.new(u)\n => <AWS::IAM::LoginProfile user_name:testuser> \nruby-1.9.2-p290 :038 > lp.password = \"abcDEF123!\"\nAWS::Errors::Base: <ErrorResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\">\n  <Error>\n    <Type>Sender</Type>\n    <Code>NoSuchEntity</Code>\n    <Message>Cannot find Login Profile for User testuser</Message>\n  </Error>\n  <RequestId>296e1d1a-60dc-11e2-8c9d-7786bfa02548</RequestId>\n</ErrorResponse>\n\n    from /Users/jeff/.rvm/gems/ruby-1.9.2-p290@2212/gems/aws-sdk-1.8.0/lib/aws/core/client.rb:318:in `return_or_raise'\n    from /Users/jeff/.rvm/gems/ruby-1.9.2-p290@2212/gems/aws-sdk-1.8.0/lib/aws/core/client.rb:419:in `client_request'\n    from (eval):3:in `update_login_profile'\n    from /Users/jeff/.rvm/gems/ruby-1.9.2-p290@2212/gems/aws-sdk-1.8.0/lib/aws/iam/login_profile.rb:53:in `password='\n    from (irb):38\n    from /Users/jeff/.rvm/rubies/ruby-1.9.2-p290/bin/irb:16:in `<main>'\n```\n\nOk, no luck.  Next, I took a look at the code for `password=` and noticed that if the login profile does not exist, the code calls `client.create_login_profile`.  Hence, I tried doing the same using `instance_eval` on the `LoginProfile` object:\n\n``` ruby\nruby-1.9.2-p290 :040 > lp.instance_eval('client.create_login_profile(password: \"abcDEF123!\")')\nArgumentError: missing required option user_name\n    from (irb):40:in `instance_eval'\n```\n\nOk, let's add the `user_name` then:\n\n``` ruby\nruby-1.9.2-p290 :043 > u = iam.users[\"testuser\"]\nruby-1.9.2-p290 :045 > lp = AWS::IAM::LoginProfile.new(u)\n => <AWS::IAM::LoginProfile user_name:testuser>\nruby-1.9.2-p290 :046 > lp.instance_eval('client.create_login_profile(user_name: \"testuser\", password: \"abcDEF123!\")')\n => {:xmlns=>\"https://iam.amazonaws.com/doc/2010-05-08/\", :login_profile=>{:user_name=>nil, :create_date=>nil, :must_change_password=>nil}, :response_metadata=>{:request_id=>nil}}\nruby-1.9.2-p290 :047 > u.login_profile.exists?\n => true \n```\n\nSure enough, that worked.  I can now log in to the web console as that user.  Just thought I'd add this workaround in case anyone else is having the same problem.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12385052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12391514", "body": "My apologies.  I had reinstalled Ruby using RVM and forgot to reinstall all the gems (some of which had external libraries built against the old version of Ruby), so it turns out that that was what was causing this strange issue.  When I deleted my gemset and reinstalled all the gems within in, this problem went away.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12391514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12391534", "body": "My apologies.  I had reinstalled Ruby using RVM and forgot to reinstall all the gems (some of which had external libraries built against the old version of Ruby), so it turns out that that was what was causing this strange issue.  When I deleted my gemset and reinstalled all the gems within in, this problem went away.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12391534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12391706", "body": "Actually, it turns out that one can call `exists?` on this since `User` is a subclass of `Resource`; however, it is not documented.  Perhaps one could add the following to `User` (this was taken from `IAM::Group`):\n\n``` ruby\n# (see Resource#exists?)\ndef exists?; super; end\n```\n\nThis way, the generated RDoc will show `User` as having an `exists?` method.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12391706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12401001", "body": "Sorry, see #130.  I'm a newb.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12401001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ryantate": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12482312", "body": "It looks like, for purposes of my app, I can just have everyone use U.S. buckets no matter where they are. It appears aws-sdk will create buckets by default in U.S. no matter where the user is so it should be fine. Closing out.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12482312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "AlexanderEkdahl": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12538277", "body": "Any updates regarding this feature?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12538277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ravionrails": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12582330", "body": "After updating (to v 1.8.0) it's working now, thanks @trevorrowe \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12582330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "karlfreeman": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12693031", "body": "I'm using it roughly like so:\n\n```\ndynamodb_query = dynamodb_table.batch_get(:all, feed)\n\nunless dynamodb_query.nil?\n  dynamodb_query.each { | activity |\n    parse_activity(activity)\n  }\nend\n\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12693031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12693150", "body": "Sure, not much to the back trace though. Thanks for the quick reply!\n\n```\ngems/aws-sdk-1.8.0/lib/aws/dynamo_db/batch_get.rb:150 \u2022 each\ngems/aws-sdk-1.8.0/lib/aws/dynamo_db/batch_get.rb:169 \u2022 each_attributes\n/usr/local/api/releases/20130124112142/lib/unmagnify/me/activity/index.rb:51 \u2022 each\n/usr/local/api/releases/20130124112142/lib/unmagnify/me/activity/index.rb:51 \u2022 response\nbundler/gems/goliath-ea70864f86a9/lib/goliath/api.rb:227 \u2022 call\nbundler/gems/goliath-ea70864f86a9/lib/goliath/rack/async_middleware.rb:73 \u2022 call\nbundler/gems/goliath-ea70864f86a9/lib/goliath/rack/async_middleware.rb:73 \u2022 call\nbundler/gems/goliath-ea70864f86a9/lib/goliath/rack/simple_aroundware_factory.rb:77 \u2022 call\nbundler/gems/goliath-ea70864f86a9/lib/goliath/rack/validation/default_params.rb:39 \u2022 call\nbundler/gems/goliath-ea70864f86a9/lib/goliath/rack/validation/default_params.rb:39 \u2022 call\nbundler/gems/goliath-ea70864f86a9/lib/goliath/rack/params.rb:66 \u2022 block in call\nbundler/gems/goliath-ea70864f86a9/lib/goliath/rack/validator.rb:40 \u2022 safely\nbundler/gems/goliath-ea70864f86a9/lib/goliath/rack/params.rb:64 \u2022 call\nbundler/gems/goliath-ea70864f86a9/lib/goliath/rack/default_mime_type.rb:26 \u2022 call\n/usr/local/api/releases/20130124112142/lib/unmagnify/middleware/path_params.rb:18 \u2022 block in call\nbundler/gems/goliath-ea70864f86a9/lib/goliath/rack/validator.rb:40 \u2022 safely\n/usr/local/api/releases/20130124112142/lib/unmagnify/middleware/path_params.rb:15 \u2022 call\nbundler/gems/goliath-ea70864f86a9/lib/goliath/rack/validation/request_method.rb:29 \u2022 call\nbundler/gems/goliath-ea70864f86a9/lib/goliath/rack/async_middleware.rb:73 \u2022 call\n/usr/local/api/releases/20130124112142/lib/unmagnify/middleware/cors.rb:23 \u2022 call\nbundler/gems/goliath-ea70864f86a9/lib/goliath/rack/async_middleware.rb:73 \u2022 call\nbundler/gems/goliath-ea70864f86a9/lib/goliath/rack/async_middleware.rb:73 \u2022 call\nbundler/gems/goliath-ea70864f86a9/lib/goliath/rack/async_middleware.rb:73 \u2022 call\ngems/rack-1.4.3/lib/rack/content_length.rb:14 \u2022 call\ngems/async-rack-0.5.1/lib/async_rack/async_callback.rb:114 \u2022 call\ngems/async-rack-0.5.1/lib/async_rack/async_callback.rb:91 \u2022 block in new\nbundler/gems/goliath-ea70864f86a9/lib/goliath/rack/builder.rb:56 \u2022 call\nbundler/gems/goliath-ea70864f86a9/lib/goliath/rack/builder.rb:56 \u2022 block (3 levels) in build\ngems/http_router-0.9.7/lib/http_router.rb:165 \u2022 call\ngems/http_router-0.9.7/lib/http_router.rb:165 \u2022 process_destination_path\n(eval):178 \u2022 block (2 levels) in inject_root_methods\n(eval):168 \u2022 catch\n(eval):168 \u2022 block in inject_root_methods\n(eval):107 \u2022 block in inject_root_methods\ngems/http_router-0.9.7/lib/http_router/node/root.rb:68 \u2022 []\ngems/http_router-0.9.7/lib/http_router.rb:118 \u2022 block in call\ngems/http_router-0.9.7/lib/http_router.rb:118 \u2022 catch\ngems/http_router-0.9.7/lib/http_router.rb:118 \u2022 call\nbundler/gems/goliath-ea70864f86a9/lib/goliath/rack/async_middleware.rb:73 \u2022 call\n/usr/local/api/releases/20130124112142/lib/unmagnify/middleware/cors.rb:23 \u2022 call\nbundler/gems/goliath-ea70864f86a9/lib/goliath/rack/favicon.rb:26 \u2022 call\nbundler/gems/goliath-ea70864f86a9/lib/goliath/rack/async_middleware.rb:73 \u2022 call\ngems/rack-1.4.3/lib/rack/content_length.rb:14 \u2022 call\ngems/async-rack-0.5.1/lib/async_rack/async_callback.rb:114 \u2022 call\ngems/async-rack-0.5.1/lib/async_rack/async_callback.rb:91 \u2022 block in new\nbundler/gems/goliath-ea70864f86a9/lib/goliath/request.rb:163 \u2022 call\nbundler/gems/goliath-ea70864f86a9/lib/goliath/request.rb:163 \u2022 block in process\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12693150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13232589", "body": "Thanks for the clarification. Keep up the good work.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13232589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13232601", "body": "Thanks for the clarification. Keep up the good work.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13232601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13773912", "body": "I think this could also close #140 I'll update and check\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13773912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13848202", "body": "I thought perhaps #161 might fix this, however its close but no cigar. Still having\n\n```\nNoMethodError: undefined method 'each_pair' for nil:NilClass\n```\n\nat https://github.com/aws/aws-sdk-ruby/blob/master/lib/aws/dynamo_db/batch_get.rb#L150 sporadically.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13848202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "dandunckelman": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12866472", "body": "Aww, I see. I had the bad assumption that it was NOT required, even if my origin is an S3 bucket.\n\nI suppose it would be more clear if it stated that it was required when the origin is an S3 bucket.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12866472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12867578", "body": "Great. Thanks for the help.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12867578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "nelhage": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12905435", "body": "I've been running that overnight, and we look good so far. I'll reopen if the issue shows up later, but I think we're probably good. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/12905435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "marceldegraaf": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13085693", "body": "Thanks! I already thought that was the reason it wasn't pushed yet so I thought I'd make a reminder here :-).\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13085693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kenn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13088403", "body": "Thanks for the fix! This release saved my day.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13088403/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "qminhdo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13107178", "body": "Thanks for clarify. As reference in Doc: Item objects do not have any attribute data populated. The Attributes#to_hash is the one that makes get_item request. \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13107178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13168652", "body": "Actually, you can just pass additional options available in AWS::DynamoDB::Client into the #query e.g :limit, :scan_index_forward. Just make sure to add the :select option with [attributes_to_get] so you get ItemData object  (real data) right away; otherwise you will have Item object as return value without real data and will have to make addition get_item request using item.attributes.to_h (As mentioned in https://github.com/aws/aws-sdk-ruby/issues/151).\n\n``` ruby\ntable.items.query(:select => :all, :range_greater_than=> \"1\", :limit => 2,  :consistent_read => true,\n                       :exclusive_start_key => {  # => this is ugly\n                            :hash_key_element => {:s => \"1\"},\n                            :range_key_element => {:s => \"11\"}\n                        }     \n) do |item_data|\n puts item_data.attributes #=> a hash of selected attributes\n item_data.item #=> the AWS::DynamoDB::Item object for this attribute bag\nend\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13168652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "tonyhb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13134295", "body": "Thanks! Had error #146 occurring a lot in our code, too.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13134295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "gmcnaughton": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13193197", "body": "+1\n\nI was surprised that there was no easy way to access the Cache-Control header set on my objects.  It would be great if `head_object` returned all the header values that can be set via `write` or `copy_to`, otherwise you have some headers that are write-only!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13193197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "moorage": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13309207", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13309207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "irons": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13690908", "body": "I'm still seeing this error, though only when I send a message to a queue I've been handed, not when I acquire the queue. I updated the case at https://forums.aws.amazon.com/thread.jspa?messageID=425282 with a short sample reproducing the problem, which has now been in constant effect for almost two days.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13690908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "cdanzig": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13737405", "body": "So after digging a bit deeper is looks like /lib/aws/api-config/ElasticTranscoder-2012-09-25.yml is defining codecOption rules the following way:\n\n``` yaml\nCodecOptions:\n  :sym: :codec_options\n  :type: :map\n  :members:\n    :sym: :map_value\n    :type: :string\n```\n\nIt seems to me (although I am not familiar enough with the code) that this should be something like:\n\n``` yaml\nCodecOptions:\n  :sym: :codec_options\n  :type: :hash\n  :members:\n    Profile:\n      :sym: :profile\n      :type: :string\n    Level:\n      :sym: :level\n      :type: :string\n    MaxReferenceFrames:\n      :sym: :max_reference_frames\n      :type: :string\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13737405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13744667", "body": "Thanks Trevor. I'll keep an eye out for the release.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13744667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mbleigh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13920257", "body": ":+1:\n\nI'm trying to compare local files that may or may not have been gzipped to their S3 counterparts and not finding a way to do so. Is there currently any way to fetch content encoding using the Ruby SDK?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13920257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "pmenglund": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13959840", "body": "Still seeing the error with the latest bits:\n\n```\nmartin@mbp[master]$ gem list aws-sdk\n\n*** LOCAL GEMS ***\n\n\nmartin@mbp$ git clone git@github.com:aws/aws-sdk-ruby.git\nCloning into 'aws-sdk-ruby'...\nremote: Counting objects: 9724, done.\nremote: Compressing objects: 100% (3011/3011), done.\nremote: Total 9724 (delta 7143), reused 8736 (delta 6542)\nReceiving objects: 100% (9724/9724), 3.42 MiB | 863 KiB/s, done.\nResolving deltas: 100% (7143/7143), done.\nmartin@mbp$ cd aws-sdk-ruby\nmartin@mbp[master]$ RUBYLIB=lib pry\n[1] pry(main)> require 'aws-sdk'\n=> true\n[2] pry(main)> AWS.config(:access_key_id => \"...\", :secret_access_key => \"...\")\n=> <AWS::Core::Configuration>\n[3] pry(main)> ec2 = AWS::EC2.new\n=> <AWS::EC2>\n[4] pry(main)> ami = ec2.images[\"ami-807cefe9\"]\n=> <AWS::EC2::Image id:ami-807cefe9>\n[5] pry(main)> ami.block_device_mappings\nNoMethodError: undefined method `ebs' for {:device_name=>\"/dev/sdb\", :virtual_name=>\"ephemeral0\"}:Hash\nfrom /Users/martin/src/ruby/aws-sdk-ruby/lib/aws/core/data.rb:101:in `method_missing'\n[6] pry(main)> ^D\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13959840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13972889", "body": "Thanks! Do you know when you'll release a new gem?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13972889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13979282", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/13979282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "alexmarchant": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/14098247", "body": "@mbleigh I'm also here for this reason. Would be very helpful to be able to read content_encoding.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/14098247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "goldmann": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/515228", "body": "What's the story behind requiring this specific version (or newer)? Why it cannot be for example 1.4.3 (shipped with Fedora 14)?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/515228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "tdc-jwhitson": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/821981", "body": "Shouldn't this be: Core::Configuration.add_option :\"#{ruby_name}_endpoint\", default_endpoint\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/821981/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/821983", "body": "Shouldn't this be: Core::Configuration.add_option_with_needs(\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/821983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "twhaples": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/1522438", "body": "So, because this thing went away, you can't launch EC2 instances with IAM Instance Profiles in 1.5.5, like you presumably could in 1.5.4 or 1.5.3.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/1522438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "JoshuaOSHickman": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2104980", "body": "I'm getting crazy errors in my system about the CRC32 checks never matching in my dev setup. I've reverted to version 1.6.0, but I thought I'd mention it. I'm running a server on Goliath, if that helps/matters. \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2104980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "iain": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2377211", "body": "Which bug is this? Will this affect production code or only tests?\n\nRuby 1.9.3 is the main Ruby version at this moment, so I would be hesitant to leave that version out of CI.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2377211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "nathany": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2517449", "body": "FYI, the dependency is still in your gemspec.\n\n`s.add_dependency('httparty', '~> 0.7')`\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2517449/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "guyisra": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2517454", "body": "I see it too after upgrading to 1.8.1.. thought it was only me\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2517454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dkln": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2530736", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2530736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "uberllama": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3400270", "body": "Is there a timeline on this backward compatibility? If Ruby 1.8.7 compatibility is required long term, it would be nice to see a separate branch specifically for that.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3400270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "webdevotion": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3431176", "body": "I agree. Bundler fails to find compatible versions to update because of this restriction.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3431176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "chulkilee": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3450353", "body": "Created an issue #273 \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3450353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "benhamill": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3490726", "body": "I think there's a bug in this commit. If you rely on features that are in 1.4.4, but not in 1.4.0, then you still need to specify that restriction. `add_dependency` takes more than one version specification string.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3490726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "lrdcasimir": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3623402", "body": "Cool, nice improvements on my hacky patch.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3623402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "tanelj": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3867438", "body": "Hi!\n\nThis commit brakes Simple Email Service functionality when user is setting his to EU globally (`eu-west-1`) eg:\n\n```\nAWS.config(:region => 'eu-west-1')\n```\n\nThen the API client ties to connect to `https://email.eu-west-1.amazonaws.com/` and get s error `Timeout::Error: execution expired`\n\nIt because Simple Email Service endpoint is only available in `us-east-1` region (`email.us-east-1.amazonaws.com`): http://docs.aws.amazon.com/general/latest/gr/rande.html#ses_region\n\nApplications using eu-west-1 as default region should now set `:simple_email_service_endpoint` to make it work again.\n\n```\nAWS.config(:region => 'eu-west-1', :simple_email_service_endpoint => 'email.us-east-1.amazonaws.com')\n```\n\nMaybe it's good to mention it at least in documentation.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3867438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "aceofspades": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/4400062", "body": "Is it possible to allow nokogiri version to advance for those on 1.9.x? Other gems are going to require newer versions of nokogiri.\n\nSeems up to nokogiri to deal with ruby version dependencies, not this gem. Thoughts?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/4400062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "idlecool": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/4920881", "body": "There seems to be a problem with this new version! Should I open an issue?\n\n```\n/home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/aws-sdk-1.31.1/lib/aws/core/endpoints.rb:28:in `read': No such file or directory - /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/aws-sdk-1.31.1/endpoints.json (Errno::ENOENT)\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/aws-sdk-1.31.1/lib/aws/core/endpoints.rb:28:in `endpoints'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/aws-sdk-1.31.1/lib/aws/core/endpoints.rb:20:in `hostname'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/aws-sdk-1.31.1/lib/aws/core/configuration.rb:407:in `block in add_service'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/aws-sdk-1.31.1/lib/aws/core/configuration.rb:360:in `call'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/aws-sdk-1.31.1/lib/aws/core/configuration.rb:360:in `block in add_option'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/aws-sdk-1.31.1/lib/aws/core/configuration.rb:380:in `block (2 levels) in add_option_with_needs'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/aws-sdk-1.31.1/lib/aws/core/configuration.rb:380:in `each'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/aws-sdk-1.31.1/lib/aws/core/configuration.rb:380:in `inject'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/aws-sdk-1.31.1/lib/aws/core/configuration.rb:380:in `block in add_option_with_needs'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/aws-sdk-1.31.1/lib/aws/core/service_interface.rb:73:in `initialize'\n        from /mnt/u/apps/projectx/staging/releases/20131218005723/config/initializers/services.rb:85:in `new'\n        from /mnt/u/apps/projectx/staging/releases/20131218005723/config/initializers/services.rb:85:in `<top (required)>'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:245:in `load'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:245:in `block in load'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:236:in `load_dependency'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:245:in `load'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/railties-3.2.11/lib/rails/engine.rb:588:in `block (2 levels) in <class:Engine>'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/railties-3.2.11/lib/rails/engine.rb:587:in `each'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/railties-3.2.11/lib/rails/engine.rb:587:in `block in <class:Engine>'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/railties-3.2.11/lib/rails/initializable.rb:30:in `instance_exec'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/railties-3.2.11/lib/rails/initializable.rb:30:in `run'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/railties-3.2.11/lib/rails/initializable.rb:55:in `block in run_initializers'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/railties-3.2.11/lib/rails/initializable.rb:54:in `each'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/railties-3.2.11/lib/rails/initializable.rb:54:in `run_initializers'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/railties-3.2.11/lib/rails/application.rb:136:in `initialize!'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/railties-3.2.11/lib/rails/railtie/configurable.rb:30:in `method_missing'\n        from /mnt/u/apps/projectx/staging/releases/20131218005723/config/environment.rb:6:in `<top (required)>'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:251:in `require'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:251:in `block in require'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:236:in `load_dependency'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:251:in `require'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/railties-3.2.11/lib/rails/application.rb:103:in `require_environment!'\n        from /home/ubuntu/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/gems/1.9.1/gems/railties-3.2.11/lib/rails/commands.rb:40:in `<top (required)>'\n        from script/rails:6:in `require'\n        from script/rails:6:in `<main>'\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/4920881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/4937070", "body": "thanks\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/4937070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "phstc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/6465262", "body": "So, no way to override the default `api_version`?\n\nMaybe:\n\n``` ruby\noptions[:dynamo_db][:api_version] ||= '2011-12-05'\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/6465262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/6465379", "body": "Thanks @trevorrowe! :beers: \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/6465379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "joelr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/6514757", "body": "pretty sure this has broken now, if you want to use this, it fails:\n\n```\nAWS::rds.client.authorize_db_security_group_ingress({cidrip: \"#{ip_address}/32\", db_security_group_name: \"default\"})\n```\n\nArgumentError: unexpected option DBSecurityGroupName\n\nit should have been made optional, not required\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/6514757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "monde": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/6605404", "body": "I find that automagically defining consts like `def const_missing constant` does `lib/aws/core/lazy_error_classes.rb` to be disagreeable because it makes code hard to debug.  It seems like a security hole to allow a response from an API to generate code in a library.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/6605404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/6609318", "body": "I'm commenting on the origin of the code change to the const_missing method from `lib/aws/core/lazy_error_classes.rb` which is in this humungous  commit (300 changed files with 23,928 additions and 13,787 deletions).  The method is still active in the master branch.\n\nArbitrary code is executed, this library blindly reads the name of an exception type from an XML payload and creates a Ruby class constant based on that string.  If you are saying this most likely is not an attack vector, then I agree with you.  I disagree that this is an idiomatic way to create an exception handling hierarchy because one can only depend on rescuing `AWS::Errors::Base`, I've no way of knowing how or what kind of children arbitrary strings from an XML payload will create.  Perhaps one time I may get a `AWS::S3::Errors::InternalError` and some other time I might get a `AWS::S3::Errors::BunkError`.  Unless these constants are predefined I've no way of counting on exceptions named from a known expressive hierarchy.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/6609318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "soem": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/6678954", "body": "This line won't run with ruby 1.8.7  :(\nIt could be:\nclient = self.with_options(:ec2_region => params[:source_region])\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/6678954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "alexfarrill": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/6965627", "body": "At least maybe put a warning if a specific version was specified?  Took me some time to find this and it's kind of a weird call, the API docs here: http://docs.aws.amazon.com/AWSRubySDK/latest/AWS/DynamoDB/Client.html#create_table-instance_method suggest it's possible to pass this in via the global config\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/6965627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "YorickPeterse": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/9782040", "body": "Are there any plans of re-introducing this soon? The raw APIs of the new SDK version aren't exactly pleasant to use so having the resource APIs in would be really great.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/9782040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/9782809", "body": "Also, does this not break semantic versioning? This commit removes code in a non backwards compatible way and provides no sane alternatives.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/9782809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/9794995", "body": "Ah, I looked at the Git tags containing this commit which don't show it was a preview release.\n\nWith the new interface, would there be a convenient method of sorts for polling for messages similar to v1 of the SDK? The removed interface doesn't seem to provide such a method.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/9794995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/9803548", "body": "Ah, fantastic. I'll hold on with upgrading to v2 then for the mean time (since we rely on this almost everywhere).\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/9803548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "russau": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/9997193", "body": "Awesome!  Thanks for the quick response.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/9997193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "luccasmaso": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/10228040", "body": "Do you know what happened with this URL? Cannot find AWS::SQS:: QueuePoller and  AWS::SQS::Queue.new anymore on the official docs\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/10228040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "Iristyle": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/10275450", "body": "Thanks for the quick response @trevorrowe .\n\nThis is a good venue for dropping a couple additional notes regarding our use case.  In creating a Puppet module to provision AWS resources, we build a dependency graph based on the resources represented in a manifest, establish the appropriate sequence of resources to create, and then go forward with making API calls against AWS.  Due to the nature of the network + AWS eventual consistency, we run into situations where the resource is not immediately available for reference or modification.  \n\nWhile Puppet is designed around idempotency, we still like to see the manifest application succeed in a single Puppet run.  We can generally achieve desired results using the waiters.  However, there are a number of situations that we've encountered -- in a simple example, tagging an instance -- where we've had to resort to introducing retries.  For example:\n\nhttps://github.com/puppetlabs/puppetlabs-aws/blob/master/lib/puppet/provider/ec2_instance/v2.rb#L259\n\n@garethr dropped many of these in during quick spikes, but I believe the retry with backoff responsibility lies in the client layer, and I would like to see the explicit retries removed from our provider code.  \n\nWhile testing some code that tears down a `vpn_gateway`, we discovered an issue where `detach_vpn_gateway` could take some time before we were able to subsequently call `delete_vpn_gateway`.  That's when I started digging in to see why the `RetryErrors` plugin wasn't taking effect, given the error returned from the API call is `Aws::EC2::Errors::IncorrectState: The VPN gateway is in use.` -- which is a 400 class error that I understand should be retryable.\n\nYou can see the code in question here:\n\nhttps://github.com/puppetlabs/puppetlabs-aws/blob/074c0ccb785767081c919ee5cb3b3cb4468221c3/lib/puppet/provider/ec2_vpc_vpn_gateway/v2.rb#L127\n\nI've been a bit short on time and can certainly provide some more details -- but I hope that's enough to explain the circumstances surrounding our issues.  When I was debugging before, I set breaks in the `RetryErrors` plugin and saw it called prior to a response... but I didn't see it take effect after the response was received.  I theorized this might be a side effect of middleware that mutates request / response state, or that can return early without invoking the full chain of middleware plugins.  But I haven't completely confirmed that just yet, so my hunch could be off.\n\nI can open up a GitHub issue to provide more info there as well.  Thanks again!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/10275450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "ajvondrak": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/12024222", "body": "Nit: shouldn't the `data` parameter be optional, as in https://github.com/aws/aws-sdk-ruby/blob/3cf1a5fe324141d76a2a5d86fbba511832509772/aws-sdk-core/lib/aws-sdk-core/client_stubs.rb#L162 ?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/12024222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "fadhlirahim": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/13204563", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/13204563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "christiangenco": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/14403300", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/14403300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "zwang80": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/16333713", "body": "https://github.com/aws/aws-sdk-ruby/issues/1103\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/16333713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "grosser": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/16432997", "body": "this is now a runtime dependency ... getting:\n\n```\nAws::S3::Client.new(region: 'us-west-2', access_key_id: 'xxxx', secret_access_key: 'ddgdfgdg');\nLoadError: cannot load such file -- kramdown\n```\n\nplease revert, yank 2.2.21 and then try again :)\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/16432997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/16433494", "body": "can you start by yanking .21 so nobody else runs into that ?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/16433494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/58000320", "body": "random name seems a bit strange ... how about `\"assumed-#{profile_name}-#{ENV['USER']}\"`\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/58000320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "teddevaal": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/20448786", "body": "I like!", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/20448786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "scottjacobsen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/21952570", "body": "Changelog went sideways?", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/21952570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jbeker": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/26822578", "body": "Isn't the typo on purpose to illustrate that it `raises` an exception?", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/26822578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dividedmind": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/5974963", "body": "How about putting the whole `entry` in `details` instead? It'd be put there by reference anyway, so no copying involved. Then `[:receipt_handle]` would be redundant, but I guess it can be left there for backwards compatibility (marked as deprecated?).\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/5974963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "thenovices": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/24028242", "body": "cleaner would be\n\n``` ruby\noptions[:client_token] ||= SecureRandom.uuid\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/24028242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "kitchen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/44853745", "body": "The default `options` parameter on this method would have raised a `NoMethodError` and it's a private method, so I got rid of the default.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/44853745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "tawan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/53476462", "body": "@trevorrowe This is the line you mentioned in the previous commit: I simple added a `nil` check. Only messages which are which are placed in the `successful` array are verified.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/53476462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "whazzmaster": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/54758771", "body": "Sounds good- I'll try to collect the feedback and push an update this afternoon.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/54758771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "equivalent": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/55100965", "body": "I'm ok with that, will change this in next commit.  ...please let me know if you want me to squash commits\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/55100965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "ssuprun": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/56849725", "body": "But what happens if we will have the defined one from these parameters in non-source profile? Seems they will be re-written from source one. I believe the usage of method \"merge\" is more correct. But I agree with check the existence of  source profile.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/56849725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/58183104", "body": "Actually you propose the cosmetic change. :) If this one is only blocker I'll do it ;)\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/58183104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "hguo0303": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/56887496", "body": "Yeah, I agreed it would be more convenient to have access_key and session_token in the non-source profile. But I made these changes so that it can be uniform with python and java implementations. In botocore, for example, source profile is a mandatory field, and access_key and session_token are only retrieved from source profile. Please refer https://github.com/boto/botocore/blob/develop/botocore/credentials.py#L840-L866 for more information. I believe it is the same idea in java implementation.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/56887496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "DanielRedOak": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/65746099", "body": "My thought was to minimize calls to the API, but that seems reasonable as well as long as we aren't forced into download the full object more than once.  I might be able to peek next week too.  Let me know how things go.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/65746099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "hamadata": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/101892400", "body": "@cjyclaire \r\nHow about removing #signed_url from Signer?\r\n#signed_url is only used in UrlSinger, not in CookieSigner.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/101892400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/101892406", "body": "I will fix it.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/101892406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/101892410", "body": "I will fix it.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/101892410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/101892781", "body": "like this?\r\n```\r\n      def scheme_and_uri(url)\r\n        url_sections = url.split('://')\r\n        if url_sections.length < 2\r\n          raise ArgumentError, \"Invaild URL:#{url}\"\r\n        end\r\n        scheme = url_sections[0].gsub('*', '')\r\n        uri = \"#{scheme}://#{url_sections[1]}\"\r\n        [scheme, uri]\r\n      end\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/101892781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102118654", "body": ":+1: ", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102118654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102118658", "body": ":+1: ", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102118658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102120093", "body": "I removed the comment because this comment was the usage of UrlSigner.\r\nThe class Signer is a set of methods, not used directly.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/102120093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "iamatypeofwalrus": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/106813845", "body": "Updated documentation in latest commit", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/106813845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "mayanks": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/100276112", "body": "Will this not write the chunks out of order?", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/100276112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "easybills-admin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/138289869", "body": "Possible side effect: https://github.com/thoughtbot/paperclip/issues/2484", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/138289869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}}}