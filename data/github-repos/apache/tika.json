{"_default": {"1": {"dameikle": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/5f3102fc80b8bb8ef919153e000a0f7258621cba", "message": "TIKA-2509: Updated to use configured ImageMagick path"}, {"url": "https://api.github.com/repos/apache/tika/commits/214b8923fdf0dae1e6866d5b75f4780306842c0d", "message": "TIKA-2509: Updated to ignore python warnings during rotation script"}, {"url": "https://api.github.com/repos/apache/tika/commits/0b9aa9b5efde795f6b863c987abff5be07530a41", "message": "TIKA-2509: Updated to use configured ImageMagick path"}, {"url": "https://api.github.com/repos/apache/tika/commits/50295be0e1cd434228ac588a0299718c512436e8", "message": "TIKA-2385: Removed deprecated call"}, {"url": "https://api.github.com/repos/apache/tika/commits/f3acc8f23c2f0b5fb59e3587b605486b74d0c4f8", "message": "TIKA-2385: Fixed typo in dependency checker script"}, {"url": "https://api.github.com/repos/apache/tika/commits/aff782d5e88a3616055451de9526c0a40774bf87", "message": "TIKA-2385: Updated check for Python dependencies to use temporary script instead of -c switch"}, {"url": "https://api.github.com/repos/apache/tika/commits/7a9411f9d06a667114f9ea67ad48f1099be1ec3b", "message": "TIKA-2385: Added check for Python dependencies"}, {"url": "https://api.github.com/repos/apache/tika/commits/f3842eac84fefcf95c6948b96b9129a2673d6c0f", "message": "TIKA-2385: Corrected Tesseract OCR rotation.py script and made it a configurable option via Peter Weiss"}, {"url": "https://api.github.com/repos/apache/tika/commits/b3434cd87fc454bfeccf149bc6644590f5678622", "message": "Merge branch 'TIKA-2385'"}, {"url": "https://api.github.com/repos/apache/tika/commits/537cfca9eae17a0270388810a557a8dc7faa0c30", "message": "Merge branch 'TIKA-2835' of https://github.com/pmweiss/tika into TIKA-2385\n\nAdded check for Python dependencies to provide full check before attempting to run"}, {"url": "https://api.github.com/repos/apache/tika/commits/7ca6597c5652ab8850bb8ce3d48d602188f5bdbf", "message": "Merge branch 'TIKA-2835' of https://github.com/pmweiss/tika into TIKA-2385\n\nAdded check for Python dependencies to provide full check before attempting to run"}, {"url": "https://api.github.com/repos/apache/tika/commits/beedc4277526c6327524acb3a799b2ca6c898a05", "message": "TIKA-2347 - Add underline extraction from Word documents (doc/docx) from Stuart Hendren as well as strikethrough extraction in docx."}, {"url": "https://api.github.com/repos/apache/tika/commits/639f3bf361a08210da8fae68e3eeb4e12df6c4de", "message": "TIKA-2347 - Add underline extraction from Word documents (doc/docx) from Stuart Hendren as well as strikethrough extraction in docx."}, {"url": "https://api.github.com/repos/apache/tika/commits/93cbed6df993ef01e59c55b86449b664e9052cae", "message": "TIKA-2347 - Added extraction of <strike> element in DOCX files"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Gagravarr": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/7f6072ca26dccf1d791c426d4c32068535ddae8a", "message": "Merge branch 'BenRomberg-TIKA-1191'"}, {"url": "https://api.github.com/repos/apache/tika/commits/cadbc405519e5adbada1ddb6d2d4beff1f953072", "message": "AC3 magic detection tests"}, {"url": "https://api.github.com/repos/apache/tika/commits/982003761bdadfc1dcf32b105800d59e5b622c83", "message": "Changelog update"}, {"url": "https://api.github.com/repos/apache/tika/commits/10cd2055b43c6983aa4e7d95da53680355f39bac", "message": "Mime magic for AC3 and EAC3 files"}, {"url": "https://api.github.com/repos/apache/tika/commits/1bddca4c382c40dc12a4f3ad674ecec08f9a4347", "message": "Test AC3 and EAC3 files, produced by ffmpeg from testWAV.wav"}, {"url": "https://api.github.com/repos/apache/tika/commits/700b38acb6443c30b4b05312a2010826fc618477", "message": "TIKA-1141 Few more well-known JS library headers"}, {"url": "https://api.github.com/repos/apache/tika/commits/97699598f000139b1222b785d634b3c8a8e216c7", "message": "TIKA-1141 - There is no unique magic for JavaScript files, no matter how much we might like there to be... However, to avoid mis-detection, for a few common JS libraries with HTML snippets near their start, include magic for these files as JS"}, {"url": "https://api.github.com/repos/apache/tika/commits/c2c73e9239e8957a390008bdf94df93e73def086", "message": "TIKA-2531 Unit test to ensure that, for Encyrpted RAR files which we do not yet support, a helpful EncryptedDocumentException is thrown"}, {"url": "https://api.github.com/repos/apache/tika/commits/0d92bc862c3c344d65d3f6c260b0f5ea4c389fc0", "message": "Add notes on why we can't get the Numbers or Pages type just yet - need to call out to another library or decode the Document.iwa snappy stream ourselves"}, {"url": "https://api.github.com/repos/apache/tika/commits/5c7547bac9208082920859a5040a8b9fa31da642", "message": "Have the iWorks 13 parser set the content type on the metadata if possible, otherwise remains no-op"}, {"url": "https://api.github.com/repos/apache/tika/commits/17e4b66410a3bca6c749dda8c49bdb41f3d1b609", "message": "A dummy parser unit test for iWorks 13"}, {"url": "https://api.github.com/repos/apache/tika/commits/450ab4bee5b91663c8d524ad1f6357147c6cd40f", "message": "TIKA-2473 PCX and DCX mime magic and detection unit tests"}, {"url": "https://api.github.com/repos/apache/tika/commits/abfca01daa44764403e4fc708a4b40998a1091e5", "message": "Add test PCX and DCX files, generated by ImageMagick from the Test PNG file TIKA-2473"}, {"url": "https://api.github.com/repos/apache/tika/commits/21c0f373e0a9bcf82e3e53c886c45f448b50df76", "message": "PicturesSource has been copied to Apache POI, mark the class to remove once we have upgraded to a version with it in"}, {"url": "https://api.github.com/repos/apache/tika/commits/930e677dcd4f228d7bcb4f233c1d2a58930ab5d3", "message": "Changelog"}, {"url": "https://api.github.com/repos/apache/tika/commits/587e4ae5b0a87e01315156115c8b88d056036f96", "message": "TIKA-2447 Inspired by the patch from Jan Burkhardt, do not bother fetching+keeping data from PSD sections we ignore"}, {"url": "https://api.github.com/repos/apache/tika/commits/2c54f93b8ffb1ad5874729f2b0774977b99a9dce", "message": "Changes update"}, {"url": "https://api.github.com/repos/apache/tika/commits/2207cd91bf65224dc07af71e32920e2ef745288b", "message": "HTTPD magic is once more wrong, disable one check and explain why"}, {"url": "https://api.github.com/repos/apache/tika/commits/67e2c5a80bc884818c3f905a26c396c57608d75f", "message": "TIKA-2445 Windows Batch .bat / .cmd need their own type, as they are text-based, with some common-ish magic, plus unit tests"}, {"url": "https://api.github.com/repos/apache/tika/commits/1d1119eaf7f7489722fd40b04c66ee8602801fc0", "message": "Add a sample Windows batch file"}, {"url": "https://api.github.com/repos/apache/tika/commits/4455a6f087bbd52767e55478e9d51fdb39adbce6", "message": "TIKA-2436 Add a mime type for EMZ, subclass of gzip, much as we have for the related WMZ"}, {"url": "https://api.github.com/repos/apache/tika/commits/a51add2afe475ba8d3fb5847c97f52b1eb71deea", "message": "Forbidden APIs fix - Use a specified encoding when turning Strings into Bytes"}, {"url": "https://api.github.com/repos/apache/tika/commits/f31b7f1e281938c393f159cd4a76f3396291e7b6", "message": "TIKA-2433 All non-pipe modes need configuring, otherwise the Tika Server fails"}, {"url": "https://api.github.com/repos/apache/tika/commits/0579efe59c35a4db248d8a5547af05fbee3caad4", "message": "Two more EML header magics from Matthew Caruana Galizia from TIKA-2042"}, {"url": "https://api.github.com/repos/apache/tika/commits/0277fbb92c4714361949d59708db2a8734f1b1f2", "message": "TIKA-2042 Add a few more mbox patterns, based on file supplied by mcaruanagalizia Matthew Caruana Galizia"}, {"url": "https://api.github.com/repos/apache/tika/commits/bea5b9d0d88f1524fd58d8c82448686575bf837d", "message": "WARC and ARC magic from Andy Jackson from https://github.com/ukwa/tika/"}, {"url": "https://api.github.com/repos/apache/tika/commits/3891b875c560c5cdcd6df1cdffba5af4b89271d8", "message": "Add a few recent mime/magic changes to the changelog"}, {"url": "https://api.github.com/repos/apache/tika/commits/dd7acbf6c43dcd2e75323755e3a5365e454b2274", "message": "Merge pull request #190 from sebastian-nagel/TIKA-2422-detect-graphviz\n\nTIKA-2422 -- improve detection of Graphviz *.dot format"}, {"url": "https://api.github.com/repos/apache/tika/commits/a00d1120bc8a0189377e67fbe71af936a53163a2", "message": "Test GraphViz files"}, {"url": "https://api.github.com/repos/apache/tika/commits/383015235d4fc855c16d8d65c0c3cae96488951d", "message": "TIKA-2419 If we detect XML but the XML is broken, try the HTML magics before declaring it to be broken xml = plain text. Needed because, to avoid false positives on html-like formats such as email, XML has a higher magic priority than HTML"}, {"url": "https://api.github.com/repos/apache/tika/commits/d98bec077bbeabe095d9200f6b729b465e51368c", "message": "TIKA-2419 Do all 4 html doctype varients for the same text range"}, {"url": "https://api.github.com/repos/apache/tika/commits/8eef0562f82088db3bb66d17d8eb28188468112e", "message": "Merge branch 'master' of https://github.com/apache/tika"}, {"url": "https://api.github.com/repos/apache/tika/commits/0815b2144cf013e1a0803cee72d8076e8c544716", "message": "TIKA-2418 Make the QuickTime start-of-file Atom matches a bit more specific where possible, to reduce false positives"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/46688242", "body": "Is Java libpst 0.8.1 available in maven central? Only I'm not able to see it - http://repo1.maven.org/maven2/com/pff/java-libpst/ only shows 0.7\n\n(We can only accept dependencies that are in Maven Central)\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/46688242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/46691711", "body": "It is ASF policy that releases that are pushed to Maven Central (which ours are) must not depend on external repos, and may only depend on other resources in Central. There's quite a few blog posts explaining the rationale for this if you google\n\nIf possible, ask the libpst author to upload to central via the sonatype oss repo - https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide . First release can be a faff, but once setup it's generally only a few mins extra work (or at least that's what I've found!). If they aren't willing/able, it's possible for someone else to push it for them, see https://docs.sonatype.org/display/Repository/Uploading+3rd-party+Artifacts+to+The+Central+Repository\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/46691711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/46697847", "body": "I've added some stuff on the maven central requirements to the contributing page http://tika.apache.org/contribute.html\n\nAs for building Tika with libpst 0.8.1, if it's in a non-standard repo, you can always add that to your tika parsers pom, then bump the dependency and build locally. If not, you'll need to build a pom for it, install it in a repo or your local m2 repo cache, then bump the tika parsers dependency\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/46697847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/48599223", "body": "As a general rule, if possible please separate out whitespace changes from code changes, to help make it easier to review the patches. (Github can help, since ?w=1 will exclude the whitespace, but it's an extra step). Also I think we prefer explicit includes to wildcard ones, but might be best to double check that on the dev list\n\nCode wise, looks fine at a first glance, will try to do a more detailed review later before committing (assuming no-one else beats me to it!)\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/48599223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/88191521", "body": "To help readability, I'd probably be inclined to have `CompositeParser` have an `isExcluded` method, which does both the `excludeParsers.contains` and `assignableFrom` check\n\nAlso, the `ParserExcludeTest` might want to live with the other config related exclusion tests, in one of tika-core/src/test/java/org/apache/tika/config/TikaConfigTest.java or tika-parsers/src/test/java/org/apache/tika/config/TikaParserConfigTest.java\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/88191521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/88232265", "body": "Looks good to me!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/88232265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/95777597", "body": "Any chance you could explain why this needs to be 50 not 40?\n\n(A unit test which shows the problem would be ideal!)\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/95777597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/97387255", "body": "Generally looks good\n\nOne comment though - not sure that DIFContentHandler belongs in core? My hunch is that because it's specific to the DIF parser, it should live in the parsers package under DIF, much as the ODF one does - see under tika-parsers/src/main/java/org/apache/tika/parser/odf/\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/97387255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/97588265", "body": "ODF, iWorks, OOXML, RDF and Atom are all xml-based (and some others too). However, all of those have their own packages, as while they're XML based, they're specific to one particular flavour of XML. So, based on that precedent, I'd say the DIF parser and handler should be in the parsers module under org.apache.tika.parser.dif\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/97588265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/113151277", "body": "Would you be able to re-do this without the whitespace changes? And ideally also with a small sample file we could use for a unit test?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/113151277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/155110699", "body": "On the whole, we try to avoid raw un-prefixed metadata keys. We do have some, mostly older ones or ones from other standards, as you've seen! But ideally we try to use a prefix so that people know which standard to go check to understand what a key means. For example, we prefer `dc:title` to `title`, as the former makes it clearer what it means, the latter is now deprecated\n\nAny chance you could replace keys like `ORGANIZATION` with something more like `prefix:name` based on a well-known external metadata definition? (May end up using multiple prefixes)\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/155110699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/155462805", "body": "License wise, GPL dependencies are a no-go for ASF projects. You could maintain it independently though, but users would need to review the license and install manually if they were able to abide by the GPL restrictions. http://wiki.apache.org/tika/3rd%20party%20parser%20plugins is where we maintain the list of incompatibly licensed plugins\n\nIn terms of the prefix, I don't know, you're the expert in the tool rather than me! You'll need to read up the documentation from the tool, and find out from that what it means by the various outputs. If it defines them against a well known external standard, then great! Use that. If not, see if any well known metadata standards cover the same logical things, and map onto those\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/155462805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/173874079", "body": "Looks to be some slightly odd indents there, any chance you could review http://tika.apache.org/contribute.html#Code_Formatting and fix?\n\nSecondly, won't this patch cause us to get all the notes twice? Once with minimal stuff by the slide, again later on when the full notes extraction runs?\n\nMight be good to review how the XSLF (.pptx) one does it, and crib from that?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/173874079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/174635021", "body": "I don't think that including the text of the notes twice is good from the backwards compatibility standpoint either - it will mess up some people's rendering, along with text frequency stuff.\n\nI think we should decide on the \"right\" set of markup for identifying slides and their associated notes, then fix both PPT and PPTX to follow this + log the change in the changelog to alert existing users. If you could review the output of the PPT and PPTX parsers html, and then make a suggestion for what seems sensible, that'd be great! Please post it to the dev list or TIKA-1840 so it gets enough visibilty\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/174635021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/189629034", "body": "There looks to be an unrelated change in here, and the whitespace/indenting looks inconsistent / messed up. Any chance you could fix that so we can merge?\n\n(Also, we do have a test NetCDF file in the tika parsers test documents area, so if you could add a detection unit test using it too, that'd be great!)\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/189629034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/192884554", "body": "For the Atom, RSS and RDF ones - is the magic required? Doesn't the XML detector get them already via the namespace? And without risk of mis-detecting text files which happen to mention feed or rss or rdf near the start?\n\nFor the Postscript one - could you re-do this as text rather than hex, so it's easier to read?\n\n(Others look fine!)\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/192884554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/192885108", "body": "To make it easier to read, would you be able to re-do the first 3 patterns as text rather than hex?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/192885108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/192886003", "body": "Few things:\n- Could you please put the new mimetype in alphabetical order, so between {{application/x-emf}} and {{application/x-filemaker}} ?\n- Could you try to find a smaller sample file? Ideally just a few kb in size\n- Could you please follow the test files naming convention for your test file? eg testHFA.hfa instead of a long hex string?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/192886003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/289484083", "body": "There seems to be some unrelated whitespace changes in your commit - any chance you could remove those?\r\n\r\nOtherwise, commit looks fine, but can I ask what you're trying to get at? Perhaps we might want to expose those id3 fields as well as standard through Tika is all!", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/289484083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "BenRomberg": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/6a398bd3f6245543091fd7c0e9e4facb34a26882", "message": "fix for TIKA-1191 contributed by BenRomberg"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tballison": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/5adc0a629c482311216780c9649e0fd624e4a2e9", "message": "fix date format in Changes.txt...bad for release process"}, {"url": "https://api.github.com/repos/apache/tika/commits/33f3855bf36a0d119f77e0dbb3ccf1b8af5d082d", "message": "2.0.0, here we come!"}, {"url": "https://api.github.com/repos/apache/tika/commits/533354d1a0e7e0b3b4ced7b7958f6e34041bf502", "message": "TIKA-2524 -- add an XPS parser"}, {"url": "https://api.github.com/repos/apache/tika/commits/6087955514973b6173bc3c1df5f057a6b52b0c98", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/apache/tika/commits/b054df2be2f43c4944ff66f7d9fd2ceb1655d9c0", "message": "[maven-release-plugin] prepare release 1.17-rc2"}, {"url": "https://api.github.com/repos/apache/tika/commits/6f33bae5c9cc35bab7eccc7017850803e6dc252b", "message": "roll back to start rc2"}, {"url": "https://api.github.com/repos/apache/tika/commits/af3d017f5476a565862f71ea1cc7fff1bc2cca09", "message": "update changes for next release cycle"}, {"url": "https://api.github.com/repos/apache/tika/commits/c069ad5b83ee9690257aea8fbd6aa124583f4296", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/apache/tika/commits/94777e32b1c536a6f8e3e2a97813dfa46cd75ef9", "message": "[maven-release-plugin] prepare release 1.17-rc1"}, {"url": "https://api.github.com/repos/apache/tika/commits/b071ab15e6f85ac200c01e7159634f054cdc932e", "message": "add missing license headers.  THANK YOU RAT!"}, {"url": "https://api.github.com/repos/apache/tika/commits/f983eb41766331395655a372584255023f3fd049", "message": "Update CHANGES.txt for 1.17 release."}, {"url": "https://api.github.com/repos/apache/tika/commits/f57e0e78c3882c5003cf15b18375a334944d24dd", "message": "TIKA-2521"}, {"url": "https://api.github.com/repos/apache/tika/commits/90d624588483f379180c812b7235bb2222be9c2e", "message": "TIKA-2483 -- add in all children of zip and tar to prevent overwriting of\nchild file types by the PackageParser.  Ensure that our semi-manual list\nis updated when there are changes to TikaConfig."}, {"url": "https://api.github.com/repos/apache/tika/commits/95baca2b58538ec1d75fc5b6c80fd06b7eebb7dc", "message": "TIKA-2519 clean up, fix bug in MultiThreadedTikaTest files that failed to prevent\nfiles that caused exceptions; revert new ChmBlockInfo() to private"}, {"url": "https://api.github.com/repos/apache/tika/commits/2169cae44277a18430e4de462b4ae5b1dfb8956b", "message": "Fix thread-safety in ChmExtractor (TIKA-2519)."}, {"url": "https://api.github.com/repos/apache/tika/commits/6b2b626f61cf95c7a92fe0687e50855a2cc0d42b", "message": "TIKA-2503 upgrade to httpcomponents 4.5.4"}, {"url": "https://api.github.com/repos/apache/tika/commits/e83844cd346ab387b68c97fd38fd18dda80e6c99", "message": "TIKA-2516 upgrade to cxf 3.0.16"}, {"url": "https://api.github.com/repos/apache/tika/commits/ac9f24e261e18afe0b43b577aafa59313552d386", "message": "Merge remote-tracking branch 'origin/master'"}, {"url": "https://api.github.com/repos/apache/tika/commits/88b93c1e14538c543eeac3452cca2bffa28a29db", "message": "TIKA-2516 upgrade to cxf 3.0.13"}, {"url": "https://api.github.com/repos/apache/tika/commits/a047fa945c033666723cd0f18c536c1d56cac436", "message": "TIKA-2510, correct fix. Only add to seen/handledTarget _after_ processing."}, {"url": "https://api.github.com/repos/apache/tika/commits/72c4e33626118d563b02c151cb852141e367d585", "message": "Update test and add note in release notes.  Many thanks, shrike! This closes 213."}, {"url": "https://api.github.com/repos/apache/tika/commits/2e274143c15a400f57d80335ad5bff367aae6c9b", "message": "Merge branch 'shrike-fix-oom-when-parsing-large-pdfs'"}, {"url": "https://api.github.com/repos/apache/tika/commits/33bf39f374ecfeedb4776893e15e7a85000a1a56", "message": "Merge branch 'fix-oom-when-parsing-large-pdfs' of https://github.com/shrike/tika into shrike-fix-oom-when-parsing-large-pdfs"}, {"url": "https://api.github.com/repos/apache/tika/commits/ef3fc7bd4de8856038bf31eb0a3dddb343f52d28", "message": "TIKA-2512 add underline/strikethrough extraction for docx and pptx in SAX-based parsers"}, {"url": "https://api.github.com/repos/apache/tika/commits/6fa83ffd835f5af7dd813213776933a5080c56b6", "message": "clean up imports, update unit tests to use assertContains,\nand confirm that <strike> in xhtml doesn't add spaces\nin extracted text."}, {"url": "https://api.github.com/repos/apache/tika/commits/ce4d94888557a08f0535038e1586f235af0065b3", "message": "TIKA-2511 Cache TikaConfig in EmbeddedDocumentUtil for faster processing\nof files with lots of embedded files."}, {"url": "https://api.github.com/repos/apache/tika/commits/d4fd659ac5c3070104a85df4a535afe570b08a0e", "message": "TIKA-2510 -- Extract media files from ooxml"}, {"url": "https://api.github.com/repos/apache/tika/commits/7d83b86c9d3e7a749c0dd2adb52325c35fb99c51", "message": "TIKA-2504 exclude dependency on old vfs2 to remove vulnerability from plexus-utils"}, {"url": "https://api.github.com/repos/apache/tika/commits/ff5d065f902e66944f1b91a950c0ba288aa615e9", "message": "TIKA-2034 upgrade xmpcore"}, {"url": "https://api.github.com/repos/apache/tika/commits/06486c8548daf5f9ba588da4e88e3da82a429e70", "message": "TIKA-2483 -- revert loading of mime repository in PackageParser from TIKA-2311 to avoid NPE in ForkParser"}, {"url": "https://api.github.com/repos/apache/tika/commits/b19c2d7d769fda84378108d26023852ee6abdb6c", "message": "TIKA-2502 -- rollback until we can figure out how to get the upgrade working\nwith our OSGi bundle."}, {"url": "https://api.github.com/repos/apache/tika/commits/be434b1e2c999f2b42089874894bfb2dd6c3f762", "message": "remove unused dependency"}, {"url": "https://api.github.com/repos/apache/tika/commits/1b48d73e41f6041c31ff396194ee37b5afceebae", "message": "TIKA-2486 upgrade metadata-extractor to avoid CVE in xmp-core to 2.10.1"}, {"url": "https://api.github.com/repos/apache/tika/commits/f0b6a17e5ae8b47a5b19c068e853d156775754de", "message": "TIKA-2503.  Need to confirm this doesn't break anything"}, {"url": "https://api.github.com/repos/apache/tika/commits/780ab0c71b7bce24a3c2bb96b995964395fffece", "message": "  * Upgrade to OpenNLP 1.8.3 (TIKA-2502)."}, {"url": "https://api.github.com/repos/apache/tika/commits/18deefa3132c58f3ab485fb4a54d1f7adee1cfdd", "message": "Upgrade to Jackson 2.9.2 (TIKA-2501)."}, {"url": "https://api.github.com/repos/apache/tika/commits/9c2e1b9d839cffbc0820b789ffdd17a9a0b10759", "message": "TIKA-2488 -- catch potential npe in getting attachment's inputstream"}, {"url": "https://api.github.com/repos/apache/tika/commits/04b0837700e7d0ecc337a50ca99d2a063978a58b", "message": "TIKA-2492 -- exclude pdfbox debugger from tika-bundle"}, {"url": "https://api.github.com/repos/apache/tika/commits/66be8e751d0a5f90ec0645b1585dd68f0b75dcd5", "message": "TIKA-2492 -- exclude pdfbox debugger, but get it right this time."}, {"url": "https://api.github.com/repos/apache/tika/commits/dfb71874d5159f1d82502533ed71cb1ac187e831", "message": "TIKA-2492 -- exclude pdfbox debugger"}, {"url": "https://api.github.com/repos/apache/tika/commits/88a5e5179f4104c8e4f8e33a58753efb06fc3139", "message": "TIKA-2490 and TIKA-2491 -- turn off initializable problem stderr warnings\nin tika-app, confirm that configuration of initializable problems\nworks from an input file and allow for a tika-config.xml file\nwithout specifying a classloader"}, {"url": "https://api.github.com/repos/apache/tika/commits/eae10025370a54bb4ee311265e0c48e3a5e85c14", "message": "allow for greater leniency in failure to load resources from the network"}, {"url": "https://api.github.com/repos/apache/tika/commits/93411f42cc52b2432586d90c22e769a5c3cb15bb", "message": " TIKA-2489 -- upgrade to PDFBox 2.0.8"}, {"url": "https://api.github.com/repos/apache/tika/commits/c009dc71cc8428e0a752100af7e9d18d7e5e3096", "message": " TIKA-2485 -- Allow configuration of markLimit in EncodingDetectors via tika-config.xml"}, {"url": "https://api.github.com/repos/apache/tika/commits/ff481b25dd7f141f55907ce194b9bc2c77fc7069", "message": "TIKA-2478 -- rfc822 parser should handle alternative parts as\nthe Outlook parser does.  Added parameter to allow for legacy\nbehavior in RFC822Parser and a parameter to \"include all alternatives\"\nto the OutlookParser."}, {"url": "https://api.github.com/repos/apache/tika/commits/877d62125dc6c670351eb84fc3422ed347db457a", "message": "update a unit tests to use the RecursiveParserWrapper. This closes 205."}, {"url": "https://api.github.com/repos/apache/tika/commits/a01163de9784cff77733262dad46140e83eb6e11", "message": "Merge branch 'mattcg-patch-2'"}, {"url": "https://api.github.com/repos/apache/tika/commits/b5f5403fb150f2a290fe1cfa10a6fe572b1dd50a", "message": "Merge branch 'master' into patch-2"}, {"url": "https://api.github.com/repos/apache/tika/commits/96a3502de309df863fcf37897466766e62d4e9a7", "message": "update some unit tests to use the RecursiveParserWrapper"}, {"url": "https://api.github.com/repos/apache/tika/commits/6fc2b7e7ffdd9ab4ffd4780ac24e9018292f066c", "message": "Merge branch 'aarjavp-TIKA-1788'"}, {"url": "https://api.github.com/repos/apache/tika/commits/1f28f464e91300cfd50f881ac37fd6d467d5dc7a", "message": "Merge branch 'TIKA-1788' of https://github.com/AarjavP/tika into aarjavp-TIKA-1788"}, {"url": "https://api.github.com/repos/apache/tika/commits/ad23d84f88abe6e540e989c988142f1ca0c876a7", "message": "TIKA-2469 -- narrow mime detection for ms-owner files and add detection for nls files."}, {"url": "https://api.github.com/repos/apache/tika/commits/94850f2e7c7d3df6a06a924fc6d643c0f6181643", "message": "TIKA-2475 mods and some new tests/cleanup for CharsetDetector.\nThis closes #210."}, {"url": "https://api.github.com/repos/apache/tika/commits/d5d739c237c677c49d64b3766700ce506c5982a1", "message": "Merge branch 'seanstory-TIKA-2475'"}, {"url": "https://api.github.com/repos/apache/tika/commits/40e99f986f9cd8ab390f189a484c42e81994a911", "message": "Merge branch 'TIKA-2475' of https://github.com/seanstory/tika into seanstory-TIKA-2475"}, {"url": "https://api.github.com/repos/apache/tika/commits/f444fd784b99b181cd7bd54cdec9fbd132b4ef93", "message": "add tests for xml vulnerabilities.  More work remains on entity expansion..."}, {"url": "https://api.github.com/repos/apache/tika/commits/2748538fbb66fa0bd9c0f5f18c87826260dcd227", "message": "TIKA-2268 -- add more reports and fix div by 0 bug"}, {"url": "https://api.github.com/repos/apache/tika/commits/5d410966d3de971adfc7f702e5878d7960433a75", "message": "prevent div by 0 exception in profile-reports.xml"}, {"url": "https://api.github.com/repos/apache/tika/commits/c54efd8b2f319c9c1547b293a5dd2fe80be564fa", "message": "TIKA-2470 -- fix...add back namespace aware"}, {"url": "https://api.github.com/repos/apache/tika/commits/0e38f9419121f08117283e1876e8abd02b2ab52f", "message": "TIKA-2470 -- modernize DocumentBuilderFactory security for Java 9"}, {"url": "https://api.github.com/repos/apache/tika/commits/ac259320057d8b7a8937dc5ee183b3a5c346a3bc", "message": "TIKA-2466 Remove JAXB for easier use with Java 9 via Robert Munteanu."}, {"url": "https://api.github.com/repos/apache/tika/commits/384e97156c5c5bf54d54b452c1783b7c4e5df068", "message": "make strawman app driver actually work.  Add ability to specify a list of files."}, {"url": "https://api.github.com/repos/apache/tika/commits/015c695c7d5a4549c26be247497559d03769f1e4", "message": "TIKA-2429 -- upgrade to POI 3.17, and get it right in tika-eval"}, {"url": "https://api.github.com/repos/apache/tika/commits/f16bd0e2dc8b86fc3cc58b9a80dc7544d549651d", "message": "TIKA-2429 -- upgrade to POI 3.17, last version of POI that runs on Java < 1.8"}, {"url": "https://api.github.com/repos/apache/tika/commits/2e8d45a54852d2fffcea779824b16357b1375d23", "message": "TIKA-2465 -- add epub"}, {"url": "https://api.github.com/repos/apache/tika/commits/af4ea8a393b904658d91a71f3c18598066761c87", "message": "TIKA-2465 -- make sure to include slides for SAX PPTX parser"}, {"url": "https://api.github.com/repos/apache/tika/commits/c0c2eafe46224e5c316f2dede395308930a5ec0d", "message": "TIKA-2467 refactor creation/configuration of XML parsers/factories/readers\nto be static methods."}, {"url": "https://api.github.com/repos/apache/tika/commits/1b951f262d3a552d63a7ac75074fff791ce9d0dd", "message": "improve docs for scope of these tests"}, {"url": "https://api.github.com/repos/apache/tika/commits/92fe9b88ffe16efea47ebbbf88dbf504d7cd7bb6", "message": "Merge remote-tracking branch 'origin/master'"}, {"url": "https://api.github.com/repos/apache/tika/commits/ed0574bad50b25c99d9d8c9bbf0789985f4e84b9", "message": "TIKA-2465 -- scope catch/fail more finely"}, {"url": "https://api.github.com/repos/apache/tika/commits/99abe4e26c5340feef7290745aec0b5df7bde05b", "message": "TIKA-2465 -- scope catch/fail more finely"}, {"url": "https://api.github.com/repos/apache/tika/commits/f3111889082f796ee22cfe64955f0222d0f8b2c6", "message": "TIKA-2465 -- add explicit unit tests for xxe vulnerabilities"}, {"url": "https://api.github.com/repos/apache/tika/commits/d1a8bff9faacb828a1039f7cc2c7f9e1f1d5e3fd", "message": "TIKA-2459 -- fix special character handling"}, {"url": "https://api.github.com/repos/apache/tika/commits/582083e003efe45bd9e2e7a624a4177c9f1ddc50", "message": "Merge remote-tracking branch 'origin/master'"}, {"url": "https://api.github.com/repos/apache/tika/commits/26d6e0d4e6822974d3e1f1cba90e0070ab6dfe30", "message": "further refinement on PR-201"}, {"url": "https://api.github.com/repos/apache/tika/commits/e41c129dfe7323b6f58aef2a3eed5167cc16b014", "message": "Duh...further refinement on PR-201"}, {"url": "https://api.github.com/repos/apache/tika/commits/083f7b860bd0cb8ff5d13120d808e0c77ce05999", "message": "Further refinement on PR-201"}, {"url": "https://api.github.com/repos/apache/tika/commits/82ac81bf133f507b3c20c6046d338282ba3b6904", "message": "Merge pull request #201 from boegel/stderr_vs_empty_string\n\ndirectly compare stderr to empty string in testRedirectionOfStreams to obtain more meaningful messages if test fails"}, {"url": "https://api.github.com/repos/apache/tika/commits/8000cfec02a0c872241a9bfe90c21675b9118054", "message": "TIKA-2451 - Extract number of tiffs in a multi-page tiff (TIKA-2451); many thanks to Mike Cantrell for supplying a test file."}, {"url": "https://api.github.com/repos/apache/tika/commits/87e483a7643db45613e6bcc3d9517026db78a097", "message": "Better to fix the .mv.db than to complain to the user."}, {"url": "https://api.github.com/repos/apache/tika/commits/3eff3ac86cb826faf76d98fb80147c28a4eb7562", "message": "TIKA-2454: cleanup unused TEXT_PARSER thanks to Matthew Caruana Galizia"}, {"url": "https://api.github.com/repos/apache/tika/commits/e0ff3ebff559bcdad690498d40898d426c0b2b02", "message": "TIKA-2454: don't process the htmlbody.  There could be encoding conflicts.  Fallback to what we were doing...just process text."}, {"url": "https://api.github.com/repos/apache/tika/commits/83f1afae3db65af966b13e6cc6dae3872aef630f", "message": "TIKA-2454: add OverrideDetector and allow PSTParser to specify body content type as text or html -- to avoid incorrect auto-detection of rfc/mbox, etc."}, {"url": "https://api.github.com/repos/apache/tika/commits/a1533977852307c5095efaebfcc5a896d914a57c", "message": "TIKA-2450 -- AutoDetectParser should throw a ZeroByteFileException for zero-byte files after detection on the file extension."}, {"url": "https://api.github.com/repos/apache/tika/commits/70de289b865043bab98a33e268e80e3ffce9ecee", "message": "Merge remote-tracking branch 'origin/master'"}, {"url": "https://api.github.com/repos/apache/tika/commits/5638ebc0db0b88341ba663d5ba12eebbe2925240", "message": "TIKA-2448: Extract phonetic runs in docx with experimental SAX parser"}, {"url": "https://api.github.com/repos/apache/tika/commits/74574e38cb2f53395c185742928052d17b181b5a", "message": "TIKA-2440 -- extract phonetic runs from xls and allow users to turn off extraction of phonetic runs in both xls and xlsx."}, {"url": "https://api.github.com/repos/apache/tika/commits/87033d62fd2c55a47c858a949d93b35725ff2d2b", "message": "Add unit test for PR-202 submitted by Matthew Caruana Galizia: https://github.com/apache/tika/pull/202"}, {"url": "https://api.github.com/repos/apache/tika/commits/921949cd239f67fce97d0f9ee004a72e15f3f1c1", "message": "Merge branch 'mattch-patch-1'"}, {"url": "https://api.github.com/repos/apache/tika/commits/79c52ed71b0928cabf0cc351167da9dfe954ed0f", "message": "TIKA-2434 add headless mode to tika-batch"}, {"url": "https://api.github.com/repos/apache/tika/commits/20a0cd71139cdbc5ecaeedb59d62af57c80b0eac", "message": "add alternate reason message to skip test"}, {"url": "https://api.github.com/repos/apache/tika/commits/10baddcc15501c196dccf956463e607d9973c403", "message": "TIKA-2374 and TIKA-2434 - roll back extracting inline images for pdfs in tika-app to just -z option"}, {"url": "https://api.github.com/repos/apache/tika/commits/2bcc0a7a791227fe50ee5707f3d519cf60160825", "message": "TIKA-2268 -- add report for common_tokens/alphabetic tokens"}, {"url": "https://api.github.com/repos/apache/tika/commits/e5526b559e549a7b6039844dc237b03579490a41", "message": "Merge branch 'krichter722-npe'"}, {"url": "https://api.github.com/repos/apache/tika/commits/dada2b757ec3292ab49a0e75b60b5b1211fd801d", "message": "Merge branch 'npe' of https://github.com/krichter722/tika into krichter722-npe"}, {"url": "https://api.github.com/repos/apache/tika/commits/4e03f90cf0a20375819f33371ec094386a744f36", "message": "TIKA-2438 -- ooxml locale should be set via POI's LocaleUtil.  Fix unit\ntests to be robust in different locales.  Many thanks to Karl Richter for\nraising this issue."}, {"url": "https://api.github.com/repos/apache/tika/commits/1bf3a7e8d19b6d2def9ef8ae578504fffd31237f", "message": "TIKA-2431 -- upgrade to PDFBox 2.0.7"}, {"url": "https://api.github.com/repos/apache/tika/commits/00221ad34a18f501d967979288236b98bd4cec58", "message": "TIKA-2042 -- fix typo."}, {"url": "https://api.github.com/repos/apache/tika/commits/3f86a6bb6940c3641e79390d97874d4e0766b065", "message": "TIKA-2430 -- remove dev ignore emf"}, {"url": "https://api.github.com/repos/apache/tika/commits/3de4c4f1774898f10741f8e9649c8e78afa6e3c0", "message": "TIKA-2430 -- allow devs to fuzz embedded files individually"}, {"url": "https://api.github.com/repos/apache/tika/commits/f3acaed38361c35d940ce2742a18b1eec9d7c4f2", "message": "Fix conflicts.  This closes #193.  Thank you, Javen!"}, {"url": "https://api.github.com/repos/apache/tika/commits/13ebacfc3ee564b60bef50b20312a866dc18937b", "message": "Fix conflicts.  This closes #193"}, {"url": "https://api.github.com/repos/apache/tika/commits/12cce58747b7d7d989038195ad39c5c69e75a8a6", "message": "Merge branch 'onealj-patch2'"}, {"url": "https://api.github.com/repos/apache/tika/commits/71a80c99e9052d7ad918b18d4714e05fb32ca288", "message": "Merge branch 'patch-2' of https://github.com/onealj/tika into onealj-patch2"}, {"url": "https://api.github.com/repos/apache/tika/commits/898946e4aee581e57c43f4692fb95d6c0d1e336b", "message": "Merge branch 'patch-1' of https://github.com/onealj/tika"}, {"url": "https://api.github.com/repos/apache/tika/commits/9869851d67744bc555914c5c447eb66e155c1c2c", "message": "TIKA-2430 -- add a capability to allow devs to easily run parsers against randomly corrupted files."}, {"url": "https://api.github.com/repos/apache/tika/commits/068c87cc11c338c87576bf8be25bff736539ccd6", "message": "Merge remote-tracking branch 'origin/master'"}, {"url": "https://api.github.com/repos/apache/tika/commits/c23c64866b79df5abd011345e922ee1f647bca9a", "message": "update tag"}, {"url": "https://api.github.com/repos/apache/tika/commits/9f0144c248c210c03b7a3f3afa7885211dde3b52", "message": "TIKA-2426 -- fix locale-sensitive test for xlsb"}, {"url": "https://api.github.com/repos/apache/tika/commits/6aa4bc6a038516fbd8e8adfb583723c1beb4bb16", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/apache/tika/commits/b99f344f6d462f1ef5cfd0e864703a2d42f8752e", "message": "[maven-release-plugin] prepare release 1.16-rc1"}, {"url": "https://api.github.com/repos/apache/tika/commits/2af8fb1e2be09dff93d884b9cb2c47cdc3d73f69", "message": "revert to 1.16-SNAPSHOT; third time is the charm"}, {"url": "https://api.github.com/repos/apache/tika/commits/64b59fe85db5a68e28d2c91adfc048f82613b9c3", "message": "revert to 1.16-SNAPSHOT; third time is the charm"}, {"url": "https://api.github.com/repos/apache/tika/commits/75944e56287738c4dd89b64913a9f2fc3ca402a5", "message": "Merge remote-tracking branch 'origin/master'"}, {"url": "https://api.github.com/repos/apache/tika/commits/0c6e1ad83f6e3f7f050e708514e523107c847f8e", "message": "not sure why pom.xml.releaseBackup files are now included after last commit."}, {"url": "https://api.github.com/repos/apache/tika/commits/19633224179eee6701027dd6fa85b591c7be37c0", "message": "[maven-release-plugin] prepare release 1.16-rc1"}, {"url": "https://api.github.com/repos/apache/tika/commits/f7fe12e2060c47c6fb7d41979fee35b3ec6a10d8", "message": "exclude models from src.zip"}, {"url": "https://api.github.com/repos/apache/tika/commits/e9c8794c368692ae47e44b9ce35274e0c796359e", "message": "roll back to 1.16-SNAPSHOT"}, {"url": "https://api.github.com/repos/apache/tika/commits/23c98cdd8f98d95ca22afa5c84d18e6a54ed307f", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/apache/tika/commits/d3539142e37ba736692241b3507773320e632ab2", "message": "[maven-release-plugin] prepare release 1.16-rc1"}, {"url": "https://api.github.com/repos/apache/tika/commits/304084979e8e91097fb82f801fd4696465a223be", "message": "Update CHANGES.txt for 1.16 release."}, {"url": "https://api.github.com/repos/apache/tika/commits/632f52db4713977aa93504517e57b8afe86e6e91", "message": "TIKA-1988 -- allow for errors downloading models"}, {"url": "https://api.github.com/repos/apache/tika/commits/f776c2479f8e7ab1134669fad1e25fd38bd82466", "message": "TIKA-2399 exclude jj2000 because of potential license problems with ASL 2.0"}, {"url": "https://api.github.com/repos/apache/tika/commits/58a602f7c9e4a5666a33726767741be73e10cd09", "message": "TIKA-1988 -- allow for failure to copy age recognition models"}, {"url": "https://api.github.com/repos/apache/tika/commits/0f6449fdf025ab81c88245026dc058208e6866cb", "message": "Merge remote-tracking branch 'origin/master'"}, {"url": "https://api.github.com/repos/apache/tika/commits/05f8f89fe6b531caacb8b39d1f344e96db834a39", "message": "TIKA-2389 -- add static checks to PDFParser, Tesseract, SQLLite to make sure that\npotential warnings only happen once.  Rework TikaCLI to build parser only\nonce based on tikaConfig so that initialization warning settings actually work."}, {"url": "https://api.github.com/repos/apache/tika/commits/158675def02810d116e7cdab8409c121a88e77eb", "message": "TIKA-2298 -- skip test if no network connectivity.  Should rework for\nmore elegant solution at some point."}, {"url": "https://api.github.com/repos/apache/tika/commits/9dc8e21ea6e352dfe73f6b77d344a7d7b7efca83", "message": "small cleanups to sql"}, {"url": "https://api.github.com/repos/apache/tika/commits/4ed69a8fa30783d593b9cb60a30414abb5480a3f", "message": "TIKA-2420 -- protect against unsupportedoperationexception with query.toSQLString()\non unknown query types."}, {"url": "https://api.github.com/repos/apache/tika/commits/621ded89fd909380ff5c3d2c5d13d73dd6e5b982", "message": "TIKA-2089 -- clean up try/catch with autocloseable"}, {"url": "https://api.github.com/repos/apache/tika/commits/24b54af4d74ffef994cc5708b30bd516f01b346f", "message": "Merge remote-tracking branch 'origin/master'"}, {"url": "https://api.github.com/repos/apache/tika/commits/cb7b84a48aa7f500c08733b06fc78e6c1f0bba14", "message": "TIKA-2089 - bug fix, check for nulls"}, {"url": "https://api.github.com/repos/apache/tika/commits/9a312f2d0c764a2dcb39dba7846618018ceb3f2f", "message": "Revert upgrade of libpst to 0.9.3 back to 0.8.1"}, {"url": "https://api.github.com/repos/apache/tika/commits/dd2149ac1381ca4196571a28f134a6b347cca260", "message": "Revert upgrade of libpst to 0.9.3 back to 0.8.1"}, {"url": "https://api.github.com/repos/apache/tika/commits/a7b5705bb80dbaa525cd907ed50fbda7bf7126a6", "message": "Upgrade dependencies in tika-eval TIKA-2416"}, {"url": "https://api.github.com/repos/apache/tika/commits/87d8f55849a81a6eea57e40abd8f52977f260ed1", "message": "Upgrade gson and libpst (TIKA-2414 and TIKA-2415)."}, {"url": "https://api.github.com/repos/apache/tika/commits/d19200463efba13b41c6122f7fcd6b7053e5b0fa", "message": "Upgrade gson"}, {"url": "https://api.github.com/repos/apache/tika/commits/04cc72cd77c4f0d618f6dea7981779fae9807518", "message": "TIKA-2313 upgrade mime4j to 0.8.1"}, {"url": "https://api.github.com/repos/apache/tika/commits/15d6078efa4a8f3671c24871fe12c090c55105d8", "message": "TIKA-2312 upgrade provided xerial version"}, {"url": "https://api.github.com/repos/apache/tika/commits/bfedea8fd871d20db93af6b493d82a4b10ea4171", "message": "TIKA-2368 -- move to different package to avoid split package warning"}, {"url": "https://api.github.com/repos/apache/tika/commits/05e334ad98ae0d7869a7988ef8ffe4d0e89ea214", "message": "TIKA-2411 -- clean up unneeded dependencies"}, {"url": "https://api.github.com/repos/apache/tika/commits/95c515db2f303db049c79a7bd0c260ec559186b1", "message": "TIKA-2089 -- extract macros from ppt"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/281349089", "body": "Thank you for opening this. \r\n\r\nWould you be able to break this into 2 separate pull requests: one for the PDFParser modfications, and one for the mods to tika-app's gui. \r\n\r\nOn the PDFParser mods, is there any way to make the syntax similar to what we get from Tesseract's hocr setting?\r\n\r\nOn an unrelated note, as I just discovered on tika-eval, the Lucene 6.x branch requires Java 8.  We're trying to keep Tika at Java 7 for now, so please downgrade Lucene to 5.5.3.\r\n\r\nFinally,  can you also open issues on our jira for these two pull requests?\r\n\r\nThank you!", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/281349089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/281433987", "body": "> On the PDFParser mods, is there any way to make the syntax similar to what we get from Tesseract's hocr setting\r\n\r\n@epugh would this be of use to you?  Would you need/want same format as hocr?\r\n\r\nThis is what hocr looks like:\r\n[sliced_invoice.pdf.hocr.txt](https://github.com/apache/tika/files/791102/sliced_invoice.pdf.hocr.txt)\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/281433987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/290085215", "body": "This should work.  I probably won't have a chance to look at this until Friday or possibly early next week.  I'm sorry for my delay.  Thank you for contributing this!  If another Tika dev wants to take this, please do!", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/290085215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/290122309", "body": "@grossws have at it!  Please don't wait for me.  Thank you!", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/290122309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/290123368", "body": "My two cents: \r\n\r\n1. +1 on moving detection to mimetypes.xml.  \r\n2. If tsd files can contain/wrap other files, we should use an embedded extractor for the wrapped content.\r\n3. The unit tests should test for content, not just fail on exception.\r\n\r\nOther than that, thank you!", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/290123368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/20717313", "body": "Let us know what else you find!  Thank you for bringing this to our attention.", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/20717313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/comments/21109698", "body": "Thank you, and sorry, that's the start of TIKA-1879.  Will fix those when I commit that.", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/21109698/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/64898043", "body": "This should actually return something, no?  :)\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/64898043/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/125791986", "body": "commons.compress.version is set in tika-parent's pom.  Reference that here ${commons.compress.version} so we don't have to worry about coordination/conflicts", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/125791986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "vrivanov": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/fb93ab1d8ffd19cdc638f1599c672cc8d5a089c1", "message": "Fix OOM when parsing very large PDFs\n\nExpose a maxMainMemoryBytes property in the PDFParserConfig which the\nPDFParser uses to construct a MemoryUsageSetting and pass that to\nPDDocument.load"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chrismattmann": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/946614badc212eab8cd59a437ed28f07b14c2fc4", "message": "Update changes with TIKA-2400 / GH-208"}, {"url": "https://api.github.com/repos/apache/tika/commits/3ee0aff615f49ae9c2678afa2c27a1737a329dcb", "message": "Remove docker files now present in https://github.com/USCDataScience/tika-dockers"}, {"url": "https://api.github.com/repos/apache/tika/commits/91ef9a972783b8638c2f31f904d5a0b9fdfa6074", "message": "Merge pull request #208 from ThejanW/master\n\nFix for TIKA-2400 Standardizing current Object Recognition REST parsers"}, {"url": "https://api.github.com/repos/apache/tika/commits/62d56653e676127bb4d8de39f383feadd513bddf", "message": "Merge pull request #207 from armathur/patch-1\n\nTIKA-2464: No PIL found when building docker file 'InceptionVideoRestDockerfile'"}, {"url": "https://api.github.com/repos/apache/tika/commits/5b57ae4d5218ec7af6388c6d5d51984566fc2511", "message": "Merge branch 'gsoc17'"}, {"url": "https://api.github.com/repos/apache/tika/commits/79f4b4e3883e53f54c9116aedd44cab1a13c8b3c", "message": "fix conflicts in CHANGES.txt during merge"}, {"url": "https://api.github.com/repos/apache/tika/commits/516bbaa92da635248b726c2d5515b9c830682686", "message": "Merge pull request #187 from buggtb/master\n\nAdd Snap scripts to codebase"}, {"url": "https://api.github.com/repos/apache/tika/commits/aa12fc114ecc859117f898661bc2ac1c61cbb806", "message": "Merge pull request #174 from q-centrix/TIKA-2332\n\nTIKA-2332 Add SNOMED codes to server output"}, {"url": "https://api.github.com/repos/apache/tika/commits/6564bc8fd6c665e5a08cce251a735e51677a96fd", "message": "Merge pull request #203 from boegel/bump_timeout\n\nbump read timeout for downloading file to 60s (1min) in tika-dl"}, {"url": "https://api.github.com/repos/apache/tika/commits/c6b6b1733c584a7e0e81434ec377a26b7b3a26a0", "message": "record changes for TIKA-2265."}, {"url": "https://api.github.com/repos/apache/tika/commits/0f57ea8d3df5b8fe757b50999a0cf6738baec64a", "message": "Merge branch 'TIKA-2355' of https://github.com/smadha/tika"}, {"url": "https://api.github.com/repos/apache/tika/commits/0e1abd2c0751b9e4945f025c6d9695d7967e520e", "message": "Merge branch 'TIKA-2355' of https://github.com/smadha/tika into gsoc17"}, {"url": "https://api.github.com/repos/apache/tika/commits/a288bce8ef3fa225a4c1adffa1e9f023353a16ec", "message": "Merge branch 'master' into gsoc17"}, {"url": "https://api.github.com/repos/apache/tika/commits/b422edafa74dc2d9efc4c8d01d59fd468e915840", "message": "Merge branch 'master' into gsoc17"}, {"url": "https://api.github.com/repos/apache/tika/commits/1941a2901bd34dcc43843115ea450f00b097c757", "message": "Record changes related to Image Captioning."}, {"url": "https://api.github.com/repos/apache/tika/commits/30b27aba5c2149978ecf9395b0107011dfee3ff1", "message": "Merge pull request #194 from onealj/patch-5\n\nSUPPORTED_TYPES is immutable"}, {"url": "https://api.github.com/repos/apache/tika/commits/8af9c968d1a93f118f81cb207559abcf00c27c24", "message": "Merge pull request #195 from kinow/fix-typo-and-indentation\n\nFix a typo in log message, and adjust code indentation"}, {"url": "https://api.github.com/repos/apache/tika/commits/65ef6d88794e8aaba1d818dc7b113a42098f55a2", "message": "record change for TIKA-2262"}, {"url": "https://api.github.com/repos/apache/tika/commits/56ab7b2305aa77c97cdcade9f843e905ebcfc446", "message": "- handle exceptions"}, {"url": "https://api.github.com/repos/apache/tika/commits/2eabced07caef66f7d278e3212f53aff6e581746", "message": "Make sure tests get run if Tensorflow is available via Docker or script"}, {"url": "https://api.github.com/repos/apache/tika/commits/e9793d318005fe3c5d9cc4846bf2c77453822d98", "message": "- ignore pydevproject"}, {"url": "https://api.github.com/repos/apache/tika/commits/b36a5b7a308a583206aabf0273ac5362ae08ccc6", "message": "- explicitly set Locale in String.format"}, {"url": "https://api.github.com/repos/apache/tika/commits/2e7a4f5a976ad07284b83b9bc0e61ce63349cac7", "message": "Merge https://github.com/apache/tika into gsoc17"}, {"url": "https://api.github.com/repos/apache/tika/commits/36d742eb99be7ee9167333d369f4eca5a7fd9ce4", "message": "Merge pull request #189 from ThejanW/master\n\nFix for TIKA-2262: Supporting Image-to-Text (Image Captioning) in Tika"}, {"url": "https://api.github.com/repos/apache/tika/commits/f94616a8df70b16c0262afb715ff5c58dfcc0441", "message": "add Tika-NLP to build"}, {"url": "https://api.github.com/repos/apache/tika/commits/e07d9e1de077c2f332094ce5125d1f4cf779d80d", "message": "- add Tika-NLP module\n- move AgeRecogniser out of tika-parsers\nTIKA-1988"}, {"url": "https://api.github.com/repos/apache/tika/commits/9be1785e948822c58138bc4b660ec4421ee26e5d", "message": "Fix Felix bundle rules for Age Prediction Parser OGSI bundle. TIKA-1988."}, {"url": "https://api.github.com/repos/apache/tika/commits/327ae0b0cbfc205a2733590dc2668f2523ac2732", "message": "Record change for TIKA-1988 contributed by msharan@usc.edu"}, {"url": "https://api.github.com/repos/apache/tika/commits/9ad510cc67871e266aece1684b21a94b524517c3", "message": "Use mock class for testing."}, {"url": "https://api.github.com/repos/apache/tika/commits/3c2595d330b1d7840f94c6cda1c0c79bd6aa7a74", "message": "Automatically copy the Age models to the model dir so that you can have them available for classpath tests."}, {"url": "https://api.github.com/repos/apache/tika/commits/6ff1147e63301e7847d091104253b0171f15bc02", "message": "Fix pom to work with Age Recogniser."}, {"url": "https://api.github.com/repos/apache/tika/commits/ce4fdda61d093ea8796833a1d21a6d9d22603ae6", "message": "Use static class.getResource() instead of getClass().getClassLoader()"}, {"url": "https://api.github.com/repos/apache/tika/commits/f8cfa4b980e9eda2883070588542dec9abfc4532", "message": "Fix typo."}, {"url": "https://api.github.com/repos/apache/tika/commits/5a653d00da6bbeb7713d230c89c8bd5a33271098", "message": "formatting in ModelGetter."}, {"url": "https://api.github.com/repos/apache/tika/commits/2d48094bf1aef166fb0098c42f31da07c274d700", "message": "Configure age detector based on classpath."}, {"url": "https://api.github.com/repos/apache/tika/commits/a549ec683455fa599efb828b335e542a3c57305e", "message": "Get needed OpenNLP models for age detection."}, {"url": "https://api.github.com/repos/apache/tika/commits/048dd8ee3c1e3c403c30bc509f4012da7abf348f", "message": "Fix import statement."}, {"url": "https://api.github.com/repos/apache/tika/commits/4e24a14bae8a9b4ecad7d7f398c988477f2229f2", "message": "Implement initializable interface."}, {"url": "https://api.github.com/repos/apache/tika/commits/92b7b68f7c5197d094ed905d6ddac0cb6e9e2a42", "message": "fix merge of tika-parsers/pom.xml for age predictor."}, {"url": "https://api.github.com/repos/apache/tika/commits/be02273eb1a9e6b7ff79273921b4692d07f9e54a", "message": "set config equal to the new Config object."}, {"url": "https://api.github.com/repos/apache/tika/commits/94f8b9fe5fdaebd11a99e76dd742bdc6df427389", "message": "Use ${commons.compress.version} per tballison."}, {"url": "https://api.github.com/repos/apache/tika/commits/d65c2a18b356a109f87fc98ca1976313c75c59a0", "message": "Merge branch 'TIKA-2298'"}, {"url": "https://api.github.com/repos/apache/tika/commits/b58cfcf1935d138065eb4a090ba4c1fef17ddacd", "message": "Record change for TIKA-2298: Very Deep Convolutional Networks for Large-Scale Image Recognition"}, {"url": "https://api.github.com/repos/apache/tika/commits/215c2621311fdfd64df1e34fd9febdcf7e8e96c6", "message": "Up max memory for surefire to 3GB."}, {"url": "https://api.github.com/repos/apache/tika/commits/82ab03ccee846a32d704508d623a0c8d28cdac56", "message": "Implement needed object recogniser method"}, {"url": "https://api.github.com/repos/apache/tika/commits/0b92a77720f876aad1c5988ce68e4a5a377dc423", "message": "Fix Tika Bundle error RE: tika serialization."}, {"url": "https://api.github.com/repos/apache/tika/commits/ab4ea4724e52fb5718a9d8ea86af96425fb87c7b", "message": "Merge branch 'tika-dl-me' of https://github.com/asmehra95/tika into TIKA-2298"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/46095781", "body": "forgot to add license header in test file. Have added it in.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/46095781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/46122519", "body": "Looks like the latest version of Tika 1.6 trunk has a similar capability - can you check it out? If it looks good to you, maybe we can close it out. thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/46122519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/57882343", "body": "Hi @vilmospapp there are currently conflicts here. Can you check into this?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/57882343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/57892090", "body": "I was able to solve the conflicts and merge this. Thanks @vilmospapp !\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/57892090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/57942822", "body": "@vilmospapp FYI ^^ above? Thoughts?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/57942822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58172643", "body": "Thanks @grossws so what you are saying is that since I already merged #15, we're good, and #17 can be closed? Can you and/or @vilmospapp close #17?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58172643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58175134", "body": "Hi @hlavki thanks. Can you please explain what this does? Does it add a test that exposes the bug? \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58175134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58176001", "body": "Thanks @hlavki is the solution something we can put into a patch? If so I'd be happy to help get it in to the sources.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58176001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58459077", "body": "Thanks @grossws it looks like I already merged this right?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58459077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58808604", "body": "Thanks @hlavki we can't directly include a jar in resources, is there any way to Maven-ize it?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58808604/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58823687", "body": "no worries @hlavki thank you for your great work and I appreciate it and am looking forward to what you find!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58823687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58986139", "body": "Thanks @jotomo I gave this a try and get the following failed tests:\n\n```\n-------------------------------------------------------\n T E S T S\n-------------------------------------------------------\nRunning org.apache.tika.bundle.BundleIT\n85 [main] INFO org.ops4j.pax.exam.spi.DefaultExamSystem - Pax Exam System (Version: 2.2.0) created.\nOct 13, 2014 8:00:41 PM org.ops4j.pax.url.mvn.internal.AetherBasedResolver resolve\nINFO: Resolved (org.junit:com.springsource.org.junit:jar:4.4.0) as /Users/mattmann/.m2/repository/org/junit/com.springsource.org.junit/4.4.0/com.springsource.org.junit-4.4.0.jar\nERROR: Bundle org.apache.tika.bundle [7] Error starting file:/Users/mattmann/tmp/tika/tika-bundle/target/test-bundles/tika-bundle.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.apache.tika.bundle [7]: Unable to resolve 7.0: missing requirement [7.0] osgi.wiring.package; (osgi.wiring.package=com.rometools.utils))\norg.osgi.framework.BundleException: Unresolved constraint in bundle org.apache.tika.bundle [7]: Unable to resolve 7.0: missing requirement [7.0] osgi.wiring.package; (osgi.wiring.package=com.rometools.utils)\n    at org.apache.felix.framework.Felix.resolveBundleRevision(Felix.java:3818)\n    at org.apache.felix.framework.Felix.startBundle(Felix.java:1868)\n    at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1191)\n    at org.apache.felix.framework.FrameworkStartLevelImpl.run(FrameworkStartLevelImpl.java:295)\n    at java.lang.Thread.run(Thread.java:745)\n1313 [main] ERROR org.ops4j.pax.exam.junit.JUnit4TestRunner - Exception\norg.ops4j.pax.exam.TestContainerException: java.lang.reflect.InvocationTargetException\n    at org.ops4j.pax.exam.raw.extender.intern.ProbeInvokerImpl.injectContextAndInvoke(ProbeInvokerImpl.java:118)\n    at org.ops4j.pax.exam.raw.extender.intern.ProbeInvokerImpl.findAndInvoke(ProbeInvokerImpl.java:71)\n    at org.ops4j.pax.exam.raw.extender.intern.ProbeInvokerImpl.call(ProbeInvokerImpl.java:58)\n    at org.ops4j.pax.exam.nat.internal.NativeTestContainer.call(NativeTestContainer.java:83)\n    at org.ops4j.pax.exam.spi.reactors.EagerSingleStagedReactor.invoke(EagerSingleStagedReactor.java:85)\n    at org.ops4j.pax.exam.junit.JUnit4TestRunner$2.evaluate(JUnit4TestRunner.java:259)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.ops4j.pax.exam.junit.JUnit4TestRunner.run(JUnit4TestRunner.java:86)\n    at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)\n    at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)\n    at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)\n    at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)\n    at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)\n    at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)\n    at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)\nCaused by: java.lang.reflect.InvocationTargetException\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.ops4j.pax.exam.raw.extender.intern.ProbeInvokerImpl.injectContextAndInvoke(ProbeInvokerImpl.java:112)\n    ... 27 more\nCaused by: java.lang.NullPointerException: Specified service reference cannot be null.\n    at org.apache.felix.framework.BundleContextImpl.getService(BundleContextImpl.java:458)\n    at org.apache.tika.bundle.BundleIT.testForkParser(BundleIT.java:101)\n    ... 32 more\n1518 [main] ERROR org.ops4j.pax.exam.junit.JUnit4TestRunner - Exception\norg.ops4j.pax.exam.TestContainerException: java.lang.reflect.InvocationTargetException\n    at org.ops4j.pax.exam.raw.extender.intern.ProbeInvokerImpl.injectContextAndInvoke(ProbeInvokerImpl.java:118)\n    at org.ops4j.pax.exam.raw.extender.intern.ProbeInvokerImpl.findAndInvoke(ProbeInvokerImpl.java:71)\n    at org.ops4j.pax.exam.raw.extender.intern.ProbeInvokerImpl.call(ProbeInvokerImpl.java:58)\n    at org.ops4j.pax.exam.nat.internal.NativeTestContainer.call(NativeTestContainer.java:83)\n    at org.ops4j.pax.exam.spi.reactors.EagerSingleStagedReactor.invoke(EagerSingleStagedReactor.java:85)\n    at org.ops4j.pax.exam.junit.JUnit4TestRunner$2.evaluate(JUnit4TestRunner.java:259)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.ops4j.pax.exam.junit.JUnit4TestRunner.run(JUnit4TestRunner.java:86)\n    at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)\n    at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)\n    at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)\n    at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)\n    at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)\n    at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)\n    at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)\nCaused by: java.lang.reflect.InvocationTargetException\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.ops4j.pax.exam.raw.extender.intern.ProbeInvokerImpl.injectContextAndInvoke(ProbeInvokerImpl.java:112)\n    ... 27 more\nCaused by: java.lang.AssertionError: Bundle not activated expected:<32> but was:<2>\n    at org.junit.Assert.fail(Assert.java:74)\n    at org.junit.Assert.failNotEquals(Assert.java:448)\n    at org.junit.Assert.assertEquals(Assert.java:102)\n    at org.junit.Assert.assertEquals(Assert.java:323)\n    at org.apache.tika.bundle.BundleIT.testBundleLoaded(BundleIT.java:83)\n    ... 32 more\nTests run: 7, Failures: 2, Errors: 0, Skipped: 3, Time elapsed: 1.606 sec <<< FAILURE!\n\nResults :\n\nFailed tests:   testForkParser:BundleIT.testForkParser:NativeContainer:org.apache.felix.framework.FrameworkFactory@36a9a4(org.apache.tika.bundle.BundleIT): Specified service reference cannot be null.\n  testBundleLoaded:BundleIT.testBundleLoaded:NativeContainer:org.apache.felix.framework.FrameworkFactory@36a9a4(org.apache.tika.bundle.BundleIT): Bundle not activated expected:<32> but was:<2>\n\nTests run: 7, Failures: 2, Errors: 0, Skipped: 3\n\n```\n\nAny ideas? Thanks for working on this!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58986139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/59047885", "body": "No worries @jotomo it would be great to take this to the dev@tika.apache.org - there are OSGI experts there and we may get someone to review your patch that knows what to do. Thanks for the help and efforts, regardless!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/59047885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/61375725", "body": "looks good to me @thaichat04 go for it!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/61375725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/62700707", "body": "Hi @hlavki thanks! Can you submit a new pull request that removes the close() method? I'll be happy to merge it.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/62700707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/71246148", "body": "agreed @grossws , @LukeLiush can you please reformat the code? I'm not sure exactly what changed.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/71246148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/71296277", "body": "Thanks @LukeLiush - I have an idea here. How about you create a sub-class of MimeTypes called BayesianMimeTypes and then override the methods with what you need? Also no need to put comments with /\\* [luke] */ etc. in there\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/71296277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/71593085", "body": "hey @thaichat04 did we ever merge this?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/71593085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/72330026", "body": "Thanks @thaichat04 \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/72330026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/72508927", "body": "Got it @hlavki . Can you submit an update to this pull request that implements the revert and we'll try that?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/72508927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/73344583", "body": "Thanks @LukeLiush \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/73344583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/74351149", "body": "Thank you for this patch I would love to get this integrated @tokee really appreciate it! If you get a chance to address the comments on the code I would appreciate you submitting an updated pull request.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/74351149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/74365250", "body": "thanks @tokee your updated commits are enough thanks. I will get this integrated now!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/74365250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/74365366", "body": "Hi @tokee I tried applying this patch and it seems to be failing our forbidden API checker:\n\n```\n[INFO] Scanning for API signatures and dependencies...\n[ERROR] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[ERROR]   in org.apache.tika.language.LanguageIdentifierTest (LanguageIdentifierTest.java:129)\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/74365366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/74366023", "body": "No problem, I addressed this by adding Locale to the call to String.format in the tests. Thanks @tokee !\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/74366023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/74366055", "body": "ping @hlavki any interest in closing this out?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/74366055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/75477289", "body": "Thanks @hlavki I applied your patch!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/75477289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/75919006", "body": "Thanks @grossws !\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/75919006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/83350964", "body": "Thanks @mkr !\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/83350964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/87253883", "body": "LGTM, +1 ship it! @tpalsulich \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/87253883/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/94619651", "body": "@LukeLiush this is great. Can you open up a small Pull request that cherry picks tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java and that commit? then I can resolve TIKA-1535 with that, and then please update the pull request here for 1517 to not include that part. Also, so this will work out of the box, without a model, correct?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/94619651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/96458419", "body": "Hey @LukeLiush I am going to look at merging this in the next day or so.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/96458419/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/96488558", "body": "Yes please create a new or with just the mike types change \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/96488558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/97505268", "body": "@HyperDunk can you update?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/97505268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/97678307", "body": "thanks @HyperDunk !\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/97678307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/105030778", "body": "ok @AranyaLi I refactored this into separate projects and it's a much cleaner patch. I am going to put it up on JIRA for review. Great work! I verified it!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/105030778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/108732287", "body": "thanks @jihyunoh applied your PR and merged!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/108732287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/115344287", "body": "Hi @WulfB can you suggest what this PR addresses? What problem does it address?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/115344287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/115828074", "body": "Got it. Would you be willing to file a tika jira issue to go with this request?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/115828074/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/116682723", "body": "hi @WulfB - I think this broke the build, can you see: https://builds.apache.org/job/tika-trunk-jdk1.7/771/ and take a look at the now failing tests?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/116682723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/116706545", "body": "For now, I've rolled it back until we figure it out:\n\n```\n[chipotle:~/tmp/tika1.10] mattmann% svn commit -m \"Rollback r1688087 as it seems to cause some tests to fail.\"\nSending        CHANGES.txt\nSending        tika-core/src/main/java/org/apache/tika/sax/xpath/NodeMatcher.java\nSending        tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java\nSending        tika-core/src/test/java/org/apache/tika/sax/xpath/XPathParserTest.java\nTransmitting file data ....\nCommitted revision 1688239.\n[chipotle:~/tmp/tika1.10] mattmann% \n```\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/116706545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/116864470", "body": "Thanks @jeremybmerrill see http://issues.apache.org/jira/browse/TIKA-1602. I'm asking @tballison to have a look at his govdocs tika-batch if there are no regressions I'll try and get this committed in the next 24-48 hours.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/116864470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/148470066", "body": "thanks @jeremybmerrill can you throw up a JIRA issue for this and link here? I'll get this committed today!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/148470066/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/152063314", "body": "thanks @thammegowda and @Gagravarr \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/152063314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/155483151", "body": "@thammegowda great work! See my comments and please update thank you\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/155483151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/156879711", "body": "one more minor update @thammegowda and this is ready to go!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/156879711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/156879774", "body": "@thammegowda can you also write up a quick tutorial on http://wiki.apache.org/tika/TikaAndNER ? that shows how to install Stanford NER and run this?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/156879774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/156879788", "body": "you will need wiki karma so let me know your username and I'll grant you karma.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/156879788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/157274001", "body": "done @thammegowda https://wiki.apache.org/tika/ContributorsGroup\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/157274001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/159947429", "body": "ok @cafed00d4j I significantly cleaned this up and got it working! Great initial work!\n\nSome comments:\n1. I thought we discussed using a table here. Since you have # of rows and # of cols present in the div, why not simply use tables and columns here to represent the OF and OG? (I'll fix this now).\n2. you don't have an ending div on your XHTML (I'll add a fix for this now).\n3. You don't identify in the XHTML what is the OF and what is the OG (I'll fix this now).\n4. We should probably start out with an h3 of the file name to start out the display.\n5. I get a whole bunch of NaNs before the XHTML output. Not sure where those are from but they are printed to stdout.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/159947429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/160013294", "body": "@cafed00d4j i don't get the response to 1.i. - if OF and HOG Are 1D vectors why is there a num rows, num cols?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/160013294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/160034897", "body": "Thanks @cafed00d4j so I think we can still use a table here and just do rowspan to take care of non uniform sizes - colspan isn't needed since it's always 200 right?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/160034897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/165170564", "body": "looks great @smadha I will check it out now!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/165170564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/166017172", "body": "gotcha @thammegowda you could try squashing them which may help. Or better yet, I would simply git pull https://github.com/apache/tika.git into your current branch (aka local force merge), then push to your branch's remote which should fix this.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/166017172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/190514121", "body": "looks great @manalishah please review and update per my comments. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/190514121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/190760406", "body": "fantastic job @manalishah . I will merge today!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/190760406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/194956740", "body": "can you add ALv2 license headers seems like @kkrugler missed some license headers (e.g., in AbstractTranslator, etc.) \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/194956740/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/203629538", "body": "@trevorlewis @kkrugler, I have begun merging this and going to work on getting it into master. I'm running into an issue though. I've went ahead and merged the code from `trevorlewis:TIKA-1872` however, I get this error when running mvn install (after having fixed an error that referred in tika-langdetect to the 2.0-SNAPSHOT pom instead of the 1.13-SNAPSHOT.\n\n```\n[INFO] --- clirr-maven-plugin:2.6.1:check (default) @ tika-core ---\n[ERROR] 8001: org.apache.tika.language.LanguageIdentifier: Class org.apache.tika.language.LanguageIdentifier removed\n[ERROR] 8001: org.apache.tika.language.LanguageProfile: Class org.apache.tika.language.LanguageProfile removed\n[ERROR] 8001: org.apache.tika.language.LanguageProfilerBuilder: Class org.apache.tika.language.LanguageProfilerBuilder removed\n[ERROR] 8001: org.apache.tika.language.ProfilingHandler: Class org.apache.tika.language.ProfilingHandler removed\n[ERROR] 8001: org.apache.tika.language.ProfilingWriter: Class org.apache.tika.language.ProfilingWriter removed\n```\n\nDo you know what this error is?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/203629538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/203631170", "body": "you should be able to reproduce the error by looking at https://github.com/chrismattmann/tika/tree/TIKA-1872/\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/203631170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/203648075", "body": "How do I fix it @kkrugler \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/203648075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/203683767", "body": "Ken I'm dense I don't see this error mentioned there \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/203683767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/203724567", "body": "Got it so how are you making it build on 2.x? What do I do to get it to proceed?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/203724567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/204055512", "body": "got it, that helps a lot, @kkrugler thanks\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/204055512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/204765570", "body": "@mit2nil wondering why the change here from String[] to ArrayList<String> and what that actually accomplishes?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/204765570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/206512498", "body": "@reevapp I cannot tell what changes you actually made that weren't formatting. Also I have been using this for a bit and didn't notice the behavior you state - so would love to see what you actually changed so I can review it and test it? Thanks.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/206512498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/206609387", "body": "@reevapp that helps a lot. Thanks. So, I like these changes. Now back to the other part. You have changed the tabs/formatting, and there is a bunch of extraneous textual changes here that aren't actually code changes. Can you reduce this simply to the relevant lines and keep the tabs (in the form of whitespace) the way they were? I'll be happy to merge it. Also have a look at: http://github.com/apache/tika/#contributing-via-github to get an idea of what to call the PR and how to create a JIRA issue that maps to this. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/206609387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/207716817", "body": "thanks @reevapp / Mark! This is easier to review. I will work this weekend to merge and test.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/207716817/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/207724810", "body": "thanks @reevapp \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/207724810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/207820462", "body": "hey @reevapp - do you know who I can get in touch with at Yandex for a key that I could use for research purposes to get beyond API limits? I'm doing research and writing papers in this area and would love to add Yandex to my existing Lingo24, Bing, Google Translate, and Joshua comparisons. chris.mattmann@gmail.com is my email and can contact me there.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/207820462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/207853685", "body": "Yeah I am doing much more than that so looking for a research oriented key but for big data do you have a contact there?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/207853685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/211731443", "body": "@adeshgupta you need to rebase this commit and get on 1.13 branch and make sure your PR only includes your changes. Please update.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/211731443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/213500100", "body": "@manalishah \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213500100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/213551257", "body": "Yes please update the PR thanks Trevor \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213551257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/213607524", "body": "@trevorlewis this worked great!\n\n```\n[INFO] \n[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ tika ---\n[INFO] Installing /Users/mattmann/tmp/tika1.13/pom.xml to /Users/mattmann/.m2/repository/org/apache/tika/tika/1.13-SNAPSHOT/tika-1.13-SNAPSHOT.pom\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary:\n[INFO] \n[INFO] Apache Tika parent ................................. SUCCESS [  1.115 s]\n[INFO] Apache Tika core ................................... SUCCESS [  9.602 s]\n[INFO] Apache Tika parsers ................................ SUCCESS [01:29 min]\n[INFO] Apache Tika XMP .................................... SUCCESS [  1.748 s]\n[INFO] Apache Tika serialization .......................... SUCCESS [  1.401 s]\n[INFO] Apache Tika batch .................................. SUCCESS [01:48 min]\n[INFO] Apache Tika language detection ..................... SUCCESS [  3.461 s]\n[INFO] Apache Tika application ............................ SUCCESS [ 31.432 s]\n[INFO] Apache Tika OSGi bundle ............................ SUCCESS [ 19.109 s]\n[INFO] Apache Tika translate .............................. SUCCESS [  1.899 s]\n[INFO] Apache Tika server ................................. SUCCESS [ 40.699 s]\n[INFO] Apache Tika examples ............................... SUCCESS [ 13.093 s]\n[INFO] Apache Tika Java-7 Components ...................... SUCCESS [  1.913 s]\n[INFO] Apache Tika ........................................ SUCCESS [  0.023 s]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 05:23 min\n[INFO] Finished at: 2016-04-22T15:01:08-07:00\n[INFO] Final Memory: 130M/1683M\n[INFO] ------------------------------------------------------------------------\n```\n\nI'm going to merge this now.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213607524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/213612798", "body": "ping @adeshgupta \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213612798/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/213626522", "body": "thanks @manalishah will merge soon.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213626522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/213799613", "body": "thanks @shivensaiwal please remove the TODOs and I think this is good to go. Can you start on a page on the Tika Wiki for how to install the PersonaExtractor dependency here: http://wiki.apache.org/tika/PersonaExtraction (you will need to create an account on the Tika wiki). \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213799613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/213799708", "body": "Hi @adeshgupta you should simply rebase your local branch to apache/tika:master (git pull https://github.com/apache/tika.git master), and then handle any local conflicts, and then git push -u adeshgupta TIKA-1885)\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213799708/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/213799743", "body": "@thammegowda I really like this! Let's finish it in 1.14 (going to move on with 1.13 without it).\nCan you:\n1. update this to the latest apache:master\n2. notify me when that is done?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213799743/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/213799911", "body": "@rgauss the work here is fantastic. This really could easily replace the one I wrote. If you don't have time I'll go ahead and update the wiki (which is a necessary first step since we have that wiki page now) here: http://wiki.apache.org/tika/EXIFToolParser I think that we can merge this in 1.14\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213799911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/213799944", "body": "got it. will test this now @mit2nil \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213799944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/213800211", "body": "I think a better way to achieve this is the following @mit2nil after reviewing the PR:\n1. Create a helper function isWindows() and set it to the check that you do for windows\n2. In the constructor for the class, check if isWindows(), and then if so, simply use a different command to set it rather than env.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213800211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/213801206", "body": "Yikes, looking at this a different way I'm actually now unclear how to generically solve this other than to simply override the configuration if you are running on windows for the external parser for EXIF tool.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213801206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/213801869", "body": "@reevapp can you git pull tika origin master locally and then push your branch to update this PR?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213801869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/213802247", "body": "looks great going to merge this now. Guys, please follow the process listed at: http://github.com/apache/tika/#contributing-via-github in the future and create a JIRA ticket to accompany this. @AravindRam @yashtanna93 \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213802247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/213851724", "body": "can you show me what this would look like @mit2nil ?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213851724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/213869068", "body": "sorry my point was, if there is an update to make to the code that deals with this let me know. The biggest thing I saw was for me on Mac OSX/Darwin without running the env command in front of exiftool it wouldn't work.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213869068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/213968170", "body": "Hi @adeshgupta this is closer. I can see in https://github.com/apache/tika/pull/89/commits/cdaccc5df7b1eb9eded45fe0578151ea43d33261 the actual change, but if you look at this pull request it includes 2600 _other_ changes. I have no clue why this is. However if you can simply either update this or open up a new pull request that _only_ includes those changes then it would be easier to review.\n\nSome feedback:\n1. https://github.com/apache/tika/pull/89/commits/cdaccc5df7b1eb9eded45fe0578151ea43d33261 doesn't include the actual MediaType.ZeroSize - where is this? \n2. ALv2 headers needed on detector.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213968170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/214038882", "body": "thanks @adeshgupta check your PR. Still 2k+ files changed. Try rebasing onto 1.13 master.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/214038882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/214115436", "body": "Hi @adeshgupta the fix should simply be this. Can you try:\n1. git checkout -b fix-TIKA-1885 \n2. git pull https://github.com/apache/tika.git master\n   [resolve conflicts locally, etc.]\n3. apply your edits e.g., make sure your single Detector is there, along with the tika-mimetypes.xml update and any other changes (should be ~2-3 files, right)\n4. commit and resolve everything locally\n5. git checkout TIKA-1885\n6. git reset --hard fix-TIKA-1885\n7. git push -u <your username> TIKA-1885\n\nTry that.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/214115436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/215141781", "body": "OK @adeshgupta last try (it looks like your editor automatically reformatted these files in your latest PR since it just deletes them and adds them back). How about this. Can you:\n1. Close this PR\n2. Do a FRESH checkout of apache/tika from master\n3. Make your 3 edits to the files in question\n4. Submit a new PR based on that?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/215141781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/216748524", "body": "there seems to be a lot of orthogonal changes here @minhptx . What exactly is this doing over the current implementation? What does it add?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/216748524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/221543012", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/221543012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/223486881", "body": "+1 LGTM\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/223486881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/225445209", "body": "@thammegowda this is fantastic. I think you forgot to attach the default python scripts though too since you ref them in the classpath.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/225445209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/225462270", "body": "Thamme why not just include the script in the classpath?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/225462270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/225462317", "body": "Also would be great to take the docs from the PR and make a wiki page out of them \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/225462317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/225468694", "body": "It makes it so we don't rely on having a Internet connection to run - also you cs still use http get just use a classpath jar URi\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/225468694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/225468729", "body": "iOw one less http call and if the user has already downloaded the model no http calls externally \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/225468729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/225484479", "body": "+1 from me great work \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/225484479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/228504137", "body": "@Zarana-Parekh looking great! one question (after you address the easy ones above) - will this be enabled by default? The reason I ask is that I think this will introduce quite a bit of overhead into processing and probably shouldn't be on by default.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/228504137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/228802891", "body": "thanks for this! going to check it out @amensiko \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/228802891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/229144795", "body": "a lot better @Zarana-Parekh ! now just need to remove an orthogonal change (again) on the tika-bundle pom.xml, and also consider changing the property name.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/229144795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/230663718", "body": "few last simple updates, @Zarana-Parekh then this should be good to go.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/230663718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/230982328", "body": "LGTM I will commit this now! :) \ud83d\udc4d @Zarana-Parekh \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/230982328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/230989547", "body": "OK I can't commit this - tests aren't passing:\n\n```\nRunning org.apache.tika.utils.ServiceLoaderUtilsTest\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec - in org.apache.tika.utils.ServiceLoaderUtilsTest\n\nResults :\n\nFailed tests: \n  TesseractOCRParserTest.testImageMagick:183 expected:<true> but was:<false>\n\nTests run: 730, Failures: 1, Errors: 0, Skipped: 12\n\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary:\n[INFO] \n[INFO] Apache Tika parent ................................. SUCCESS [  1.348 s]\n[INFO] Apache Tika core ................................... SUCCESS [ 12.065 s]\n[INFO] Apache Tika parsers ................................ FAILURE [01:34 min]\n[INFO] Apache Tika XMP .................................... SKIPPED\n[INFO] Apache Tika serialization .......................... SKIPPED\n[INFO] Apache Tika batch .................................. SKIPPED\n[INFO] Apache Tika language detection ..................... SKIPPED\n```\n\n@Zarana-Parekh ?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/230989547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/230993186", "body": "OK @Zarana-Parekh I made some updates and got the build to pass. Will commit this shortly.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/230993186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/230993847", "body": "fixed:\n\n```\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ tika ---\n[INFO] Deleting /Users/mattmann/tmp/tika1.13/target\n[INFO] \n[INFO] --- maven-remote-resources-plugin:1.5:process (default) @ tika ---\n[INFO] \n[INFO] --- maven-site-plugin:3.4:attach-descriptor (attach-descriptor) @ tika ---\n[INFO] \n[INFO] --- forbiddenapis:2.0:check (default) @ tika ---\n[INFO] Skipping execution for packaging \"pom\"\n[INFO] \n[INFO] --- forbiddenapis:2.0:testCheck (default) @ tika ---\n[INFO] Skipping execution for packaging \"pom\"\n[INFO] \n[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ tika ---\n[INFO] Installing /Users/mattmann/tmp/tika1.13/pom.xml to /Users/mattmann/.m2/repository/org/apache/tika/tika/1.14-SNAPSHOT/tika-1.14-SNAPSHOT.pom\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary:\n[INFO] \n[INFO] Apache Tika parent ................................. SUCCESS [  0.916 s]\n[INFO] Apache Tika core ................................... SUCCESS [ 10.901 s]\n[INFO] Apache Tika parsers ................................ SUCCESS [01:29 min]\n[INFO] Apache Tika XMP .................................... SUCCESS [  1.656 s]\n[INFO] Apache Tika serialization .......................... SUCCESS [  1.481 s]\n[INFO] Apache Tika batch .................................. SUCCESS [01:47 min]\n[INFO] Apache Tika language detection ..................... SUCCESS [  2.957 s]\n[INFO] Apache Tika application ............................ SUCCESS [ 27.762 s]\n[INFO] Apache Tika OSGi bundle ............................ SUCCESS [ 16.128 s]\n[INFO] Apache Tika translate .............................. SUCCESS [  1.843 s]\n[INFO] Apache Tika server ................................. SUCCESS [ 33.559 s]\n[INFO] Apache Tika examples ............................... SUCCESS [  5.806 s]\n[INFO] Apache Tika Java-7 Components ...................... SUCCESS [  1.485 s]\n[INFO] Apache Tika ........................................ SUCCESS [  0.015 s]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 05:02 min\n[INFO] Finished at: 2016-07-06T23:37:20-07:00\n[INFO] Final Memory: 146M/1733M\n[INFO] ------------------------------------------------------------------------\nLMC-053601:tika1.13 mattmann$ \n```\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/230993847/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/232420940", "body": "working on a new pull request too @thammegowda \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/232420940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/239639100", "body": "@thammegowda I tried merging this. \n\nFirst, the error:\n\n```\nResults :\n\nFailed tests: \n  ParameterizedParserTest.testBadParam:92 should have thrown exception\n\nTests run: 201, Failures: 1, Errors: 0, Skipped: 1\n\n```\n\nSteps:\n1. git checkout --track github/TIKA-1508\n2. git pull\n3. git pull https://github.com/thammegowda/tika.git TIKA-1993\n4. mvn clean install\n\nCan you please confirm this builds?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/239639100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/239642904", "body": "thanks, appreciate it, working on testing now. @thammegowda \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/239642904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/239643221", "body": "@thammegowda please update your final step in the docker build above, it should read:\n\n``` sh\ndocker run -p 8764:8764 -it inception-rest-tika\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/239643221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/239644187", "body": "looking good! @thammegowda \n\nFirst test:\n\n```\nLMC-053601:tika1.14 mattmann$ java -jar tika-app/target/tika-app-1.14-SNAPSHOT.jar  --config=tika-parsers/src/test/resources/org/apache/tika/parser/recognition/tika-config-tflow.xml   tika-parsers/src/test/resources/test-documents/testJPEG.jpg\nWARN  Model doesn't exist at tensorflow/tf-objectrec-model. Expecting the script to download it.\nINFO  minConfidence = 0.015, topN=2\nINFO  Recogniser = org.apache.tika.parser.recognition.tf.TensorflowImageRecParser\nINFO  Recogniser Available = true\n<?xml version=\"1.0\" encoding=\"UTF-8\"?><html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta name=\"English foxhound\" content=\"0.02759\"/>\n<meta name=\"Egyptian cat\" content=\"0.09168\"/>\n<meta name=\"collie\" content=\"0.02982\"/>\n<meta name=\"bluetick\" content=\"0.06043\"/>\n<meta name=\"Border collie\" content=\"0.07553\"/>\n<title/>\n</head>\n<body><p/>\n</body></html>LMC-053601:tika1.14 mattmann$ \n```\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/239644187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/239644457", "body": "all tests:\n\n```\nLMC-053601:tika1.14 mattmann$ java -jar tika-app/target/tika-app-1.14-SNAPSHOT.jar  --config=tika-parsers/src/test/resources/org/apache/tika/parser/recognition/tika-config-tflow.xml   tika-parsers/src/test/resources/test-documents/testJPEG.jpg\nWARN  Model doesn't exist at tensorflow/tf-objectrec-model. Expecting the script to download it.\nINFO  minConfidence = 0.015, topN=2\nINFO  Recogniser = org.apache.tika.parser.recognition.tf.TensorflowImageRecParser\nINFO  Recogniser Available = true\n<?xml version=\"1.0\" encoding=\"UTF-8\"?><html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta name=\"English foxhound\" content=\"0.02759\"/>\n<meta name=\"Egyptian cat\" content=\"0.09168\"/>\n<meta name=\"collie\" content=\"0.02982\"/>\n<meta name=\"bluetick\" content=\"0.06043\"/>\n<meta name=\"Border collie\" content=\"0.07553\"/>\n<title/>\n</head>\n<body><p/>\n</body></html>LMC-053601:tika1java -jar tika-app/target/tika-app-1.14-SNAPSHOT.jar  --config=tika-parsers/src/test/resources/org/apache/tika/parser/recognition/tika-config-tflow.xml   https://upload.wikimedia.org/wikipedia/commons/thumb/3/38/US_Navy_100714-N-4965F-174_Chief_Mass_Communication_Specialist_Paula_Ludwick%2C_assigned_to_Fleet_Combat_Camera_Group_Pacific%2C_shoots_at_a_target_during_a_Navy_Rifle_Qualification_Course.jpg/220px-thumbnail.jpg\nINFO  minConfidence = 0.015, topN=2\nINFO  Recogniser = org.apache.tika.parser.recognition.tf.TensorflowImageRecParser\nINFO  Recogniser Available = true\n<?xml version=\"1.0\" encoding=\"UTF-8\"?><html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta name=\"projectile, missile\" content=\"0.00034\"/>\n<meta name=\"military uniform\" content=\"0.00763\"/>\n<meta name=\"bulletproof vest\" content=\"0.00489\"/>\n<meta name=\"assault rifle, assault gun\" content=\"0.92418\"/>\n<meta name=\"rifle\" content=\"0.04343\"/>\n<title/>\n</head>\n<body><p/>\n</body></html>LMC-053601:tika1.14 mattmann$ java -jar tika-app/target/tika-app-1.14-SNAPSHOT.jar  --config=tika-parsers/src/test/resources/org/apache/tika/parser/recognition/tika-conf https://upload.wikimedia.org/wikipedia/commons/8/8d/Glock17.jpg\nINFO  minConfidence = 0.015, topN=2\nINFO  Recogniser = org.apache.tika.parser.recognition.tf.TensorflowImageRecParser\nINFO  Recogniser Available = true\n<?xml version=\"1.0\" encoding=\"UTF-8\"?><html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta name=\"power drill\" content=\"0.00470\"/>\n<meta name=\"revolver, six-gun, six-shooter\" content=\"0.69355\"/>\n<meta name=\"holster\" content=\"0.21180\"/>\n<meta name=\"assault rifle, assault gun\" content=\"0.01513\"/>\n<meta name=\"rifle\" content=\"0.01053\"/>\n<title/>\n</head>\n<body><p/>\n</body></html>LMC-053601:tika1.14 mattmann$ java -jar tika-app/target/tika-app-1.14-SNAPSHOT.jar  --config=tika-parsers/src/test/resources/org/apache/tika/parser/recognition/tika-conf http://www.trbimg.com/img-57226a08/turbine/ct-tesla-model-3-unveiling-20160404/650/650x366\nINFO  minConfidence = 0.015, topN=2\nINFO  Recogniser = org.apache.tika.parser.recognition.tf.TensorflowImageRecParser\nINFO  Recogniser Available = true\n<?xml version=\"1.0\" encoding=\"UTF-8\"?><html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta name=\"car wheel\" content=\"0.02527\"/>\n<meta name=\"convertible\" content=\"0.01338\"/>\n<meta name=\"sports car, sport car\" content=\"0.87855\"/>\n<meta name=\"beach wagon, station wagon, wagon, estate car, beach waggon, station waggon, waggon\" content=\"0.00903\"/>\n<meta name=\"minivan\" content=\"0.01217\"/>\n<title/>\n</head>\n<body><p/>\n</body></html>LMC-053601:tika1.14 mattmann$ \n```\n\nAll script based tests work. Testing REST now.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/239644457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/239644775", "body": "for the REST server here's what I'm getting:\n\non tika-app side with config to point to REST:\n\n```\nLMC-053601:tika1.14 mattmann$ java -jar tika-app/target/tika-app-1.14-SNAPSHOT.jar  --config=tika-parsers/src/test/resources/org/apache/tika/parser/recognition/tika-rest-config.xml   http://www.trbimg.com/img-57226a08/turbine/ct-tesla-model-3-unveiling-20160404/650/650x366\nException in thread \"main\" org.apache.tika.exception.TikaConfigException: Connection to http://localhost:8764 refused\n    at org.apache.tika.parser.recognition.tf.TensorflowRESTRecogniser.initialize(TensorflowRESTRecogniser.java:93)\n    at org.apache.tika.parser.recognition.ObjectRecognitionParser.initialize(ObjectRecognitionParser.java:99)\n    at org.apache.tika.config.TikaConfig$XmlLoader.loadOne(TikaConfig.java:569)\n    at org.apache.tika.config.TikaConfig$XmlLoader.loadOverall(TikaConfig.java:491)\n    at org.apache.tika.config.TikaConfig.<init>(TikaConfig.java:168)\n    at org.apache.tika.config.TikaConfig.<init>(TikaConfig.java:147)\n    at org.apache.tika.config.TikaConfig.<init>(TikaConfig.java:122)\n    at org.apache.tika.config.TikaConfig.<init>(TikaConfig.java:118)\n    at org.apache.tika.cli.TikaCLI.configure(TikaCLI.java:673)\n    at org.apache.tika.cli.TikaCLI.process(TikaCLI.java:406)\n    at org.apache.tika.cli.TikaCLI.main(TikaCLI.java:145)\nCaused by: org.apache.http.conn.HttpHostConnectException: Connection to http://localhost:8764 refused\n    at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:190)\n    at org.apache.http.impl.conn.ManagedClientConnectionImpl.open(ManagedClientConnectionImpl.java:294)\n    at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:643)\n    at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:479)\n    at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:906)\n    at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:805)\n    at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:784)\n    at org.apache.tika.parser.recognition.tf.TensorflowRESTRecogniser.initialize(TensorflowRESTRecogniser.java:88)\n    ... 10 more\nCaused by: java.net.ConnectException: Connection refused\n    at java.net.PlainSocketImpl.socketConnect(Native Method)\n    at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\n    at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\n    at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\n    at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\n    at java.net.Socket.connect(Socket.java:589)\n    at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:127)\n    at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)\n    ... 17 more\nLMC-053601:tika1.14 mattmann$ \n```\n\non docker side running REST server:\n\n```\nLMC-053601:tf mattmann$ docker run -p 8764:8764 -it inception-rest-tika\n>> Downloading inception-2015-12-05.tgz 100.0%\nSuccesfully downloaded inception-2015-12-05.tgz 88931400 bytes.\nLogs are directed to inception.log\nServing on port 8764\n * Running on http://0.0.0.0:8764/ (Press CTRL+C to quit)\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/239644775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/239683769", "body": "OK so I got it working by upgrading Docker, but the REST service for Tensorflow has some weird error where it won't print the XHTML content.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/239683769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/239684982", "body": "OK so I can get `-m` to work but not `-x`.\n\nMetadata\n\n```\nLMC-053601:tika1.14 mattmann$ java -cp tika-app/target/tika-app-1.14-SNAPSHOT.jar org.apache.tika.cli.TikaCLI --config=tika-parsers/src/test/resources/org/apache/tika/parser/recognition/tika-config-tflow-rest.xml -m tika-parsers/src/test/resources/test-documents/testJPEG.jpg\nINFO  Available = true, API Status = HTTP/1.0 200 OK\nINFO  minConfidence = 0.015, topN=7\nINFO  Recogniser = org.apache.tika.parser.recognition.tf.TensorflowRESTRecogniser\nINFO  Recogniser Available = true\nContent-Length: 7686\nContent-Type: image/jpeg\nOBJECT: Egyptian cat (0.09168)\nOBJECT: Border collie (0.07553)\nOBJECT: bluetick (0.06043)\nOBJECT: collie (0.02982)\nOBJECT: English foxhound (0.02759)\nOBJECT: Siamese cat, Siamese (0.02053)\nOBJECT: tabby, tabby cat (0.01826)\nX-Parsed-By: org.apache.tika.parser.CompositeParser\nX-Parsed-By: org.apache.tika.parser.recognition.ObjectRecognitionParser\norg.apache.tika.parser.recognition.object.rec.impl: org.apache.tika.parser.recognition.tf.TensorflowRESTRecogniser\nresourceName: testJPEG.jpg\nLMC-053601:tika1.14 mattmann$ \n```\n\nXHTML\n\n```\nLMC-053601:tika1.14 mattmann$ java -cp tika-app/target/tika-app-1.14-SNAPSHOT.jar org.apache.tika.cli.TikaCLI --config=tika-parsers/src/test/resources/org/apache/tika/parser/recognition/tika-config-tflow-rest.xml -x tika-parsers/src/test/resources/test-documents/testJPEG.jpg\nINFO  Available = true, API Status = HTTP/1.0 200 OK\nINFO  minConfidence = 0.015, topN=7\nINFO  Recogniser = org.apache.tika.parser.recognition.tf.TensorflowRESTRecogniser\nINFO  Recogniser Available = true\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/239684982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/239688603", "body": "finally fixed it!  2 issues:\n1. Needed startDocument and endDocument in the handler - that fixed the JSON and in turn ended up fixing the REST and script based Tensorflow calls.\n2. The often come up (but still undocumented we need to fix that!) problem that you can't concurrently mess with the metadata object whilst doing the ContentHandler stuff. You have to have an ImmutableMetadata object by the time you do ContentHandler stuff.\n\nI'm going to do a few more tests then get this committed! Great work @thammegowda. Overall this is an amazing contribution it will be awesome for Tika users!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/239688603/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/239689338", "body": "build passed:\n\n```\n[INFO] --- forbiddenapis:2.0:testCheck (default) @ tika ---\n[INFO] Skipping execution for packaging \"pom\"\n[INFO] \n[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ tika ---\n[INFO] Installing /Users/mattmann/tmp/tika1.14/pom.xml to /Users/mattmann/.m2/repository/org/apache/tika/tika/1.14-SNAPSHOT/tika-1.14-SNAPSHOT.pom\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary:\n[INFO] \n[INFO] Apache Tika parent ................................. SUCCESS [  1.025 s]\n[INFO] Apache Tika core ................................... SUCCESS [ 11.208 s]\n[INFO] Apache Tika parsers ................................ SUCCESS [02:48 min]\n[INFO] Apache Tika XMP .................................... SUCCESS [  1.423 s]\n[INFO] Apache Tika serialization .......................... SUCCESS [  1.323 s]\n[INFO] Apache Tika batch .................................. SUCCESS [01:46 min]\n[INFO] Apache Tika language detection ..................... SUCCESS [  3.852 s]\n[INFO] Apache Tika application ............................ SUCCESS [ 28.489 s]\n[INFO] Apache Tika OSGi bundle ............................ SUCCESS [ 15.415 s]\n[INFO] Apache Tika translate .............................. SUCCESS [  1.540 s]\n[INFO] Apache Tika server ................................. SUCCESS [ 34.281 s]\n[INFO] Apache Tika examples ............................... SUCCESS [  4.990 s]\n[INFO] Apache Tika Java-7 Components ...................... SUCCESS [  1.458 s]\n[INFO] Apache Tika ........................................ SUCCESS [  0.015 s]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 06:20 min\n[INFO] Finished at: 2016-08-14T11:44:03-07:00\n[INFO] Final Memory: 121M/1751M\n[INFO] ------------------------------------------------------------------------\nLMC-053601:tika1.14 mattmann$ \n```\n\ncommitting!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/239689338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/239722429", "body": "@rgauss I tried running this without exiftool installed, and I get:\n\n```\n\nResults :\n\nFailed tests: \n  ExiftoolExternalEmbedderTest>ExternalEmbedderTest.testEmbedStandardInputStream:277->ExternalEmbedderTest.embedInTempFile:251 Cannot run program \"exiftool\": error=2, No such file or directory\n  ExiftoolExternalEmbedderTest>ExternalEmbedderTest.testEmbedTikaInputStream:288->ExternalEmbedderTest.embedInTempFile:251 Cannot run program \"exiftool\": error=2, No such file or directory\n\n```\n\nTest failures. The tests need to pass without exiftool can you help?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/239722429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/239723296", "body": "@rgauss after installing `exiftool` I now see these (different errors):\n\n```\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.085 sec - in org.apache.tika.parser.xml.FictionBookParserTest\nRunning org.apache.tika.sax.PhoneExtractingContentHandlerTest\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.086 sec - in org.apache.tika.sax.PhoneExtractingContentHandlerTest\nRunning org.apache.tika.TestParsers\nTests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.148 sec - in org.apache.tika.TestParsers\nRunning org.apache.tika.utils.ServiceLoaderUtilsTest\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.08 sec - in org.apache.tika.utils.ServiceLoaderUtilsTest\n\nResults :\n\nFailed tests: \n  ForkParserIntegrationTest.testParserHandlingOfNonSerializable:210 expected:<Unable to serialize [ParseContext] to pass to the Fork...> but was:<Unable to serialize [AutoDetectParser] to pass to the Fork...>\nTests in error: \n  ForkParserIntegrationTest.testAttachingADebuggerOnTheForkedParserShouldWork:234 \u00bb Tika\n  ForkParserIntegrationTest.testForkedPDFParsing:257 \u00bb Tika Unable to serialize ...\n  ForkParserIntegrationTest.testForkedTextParsing:66 \u00bb Tika Unable to serialize ...\n\nTests run: 748, Failures: 1, Errors: 3, Skipped: 14\n\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary:\n[INFO] \n[INFO] Apache Tika parent ................................. SUCCESS [  0.846 s]\n[INFO] Apache Tika core ................................... SUCCESS [ 10.333 s]\n[INFO] Apache Tika parsers ................................ FAILURE [03:42 min]\n[INFO] Apache Tika XMP .................................... SKIPPED\n[INFO] Apache Tika serialization .......................... SKIPPED\n[INFO] Apache Tika batch .................................. SKIPPED\n[INFO] Apache Tika language detection ..................... SKIPPED\n[INFO] Apache Tika application ............................ SKIPPED\n[INFO] Apache Tika OSGi bundle ............................ SKIPPED\n[INFO] Apache Tika translate .............................. SKIPPED\n[INFO] Apache Tika server ................................. SKIPPED\n[INFO] Apache Tika examples ............................... SKIPPED\n[INFO] Apache Tika Java-7 Components ...................... SKIPPED\n[INFO] Apache Tika ........................................ SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 03:53 min\n[INFO] Finished at: 2016-08-14T20:30:46-07:00\n[INFO] Final Memory: 60M/942M\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.18.1:test (default-test) on project tika-parsers: There are test failures.\n[ERROR] \n[ERROR] Please refer to /Users/mattmann/tmp/tika1.14/tika-parsers/target/surefire-reports for the individual test results.\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n[ERROR] \n[ERROR] After correcting the problems, you can resume the build with the command\n[ERROR]   mvn <goals> -rf :tika-parsers\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/239723296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/239728523", "body": "there are a ton of orthogonal changes here I don't get. I'm going to close this. @reevapp \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/239728523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/239966651", "body": "hi @amensiko unfortunately this is not working. I get the following errors on this parser, after I made a few updates to it. See: https://github.com/chrismattmann/tika/commit/017f929caa0154f97e7ec4dacd49649e014f3de4\n\nHere's the errors I see:\n\n```\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 124 source files to /Users/mattmann/tmp/tika1.14/tika-parsers/target/test-classes\n[INFO] /Users/mattmann/tmp/tika1.14/tika-parsers/src/test/java/org/apache/tika/parser/odf/ODFParserTest.java: Some input files use or override a deprecated API.\n[INFO] /Users/mattmann/tmp/tika1.14/tika-parsers/src/test/java/org/apache/tika/parser/odf/ODFParserTest.java: Recompile with -Xlint:deprecation for details.\n[INFO] \n[INFO] --- maven-surefire-plugin:2.18.1:test (default-test) @ tika-parsers ---\n[INFO] Surefire report directory: /Users/mattmann/tmp/tika1.14/tika-parsers/target/surefire-reports\n\n-------------------------------------------------------\n T E S T S\n-------------------------------------------------------\nRunning org.apache.tika.parser.fork.ForkParserIntegrationTest\nTests run: 5, Failures: 1, Errors: 3, Skipped: 0, Time elapsed: 2.46 sec <<< FAILURE! - in org.apache.tika.parser.fork.ForkParserIntegrationTest\ntestForkedTextParsing(org.apache.tika.parser.fork.ForkParserIntegrationTest)  Time elapsed: 0.185 sec  <<< ERROR!\norg.apache.tika.exception.TikaException: Unable to serialize AutoDetectParser to pass to the Forked Parser\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)\n    at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\n    at java.util.ArrayList.writeObject(ArrayList.java:762)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1028)\n    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)\n    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n    at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\n    at java.util.ArrayList.writeObject(ArrayList.java:762)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1028)\n    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)\n    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n    at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n    at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1378)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1174)\n    at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n    at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\n    at org.apache.tika.fork.ForkObjectInputStream.sendObject(ForkObjectInputStream.java:84)\n    at org.apache.tika.fork.ForkClient.sendObject(ForkClient.java:151)\n    at org.apache.tika.fork.ForkClient.<init>(ForkClient.java:76)\n    at org.apache.tika.fork.ForkParser.acquireClient(ForkParser.java:216)\n    at org.apache.tika.fork.ForkParser.parse(ForkParser.java:168)\n    at org.apache.tika.parser.fork.ForkParserIntegrationTest.testForkedTextParsing(ForkParserIntegrationTest.java:66)\n\ntestAttachingADebuggerOnTheForkedParserShouldWork(org.apache.tika.parser.fork.ForkParserIntegrationTest)  Time elapsed: 0.534 sec  <<< ERROR!\norg.apache.tika.exception.TikaException: Unable to serialize AutoDetectParser to pass to the Forked Parser\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)\n    at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\n    at java.util.ArrayList.writeObject(ArrayList.java:762)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1028)\n    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)\n    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n    at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\n    at java.util.ArrayList.writeObject(ArrayList.java:762)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1028)\n    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)\n    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n    at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n    at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1378)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1174)\n    at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n    at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\n    at org.apache.tika.fork.ForkObjectInputStream.sendObject(ForkObjectInputStream.java:84)\n    at org.apache.tika.fork.ForkClient.sendObject(ForkClient.java:151)\n    at org.apache.tika.fork.ForkClient.<init>(ForkClient.java:76)\n    at org.apache.tika.fork.ForkParser.acquireClient(ForkParser.java:216)\n    at org.apache.tika.fork.ForkParser.parse(ForkParser.java:168)\n    at org.apache.tika.parser.fork.ForkParserIntegrationTest.testAttachingADebuggerOnTheForkedParserShouldWork(ForkParserIntegrationTest.java:234)\n\ntestForkedPDFParsing(org.apache.tika.parser.fork.ForkParserIntegrationTest)  Time elapsed: 0.134 sec  <<< ERROR!\norg.apache.tika.exception.TikaException: Unable to serialize AutoDetectParser to pass to the Forked Parser\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)\n    at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\n    at java.util.ArrayList.writeObject(ArrayList.java:762)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1028)\n    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)\n    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n    at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\n    at java.util.ArrayList.writeObject(ArrayList.java:762)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1028)\n    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)\n    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n    at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n    at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1378)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1174)\n    at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n    at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\n    at org.apache.tika.fork.ForkObjectInputStream.sendObject(ForkObjectInputStream.java:84)\n    at org.apache.tika.fork.ForkClient.sendObject(ForkClient.java:151)\n    at org.apache.tika.fork.ForkClient.<init>(ForkClient.java:76)\n    at org.apache.tika.fork.ForkParser.acquireClient(ForkParser.java:216)\n    at org.apache.tika.fork.ForkParser.parse(ForkParser.java:168)\n    at org.apache.tika.parser.fork.ForkParserIntegrationTest.testForkedPDFParsing(ForkParserIntegrationTest.java:257)\n\ntestParserHandlingOfNonSerializable(org.apache.tika.parser.fork.ForkParserIntegrationTest)  Time elapsed: 0.134 sec  <<< FAILURE!\norg.junit.ComparisonFailure: expected:<Unable to serialize [ParseContext] to pass to the Fork...> but was:<Unable to serialize [AutoDetectParser] to pass to the Fork...>\n    at org.junit.Assert.assertEquals(Assert.java:115)\n    at org.junit.Assert.assertEquals(Assert.java:144)\n    at org.apache.tika.parser.fork.ForkParserIntegrationTest.testParserHandlingOfNonSerializable(ForkParserIntegrationTest.java:210)\n\n\nResults :\n\nFailed tests: \n  ForkParserIntegrationTest.testParserHandlingOfNonSerializable:210 expected:<Unable to serialize [ParseContext] to pass to the Fork...> but was:<Unable to serialize [AutoDetectParser] to pass to the Fork...>\nTests in error: \n  ForkParserIntegrationTest.testAttachingADebuggerOnTheForkedParserShouldWork:234 \u00bb Tika\n  ForkParserIntegrationTest.testForkedPDFParsing:257 \u00bb Tika Unable to serialize ...\n  ForkParserIntegrationTest.testForkedTextParsing:66 \u00bb Tika Unable to serialize ...\n\nTests run: 5, Failures: 1, Errors: 3, Skipped: 0\n\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 11.841 s\n[INFO] Finished at: 2016-08-15T14:36:46-07:00\n[INFO] Final Memory: 53M/987M\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.18.1:test (default-test) on project tika-parsers: There are test failures.\n[ERROR] \n[ERROR] Please refer to /Users/mattmann/tmp/tika1.14/tika-parsers/target/surefire-reports for the individual test results.\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\nLMC-053601:tika-parsers mattmann$ git status\nOn branch TIKA-2016\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n    modified:   pom.xml\n    modified:   src/main/java/org/apache/tika/parser/sentiment/analysis/SentimentParser.java\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\n    ../chris.sent\n    ../language-keys/\n    ../tensorflow/\n    pom.xml~\n    src/main/java/org/apache/tika/parser/sentiment/analysis/SentimentParser.java~\n    tensorflow/\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nLMC-053601:tika-parsers mattmann$ cd ..\nLMC-053601:tika1.14 mattmann$ !more\nmore tika-parsers/target/surefire-reports/org.apache.tika.parser.fork.ForkParserIntegrationTest.txt \n-------------------------------------------------------------------------------\nTest set: org.apache.tika.parser.fork.ForkParserIntegrationTest\n-------------------------------------------------------------------------------\nTests run: 5, Failures: 1, Errors: 3, Skipped: 0, Time elapsed: 2.46 sec <<< FAILURE! - in org.apache.tika.parser.fork.ForkParserIntegrationTest\ntestForkedTextParsing(org.apache.tika.parser.fork.ForkParserIntegrationTest)  Time elapsed: 0.185 sec  <<< ERROR!\norg.apache.tika.exception.TikaException: Unable to serialize AutoDetectParser to pass to the Forked Parser\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)\n        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n        at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\n        at java.util.ArrayList.writeObject(ArrayList.java:762)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:498)\n        at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1028)\n        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)\n        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n        at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\n        at java.util.ArrayList.writeObject(ArrayList.java:762)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:498)\n        at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1028)\n        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)\n        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n        at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1378)\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1174)\n        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n        at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1378)\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1174)\n        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n        at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\n        at org.apache.tika.fork.ForkObjectInputStream.sendObject(ForkObjectInputStream.java:84)\n        at org.apache.tika.fork.ForkClient.sendObject(ForkClient.java:151)\n        at org.apache.tika.fork.ForkClient.<init>(ForkClient.java:76)\n        at org.apache.tika.fork.ForkParser.acquireClient(ForkParser.java:216)\n        at org.apache.tika.fork.ForkParser.parse(ForkParser.java:168)\n        at org.apache.tika.parser.fork.ForkParserIntegrationTest.testForkedTextParsing(ForkParserIntegrationTest.java:66)\n\ntestAttachingADebuggerOnTheForkedParserShouldWork(org.apache.tika.parser.fork.ForkParserIntegrationTest)  Time elapsed: 0.534 sec  <<< ERROR!\norg.apache.tika.exception.TikaException: Unable to serialize AutoDetectParser to pass to the Forked Parser\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)\n        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n        at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\n        at java.util.ArrayList.writeObject(ArrayList.java:762)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:498)\n-------------------------------------------------------------------------------\nTest set: org.apache.tika.parser.fork.ForkParserIntegrationTest\n-------------------------------------------------------------------------------\nTests run: 5, Failures: 1, Errors: 3, Skipped: 0, Time elapsed: 2.46 sec <<< FAILURE! - in org.apache.tika.parser.fork.ForkParserIntegrationTest\ntestForkedTextParsing(org.apache.tika.parser.fork.ForkParserIntegrationTest)  Time elapsed: 0.185 sec  <<< ERROR!\norg.apache.tika.exception.TikaException: Unable to serialize AutoDetectParser to pass to the Forked Parser\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)\n        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n        at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\n        at java.util.ArrayList.writeObject(ArrayList.java:762)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:498)\n        at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1028)\n        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)\n        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n        at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1028)\n        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)\n        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n        at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\n        at java.util.ArrayList.writeObject(ArrayList.java:762)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:498)\n        at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1028)\n        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)\n        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n        at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1378)\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1174)\n        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\n        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\n        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n        at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\n        at org.apache.tika.fork.ForkObjectInputStream.sendObject(ForkObjectInputStream.java:84)\n        at org.apache.tika.fork.ForkClient.sendObject(ForkClient.java:151)\n        at org.apache.tika.fork.ForkClient.<init>(ForkClient.java:76)\n        at org.apache.tika.fork.ForkParser.acquireClient(ForkParser.java:216)\n        at org.apache.tika.fork.ForkParser.parse(ForkParser.java:168)\n        at org.apache.tika.parser.fork.ForkParserIntegrationTest.testForkedTextParsing(ForkParserIntegrationTest.java:66)\n\ntestAttachingADebuggerOnTheForkedParserShouldWork(org.apache.tika.parser.fork.ForkParserIntegrationTest)  Time elapsed: 0.534 sec  <<< ERROR!\norg.apache.tika.exception.TikaException: Unable to serialize AutoDetectParser to pass to the Forked Parser\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)\nLMC-053601:tika1.14 mattmann$ emacs tika-core/src/main/java/org/apache/tika/fork/ForkObjectInputStream.java \nLMC-053601:tika1.14 mattmann$ \n```\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/239966651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/245333383", "body": "thanks @AravindRam see my comments! Getting closer!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/245333383/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/290079298", "body": "Do the above tests show that Inception v4 is better?", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/290079298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/290079382", "body": "Also all of this documentation should be added to the wiki - it looks great.", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/290079382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/290080789", "body": "I made a few comments: overall it looks great. There is no need to maintain back compat with v3 since v3 was available in Tika 1.14. I am good on my end +1 @thammegowda or @grossws if you guys want to commit, go for it.", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/290080789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/290091987", "body": "thanks @KranthiGV ", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/290091987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708534", "body": "I would prefer to keep these as explicit imports.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708548", "body": "not sure about these formatting changes.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708572", "body": "please remove\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708580", "body": "not sure why this was reformatted.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708592", "body": "reformatting unneeded. \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708599", "body": "unneeded reformatting.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708603", "body": "unneeded reformatting.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/33508985", "body": "can you remove the commented out lines @jeremybmerrill \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/33508985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/33508995", "body": "also remove\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/33508995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/33509032", "body": "remove\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/33509032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/33509088", "body": "remove all these commented lines\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/33509088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/36050081", "body": "Should be set to some default, e.g., /path/to/grobid-home\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/36050081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/36050083", "body": "also needs to be generalized.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/36050083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430461", "body": "please remove star imports\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430461/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430628", "body": "no star imports :)\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430770", "body": "no star imports\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430770/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430814", "body": "no commented code\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430834", "body": "ALv2 header please\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430974", "body": "no commented out code please\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44431004", "body": "no commented out code\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44431004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44431089", "body": "no star imports\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44431089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44881494", "body": "@thammegowda can you remove this line? commented code.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44881494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/45565777", "body": "needs to be generalized.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/45565777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/53895629", "body": "Please remove from PR. If it's commented, we don't need it.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/53895629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/54517389", "body": "no star imports, please fix to specific imports\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/54517389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/54517394", "body": "no star imports, please fix to specific imports\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/54517394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/54517423", "body": "unused variable, remove\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/54517423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/54517438", "body": "unneeded comment, please remove.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/54517438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/60766625", "body": "replace \\* imports with actual imports\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/60766625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/60832606", "body": "remove\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/60832606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/60832607", "body": "remove\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/60832607/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/61991313", "body": "remove commented code\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/61991313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/68482770", "body": "please remove this change, it's orthogonal and just whitespace.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/68482770/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/68482772", "body": "please remove this change, it's orthogonal and just whitespace.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/68482772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/68482812", "body": "orthogonal remove\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/68482812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/68482813", "body": "orthogonal remove\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/68482813/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/68482818", "body": "orthogonal remove\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/68482818/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/68817725", "body": "orthogonal change - can you remove these orthogonal changes?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/68817725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/68818045", "body": "can we think of something besides \"processing?\" that's too generic. how about `enableImageProcessing`\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/68818045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/68818229", "body": "also how about `enableImageProcessing`?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/68818229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69671490", "body": "seems to be an orthogonal change please remove.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69671490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69671535", "body": "@Zarana-Parekh can you add a check using Apache commons-util to make sure this is a UNIX OS before running the above test.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69671535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69671561", "body": "yep resolved in the main properties file, @Zarana-Parekh but not this test one please update this too.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69671561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/66723122", "body": "how about `org.apache.tika.parser.recognition.object.rec.impl` - IOW prefix with o.a.t.p.r?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/66723122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/66723134", "body": "how about outputting confidence in the metadata too?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/66723134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74768164", "body": "this class should be named camel-case. If it's TextToTagRatio, then name it that.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74768164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74768186", "body": "requires ALv2 header\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74768186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74768208", "body": "why these changes?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74768208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74768231", "body": "huh?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74768231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74768283", "body": "why not integrate this as a feature in TextParser?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74768283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74768358", "body": "ALv2 header\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74768358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74768398", "body": "don't need this class.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74768398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74768419", "body": "would rather have a unit test that shows it works.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74768419/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/77854429", "body": "this method is not needed. We shouldn't be changing the Parser's public interface. If you need to pass a flag parameter, then pass it through the ParseContext.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/77854429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/77854554", "body": "this shouldn't be a new parser. It should be a feature in the TextParser.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/77854554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/77854634", "body": "This should be its own Java file.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/77854634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79006913", "body": "No. Read ParseContext. It's a container of keys. You don't need isTagRatioSet as a variable. You need to set a key e.g., org.apache.tika.parser.text.tagRatio and then look for that key in the parse context.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79006913/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007072", "body": "remove this, orthogonal.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007198", "body": "remove this, orthogonal.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007326", "body": "obvious comment, remove.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007397", "body": "obvious comment, remove.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007490", "body": "remove comment.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007507", "body": "remove comment\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007519", "body": "remove comment\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007541", "body": "remove comment\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007564", "body": "remove comment\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007618", "body": "orthogonal change remove\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007637", "body": "orthogonal change remove\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007666", "body": "obvious comment, remove\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007734", "body": "obvious comment remove\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79007734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/60832625", "body": "commented code should be removed.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/60832625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/89898769", "body": "Please include ALv2 header on all new files.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/89898769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/89898868", "body": "Can't include this - bad license..http://www.cs.waikato.ac.nz/ml/weka/ GPL", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/89898868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/89898896", "body": "ALv2 header", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/89898896/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108666672", "body": "this should be a Tika URL...not personal GitHub.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108666672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108667235", "body": "shouldn't we just make this a module function since it's defined in two files?", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108667235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113684569", "body": "@smadha can you please update this to /v4 throughout this file?", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113684569/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113751108", "body": "shouldn't this read v4?", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113751108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113751276", "body": "v4", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113751276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113751309", "body": "v4", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113751309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113751331", "body": "v4", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113751331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/114130580", "body": "no, this is what caused it to use too much disk/memory, so not going to change this to 8.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/114130580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/114130603", "body": "orthogonal line change?", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/114130603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/114130680", "body": "maybe running apt-get install here forces the install of the dependencies you explicitly cite below (which is why it works still?)", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/114130680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/114130721", "body": "orthogonal and unneeded line change.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/114130721/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/114130763", "body": "unneeded line change, please remove.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/114130763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/114130786", "body": "makes sense", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/114130786/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116364443", "body": "this should be a path prefixed by org/apache/tika/dl/image/caption, so `org/apache/tika/dl/image/caption/model.ckpt-1000000`", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116364443/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116364449", "body": "this should be a path prefixed by org/apache/tika/dl/image/caption, so, `org/apache/tika/dl/image/caption/word_counts.txt`", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116364449/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/125792055", "body": "on it! thanks @tballison ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/125792055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/125792563", "body": "fixed in https://github.com/apache/tika/commit/94f8b9fe5fdaebd11a99e76dd742bdc6df427389", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/125792563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/126294778", "body": "can we please check in the model to https://github.com/USCDataScience/img2text.git? I can create the repo for you. Then please check in any scripts you used to generate the model. Then we can check in the model zip file.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/126294778/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/127611410", "body": "please update this wget line to point to apache/master, then I think we're good to test/go @ThejanW ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/127611410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/127611419", "body": "remove the #preview part at the end", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/127611419/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139537857", "body": "Reminder this needs to be changed back....", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139537857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139537923", "body": "reminder to change back after applying", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139537923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "bobpaulin": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/1e8008c60ef1536b4c5bdd92fdae1e9e687e5966", "message": "TIKA-2506 - Check config for null during DL4J Test."}, {"url": "https://api.github.com/repos/apache/tika/commits/b6bdb672a9528a5676759cb160f1e47b42235bd5", "message": "TIKA-2502 - Upgrade opennlp-tools to 1.8.3  maven-bundle-plugin to 3.3.0"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ThejanW": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/cc08d398141ada890be0305b6d0ba3909f61b0a9", "message": "TIKA 2400 : Fix minor error in im2txt dockerfile"}, {"url": "https://api.github.com/repos/apache/tika/commits/d8caba1b7b22fe52bca747ea40d3cb8cb73d89ed", "message": "TIKA 2400 : finalize dockerfiles + scripts"}, {"url": "https://api.github.com/repos/apache/tika/commits/690c74435bde80d8c69af220f5ba3c1d4d4f5407", "message": "TIKA 2400 : Changing environment of python scripts back to python3 for docker testing"}, {"url": "https://api.github.com/repos/apache/tika/commits/1047f64c7c814fac40b9b8669fb70577f96cc3e3", "message": "TIKA 2400 : Changing environment of python scripts to python2"}, {"url": "https://api.github.com/repos/apache/tika/commits/f6beced5f4524515c88b09bbabfc192a383ce6de", "message": "TIKA 2400 : Update environment of python scripts to python3"}, {"url": "https://api.github.com/repos/apache/tika/commits/a043cefc0606a9bb05e19996b22ea56157cc775a", "message": "TIKA 2400 : Remove redundant functions + Minor refactoring"}, {"url": "https://api.github.com/repos/apache/tika/commits/9fb3461ec63bca0060660d210399270593c3584e", "message": "TIKA 2400 :\n# Minor reformatting\n# Include inception v4 definition script\n# Remove unwanted classify_image.py file\n# Get rid of the need to have tensorflow models with PYTHONPATH"}, {"url": "https://api.github.com/repos/apache/tika/commits/03e7d124b4b7c5bb786b24d115865085e6a2fc73", "message": "TIKA 2400 : Change requests"}, {"url": "https://api.github.com/repos/apache/tika/commits/2a81e975e48f2d1e051920725221fc5341e6db5f", "message": "TIKA 2400 : Update dockerfiles with namespace 'uscdatascience'"}, {"url": "https://api.github.com/repos/apache/tika/commits/92c65e0a43e7f09a0566bec34f352314dffe5def", "message": "TIKA 2400 : Update dockerfiles with namespace 'thejanw'"}, {"url": "https://api.github.com/repos/apache/tika/commits/dead95609936fbe7fa8b382121b7efaf0adfa995", "message": "TIKA 2400 : Update dockerfiles"}, {"url": "https://api.github.com/repos/apache/tika/commits/07abb318a1d9fd1af1d2856627759337a95d3142", "message": "TIKA 2400 :\n# Few refactoring to Object Recognition REST clients"}, {"url": "https://api.github.com/repos/apache/tika/commits/9b94e17f2bceb0b79454689698bbb11c38a9ddd0", "message": "TIKA 2400 :\n# Adjust the Object Recognition REST clients to work with changed servers"}, {"url": "https://api.github.com/repos/apache/tika/commits/712b69773863865f7aa207eecc291a9a010e76fe", "message": "TIKA 2400 : Minor change to im2txtapi.py"}, {"url": "https://api.github.com/repos/apache/tika/commits/8a875cdbc9cb405a239f3c89192591c46fb078f0", "message": "TIKA 2400 : Changes to video_util.py\n# Fix formatting issues\n# Remove unused imports"}, {"url": "https://api.github.com/repos/apache/tika/commits/6b310534f736d275e7ff582f083ae289589fe99b", "message": "TIKA 2400 : Minor changes to im2txtapi.py"}, {"url": "https://api.github.com/repos/apache/tika/commits/4f784fc09c159849804b58f726ebba9b7f6ed28c", "message": "TIKA 2400 :\n# Fix formatting issues of inceptionapi.py\n# include logic for checking minimum confidence"}, {"url": "https://api.github.com/repos/apache/tika/commits/a78717c37fe50de4d82e5bbf7bc9d52af1c13bb6", "message": "TIKA 2400 :\n# Define apiBaseUri for inceptionREST\n# Link wiki pages"}, {"url": "https://api.github.com/repos/apache/tika/commits/fe7533d8b59394fa75f647716ca6c1b4d5c2f8ee", "message": "TIKA 2402 : Minor fix in dockerfile"}, {"url": "https://api.github.com/repos/apache/tika/commits/523f5d6b7a2fcd16c25a0103bde0745186c9191a", "message": "TIKA 2402 : Minor changes in client & config + Include png, gif tests"}, {"url": "https://api.github.com/repos/apache/tika/commits/e2f5b1744c132668fade01a50b37bbcc72acf926", "message": "TIKA 2402 : Include pillow  + include logic to convert non jpeg image"}, {"url": "https://api.github.com/repos/apache/tika/commits/c92730c3b19a64a9449210631155c3e9e3021129", "message": "Minor changes"}, {"url": "https://api.github.com/repos/apache/tika/commits/ef12f7d87ea52f1a3271f37472ba185e616ca125", "message": "Merge remote-tracking branch 'upstream/master'"}, {"url": "https://api.github.com/repos/apache/tika/commits/0d5cab940102d2713d3d9c363ce88b4de6661ff3", "message": "TIKA 2262 : Minor changes to dockerfile"}, {"url": "https://api.github.com/repos/apache/tika/commits/268a815aef7a2c48d28fc3431fc77061524b1a00", "message": "TIKA 2262 : Update links"}, {"url": "https://api.github.com/repos/apache/tika/commits/44082d3dd456a88c9d79b5a600db88a1a865416c", "message": "TIKA 2262 : Adopt changes in TIKA-2389"}, {"url": "https://api.github.com/repos/apache/tika/commits/b618984cc78df5696886404c6579d2bad71e1bb8", "message": "Merge remote-tracking branch 'upstream/master'\n\n# Conflicts:\n#\ttika-parsers/src/main/java/org/apache/tika/parser/recognition/ObjectRecognitionParser.java"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/24268737", "body": "@smadha I was thinking about using a baseDockerfile. What do you think?\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/24268737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/113797759", "body": "Opencv can be installed with miniconda. There shouldn't be any issue. So to be sure, I built your dockerfile, replacing anaconda with miniconda, I could successfully build it, then I sshed into the docker and checked whether Opencv is installed and it was. ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113797759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113807453", "body": "Yeah, I am happy to help :100: . I'm having some issues with trying out the API, it's giving me a 500 internal server error. Adding video support is great. But can we use ffmpeg? It's coming with a LGPL license, see https://www.ffmpeg.org/legal.html", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113807453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/114136424", "body": "Hmm...then my guess was right. then let's keep it as j4", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/114136424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/114140572", "body": "hmm...That could happen. ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/114140572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/114144077", "body": "Thought this would make much sense if it's called OpenCV_Contrib rather than Contrib.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/114144077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/114149180", "body": "fixed", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/114149180/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116366564", "body": "Thanks @chrismattmann. Should I change the path of all the .py files here to tika/dl too?", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116366564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116389098", "body": "hmm...will make that change :+1: ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116389098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116389481", "body": "Well, that's what I did initially. Then I measured time to make the CaptionGenerator object. **It was 0 ms**(It may be taking few micro seconds). I need to pass the post parameters beam_size & max_caption_length in order to make the CaptionGenerator object. If I put it in the initialization, client won't be able to change those parameters upon request, client will only be able to change them in initialization. I think giving users the ability to change the process of captioning an image in every request is nice rather than saving some micro seconds. What do you think? ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116389481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116389752", "body": " Makes sense. Thank you @chrismattmann & @thammegowda. Will change the directories that way :+1:  ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116389752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116392600", "body": "Hey! glad that you pointed this out. metadata is optional. For now it doesn't matter whether it is a list or a dictionary because metadata will always will be null during the process, it is hard coded to be null in the inference step. I was expecting to modify the inference step to assign some useful values as metadata throughout the beam search process. We may or may not need them. Or I can simply remove it, it will speedup the beam search :1st_place_medal:   ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116392600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/122246914", "body": "@thammegowda \r\nYes. That sounds good. How about moving the apiBaseUri into config.xml?", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/122246914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/122247466", "body": "Yes, no need. Let's remove them.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/122247466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123505922", "body": "I know, it's hard coded only to work with jpeg for now..I'm thinking of a better way to pass the image format into the comp' graph. ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123505922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123507251", "body": "see, it's hard coded for now, I'm thinking of a better way to pass the image format into the comp' graph from c type.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123507251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123507420", "body": "will change it to a sentence.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123507420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123507636", "body": "yes, will change it once I get the png test worked out.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123507636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/127602602", "body": "I've updated the model_info.xml in this PR, @chrismattmann please update this link to \"https://raw.githubusercontent.com/apache/tika/master/tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/model_info.xml\"\r\nonce merged this. ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/127602602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139603897", "body": "will do once, merged :+1: ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139603897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139603908", "body": "will do once, merged :+1: ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139603908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/140021556", "body": "Yeah, I have moved minConfidence logic to REST servers, it is kind of odd to ask for topk objects from the backend and filter those objects again in the client with related to minConfidence and select topN objects, just too much logic in the client. we can directly ask the backend to give us topN objects which has a confidence greater than the minConfidence, less iterations and simplified client :100: ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/140021556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/140022863", "body": "Hey! good catch..it's not easy maintaining comments like these(https://github.com/ThejanW/tika/blob/92c65e0a43e7f09a0566bec34f352314dffe5def/tika-parsers/src/main/java/org/apache/tika/parser/recognition/ObjectRecognitionParser.java#L49-L70) \r\n\r\nA future developers will also miss these. Will update them asap  :+1: ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/140022863/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/140024736", "body": "I have defined a apiBaseUri and using that practice in all REST clients, using that apiBaseUri, we can derive healthUri and apiUri, see https://github.com/ThejanW/tika/blob/2a81e975e48f2d1e051920725221fc5341e6db5f/tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTRecogniser.java#L111-L112 ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/140024736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/140420704", "body": "sorry, I misunderstood your question, the reason why I have removed minConfidence and topN from objectRecognitionParser is, objectRecognitionParser does not need to keep such client specific parameters. Those client specific fields should be in that specific client, we are just using ObjectRecognitionParser to process objects from the respective REST client and put them in the xhtml.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/140420704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/140420790", "body": "please see,\r\nhttps://github.com/ThejanW/tika/blob/master/tika-parsers/src/main/java/org/apache/tika/parser/captioning/tf/TensorflowRESTCaptioner.java#L77-L84\r\n\r\nhttps://github.com/ThejanW/tika/blob/master/tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTRecogniser.java#L79-L86\r\n\r\nhttps://github.com/ThejanW/tika/blob/master/tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTVideoRecogniser.java#L71-L72", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/140420790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/140421441", "body": "yes, minConfidence and topN can be set through CLI/ Tika Config since we have defined them in REST clients. In TensorflowRESTVideoRecogniser, you're extending TensorflowRESTRecogniser, that's why I have made some of the fields in TensorflowRESTRecogniser as protected(we need them there to derive apiUri and healthUri).", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/140421441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "AarjavP": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/9653e77d935bb00b7a38be483991e8e185f751ff", "message": "[TIKA-1788] Provide Content-Disposition metadata in embedded files"}, {"url": "https://api.github.com/repos/apache/tika/commits/18aa69a16f09232413e06d04e921427ff4356cec", "message": "[TIKA-1788] RFC822Parser: provide email attachment filenames when available"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sberyozkin": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/369a04ee2be4b28c2bed1f1119e8cb5805dbd9c8", "message": "[TIKA-2476] Making sure the trailing space is not added"}, {"url": "https://api.github.com/repos/apache/tika/commits/2966cab3d8e4c975ba3b8b04f71d0254eeaf2f8c", "message": "[TIKA-2472] Removing a null value check as Arrays.hashCode does it"}, {"url": "https://api.github.com/repos/apache/tika/commits/b1d80bd7a649e90b225b2769c8affc4809a9cb9b", "message": "[TIKA-2472] Reimplementing Metadata.hashCode using the AbstractMap code but with Arrays.hashCode as suggested by Ken"}, {"url": "https://api.github.com/repos/apache/tika/commits/766cdac5735565ba898932c4f8696dc8a678e74b", "message": "[TIKA-2472] Implementing Metadata#hashCode"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "storysj": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/1f38be359b2735de94e9ae5850a3622e5393f77b", "message": "fix for TIKA-2475 contributed by seanstory"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mattcg": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/33da38ebb209250680aee3ab8565c89846f3a865", "message": "TIKA-2455: test for feature; only store multipart subtype in metadata"}, {"url": "https://api.github.com/repos/apache/tika/commits/4de0c66ad4b28402597fd9cb03978ba00bdc2e9f", "message": "TIKA-2455: flag the containing multipart type\n\nFlag the type of bodies contained within a multipart body. This allows alternative bodies to be distinguished from attachments, for example, and ensures that information on this structure is not lost in the output from Tika."}, {"url": "https://api.github.com/repos/apache/tika/commits/bf03dd4a3b37033f2efb7eece470a0477b6964ab", "message": "Convert EncryptedPowerPointFileException to EncryptedDocumentException\n\nThis avoids the ambiguous error `org.apache.tika.exception.TikaException: Unexpected RuntimeException from org.apache.tika.parser.microsoft.OfficeParser`."}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/21109652", "body": "@tballison the values are all the same. Is this intentional?", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/21109652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/comments/23984454", "body": "@tballison I think this is never used.", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/23984454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "giuseppetotaro": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/db89ab3ca701077f2615647667d868ca1cf9a728", "message": "TIKA-2449: Enabling extraction of standard references from text"}, {"url": "https://api.github.com/repos/apache/tika/commits/7dd38d5500c539328e2b0a083e1998a28e680539", "message": "Merge branch 'master' of https://github.com/apache/tika"}, {"url": "https://api.github.com/repos/apache/tika/commits/31625a2ad6b9a4de73aa322845fb1e38ba96177d", "message": "Used the alphabetical order for the list of the standard organizations by relying on TreeMap. Thanks to Lewis McGibbney for this insightful suggestion (TIKA-2449 contributed by Giuseppe Totaro)."}, {"url": "https://api.github.com/repos/apache/tika/commits/7b869c0c1b132feb691dca645fe9bc689bf320e2", "message": "Added a regular expression to match standard word within a pattern for TIKA-2449 contributed by Giuseppe Totaro"}, {"url": "https://api.github.com/repos/apache/tika/commits/e76302196ebcafb7b51fce37fbe8256e6c0fbc51", "message": "Improvement for TIKA-2449 contributed by Giuseppe Totaro"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "armathur": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/b98712576088010198c3aa4cb07ceb55a753c7c4", "message": "Update InceptionVideoRestDockerfile"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lfcnassif": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/70ca280f11fe4127df290b8027c6bc1d5180271f", "message": "TIKA-2460: load custom mimetypes XML from sys prop"}, {"url": "https://api.github.com/repos/apache/tika/commits/9e6a91c77e9b6aea39531edacc90976bb1a831fe", "message": "Merge branch 'master' of https://github.com/apache/tika.git"}, {"url": "https://api.github.com/repos/apache/tika/commits/560e91a176ca5ff1adfc3ff1c1f63e32ec4e928a", "message": "TIKA-2456: fix detection of emails inside mbox"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "boegel": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/72772c5985a47338df23fbd8802a89a0774b8254", "message": "bump read timeout for downloading file to 60s (1min) in tika-dl"}, {"url": "https://api.github.com/repos/apache/tika/commits/cf1c283623b4f53c335335148d0270b7c2ce0a28", "message": "directly compare stderr to empty string in testRedirectionOfStreams to obtain more meaningful messages if test fails"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "buggtb": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/e2af4bd60a93e610401319ac5928da9861de4e01", "message": "Update snapcraft.yaml"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/133582938", "body": "Indeed @grossws, fixed now.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/133582938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "krichter722": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/57ee179862d6f1a15cea6745ca3d1c8e8e7ff800", "message": "TIKA-2439 throwing IllegalStateException in OptimaizeLangDetector.detectAll if no module have been loaded and thus detector is null which avoid an unhelpful NullPointerException"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thammegowda": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/63ae47a865ea3639927976daa9d97bb3fecd55e6", "message": "Merge pull request #196 from ThejanW/master\n\nLink updates for TIKA 2262"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/184", "title": "TIKA-2393 Fix Sentiment parser model URLs", "body": "Sentiment parser test models URLs are pointed to a specific commit in git instead of HEAD of the master.", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/155521305", "body": "UPDATE : \n- The fix for non hierarchical URI is done by using URL instead of URI and path string. (Learned that we can have a URL to files inside ZIP archive, but not URI)\n\nWhile I modified NER model loading code to make above change possible, I also happened to make these changes:\n- The NER model was previously reloaded for every `parse()` call. It now reuses the model by making use of a state variable.\n- The `isAvailable()` function was previously trying to launch an external process for every call to figureout availability of 'lucene-geo-gazeteer' command. This has been changed to use a state variable.\n- The model is loaded on first call to `parse()` or `isAviable()` : via lazy intialization. My tests showed that it is backward compattible. \n\nCC : @Gagravarr @chrismattmann \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/155521305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/155535560", "body": "@chrismattmann Thanks for the feedback. Issues Resolved!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/155535560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/156948035", "body": "@chrismattmann Sure thing. I might have missed few such comments. I will review one more time. \n\nPlease give me permission to create/edit NER wiki page, my username is \"ThammeGowda\".\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/156948035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/166016993", "body": "Well, I just did the last commit, but all the previous commits (which are already merged via SVN) are shown here.\n\nLet me know if I need to do it shorter.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/166016993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/166023934", "body": "@chrismattmann\nclosing this PR.\nI had to create a new branch to undo the previous commits and I couldnt find a way to update PR with new branch! \n\nPlease refer to #67 \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/166023934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/194461811", "body": "TODOs:\n1.  Add `Map<String,String> getParams()` to the `Configurable` interface \n2. Use `TikaParameterConfigException` a subclass of `TikaException` for config errors.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/194461811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/221057588", "body": "@chrismattmann sorry for the delay. \n- updated this PR with apache:master \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/221057588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/221058828", "body": "There are some comments from @tballison regarding the types on [Jira](https://issues.apache.org/jira/browse/TIKA-1508).\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/221058828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/223158522", "body": "@tballison \nUPDATE : \n- Annotation added : Calling it [@Field](https://github.com/apache/tika/blob/67941a63949280289c1a7b5430a86de0aa3838a9/tika-core/src/main/java/org/apache/tika/config/Field.java) becausse the class `Param` already exist. This annotation can be placed on a Field or a setter method.\n- [ An utility](https://github.com/apache/tika/blob/67941a63949280289c1a7b5430a86de0aa3838a9/tika-core/src/main/java/org/apache/tika/utils/AnnotationUtils.java) is added to initialize the annotated objects! \n- A Test parser - [DummyParametrizedParser](https://github.com/apache/tika/blob/67941a63949280289c1a7b5430a86de0aa3838a9/tika-core/src/test/java/org/apache/tika/parser/DummyParametrizedParser.java) to [test these](https://github.com/apache/tika/blob/67941a63949280289c1a7b5430a86de0aa3838a9/tika-core/src/test/java/org/apache/tika/parser/ParametrizedParserTest.java)\n- And more [suit of tests](https://github.com/apache/tika/blob/67941a63949280289c1a7b5430a86de0aa3838a9/tika-core/src/test/java/org/apache/tika/utils/AnnotationUtilsTest.java) on annotations for various cases.\n\n**#SETTLED**\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/223158522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/225457900", "body": "@chrismattmann Thanks for checking this. I went ahead and incorporated your feedback regarding confidence in metadata and package name in key \n The default python script path is relative to current directory (also users can change it, TIKA-1508). This program should download the script when it is missing. If you have faced any issues please paste the error message, I will rectify it.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/225457900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/225464763", "body": "Tensorflow is Apache Licence so we can definitely include the script in classpath.  it will be then archived inside the jar.\nHowever,\n1. Even then we will have to copy the script from inside the jar to outside to let the python interpreter run it.\n2. Users will still need the network connection to download the model.\n\nCorrect me if I am wrong. I can definitely place the script inside and then make a copy locally (instead of HTTP GET) to run it, but I don't see any advantage in doing so.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/225464763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/225477199", "body": "@chrismattmann Thanks for the clarification. Corrected in the latest commits. \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/225477199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/229248953", "body": "## EDIT: This implementation is removed due to the setup complexities. Use REST based implementation instead which is easy to setup and has same performance\n\nAchieved production grade performance for tensorflow image recognition using gRPC\n\n## Step1: Start tensorflow service\n\n```\n# pull and start the prebuilt container, forward port 9000\ndocker run -it -p 9000:9000 tgowda/inception_serving_tika\n\n# Inside the container, start tensorflow service\nroot@8311ea4e8074:/# /serving/server.sh\n```\n\n## Step 2: Build an addon jar\n\n```\ngit clone git@github.com:thammegowda/tensorflow-grpc-java.git\ncd tensorflow-grpc-java\nmvn clean compile assembly:single\n\n# copy the path of target/tensorflow-java-1.0-jar-with-dependencies.jar\n```\n\n## Enable Tensorflow\n\nOpen  `org/apache/tika/parser/recognition/tika-config-tflow-addon.xml` and set `addon` file path to the actual file obtained in previous step \n\nCheckout test case `ObjectRecognitionParserTest#testAddonJar`\n\nCC @chrismattmann \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/229248953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/235098196", "body": "@chrismattmann \nUpdated with the RESTAPI based integration.\n\n# 1. Start the inception service on 8764 port :\n\nThe API service code is added at `tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/inceptionapi.py`\n\nAlso, a docker file is added to setup the environment quickly\n\n``` bash\ncd tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/\ndocker build -f InceptionRestDockerfile -t inception-rest-tika .\ndocker run -p 8764:8764 -it inception-rest-tika\n```\n\n# 2. Sample Configuration\n\nUse this configuration to parse JPEG images\n\n``` xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<properties>\n    <parsers>\n        <parser class=\"org.apache.tika.parser.recognition.ObjectRecognitionParser\">\n            <mime>image/jpeg</mime>\n            <params>\n                <param name=\"topN\" type=\"int\">7</param>\n                <param name=\"minConfidence\" type=\"double\">0.015</param>\n                <param name=\"class\" type=\"string\">org.apache.tika.parser.recognition.tf.TensorflowRESTRecogniser</param>\n            </params>\n        </parser>\n    </parsers>\n</properties>\n```\n\nThis one by default uses `apiUrl=http://localhost:8764/inception/v3/classify`. The way to change the defaults will be documented in wiki later.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/235098196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/239640343", "body": "@chrismattmann\nI can reproduce the problem.\n\nwhat's happening here : \nthis one due to an issue introduced in TIKA-1508 (runtime parameters from configuration file).\n\nThis happens when there are additional parameters in the config file that are not declared by parsers.\nThe test case is asserting that there should not be any extra parameters (extra params are treated as bad parameters).\n\nContrary to this case, we had another discussion in  [Jira TIKA-1986](https://issues.apache.org/jira/browse/TIKA-1986?focusedCommentId=15332530&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15332530) that parsers cannot anticipate all the runtime parameters of inner services at compile time. \n\nIn my opinion, this test case is no longer applicable. But I wanted to get comments from @tballison regarding the same. \nThe breaking change is due to [this comment here in the PR ](https://github.com/apache/tika/pull/125/files#diff-a4187c463b021d196bb80df3c38357efR130) \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/239640343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/239641624", "body": "@chrismattmann fixed\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/239641624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/239643465", "body": "Done. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/239643465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/239688846", "body": "Awesome. Lessons learned.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/239688846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/286135857", "body": "Hi @kkrgithub ! Please go to https://issues.apache.org/jira/browse/TIKA-2262 and comment that you're are interested, that will add you to watcher list and thus notify you if any further action is taken on that issue. \r\n\r\nTo contribute to Tika, please look for open issues in JIRA at https://issues.apache.org/jira/browse/TIKA/?selectedTab=com.atlassian.jira.jira-projects-plugin:issues-panel and start digging! \r\n\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/286135857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/286138166", "body": "@agibsonccc Sure thing. \r\n\r\n> The release is coming out which will have the model import. @chrismattmann 's and teams example is based on snapshot. Please communicate with us if there are issues.\r\n\r\nWe are eagerly waiting for it. Can't wait to integrate it to tika and run it on Spark clusters to process huge datasets of images. \r\n\r\nFYI, we are also exploring  [Image2Text](https://github.com/tensorflow/models/blob/master/im2txt/im2txt/show_and_tell_model.py) and other OCR models to run them using deeplearning4j. ", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/286138166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/290080823", "body": "The comparison of Inception-V3 to Inception-V4 is here https://arxiv.org/pdf/1602.07261.pdf Page 10", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/290080823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/290081547", "body": "> @thammegowda, you forgot your comment there, in InceptionRestDockerfile ,)\r\n\r\nYep! forgot to update it after merging the PR.\r\nThis time we will correct it. Thanks :-) ", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/290081547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/21858496", "body": "Thanks. Noted: In the future, I will keep an eye.\r\nHis IDE probably cut it because of the width > 80 chars!  For now please update your PR \ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/21858496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/comments/21901585", "body": "@smadha\r\n> Can you please manual merge instead of me updating PR? \r\n\r\nDo you mean undo/edit these changes directly on master branch? I am not sure if that's a good idea!\r\n\r\n>I'll have to merge this PR in my branch and it'll make commit history look weird, what say?\r\n\r\nSince these changes are now in master, rebasing your PR to the latest commit on master is recommended! \r\n\r\n>  it'll make commit history look weird,\r\n\r\nNope, it doesn't... Merging with upstream master doesn't mess up your PR log\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/21901585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/47997640", "body": "@smadha Awesome PR. \nJust one little issue. Please specify charset to `IOUtils#toString();`\n\nOtherwise, the `mvn install` fails (forbidden api)\n\n![fix](https://cloud.githubusercontent.com/assets/1865964/11890743/84067a3a-a50c-11e5-8b63-4dfe7cdc7cac.png)\n\n## \n\nEDIT:\nAs the REST API content will be UTF8, \n`String respJson = IOUtils.toString(resp.getEntity().getContent(), StandardCharsets.UTF_8);` should pass the check\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/47997640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/60823039", "body": "@manalishah\n Please use path from function parameter instead of the hardcoded string.\n Perhaps you forgot to modify in last moment  ;-) ?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/60823039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/66726599", "body": "I tried to keep shorter key.\nIts Done!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/66726599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79024659", "body": "@AravindRam \n Streams and readers aren't closed! That makes a huge difference since Tika deals with millions/billions/trillions of streams at runtime.\n\nSuggestion:\nThere are already utils to read string from streams. Checkout [IOUtils#toString](https://tika.apache.org/1.1/api/org/apache/tika/io/IOUtils.html#toString%28java.io.InputStream%29)\nReusing existing utils is better than writing your own, reasons: less work and (assuming) they are well tested\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79024659/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79025534", "body": "If you are trying to ensure that `tag` is always positive (i.e. `>= 1`), `tag = Math.max(tag, 1);` is more readable\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79025534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79025921", "body": "Is this empty block needed?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79025921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79026428", "body": "readability can be improved by making compact code, Checkout [multi-catch](http://docs.oracle.com/javase/7/docs/technotes/guides/language/catch-multiple.html).\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79026428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109169916", "body": "Size of tika-app jar grew from 54MB to 263MB. I think lot of the dependencies that are added here are not necessary for *using* deeplearning4j (contrary to training model, optimizing for GPUs, cluster distributions etc ), and we can exclude them.\r\nI am looking into this currently, more comments soon", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109169916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109170600", "body": "<img width=\"633\" alt=\"screen shot 2017-03-31 at 10 20 02 am\" src=\"https://cloud.githubusercontent.com/assets/1865964/24554476/b3a9013e-15fb-11e7-8ad0-df0fb61b7369.png\">\r\n\r\nUnused imports, please take them off!\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109170600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109172681", "body": "Please fix the code format issues, specifically these:\r\n+ missing space around the keywords\r\n+ `{` that take unnecessary extra lines:\r\n   prefer \r\n```\r\nif (...) {\r\n}\r\n```\r\ninstead of \r\n```\r\nif (...) \r\n{\r\n}\r\n```\r\n+ dead code / useless commented code that are not documentation\r\n<img width=\"1279\" alt=\"screen shot 2017-03-31 at 10 22 40 am\" src=\"https://cloud.githubusercontent.com/assets/1865964/24554556/0a0271dc-15fc-11e7-9dfa-ca49f9224d77.png\">\r\n\r\n\r\nI strongly recommend reading and remembering Java Code Conventions from Sun/Oracle which is here http://www.oracle.com/technetwork/java/codeconventions-150003.pdf\r\nand then configure your IDE to do it automatically for you. ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109172681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111524972", "body": "Perfect! the very little change expected to see in tika-parsers java source. Nicely done\ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111524972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111525197", "body": "\ud83d\udc4d : fact that you concerned about the newer versions breaking the backward compatibility.\r\n\ud83d\udc4d : appreciate that you tried to solve it in a way\r\n\r\n**Suggestion / The nice way to solve it:**\r\nGet the zip of git repo for a specific commit and unzip it.\r\nhttp://stackoverflow.com/a/13636954/1506477 has more details.\r\nFrom your repo I infer we need to \r\nwget https://github.com/tensorflow/models/archive/c15fada28113eca32dc98d6e3bec4755d0d5b4c2.zip \r\n&& unzip it\r\n \r\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111525197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111525259", "body": "TODO: when we merge this PR, we modify it and then merge it", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111525259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111529125", "body": "This code is lot inefficient. It takes about 15 seconds on my super powerful machine.\r\n\r\n**Problem here**\r\nSessions can be handled in a better way to reduce disk IO (Loading model is a disk IO).\r\nInitializing the model and restoring the checkpoint is costly operation compared to the classification itself.\r\n\r\n\r\n**How to fix:**\r\nPlease reimagine Classifier service as an object in Object oriented system.\r\nGet the tensorflow session initialized in the constructor\r\nInitialize the model and restore checkpoint in the constructor.\r\nIt is perfectly okay to not safely closing the session, here we are not modifying the model.\r\n\r\nThen in the classify action, simply use pre-initialized session and the model to classify image.\r\nNote that classify action/method may be called a million times.\r\n\r\nYou may refer the old code with these points you will see the pattern. However, if you face difficulty ping me , I will have another closer look in newer version of TF how to do this.\r\n\r\n@KranthiGV ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111529125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111530205", "body": "Nope, it doesn't affect classify_image.py. Because in CLI there is no way to keep the model in memory for subsequent parse calls, we are fine with that. CLI is meant for testing few images and not meant for production.\r\n\r\nIn REST API we can keep the model in memory for subsequent parse calls ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111530205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111529580", "body": "Curious : why pass `metadata` to this getter method, any plans to use it in future?", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111529580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111529596", "body": "\ud83d\udc4d  Nicely done.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111529596/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111529712", "body": "@smadha You missed deleting this line before committing the code \ud83e\udd14\r\nPlease make the path as CLI arg and delete the commented code below", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111529712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111529768", "body": "Please use Logs instead of std out prints. Maybe this print is not necessary, instead one or more asserts expected", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111529768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113748430", "body": "@smadha What issues with simple `pip install` for that package?", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113748430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113750059", "body": "makes sense! Thanks for the clarification.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113750059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123379000", "body": "Lets make it\r\n```xml\r\n<param name=\"serialize\" type=\"bool\">true</param>\r\n```", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123379000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123379685", "body": "These lines are not needed right?", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123379685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123379864", "body": "Can the `loader` object be declared as a member variable and then reused it here?", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123379864/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123390913", "body": "I do not think it is actually needed to extend `ExternalParser`", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123390913/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123391080", "body": "We need use the code in `TrainedModels.VGG16.decodePredictions(...)`  to get `topN` objects ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123391080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116378341", "body": "shouldn't the `metada` default value be empty dictionary like `{}`? \r\nEven if it is list for any reason, shouldn't the default value be empty list `[]` ?", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116378341/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116378495", "body": "Lets just use `/captions` instead of `/getcaptions` ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116378495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116378687", "body": "I am wondering if we can reuse `caption_generator` object here. If we can, it could save few milliseconds in each call.\r\nCreate a caption generator during the initialization phase (with the model and vocabulary )\r\nand for each call, pass beam_size and max_caption_length as args.\r\n\r\nMotivation is similar to: https://github.com/apache/tika/pull/163#discussion_r111529125\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116378687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116378715", "body": "Very nicely done:+1: ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116378715/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 1, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116378798", "body": "@ThejanW See Chris's comment.\r\nExplanation:\r\nWe need to handle namespaces correctly.\r\nThis is a system wide path, it should include `tika` to isolate it from rest other apps also to avoid conflicts.\r\nThere could be many models, path should include that this model is for `im2txt`", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116378798/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116379165", "body": "My opinion: Yes place all of them under a directory that says `tika`.\r\n Since the docker image is ubuntu, `/usr/share/apache-tika/`  seems the right place.\r\nPlace your python code under `/usr/share/apache-tika/src/dl/image/caption`\r\nPlace your models under `/usr/share/apache-tika/models/dl/image/caption`\r\nThen setup PATH and PYTHONPATH variables correctly\r\n\r\n\r\n@chrismattmann thoughts on this?", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116379165/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116379213", "body": "very nice :+1: TODO: We should port this PNG decoding code to Inception-V4 based object recognition API too", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/116379213/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/121199624", "body": "@ThejanW \r\nwhat if users want to point to API hosted elsewhere than `http://localhost:8764` ?", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/121199624/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/121201002", "body": "Suggestion:\r\nInstead of having two parameters as `apiUri` and `healthUri`,\r\nlet's have a single parameter as `apiBaseUri`, it could take a value like `http://localhost:8764/inception/v3`\r\n\r\nthen internally we can construct the two other URIs:\r\n+ `healthUri = apiBaseUri + \"/ping\";`\r\n+ `apiUri = apiBaseUri + String.format(\"/captions?args=%s\", args);`\r\n\r\nHere the assumption of fixed relative paths `/ping` and `/captions` seems a reasonable one! So no need to let user modify these two\r\n\r\nThoughts?\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/121201002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/121201770", "body": "ASF has decided to not use `JSON-java`  library due to a conflicting clause in the license.\r\nPlease swap these imports with some other lib\r\n\r\nI would recommend [json-simple](https://github.com/fangyidong/json-simple)", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/121201770/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/121201898", "body": ":+1: ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/121201898/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/121201948", "body": "well done :+1: ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/121201948/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/121202730", "body": "I see, probably the resources are managed well by the internal library, no need to do anything here :+1: ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/121202730/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/121204589", "body": "No need to declare `captions` and `maxCaptionLength` here right?\r\nIf the only purpose here is to log them, why not log them inside the implementation of `ObjectRecogniser` itself ?\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/121204589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/121204847", "body": "I feel it is better to move these logs inside `recogniser.initialize()` method", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/121204847/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/121204898", "body": "well done :+1: ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/121204898/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/121207360", "body": ":-1:  There is a better way to handle this.\r\n\r\nIn Model and Services terminology, we have\r\n `TensorflowRESTRecogniser`, `TensorflowImageRecParser`, and `TensorflowRESTCaptioner` as services\r\n`RecognisedObject` and `CaptionObject` as models.\r\n\r\nThe problem:\r\nthe condition is on the service, i.e. `recogniser instanceof TensorflowRESTRecogniser`\r\nWhat if we add a new awesome service tomorrow? We need to change this code right?\r\n\r\nThe solution:\r\n  Make your decision based on the model object\r\n\r\ni.e. check \r\n```java\r\nfor (RecognisedObject object: objects) {\r\n  if (object instanceof CaptionObject`) {\r\n    This result is a caption\r\n  } else {\r\n    this is from something else, the default one\r\n  }\r\n}\r\n```\r\nAs long as the new services return data in the same model, the code will work.\r\nLet me know if this needs more explanation!", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/121207360/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/122252365", "body": "yes, `apiBaseUri` should be from config", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/122252365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123394997", "body": "Unused imports? \r\n![image](https://user-images.githubusercontent.com/1865964/27411647-daab361a-56a3-11e7-9ba8-8c21e2a80e85.png)\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123394997/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123396378", "body": "@ThejanW \r\nShould add\r\n```xml\r\n<mime>image/png</mime>\r\n```\r\nright?", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123396378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123396694", "body": "Looks like this test is a copy-paste of a previous test.\r\n\r\nThis one needs more care to get it working!\r\n1. ` expectedObjects` are wrong assertion. `BASEBALL_IMAGE_PNG` doesnt have cat!\r\n2. Server crashes when I pass PNG\r\n```python\r\n[2017-06-22 00:17:44,007] ERROR in app: Exception on /inception/v3/captions [POST]\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1982, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1614, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1517, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1612, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1598, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/usr/bin/im2txtapi\", line 217, in gen_captions\r\n    captions = generator.beam_search(app.sess, image_data)\r\n  File \"/usr/share/apache-tika/src/dl/image/caption/caption_generator.py\", line 126, in beam_search\r\n    initial_state = self.model.feed_image(sess, encoded_image)\r\n  File \"/usr/share/apache-tika/src/dl/image/caption/model_wrapper.py\", line 65, in feed_image\r\n    feed_dict={\"image_feed:0\": encoded_image})\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 767, in run\r\n    run_metadata_ptr)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 965, in _run\r\n    feed_dict_string, options, run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1015, in _do_run\r\n    target_list, options, run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1035, in _do_call\r\n    raise type(e)(node_def, op, message)\r\nInvalidArgumentError: Invalid JPEG data, size 263301\r\n\t [[Node: decode/DecodeJpeg = DecodeJpeg[acceptable_fraction=1, channels=3, dct_method=\"\", fancy_upscaling=true, ratio=1, try_recover_truncated=false, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_recv_image_feed_0)]]\r\n\r\nCaused by op u'decode/DecodeJpeg', defined at:\r\n  File \"/usr/bin/im2txtapi\", line 131, in <module>\r\n    app = Initializer(__name__)\r\n  File \"/usr/bin/im2txtapi\", line 108, in __init__\r\n    restore_fn = model.build_graph(FLAGS.checkpoint_path)\r\n  File \"/usr/share/apache-tika/src/dl/image/caption/model_wrapper.py\", line 42, in build_graph\r\n    ShowAndTellModel().build()\r\n  File \"/usr/share/apache-tika/src/dl/image/caption/model_wrapper.py\", line 343, in build\r\n    self.build_inputs()\r\n  File \"/usr/share/apache-tika/src/dl/image/caption/model_wrapper.py\", line 192, in build_inputs\r\n    images = tf.expand_dims(self.process_image(image_feed), 0)\r\n  File \"/usr/share/apache-tika/src/dl/image/caption/model_wrapper.py\", line 156, in process_image\r\n    image = tf.image.decode_jpeg(encoded_image, channels=3)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_image_ops.py\", line 345, in decode_jpeg\r\n    dct_method=dct_method, name=name)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 763, in apply_op\r\n    op_def=op_def)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 2327, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1226, in __init__\r\n    self._traceback = _extract_stack()\r\n\r\nInvalidArgumentError (see above for traceback): Invalid JPEG data, size 263301\r\n\t [[Node: decode/DecodeJpeg = DecodeJpeg[acceptable_fraction=1, channels=3, dct_method=\"\", fancy_upscaling=true, ratio=1, try_recover_truncated=false, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_recv_image_feed_0)]]\r\n\r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123396694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123396901", "body": "This is a weak assertion. \r\nSince this is a caption, considering adding phrases such as `baseball player holding bat` instead of  just the object names", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/123396901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/140669367", "body": "Improvement: We should use `eng` as per [ISO 693-2](https://www.loc.gov/standards/iso639-2/php/code_list.php). Wish I knew this when I coded this up.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/140669367/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/140669424", "body": "Improvement: `String.format(Locale.getDefault()`, ...) and `String.format(...)` are equivalent right (default is inferred implicitely)? \r\nRule of thumb - 1) When you have two options, pick the simple one! For me, latter one looks simple\r\n2) If you want to enforce a specific locale, then it not same as default.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/140669424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/140669630", "body": "Correct me if my understanding is wrong:\r\n-  we have removed minConfidence and topN from ObjectRecognitionParser\r\n+ We have added them to classes that implement `ObjectRecogniser` interface - Like TensorflowRestRecogniser, TensforflowRestImageCaptioner etc ..  These are referred as _client_ in Thejan's terminology\r\n+ We also have URL accompanying each _client_, which allow tweaking of these parameters.\r\n\r\n\r\nFood for Design thought: We might not have URLs for every client. to be specific - we could have a client using DL4J that doesn't use REST communication. So these parameters are required for the client and hence they should have it.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/140669630/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/140670009", "body": "> would be great if we can store object.getLabel() and object.getConfidence() into separate metadata fields. \r\n\r\nIMHO, it complicates metadata key-values. If we split, we get two arrays of confidence and labels, then users have to match labels with confidence using the index in arrays. One solution to this problem is still an open issue in Tika - i.e, support complex data structure like JSON for metadata. Until then we have full info captured in XHML content, so it should be fine.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/140670009/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "kinow": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/d57a6216303f091778160d97f317a5f3e2d56d21", "message": "Fix a typo in log message, and adjust code indentation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "onealj": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/f53a2f28611bee60ac00e3b6717972751bcb3a5e", "message": "SUPPORTED_TYPES is immutable\n\nIn case SUPPORTED_TYPES is ever changed back to a set containing more than one value, a reminder to use an immutable container such as `Collections.unmodifiableSet(set)`."}, {"url": "https://api.github.com/repos/apache/tika/commits/9687f08f38d2b634af7d334e35e809182096f1c1", "message": "SUPPORTED_TYPES is an immutable singleton set\n\nYou can simplify the initialization using a singleton set for SUPPORTED_TYPES"}, {"url": "https://api.github.com/repos/apache/tika/commits/08d09a559c36a7f5f0e96887ca3e0ea8eb79a321", "message": "Update WordMLParser.java\n\nSince WORDML_TO_XHTML and IGNORE_CHARACTERS are never modified after the static initialization, the thread-safe ConcurrentHashMap probably isn't needed."}, {"url": "https://api.github.com/repos/apache/tika/commits/55caab732574518e8676ec9718da05bde1c1ce8f", "message": "POIFSContainerDetector ASCII-encoded magic number\n\nChange file magic number from byte[] literal to a byte array determined by an ASCII string literal."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sebastian-nagel": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/da7ade6350edf603e0caef03827eddc357e636ab", "message": "TIKA-2422 -- improve detection of Graphviz *.dot format\n- allow leading C++-style comments\n- add unit test, incl. comments and graphs with name/ID"}, {"url": "https://api.github.com/repos/apache/tika/commits/8d8e818cedd6727a9ff43572a31aad83b9537350", "message": "TIKA-2422 -- improve detection of Graphviz *.dot format"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "genekhart": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/217", "title": "fix for TIKA-2545 contributed by genekhart", "body": "For original inputstreams smaller than buffersize, should create bytearrayinputstream with bounds determined by size of original input, not pass in entire buffer.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mcaracuel": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/216", "title": "Implementation of TIKA-2542 by mcaracuel", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "glb": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/214", "title": "TIKA-2479 - Handle empty cells in XLSX", "body": "The POI parser doesn't emit `cell` events for empty cells (by design),\r\nbut they do provide some sample code for how to handle sparse events.\r\nThis commit updates `XSSFExcelExtractorDecorator` to emit empty `tr`\r\nand `td` elements for the missing cells.\r\n\r\nSee also: https://bz.apache.org/bugzilla/show_bug.cgi?id=57775\r\nSee also: https://bz.apache.org/bugzilla/show_bug.cgi?id=61937", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "med-ali-bannour": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/212", "title": " NetCDF-Java Library", "body": " NetCDF-Java Library with the version 4.5.5 is old, i think it should be updated to new version because this library made a problem for me when actually try to migrate Guava library.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bitsgalore": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/209", "title": "Tika 2468 Mimetype patterns and magic for Lotus 1-2-3 and Quattro Pro spreadsheet formats", "body": "This patch adds version-specific mimetype patterns for Lotus 1-2-3 and Quattro Pro spreadsheets. \r\n\r\nThe magic patterns were adapted from the UK National Archive's [PRONOM](https://www.nationalarchives.gov.uk/PRONOM/Default.aspx) registry. Some additional info below: \r\n\r\n## License\r\n\r\nPRONOM is published under the Open Government license:\r\n\r\n<http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/>\r\n\r\nI added an attribution to this source in NOTICE, as per:\r\n\r\n<https://www.apache.org/legal/resolved.html>\r\n\r\n## Sample files\r\n\r\nI also included sample files for all of these formats to test-documents:\r\n\r\n* I created the .wks, .wb1 and .wb2 samples from a copy of Quattro Pro 6.0 running under Windows 3.11 on a virtual machine. \r\n\r\n* The .wk4 and .123 sample files (note 'lotusftp' name suffix) were taken from the Internet Archive's mirror of the old Lotus FTP site:  \r\n\r\n<https://archive.org/details/2012_11_24_ftp_lotus_com>\r\n\r\n* The .wk1, .wk3, .wq1 and .wq2 samples are old files from my personal collection.\r\n\r\nBelow the detection results for all Lotus / Quattro Pro files in *test-documents* (including the previously existing ones):\r\n\r\n|Filename|mimeype|\r\n|:--|:--|\r\n|testLotus123.wks|application/vnd.lotus-1-2-3; version=1|\r\n|testLotus123.wk1|application/vnd.lotus-1-2-3; version=2|\r\n|testLotus123.wk3|application/vnd.lotus-1-2-3; version=3|\r\n|testLotus123-lotusftp.wk4|application/vnd.lotus-1-2-3; version=4|\r\n|testLotus123-lotusftp.123|application/vnd.lotus-1-2-3; version=97+9.x|\r\n|testQuattro.wq1|application/x-quattro-pro; version=1-4|\r\n|testQuattro.wq2|application/x-quattro-pro; version=5|\r\n|testQuattro.wb1|application/x-quattro-pro; version=1+5|\r\n|testQuattro.wb2|application/x-quattro-pro; version=6|\r\n|testQUATTRO.wb3|application/x-quattro-pro; version=7-8|\r\n|testQUATTRO.qpw|application/x-quattro-pro; version=9|\r\n\r\n## Possible issues\r\n\r\nCouple of small things to watch here. First of all I wasn't quite sure how to use the \"version\" field for the following format/version combinations:\r\n\r\n* `\"application/vnd.lotus-1-2-3;version=97+9.x\"`\r\n* `\"application/x-quattro-pro;version=1-4\"`\r\n* `\"application/x-quattro-pro;version=1+5\"`\r\n\r\nThis all looks a bit ugly to me; maybe there's a better way to do this. Also, the versioning for the Quattro Pro formats is weird because Quattro Pro for DOS 4 was follwed up by version 1 for Windows, which was in turn followed by version 5! Perhaps the \"1+5\" entry should be changed to simply \"5\" (which is not strictly correct, but possibly less confusing).\r\n\r\nOther thing was that my attempts to include glob patterns for Lotus 1 (.wks) resulted in a conflict with `\"application/vnd.ms-works\"`, so I commented them out nof the Lotus definitions for now. I'm don't quite follow the underlying rules/logic, maybe there's some way to include them after all.\r\n\r\n## Addition 19 September:  added WordPerfect 4.2 mimetype definition\r\n\r\nI also include a mimetype definition for WordPerfect 4.2, which is derived from the trID pattern by Philip Storry. From the TrID website I understand its is released under a AGPL license:\r\n \r\n<http://mark0.net/soft-tridscan-e.html>\r\n\r\nNot 100% clear to me if this is compatible with the Apache license. If not, perhaps the WP definition should be left out.\r\n\r\nI provided a sample file as well. \r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jerni-zu393": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/185", "title": "TikaFix ---Contribution by jerni-zu393", "body": "I have added the magic bits for three files (*.keystore/.jks , *.apk , *.aac). It can be detect the file types even the files should not have \".\"extensions .\r\n\r\nI have attached here below the sample files for testing purpose .\r\n\r\n[keystore.tar.gz](https://github.com/apache/tika/files/1077097/keystore.tar.gz)\r\n\r\n[apktest.zip](https://github.com/apache/tika/files/1077108/apktest.zip)\r\n[aactest.zip](https://github.com/apache/tika/files/1077115/aactest.zip)\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "user667": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/171", "title": "TIKA-2340 cleanup of direct dependencies / fix locale-dependent test case", "body": "This is an effort of dependency cleanup (with the help of mvn dependency:analyze and others). Not sure if this is acceptable without TIKA ticket number (or as such), I'll be glad to adjust this PR.\r\n\r\nWe've been updating to a recent (1.6-1.14) tika version lately and found a delta of +40libs/+20MB and went on to investigate. Turns out tika-parsers relies on a lot of transitive dependencies.\r\n\r\nThese commits try to specify (some) direct dependencies for libraries that are used in imports of parser classes. Additionally one of the test cases failed on my local setup with a non-default-English locale.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wildloop": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/167", "title": "New tabbed TikaGUI with Html preview and lucene query.", "body": "Rendering XHTML using JFX WebView (it looks like parsed PDF).\r\nI've changed Tika App GUI card layout to JTabbedPane, it's easier to use.\r\nLucene queries UI, auto-indexing (in RAM) tested documents.", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/pulls/152", "title": "Mapping PDF document TextPosition to XHTML span attributes, Lucene queries", "body": "Mapping PDF document TextPosition to XHTML span attributes (e.g. coordinates to style). \r\nRendering  XHTML using JFX WebView (it looks like parsed PDF).\r\nI've changed Tika App GUI card layout to JTabbedPane, it's easier to use.\r\n\r\nScreen with parsed sample invoice found here: https://slicedinvoices.com/pdf/wordpress-pdf-invoice-plugin-sample.pdf\r\n\r\n![image](https://cloud.githubusercontent.com/assets/2461648/23103024/4c3129ac-f6b4-11e6-9b43-3875d36eb48a.png)\r\n\r\nLucene queries UI, auto-indexing (in RAM) tested documents:\r\n\r\n![image](https://cloud.githubusercontent.com/assets/2461648/23108126/c3a12970-f708-11e6-8683-b9cbfb21c5fa.png)\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wko27": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/166", "title": "fix for TIKA-2044 contributed by wko27", "body": null, "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/110675586", "body": "Oops, re-added!", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/110675586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/110677178", "body": "Hm, apologies.  TBH, I'd rather switch usage to Java 8's thread-safe DateTimeFormatter or joda-time, but ... seems like Tika is still intended for Java 7 and I'd rather not introduce joda-time as a dependency.  Reverted ...\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/110677178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "lukaszozimek": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/160", "title": "TIKA-2312 proposition of exposing ID3TagsAndAudio", "body": "[Issue Link]\r\nhttps://issues.apache.org/jira/browse/TIKA-2312", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/289490025", "body": "@Gagravarr \r\nCurrently I am writing custom Mp3 Parser which allow user to import Metadata from Radio Automation System which name is AudioVault. This tool is used by professional broadcasters.\r\nThis system has custom metadata structure for all supported audio type files. During the research I recognised that it add system specific metadata which depends on occurrence of ID3v2 tags in any version. To be straight if ID3v2 occurring this system add their specific metadata on top of file if not on the bottom ", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/289490025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "essiembre": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/143", "title": "New XFDL parser for TIKA-2222 contributed by pascal.essiembre", "body": null, "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/188107142", "body": "Removed commented unit test as requested.  The code was functional it just needed a PDF with XFA to be referenced for testing but it can easily be added back if needed.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/188107142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "AravindRam": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/131", "title": "fix for TIKA-2053 contributed by AravindRam", "body": "Integrated Tag Ratio into Text Parser\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/216758369", "body": "Hi Professor @chrismattmann \n\nHere is the link to the documentation for running Grobid Quantities as a REST service. \nhttp://wiki.apache.org/tika/GrobidQuantitiesParser . It has already been merged into the Tika Wiki Page. \n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/216758369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/246165920", "body": "Hi @chrismattmann ,\n\nI have incorporated the changes according to your suggestions in the comments. Please let me know if this is how you wanted it to be modified Professor.\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/246165920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/74892549", "body": "Actually I did not make these changes. It was already present when I cloned the repository Professor.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74892549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74892649", "body": "I just added one dependency for HTML parser. Did not make these changes.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74892649/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74892816", "body": "This is the only dependency I added in this file.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74892816/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74893517", "body": "Added ALv2 header\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74893517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74893544", "body": "Added\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74893544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74893707", "body": "Sure Professor. Will do the necessary changes.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74893707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74895255", "body": "Renamed it to the appropriate conventional format.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/74895255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/75802808", "body": "@chrismattmann \nI am actually planning to add a class for TextToTagRatio inside TxtParser.java and define all the methods inside the class as static methods. Then I'll overload the parse method of Tika by adding one more parse method with boolean argument in addition to the existing parameters. Will use this boolean value to decide whether to invoke TextToTagRatio Parser or not. Is this approach fine or any further suggestions Professor?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/75802808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79112988", "body": "@chrismattmann \nMade the necessary change as per your suggestion.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79112988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79113171", "body": "Removed all the comments.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79113171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79113292", "body": "@thammegowda \nThanks for pointing it out. Have incorporated the changes.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79113292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79113473", "body": "Yes tag is not supposed to be 0 since we are computing text/tag ratio. To avoid the denominator value from becoming zero while computing the ratio, I added that change. This logic also makes sense and like you said its more readable as well.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79113473/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79113609", "body": "I had written a logic before. I guess I forgot to remove the condition after that. Removed it now. Thanks\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79113609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79113854", "body": "Good point @thammegowda. I was not familiar with this IOUtils package before. This will certainly improve performance.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/79113854/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "rgauss": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/92", "title": "TIKA-774: ExifTool Parser", "body": "Contribution of tika-exiftool for review\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zetisam": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/86", "title": "fix for TIKA-1841 contributed by zetisam", "body": null, "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/173879114", "body": "Hi, I will fix the indentation. Editor was still setup to use tabs instead of spaces for another project.\n\nThis will indeed cause the notes to appear twice, once with the slide (as is currently also the case for PPTX), and once at the bottom. There might be people having projects built on the fact of having the slide notes at the end of the output, and I don't want to break functionality for them. I don't know what the project's stance is on this.\n\nAdditionally (but that's maybe another issue), the PPT output has each slide in a seperate `<div class=\"slide\">` block, while in the PPTX output this isn't the case. This is also something that could be unified, but again, I don't want to break existing behavior.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/173879114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/174871830", "body": "Hi Nick,\n\nYou're absolutely right. I didn't think of that scenario. I already made a separate issue on jira for the XML structure differences: TIKA-1841\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/174871830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "cstamas": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/35887946", "body": "Comitted as\nhttp://svn.apache.org/viewvc?view=revision&revision=1570860\n\nThanks, closing this PR\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/35887946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/42438487", "body": "Issue closed, so closing this PR too.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/42438487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/43891625", "body": "Fixed with commit\nhttp://svn.apache.org/viewvc?view=revision&revision=1596612\n\nClosing this PR as commit above implements this change\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/43891625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jrhe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/46688435", "body": "Why do you only accept deps that in in Maven Central? No its not. I guess I need to pester the author of libpst to publish it?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/46688435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/46693880", "body": "Cheers for the help. The java packaging situation has changed a lot since used it!\n\nIs there anyway I can build tika with java-libpst 0.8.1 in the meanwhile?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/46693880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mkr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/48602823", "body": "Whitespace / indentation changes: They are in a separate commit and happen as a result of moving all extraction code into the try / finally block in 1b053d1. Would you want them in a separate pull request? Let me know what the wildcard import policy is and I adjust my IDE settings.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/48602823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "grossws": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/57935519", "body": "Does it lead to permgen leak (via threadlocal holding classloader tree) in servlet containers/app servers?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/57935519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58011229", "body": "This PR make `ThreadLocal<SimpleDateFormat>` useless since you create SDF twice in `handleDateTags` and destroy it then.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58011229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58043302", "body": "@vilmospapp, @chrismattmann, it seems that Tomcat (where I saw such problem) is quite paranoidal about thread locals. Its check is usually done before GC throw out weak references (`ThreadLocalMap.Entry` is a `WeakReference`), so Tomcat logs something like:\n\n```\n06-Oct-2014 19:37:41.009 SEVERE [RMI TCP Connection(14)-127.0.0.1] org.apache.catalina.loader.WebappClassLoader.checkThreadLocalMapForLeaks The web application [] created a ThreadLocal with \n  key of type [org.apache.tika.parser.image.ImageMetadataExtractor$ExifHandler$1] (value [org.apache.tika.parser.image.ImageMetadataExtractor$ExifHandler$1@3a97b29a]) \n  and a value of type [java.text.SimpleDateFormat] (value [java.text.SimpleDateFormat@6b2ed43a]) \n  but failed to remove it when the web application was stopped. \n  Threads are going to be renewed over time to try and avoid a probable memory leak.\n```\n\nIf I force several GCs after application undeploy this thread local is usually collected. I think you can remove PR #17 and let this PR merge into tika.\n\nTo test that it's collected I created simple servlet:\n\n``` java\n@WebServlet(name = \"t\", urlPatterns = {\"/t\"})\npublic class AppServlet extends HttpServlet {\n  @Override\n  protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n    Metadata metadata = new Metadata();\n    try {\n      new ImageMetadataExtractor(metadata).parseJpeg(new File(\"/home/gross/repo/tl-test/test.jpeg\"));\n    } catch (SAXException | TikaException e) {\n      throw new ServletException(e);\n    }\n    resp.getWriter()\n        .append(metadata.get(TIFF.ORIGINAL_DATE));\n  }\n}\n```\n\nWhich is deployed to tomcat 8 with VM running with `-XX:+PrintGCDetails -XX:+TraceClassUnloading` to see class unloading and GC executions. To force GC I used `jcmd <pid> GC.run` or _Perform GC_ in `jvisualvm`.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58043302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58085193", "body": "See PR #15\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58085193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58085438", "body": "Also, about different webapp (or things that use non-trivial classloader configuration) memory leaks: http://wiki.apache.org/tomcat/MemoryLeakProtection\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58085438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58094434", "body": "So, you have SDF that is created on first `get()` in `handleDateTags(...)` and removed in finally block. Then there's no reason to store it in `ThreadLocal`. It's more inefficient than local variable.\n\nI think that private static SimpleDateFormat plus some syncronized format method for it will be more efficient and obvious method to fix issue.\n\n``` java\nstatic class ExifHandler implements DirectoryHandler {\n  private static final SimpleDateFormat DATE_UNSPECIFIED_TZ = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\");\n\n  private synchronized String formatDateWithoutTimeZone(Date datetime) {\n    return DATE_UNSPECIFIED_TZ.format(datetime);\n  }\n\n  // ...\n  public void handleDateTags(Directory directory, Metadata metadata) {\n    // ...\n    String datetimeNoTimeZone = formatDateWithoutTimeZone(...);\n  }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58094434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58389476", "body": "@chrismattmann, as I understand, this PR doesn't lead to webapp classloader leak since `SDF` in `ThreadLocal` anonymous subclass (`ImageMetadataExtracto$ExifHandler$1`) is loaded not by webapp classloader (but by system one).\n\nIf `ThreadLocal` \"contains\" instance of a class loaded by webapp classloader it leads to permgen leak when external thread pool used. Also, it can be in any app with non-trivial classloading (like OSGi apps).\n\nSo, it's ok to merge this PR. But tomcat 6+ will log errors after unloading webapp used this class since it's quite paranoidal. Maybe, some info should be added to documentation about this behavior to avoid issues creation in jira.\n\nPR #17 was closed by @vilmospapp.\n\nFYI, Joshua Bloch wrote:\n\n> There are many compelling uses for thread locals.  Here are a few off the top of my head:\n> (1) Genuine per-thread context, such as user id or transaction id.  Works great.  Easy to clean up when the thread exits the scope. No leaks.\n> (2) Per-thread instances for performance.  Aaron's SimpleDateFormat example (above) is one example of this pattern.\n> (3) \"Sleazing\" values through callbacks that you don't control: sometimes you must call a library method that calls back into your package.  At this point, you need some context that you were unable to pass to yourself, due to deficiencies in the library.  In this rare situation, thread locals can be a lifesaver.\n> \n> In all of these cases, thread locals are the right thing to use. Can you cause unintended object retention with thread locals? Sure you can. But you can do this with arrays too. That doesn't mean that thread locals (or arrays) are bad things. Merely that you have to use them with some care. The use of thread pools demands extreme care. Sloppy use of thread pools in combination with sloppy use of thread locals can cause unintended object retention, as has been noted in many places. But placing the blame on thread locals is unwarranted.  Virtually all threading systems of which I'm aware provide support for thread local variables. There's a reason for this: they are a fundamental part of the thread abstraction.\n\nSee http://jsr166-concurrency.10961.n7.nabble.com/Threadlocals-and-memory-leaks-in-J2EE-td3960.html#a3984. \nAlso, unresolved bug in jvm bugzilla http://bugs.java.com/bugdatabase/view_bug.do?bug_id=6254531. Looks like _wontfix_ bug.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58389476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58488526", "body": "@chrismattmann, yes =)\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58488526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/70435562", "body": "Can you reformat code to Tika style to avoid rewritting all the file? It's hard to distinguish changes from reformatting currently.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/70435562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/75781158", "body": ":+1:, Chris\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/75781158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/290013958", "body": "Can you, please, reformat all python code according to PEP8 (it's usually sone with IDE or any automated tool)?\r\n\r\nAlso, https://github.com/apache/tika/pull/163/files#diff-d1b641ce7738b7a40d608caeaa51994cR36 is quite normal while developing but should point to Apache Tika repo afterward. \r\n\r\n@thammegowda, you forgot your comment there, in [`InceptionRestDockerfile`](https://github.com/apache/tika/blob/master/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionRestDockerfile#L30) ,)", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/290013958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/290026045", "body": "@KranthiGV, my first name is Konstantin, but simplier is just to use nickname.", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/290026045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/290107810", "body": "You could left it open and add more commits to your `TIKA-2309` branch. \r\n\r\nSometimes it's better to squash commits (e.g. with `git rebase --interactive`) right before merging if some of them are just fixups for previos, it's preffered way in some projects but optional.", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/290107810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/290118320", "body": "Also, is `TSDDetector` required at all? Maybe `MagicDetector` configured via `tika-mimetypes.xml` is enough for detection?", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/290118320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/290119034", "body": "@Shinobi75, thanks for contributing to Apache Tika, we appreciate that.\r\n\r\nAfter fixing issues mentioned above, I can review again. Or @tballison if he'll be free at a time.", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/290119034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/108691521", "body": "Adding dependency to `tika-core` is serios thing to be discussed in dev@tika.apache.org, IMHO.\r\n\r\nAlso, please reformat this to use 2 space (no tabs) indents in xml.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108691521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108692713", "body": "Removed unnecessary comments and commented imports, please. \r\n\r\nIf you nead logging in `tika-core`, you could use `java.util.logging` classes. In all other Tika packages you could use SLF4J with `org.slf4j.Logger` saved in `private static final Logger LOG` field.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108692713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108693049", "body": "Could you reformat this? With 4 spaces for indent and no TABs (in java files).", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108693049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108693388", "body": "I guess, it could be in `static final` field alongside with `byteTSDMagicCode` to avoid extra parsing each time.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108693388/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108694809", "body": "This type should be added to [`tika-mimetypes.xml`](https://github.com/apache/tika/blob/master/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml) instead of `custom-mimetypes.xml` which is intended for downstream users IIRC. @tballison, could you confirm this please if I am correct.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108694809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108695414", "body": "It's preferred to call local vars with `lowerCamelCase` instead of `HighCamelCase`.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108695414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108696169", "body": "I guess, there should be some helper in Tika itself to avoid writing such method.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108696169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108696375", "body": "Same as before, if logging is not required, remove commented imports.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108696375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108697183", "body": "`private static final Logger LOG = LoggerFactory.getLogger(TSDParser.class);`\r\n\r\nWe haven't updated info for contributors but it would be preferred signature for logger.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108697183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108698529", "body": "You could use DEBUG or TRACE level for such messages, it sometimes helps. Also, with SLF4J preferred logger usage will look like\r\n```java\r\nLOG.debug(\"TSDParser --> buildMetas genTime: {}\", tsdMetas.getEmitDateStr());\r\n```\r\nto avoid implicitly calling `tsdMetas.getEmitDateStr().toString()` when corresponding level isn't logged. Maybe in this case it's irrelevant, but produces clearer and better code.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108698529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108699216", "body": "Why this format and `Locale.ITALY` is used? Maybe `Locale.ROOT` to make it more or less locale-agnostic? Is there some fixed date format in TSD like RFC822/2822/5322 one?", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108699216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109646955", "body": "@Shinobi75 please, get rid of tailing space here and below", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109646955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109647001", "body": "tailing whitespace", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109647001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109647029", "body": "tailing whitespace", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109647029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109647315", "body": "mb add logging instead of swallowing exception silently", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109647315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109647621", "body": "It's better to use identifier starting with small letter for local and instance vars", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109647621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109651067", "body": "Remove this change. I guess, your editor has removed trailing newline, check for some configuration option to avoid it.\r\n\r\nAlso, you can use `git add -p` to choose what to commit instead of committing all changes.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109651067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109651158", "body": "Formatting issues", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109651158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109652275", "body": "unnecessary `try`/`catch`, test will fail when exception thrown anyway", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109652275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/110549163", "body": "Why are you sure that `MboxParser` would never be called from different threads?", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/110549163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/110549184", "body": "Don't strip EOF whitespace, please", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/110549184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/124777631", "body": "Shouldn't that be `Tika App for metadata discovery and extraction`?", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/124777631/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "vilmospapp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/57982110", "body": "@chrismattmann , @grossws \nBased on the documentation (http://docs.oracle.com/javase/7/docs/api/java/lang/ThreadLocal.html):\n\n```\nEach thread holds an implicit reference to its copy of a thread-local variable as long as the thread is alive\n and the ThreadLocal instance is accessible; after a thread goes away, all of its copies of thread-local \ninstances are subject to garbage collection (unless other references to these copies exist)\n```\n\nI think it should be garbage collected.  Anyway it could be answered in details if we could see how the heap behaves  in a system with high load. (Perhaps with some (4-5) thread dumps within 1-3 seconds after each other to see whether GC removes the variables or not.) I have no such test environment, but if someone has, and creates the heap and thread dump, I can verify it.\n\nCheers,\nVilmos\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/57982110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/57985011", "body": "Hi @chrismattmann and @grossws \n\nI read about this possibility a bit, and found this blog: http://java.jiderhamn.se/2012/01/29/classloader-leaks-iv-threadlocal-dangers-and-why-threadglobal-may-have-been-a-more-appropriate-name/\n\nBased on this, I think,  we should enclose the get() method calls with a try-finally block, and in the finally block call the remove() on the thread local to avoid keeping the references.\n\nIf both of you agree, I would create the modification and send another pull request.\n\nCheers,\nVilmos\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/57985011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58012970", "body": "Hi @grossws \n\nThat's true, but my other option would be to add the remove() call in a finalizer, but there's no guarantee, that it will be invoked. Do you have better idea?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58012970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58088330", "body": "Hi @grossws \n\nI modified it, so the destroy will run only once. Anyway the main point in using this is to avoid concurrency issues related to SDF, not only caching the SDF for later usage.\n\nAnyway thanks for the detailed information commented on https://github.com/apache/tika/pull/15\n\nBased on that, I think it's better to have this finally block based destroy to avoid the possible memory leak.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58088330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "hlavki": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/58175577", "body": "Hi Chris, yes, it adds test that exposes the bug. But today I've found solution and it needs commons-logging.jar on classpath of forked process.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58175577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58193002", "body": "this is patch proposal https://github.com/hlavki/tika/commit/22c2ad8655c1e7f352974da4f1eb44f9317769e7\nBUT!\n1. I copied commons-logging-1.2.jar to tika-core resources\n2. commons-logging classes are bundled into bootstrap jar of ForkParser\n3. LogFactory is excluded from classloading in ClassLoaderProxy.java\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58193002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58822803", "body": "Hi Chris, I understand. I need a little bit more time to find proper fix.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58822803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/62376879", "body": "Hi, I discovered one issue when using ForkParser as OSGi service. You should not call close() method. So I think pull request https://github.com/apache/tika/pull/13 (commit https://github.com/apache/tika/commit/0e15b31) should be removed.\n\nAbout using ForkParser in OSGi I didn't found proper solution yet. I found solution where I added commons-logging dependency to classpath. It works with ForkParser, but logging doesn't work for DefaultParser.\n\nAnother solution is to have separate osgi bundle (e.g. tika-bundle-fork) with added commons-logging dependency.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/62376879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/64008686", "body": "Sorry for delay.  I think, we can't remove close() method from ForkParser. It releases resources (client & pool). I think better way is to revert https://github.com/apache/tika/commit/0e15b31\nand find better way to use ForkParser in OSGi environment.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/64008686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/74731722", "body": "I am working on it\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/74731722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/74746542", "body": "Pull request created https://github.com/apache/tika/pull/30\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/74746542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jotomo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/59001558", "body": "Thanks for testing this Chris.\n_sigh_ I saw this error one my notebook, but dismissed it when continuing on my desktop machine, where it built when using JDK7. After trashing maven's cache on both system it now works on my notebook, but fails on my desktop machine. Sounds like a race condition or something. I think [this issue](https://github.com/rometools/rome/issues/135) might be the cause (OSGi class loading issue). Looking at the _rome_ 1.5.0 jar file, I noticed the manifest dropped those Import-Package/Export-Package clauses that are likely really imported for OSGi. Definately not the \"this'll be a quick patch to submit\" I initially and naively thought ... and OSGi is nothing I have experience with. So, close this issue (upgrading to rome 1.5) and try again with rome 2.0 or so?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/59001558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "thaichat04": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/60264496", "body": "Close, wrong manipulation in pull request\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/60264496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/71610728", "body": "Yes, I did merge to master before release 1.7\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/71610728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "LukeLiush": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/70413673", "body": "found another error in at the line of code that check the threshold.\n    maxProb < threshold ? this.rootMimeType : bestEstimate;\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/70413673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/70456722", "body": "https://issues.apache.org/jira/browse/TIKA-1517\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/70456722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/71248351", "body": "@chrismattmann \n@grossws\nHi, i reformatted the code for change, please kindly let me know if you are able to view the change.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/71248351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/71249298", "body": "@grossws , @chrismattmann \nHi,\nI think i closed this request, and recreated another same pull request where the code has been reformatted.\nPlease kindly let me know if you are able to view the second request.\nPS:\n add applyProbabilities mechanism #24 is the second request.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/71249298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/71297445", "body": "Hi @chrismattmann , thanks a lot for following this up.\nI thought about sublcassing MimeTypes when i was implementing it, but I saw that the MimeTypes in the development/trunk version is defined to be a \"final\" class like the String class which is not extendable...\n\nI will get rid of the [Luke]....:)\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/71297445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/73164531", "body": "clarify the IOUtility class \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/73164531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/94699987", "body": "Thanks @chrismattmann ;\nyes, this one\"probabilistic mime selection\" in this pull request#41 work out of the box without a model.\nRegarding the small pull request, i am not sure i understand it correctly...\nDo you want to me create a pull request for the code change I made only in the MimeTypes.java? I actually have made some change in the MimeTypes.java in this pull request, I have got rid of the private access modifier of the 2 methods i.e. List<MimeType> getMimeType(byte[] data) and byte[] readMagicHeader(InputStream stream), so that i can call them from the ProbabilisticMimeDetectionSelector class. This small change seems to only reflect what the tika 1535 might be for.  not sure if you want me to create a pull request like this.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/94699987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/95782079", "body": "Thanks @Gagravarr for asking.\nplease refer to the jira issue in the following link for details. \nhttps://issues.apache.org/jira/browse/TIKA-1610\nI believe cbor file is a prettified json, which might take content as its value , the content can be an entire html or xhtml doc. If xhtml is present in the cbor file, then tika will not even bother to look at those type that has priority lower than the xhtml's priority(i.e. 50); i am assigning 50 to cbor in tika-mime-types.xml to have that included in the magic possible list. \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/95782079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/96133233", "body": "@chrismattmann , i have added some code to support the tika facet. As an example making facet calls with this feature, please kindly refer to the unit test in this pull request \"ProbabilisticMimeDetectionTestWithTika\"; i am also write you another update with this too.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/96133233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "tokee": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/74358243", "body": "I think I have corrected everything you mentioned. Should I re-submit a pull request or are the commits enough?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/74358243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/24710954", "body": "My IDE tricked me there. I'll put them back.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24710954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24711035", "body": "Remove what? Formatting changes? I have tried that (sending new pull request in a few minutes).\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24711035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24711063", "body": "True, although my reformatting followed the indentation level. I have changed it back.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24711063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "tbpalsulich": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/87258892", "body": "Thanks, @chrismattmann!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/87258892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/88227457", "body": "Thanks! Done. Is that better?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/88227457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/207847881", "body": "Did you happen to forget to add the Translator implementation?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/207847881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/208082542", "body": "Would you mind consolidating the pull requests into a single one? It will be easier to review, test, and merge. Thank you!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/208082542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "HyperDunk": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/97512396", "body": "Yes. I will do the required changes by EOD today.\nOn Apr 29, 2015 10:03, \"Chris Mattmann\" notifications@github.com wrote:\n\n> @HyperDunk https://github.com/HyperDunk can you update?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub\n> https://github.com/apache/tika/pull/46#issuecomment-97505268.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/97512396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/97567463", "body": "@Gagravarr & @chrismattmann : Since the DIF content is of XML type I have included DIFParser.java in tika-parsers/src/main/java/org/apache/tika/parser/xml/ and hence I should be moving DIFContentHandler.java to the same. Other option will be to move both DIFParser and DIFContentHandler to tika-parsers/src/main/java/org/apache/tika/parser/dif/ (for which I will need to create a new package).\nPlease suggest.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/97567463/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/97595934", "body": "Yes. That makes sense. I will do the changes and submit.\nOn Apr 29, 2015 14:19, \"Gagravarr\" notifications@github.com wrote:\n\n> ODF, iWorks, OOXML, RDF and Atom are all xml-based (and some others too).\n> However, all of those have their own packages, as while they're XML based,\n> they're specific to one particular flavour of XML. So, based on that\n> precedent, I'd say the DIF parser and handler should be in the parsers\n> module under org.apache.tika.parser.dif\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub\n> https://github.com/apache/tika/pull/46#issuecomment-97588265.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/97595934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/97622913", "body": "Changes are done, tested and committed. Please review and accept pull request.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/97622913/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "anyayunli": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/105057926", "body": "Great !! Thanks so much professor ! I'm gonna improve it, there is much work left to do :)\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/105057926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Rshomali": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/113169781", "body": "I have submitted another commit to undo the whitespace changes. You can find a sample file to test here:\nhttps://issues.apache.org/jira/secure/attachment/12740398/hacker_news.ipa\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/113169781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "WulfB": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/115553321", "body": "Hi Chris, yes of course:\n\nfollowing the w3c spec the xpath node test ./node() should matches all contained nodes (types) but not attributes since attributes are no children. (=> Changes in NodeMatcher)\n\nSo \"/node()\" returns a superset of \"/*\". In XPathParser the latter lead to the construction of \"ChildMatcher(parse(xpath.substring(2)));\" but the first simply returned a \"NodeMatcher.INSTANCE\" what is wrong i.m.o.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/115553321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/116717549", "body": "Hi Chris, I\u2019ll try to have a look on it tomorrow morning. See you, Wulf.\n\nVon: Chris Mattmann [mailto:notifications@github.com]\nGesendet: Montag, 29. Juni 2015 16:09\nAn: apache/tika\nCc: Wulf Berschin\nBetreff: Re: [tika] Changed matching of node(), support for descendant-or-self (#52)\n\nhi @WulfBhttps://github.com/WulfB - I think this broke the build, can you see: https://builds.apache.org/job/tika-trunk-jdk1.7/771/ and take a look at the now failing tests?\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/apache/tika/pull/52#issuecomment-116682723.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/116717549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jeremybmerrill": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/116852591", "body": "Oops, I think I forgot about this PR when I kept pushing to my `trunk` branch. My bad!\n\nI removed the unnecessary commits\\* leaving just the one line modification that comprises my PR.\n\n\\* (I had some other code to add attachment filenames to a \"fake\" email metadata line, as well as various other tweaks.)\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/116852591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/116870990", "body": "Super, thank you!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/116870990/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/148511754", "body": "oh man I forgot. sorry! will do.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/148511754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/148512655", "body": "https://issues.apache.org/jira/browse/TIKA-1771\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/148512655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "TaichiHo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/155283692", "body": "Thank you for your suggestion. What do you think a good prefix would be like in this case?\n\nThe other thing is the way I integrate this might not possible due the GPL license, as is pointed out by https://issues.apache.org/jira/browse/TIKA-1787. I am not sure if I should continue work on this. \n\nThe other issue is using a different approach. Might want to look at that. https://github.com/apache/tika/pull/61\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/155283692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/155870202", "body": "Thanks so much.  I will look into it.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/155870202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "adhulipa": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/159978831", "body": "Hi Prof. Chirs,\n\nThanks for the feedback.. Please check my responses below.\n1. I thought we discussed using a table here. Since you have # of rows and # of cols present in the div, why not simply use tables and columns here to represent the OF and OG? (I'll fix this now). \n   ------>\n   In one of the progress reports I think you mentioned we can use \"ol li --- li ol\" sequences instead\n   The OF and HOG are series of 1D vectors instead of series of 2D matrices as I originally thought. \n2. you don't have an ending div on your XHTML (I'll add a fix for this now).\n3. You don't identify in the XHTML what is the OF and what is the OG (I'll fix this now).\n   ------>\n   Sorry about that. I think I missed it\n4. We should probably start out with an h3 of the file name to start out the display.\n   ------>\n   Understood. Will fix it now\n5. I get a whole bunch of NaNs before the XHTML output. Not sure where those are from but they are printed to stdout.\n   ------>\n   Yes. These are the meanChiSquare distance measures of the FeatureVectors. Since, we're running this on a single file, we only have one set of FeatureVectors.\n   When PoT is run on a collection of video files, we extract each video's OF and HOG and then calculate the meanSquareDist across all of them.\n   But this may not be within the scope of a Tika parser. Maybe it should be included in the wrapper program that calls Tika on a set of videos. Much like the implementation of tika-img-similarity github project. Do you think that's right?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/159978831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/160017710", "body": "I couldn't think of better terms for them. \n\nThe numRows is number of time-series in the video. This proportional to the numFrames in the video. But it's not equal to it. It depends on the how the underlying computeFarnebackFlow() and computeGradeient() operations behave. but the general term the paper uses is time-series and each of the rows is a unit of time-series\n\nThe numCols is a constant. Of size 200. It's the vector size. It's got by applying some pooling operators on the flowVectors and gradientHistorgrams. (It's initialized around line 412. There's also a comment there about the chosen size)\n\nSo, each row in the output is a PoT vector of that particular time-serie. \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/160017710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/160035067", "body": "Hi Prof. \n\nNo problem!\n\nYes. I think that can omitted. But we can leave it in for completeness it's that's important. \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/160035067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "smadha": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/165184698", "body": "We will need to update the wiki as well. I can take care of that once this is merged.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/165184698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/21847995", "body": "In future please avoid space/newline changes. In this case it caused a conflict with my PR #168 :)", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/21847995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/comments/21888269", "body": "Can you please manual merge instead of me updating PR? I'll have to merge this PR in my branch and it'll make commit history look weird, what say?", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/21888269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/comments/24268592", "body": "@ThejanW Seems like this got missed in InceptionVideoRestDockerfile. I think we need a better way to abstract out the common installation. I", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/24268592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/48001373", "body": "Thanks! @thammegowda \nDone in https://github.com/smadha/tika/commit/bad727540572aa5fdbdca7f1d5a536fdd8ec16a6 \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/48001373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111529989", "body": "I have overriden this method", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111529989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111530043", "body": "Oh yeah, good catch buddy. This was for testing I can remove it all together", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111530043/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111530110", "body": "Good catch again. This should be removed", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111530110/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113734528", "body": "Have you used miniconda to install OpenCV? I used it once earlier and I was unable to do so. I agree miniconda is more convenient if it's possible I will change it ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113734528/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113749219", "body": "OpenCV requires binaries too, pip install is too simple unfortunately \r\n\r\nread this for more info - http://stackoverflow.com/questions/36862589/install-opencv-in-a-docker-container", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113749219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113802156", "body": "Thanks for trying that, we'll change it to miniconda but as of now I am trying to install it with ffmpeg for video support. If you want to help can you try installing openCV with video support and try inception video api if that works?\r\n\r\nI tried some things but opencv and ffmpeg are not working together\r\n```\r\n# RUN conda install -c menpo ffmpeg=3.1.3\r\n# RUN apt-get install ffmpeg\r\n```", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113802156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113802445", "body": "This can be removed. Got it along with some example from stackoverflow", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113802445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139325333", "body": "- [ ] Any specific reason to remove `minConfidence` and `topN` ?", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139325333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139325427", "body": "- [ ] Can we please rename `mdVal` to something more related to the value of this variable? Like `imageLabelAndConfidence` or ``objectLabelAndConfidence``", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139325427/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139325490", "body": "- [ ] would be great if we can store `object.getLabel()` and `object.getConfidence()` into separate metadata fields. Like creating a new key `MD_KEY_CAP_CONFIDENCE` for storing confidence, instead of wrapping them both in a single `String mdVal`. ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139325490/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139325563", "body": "- [ ] same comments, variable name and seperate metadata key", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139325563/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139325811", "body": "- [ ] Thanks for following good logging practice of using `{}`. will be great if you can remove String concatenation from [`RecognisedObject.toString`](https://github.com/ThejanW/tika/blob/92c65e0a43e7f09a0566bec34f352314dffe5def/tika-parsers/src/main/java/org/apache/tika/parser/recognition/RecognisedObject.java#L84-L90) to use `StringBuffer` or `String format`. You can do it through IDE with few clicks. Thanks in advance for cleanup", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139325811/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139325921", "body": "Thanks", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139325921/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139325945", "body": "- [ ]  Will be great if you can put the reason to make it `protected` in comments so no one changes it in future.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139325945/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139326006", "body": "- [ ] Why remove default value?", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139326006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139326146", "body": "- [ ] Extra line break", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139326146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139326151", "body": "- [ ] Extra line break\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139326151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139326176", "body": "\ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139326176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139326190", "body": "- [ ] Extra space", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139326190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139326197", "body": "Super thanks", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139326197/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 1, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139329240", "body": "I guess there are very few actual changes in this file but mostly extra spaces and new lines. Though your code is great I'll suggest few of extra spaces and new lines in future as it brings focus to actual change only. Makes sense?", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139329240/reactions", "total_count": 2, "+1": 1, "-1": 0, "laugh": 1, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139329533", "body": "If you plan to put these controls in REST URI then please leave it somewhere in comments and wiki too. Also, this needs to be updated in comments too - https://github.com/ThejanW/tika/blob/92c65e0a43e7f09a0566bec34f352314dffe5def/tika-parsers/src/main/java/org/apache/tika/parser/recognition/ObjectRecognitionParser.java#L60", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/139329533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/140411401", "body": "@ThejanW For my understanding `minConfidence` and `topN` can still be tweaked through Tika config / CLI options right?", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/140411401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/140411633", "body": "You can still keep a default value by extracting String constants and deriving a default value too. No big deal though", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/140411633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "kevindoyle": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/170396819", "body": "My apologies for opening this PR. The code is a mess and was meant for testing in our fork. \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/170396819/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "prasadns14": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/189946773", "body": "Made the changes suggested.\nHave also add a detection unit test for NetCDF file\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/189946773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "manalishah": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/190628912", "body": "@chrismattmann thanks! I have made the updates as per your comments.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/190628912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/213620473", "body": "@chrismattmann done :)\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213620473/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/60823066", "body": "oh no!!! @thammegowda thanks! its fixed now x_x\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/60823066/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "mkampasi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/193779658", "body": "Please find the requested changes in eb2d06b.\n\nAfter merging with the latest file, I found that mime magic for *.cab and *.mobi files had already been updated. Hence did not update for *.cab files. However, the offset for the \"BOOKMOBI\" pattern of *.mobi files was set as 23. During my analysis, I found some files with the pattern at offsets of 58 and 60. Therefore, I updated the mime magic to use a range from 0:60. \nTested the updated tika-mimetypes.xml file for mp4 and quicktime formats as well.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/193779658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "NamithaGS": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/194050136", "body": "For the Atom, RSS and RDF :\nThis was from the FHT analysis in these files. We found some of these files classified into Octet-Stream, and all these 3 types had the occurrence of the pattern may times in the first 50 bytes or so. I based this purely on the analysis and cannot hence find any information about this on the web. As you mention, your advice is to remove these patterns to be on the safer side, updating the same in this pull request.\nFor the Postscript one : Changed into readable format.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/194050136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kkrugler": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/195052345", "body": "I've added the missing license headers (or at least the ones that I could find).\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/195052345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/203634516", "body": "Those classes have moved and/or been renamed in 2.0, so the clirr plugin is complaining.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/203634516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/203650657", "body": "There's discussion about this in comments on https://issues.apache.org/jira/browse/TIKA-1723. Easiest is to just keep the current detection code as-is, and flag with deprecated annotations. More ambitious would be to turn some (most?) of these classes into facades, that call through to the (new architecture) language detection code, which for 1.x would be a port of the current detector.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/203650657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/203689076", "body": "The discussion I referenced was about removing the old language detection support. Removing these classes is what triggers the errors you are getting from the clirr plugin, as it (correctly) reports that some public APIs (from the previous release) are no longer available.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/203689076/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/203988581", "body": "For the 2.0 build, we disabled the clirr check (in tika-core/pom.xml), since we were busy breaking the API.\n\nAs far as how to proceed - well, if we still want no breaking API changes in the 1.x branch, then you'd need to do what I'd mentioned in my earlier comment:\n\n> Easiest is to just keep the current detection code as-is, and flag with deprecated annotations. More ambitious would be to turn some (most?) of these classes into facades, that call through to the (new architecture) language detection code, which for 1.x would be a port of the current detector.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/203988581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "nandan-pc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/195085770", "body": "Hi Nick, \n\nThanks for the review comments. \n1. Rearranged the order of mime type for mime-type x-erdas-hfa in tika-mimetypes.xml \n2. Changed the test file name to testHFA.hfa\n3. Reduced sized of test file size from 64 KB to 1KB. \n\nRegards\nNandan Padar Chandrashekar \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/195085770/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "trevorlewis": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/196845210", "body": "I have added all the missing license headers.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/196845210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/213547437", "body": "@chrismattmann I fixed the Clirr error by excluding checking the previous language detector classes for compatibility. I can add the old classes back if needed.\nAlso, I updated the TextLangDetector class to use WebClient and Response to make the GET and PUT requests to the server.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213547437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/213571006", "body": "@chrismattmann I updated the PR\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213571006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "mit2nil": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/204630808", "body": "This was discovered while doing Assignment-2 for class CSCI 599 Spring 16 at USC. \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/204630808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/204766346", "body": "@chrismattmann Usage of env variable in unix/mac/linux is such that, it sets some environment variable and then run command. Ref. https://en.wikipedia.org/wiki/Env\nOn windows, there is no exact alternative to do that. To workaround on windows, we execute 'set' command to set an environment variable and then execute another command in same environment. \nTo achieve that, I switched to arraylist so that for Windows, I can delete command string \"env\" and its argument and pass rest of the commands as is. \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/204766346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/213817263", "body": "May be better solution is to simply remove usage of env variable from config file at\nhttps://github.com/apache/tika/blob/master/tika-core/src/main/resources/org/apache/tika/parser/external/tika-external-parsers.xml and handle {OUTPUT} parameter internally in the code. After all it is just a placeholder to store temporary file path.  \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213817263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/213858086", "body": "Below is the example command as per the TIKA wiki on EXIFTool.\n`java -Dtika.config=exif-tika-config.xml -classpath tika-app/target/tika-app-1.9-SNAPSHOT.jar org.apache.tika.cli.TikaCLI -m spaghetti-to-sushi.mp4`\n\nAs per my understanding, Tika uses all external parser available (defined in .../tika-external-parsers.xml) for MIME types specified in \"exif-tika-config.xml\" and run respective command. For EXIFTool, filename \"spaghetti-to-sushi.mp4\" is propagated from Tika CLI to command line parameter to Exiftool. Similarly, Tika CLI should be able to accommodate a new command line flag indicating creation of temporary file which internally can be done using isWindows() kind of utility function. \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213858086/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "reevapp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/207676967", "body": "No problem, first time doing pull request.... I will make the changes and submit again.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/207676967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/207848036", "body": "Hi, the access is free for small projects:\n\"Developers of small translation projects, which do not exceed 10,000,000 characters a month (and no more than 1,000,000 in 24 hours), can use the Yandex.Translate API for free.\" - https://translate.yandex.com/developers\n\nYou can get a API Key for free here: https://tech.yandex.com/translate/\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/207848036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/207852308", "body": "did 3 Pulls requests... all with the same title \"fix for TIKA-1943 contributed by Mark Duske\", the others have the implementation.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/207852308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/207890703", "body": "Nope, no contact there... I just needed a good translation engine for a small open source project and found their service.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/207890703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/209032847", "body": "No problem, I am closing the original pull requests and submitting a single pull with all 3 files\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/209032847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/219824126", "body": "No problem, closing this pull request and initiating a new one.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/219824126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/58790661", "body": "\"isAvailable\" became a method so it can check for correct setup at any time, which allows for setting the User-Key, before it was expecting it from the properties file only at instantiation time.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/58790661/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/58790918", "body": "If receiving a non-Json response, the previous implementation would only state that an error occurred, now the message received from the server will be returned\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/58790918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/58791276", "body": "WebClient is not thread-sfe and was declared as instance variable before, after the first request it would actually append query parameters to the already defined parameters for each subsequent request.\nFor instance, on the third request to the server it would regerate a request with URL like this: https://.....?source=es&source=es&source=es......\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/58791276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/58791359", "body": "User-Key can now be dynamically set in runtime\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/58791359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "yashtanna93": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/213561561", "body": "@chrismattmann I have sent a pull request to @AravindRam for the fixes\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213561561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "adeshgupta": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/213633549", "body": "Can you guide me on the 1.13 branch or is it the new master branch in this repo?\n@chrismattmann , I am so sorry about the late reply\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213633549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/213907870", "body": "@chrismattmann , It has been done, Please review it and comment.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/213907870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/214010020", "body": "@chrismattmann , I have tried to remodify it again. The only problem I am facing right now is that the changes that were made were on tika 1.11 . Probably that is why it is showing so many changes to the files\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/214010020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/214044620", "body": "@chrismattmann , I guess this should do it. around 200 files changed this time around, mostly are license additions/deletions. Will that be fine?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/214044620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/214128303", "body": "@chrismattmann , I have got down the changes to 63 files, I have only changed three files, but I have no clue why so many files are affected because of it. I have followed the same exact steps you have instructed me to follow\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/214128303/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "naegelejd": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/216852977", "body": "I don't know how Tika's release process works but is it possible to get this fix into 1.13? It's a trivial patch but an important fix for Nutch.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/216852977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "minhptx": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/217744964", "body": "@chrismattmann sorry for my late response. I think the main difference is different library usage. For httprequest and json parser.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/217744964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lfoppiano": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/226710505", "body": "\ud83d\udc4d Very nice job guys!! \ud83d\udcaf \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/226710505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Zarana-Parekh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/228849874", "body": "@chrismattmann Thanks for the feedback. I will incorporate the above changes. The current configuration has it enabled by default but will modify that to make it optional.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/228849874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/69334719", "body": "added scope in fa30edd4d95fc0cdc4492c711f402e24dba24e8b\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69334719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69334834", "body": "resolved in bc6667c195bbef1a672fd635ff7e253143ba2ad8\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69334834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69335742", "body": "added @Return in 6773d42de77230dff621a1010ed37f0505dfa302\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69335742/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "epugh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/250837895", "body": "This is a bug fix to apply on top of TIKA-2093.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/250837895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "lewismc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/255943985", "body": "The functionality to test will be documented at https://wiki.apache.org/tika/SMTWithApacheJoshua tomorrow.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/255943985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/256111880", "body": "Documentation for this patch is complete at https://wiki.apache.org/tika/SMTWithApacheJoshua \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/256111880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/256112087", "body": "Would like to commit to master branch unless there are any comments folks.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/256112087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/69195029", "body": "ACK @Zarana-Parekh please rebase tika-bundle/pom.xml against master branch as the formatting changes make the patch contribution unclear.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69195029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69195205", "body": "Can you add scope to compile\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69195205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69195330", "body": "Please include @return Javadoc\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69195330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69195363", "body": "Please add @Return javadoc\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69195363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69195479", "body": "Please add the range that a density integer value can be\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69195479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69195593", "body": "Please indicate possible values in Exception message\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69195593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69195632", "body": "Please indicate possible values in Exception message\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69195632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69195647", "body": "Please indicate possible values in Javadoc \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69195647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69195787", "body": "This Exception message is misleading. The value is not invalid... it is simply null. The message should state \"Colorspace value cannot be null\"\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69195787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69195891", "body": "This Exception message is misleading. The value is not invalid... it is simply null. The message should state \"Filter value cannot be null\" You may also wish to print the allowedFilters as part of the exception message.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69195891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196019", "body": "You may also wish to print the allowedFilters as part of the exception message.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196103", "body": "You may also wish to print the valid range of resize values as part of the exception message.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196154", "body": "Please add @param for Javadoc\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196329", "body": "Please add Javadoc to all public methods\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196351", "body": "Please add Javadoc to all public methods\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196450", "body": "Why would it throw IOException? Please substantiate on Javadoc\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196466", "body": "Why would it throw TikaException? Please substantiate on Javadoc\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196549", "body": "Formatting is not correct here. Please use 4 space indents\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196585", "body": "Split this into separate lines\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196806", "body": "This script is not called rotation_spacing.py but instead rotation.py right?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196847", "body": "This script is not called rotation_spacing.py but instead rotation.py right?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196877", "body": "This script is not called rotation_spacing.py but instead rotation.py right?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196938", "body": "Please check formatting. Should be set to 4 space indents\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69196938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69197000", "body": "Is this import an error?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69197000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69197096", "body": "This will not pass on a non-unix OS\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69197096/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69197273", "body": "I think that this should be set to null value. This will not work on Window for example. \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/69197273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "krdev": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/272666603", "body": "Wrong PR.", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/272666603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ham1": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/273314587", "body": "I've done a bit more than the bug report.\r\n1. I've treated `\"\"` as invalid - partly because `TesseractOCRParser` builds the command line without checking if `getLanguage()` is empty\r\n2. anything ending with a `+` as invalid - not sure if this is enforced by Tesseract but it just seemed right\r\n3. tightened the regex to care about length of the alpha chars\r\n\r\nTested with some examples from https://github.com/tesseract-ocr/tesseract/blob/master/doc/tesseract.1.asc#languages", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/273314587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "joshbooks": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/273658498", "body": "Created a ticket on JIRA, see [TIKA-2244](https://issues.apache.org/jira/browse/TIKA-2244)", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/273658498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kkrgithub": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/285954307", "body": "Hi Mr @thammegowda & Mr @chrismattmann \r\n   I am a student looking to participate in GSOC2017 . So I would like to  contributing to your reported project @Supporting Image-to-Text (Image Captioning) in Tika for Image MIME Types .\r\nAs far as I understood in this present thread you discussed about improving this module through usage of c++ api for tensorflow , so i am wondering should I do that(improvement) to get started for the actual project .\r\nIf  gRPC is enough , should I consider fixing any bugs in deeplearning4j . I have gone through all the resources you have quoted at the \"apache Gsoc2017 ideas \" site and I completed the quick start tutorial on deeplearning4j.\r\nSo please help me to get on further on this .\r\n\r\nThanks and Regards\r\nM kranthi kumar reddy\r\nstudent @IIIT Gwalior India. \r\n ", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/285954307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/285980044", "body": "hello @agibsonccc thanks for the concern but I think you got me wrong I am discussing about this project\r\n[https://issues.apache.org/jira/browse/TIKA-2262?filter=12339687]Supporting Image-to-Text (Image Captioning) in Tika for Image MIME Types \r\nI think the above project is about deeplearning4j or is it about TIKA , I may be wrong so any clarification is greatly appriciated\r\nthank you !", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/285980044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "agibsonccc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/285978068", "body": "Hey folks, If there is a problem with deeplearning4j, we have a gitter channel:\r\nhttps://gitter.im/deeplearning4j/deeplearning4j\r\n\r\nThe release is coming out which will have the model import. @chrismattmann 's and teams example is based on snapshot. Please communicate with us if there are issues.\r\n\r\nThanks!", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/285978068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "KranthiGV": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/289984867", "body": "@thammegowda  @chrismattmann \r\nPlease review this PR.", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/289984867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/290021944", "body": "@grossws \r\nThanks for the review, Gribov.\r\nI have just updated the coding style to follow PEP8 as suggested.\r\nPlease review.\r\nAnd yes, I would add a new commit to point to the Apache Tika repo's version as soon as this is merged.", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/290021944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/290028174", "body": "Apologies! @grossws \r\nThat was an honest mistake.\r\n\r\nPS The tests yielded a similar result after changes. So, I am not including them for the sake of brevity.", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/290028174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/290081911", "body": "> \"Do the above tests show that Inception v4 is better?\"\r\n\r\nInception V4 has been proven to have a Top-1 accuracy of 80.2 and Top-5 accuracy of 95.2 whereas Inception V3 has 78.0 and 93.9 respectively.\r\nThe aim of this PR is let the Tika community have access to near state-of-art features. \r\n\r\n> Also all of this documentation should be added to the wiki - it looks great.  \r\n\r\nDefinitely. I am currently working on it.", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/290081911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/108667879", "body": "I would add another commit as soon as this is merged. Thanks.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/108667879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111529725", "body": "Thanks for the review. I'll work on having a constructor method as expected. I have a query. Don't you think it wouldn't affect classify_image.py? Because we will have run that python file every time we call for recognition through cli? \r\nWhat you suggested seems relevant to the REST api in which we can load the model once and reuse it. Correct me if I overlooked something. ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111529725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111530004", "body": "@thammegowda", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111530004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111530356", "body": "@thammegowda It makes sense. Thanks for clarifying. I'll work on it now. ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/111530356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113648562", "body": "@smadha\r\nI suggest you use continuumio/miniconda instead of Anaconda.\r\nAnaconda comes with a lot of packages that aren't useful for us.\r\nWe need only their package manager.\r\n\r\nReplace `continuumio/anaconda` with `continuumio/miniconda` in the docker file.\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113648562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113648625", "body": "I wonder why port 5000 is exposed.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/113648625/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "Shinobi75": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/290068572", "body": "This closes #161\r\n\r\ncommit 8496a081e592849ded45c335ed33209a38f96e2e\r\nAuthor: Fabio Evangelista <fevangelista@notariato.it>\r\nDate: 2017-03-28T14:15:11Z\r\nfix for TIKA-2309 contributed by Shinobi@75", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/290068572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/290069610", "body": "Sorry, I'm wrong.... could I reopen the pull request? Or I've to do another fresh pull request?", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/290069610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/290104198", "body": "Ok, I've just reopened the pull request...should I close it another time with a specific comment or, I should left it open? Sorry, but is my first time to contribute in an Apache foundation project.", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/290104198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/290113009", "body": "OK, Thanks for your advices. I left it open.", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/290113009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/109191117", "body": "@grossws, I've removed any added import on tika-core pom.xml in my new commit.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109191117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109191383", "body": "@grossws, TSDDetector class is now removed in my new commit.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109191383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109191407", "body": "@grossws, TSDDetector class is now removed in my new commit.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109191407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109191435", "body": "@grossws, TSDDetector class is now removed in my new commit.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109191435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109191503", "body": "@grossws, TSDDetector class is now removed in my new commit.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109191503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109191678", "body": "@grossws, TSDDetector class is now removed in my new commit.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109191678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109191856", "body": "@grossws, custom-mimetypes.xml is now removed in my new commit.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109191856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109192078", "body": "@grossws, also done in my new commit.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109192078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109192324", "body": "@grossws, logger variable is now removed in my new commit.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109192324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109192362", "body": "@grossws, logger variable is now removed in my new commit.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109192362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109200175", "body": "@grossws, I'll try to move to Locale.ROOT locale in my next commit, but I'll have to do some test first.\r\nThank you for all.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109200175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109666158", "body": "done on commit db345ac0e06fe0d530758277ad8370019594d64d", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109666158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109666420", "body": "Thank you, I'll try to that. Sorry.", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/109666420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "skingreek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/6794517", "body": "ignoring this error leads to degraded performance if XHTMLContentHandler is wrapped into WriteOutContentHandler\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/6794517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "vulpes8": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/20717141", "body": "Thanks!", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/20717141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "nguyenhoan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/20942591", "body": "Hi @tballison \r\nWe are a team of researchers from Iowa State, The University of Texs at Dallas and Oregon State University, USA. We are investigating common/repeated code changes.\r\nWe have four short questions regarding the change in the image below which is part of this commit.\r\n![image](https://cloud.githubusercontent.com/assets/2257582/23089664/9f9ae53c-f552-11e6-82e1-7e06c6a8bcef.png)\r\n\r\nQuestions:\r\n\r\nQ1- Is the change at these lines similar to any other changes (from other locations of the same commit or from other commits)? (yes, no, not sure)\r\n\r\nQ2- Can you briefly describe the change and why you made it? (for example, checking parameter before calling the method to avoid a Null Pointer Exception)\r\n\r\nQ3- Can you give it a name? (for example, Null Check)\r\n\r\nQ4- Would you like to have this change automated by a tool? (Yes, No, Already automated)\r\n\r\nThe data collected from the answers will never be associated with you or your project. Our questions are about recurring code changes from the developer community, not about personal information. All the data is merged across recurring changes from GitHub repositories. We will publish aggregated data from the trends of the whole community. \r\nWe have a long tradition of developing refactoring tools and contributing them freely to the Eclipse, Netbeans, Android Studio under their respective FLOSS licenses. For example, look at some of our recently released refactoring tools: http://refactoring.info/tools/ \r\n\r\nThank you,\r\nHoan Nguyen https://sites.google.com/site/nguyenanhhoan/\r\nMichael Hilton http://web.engr.oregonstate.edu/~hiltonm/\r\nTien Nguyen http://www.utdallas.edu/~tien.n.nguyen/\r\nDanny Dig http://eecs.oregonstate.edu/people/dig-danny\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/20942591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jkff": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/24706413", "body": "Unfortunately this is not correct and not consistent with the `equals()` method. Are there any tests for `Metadata`? I believe with this implementation e.g. creating a HashSet with a single Metadata in it, and checking for .contains(equivalent but not the same Metadata object), would _always_ return a wrong result of `false`.\r\n\r\n`metadata` is a `Map<String, String[]>` and its hashCode() will call hashCode() on the `String[]` objects, which is *not* computed from the contents of the array, only its identity - Java arrays don't implement hashCode() or equals(). This is, likely, also the reason why `equals()` is not implemented as `return metadata.equals(other.metadata())`.\r\n\r\nThe proper implementation is to loop over the metadata and compute a combined hash code of the keys and values, using some method of hashing a key/array(value) pair and some method for combining the hashes for these pairs. You need to also be mindful of:\r\n\r\n- Whether the order of iteration over keys matters. I suppose not. Then you need to make sure your hash code does not depend on this order.\r\n- Whether the order of iteration over multiple values of a single key matters. I suppose the answer is also no, and then the same caveat applies.\r\n\r\nThe easiest way to hash an unordered collection of something is to hash each element and add up the hashes.", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/24706413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/comments/24888980", "body": "Why not use a regular foreach loop?\r\n\r\n    for (Entry<String, String[]> entry : metadata.entrySet()) {\r\n      h += getMetadataEntryHashCode(entry);\r\n    }", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/24888980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "uschindler": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/24153261", "body": "Use \"\".equals(header.getFileName()) syntax, because this will cause NullPointerException if the wide file name is not available. Alternatively add a null check.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24153261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24161943", "body": "Hi,\nthis comment was more about code style: If you use equals to compare 2 things, it is always better to have the part that is static and/or final and for sure not null (in this case: the string literal) first. Then you don't eben have to think about if it could be null or not. If you check your code with PMD it will suggest this to you.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24161943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "kongxianghe1234": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/24160077", "body": " you said is better, but member variables should not be null , Come to this issue , What i mean is that var header has two methods 1. getFileNameString()    2. getFileNameW()  . Your unit test case just cover iso-8859-1 encoding \ntip:https://github.com/apache/tika/blob/trunk/tika-parsers/src/test/resources/test-documents/test-documents.rar\ni have tested for chinese and other language , it didn't work , please \ntry to debug for this and you will find you have to check for the charset of the fieName.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24160077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "nithinkrishna": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/89898959", "body": "Cleaning it up.  I meant to open it on my fork. ", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/89898959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}}}