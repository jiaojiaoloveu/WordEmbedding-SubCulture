{"_default": {"1": {"khmarbaise": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/5988085525a39025a9f3d7cfb0592d42261abaf0", "message": "[MNG-6342]\u00a0Emit a WARNING about LATEST/RELEASE in parent"}, {"url": "https://api.github.com/repos/apache/maven/commits/42918c37c55e9ff83358ced305bc1f0b711b83d0", "message": "Revert \"[MNG-6296] 3.5.2: ClassNotFoundException: javax.annotation.security.RolesAllowed\"\n\nThis reverts commit c311e0d812eadd782a59b7f8e939becf7c1da74b."}, {"url": "https://api.github.com/repos/apache/maven/commits/2b336ff150b12aeae9bd0d2a61f1e8d02504492f", "message": "[MNG-6312] Update Maven Wagon dependency\n o Upgrade wagon version to 3.0.0 based on CVE-2015-6748\n   in shaded jsoup."}, {"url": "https://api.github.com/repos/apache/maven/commits/68a9d79671a7d385a204300994e06b1a19964bf4", "message": "[MNG-6332] Cleaned up mvn.cmd Script"}, {"url": "https://api.github.com/repos/apache/maven/commits/abd73da3a492ee544c6102840fc012409a4ac83d", "message": "[MNG-6331] Remove maven-bundle-pugin from build pluginManagement"}, {"url": "https://api.github.com/repos/apache/maven/commits/6b83f7e6bb38cf49c43251c0d84bcae61800fd1a", "message": "[MNG-6305] Validation of CI friendly version incorrect\n o Followup removed unused declarations."}, {"url": "https://api.github.com/repos/apache/maven/commits/2295c17b45f46cae0daa46105e0a7856505a108f", "message": "[MNG-6305] Validation of CI friendly version incorrect\n o Checkin that only the three expression changelist,\n   revision and sha1 are valid in a version.\n o Added some tests."}, {"url": "https://api.github.com/repos/apache/maven/commits/c9a288d8b1090fa957d6caccc12f0bf13bb5e267", "message": "[MNG-6216] ArrayIndexOutOfBoundsException when parsing POM\n o Upgraded to new release of plexus-utils which contains\n   the fix for #22 in plexus-utils."}, {"url": "https://api.github.com/repos/apache/maven/commits/4f2a2dba89251d9045fe9944783509a397491da3", "message": "[MNG-6174] Clean Up Maven Model"}, {"url": "https://api.github.com/repos/apache/maven/commits/8f8c45c990193b04c1770997d446951c5185b164", "message": "[MNG-6123] detect self references in POM and fail fast\n o Added unit test and self referencing pom"}, {"url": "https://api.github.com/repos/apache/maven/commits/51cc76c32625be2f807dcf2ffbeb085984729b57", "message": "[MNG-6090] CI friendly properties break submodule builds\n[MNG-6057] Problem with CI friendly usage of ${..} reactor order is changed\n o Based on the missing replacement of the versions ${revision}\n   ${changelist} or ${sha1} within the parent element the order\n   of the reactor changes.\n[MNG-5895] Problem with CI friendly usage of ${..} which is already\ndefined via property in pom file."}, {"url": "https://api.github.com/repos/apache/maven/commits/809ba34055c70eab31876aad03c577e925fa2e6e", "message": "Code improvement."}, {"url": "https://api.github.com/repos/apache/maven/commits/ab2e24fe3612b4f12c66e698e398fcb2b908f1aa", "message": "Fixed checkstyle reported error."}, {"url": "https://api.github.com/repos/apache/maven/commits/7cdff43aba436408c79d2b4afc169b9c6909235a", "message": "[MNG-6170] NPE in cases using Multithreaded -T X versions:set\n-DnewVersion=1.0-SNAPSHOT\n o In some cases the code will return a null which should\n   not be scheduled."}, {"url": "https://api.github.com/repos/apache/maven/commits/748551d0274cc2eebfb2f976536d18277e564584", "message": "[MNG-6179] Remove WARNING about prerequisites usage"}, {"url": "https://api.github.com/repos/apache/maven/commits/1407a10485e826795db23c114c4c37cf951a2e27", "message": "Updated doap_Maven.rdf file"}, {"url": "https://api.github.com/repos/apache/maven/commits/60a7f5da494216168e4cc2c88c357b1cbdd43ad2", "message": "Fixed links in pom which pointed to shut down codehaus jira."}, {"url": "https://api.github.com/repos/apache/maven/commits/8c7ce555720ec205680a1ce71ede03a4bc49bedb", "message": "[MNG-6068] Document default scope compile in XSD\n o Improved description."}, {"url": "https://api.github.com/repos/apache/maven/commits/1f0493431be3bd0f25757b5ba0ed98b3a41b3374", "message": "[MNG-6068] Document default scope compile in XSD\n o Added information about default scope in XSD comment."}, {"url": "https://api.github.com/repos/apache/maven/commits/5a462344f9e8aee3f1a423f0268ea27ce017c8c3", "message": "[MNG-6014] Removing ArtifactHandler for ejb3\n o Followup to MNG-5894 of Maven 3.3.9 where the maven-ejb3-plugin\n   has been removed from life cycle.\n o Removed the ArtifactHandler for ejb3 cause without\n   a bound life cycle it does not make sense.\n o Removed entry from artifact-handlers.apt site."}, {"url": "https://api.github.com/repos/apache/maven/commits/ca4303031357a7decaee8de770b71fb2c2fedd28", "message": "[MNG-6078] Can't overwrite properties which have been defined in\n.mvn/maven.config\n o Reversed the order of properties only to get the properties from\n   command line at the end of the properties list which results\n   in correct behaviour to be able to overwrite properties from\n   command line for properties which have been defined in\n   .mvn/maven.config file."}, {"url": "https://api.github.com/repos/apache/maven/commits/4604c49ee442fef48c0d3efe35fb85d2f0784131", "message": "[MNG-6092] warn if prerequisites.maven is used for non-plugin projects"}, {"url": "https://api.github.com/repos/apache/maven/commits/017dcaf22a2cc1c6361dc64a02d1bdbdb799b95e", "message": "[MNG-5993] Confusing error message in case of missing/empty\n artifactId/groupId and version in pluginManagement"}, {"url": "https://api.github.com/repos/apache/maven/commits/f20a5d940bf055ea49c5cc1ecbdba07a3a27fbe6", "message": "[MNG-5931] Fixing documentation\nRemoving references to ejb3-lifecycle and par-lifecycle\ncause they have been removed with Maven 3.3.9."}, {"url": "https://api.github.com/repos/apache/maven/commits/c794c2a393855ad4d247783876613f1bb289e77f", "message": "[MNG-5946] Fix links etc. in README.txt which is part of the delivery\n- Changed consistently to https cause all links are available via https.\n- Fixed link to shutdown codehaus jira\n- Fixed link to git repository."}, {"url": "https://api.github.com/repos/apache/maven/commits/bc07e74d3c974dae60aad1024d4cd1c4d0714b3a", "message": "[MNG-6017] Removing ArtifactHandler for par LifeCycle\n o Removed ArtifactHandler configuration for par lifeclyce\n   which has been removed in Maven 3.3.9\n   See MNG-5892"}, {"url": "https://api.github.com/repos/apache/maven/commits/cfb075ac706b25df630f3671f61f8d8313e0f138", "message": "[MNG-6030] ReactorModelCache do not used effectively after maven version 3.0.5 which cause a large memory footprint\n o Reintroduced ReactorModelCache reduces the memory footprint."}, {"url": "https://api.github.com/repos/apache/maven/commits/8b661620521de63586f825257e9c08c37e251eb5", "message": "[MNG-5904] Remove the whole Ant build"}, {"url": "https://api.github.com/repos/apache/maven/commits/cf2f373ddb38215f7122f743d381ead7e346ed2d", "message": "[MNG-5882] Nonportable shell constructs cause bin/mvn errors on Debian"}, {"url": "https://api.github.com/repos/apache/maven/commits/b6c9bee1b60ff8ad142651052fb7729cfd206be3", "message": "[MNG-5915]\u00a0Upgrade Wagon version to 2.10"}, {"url": "https://api.github.com/repos/apache/maven/commits/4497e2bb1e55052ef5b103522d71a63e60322816", "message": "[MNG-5898] Multi-module build with ear fails to resolve war in 3.3.3\nAdded types of packaging which can used as dependencies in a\nmulti module build."}, {"url": "https://api.github.com/repos/apache/maven/commits/20854ce7be9837639f1e5f92f33bfb28370d1690", "message": "Revert \"[MNG-5898] Multi-module build with ear fails to resolve war in 3.3.3\"\n\nThis reverts commits f3a3ef2 b9cc9c3 72e2478 all related to MNG-5898"}, {"url": "https://api.github.com/repos/apache/maven/commits/f3a3ef2632683dd1627ca42a4ded87337e937823", "message": "[MNG-5898] Multi-module build with ear fails to resolve war in 3.3.3\nFollowup to fix core IT's."}, {"url": "https://api.github.com/repos/apache/maven/commits/b9cc9c3652d43f0efce36d57c0ec1de35d4e7c56", "message": "[MNG-5898] Multi-module build with ear fails to resolve war in 3.3.3\nFollowup to fix core IT's."}, {"url": "https://api.github.com/repos/apache/maven/commits/72e2478ec589e906afa1409c192cee7e33adde96", "message": "[MNG-5898] Multi-module build with ear fails to resolve war in 3.3.3"}, {"url": "https://api.github.com/repos/apache/maven/commits/2a0fb4543f0d4242666127e6acf7da5b5311c0e0", "message": "[MNG-5911] Upgrade maven-parent to version 27\nCleaned up pom accordingly to upgrade."}, {"url": "https://api.github.com/repos/apache/maven/commits/bcacea2cfb9702658914a40a95251f2d8335b3f5", "message": "[MNG-5905] Maven build does not work with Maven 2.2.1\nAdded maven-enforcer rule to check the minimum Maven version\nto be built with."}, {"url": "https://api.github.com/repos/apache/maven/commits/8a51f9e5121a4cff75fbc7ddaf0b7eea9c9d4e10", "message": "[MNG-5681] Properties on command line with leading or trailing quotes are stripped\nRefactored out cleanArgs method from CLIManager into separate class\nand added appropriate tests which proves the solution\nof the issue."}, {"url": "https://api.github.com/repos/apache/maven/commits/2a9a07b0a188cfb5f480075f9eedb9f70a6206a5", "message": "[MNG-5894] Removed binding for maven-ejb3-plugin from default binding"}, {"url": "https://api.github.com/repos/apache/maven/commits/d4e299acec5dbb1f80766eb2e0a6ad533e3b1077", "message": "Cleanup checkstyle reported errors."}, {"url": "https://api.github.com/repos/apache/maven/commits/b03062d2a0e1a938cc7ca902da579274487477d9", "message": "[MNG-5893] Make used plugin version for maven-resources-plugin in\ndefault-bindings.xml consistent\nUsing version 2.6 for ear binding as in the other bindings."}, {"url": "https://api.github.com/repos/apache/maven/commits/cb037ca262d0dd26d6ace44657ed3bcf437c306f", "message": "[MNG-5892] Removing par lifecycle from default life cycle bindings"}, {"url": "https://api.github.com/repos/apache/maven/commits/bb9af46c4d6215303eb894672eab5b1767c3ee13", "message": "[MNG-5888] Update used modello version from 1.8.1 to 1.8.3"}, {"url": "https://api.github.com/repos/apache/maven/commits/d12f6501f295f9b930eae21c1e96546b4fbd0e41", "message": "Refactored code to be consistent with other code."}, {"url": "https://api.github.com/repos/apache/maven/commits/15223116a61791dd1ad8f327661fdf6d14c8f1d6", "message": "Fixed URL's to issue tracking after transition to\nApache Software Foundation."}, {"url": "https://api.github.com/repos/apache/maven/commits/efc240553b51d8777fa0012b18b39b2daff45855", "message": "Fixed wrong URL to Maven Issue Tracker after\ntransition to Apache Software Foundation."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/75376033", "body": "I would vote +1 for this ...;-)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/75376033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/99632511", "body": "Thanks for the fix.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/99632511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/99639382", "body": "Thanks for the fix.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/99639382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/118945749", "body": "Integrated. Thanks for fix. Can you close the pull request.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/118945749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/71401238", "body": "As far as I know we use JUnit 4.12 where you can @Rule for exceptions checking? WDYT ? \n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/71401238/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/71406374", "body": "Hi, WDYT means What Do You Think ? I wanted that you shared your opinion.....\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/71406374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/71971452", "body": "Can you tell me why you have removed those part of the file and changed the id's ? I don't see any good reason to remove those parts and renaming the id's ?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/71971452/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/117611940", "body": "I think it's better having different test cases. Keeping the old test cases and create new ones for the changed behaviour. That makes it safe not to break previous behaviour,", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/117611940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/117611970", "body": "I think it's better having different test cases. Keeping the old test cases and create new ones for the changed behaviour. That makes it safe not to break previous behaviour,\r\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/117611970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "bengtsod": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/6285bb96c5104a9eabd4e35131aec917b4f9e048", "message": "[MNG-6298] 3.5.2: ClassNotFoundException: javax.annotation.security.RolesAllowed\n\nAdding exportedPackage to find class:\njavax.annotation.security.RolesAllowed\n\nFirst maven commit :) Works but might be deeper issue\n\nSigned-off-by: Karl Heinz Marbaise <khmarbaise@apache.org>\nNow with correct issue reference."}, {"url": "https://api.github.com/repos/apache/maven/commits/c311e0d812eadd782a59b7f8e939becf7c1da74b", "message": "[MNG-6296] 3.5.2: ClassNotFoundException: javax.annotation.security.RolesAllowed\n\nAdding exportedPackage to find class:\njavax.annotation.security.RolesAllowed\n\nFirst maven commit :) Works but might be deeper issue\n\nSigned-off-by: Karl Heinz Marbaise <khmarbaise@apache.org>"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/139", "title": "[MNG-6298] 3.5.2: ClassNotFoundException", "body": "Adding exportedPackage to find class:\r\njavax.annotation.security.RolesAllowed\r\n\r\nFirst maven commit :) Works but might be deeper issue", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hboutemy": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/58cf490c696cebfb0cc3dce31fed68658b16626f", "message": "[MNG-6308] added packaging in Building message footer and summary"}, {"url": "https://api.github.com/repos/apache/maven/commits/c2e3b3e301a96e36670206db0c215f3026937d33", "message": "[MNG-6308] display groupId:artifactId in Building message header"}, {"url": "https://api.github.com/repos/apache/maven/commits/98d2e197d111d4863d1e420a9f9c1548690bc7e1", "message": "[MNG-6308] added unit test for \"Building\" message"}, {"url": "https://api.github.com/repos/apache/maven/commits/f5f76c70e1828a7e6c6267fc4bc53abc35c19ce7", "message": "[MNG-6302] display progress at end of \"Building\" line"}, {"url": "https://api.github.com/repos/apache/maven/commits/c19e9dcac3d200094c770521b9b1b10df76f26c4", "message": "[MNG-6242] detect Cygwin/Mingw pseudo terminal for Jansi"}, {"url": "https://api.github.com/repos/apache/maven/commits/4f530c4f006b8d22da90d968a1d32797280804b9", "message": "[MNG-6196] removed remaining Monkey patching, not really necessary\n\ndone after Emmanuel Bourg #118 PR idea"}, {"url": "https://api.github.com/repos/apache/maven/commits/eb2db7b28664dbaac6a59a2189c70d92e455dcea", "message": "[MNG-6196] updated slf4j to 1.7.25\n\n[SLF4J-394] use new slf4j methods done for us\n[SLF4J-395] use slf4j-simple System.out cache"}, {"url": "https://api.github.com/repos/apache/maven/commits/707cff6ffdecbfb0e0356c70e3a7b490535e7ce4", "message": "[MNG-6186] fixed path to jansi native libs in distribution"}, {"url": "https://api.github.com/repos/apache/maven/commits/44634982a103a696d18619346756b1adaf3dbfd9", "message": "improved modello and animal sniffer's execution ids"}, {"url": "https://api.github.com/repos/apache/maven/commits/6182a2083fdb9964ccb5250fb85223e38485bf04", "message": "[MNG-6186] use enhanced HawtJNI library loading (remove previous hack)"}, {"url": "https://api.github.com/repos/apache/maven/commits/2a79d1e71edc0ddd0c0ba1612ce520f43961eef2", "message": "[MNG-6205] upgraded JAnsi to 1.16 for console encoding fix\n\nalso fixes MNG-6218 MinGW bash detection fixed by JAnsi 1.14"}, {"url": "https://api.github.com/repos/apache/maven/commits/2d4401557c3c870409e8b1c65d2dcc9a68281cae", "message": "[MNG-6223] support -f path/to/dir when detecting .mvn"}, {"url": "https://api.github.com/repos/apache/maven/commits/567af0d964cf823b275300aa4671b84a28da5baa", "message": "use \"java -jar\" command"}, {"url": "https://api.github.com/repos/apache/maven/commits/08f3c76a09601d85503c35743458d977a92e492d", "message": "improved description of styled message API"}, {"url": "https://api.github.com/repos/apache/maven/commits/0baa42345283f4fea3938a8ccd7c8e12b34203b1", "message": "use new \"Maven 3 (latest)\" and \"JDK 1.x (latest)\" Ubuntu+win aliases"}, {"url": "https://api.github.com/repos/apache/maven/commits/94c3b600ec3290cda98a66c108ff021b7c4c482e", "message": "switch to embedded core ITs run for faster result"}, {"url": "https://api.github.com/repos/apache/maven/commits/ad514f5cb55d16ca116c5c529ad48dd32d5bac61", "message": "added CORE_IT_PROFILES parameter"}, {"url": "https://api.github.com/repos/apache/maven/commits/16805f50ea1715c42ad59312f3e64ab70af3acfe", "message": "trying to make Jenkinsfile easier to understand"}, {"url": "https://api.github.com/repos/apache/maven/commits/f0535a40e2dba47f00c5469941d3edad2a8effef", "message": "[MNG-6192] upgraded m-assembly-p to get ordered entries in zip"}, {"url": "https://api.github.com/repos/apache/maven/commits/16382802611939a8876fe553208e8b0f4da606a6", "message": "[MNG-6189] warn if maven-site-plugin reportPlugins is configured"}, {"url": "https://api.github.com/repos/apache/maven/commits/fea81d8a2710350c3517f0046e820893abd6cc77", "message": "fixed site generation: downgraded parent pom, upgraded m-assembly-p"}, {"url": "https://api.github.com/repos/apache/maven/commits/a4157428d756e2189cddaddf0690ff070bb74d52", "message": "updated parent pom: fixes issue with m-assembly-p bug"}, {"url": "https://api.github.com/repos/apache/maven/commits/181b0215aa1199e152db9d2c08b1a01436547805", "message": "[MNG-6115] prevent JAnsi from writing temp native files to lib/ext"}, {"url": "https://api.github.com/repos/apache/maven/commits/24b9ef48f6045c3cca7297f4b7b94d3ee71b3718", "message": "fixed typos"}, {"url": "https://api.github.com/repos/apache/maven/commits/0db5e32cf59851086e895f1f541853b61df38121", "message": "fixed documentation errors"}, {"url": "https://api.github.com/repos/apache/maven/commits/985b5985f336d30b6b2110dae49dd2a5f5d5750b", "message": "fixed link"}, {"url": "https://api.github.com/repos/apache/maven/commits/3982c195e91e3ea0f73ce9e61c6ddc57137726e9", "message": "[MNG-6171] always show WARNING about usage of a non threadsafe plugin"}, {"url": "https://api.github.com/repos/apache/maven/commits/f1cc1d4e5aec96c9bd54219304e1b6b08855b102", "message": "[MNG-6140] maven-core depends on shared-utils (not project-utils)"}, {"url": "https://api.github.com/repos/apache/maven/commits/19d5b9dfa108a94c0825215a013ac21253cb0a17", "message": "[MNG-5297] improved explanations on prerequisites.maven in Maven 3"}, {"url": "https://api.github.com/repos/apache/maven/commits/9b763cc002e9a4e247baf7538727da5a29a6ce0b", "message": "[MNG-5878] added project.directory property to support module name !=\nartifactId in every calculated URLs"}, {"url": "https://api.github.com/repos/apache/maven/commits/1cb2e92b5ad6bc2baa80c48b6357d5f42df4e48f", "message": "[MNG-6140] renamed aether to resolver, added slf4j-provider"}, {"url": "https://api.github.com/repos/apache/maven/commits/311fc62b7daca1d63596e2202598a0fd3e4d77e2", "message": "added core its to projects' sources"}, {"url": "https://api.github.com/repos/apache/maven/commits/4547ff73d84f189dea35f60dffafff9cf2f446ba", "message": "added link to 3.3.1 release notes for details on .mvn"}, {"url": "https://api.github.com/repos/apache/maven/commits/8a8f7cd53f08bd0847e6263f79894d18881dcd9d", "message": "removed now unused checkstyle suppress warnings"}, {"url": "https://api.github.com/repos/apache/maven/commits/60e4fa650fc2e5b3b646c74f3eeab7d0381b8bcb", "message": "updated notice"}, {"url": "https://api.github.com/repos/apache/maven/commits/512fa6a45b73663ed5b5e0e896539d1084da36f3", "message": "improved documentation"}, {"url": "https://api.github.com/repos/apache/maven/commits/0b684af45ee85381a06a20cbdddb6b3fa0ff3b46", "message": "added core extensions documentation"}, {"url": "https://api.github.com/repos/apache/maven/commits/9d432fb515c390beb593d8c4608775c46cfc03f9", "message": "added README.md to rat excludes"}, {"url": "https://api.github.com/repos/apache/maven/commits/cfbad56f65b9d664c7967122b76a5389931080f8", "message": "point to our documentation on plugins dependencies upgrade"}, {"url": "https://api.github.com/repos/apache/maven/commits/84085c0a9ce4febee8be124fe61f02cd40185d20", "message": "updated urls (https, plexus) and license header formatting"}, {"url": "https://api.github.com/repos/apache/maven/commits/733eedc4fb16b0ed0d9cf792dd644e659b738cd9", "message": "added standard license and download links"}, {"url": "https://api.github.com/repos/apache/maven/commits/21d1bfb5a08ecf67a10b88a6fdbda98e7361376b", "message": "Jenkins file notification email title improvement"}, {"url": "https://api.github.com/repos/apache/maven/commits/94bc4de2ea54afa09a353034ed06edf0f68a8d87", "message": "[MNG-6093] use monkey patched slf4j-simple provider with Maven color"}, {"url": "https://api.github.com/repos/apache/maven/commits/b80915b8822b51aafa962a9ef53a61c0ac59033d", "message": "[MNG-3507] added color to Maven execution output messages"}, {"url": "https://api.github.com/repos/apache/maven/commits/c516ef79aecdeef5297e44bb5e836e67ffa5336f", "message": "[MNG-5836] put $maven.home/conf/logging first in classpath to avoid\nextension jar overriding logging config"}, {"url": "https://api.github.com/repos/apache/maven/commits/079f6b3ba3301035841e091cd237cd8295168741", "message": "[MNG-6088] add a newline after forked execution success message"}, {"url": "https://api.github.com/repos/apache/maven/commits/2f7daeff5802174c7b4ff8a4d2ac019b6406d03b", "message": "[MNG-5871] refactoring: improved empty urls handling"}, {"url": "https://api.github.com/repos/apache/maven/commits/600c0a0f9e55e67a7468925b2bde0c02a8a1534a", "message": "updated Jira location"}, {"url": "https://api.github.com/repos/apache/maven/commits/c1a26faecb11f22fea19ecf5cb4d577c34cfd576", "message": "added 3.3.1 and 3.3.3 releases"}, {"url": "https://api.github.com/repos/apache/maven/commits/5bf2c564dde7f82ebe42c7d9a37f5df1ddda2e4c", "message": "updated MPIR"}, {"url": "https://api.github.com/repos/apache/maven/commits/37c3f57f1d38add1848b9628cb81a5880f8d647d", "message": "fixed issue in comment"}, {"url": "https://api.github.com/repos/apache/maven/commits/8f782476a21745a41914411e3250d7d81107e583", "message": "[MNG-5888] upgraded Modello back: sorry, wrong cause"}, {"url": "https://api.github.com/repos/apache/maven/commits/f440c9bf9b923198998a5b3fcd82a28babe6ec25", "message": "[MNG-5888] revert to Modello 1.8.1 since 1.8.3 causes site failure (bad\ngenerated xdoc)"}, {"url": "https://api.github.com/repos/apache/maven/commits/26699804615646c1076f78cf3021d134fc0952cf", "message": "[MNG-5887] updated Modello site url"}, {"url": "https://api.github.com/repos/apache/maven/commits/186008ebceae806fed629bf2c61c4a1099529048", "message": "[MNG-5886] fixed broken link of ' Building Maven' in README.md"}, {"url": "https://api.github.com/repos/apache/maven/commits/2877b590f1ddcd7f7401f1a721ccf27f742bdecd", "message": "use StringBuilder instead of String to avoid temporary String creation"}, {"url": "https://api.github.com/repos/apache/maven/commits/e85e8cc9818d8554437bf96f1de690622c18741c", "message": "added default values in fields documentation"}, {"url": "https://api.github.com/repos/apache/maven/commits/a2eb2fe3ee7b1362d3d43c07a0b47ff532dbdf37", "message": "added extensive urls inheritance unit tests, even for most tricky parts"}, {"url": "https://api.github.com/repos/apache/maven/commits/6b6e9bf39e08f0f95ee22a5a5de55c0fd2090abe", "message": "updated configuration for svnpubsub /components location"}, {"url": "https://api.github.com/repos/apache/maven/commits/200d2f9935c537bf91328150192386d4fbf11554", "message": "MNG-5871 refactoring: put url extrapolation algorithm in inheritance\nmodel merger"}, {"url": "https://api.github.com/repos/apache/maven/commits/d25669e0bb82a8702604a57daaefd526fd964938", "message": "removed unused config since MPIR is at 2.8 with MPIR-290"}, {"url": "https://api.github.com/repos/apache/maven/commits/c5dd16988ee04b8c5e612633e6608a9e20a84b0d", "message": "fixed error reported by Checkstyle"}, {"url": "https://api.github.com/repos/apache/maven/commits/28d284b8c0067a090f5429d3580b58a9cd15bb05", "message": "improved comments"}, {"url": "https://api.github.com/repos/apache/maven/commits/33de19713387e37bd371465e52278aedd5ad0ffd", "message": "improved documentation: list urls from POM that are extrapolated with\nartifact id during inheritence"}, {"url": "https://api.github.com/repos/apache/maven/commits/337284bdcfa4726887cb0af6767b3d8fc922ec96", "message": "Plexus is now at github"}, {"url": "https://api.github.com/repos/apache/maven/commits/fd90ca20fe44e531256f2f317000c117e6d0e199", "message": "updated wiki content link: docs.codehaus.org has shut down"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/61146020", "body": "I like the idea of quiet transfert\nbut does it deserve an additional option: shouldn't this quiet transfert be activated in existing batch mode = non-interactive = no input, but limited output too\n\nWDYT?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/61146020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/68146338", "body": "I completely understand Christian motivation: we have a problem when we need interaction between non-default lifecycle and default lifecycle\nthis causes multiple already opened issues:\nhttp://jira.codehaus.org/browse/MPIR-238\nhttp://jira.codehaus.org/browse/MJAVADOC-171\n\nand this causes other problems that I'm starting to see without having opened a Jira issue at the moment: you cannot build a multi-module site independently from building the artifacts\nthen SHA-1 is incorrect, since the package has been rebuilt\n\nI didn't have time to study the patch, I understand how the idea of this \"legacy reactor resolution\" isn't ideal, but it looks promising to wait for more complete solution (that will have deep impact, I fear)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/68146338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/68425530", "body": "\"The worst is that open implementation can change the status of objects by any plugin\": yes, the API wasn't meant to be defensive when it was created, we could simply tell plugin developers \"be collaborative, don't change anything\"\nnowadays, with parallel build, it's not about plugin developers, with a clear separation between core and plugin, but inside core: it's harder to define the limits of collaboration\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/68425530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/76888558", "body": "Reporting is a key feature of Maven I strongly want to keep working (or fix when we introduced problems while improving build consistency during Maven 3.x refactoring)\n\nI like the option idea to fix (or workaround) the described use case, but I understand Jason resistance to adding it since it causes inconsistency. I still don't have strong final opinion if this is the way to go or not, either only as a temporary workaround or as a real permanent feature.\n\nWhat I know is that, while working on maven-reporting-exec, ie the component that launches report mojos during site generation, in MSHARED-266 for version 1.2, I found that there were more than this resolution issue that makes reporting mojo execution a special case: build forking and aggregate are other special cases that cause issues, IMHO\nAnd every change I could imagine to avoid build forking worked with most report plugins, but not with cobertura-maven-plugin: \"producing artifacts or consuming artifacts\" is a key factor, ie most reports are \"consuming artifacts\" but a few are \"producing artifacts\".\n\nI imagine this idea about \"disabling workspace resolution\" will affect cobertura-maven-plugin: since this report is producing artifacts, it will require workspace resolution, isn't it?\nChristian, did you try with a build that uses cobertura-maven-plugin?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/76888558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/77110127", "body": "the current head is expected to be released soon: we'll need to investigate before releasing, IMHO\n\ncomparing 3.2.5 to actual head, slf4j version did not change: 1.7.5\n\nwhen reading the changelog for head, this could perhaps be related to http://jira.codehaus.org/browse/MNG-5742 , which is the only issue I see that was intended to change classloading (this may of course be worse: unintented change when doing something else)\n\nI tested with m-site-p ITs and found that the issue happen with m-javadoc-p too (without failing the build): see full-reporting IT output log:\n[WARNING] An issue has occurred with maven-javadoc-plugin:2.9.1:javadoc, skipping LinkageError org/slf4j/spi/LocationAwareLogger, please report an issue to Maven dev team.\njava.lang.NoClassDefFoundError: org/slf4j/spi/LocationAwareLogger\n\nI created http://jira.codehaus.org/browse/MNG-5779 (as critical) to track the issue\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/77110127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/77440946", "body": "yes, it was just fixed in http://jira.codehaus.org/browse/MNG-5779\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/77440946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/77975130", "body": "another issue found regarding slf4j, this time with cobertura plugin, during instrumentation http://jira.codehaus.org/browse/MNG-5783 created, with the difference in {{Populating class realm plugin>org.codehaus.mojo:cobertura-maven-plugin:2.8-SNAPSHOT}}\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/77975130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/78220459", "body": "thank you for your work: the bugs are fixed now, cobertura-maven-plugin and m-site-p ITs pass\n\nnow back to the start of this PR :)\n\nChristian: did you know about MPIR-322? I know it's not exactly what you are expecting with this PR, but does it already help (for my use cases, it helps...)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/78220459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/maven/comments/6439921", "body": "on a pure theoretical point of view, I know it looks awkward\non a practical point of view:\n1. did you ever try to write a plugin descriptor by hand? or do you always let plugin-tools generate the descriptor (like the vast majority of plugin developers)?\n2. are you able to give us a xsd description for the configuration element content? and that fits into Modello descriptor, since Modello generates the xsd from .mdo?\n\nI'm not a big xsd expert: any help appreciated to fix the plugin.mdo I wrote to at least document the descriptor \"from a human point of view\" (ie not seeing in general that I had to cheat with configuration element)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/6439921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/6440157", "body": "I'm a big fan of XML having an XSD too, we should be able to get along with each other :)\n\nI had to reverse engineer too to write the plugin.mdo that actually documents the descriptor structure as much as possible: but the real source of information is still source code and examples, since this .mdo is only intended as documentation, it's not used by Maven core at all\n\nbut every plugin.xml is really used by Maven core to inject content, so it's really what maven knows from any plugin/mojo: if you look at a plugin.xml in any plugin, you'll see type information in every parameter/type and configuration/name of param/@implementation (= what I couldn't really describe as xsd, and even less make it generated from Modello)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/6440157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/6440196", "body": "true\nIn fact, I don't know precisely what is checked during value injection at runtime: this code was written before generics existed, so generics weren't implemented in plugin.xml at this time. I don't know if newer veresion could do something about it: what I know is that whan I updated plugin-tools, I chose not to try to change anything at this level for the moment\n\nnow is perhaps the right moment to have a review on this\nnotice that github comment are probably not the best place, since they are not sent to Maven developer's list: so this discussion is only happening between us: we need more Maven developers to have a chance to actually implement such a feature\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/6440196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/19438815", "body": "a typo from a search/replace \"cause\" -> \"t\" :)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/19438815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20568586", "body": "ok, MNG-6115 description had not been updated\r\nI'll do the changes", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20568586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20568727", "body": "didn't know this new method :)", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20568727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20568734", "body": "I'm doing it, while at it", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20568734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20673239", "body": "\"path\" vs \"directory\": I'm not sure it this is a question of naming\r\nthe question here is that there is the value from pom.xml and the value from filesystem (when we're building from filesytem, not consuming from repository): see the comment", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20673239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20673270", "body": "I'm not english native, but it seems consists in is expacted here: http://english.stackexchange.com/questions/61600/consist-in-vs-consist-of", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20673270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20673287", "body": "yes, javadoc? what's the issue?", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20673287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20673292", "body": "ok", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20673292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20673305", "body": "ok", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20673305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20673322", "body": "ok", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20673322/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20673339", "body": "ok", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20673339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20692343", "body": "now I understand\r\nbut this is picky, I'm not convinced it is so important, and I wrote \"javadoc\" everywhere in this page and others: I won't change this case and only this case here", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20692343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/19627514", "body": "\"quiet-transfer-logs\", for consistency with other options, please\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/19627514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/19627615", "body": "if you try this with current HEAD, Checkstyle will remember you our key coding convention, with spaces around parenthesis :)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/19627615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/66704747", "body": "should be a( \"Caused by\" ).reset().a( \": \" )\nfixed while merging in Maven\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/66704747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "rfscholte": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/df5169bdf9fead590d48e23fb182d7f73f1deb3d", "message": "[MNG-6330] Parents relativePath not verified anymore"}, {"url": "https://api.github.com/repos/apache/maven/commits/98af937bc6298e82e489b5f0cd3fb0a1c3d37109", "message": "[MNG-6300] Multi module release creates empty directories in war file instead of jars"}, {"url": "https://api.github.com/repos/apache/maven/commits/909fb7c59b87286b6eae36195f65db4776ccf92a", "message": "Merge branch 'MNG-6296'"}, {"url": "https://api.github.com/repos/apache/maven/commits/170c1ed82cbe124da1736da64af20d660dc3162e", "message": "Revert \"Squashed commit of the following:\"\n\nThis reverts commit f047ea143766fd22ae42040e6805bef287f3cc3e."}, {"url": "https://api.github.com/repos/apache/maven/commits/f047ea143766fd22ae42040e6805bef287f3cc3e", "message": "Squashed commit of the following:\n\ncommit c829bdcfc275b207e23fc568b3c16d98195675be\nAuthor: rfscholte <rfscholte@apache.org>\nDate:   Thu Aug 24 10:54:08 2017 +0200\n\n    [MNG-6275] ServiceLoaderFactory can't find implementations via ClassRealm"}, {"url": "https://api.github.com/repos/apache/maven/commits/785bad693c60ad60d7b307af8fab9e9234ff57bd", "message": "[MNG-6220] Add CLI options to control color output\nIntroduce -Dstyle.color=[always|never|auto]"}, {"url": "https://api.github.com/repos/apache/maven/commits/842db371f0fcaf4e930b99395fb6a8bb442684d6", "message": "[MNG-6148] Can't package and assemble with JDK9/Jigsaw"}, {"url": "https://api.github.com/repos/apache/maven/commits/00c82b7e234c6ed33f76ba48a236130c5511ab3a", "message": "Squashed commit of the following:\n\ncommit 049228ce76927a6740500e1b750f0e8f201f2478\nAuthor: rfscholte <rfscholte@apache.org>\nDate:   Mon Mar 27 20:22:46 2017 +0200\n\n    [MNG-6185] Replace doclettag explanation with annotations in AbstractMojo javadoc\n\n    Fix by Checkstyle reported issues\n\ncommit 63796a649e6e3b25a58fb567d354ca1849f48819\nAuthor: rfscholte <rfscholte@apache.org>\nDate:   Sat Mar 25 23:15:00 2017 +0100\n\n    [MNG-6185] Replace doclettag explanation with annotations in AbstractMojo javadoc"}, {"url": "https://api.github.com/repos/apache/maven/commits/52eecc406fdf37c1aec46ea31ab00978ed290a57", "message": "MNG-6078: commons-cli 1.4 released"}, {"url": "https://api.github.com/repos/apache/maven/commits/f661fc298e80208911838f5acce9840ea1a97e3f", "message": "[MNG-6078] Confirm commons-cli 1.4-SNAPSHOT before official release"}, {"url": "https://api.github.com/repos/apache/maven/commits/0e7e3eeb597b92f1394b24e33d5933e995ee8104", "message": "[MNG-6176] Javadoc errors prevent release with Java 8\n\nUpgrade to modello-1.9.1\nFix javadoc errors in tests"}, {"url": "https://api.github.com/repos/apache/maven/commits/587317b0095fc5d51041fed9e5b4786246a29a7b", "message": "[MNG-6176] Javadoc errors prevent release with Java 8\nUpgrade modello to 1.9.0\nFix invalid Javadoc"}, {"url": "https://api.github.com/repos/apache/maven/commits/8f025faab8fe0a3a6dbf3b76742fe365f4352e64", "message": "[MNG-6180] groupId has plain color when goal fails"}, {"url": "https://api.github.com/repos/apache/maven/commits/862c84a52b9ae9b88bc9a6cfa256852532d02a9a", "message": "Merge branch 'MNG-6181'"}, {"url": "https://api.github.com/repos/apache/maven/commits/e0da20a1f801aeda0cd74495834c637c3a207478", "message": "[MNG-6181] HttpClient produces a lot of noise at debug loglevel\n\nTurn off httpclient logging by default, which restores logging from previous Maven versions"}, {"url": "https://api.github.com/repos/apache/maven/commits/f4e07acbc2a496a8866b8270e7f7a9fd44085f71", "message": "Squashed commit of the following:\n\ncommit f3f981022f9157e9d74a9d9dfef7ae102c4d0593\nAuthor: rfscholte <rfscholte@apache.org>\nDate:   Thu Feb 9 11:00:17 2017 +0100\n\n    [MNG-6109] PluginDescriptor doesn't read since value of parameter\n    There's no specific IT, just a unittest, so itBranch should stay on master\n\ncommit 862e8e4e3a2b857eeeb4761a1568c15ebb442932\nAuthor: rfscholte <rfscholte@apache.org>\nDate:   Wed Feb 8 21:55:30 2017 +0100\n\n    [MNG-6109] PluginDescriptor doesn't read since value of parameter\n\ncommit 76b539ecf2733b2a8564c18581d60176dc0185a3\nAuthor: rfscholte <rfscholte@apache.org>\nDate:   Mon Oct 31 21:05:28 2016 +0100\n\n    PluginDescriptor doesn't read since value of parameter"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/46347052", "body": "Works fine on my system:\n\n```\nApache Maven 3.2.1 (ea8b2b07643dbb1b84b6d16e1f08391b666bc1e9; 2014-02-14T18:37:52+01:00)\nMaven home: D:\\apache-maven-3.2.1\\bin\\..\nJava version: 1.7.0_45, vendor: Oracle Corporation\nJava home: C:\\Program Files\\Java\\jdk1.7.0_45\\jre\nDefault locale: nl_NL, platform encoding: Cp1252\nOS name: \"windows 7\", version: \"6.1\", arch: \"amd64\", family: \"windows\"\n```\n\nWhat's yours?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46347052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/46476155", "body": "I read about the failing test. I'm looking for the differences. I've tried it with 1.7.0_55 as well, still that test succeeds. So it failure is either caused by the OS, the default locale or the way Maven is started. For instance, I use the `cmd.exe`\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46476155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/maven/comments/26699395", "body": "Why can this be removed? It ensures that if you say `-Dmaven.test.skip` it is translated to `-Dmaven.test.skip=true`.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/26699395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "stephenc": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/eee06f7d7c736cbc1668dc7eae5dc21fd4b1075f", "message": "Ensure any forked Maven executions are not spied on by Jenkins"}, {"url": "https://api.github.com/repos/apache/maven/commits/a670c2ea1f592563b756b31d650c9a6db553fbdb", "message": "Ensure any forked Maven executions are not spied on by Jenkins"}, {"url": "https://api.github.com/repos/apache/maven/commits/5411c5a9c4d327d7217ae966be3d1ead807ebfd8", "message": "Syntax"}, {"url": "https://api.github.com/repos/apache/maven/commits/3f04e94ea45033fa2768f40148b5e06a141e066e", "message": "Syntax"}, {"url": "https://api.github.com/repos/apache/maven/commits/35f3586eccb1cd7bf3a6585aaa1aeb8f0cd0516b", "message": "Start using some of the jenkinsEnv stuff"}, {"url": "https://api.github.com/repos/apache/maven/commits/5919b7450d2e01f079e930d92df7910af39d489a", "message": "Update DOAP"}, {"url": "https://api.github.com/repos/apache/maven/commits/69c512a8203030f3fee657673b0416bc2a121eae", "message": "Add the serverId to scm-publish so that we do not need to rely on cached svn credentials"}, {"url": "https://api.github.com/repos/apache/maven/commits/3d0efa36963c217527230228a11ab44050ca1b10", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/apache/maven/commits/138edd61fd100ec658bfa2d307c43b76940a5d7d", "message": "[maven-release-plugin] prepare release maven-3.5.2"}, {"url": "https://api.github.com/repos/apache/maven/commits/4b95ad9fce6dfe7eec2be88f5837e96c7fbd7292", "message": "Revert \"MNG-6209 better executeMojo thread context classloader\"\n\nThis reverts commit ec629f7d511eb910b4e80112a9fbe85ed8786f10."}, {"url": "https://api.github.com/repos/apache/maven/commits/cae779e4fbc6565a581f2c6adf9fb15348005603", "message": "Revert \"[MNG-6275] Maven Embedder compatible fix\"\n\nThis reverts commit 27a2bda3f4a8f5385c4cab360ed7365d3d3d3c09."}, {"url": "https://api.github.com/repos/apache/maven/commits/542a7a89156263b34d1472e9d9c1a2795afccd2d", "message": "[MNG-6275] Defang the tests when their core assumption is invalid.\n\n- The tests assume that the JRE has a ScriptEngineFactory\n- Not all JREs have a ScriptEngineFactory (I'm looking at Azul's Zulu Open JDK 7 builds)\n- Ideally we'd skip these tests using Assume.assumeThat(...) but PlexusTestCase doesn't support\n  AssumptionViolatedException for marking tests as skipped.\n\nIssue identified during testing of the 3.5.1 release candidate"}, {"url": "https://api.github.com/repos/apache/maven/commits/312eb53502b78355ab21e27610e7ef253990f574", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/apache/maven/commits/094e4e31a5af55bb17be87675da41d9aeca062f3", "message": "[maven-release-plugin] prepare release maven-3.5.1"}, {"url": "https://api.github.com/repos/apache/maven/commits/27a2bda3f4a8f5385c4cab360ed7365d3d3d3c09", "message": "[MNG-6275] Maven Embedder compatible fix\n\n- Need to use PARENT_CLASSLOADER so that when used by embedder we get a\nconsistent view of the available classes\n\n- Restores test case from f047ea143766fd22ae42040e6805bef287f3cc3e"}, {"url": "https://api.github.com/repos/apache/maven/commits/e44c39c2eb5afda9efe60b9dd0ffc32c62501c5f", "message": "Update Jenkinsfile to use JENKINS-43507 syntax for resolveScm"}, {"url": "https://api.github.com/repos/apache/maven/commits/70eabfe0f2bc5fe85b666ca511ec35574b23d32f", "message": "Update the DOAP to include the 3.5.0 release"}, {"url": "https://api.github.com/repos/apache/maven/commits/a4b0b63b62533399878c9de0656f88f100a46aa0", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/apache/maven/commits/ff8f5e7444045639af65f6095c62210b5713f426", "message": "[maven-release-plugin] prepare release maven-3.5.0"}, {"url": "https://api.github.com/repos/apache/maven/commits/87cf1eeb7d2506e192da77f7d5b286fae2b20314", "message": "[MNG-6198] Use the directory specified by -f for searching with 'mvn'"}, {"url": "https://api.github.com/repos/apache/maven/commits/96543b7c6ea52ad7ba3bcd559c38b159f8aa4c0d", "message": "[MNG-6195] Tidy up quoting and command substitution"}, {"url": "https://api.github.com/repos/apache/maven/commits/33c8d8efe9410e134080bd979a7df82de80bcf74", "message": "INFRA have been changing JDK labels again"}, {"url": "https://api.github.com/repos/apache/maven/commits/fd29ddebf980b895ca3a1665aec49b3c7d17eeaf", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/apache/maven/commits/214540c2ae5431645bb927d6dc5498ebafc27359", "message": "[maven-release-plugin] prepare release maven-3.5.0-beta-1"}, {"url": "https://api.github.com/repos/apache/maven/commits/68e38e5086d0978c61391b7cdc4514fdf96e64d7", "message": "Make it possible to run unit tests from an IDE"}, {"url": "https://api.github.com/repos/apache/maven/commits/abca6ab6e2508860fb30d6e51b668c6c513e3d9e", "message": "Merge remote-tracking branch 'origin/MNG-6182'"}, {"url": "https://api.github.com/repos/apache/maven/commits/55eeb325cd0ddb2a093196f4804e232d45bcc54a", "message": "[MNG-6176] Upgrade findbugs to 3.0.4 so that the site can be built with Java 7 and 8"}, {"url": "https://api.github.com/repos/apache/maven/commits/b12905ce02ec0e58b475bbc1d920a6801224c02f", "message": "[MNG-6176] Fix javadoc *errors* in maven-compat"}, {"url": "https://api.github.com/repos/apache/maven/commits/529e8a62049d009a800cbf0b37ca348abaf9022d", "message": "Merge remote-tracking branch 'origin/master'"}, {"url": "https://api.github.com/repos/apache/maven/commits/e6528827571b0ebe06675ef47c8157d1522116a5", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/apache/maven/commits/8e6bbc4d4aa7cdc837625a05358c98ca15f72698", "message": "[maven-release-plugin] prepare release maven-3.5.0-alpha-1"}, {"url": "https://api.github.com/repos/apache/maven/commits/dc9c4db4494b62e2231bb67b39678decf6329852", "message": "[MNG-6078] Perform a proper merge of the two sources of command line arguments\n\n- Needed to extend Commons CLI's CommandLine just to perform the merged"}, {"url": "https://api.github.com/repos/apache/maven/commits/5885e70e24a69914da892eb343906658d5463bfa", "message": "[MNG-6078] Undo the order reversal hack\n\n- ca4303031357a7decaee8de770b71fb2c2fedd28 used a hack to reverse the order of arguments\n- The side effect of the hack is that the first named system property value on the CLI would win\n- The side-effect is causing a lot of integration test builds to fail and will likely have other unintended consequences\n- Correct fix is to put system properties at the end.\n- If this change passes the integration tests then it will need to be augmented to correctly round-trip the CLI options\n  as there is the potential that somebody may legitimately be passing an arg parameter a value that starts with -D\n  for example 'mvn -ep -Dsecretpassword' or 'mvn -l -D.log' but given that this requires a parse and unparse\n  to handle the escaping, I want to get evidence that the integration tests pass first"}, {"url": "https://api.github.com/repos/apache/maven/commits/5cce371c8aee5d957d9b24e46cddc939a15aff40", "message": "Switch to resolveScm so that we get auto linking of matching integration test branches\n\n- Also use short paths when integration testing on windows and clean up\nafterwards to ensure disk space does not overflow"}, {"url": "https://api.github.com/repos/apache/maven/commits/a83296d795536f43fe38fa277752003ca15ada53", "message": "[INFRA-13307] Now we can build on either Windows node"}, {"url": "https://api.github.com/repos/apache/maven/commits/e51fc87277bb988aed7641d02fd888c77d0a1206", "message": "[MNG-6152] Add a Jenkinsfile"}, {"url": "https://api.github.com/repos/apache/maven/commits/bce33aa2662a51d18cb00347cf2fb174dc195fb1", "message": "[MNG-6151] Set version to 3.5.0-SNAPSHOT"}, {"url": "https://api.github.com/repos/apache/maven/commits/1953284925616e691fb881c5e3fa8fbdd1830385", "message": "[MNG-5840] A regression had crept in and was missed as the intergration tests were not running the MNG-5840 tests"}, {"url": "https://api.github.com/repos/apache/maven/commits/bd87258629db8e3fcc7aa04777afc16314c3cde0", "message": "[MNG-5840] The fix for parent version validation caused a regression in the parent version range\n\n- With this change we basically unwind MNG-5840 for the rumoured validation in the workspace resolver\n  when dealing with a parent version range. Not ideal but only way for now to retain the version range feature"}, {"url": "https://api.github.com/repos/apache/maven/commits/ec14b8ad4c6613d04e3258101bdbf81588b658a9", "message": "curses upon you IDE for screwing up the formatting"}, {"url": "https://api.github.com/repos/apache/maven/commits/25f5143169d39075cee67d9f4d11649cce0fafa0", "message": "[MNG-5840] The fix for parent version validation caused a regression in the parent version range\n\n- With this change we basically unwind MNG-5840 for the rumoured validation in the workspace resolver\n  when dealing with a parent version range. Not ideal but only way for now to retain the version range feature"}, {"url": "https://api.github.com/repos/apache/maven/commits/40d5087b6b134842e2b61a567dbb4bfbcfab7ae6", "message": "[FIXES MNG-5840] if the pom.xml at <relativePath> is the same groupId:artifactId but different version fall back to the repository for parent resolution"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/123696060", "body": "@ifedorenko I've simplified this per your comments... still feel that adding the dependency on maven-artifact is not the correct thing... but it is a semi-reasonable fix\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/123696060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/124128970", "body": "After no comments against merging this and with @ifedorenko saying go for it I decided to merge... if people object they can revert it out. I am not in love with this fix but it will be fine IMHO for 3.3.6\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/124128970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "slachiewicz": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/866582d296ed80f36f33e5293cd07647185e0e43", "message": "[MNG-6306] Replace use of Guava in maven-resolver-provider with a lighter weight alternative\n\nThis closes #138"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/154", "title": "[MNG-5967] Correct Mockito scope to test", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/153", "title": "[MNG-6069] Migrate to non deprecated parts of Commons CLI", "body": "Without 2nd commit 719234d when I set -Dstyle.color=never is not working correctly and returns value \"true\" not \"never\"", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/152", "title": "[MNG-5992] Upgrade default version of maven-release-plugin to 2.5.3", "body": "Fix password printout to logs\r\n\r\nCredit to: Ryan J. McDonough", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/150", "title": "[ MNG-6335] Update Mockito to 2.12.0", "body": "Also change scope to test", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/149", "title": "Upgrade maven-checkstyle-plugin to 3.0.0 (Checkstyle 6.18) and fix errors", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/maven/comments/25478731", "body": "is it possible to reconfigure Sonar at https://sonarcloud.io/dashboard?id=org.apache.maven%3Amaven to cover latest 3.5 snapshots?\r\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/25478731/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/comments/26699553", "body": "i saw that new GnuParser by default set value to \"true\" if there is no value provided", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/26699553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "coder-hugo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/b2afafe5a252d9f86b3e43cce8a06dc9cdc7a6d7", "message": "Parse properties before configuring the logging settings"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/135", "title": "[MNG-6296] Parse properties before configuring the logging settings", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rmannibucau": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/4d49d3b05b2e3d3a4530bb27e8cc162ab50baa7c", "message": "logging the module count to let the user identify how many module are still to be executed/processed"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mkrizmanic": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/f1ed6592b1c701834d1377fade6cdb382a63bbf4", "message": "[MNG-6127] Fix plugin execution configuration interference\n\nSigned-off-by: rfscholte <rfscholte@apache.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "michael-o": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/b1002575177abd1108fe50f457cceb9c7c3cf7d8", "message": "[MNG-5457] Show repository id when downloading or uploading from/to a remote repository"}, {"url": "https://api.github.com/repos/apache/maven/commits/e520324c8d45e2465cf8aeafb4d57cef30250136", "message": "[MNG-6258] Upgrade to Maven Resolver 1.1.0"}, {"url": "https://api.github.com/repos/apache/maven/commits/ecef59f1cb822e48c63215fa7dd0c8f4fd54d6af", "message": "[MNG-6167] Clean up dependency mess (reported by dependency:analyze)\n\nClean up compile and runtime dependencies. Test dependencies have not been\ntouched because their seem to be false positives due to DI."}, {"url": "https://api.github.com/repos/apache/maven/commits/fd988e78e95a53c3a39ec944869ba62b0c7fc0f0", "message": "[MNG-6228] Optionality not displayed in dependency tree when run in debug mode\n\nLog message in DefaultProjectDependenciesResolver has been extended with\n\"(optional)\" if dependency is marked as optional (direct or transitive)."}, {"url": "https://api.github.com/repos/apache/maven/commits/f7d4bce23324cd4a318486d8715a128cf7436c3a", "message": "[MNG-6149] MetadataResolutionResult#getGraph() never resolves request type 'test'"}, {"url": "https://api.github.com/repos/apache/maven/commits/3938817fd3e0ad62efe335307406e70bff876834", "message": "Doc improvement in simplelogger.properties"}, {"url": "https://api.github.com/repos/apache/maven/commits/b66bdb9cbc383fd4cc875006afe9fe6d4de26397", "message": "[MNG-6150] Javadoc improvements for 3.5.0\n\n* Remove duplicate plugin configuration\n* Add workaround for Javadoc locale\n* Clean up errors reported by Javadoc 7\n\nNote: Javadoc 8 fails immediately because Modello generates invalid\nJavadoc"}, {"url": "https://api.github.com/repos/apache/maven/commits/23b5fcffa75b89e5c3141be5269840d6cd70fe12", "message": "[MNG-6137] Clean up duplicate dependencies caused by incomplete Wagon HTTP Provider exclusions\n\nJCL over SLF4J has been added also as a runtime dependency because the\nbundled HttpClient still uses Commons Logging and we want our version\nof SLF4J enforced."}, {"url": "https://api.github.com/repos/apache/maven/commits/ce93bb42b95c097ce7671576ae9e780b5a2bc653", "message": "[MNG-6136] Upgrade Maven Wagon to 2.12"}, {"url": "https://api.github.com/repos/apache/maven/commits/2678388ea2cebc43f58009720609523ae09176f7", "message": "[MNG-6003] Drastically reduce JAVA_HOME discovery code\n\nAll special handling has been removed. JAVA_HOME must be set properly by\nthe user if necessary. Error messages have been graciously borrowed from\nthe Tomcat start scripts."}, {"url": "https://api.github.com/repos/apache/maven/commits/d426bf9c6e59f893499c623c3434ce8f61200d9f", "message": "[MNG-6001] Replace %HOME% with %USERPROFILE% in mvn.cmd"}, {"url": "https://api.github.com/repos/apache/maven/commits/1bc69ff93eb8bde73bf4b9872b78eb6f6be4865d", "message": "[MNG-5963] mvn.cmd does not return ERROR_CODE"}, {"url": "https://api.github.com/repos/apache/maven/commits/fe586467ecbd63791001e7a6ddf8f18d4fac19b8", "message": "[MNG-5815] \"mvn.cmd\" does not indicate failure properly when using \"&&\""}, {"url": "https://api.github.com/repos/apache/maven/commits/065281c43d7435be204aa963e1f94d1128bb5351", "message": "[MNG-5607] Don't use M2_HOME in mvn shell/command scripts anymore\n\n* Variable has been removed and replaced with an internal one which\n  cannot be overriden from outside. From now on, it is an\n  implementation detail which it should have been from the beginning.\n* Cleaned up license header and style of the variable description\n  section graciously borrowed from the Tomcat start scripts."}, {"url": "https://api.github.com/repos/apache/maven/commits/b9285469a587f7c4bdc777c50173ba3a0619cc9e", "message": "Remove Subversion keywords from LICENSE.vm"}, {"url": "https://api.github.com/repos/apache/maven/commits/aecccf9a2a0a5d2db1fcb602cc972284fd573a4a", "message": "[MNG-6145] Remove non-existent m2 include in component.xml"}, {"url": "https://api.github.com/repos/apache/maven/commits/f53f1547a16fb0f7e288de5c4684c599652ee601", "message": "[MNG-6147] MetadataResolutionResult#getGraph() contains duplicate if clause"}, {"url": "https://api.github.com/repos/apache/maven/commits/920f10a561dee3c3bc34d356082dafd1457a8647", "message": "[MNG-6144] DefaultWagonManagerTest#testGetMissingJarForced() passed incorrect value\n\nThis closes #86"}, {"url": "https://api.github.com/repos/apache/maven/commits/be5caccaff3d00ffca4b3cefe9665b6106bc44bf", "message": "[MNG-6102] Introduce ${maven.conf} in m2.conf\n\nSet maven.conf to default ${maven.home}/conf in ${maven.home}/bin/m2.conf\nto have a canonical property pointing to global configuration files from\nwithin Java code.\n\nThis also helps package maintainers to decouple the Maven installation\nfrom a global configuration by solely modifying m2.conf instead of using\ndirty hacks, if possible at all."}, {"url": "https://api.github.com/repos/apache/maven/commits/149cce7a867956efeaf72d527f61297bf2471b1e", "message": "[MNG-5977] Improve output readability of our MavenTransferListener implementations\n\n* Applied a general decimal formatter which automatically scales file sizes between [0,10) (one decimal digit) and [10,1000) (whole numbers) along with proper size and time units\n* The progress meter will now properly\n** tell the amount of transfers along with file names (in debug mode) and absolute progress by size\n** visually seperate parallel transfers with \" | \"\n* Optimized and reduced padding to the cases where it actually is necessary\n* Padding has to be applied to every event which can succeed with progress update\n* Synchronize all calls to console to avoid race conditions where output is terminated by a carriage return only. If no sync is done, SLF4J or INIT/SUCCEEDED update can interleave and overwrite the progress while being shorter as the progress itself.\n* Replaced the concurrent hash map with a synchronized linked hash map to retain order of the progress meter. It will behave now like a queue.\n* Work around a rounding bug existed upto Java 7\n  See http://stackoverflow.com/q/22797964/696632 and Oracle's bugfix\n  Announcement: http://www.oracle.com/technetwork/java/javase/8-compatibility-guide-2156366.html\n\nRace conditions cannot be avoided if -T is employed since one does not have access to the output stream of a SLF4J backend to synchronize on."}, {"url": "https://api.github.com/repos/apache/maven/commits/deefd9342b13f1fec786ddb00ff3b39299e6e11a", "message": "[MNG-5954] Remove outdated maven-embedder/src/main/resources/META-INF/MANIFEST.MF"}, {"url": "https://api.github.com/repos/apache/maven/commits/355f4dff03cea8cab0d7bdcb00fffa4e43b2c10b", "message": "[MNG-5975] Use Java 7's SimpleDateFormat in CLIReportingUtils#formatTimestamp"}, {"url": "https://api.github.com/repos/apache/maven/commits/5053a628c0a4eb069ab5512ad7491494207cb996", "message": "[MNG-6106] Remove maven.home setter from m2.conf"}, {"url": "https://api.github.com/repos/apache/maven/commits/8373c79a47ce4f12e549ae817a9c5f9eae950fb8", "message": "[MNG-6138] Remove obsolete message_*.properties form maven-core"}, {"url": "https://api.github.com/repos/apache/maven/commits/618e62dd3315b4cb5b0f7dcdd37fc787c44b2ade", "message": "[MNG-5649] Use Commons Lang's Validate to intercept invalid input\n\nUse wherever possible Validate with consistent messages and exceptions."}, {"url": "https://api.github.com/repos/apache/maven/commits/d556da84348b0d2de04839ad18ec75ba7231ea8c", "message": "Capitalize names in missing -v output"}, {"url": "https://api.github.com/repos/apache/maven/commits/7e2d657fa08bff3d7f9383bdbb0cb660aec58a11", "message": "Make the non-canonical build revision display the time zone"}, {"url": "https://api.github.com/repos/apache/maven/commits/4ba3b752d6cc7fb170911711fd9a8cbf5979e745", "message": "[MNG-5877] maven-aether-provider/maven-compat does not always generate snapshot versions using Gregorian calendar year\n\nPostfix all repo snapshot handling not just Aether."}, {"url": "https://api.github.com/repos/apache/maven/commits/2ec27257b4936762a92c2ac860ea5d633c633e77", "message": "[MNG-5907] org.apache.maven.repository.internal.RemoteSnapshotMetadataTest fails starting at midnight\n\nAdded missing import."}, {"url": "https://api.github.com/repos/apache/maven/commits/316298e529c08936562d707ef136dc2756f0f084", "message": "[MNG-5907] org.apache.maven.repository.internal.RemoteSnapshotMetadataTest fails starting at midnight"}, {"url": "https://api.github.com/repos/apache/maven/commits/b711de57dcd7d5db5b97ab4c9e1a618293e33a4d", "message": "[MNG-5906] Use canonical name for UTC timezone"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/44029998", "body": "Nice, I think the wording of the log message contains a duplicate:\n\n\"Using the builder %s with a thread count of %s\", that result in \"Using the builder XyzBuilder with a thread count of 4\". Builder is printer twice, in my opinion unnecessary.\n\nHow about \"Using the %s implemenation with a thread count of %d\"?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44029998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44084928", "body": "Emberassing, thanks.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44084928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45076095", "body": "Isn't `bundle` too general? `osgi-bundle` would be clear and precise.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45076095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/61159553", "body": "Why do we need this? There is a batch mode, minimal transfer output.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/61159553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/61230745", "body": "@martin-g, quiet implementation logs nothing. It is a no-op. So it does what you want. What improvement are you trying to make here?\n@jvanzyl, can you share some thoughts?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/61230745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/61775255", "body": "Can you squash the commits and raise a JIRA issue for that?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/61775255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/63270071", "body": "@JigarJoshi , you can use batch mode for that.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/63270071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/67453526", "body": "Christian, can you squash your commits please?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/67453526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/67556876", "body": "It would be fine to reset the branch to the top of `origin/master`, cherry-pick your changes, start `rebase -i HEAD~2` and the squash both. It would create a clean history.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/67556876/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/67843628", "body": "Please read my comments in the tickets. This is all better off in MNG rather than MPIR. MPIR is just a graphical evaluation of the model.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/67843628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/97112361", "body": "We should have a JIRA issue for this\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/97112361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/136840652", "body": "Does this apply to Windows too?\nCan you please open a JIRA issue for that?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/136840652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/138667695", "body": "Kindly squash your commits into one and bring it in sync with current master.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/138667695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/141633497", "body": "Please open a JIRA ticket and I will merge you PR.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/141633497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/142075163", "body": "Commit merged and pushed, thanks. Please close this PR.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/142075163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/143833287", "body": "Can you ping me by Thursday, I will review and merge. Did you really observe it to fail with Thai locale?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/143833287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/143977320", "body": "Indeed, just tried for today and Thai calender gives me `2558-09-29`.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/143977320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/143978524", "body": "@josephw Can you kind rebase on current master? Git refuses to perform a `--ff-only` merge.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/143978524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/143988492", "body": "Already merged locally, running ITs...\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/143988492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/144029731", "body": "Fixed with 5cbc294e72c79955fb93c6434e9ac8ae7d9206cc. Please close.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/144029731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/maven/comments/13804694", "body": "Don't! Always through a NPE if null is passed.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/13804694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/13810086", "body": "Right, see my ongoing effort on this: https://issues.apache.org/jira/browse/MNG-5649\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/13810086/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/18402248", "body": "Why is this `close` necessary? The new `try` clause should handle it, shouldn't it?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/18402248/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/18402253", "body": "Same as above.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/18402253/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/19438684", "body": "What is 'td'?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/19438684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/19860040", "body": "It would likely to improve readability but given that this is internal stuff, I see no huge gain here.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/19860040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20567994", "body": "As far as I remember from the ticket, we agreed to use `lib/ext` because this is for the user and `lib` is solely for us.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20567994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20567995", "body": "See above.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20567995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20568011", "body": "Changes on `CLIManager` from 5fb4bc9a237ad2c19c5851b89d0ed810d2eff02d are missing. Especially, ` (disables output color)` on batch mode and log file.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20568011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20568013", "body": "Go for `System.lineSeparator()`, if this `static` is necessary at all.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20568013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20568028", "body": "Use `PrintStream`s ability like `print()` or `println()` to avoid `NEWLINE` at all and don't invoke `toString()` on objects with `PrintStream`. [It will do for you](https://docs.oracle.com/javase/7/docs/api/java/io/PrintStream.html#print(java.lang.Object)).", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20568028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20568261", "body": "This should be namespaced and contain all attributes just like other assemblies here.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20568261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20623249", "body": "Here is trailing whitespace", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20623249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20623254", "body": "This block contains trailing whitespace too.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20623254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20655729", "body": "consists of...", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20655729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20655730", "body": "Javadoc...", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20655730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20655734", "body": "five URLs...", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20655734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20655735", "body": "is the parent's one..", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20655735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20655741", "body": "Use `StandardCharsets` directly.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20655741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20655748", "body": "Same as above", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20655748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20655755", "body": "It is somewhat confusing because `childDirectory` is passed, but yet you use `child` to get it. Shouldn't it be `childPath`?", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20655755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20675912", "body": " Javadoc is written officially with an uppercase J as it is a name.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20675912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20685998", "body": "Agreed! Thanks for the reference.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20685998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20686015", "body": "Leave it as-is. We'll see how it scales.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20686015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/22267640", "body": "Why is this in the commit? This has nothing to do with the conversion, does it?", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/22267640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/22267651", "body": "I am bit confused. You don't really need to replace `@Requirement` with `@Inject`?", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/22267651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/19860234", "body": "Please remove that whitespace\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/19860234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/64118541", "body": "This should resolve to a release version.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/64118541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/42421297", "body": "Not related to the PR, please remove.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/42421297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/42421348", "body": "Please use Commons Lang as I have done it recently on other modules in Maven.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/42421348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234207", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234247", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234272", "body": "Indent as above.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234319", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234340", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234360", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234380", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234423", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234434", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234444", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/86662937", "body": "Why is this check not present in the shell script?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/86662937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/86662941", "body": "This should go to `stderr`.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/86662941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/98353293", "body": "This is a typo in [Plexus Sec Dispatcher](https://github.com/sonatype/plexus-sec-dispatcher/blob/master/src/main/java/org/sonatype/plexus/components/sec/dispatcher/PasswordDecryptor.java#L25) we can't fix here. Please drop. You can, of course, add a comment for the typo.", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/98353293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/98353361", "body": "Same here.", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/98353361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "dejan2609": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/12d6471337c7ad067b7762d44050a079829ea26c", "message": "[MNG-6207] Create WARNINGs in case of using system scope\n o display deprecation build warning for dependencies with scope 'system' declaration\n o Note about tests: existing 'systemPath' related tests are reused/expanded\n   (rationale: scope 'system' and 'systemPath' are mutually dependent)\n\nSigned-off-by: Karl Heinz Marbaise <khmarbaise@apache.org>"}, {"url": "https://api.github.com/repos/apache/maven/commits/eb6b212b567c287734a2dbbef3c113fe650f1def", "message": "[MNG-6206] display deprecation build warning in case when dependencies\nuse metaversions (LATEST or RELEASE)\n\nSigned-off-by: Karl Heinz Marbaise <khmarbaise@apache.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ifedorenko": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/66fc74d6296ea0a33f8a9712dc5ed5eb3affd529", "message": "MNG-6233 don't mix plexus and jsr330 annotations in aether-provider\n\nSigned-off-by: Igor Fedorenko <ifedorenko@apache.org>"}, {"url": "https://api.github.com/repos/apache/maven/commits/c2c6259de6f1262d9b31509b8c30844a386a4f29", "message": "MNG-6210 allow maven custom guice scopes in .mvn/extensions\n\nSigned-off-by: Igor Fedorenko <ifedorenko@apache.org>"}, {"url": "https://api.github.com/repos/apache/maven/commits/ec629f7d511eb910b4e80112a9fbe85ed8786f10", "message": "MNG-6209 better executeMojo thread context classloader\n\nSigned-off-by: Igor Fedorenko <ifedorenko@apache.org>"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/78070683", "body": "http://jira.codehaus.org/browse/MNG-5783 should be fixed in master now. I've provided explanation of the problem and links to the fix and corresponding IT changes in the jira.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/78070683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/89838717", "body": "@Stephan202 what is your usecase for having multiple maven or jvm options for the same codebase? Is this to support svn (and similar) repositories that effectively host multiple codebases or something else? .mvn is meant to configure environment parameters like jvm -Xmx or builder and I can't think of a reason these would be different for different parts of the same codebase.\n\nAs for searching \"true\" multi-module project root, lack of `pom.xml` is not a good indicator traversal reached outside project tree. First, we wanted to support alternative pom formats with this feature. Second, even for projects that do use `pom.xml`, parent pom does not have to be at the root of the project codebase.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/89838717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/105632922", "body": "This seems to break org.apache.maven.it.MavenITmng3529QuotedCliArgTest integration test. Will have a closer look later today.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/105632922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/113485035", "body": "Maven is targeting java 7 already, try-with-resource is more appropriate way to guarantee IO streams are closed.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/113485035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/120415902", "body": "What will happen when projects using new/custom version range resolution strategy are deployed to shared repository like Central? Won't this break consumers of project artifacts?\n\nFor example, say my project uses odd/even versioning convention to distinguish between developer and stable versions and I implemented custom range resolver to enforce this convention. Since consumers of my project's artifacts will have no knowledge of the versioning scheme I use, they may resolve wrong transitive dependencies.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/120415902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/123711202", "body": "What other options do we have? I guess we can create new `maven-versioning` module, move `org.apache.maven.artifact.versioning` implementation there and change maven-artifact to delegate to the new code. This is the only \"clean\" solution I can think of, but I do not have time to do this now and not sure new module with only a handful of classes is justifiable.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/123711202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/145722376", "body": "-1\n\nThe old behaviour allowed inconsistency between dependencies used to calculate project build order and project dependencies used during the build. It also resulted in reparsing reactor project pom.xml files multiple times during the build, which affected build performance for larger projects.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/145722376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/145727506", "body": "I am not sure I fully understand the problem, but maven generally expects project dependencies to stay the same during the build. If you need to suppress certain storm-core dependencies from \"leaking\" into uber-jar projects, I think you should be able to simple mark those dependencies as optional=true (which really means \"non-transitive\").\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/145727506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "ChristianSchulte": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/f4ede96fd06c8d3e1e2b2fb679baec058cce30e1", "message": "[MNG-5935] Optional true getting lost in managed dependencies when transitive\n\nUpdated to correctly map the optional flag of Maven model dependencies to\nAether dependencies. Prior to this change all managed dependencies implicitly\nhad the optional flag set to 'false' leading to Aether managing that flag to\n'false' on all managed dependencies when transitive."}, {"url": "https://api.github.com/repos/apache/maven/commits/8400984ac5201ae6bf06bfa88ade8a8468c76634", "message": "[MNG-6112] Central repository in the 4.0.0 super POM should declare update policy 'never'.\n\nThis reverts commit 13adc1bc2b6d9fc3a62ec2389996726c2edce4d8 *not changing\nanything* just because someone did not react in time when this issue had been\nlying around on a branch. If we would set pace for the industrie, everyone would\nstill be using 5.25\" floppy disks and 8 bit hardware and we would tell them\nthat upgrading to be able to use new software would be too risky and they\nbetter keep theire broken assembly routines until the machine goes up in\nsmoke."}, {"url": "https://api.github.com/repos/apache/maven/commits/0931bb2cc7630cc79adb98407db13315b4a709ee", "message": "[MNG-6168] Fix unclosed streams"}, {"url": "https://api.github.com/repos/apache/maven/commits/27ab7503a7196a40b5ed1007181c82cdcf11e03c", "message": "[MNG-6190] maven-resolver-provider's DefaultArtifactDescriptorReader has mismatched constructor and initService methods"}, {"url": "https://api.github.com/repos/apache/maven/commits/13adc1bc2b6d9fc3a62ec2389996726c2edce4d8", "message": "[MNG-6112] Central repository in the 4.0.0 super POM should declare update policy 'never'."}, {"url": "https://api.github.com/repos/apache/maven/commits/d54e6f91a8652cdda61a20f051f97f11d4c3c982", "message": "s/@since 3.5.0-alpha-2/@since 3.5.0/g"}, {"url": "https://api.github.com/repos/apache/maven/commits/f1ccecdd893eea0a320634a49bc6e56b776fb213", "message": "[MNG-6182] ModelResolver interface enhancements.\n\no Added unit tests for the 'ModelResolver' interface."}, {"url": "https://api.github.com/repos/apache/maven/commits/da03d6b03192399237750c15f96fa021977dd83b", "message": "[MNG-6183] Dependency management debug message corrections."}, {"url": "https://api.github.com/repos/apache/maven/commits/34afec69c866f731f3f9d9b3606bbc31b51d64e7", "message": "[MNG-6183] Dependency management debug message enhancements.\n\no Updated to add debug log messages about optional flag management."}, {"url": "https://api.github.com/repos/apache/maven/commits/ab800b0cfae4e3ca9453304e3b9727ba4a4b712b", "message": "[MNG-6182] ModelResolver interface enhancements."}, {"url": "https://api.github.com/repos/apache/maven/commits/0b9a30f350f159a190e87c78e520ba7a7ae0642b", "message": "[MNG-6177] The --file command line option of the Windows and Unix launchers does not work for directory names like \"Spaces & Special Char\""}, {"url": "https://api.github.com/repos/apache/maven/commits/37fef3d762c8068b876b07b84b83a39cdc3ac5f4", "message": "[MNG-5967] Dependency updates"}, {"url": "https://api.github.com/repos/apache/maven/commits/0514c1b14eadae37c9de77af3ed67ed7388bdf1d", "message": "[MNG-2199] Support version ranges in parent elements\n\no Updated to fix parent version range resolution broken since 3.2.3 and to\n  remove parent version range resolution logic obsolete since Maven\n  3.2.3 which changed the initialization of MavenProject instances.\no Updated local parent resolution to behave the same way remote parent\n  resolution behaves. When referencing a parent using version ranges,\n  inheriting the version or using version expressions should not be supported.\n  It has been implemented that way for remote parent resolution as it got\n  introduced in Maven 3.2.2. For local parent resolution the version in parent\n  declarations had been ignored completely as of Maven 3.3.0 due to commit\n  be3fb200326208ca4b8c41ebf16d5ae6b8049792 removing all local parent version\n  validation. Work on fixing this is tracked by MNG-5840 released with Maven\n  3.3.9. This commit adds the final missing bits to make local and remote parent\n  resolution behave the same way as much as possible. As an exception, remote\n  parent resolution still is a bit more strict than local parent resolution due\n  to a different API in use. When resolving a parent from a repository using\n  version ranges, the ModelBuilder verifies the range in use to declare an upper\n  bound. When resolving a parent locally using version ranges, those ranges are\n  not required to declare an upper bound because the API in use does not support\n  querying that. Authoring a POM relying on this difference should be considered\n  a bug.\no Added test cases to maven-core testing parent version range resolution for\n  local and remote parent models."}, {"url": "https://api.github.com/repos/apache/maven/commits/8972072e3200e2ecfe2acb6d0b2dc40b10a6bc31", "message": "[MNG-6110] renamed 'maven-aether-provider' to 'maven-resolver-provider'"}, {"url": "https://api.github.com/repos/apache/maven/commits/a3cdfbbbe9dcbd2737e3b4c1836c402f5d83ed46", "message": "[MNG-5368] UnsupportedOperationException thrown when version range is not correct in dependencyManagement definitions\n\no Updated to log an error message for any caught 'InvalidVersionSpecificationException's."}, {"url": "https://api.github.com/repos/apache/maven/commits/1e2a80eced0f01c182458a2c7e7919634fa632f6", "message": "[MNG-5883] Silence unnecessary legacy local repository warning\n\no Updated to decrease logging level from 'warning' to 'info'."}, {"url": "https://api.github.com/repos/apache/maven/commits/a99a78984c1f20394abf6e76b6167b9e61e6163c", "message": "o Updated to remove errors reported by Checkstyle."}, {"url": "https://api.github.com/repos/apache/maven/commits/c6c5192d4bcb50c1aab6fade53dfb9c2f3d9b7e7", "message": "Merge branch 'MNG-5629'"}, {"url": "https://api.github.com/repos/apache/maven/commits/ca1179ce6ab6ed78fe755e2b97f7e0c01ea91361", "message": "[MNG-5629] ClosedChannelException from DefaultUpdateCheckManager.read\n\no Updated to stop producing 'ClosedChannelException's when reading tracking files.\no Updated to use 'Long.MAX_VALUE' as the size of any locked regions to prevent writing beyond locked regions.\no Updated to support shrinking of tracking files."}], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/148", "title": "[MNG-5600] Dependency management import should support exclusions.", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/147", "title": "[MNG-5527] Dependency management import should support relocations.", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/146", "title": "[MNG-4463] Dependency management import should support version ranges.", "body": "Closes #64 without merging. ITs are pending to be committed.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/145", "title": "[MNG-6112] Central repository in the 4.0.0 super POM should declare u\u2026", "body": "\u2026pdate policy 'never'.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/144", "title": "[MNG-2893] Update the DefaultPluginManager to not use a project depMa\u2026", "body": "\u2026n for controlling it's transitive dependencies", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/143", "title": "[MNG-5359] Declared execution in PluginMgmt gets bound to lifecycle (\u2026", "body": "\u2026regression)", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/142", "title": "[MNG-6114] Profiles from the global settings should be ordered before\u2026", "body": "\u2026 profiles from the user settings.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/141", "title": "[MNG-6164] Collections inconsistently immutable.", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/124", "title": "Make resolver debug log messages for projects and plugins consistent.", "body": "The graph returned by the resolver after resolution is logged at debug level. This pull request only updates those debug log messages to be consistent across project and plugin resolution and to provide as much information as possible to make users aware of what is going on.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/107", "title": " Fixes to various JIRA issues.", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/45974252", "body": "I have done several releases using 'release:prepare release:perform' with a parent version range in use. The release plugin won't write the resolved parent version to the released pom. That's intentional. It shouldn't. The parent version range should be deployed as is. That's the reason the build will fail if a parent version range is in use and a child module uses a version expression or inherits the version from the parent. As soon as a parent version range is in use, <version>${some.expression}</version> and not providing a version element will not be supported in child modules. In addition, the parent version range is checked to contain an upper bound so that it is not possible to e.g. deploy an artifact to central using a parent version range which is not upper-bounded.\n\nITs are working with the patch applied. I will provide a pull-request against 'maven-integration-testing' as soon as I finish some ITs.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45974252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45980581", "body": "From what I can tell, release:prepare-with-pom should work the same way as before. What this patch basically does is to resolve any parent version range and then continue with the highest version found the same way as if that highest version had been specified in the pom.\n\nIf I remember correctly, Aether already provides an extended version range syntax which allows to specify if snapshots are to be included or not. I am not sure about that, however. If it does, Maven already supports that as well.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45980581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45980866", "body": "http://wiki.eclipse.org/Aether/New_and_Noteworthy#Version_Ranges\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45980866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/46546268", "body": "Another option would be to provide support for activations based on some language like:\n\n```\n<activation>\n  <expression>OS IS 'Linux' AND ( PROPERTY 'Some Name' IS 'true' OR JDK IS '1.6 )</expression>\n</activation>\n```\n\nMaybe some scripting language provided by the platform ScriptEngine.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46546268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/46547866", "body": "Could be as simple as:\n\n```\n<activation>\n  <script engine-name=\"\" || extension=\"\" || mime-type=\"\">simple script evaluating to a boolean</script>\n</activation>\n```\n\n'engine-name' translates to javax.script.ScriptEngine.getEngineByName()\n'extension' translates to javax.script.ScriptEngine.getEngineByExtension()\n'mime-type' translates to javax.script.ScriptEngine.getEngineByMimeType()\n\nAll you need to do is populating the corresponding script engine scope with some pre-defined values.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46547866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/67438782", "body": "See http://jira.codehaus.org/browse/MNG-5738\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/67438782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/67459407", "body": "Are you referring to\n\n```\ngit rebase -i upstream/master\n```\n\nthen squash all commits and push that ?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/67459407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/67605975", "body": "Rebased and then pushed.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/67605975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/67621081", "body": "I would need a way to disable workspace resolution mainly for the `site` lifecycle.\n\n```\ncmd> svn checkout .../tags/maven-3.0\ncmd> cd maven-3.0\ncmd> mvn site\n```\n\nThis feeds intermediate build results to the various reports thrown away right after site generation whereas\n\n```\ncmd> mvn --legacy-reactor-resolution site\n```\n\nmakes Maven 3 download the artifacts from `central` or fail, if not finding them. \n\nFeeding the released artifacts to the various reports is the expected behaviour in my opinion as the reports are now generated using the same released artifacts instead of some intermediate build result. The `site` lifecycle does not produce any artifacts. It consumes pre-built artifacts and should really fail, if those artifacts cannot be found. Maven 2 did the right thing here, in my opinion. I would always execute `mvn  --legacy-reactor-resolution site` with this option available.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/67621081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/67622663", "body": "It is re-enabling the following workflow in Maven 3.\n\n```\ncmd> mvn release:prepare\ncmd> mvn release:perform\n```\n\nWait until the artifacts are synced to `central`. Then\n\n```\ncmd> mvn --legacy-reactor-resolution site-deploy\n```\n\nThis should now deploy the site for the released artifacts from `central` and not some intermediate build result.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/67622663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/67625161", "body": "Maybe the proper solution would be to control this behaviour based on an attribute of the lifecycle ? So a lifecycle can be flagged as producing artifacts or as consuming artifacts. Lifecycles producing artifacts behave like Maven 3. Lifecycles consuming artifacts behave like Maven 2.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/67625161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/67626029", "body": "Feeding the tagged sources to the reports is not an issue. Feeding intermediate build results is. That's like the tagged sources changing with every build. Everything in `target/classes` is not identical to what is deployed to `central` . Different compiler version, different Maven version, shading, etc. \n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/67626029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/75794059", "body": "Regarding the recent discussion about releasing 3.2.6 as 3.3.0: Could this be part of 3.3.0, please ?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/75794059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/75848081", "body": "I am still convinced that it is a good idea to allow Maven 3 'mvn site-deploy' to work the same way as Maven 2. What's the issue with that ?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/75848081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/75990941", "body": "There are situations the behaviour is not wrong, in my opinion. Resolution for non project `<packaging>` related lifecycles, for example. Maven could detect this automically based on various criteria: not the default lifecycle, not project packaging related, attribute of a lifecycle, not executed at an even hour, etc but it does not. No issue. The command line option lets you choose the needed behaviour yourself without being forced (issue!) by Maven to anything. I can live with this not getting committed. That's not the point. For me that standalone site building tool would exactly be `mvn --legacy-reactor-resolution site`.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/75990941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/76081933", "body": "Could not be more confusing.\n\nApache Maven is a software project management and comprehension tool. Based on the concept of a project object model (POM), Maven can manage a project's build, reporting and documentation from a central piece of information.\n\nNo more 'reporting and documentation' in the future makes the 'from a central piece of information' meaningless.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/76081933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/76122905", "body": "```\nparent\n  module1\n  module2\n```\n\nWith Maven 3 I need to\n\n```\ncmd>cd parent && mvn site-deploy -N && cd module1 && mvn site-deploy && cd ../module2 && mvn site-deploy\n```\n\nto get the same behaviour as executing\n\n```\ncmd>cd parent && mvn site-deploy\n```\n\nwith Maven 2. So in Maven 3 I would like to\n\n```\ncmd>cd parent && mvn --legacy-reactor-resolution site-deploy\n```\n\nPretty much the same way the following command line flag can be used to make Maven 3 behave the same way as Maven 2.\n\n```\n -llr,--legacy-local-repository         Use Maven 2 Legacy Local\n                                        Repository behaviour, ie no use of\n                                        _remote.repositories. Can also be\n                                        activated by using\n                                        -Dmaven.legacyLocalRepo=true\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/76122905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/76933957", "body": "What's the state of the current head as of today ? I just wanted to test the cobertura plugin but cannot build the site with Maven 3.2.6-SNAPSHOT due to the following exception. That's happening with a released project known to work. So `mvn site -e` with Maven 3.2.5 succeeds whereas 3.2.6-SNAPSHOT fails.\n\n```\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-site-plugin:3.4:site (default-site) on project jomc-parent: Execution default-site of goal org.apache.maven.plugins:maven-site-plugin:3.4:site failed: A required class was missing while executing org.apache.maven.plugins:maven-site-plugin:3.4:site: org/slf4j/spi/LocationAwareLogger\n```\n\n```\nCaused by: java.lang.NoClassDefFoundError: org/slf4j/spi/LocationAwareLogger\n        at org.apache.commons.logging.impl.SLF4JLogFactory.getInstance(SLF4JLogFactory.java:157)\n        at org.apache.commons.logging.LogFactory.getLog(LogFactory.java:289)\n        at org.apache.commons.digester.Digester.<init>(Digester.java:308)\n        at org.apache.velocity.tools.config.XmlFactoryConfiguration.read(XmlFactoryConfiguration.java:117)\n        at org.apache.velocity.tools.config.FileFactoryConfiguration.read(FileFactoryConfiguration.java:140)\n        at org.apache.velocity.tools.config.FileFactoryConfiguration.read(FileFactoryConfiguration.java:116)\n        at org.apache.velocity.tools.config.FileFactoryConfiguration.read(FileFactoryConfiguration.java:91)\n        at org.apache.velocity.tools.config.FileFactoryConfiguration.read(FileFactoryConfiguration.java:69)\n        at org.apache.velocity.tools.config.FileFactoryConfiguration.read(FileFactoryConfiguration.java:59)\n        at org.apache.velocity.tools.config.ConfigurationUtils.getDefaultTools(ConfigurationUtils.java:79)\n        at org.apache.velocity.tools.config.ConfigurationUtils.getAutoLoaded(ConfigurationUtils.java:176)\n        at org.apache.velocity.tools.ToolManager.autoConfigure(ToolManager.java:74)\n        at org.apache.velocity.tools.ToolManager.<init>(ToolManager.java:68)\n        at org.apache.velocity.tools.ToolManager.<init>(ToolManager.java:59)\n        at org.apache.maven.doxia.siterenderer.DefaultSiteRenderer.createVelocityContext(DefaultSiteRenderer.java:427)\n        at org.apache.maven.doxia.siterenderer.DefaultSiteRenderer.generateDocument(DefaultSiteRenderer.java:565)\n        at org.apache.maven.doxia.siterenderer.DefaultSiteRenderer.renderDocument(DefaultSiteRenderer.java:422)\n        at org.apache.maven.doxia.siterenderer.DoxiaDocumentRenderer.renderDocument(DoxiaDocumentRenderer.java:51)\n        at org.apache.maven.doxia.siterenderer.DefaultSiteRenderer.renderModule(DefaultSiteRenderer.java:311)\n        at org.apache.maven.doxia.siterenderer.DefaultSiteRenderer.render(DefaultSiteRenderer.java:129)\n        at org.apache.maven.plugins.site.render.SiteMojo.renderDoxiaDocuments(SiteMojo.java:261)\n        at org.apache.maven.plugins.site.render.SiteMojo.renderLocale(SiteMojo.java:172)\n        at org.apache.maven.plugins.site.render.SiteMojo.execute(SiteMojo.java:141)\n        at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:132)\n        ... 21 more\nCaused by: java.lang.ClassNotFoundException: org.slf4j.spi.LocationAwareLogger\n        at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:50)\n        at org.codehaus.plexus.classworlds.realm.ClassRealm.unsynchronizedLoadClass(ClassRealm.java:271)\n        at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:247)\n        at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:239)\n        ... 45 more\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/76933957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/77428933", "body": "I have no experience with the cobertura plugin. I just added\n\n```\n<reportPlugin>\n  <groupId>org.codehaus.mojo</groupId>\n  <artifactId>cobertura-maven-plugin</artifactId>\n  <version>2.7</version>\n</reportPlugin>\n```\n\nto the configuration of the site plugin of a working project. Executing `mvn site -e` with Maven 3.2.5, site building succeeds. Using Maven 3.3.0-SNAPSHOT with the latest changes to head, the following exception is thrown.\n\n```\n[ERROR] Exception in thread \"main\" java.lang.NoClassDefFoundError: org/slf4j/LoggerFactory\n        at net.sourceforge.cobertura.instrument.InstrumentMain$LoggerWrapper.<init>(InstrumentMain.java:165)\n        at net.sourceforge.cobertura.instrument.InstrumentMain$LoggerWrapper.<init>(InstrumentMain.java:164)\n        at net.sourceforge.cobertura.instrument.InstrumentMain.<clinit>(InstrumentMain.java:66)\nCaused by: java.lang.ClassNotFoundException: org.slf4j.LoggerFactory\n        at java.net.URLClassLoader$1.run(URLClassLoader.java:366)\n        at java.net.URLClassLoader$1.run(URLClassLoader.java:355)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at java.net.URLClassLoader.findClass(URLClassLoader.java:354)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:425)\n        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:358)\n        ... 3 more\n```\n\nThat exception is not thrown using Maven 3.2.5. There still seems to be a class loading issue.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/77428933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/77467001", "body": "That exception is thrown with a recent head.\nSee https://github.com/ChristianSchulte/maven\n\nExample POM. Works with 3.2.5 but not with 3.3.0-SNAPSHOT.\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>localhost</groupId>\n  <artifactId>mng-5779</artifactId>\n  <version>1.0-SNAPSHOT</version>\n  <packaging>jar</packaging>\n  <build>\n    <pluginManagement>\n      <plugins>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-site-plugin</artifactId>\n          <version>3.4</version>\n          <configuration>\n            <reportPlugins>\n              <reportPlugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>cobertura-maven-plugin</artifactId>\n                <version>2.7</version>\n              </reportPlugin>\n            </reportPlugins>\n          </configuration>\n        </plugin>\n      </plugins>\n    </pluginManagement>\n  </build>\n</project>\n```\n\n```\n$ find .\n.\n./pom.xml\n./src\n./src/main\n./src/main/java\n./src/main/java/App.java\n```\n\n```\n$ cat src/main/java/App.java\n\npublic class App\n{\n\n}\n```\n\n```\n[INFO] --- cobertura-maven-plugin:2.7:instrument @ mng-5779 ---\n[ERROR] Exception in thread \"main\" java.lang.NoClassDefFoundError: org/slf4j/LoggerFactory\n        at net.sourceforge.cobertura.instrument.InstrumentMain$LoggerWrapper.<init>(InstrumentMain.java:165)\n        at net.sourceforge.cobertura.instrument.InstrumentMain$LoggerWrapper.<init>(InstrumentMain.java:164)\n        at net.sourceforge.cobertura.instrument.InstrumentMain.<clinit>(InstrumentMain.java:66)\nCaused by: java.lang.ClassNotFoundException: org.slf4j.LoggerFactory\n        at java.net.URLClassLoader$1.run(URLClassLoader.java:366)\n        at java.net.URLClassLoader$1.run(URLClassLoader.java:355)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at java.net.URLClassLoader.findClass(URLClassLoader.java:354)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:425)\n        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:358)\n        ... 3 more\n```\n\n```\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-site-plugin:3.4:site (default-site) on project mng-5779: failed to get report for org.codehaus.mojo:cobertura-maven-plugin: Failed to execute goal org.codehaus.mojo:cobertura-maven-plugin:2.7:instrument (null) on project mng-5779: Unable to instrument project. -> [Help 1]\norg.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-site-plugin:3.4:site (default-site) on project mng-5779: failed to get report for org.codehaus.mojo:cobertura-maven-plugin\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:216)\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\n        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)\n        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)\n        at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)\n        at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)\n        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:312)\n        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)\n        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)\n        at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)\n        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:276)\n        at org.apache.maven.cli.MavenCli.main(MavenCli.java:186)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:606)\n        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\n        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\n        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\n        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\nCaused by: org.apache.maven.plugin.MojoExecutionException: failed to get report for org.codehaus.mojo:cobertura-maven-plugin\n        at org.apache.maven.reporting.exec.DefaultMavenReportExecutor.buildMavenReports(DefaultMavenReportExecutor.java:156)\n        at org.apache.maven.plugins.site.render.AbstractSiteRenderingMojo.getReports(AbstractSiteRenderingMojo.java:239)\n        at org.apache.maven.plugins.site.render.SiteMojo.execute(SiteMojo.java:124)\n        at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\n        ... 20 more\nCaused by: org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.codehaus.mojo:cobertura-maven-plugin:2.7:instrument (null) on project mng-5779: Unable to instrument project.\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:216)\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\n        at org.apache.maven.lifecycle.internal.MojoExecutor.executeForkedExecutions(MojoExecutor.java:364)\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeForkedExecutions(DefaultLifecycleExecutor.java:173)\n        at org.apache.maven.reporting.exec.DefaultMavenReportExecutor.buildReportPlugin(DefaultMavenReportExecutor.java:309)\n        at org.apache.maven.reporting.exec.DefaultMavenReportExecutor.buildMavenReports(DefaultMavenReportExecutor.java:151)\n        ... 24 more\nCaused by: org.apache.maven.plugin.MojoExecutionException: Unable to instrument project.\n        at org.codehaus.mojo.cobertura.tasks.InstrumentTask.execute(InstrumentTask.java:153)\n        at org.codehaus.mojo.cobertura.CoberturaInstrumentMojo.execute(CoberturaInstrumentMojo.java:166)\n        at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\n        ... 30 more\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/77467001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/78226219", "body": "I am really no fan of adding just another workaround.\n\n@Jason: Are you suggesting to split site rendering from report data generation ? So the build lifecycle produces report data attached to the project picked up during site rendering ? Cobertura instrumentation takes place during the build lifecycle and site rendering picks up the data generated there without compiling and running any tests any more, for example ? Not talking about picking up data from the build output directory here but resolving that data based on e.g. classifiers.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/78226219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/78281257", "body": "@jvanzyl: You would not want the `test-jar` goal to package compiled test classes instrumented by some reporting tool, would you ? So the forking logic needs to change in a way that a forked lifecycle will run isolated (e.g. with its own output directory). A rather incompatible change in the core requiring new reporting plugins. Something to be done in the next Maven version introducing a new POM version.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/78281257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/78290027", "body": "I totally agree with this. Do not cripple Maven to support bad ideas or concepts. \"Supported by Maven\" as an indicator for something. Not supported by Maven so not worth integrating means Maven must be ideal.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/78290027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "atanasenko": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/be223808939d75152d7157db33d45f230114555e", "message": "Add a ProjectArtifactsCache similar to PluginArtifactsCache\n\nSigned-off-by: Jason van Zyl <jason@vanzyl.ca>\n\ncloses #82"}, {"url": "https://api.github.com/repos/apache/maven/commits/9f7971dadbec8882b4c119345494b620d3a1f897", "message": "MNG-5805: Fix NPE in LifecyclePhase#toString()\n\nSigned-off-by: Jason van Zyl <jason@tesla.io>\n\ncloses #62"}, {"url": "https://api.github.com/repos/apache/maven/commits/3677220f6e499e97f2b47b0593bc394b689d14d6", "message": "MNG-5805: Restore binary compatibility\n\nSigned-off-by: Jason van Zyl <jason@tesla.io>"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/96817019", "body": "It looks like you applied only the pom file change of sisu version.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/96817019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/127380233", "body": "Hi, I took a look at a couple of neighboring tests and was convinced all of them are junit3\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/127380233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/127386965", "body": "I've updated to junit4, looks more modern now :)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/127386965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "LuboVarga": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/6a93bbea23e362c9cea7d710a37556258c2dbd47", "message": "Improve Javadoc of ComparableVersion#main()\n\nThis closes #108"}, {"url": "https://api.github.com/repos/apache/maven/commits/10a18cfee7a981a41c1f571ef3c60138d40e839e", "message": "Added some javadoc\n\nAdded javadoc help for making easier to compare two versions in command line."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stefaneicher": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/4c6d3a3462783507921d1a0100e3fa22ef8a98e4", "message": "Minor cleanup in MavenCli.java\n\nThere is some unnecessary code in the MavenCli.java from line #1465 to #1474.\nThe functionality has been moved to line #1215.\n\nSigned-off-by: Karl Heinz Marbaise <khmarbaise@apache.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cboehme": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/114ef6c5a2802e8758e466af92b70f51fd7a2929", "message": "[MNG-6173] MavenSession.getAllProjects() should return all projects in the reactor\n\nThis commit removes the initialization of the MavenSession object from the\nDefaultGraphBuilder. The GraphBuilder implementation should only build the\ngraph and should not touch the MavenSession object passed into it.\n\nTo allow complete initialization of the MavenSession the ProjectDependencyGraph\ninterface got enhanced so that GraphBuilder implementations can communicate all\ncollected projects in addition to the processed list of projects.\n\nThis closes #105"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "august782": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/e6217a455547e5b3bcac310be18daf2a333cd5d1", "message": "Fixing misspellings in test names"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "robertpatrick": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/f8ab2a650f32d5d87126d341d9bbfccbf99fd0ca", "message": "[MNG-5889] .mvn directory should be picked when using --file"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alexhenrie": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/8d91726f7872f4462d9fa085ef5b6f32bfd0a2e1", "message": "[MNG-5934] String handling issues identified by PMD"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aheritier": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/23ceca36e7c980cc8d8bdc16d64ede98189079aa", "message": "[MNG-5961] Fix the SLF4J logger factory implementation used for LOG4J2"}, {"url": "https://api.github.com/repos/apache/maven/commits/dfed29cc664f0e8f2f06278ff70d3037caf147f0", "message": "MNG-5787,MNG-5842,MNG-5845: Add missing org.slf4j.helpers.* export which is provided slf4j-api\n\nIt broke various plugins with missing classes ( org.slf4j.helpers.MarkerIgnoringBase, org.slf4j.helpers.MessageFormatter ) like:\n* net.java.truelicense:truelicense-maven-plugin (2.3.4)\n* com.github.eirslett:frontend-maven-plugin (0.0.20, 0.0.22)\n* maven-antrun-plugin with the cobertura ant task\n* org.mortbay.jetty:jetty-maven-plugin (7.6.16.v20140903)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mcculls": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/bd57ec9666531fa2e32b8fd1aa68b85ac86f7790", "message": "[MNG-5981] upgrade Sisu to 0.3.3 to pick up lifecycle fix\n\nThis closes #78"}, {"url": "https://api.github.com/repos/apache/maven/commits/6b31c4a556f51cd1c2064fe773550c0acf14d307", "message": "[MNG-5958] restore binary compatibility of Lifecycle.setPhases\n\nWhile MNG-5805 restored binary compatibility of Lifecycle.getPhases\nit didn't do the same for Lifecycle.setPhases. This breaks plugins\nlike flexmojos-maven-plugin which have their own lifecycle mapping\nimplementations.\n\nThis closes #77"}, {"url": "https://api.github.com/repos/apache/maven/commits/0c7c8eb3a8c2b98fb27363d7019ebfc4c6499904", "message": "Upgrade to Eclipse/Sisu 0.3.2\n\nSigned-off-by: Jason van Zyl <jason@tesla.io>"}, {"url": "https://api.github.com/repos/apache/maven/commits/545c6e2685ca238cde4944f8179a3f3fbffa07ae", "message": "Switch to official Guice 4.0\n\nSigned-off-by: Jason van Zyl <jason@tesla.io>\n\ncloses #45"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/14472735", "body": "Cheers\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/14472735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/14842355", "body": "Note that https://jira.codehaus.org/browse/MNG-5446 / https://github.com/apache/maven-integration-testing/pull/3 is also required to clean up an IT that depends on some broken behaviour in the old Data configurator that's now fixed.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/14842355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/14861860", "body": "Verified that this patch has been applied, thanks.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/14861860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/15076862", "body": "Applied by @jvanzyl in https://git-wip-us.apache.org/repos/asf?p=maven.git;a=commit;h=8b97b0a2dae4ab8b8b5cc614ca58b329af2ce6ff - thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/15076862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/15133729", "body": "Merged by @jvanzyl in https://git-wip-us.apache.org/repos/asf?p=maven.git;a=commit;h=c5f161a8d6855222be1bc3cb167d46bb18aaf167\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/15133729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/15349359", "body": "Merged by @jvanzyl in https://git-wip-us.apache.org/repos/asf?p=maven.git;a=commit;h=34a8c6ce3b54ff28cdf682df2699b2849c717182\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/15349359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45094640", "body": "That looks like a documentation issue - I believe the line from the dependency plugin doc should read:\n\n```\n-Dartifact=groupId:artifactId:version[:type][:classifier]\n```\n\nBecause packaging is a property of the pom.xml, and is different from artifact type.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45094640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/77430685", "body": "@ChristianSchulte I believe that was recently fixed in master: https://github.com/apache/maven/commit/57a6196422873eaf2f00a282b33894a74dcfd19c\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/77430685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/97376230", "body": "The only difference remaining between this and sisu-guice is support for `@Inject`ion of SLF4J loggers, but I don't believe that's used much, if at all. Personally these days I prefer to create loggers using the static factory method.\n\nPerformance should be comparable, although I have yet to run a detailed comparison - I'd be interested in feedback from people using large or complicated builds. The main change between sisu-guice 3.2.5 (which Maven currently uses) and Guice 4.0 was reworking singletons to introduce lock cycle checks.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/97376230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/97418554", "body": "To be absolutely clear:\n- injection of SLF4J loggers using `@Inject` is not supported in the official Guice library\n- injection of SLF4J loggers using `@Requirement` is supported by Sisu's Plexus shim\n- injection of j.u.l loggers using `@Inject` is supported in the official Guice library\n\nAdding support for injection of SLF4J loggers is possible outside of Guice, but it requires you to use a custom annotation rather than `@Inject`: https://github.com/google/guice/wiki/CustomInjections\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/97418554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/maven/comments/2817036", "body": "Was this commit meant to bring in Eclipse/Aether as well? This breaks the build as the code still depends on org.sonatype.aether.*\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/2817036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "hwellmann": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/4d6c9292c433626fa0b9a1cf711d4d0c366e7f33", "message": "[MNG-6110] Upgrade Aether to Maven Resolver 1.0.3"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "josephw": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/135102022763eaa62fa1d0125adab7ff207ef2f4", "message": "[MNG-5852] mvn shell script invokes /bin/sh but requires Bash functions\n\n'local' is not POSIX, but supported by most shells. However, it's not\nsupported by Solaris's /bin/sh, so use a subshell instead.\n\nThis closes #50."}, {"url": "https://api.github.com/repos/apache/maven/commits/1d9708a954e2d764f6ba933c4e9ba117afa9b4c4", "message": "[MNG-5829] mvn shell script fails with syntax error on Solaris 10\n\nUse backticks instead of $(..) for the scripting added in MNG-5767.\nSolaris's /bin/sh isn't POSIX-compliant enough to recognise the first\nform.\n\nThis closes #50."}, {"url": "https://api.github.com/repos/apache/maven/commits/5cbc294e72c79955fb93c6434e9ac8ae7d9206cc", "message": "[MNG-5877] maven-aether-provider does not always generate snapshot versions using Gregorian calendar year\n\nSnapshot versioning should use the Gregorian calendar for consistency\nacross systems. Apply the fix reported by Anders Forsell to make that\nexplicit, and include a somewhat overengineered test to confirm that\nit's working.\n\nSigned-off-by: Michael Osipov <michaelo@apache.org>"}, {"url": "https://api.github.com/repos/apache/maven/commits/a839e55e7e5e057be2dafbd9eb1ebfb82d7598ed", "message": "MNG-5297: Mark <prerequisites> as deprecated for compile-time enforcement.\n\nMNG-4840 indicates that the Enforcer plugin should be\npreferred to <prerequisites> for compile-time Maven version enforcement.\nIndicate that in the documentation, making clear that it's still\nsupported for runtime requirements for a plugin.\n\nSigned-off-by: Jason van Zyl <jason@tesla.io>\n\ncloses #51"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/110022166", "body": "I've pushed a further change to switch $(..) to backticks. However, perhaps [this idiom](https://bugs.freedesktop.org/show_bug.cgi?id=5278) would be a better way to ensure a POSIX shell on Solaris:\n\n```\n# Do the Solaris Dance:\nif [ ! -d ~root ]  ; then\n    exec /usr/xpg4/bin/sh $0 \"$@\" \n```\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/110022166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/112843851", "body": "@kwin , @mosabua: thanks. I've rewritten it to reflect that distinction, that it's only deprecated for compile-time enforcement.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/112843851/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/138286028", "body": "@kwin, @mosabua - is this current form acceptable as a fix?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/138286028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/138297080", "body": "@jvanzyl although the original change was unconditional deprecation, I changed it after comments so the current language in the patch is intended to reflect that distinction:\n\n> For a plugin project, the minimum version of Maven required to use\n> the resulting plugin.\n> For specifying the minimum version of Maven required to build a project, this element is <b>deprecated</b>.\n\nMy intention here is to make clear that it's deprecated for _some_ purposes.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/138297080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/138297741", "body": "@birkedal, does this change look okay after the switch to backticks? Or, if you're a Solaris user, does that other idiom seem better?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/138297741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/138302328", "body": "Even if it wasn't the intended use, way back in Maven 2:\n\n```\n<prerequisites>\n  <maven>4</maven>\n</prerequisites>\n```\n\nwould give:\n\n```\n$ mvn2 validate\n[INFO] Scanning for projects...\n[INFO] ------------------------------------------------------------------------\n[ERROR] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Unable to build project '/tmp/pom.xml; it requires Maven version 4\n```\n\nThe current language in the documentation is still:\n\n```\nThe minimum version of Maven required to build the project.\n```\n\nso I think this PR clarifies the current intent.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/138302328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/143918594", "body": "I've verified the behaviour. To reproduce:\n\n```\nMAVEN_OPTS=\"-Duser.country=th -Duser.language=th\" mvn deploy\n```\n\nIt doesn't fail, but the snapshot dates are inconsistent with those published from other locales.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/143918594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/143988014", "body": "Rebased onto 2a9a07b0a and re-pushed.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/143988014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "oberlies": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/46c1581474ed3b8110dbc7275172b92056b6e5dd", "message": "[MNG-5823] mvnDebug doesn't work with M2_HOME with spaces - missing quotes"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ArloL": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/4337d18af65df8d3221bdd1e393f13c5f4db9054", "message": "[MNG-6163] Introduce CLASSWORLDS_JAR in shell startup scripts\n\nThis commit was previously for MNG-5538 and closes #27."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nemo9cby": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/a2358ba7bb9b5b8ccb4ca2b6ea66b637b88d6c09", "message": "[MNG-6081] Log refactoring - Method Invocation Replaced By Variable"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "keith-turner": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/7f0e1b753868aa3baa146b34e5a1f9e4dc679eac", "message": "[MNG-5891] Log file command line option description contains an extra word\n\nSigned-off-by: Michael Osipov <michaelo@apache.org>"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/141991456", "body": "[MNG-5891](https://issues.apache.org/jira/browse/MNG-5891)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/141991456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "krosenvold": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/8169fe2902dea1193ded1e23c2eb8dd8f2064972", "message": "Upgraded to pelxus-components 1.6 that uses asm 5.x"}, {"url": "https://api.github.com/repos/apache/maven/commits/cfd1fbe6131eb9f03f0af0f5942863bc5ef4f2aa", "message": "More java7. Bye bye 2006"}, {"url": "https://api.github.com/repos/apache/maven/commits/7badeb5b5bdfb48dd3c9533d224418d0648b76ce", "message": "Upgraded to java7 language features"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/113734189", "body": "Unfortunately I just merged the gigantic migrate everything to jdk7 branch, which made this pull request stale. Can you re-align it, and I will merge it ?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/113734189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/113769042", "body": "There were some minor adjustments I did to your stuff, but nothing significant :) Thanks a lot !\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/113769042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "skitt": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/f0cc5e8af91fc6a812861fbb0494aeed88f09314", "message": "Support directories with spaces in mvn\n\nfind_maven_basedir() doesn't handle a current working directory containing spaces; this patch fixes this behaviour."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/137209331", "body": "I've filed https://issues.apache.org/jira/browse/MNG-5884.\nI don't have a Windows installation to test it, but I don't see any particular whitespace handling for MAVEN_PROJECTBASEDIR in mvn.cmd so it might well be affected too.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/137209331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/138080313", "body": "This has been merged, thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/138080313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "tssp": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/193778ec0e780ebf89138f5104ead881c0e3899f", "message": "[MNG-5816] Empy maven.config cause Maven to exit with failure\n\nAvoid adding non empty configuration argument that causes exception.\n\nSigned-off-by: Karl Heinz Marbaise <khmarbaise@apache.org>"}, {"url": "https://api.github.com/repos/apache/maven/commits/ad905af669c7a8aea22151b56e14c941efdb55aa", "message": "[MNG-5812] Project base dir not fully working in Cygwin\n\nConverted project base dir from Cygwin path to Windows path before\nexecuting Maven."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/114745829", "body": "Thank you very much for integrating it!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/114745829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/123809124", "body": "You're welcome.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/123809124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "agudian": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/f104ef88507bb8b03c9cfe183c9cd6791305e4f7", "message": "[MNG-5813] pass debug-opts from mvnDebug to mvn script in the additional env-variable MAVEN_DEBUG_OPTS to not interfere with user-specified MAVEN_OPTS (e.g. when read from .mavenrc).\n\nFixed as suggested by Robert Patrick on the ML"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/114223364", "body": "Sure, I'll take care of it. :wink:\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/114223364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/114251594", "body": "Works as it should, I'd say... :grinning:\n\n@tssp, I have rebased your commit, so this PR won't close automatically. Would you please close it?\n\nAnd thanks for the patch!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/114251594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/121962243", "body": "Hi,\n\nThanks for the patch! \n\nAre the windows-scripts also affected by the bug and could use a fix?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/121962243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "sugartxy": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/7f206ef1cc11585094cb045db4ec35fcbb1715a1", "message": "try-with-resources\n\nReformatted to code style by me. This fixes #53"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/113508412", "body": "@ifedorenko @jvanzyl thx. I will rewrite it using try-with-resources ASAP. \n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/113508412/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/113709155", "body": "@jvanzyl  Please let me know if you want something else to be done on this pull request before you could merge it.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/113709155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/113748452", "body": "@krosenvold sorry for the mistake I've made. Does it work now?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/113748452/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/113768295", "body": "Oops! I misunderstood. Thank u! :) \n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/113768295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "formap": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/a0babcecaec7dc16c3eca2d8e82cbf3977bc7564", "message": "Fixed typo in error output\n\nSigned-off-by: Karl-Heinz Marbaise <khmarbaise@apache.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lexandro": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/49a3e55208fdfb2c163c729b36eb61380a810ca7", "message": "Fixed typo 'propery' to 'property'"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/99635517", "body": ";)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/99635517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "dconneely": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/140", "title": "Add org.slf4j.event to exported packages", "body": "maven-core should export org.slf4j.event.* from slf4j-api 1.7.15 or later.\r\nFor example, this package is where the `Level` class is located.\r\n\r\nOtherwise, issues similar to MNG-5842 and MNG-5845 will arise with plugins that use Slf4j themselves (or more likely plugins that use libraries that use Slf4j).\r\n\r\nDiscovered while working on in-house Maven plugin that failed with `java.lang.NoClassDefFoundError: org/slf4j/event/Level`.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "msimacek": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/134", "title": "[MNG-6294] Convert MavenPluginValidator into a plexus component", "body": "Patch for https://issues.apache.org/jira/browse/MNG-6294", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jtnord": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/133", "title": "[MNG-5600] Dependency management import should support exclusions.", "body": "https://github.com/ChristianSchulte/maven/commit/679a34b86e3d69b7a832481c7f21e5eab367cd11 cherry picked into master\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-5600", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ankon": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/132", "title": "Fix the Javadoc to use a proper @link tag when pointing to ProjectBuilder", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MichaelWarnecke": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/131", "title": "[MNG-6213] Validate scope in dependencyManagement", "body": "This is a patch for MNG-6213: https://issues.apache.org/jira/browse/MNG-6213", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "etzelc": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/128", "title": "[MNG-6256] Surround variables in echo command with double quotes", "body": "This is a patch for issue MNG-6256. https://issues.apache.org/jira/browse/MNG-6256", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "grkvlt": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/127", "title": "[MNG-6255] Fix concat_lines in mvn to deal with CRLF", "body": "Change `tr` command to deal with CRLF line endings properly.\r\n\r\nThis was triggered by running the `mvn` shell script on a Windows machine (with the Git bash shell and utilities) against a GitHub repository generated on a Mac, which contained a `.mvn/jvm.config` file with CRLF line endings.\r\n\r\nSee https://issues.apache.org/jira/browse/MNG-6255 for further details.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Sharabaddin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/126", "title": "Update code style quikstart-arhetype", "body": "correct code style(most standart)\r\nand change correct history \"Hello, World!\"", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dbmeneses": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/125", "title": "[MNG-5965] Parallel build multiplies work if multiple goals are given", "body": "\r\n[mng-5965.zip](https://github.com/apache/maven/files/1124059/mng-5965.zip)\r\nThis p/r should also fix MNG-5705.\r\n\r\n### Problem\r\nWhen multiple tasks are given so that they are grouped in different task segments, the MultiThreadedBuilder fails. \r\nThe reason is that it creates project segments, which is a set of unique pairs of (module, task).\r\nIt then handles each task separately, and it will schedules the build of the task for **all** root module in those pairs, instead of scheduling only the root modules which are associated with that particular task.\r\n\r\n### Example\r\nFor example, given the project with the following hierarchy of modules:\r\n```\r\nroot\r\n-- module1\r\n```\r\n\r\nIf we run `mvn task1 task2`, being task2 an aggregating task, we get the following project segments:\r\n   (task1, root), (task1, module1), (task2, root).\r\n\r\nThe MultiThreadedBuilder will first handle task1, and will schedule the build of: (task1, root), (task1, root).\r\nEach of these builds will then recursively build its children, meaning that _task1 will be executed twice for every module in the project_.\r\n\r\n### Fix\r\nThis fix changes the builder so that it considers the project segments of each task segment separately, by creating a ConcurrencyDependencyGraph for each task segment.\r\n\r\n\r\n### Related\r\nI believe that MNG-5705 is a consequence of the same problem, because the builder will not count correctly the number of projects that are built because of the shared ConcurrencyDependencyGraph, resulting in a NPE.\r\n\r\n### Test\r\nI opened a separate P/R to add an IT for this issue: https://github.com/apache/maven-integration-testing/pull/22\r\n\r\nIt uses a very simple multi module project, which is attached here too.\r\n\r\nTo reproduce:\r\n```\r\nmvn clean install:help install -T10\r\n[INFO] Scanning for projects...\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Reactor Build Order:\r\n[INFO] \r\n[INFO] module-1\r\n[INFO] module-2\r\n[INFO] base-project\r\n[INFO] \r\n[INFO] Using the MultiThreadedBuilder implementation with a thread count of 10\r\n[INFO] \r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building module-2 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building base-project 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-2 ---\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building module-1 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ base-project ---\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-1 ---\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building base-project 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ base-project ---\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building module-1 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-1 ---\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building module-2 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-2 ---\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building base-project 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ base-project ---\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Reactor Summary:\r\n[INFO] \r\n[INFO] module-1 ........................................... SUCCESS [  0.069 s]\r\n[INFO] module-2 ........................................... SUCCESS [  0.069 s]\r\n[INFO] base-project ....................................... SUCCESS [  0.001 s]\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD FAILURE\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time: 0.197 s (Wall Clock)\r\n[INFO] Finished at: 2017-07-05T11:06:42+02:00\r\n[INFO] Final Memory: 8M/240M\r\n[INFO] ------------------------------------------------------------------------\r\n[ERROR] NullPointerException\r\n[ERROR] \r\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\r\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\r\n```\r\n\r\nNote the clean goal being executed twice for each module, and the NPE (as described by MNG-5705).\r\n\r\nExpected result, after the fix:\r\n```\r\n/tmp/apache-maven-3.5.1-SNAPSHOT/bin/mvn clean install:help install -T10\r\n[INFO] Error stacktraces are turned on.\r\n[INFO] Scanning for projects...\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Reactor Build Order:\r\n[INFO] \r\n[INFO] module-1\r\n[INFO] module-2\r\n[INFO] base-project\r\n[INFO] \r\n[INFO] Using the MultiThreadedBuilder implementation with a thread count of 10\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building module-2 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-2 ---\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building base-project 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building module-1 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-1 ---\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ base-project ---\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building base-project 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-install-plugin:2.4:help (default-cli) @ base-project ---\r\n[INFO] Maven Install Plugin 2.4\r\n  Copies the project artifacts to the user's local repository.\r\n\r\nThis plugin has 3 goals:\r\n\r\ninstall:help\r\n  Display help information on maven-install-plugin.\r\n  Call mvn install:help -Ddetail=true -Dgoal=<goal-name> to display parameter\r\n  details.\r\n\r\ninstall:install\r\n  Installs the project's main artifact, and any other artifacts attached by\r\n  other plugins in the lifecycle, to the local repository.\r\n\r\ninstall:install-file\r\n  Installs a file in the local repository.\r\n```\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ebourg": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/118", "title": "Upgrade SLF4J to 1.7.25", "body": "The changes to SLF4J required to support maven-slf4j-provider have been [released ](https://jira.qos.ch/browse/SLF4J-394) in the version 1.7.25. If I'm not mistaken it should be possible to remove the patching tweak now.", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "eis": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/117", "title": "[MNG-5756] Java home output in mvn -v is misleading", "body": "Renamed previous printing of JRE to \"JRE used\" and provided\r\nseparate mechanism to actually tell value of JAVA_HOME", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "marcelosv": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/115", "title": "Change out JAVA_HOME. Add JRE used. JRE used print /jre and JAVA_HOME\u2026", "body": "I read the discursion of issue MNG-5756 and I change code out for JAVA_HOME and JRE.\r\nNow, print two information to JAVA.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kevin-canadian": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/112", "title": "Fix snapshot regular expression", "body": "The snapshot regular expression should only match an explicit period.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jsoref": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/103", "title": "spelling: excident", "body": "split from #100 \r\n\r\nThis is for consistency. I know it's a public API. But, I don't know if this is the word you want. If it is, we can add the @Deprecated annotation. If it isn't, then we should figure out the right word and fix the others too.", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/pulls/102", "title": "spelling: vertices", "body": "split from #100 \r\n\r\nI think this is a bug fix. I can't figure out how it could work otherwise.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/97253624", "body": "This would be an api change. I'm not even sure if this is a correct word.\r\nI'm fairly confident that you are using two spellings for the same concept.", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/97253624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/97253779", "body": "This is probably an api change.\r\nI can provide deprecation markers and/or split this into a distinct PR (applies for all similar items)", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/97253779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/97253878", "body": "this change stands alone, I can't find anything else that uses this spelling, but lots of things use the corrected spelling....", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/97253878/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/97253891", "body": "This would be an api change", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/97253891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/97253963", "body": "I'm hoping this isn't really a public api, but if it is...", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/97253963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/97254243", "body": "I guess this is an api", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/97254243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "trajano": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/97", "title": ".travis and SonarQube.com support", "body": "This PR provides two commits, the first one adds Travis build support.  https://travis-ci.org/trajano/maven the README is coded to point to apache/maven though.\r\n\r\nThe second adds SonarQube support.  For the SonarQube support to work, the token needs to change to something that is owned by apache/maven repository rather than something associated with my ID.\r\n\r\nhttps://sonarqube.com/dashboard/index?id=org.apache.maven%3Amaven\r\n\r\n@apache Please create tokens for GITHUB and SonarQube, I had documented the instructions here https://www.trajano.net/2016/11/integrating-travis-sonarqube/\r\n\r\n<pre>\r\ntravis encrypt SONAR_TOKEN=[token from sonarqube.com]\r\ntravis encrypt SONAR_GITHUB_TOKEN=[token from github.com]\r\n</pre>\r\n\r\nThis will also enable pull request analyisis in the future as well.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/maven/comments/19856369", "body": "Perhaps the string could be built using String.format() instead of StringBuilder.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/19856369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/comments/19862572", "body": "Its more for people who would want to try and learn.  But then there's a lot of other things to look at too https://sonarqube.com/dashboard/index?id=org.apache.maven%3Amaven I put in a PR #97 that would at least help bring it up sooner.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/19862572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/88668878", "body": "True.  I'll see if I can put a conditional on the sonar to only run on oracle8\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/88668878/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "lbndev": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/92", "title": "MNG-5909 : Add combined expression evaluator to file activation property", "body": "Suggested solution for MNG-5909 : the file activation element will understand basic boolean expressions such as and(file1,file2) or(file3,!file4) etc... Please see added unit test for expression examples.\nIf you think this could benefit to other activators (property, os, ...) please say so and I will happily modify them too.\nI will also post a message on maven dev mailing list.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vjkoskela": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/80", "title": "[MNG-4777] Match property for profile activation against a regex", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nhojpatrick": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/75", "title": "Patch for MNG-5956", "body": "Issue raised https://issues.apache.org/jira/browse/MNG-5956\n\nIf you use modules, and that results in the same project/pom being included multiple times then an exception is thrown. But as it's the exact same project/pom it can simple be ignore in my view.\n\nSimple project structure;\n./pom.xml\n./common/pom.xml\n./sub1/pom.xml\n./sub2/pom.xml\n\nIf sub1 has nested modules but for some reason common should 50% of the time be rebuilded if sub1 i rebuilt then adding ../common aids developers.\n\nif sub2 has a similar setup to sub2, then when you build at the root directory an error is produces as both sub1 and sub2 reference common.\n\nThis pull request should ignore where the project is an exact match of the same physical pom.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "akacme": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/74", "title": "[MNG-5947] dependencyManagement import section does not resolve dependencies using \"nearest\" definition", "body": "o DepenencyManagement model updated to contain declared dependencies\n  and imported dependency managements\no DefaultModelBuilder responsible for filling updated\n  DependencyManagement model\no DefaultDepenendcyManagementImporter uses graph of dependencyManagement\n  imports to properly find depth of a dependency in a tree and use\n  \"nearest\" version (instead of first match)\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nitram509": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/71", "title": "MNG-3525-maven-settings - settings.xml allowing mirror definitions inside profiles", "body": "This improves user settings to have a mirrors list switched on/off via Maven profile.\nSee commit messages for details.\n\nDirect issue link: https://issues.apache.org/jira/browse/MNG-3525\n\nAny feedback is welcome.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "trask": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/69", "title": "MNG-5899 Reactor should use reduced dependency pom", "body": "", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/145723525", "body": "@ifedorenko, thanks for reviewing this.  Any thoughts what we should do with the downstream implication of this change?  https://issues.apache.org/jira/browse/MSHADE-206\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/145723525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/145730242", "body": "The nice thing about how maven-shade-plugin's \"dependency reduced pom\" used to work, is that you could run mvn compile or mvn test from your parent module (and so maven shade plugin wouldn't kick in since it is bound to package phase), and transitive dependencies would work as normal.  And you could run mvn package or mvn install from your parent module, and maven shade plugin would kick in and expose the shaded jar and dependency reduced pom to downstream modules.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/145730242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mathjeff": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/42", "title": "MNG-5806. Fixing the finding of a child's parent pom.xml that is specifi...", "body": "...ed by relativePath when a reactor specifies the child by symlink\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "njuneau": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/36", "title": "[MNG-5728] Switch the default checksum policy from \"warn\" to \"fail\"", "body": "Related to JIRA issue MNG-5728 : https://jira.codehaus.org/browse/MNG-5728 regarding the default usage of the \"fail\" checksum policy.\n\nPuts \"fail\" as the default checksum policy, when no \"-C\" or \"-c\" option\nis given in the command line. \"-C\" option no longer has any effect, but\nhas remained in the options for backwards compatibility.\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/139921790", "body": "Hello michael-o,\n\nSorry for the delay. My feature branch has been rebased and force-updated.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/139921790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "xaviou": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/33", "title": "[MNG-4921] Add a qualityManagement element to the Project Object Model", "body": "Cf. https://jira.codehaus.org/browse/MPIR-149\nNeed first this new qualityManagement element into the Project Object Model\nThen another patch will be possible to add a new Quality Management report into the maven-project-info-reports-plugin\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/67855737", "body": "Hi Michael, so I've renamed the PR to [MNG-4921](https://jira.codehaus.org/browse/MNG-4921).\nCould you reopen [MNG-4921](https://jira.codehaus.org/browse/MNG-4921) and target it to [Issues to be reviewed for 4.x](https://jira.codehaus.org/browse/MNG/fixforversion/19871)?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/67855737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "olamy": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/14465504", "body": "patch applied.\nYou can close this pr \nThanks !\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/14465504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/17331749", "body": "to run integration test\ngit clone https://git-wip-us.apache.org/repos/asf/maven-integration-testing.git\ncd maven-integration-testing\nmvn clean install -Prun-its (with M2_HOME to your fresh maven core build or -DmavenHome=path to your maven core build)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/17331749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "jvanzyl": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/14841222", "body": "Applied at Apache.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/14841222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/14995327", "body": "Applied. Thanks.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/14995327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/43700209", "body": "Commited on bef7fac6e3495dae57a44e6a5902afd89c74b196\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/43700209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/43701134", "body": "Committed on 65863e0a28298b6d95bfbbf7cc28953f6ba91f93\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/43701134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/43701313", "body": "We'll just go for the 1.0.0 as its out now but I need to do some testing first.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/43701313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/43701504", "body": "Committed on Committed on bef7fac6e3495dae57a44e6a5902afd89c74b196\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/43701504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44266901", "body": "Please squash this commit and I'll take a look.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44266901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44653025", "body": "Can you squash this please.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44653025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44755377", "body": "I used Maven, master branch at revision 73d35ba9597cd867717310ae8813376888debb9b. I applied your patch to master, and ran the tests with Maven 3.2.1 on OSX.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44755377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44756291", "body": "Apache Maven 3.2.1 (ea8b2b07643dbb1b84b6d16e1f08391b666bc1e9; 2014-02-14T12:37:52-05:00)\nMaven home: /Users/jvanzyl/m2\nJava version: 1.7.0_21, vendor: Oracle Corporation\nJava home: /Library/Java/JavaVirtualMachines/jdk1.7.0_21.jdk/Contents/Home/jre\nDefault locale: en_US, platform encoding: UTF-8\nOS name: \"mac os x\", version: \"10.9.2\", arch: \"x86_64\", family: \"mac\"\n\nBut the same test fails against master as well. You might not want to use platform activators in the tests.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44756291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44756676", "body": "I will take a look as soon as I can. Maybe making an activator specifically for helping us test this will be better. Thanks for being patient, we'll get this sorted and integrated.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44756676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44797771", "body": "I created a simple shell script to help validate a pull request against the Maven integration tests. This script is not great, and running the Maven integration tests is not exactly straight forward but this is a step in the right direction. Here is the shell script:\n\nhttps://gist.github.com/jvanzyl/16da25976f8ad27293fa\n\nSave the file to something like `maven-pr-validator.sh` and you run it by providing the PR #. So in your case you will run it as `maven-pr-validator.sh 16` and this will check out Maven, apply your patch, build Maven, check out the integration tests and run them against the just-build Maven. You will see that one of the integration tests is broken as a result of the patch. I will help you debug and fix it. This is not ideal but it's a step in the right direction in helping interested users vet their contributions automatically.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44797771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44829347", "body": "Cool, now you just need a test :-) I would look at one of Igor's related ITs. Some of the most recent ITs that have been added.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44829347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44840927", "body": "Awesome, thanks.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44840927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44885391", "body": "Passes unit and integration tests as per https://gist.github.com/jvanzyl/16da25976f8ad27293fa\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44885391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45084215", "body": "-1. This will not be pulled into the core. We need to go the other direction and take these specific packaging types out of the core. Using a plugin declaration with extensions=true is perfectly fine and prevents a coupling between the core and packaging specific lifecycles. For example the WAR packaging should be removed from the core as well.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45084215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45138360", "body": "Cool, I'll take a look at look at the specific IT failure.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45138360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45442939", "body": "Tonight I'll try to process all the outstanding PRs. I'll let you know if I need anything.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45442939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45608955", "body": "Patch applied, thanks.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45608955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45609304", "body": "Accompanying Maven IT can be found here: https://github.com/apache/maven-integration-testing/pull/4\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45609304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45641594", "body": "Can you close your pull request.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45641594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45641645", "body": "Patch applied, thanks. Can you close your pull request please.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45641645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45644286", "body": "Sorry, cut and paste error on my part when closing the other issues. Can you reopen the PR again and I'll process it this afternoon.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45644286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45673757", "body": "I'm looking for a way to make this work, but this breaks MNG-3106 where the current behaviour is to OR the activators. I agree there are cases where AND is preferable but I don't want to break the existing behavior. Let me see what I can do.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45673757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45681556", "body": "I have argued on the Maven dev list to process your patch. The current implementation I believe to be incorrect.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45681556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45731097", "body": "What's the link you used for reference?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45731097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45731568", "body": "Yes, that is the Sonatype book which is the de facto reference for Maven but not the official specification but probably as close to one as we have. The actual documentation on the site regarding profiles is pretty vague.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45731568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45732464", "body": "Yes, that's not uncommon. The PR is fine, just waiting for any feedback on the Maven dev list. There is one IT I would disable going forward (which tests that the activators are OR'd) and write a new one that tests that activators are AND'd.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45732464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45744828", "body": "Ok, I've written an integration test and I'll see what falls out on the Maven dev list today.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45744828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45811451", "body": "This change will actually make it match the book.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45811451/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45820916", "body": "@Konstantin, I've applied your patch and pushed the integration test. Try it out and if it's good then close the pull request.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45820916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45966467", "body": "Most excellent, thank you. Do you think you might also try your hand at creating an integration test and trying to assert the change doesn't break anything else in Maven? You can use the script at the bottom of [1](http://takari.io/2014/06/02/contributing-to-maven-core.html) as a guide. I will try to get it processed this weekend but if you can work on an integration test I will be able to process it that much faster. Thanks for turning the patch into a pull request, it makes integrating any change much easier.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45966467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/46114965", "body": "No, we do not use install on this particular project where we are developing the concept of a generation. We either have a project in source form locally, or we get it remotely. Everything works in the reactor because we have changed the way resolution works in the reactor. Many of the issues where you can't run eclipse:eclipse in the reactor prior to the package phase, or not being able to resolve test-jars we have fixed in our particular implementation. We are only part way through this project so I'm not sure what will remain when we are finally done, but we are doing a form of continuous delivery.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46114965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/46200202", "body": "You may want to try running the script described in here just to make sure the Maven ITs are not affected by the change. We have several ITs that specifically look at log output. Thanks for the pull request! If I can integrate it into the 3.2.2 release I will, but I'm about to cut it.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46200202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/46256490", "body": "I will push this in right after I cut the 3.2.2.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46256490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/46299917", "body": "They should all be passing. Happy to help you once I cut the 3.2.2 release. Also, if you happen to use Eclipse I can show you how to do this all from within Eclipse which is much simpler. I'm thinking of demoing these tools tomorrow at our hangout: https://plus.google.com/u/0/b/113247990055413254822/events/cvbjktccvtp8cj9pru9u7r511fs\n\nBut no pressure to show up to the hangout, I can show you how to use the tools in a 1:1 hangout. At any rate I will help you with the ITs later this week.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46299917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/46555048", "body": "I think Christian's idea is better as the logic is contained to the specific activator. I'm not keen at all to add conditional logic to the POM model anywhere, or any type of expression language being required for the POM 4.0.0 model or general XML model. Maybe an activator using MVEL would work well.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46555048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/46562788", "body": "@mikebrock Do you think MVEL would be suitable for a one expression evaluator for a Maven profile activator? Imagine putting a MavenProject/pom.xml in the MVEL context and doing some boolean evaluation.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46562788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/49457637", "body": "Awesome! Thanks for looking into this, I'll review tonight and produce a build. I'll reach out Arnaud when I have the build and he can validate against the Exo build.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/49457637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/49513709", "body": "This went in on d8fd65a3aefedfb69c4a70c5710bb163940a3d0a. Can you close the pull request please? I keep forgetting to do it with the commit message.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/49513709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/63176060", "body": "@martin-g does the quiet option provide the behaviour you'd like?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/63176060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/67614958", "body": "Can you explain why this is needed?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/67614958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/67621964", "body": "I'm not really in favour of this change. This seems entirely wrong to change the way resolution works for the site plugin.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/67621964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/67625232", "body": "I don't agree. Why would you not want to build the site from the sources for the tag of the release you're building?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/67625232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/67625959", "body": "Maybe jump in IRC, probably easier to chat.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/67625959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/67625978", "body": "irc.codehaus.org #maven-dev\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/67625978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/68426777", "body": "Much of the shitiness stems from leaving things in such a way that nothing was broken between Maven 2.x and 3.x. There are many weird interactions but the overriding goal for the transition was not to break anything. We did that but we're left with much that you look at and go \"WTF? That's so gross\", but such is life with mature systems that grow organically and in bursts. If we ever do get around to Maven 4.x there is a huge pile of cruft to be sheered off and if it breaks 10-15 integration tests so be it. You would would be shocked at how much code there is to preserve individual ITs passing but that's the way it is. The size of the core can be reduced by at least a 1/3 easily.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/68426777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/68555131", "body": "As a check did you run the ITs? There are a few collections that are expected to be mutable unfortunately. I haven't looked at the patch in detail to check but I can look early next week.\n\nIdeally all configuration and projects should be immutable before the build starts. I made a significant change to the project building a few months ago which is a step in the right direction, and the next major refactor is entire construction of project with respect to plugin execution. Right now you can't know all the compile source roots without running a plugin which is admittedly bad, it should be declarative but it's not.\n\nI was planning on talking about immutability and parallelism in the Maven Dev Hangout on January 15th if you're interested.\n\nAt any rate, if you know the ITs pass I'll take a look at the patch.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/68555131/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/68562504", "body": "Ant build? The ITs are in a separate repository. This may be helpful:\n\nhttp://takari.io/2014/06/01/contributing-to-maven-core.html\n\nThere are are 700+ integration tests that need to pass for any change.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/68562504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/68680709", "body": "Tibor,\n\nEmpirically on the daily basis I work on a 900 module build using 8 threads with 1500+ developers and there aren't many concurrency issues. I'm not keen on incorporating this patch without a demonstration there is something wrong in the core. Igor and I took a look at creating a harness to test multithreaded builds but it's hard. But I think that needs to be done first to show that something is actually wrong. There may very well be but as I said empirically I haven't actually seen anything.\n\nI would actually rather go the other way and create a patch that makes everything immutable and then watch a bunch of the ITs fail and then work toward making them work, or removing ITs that expect to mutate state. I think this will be far more informative and provide a path to cleaning up the core.\n\nIf I had witnessed all sorts of problems with concurrency issues I might be inclined to accept the patch but I don't think it particularly helps. Are you seeing lots of concurrency issues? If the code that clones the project per build thread is removed, yes, things don't work very well.\n\nI'm happy to discuss more. Maybe pop into IRC, but as-is I'm not inclined to accept this. Also have you run the Maven ITs with your patch?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/68680709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/68700367", "body": "Apache is resource constrained so we have what we have. Please feel free to work with Stephen on the dev list to have something better setup. I'm open to improvement. Anyone who has contributed has not found running the ITs all that troublesome but that's the starting point of any further discussion. The patch can't even be considered if the ITs passing hasn't been validated.\n\nIf you don't want to run them to verify using[1](http://takari.io/2014/06/01/contributing-to-maven-core.html) then I'll do it if someone doesn't get to it first. I'm in IRC if you want to discuss the patch.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/68700367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/68701512", "body": "Does the patch apply for you? I just tried:\n\nApplying: Improved visibility of collections and variables across multiple threads\nerror: patch failed: maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionResult.java:28\nerror: maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionResult.java: patch does not apply\nPatch failed at 0001 Improved visibility of collections and variables across multiple threads\nThe copy of the patch that failed is found in:\n   /Users/jvanzyl/work/z-maven-with-pr-34/maven/.git/rebase-apply/patch\nWhen you have resolved this problem, run \"git am --continue\".\nIf you prefer to skip this patch, run \"git am --skip\" instead.\nTo restore the original branch and stop patching, run \"git am --abort\".\nApplying 34.patch failed.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/68701512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/68705017", "body": "Sounds like a plan.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/68705017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/75373555", "body": "Committed. If it looks good to you close the pull request.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/75373555/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/75374322", "body": "I think this is reasonable, it should fail instead as it's incorrect. Anyone have an issue merging this. All the ITs pass here so if there are no objections today I'll merge it.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/75374322/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/75814030", "body": "No, I don't think it's a good idea to be honest.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/75814030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/75814137", "body": "I thought we agreed you were closing this pull request. \n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/75814137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/75961215", "body": "The behaviour you describe you need is wrong and the I'm convinced at this point that the site plugin should just be a stand-alone tool and was implemented incorrectly in Maven 2.x as a lifecycle and it continues to pervert Maven core and that everything to do with reporting should be ripped out of the core once and for all. I will help extract the logic out of core and help make the Site plugin an independent tool, but I'm not integrating this patch.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/75961215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/76013680", "body": "The crux of my argument is that Maven should not be doing anything other than building, non build lifecycles were a mistake and have done nothing but make the core more complex and make it harder to evolve. Generating a site is just an invocation of a tool, it's not a lifecycle. The site plugin lives somewhere between the core and a more sophisticated plugin and honestly has just become a huge mess. If you want to make a stand-alone site tool, then it should be so and not require magical features in Maven core.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/76013680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/76101706", "body": "There's nothing wrong with there being a site plugin, configuration for the a site housed within the site plugin and running the site plugin. What is not right is how it was fused into the base level of the POM and not contained to its plugin and how it's special requirements have created several inconsistencies in the core that have made it hard to evolve. What is also not right is requiring special resolution magic for a specific plugin to run. You think that creating a special mode of resolution for one specific Maven plugin seems reasonable? I personally do not.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/76101706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/78013185", "body": "I chatted with Igor and he's going to try and change the way the classpath is constructed for plugins. The issue here appears to be forking where SLF4J is filtered out of the classpath which is going to cause issues. For in VM use the classrealm needs to be filtered because we're exporting from the core but while forking we'll leave the classpath untouched. We'll try that and see if the ITs all work and fixes this particular issue.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/78013185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/78277642", "body": "@ChristianSchulte Definitely more along the lines of what you describe where there is no site lifecycle. I think this is a design error in allowing non-build lifecycles. But yes, having the build produce data that can be consumed by other tools whether that be a reporting tool, metrics tool, or anything else is the way it should work. \n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/78277642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/78283012", "body": "No, and I would not advocate the use of tools like that which would distort the standard lifecycle and promote tools like Jacoco that do not require things like that. As a tool that collaborates with the standard build lifecycle it should be able to operate on either data emitted by the eventing system in Maven or operate on, or use artifacts as they are produced from the system. Like adding an agent to dynamically instrument code. Tools like Clover and Cobertura are frankly terrible tools that are super hard to integrate and we've done some stupid things in the core to accommodate them and that was categorically a mistake. If things like Clover and Cobertura break in Maven 4.x I honestly don't care. They are designed incorrectly in my opinion or were designed for a time where there didn't exist proper support to be truly independent from how Maven operates. The model should be \"report on standard data produced, or by looking at standard artifacts being produced\", not I'm going to \"jam myself into the process to completely alter how the build works to get the data I need.\"\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/78283012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/78341680", "body": "And I have been talking about this for years but have admittedly done nothing yet. But I believe the direction to go is to make some example data generators that can be used by tools to display the information. I think the site plugin has just grown into completely the wrong thing. It's generally terrible at generating standard doco as things like Jekyll just destroy it in terms of usability and community. Insofar as reporting it's just too invasive and it needs to be fully extracted from Maven's core so Maven can evolve. A personal goal is to entirely remove site/reporting logic from Maven's core in 4.x. This does not mean I want to wreck reporting but to create a facility that allow reporting tools to get at the data it needs to produce the reports that users expect.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/78341680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/89769509", "body": "I'll take a look at try to incorporate into the 3.3.2 release which I'd like to get our next week.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/89769509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/96789423", "body": "Applied on d8ae13fd7b6be8a238a2b74f2b494668cd967c30. If it looks good then close out this issue along with the IT PR.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/96789423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/97120279", "body": "https://issues.apache.org/jira/browse/MNG-5813\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/97120279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/97274498", "body": "Would be a nice change. Anything of note we should be concerned about API/SPI, or performance wise?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/97274498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/97413566", "body": "To be clear are you saying that the injection of loggers is not supported with Guice 4? I don't think it's used much but I believe it is used. Yes, I have been using the static factory method, or lombok.\n\nMaybe this is the impetus to get the perf harness back up and running to check. I'll merge it here locally and try it for a week.\n\nOn Apr 29, 2015, at 6:03 AM, Stuart McCulloch notifications@github.com wrote:\n\n> The only difference remaining between this and sisu-guice is support for @Injection of SLF4J loggers, but I don't believe that's used much, if at all. Personally these days I prefer to create loggers using the static factory method.\n> \n> Performance should be comparable, although I have yet to run a detailed comparison - I'd be interested in feedback from people using large or complicated builds.\n> \n> \ufffd\n> Reply to this email directly or view it on GitHub.\n\nThanks,\n\nJason\n\n---\n\nJason van Zyl\nFounder, Takari and Apache Maven\nhttp://twitter.com/jvanzyl\n\n## http://twitter.com/takari_io\n\nA master in the art of living draws no sharp distinction between his work and his play; his labor and his leisure; his mind and his body; his education and his recreation. He hardly knows which is which. He simply pursues his vision of excellence through whatever he is doing, and leaves others to determine whether he is working or playing. To himself, he always appears to be doing both. \n\n  -- Fran\ufffdois-Ren\ufffd de Chateaubriand\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/97413566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/97418800", "body": "Thanks for the clarification. I'm not too concerned about not being able to @Inject SLFJ loggers any longer but we can't break components that might be doing it.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/97418800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/113505944", "body": "+1 please use try-with-resources\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/113505944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/113755269", "body": "@sugartxy looks like @krosenvold is doing some JDK7 work so I'll let him merge this.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/113755269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/114211764", "body": "@agudian think you might be able to validate this? And close out MNG-5812. Sorry, you're the go-to Windows committer :-)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/114211764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/114224088", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/114224088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/120199784", "body": "I'm generally against changing anything to do with resolving strategies and it has the potential for breaking everything because it's not just what you might use, but what you might publish using your differences and others being exposed to what your assumptions are. So you'll have provide some reasoning. Also note most of this is controlled in Aether. Also, please squash your changes into a single commit.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/120199784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/120428315", "body": "And so what strategy are you going to implement? I realized you've made it a strategy but that doesn't negate potential for problematic issues. I'm just trying to determine whether what you really want is what we eventually want to move to. Proper semantic versioning in this case.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/120428315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/124129817", "body": "I'm out in the middle of nowhere, but i'll cancel the vote, test and re-roll once I'm back to civilization.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/124129817/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/138295450", "body": "No. The enforcer plugin is for build-time enforcement. The <prerequisite/> element is for runtime enforcement. We certainly don't want to have to inspect the any plugin configuration elements to help Maven know that the current environment won't run the plugin. Also, if we ever get around to having the build vs consumption POM this information would not be available at all.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/138295450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/138297887", "body": "I'm reasonably sure it's never been used for build-time enforcement. Anything to make it clear that the enforcer is for build-time and the prerequisite element is for runtime is good.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/138297887/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/138307685", "body": "Fair enough, I cannot remember that far back :-)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/138307685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/139676001", "body": "This no longer applies against master.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/139676001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/139683514", "body": "@brianstclair ping\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/139683514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/139687217", "body": "Please squash your commits into a single commit.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/139687217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/140046053", "body": "@fbricon, @dsyer's logic was also integrated into the Maven Wrapper. I'll release the Maven Wrapper today with that fix.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/140046053/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/142240976", "body": "Generally the changes need to be squashed into a single commit and for changes to core you need a corresponding integration test. The integration tests can be found here https://github.com/apache/maven-integration-testing\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/142240976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jglick": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/15639937", "body": "The link: [MNG-3092](https://jira.codehaus.org/browse/MNG-3092)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/15639937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/17176035", "body": "`mvn clean install test integration-test` passes with this change.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/17176035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/17176752", "body": "Also did the following at @stephenc\u2019s suggestion, in case that is more exacting:\n\n```\nrm -rf ~/.m2\nM2_HOME=/tmp/maven ant all\n/tmp/maven/bin/mvn clean install -Prun-its -B -U -V\n```\n\nwhich worked though\n\n```\n[WARNING] The requested profile \"run-its\" could not be activated because it does not exist.\n```\n\nReally there should be a pull request builder for this sort of thing, so I do not have to guess what tests you expect to be run!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/17176752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/17513130", "body": "I get the same errors from my branch as from the `master` commit it is based on:\n\n```\nTests in error: \n  MavenITmng3983PluginResolutionFromProfileReposTest>AbstractMavenIntegrationTestCase.runTest:220->testitFromPom:58 \u00bb Verification\n  MavenITmng3970DepResolutionFromProfileReposTest>AbstractMavenIntegrationTestCase.runTest:220->testitFromPom:78 \u00bb Verification\n  MavenITmng3948ParentResolutionFromProfileReposTest>AbstractMavenIntegrationTestCase.runTest:220->testitFromPom:78 \u00bb Verification\n  MavenITmng3652UserAgentHeaderTest>AbstractMavenIntegrationTestCase.runTest:220->testmng3652_UnConfiguredHttp:123 \u00bb Verification\n  MavenITmng3652UserAgentHeaderTest>AbstractMavenIntegrationTestCase.runTest:220->testmng3652_UnConfiguredDAV:175 \u00bb Verification\n  MavenITmng3372DirectInvocationOfPluginsTest>AbstractMavenIntegrationTestCase.runTest:220->testDependencyTreeInvocation:83 \u00bb Verification\n\nTests run: 716, Failures: 0, Errors: 6, Skipped: 0\n```\n\nMaybe due to my use of a `*`-mirror? Another reason to have a standard PR builder which is known to pass all trunk tests.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/17513130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/31657335", "body": "Claimed merged in 2eb419ed95ccfdd80c5755890e649a49274cceca.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/31657335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kunalsomani": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/17094395", "body": "Are you going to merge into main branch?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/17094395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "seblm": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/42782353", "body": "I've followed [this guide](http://maven.apache.org/guides/development/guide-m2-development.html#Dont_forget_tests) to run the integration tests. Result was ok (but took a lot of time :smile:)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/42782353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/43689337", "body": "@jvanzyl please let me know if you want something else to be done on this pull request before you could merge it.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/43689337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "cstamas": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/43733186", "body": "Agreed, closing this out.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/43733186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44653198", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44653198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44824659", "body": "ITs passed on this PR :+1: \n\nhttps://gist.github.com/cstamas/5873e5413da65a5258c5\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44824659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44840750", "body": "New IT added\nhttps://github.com/apache/maven-integration-testing/pull/6\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44840750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45644872", "body": "FTR, Manually merged as 18964baa25e9c071d13186e4c03e3957b9381961\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45644872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "nerro": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/44082484", "body": "Make sense. I will correct it.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44082484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44083431", "body": "copy-paste is not always good :smile: => typo in word \"implementation\"\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44083431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Humbedooh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/44127870", "body": "Testing integration with the maven dev ML, please ignore :)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44127870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "nmusienko": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/44252636", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44252636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "MysterionRise": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/44268726", "body": "Create new pull request with squashed commits\nhttps://github.com/apache/maven/pull/16, plz take a look\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44268726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44749028", "body": "Any updates on my pull request? \n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44749028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44751378", "body": "Could you tell me, what did you use?\n\nI've run tests on Linux:\n\nmvn -version\nApache Maven 3.0.5 (r01de14724cdef164cd33c7c8c2fe155faf9602da; 2013-02-19 17:51:28+0400)\nMaven home: /home/mysterion/Downloads/apache-maven-3.0.5\nJava version: 1.7.0_25, vendor: Oracle Corporation\nJava home: /home/mysterion/Downloads/jdk1.7.0_25/jre\nDefault locale: en_US, platform encoding: UTF-8\nOS name: \"linux\", version: \"3.13.0-27-generic\", arch: \"amd64\", family: \"unix\"\n\nalso, i've try with windows\n\nmvn -version\nApache Maven 3.2.1 (ea8b2b07643dbb1b84b6d16e1f08391b666bc1e9; 2014-02-14T21:37:5\n2+04:00)\nMaven home: C:\\Users\\User\\Downloads\\apache-maven-3.2.1-bin\\apache-maven-3.2.1\\bi\nn..\nJava version: 1.7.0_55, vendor: Oracle Corporation\nJava home: C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\nDefault locale: ru_RU, platform encoding: Cp1251\nOS name: \"windows 8\", version: \"6.2\", arch: \"x86\", family: \"windows\"\n\nand all tests are also passed.\n\nDid you use anything that isn't from family: windows or unix?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44751378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44755927", "body": "Awesome,this is the only platform, I couldn't test against.Could you specify your _mvn -version_ output? I will try to fix test.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44755927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44756590", "body": "Not understand your point about failing against master.\n\nI agree that platform activators is not good idea. So same with JDK activator, right? I'm only left with existing/missing file (what I've already use) and property activator (which is tricky for testing)\n\nSo, how we could resolve it?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44756590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44757042", "body": "I'm 100% don't wanna rush. I will think about special activator for testing purpose (It could be _AlwaysTrueActivator_). I will try to give it a try tomorrow.\n\nAlso, the way which is used now in 4 activators isn't best (I'm talking about condition for checking)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44757042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44831587", "body": "Good stuff. I will try it today.\n\nWeird error \n\nCaused by: org.eclipse.aether.transfer.NoRepositoryConnectorException: No connector available to access repository test-mirror (dav://www.example.com/) of type default using the available factories WagonR$\n        at org.eclipse.aether.internal.impl.DefaultRepositoryConnectorProvider.newRepositoryConnector(DefaultRepositoryConnectorProvider.java:193)\n        at org.eclipse.aether.internal.impl.DefaultArtifactResolver.performDownloads(DefaultArtifactResolver.java:531)\n        ... 60 more\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44831587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45134460", "body": "I've update pull request. I change my approach, so it will not now a platform dependable. But ITs are still failing at weird place. I'm 100% sure, that it's not my fault\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45134460/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45431277", "body": "Just wonder, is there anything I could do?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45431277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45643803", "body": "I'm sorry, I don't understand, why you close this PR? Does it bad? I miss something?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45643803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45704618", "body": "I've implement this patch, only cause it's 100% relates with official documentation.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45704618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45731386", "body": "http://jira.codehaus.org/browse/MNG-4565 - take a look here. It have link for reference\nhttp://books.sonatype.com/mvnref-book/reference/profiles-sect-activation.html#profiles-sect-activation-config\n\nQuote: \"Activations can contain one of more selectors including JDK versions, Operating System parameters, files, and properties. A profile is activated when all activation criteria has been satisfied.\"\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45731386/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45731774", "body": "Hm, probably you are correct. I've just have strong feeling, when somebody said 'Sonatype' - think about 'Maven' and vice-versa.\n\nRegarding PR, let me know, if I need to fix something or anything else. \n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45731774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45825613", "body": "Let me check.\n@jvanzyl Looks correct, I will close PR right now\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45825613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/46524647", "body": "First of all - thanks for your email.\nI understand, that this will ruin current ORing technique, but at least it\ncould be fixed with copying for a while.\n\nWhat about complex conditions - it's my next step, I see that people needs\ncomplicated conditions, so definitely me or somebody else could provide it\n. 4565 was the first step, to try how it will going.\n\nSo, next step would be formalizing task for AND and OR in activation\nsection and then it could be fixed too.\n\nKonstantin\nOn Jun 19, 2014 8:45 AM, \"FredipusRex\" notifications@github.com wrote:\n\n> You do realize that the current OR condition is actually out in use right\n> now in many POM files, right? This was previously the subject of a patch\n> (MNG-3106) - originally only one condition was accepted which was patched\n> to allow for ORing of conditions - arguably the wrong thing to do, but it's\n> pretty well understood out in the Maven community. While this patch finally\n> matches Maven to the Sonatype book, it will break a lot of POMs without\n> recourse other than multiple, near duplicate activations.\n> \n> The right way to fix this would have been to add the ability to specify\n> the condition (AND, OR), perhaps through a set of tag attributes.\n> \n> JDKCheck\n> true\n> \n> NeedsJava4or5\n> \n> Linux\n> \n> 1.6\n> 1.4\n> 1.5\n> \n> All conditions now belong to a group - either the default group or a named\n> group attribute. Members of the default group have no attributes and are\n> AND'd together (keeping the functionality of your patch). There do not need\n> to be any members of the default group - in which case, it acts purely as\n> glue to named groups.\n> \n> One member of each named group must indicate how the group relates to the\n> default group via the condition attribute and how the members of the group\n> are related to each other via the group-condition attribute.\n> \n> This allows compact but complex relationships. The above example is\n> activated when the JDKCheck property is true and the NeedsJava4or5 property\n> exists and the JDK is 1.4 or 1.5, or when compiling under Linux and the JDK\n> is 1.6. It does not allow infinite numbers of levels and parenthetical\n> statements, but does provide for most common build scenarios. When there\n> are no members of the default group, it should be assumed to be not\n> activated and the first group (if any) with the AND condition should be\n> considered the default group. This allows something like group 1-OR with\n> group 2-AND to act like an either/or choice.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/apache/maven/pull/20#issuecomment-46523185.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46524647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "asfbot": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/44749402", "body": "Jason van Zyl  on dev@maven.apache.org replies:\nI applied your changes and your test fails. If you want to take look and =\nvalidate I will take a look later in the weekend.\n\n---\n\n##  T E S T S\n\nRunning org.apache.maven.model.building.ComplexActivationTest\nTests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.171 =\nsec <<< FAILURE! - in =\n\n# org.apache.maven.model.building.ComplexActivationTest\n\ntestAndConditionInActivation(org.apache.maven.model.building.ComplexActiva=\ntionTest)  Time elapsed: 0.158 sec  <<< FAILURE!\njunit.framework.AssertionFailedError\n    at junit.framework.Assert.fail(Assert.java:47)\n    at junit.framework.Assert.assertTrue(Assert.java:20)\n    at junit.framework.Assert.assertNull(Assert.java:230)\n    at junit.framework.Assert.assertNull(Assert.java:223)\n    at =\norg.apache.maven.model.building.ComplexActivationTest.testAndConditionInAc=\ntivation(ComplexActivationTest.java:52)\n\nRunning org.apache.maven.model.building.DefaultModelBuilderFactoryTest\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 =\nsec - in org.apache.maven.model.building.DefaultModelBuilderFactoryTest\nRunning =\norg.apache.maven.model.inheritance.DefaultInheritanceAssemblerTest\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.678 =\nsec - in =\norg.apache.maven.model.inheritance.DefaultInheritanceAssemblerTest\nRunning =\norg.apache.maven.model.interpolation.StringSearchModelInterpolatorTest\nTests run: 28, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.579 =\nsec - in =\norg.apache.maven.model.interpolation.StringSearchModelInterpolatorTest\nRunning org.apache.maven.model.path.DefaultUrlNormalizerTest\nTests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec - =\nin org.apache.maven.model.path.DefaultUrlNormalizerTest\nRunning =\norg.apache.maven.model.profile.activation.JdkVersionProfileActivatorTest\nTests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.103 =\nsec - in =\norg.apache.maven.model.profile.activation.JdkVersionProfileActivatorTest\nRunning =\norg.apache.maven.model.profile.activation.PropertyProfileActivatorTest\nTests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.13 =\nsec - in =\norg.apache.maven.model.profile.activation.PropertyProfileActivatorTest\nRunning org.apache.maven.model.validation.DefaultModelValidatorTest\nTests run: 44, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.512 =\nsec - in org.apache.maven.model.validation.DefaultModelValidatorTest\n\nResults :\n\nFailed tests:=20\n  =\norg.apache.maven.model.building.ComplexActivationTest#testAndConditionInAc=\ntivation AssertionFailedError\nyour\nfeature\nplease\nticket\n\nThanks,\n\nJason\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44749402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/46079064", "body": "Christian Schulte  on dev@maven.apache.org replies:\nAm 06/14/14 04:50, schrieb talios:\n\nI did not follow any discussion about SNAPSHOT handling in version\nranges. From a version specification grammar point of view, '-SNAPSHOT'\nis just another qualifier without special meaning. The special meaning\ncomes from Maven changing behaviour when detecting that qualifier.\nDealing with this could be as simple as changing version range behaviour\nbased on that qualifier as well. So when a POM defines that qualifier,\nMaven includes versions carrying that qualifier, and if a POM does not\ndefine that qualifier, Maven excludes that qualifier. Actually, it's a\nflag indicating a project to be work in progress. If 'true', that\nproject is allowed to depend on other projects flagged work in progress,\nif 'false', it's not. Just an idea, however.\n\n## Regards,\n\nChristian\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46079064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/46080103", "body": "=?ISO-8859-1?Q?Herv=E9?= BOUTEMY  on dev@maven.apache.org replies:\nthis is one of the problems when using version ranges, tied to reproduc=\nibility=20\nand definition of the algorithm for Maven to choose one version in the =\nrange=20\nadapted to the actual context.\n\nThis is sometimes incorrectly (IMHO) told as \"maven ranges with non-SNA=\nPSHOT=20\nbounds should not contain SNAPSHOTs\"\n\nin fact, ranges do contain SNAPSHOTs: it's mathematical\nbut the question is: how to avoid non-SNAPSHOT resolution/choice when d=\noing a=20\nrelease, while resolving SNAPSHOTs when not doing a release?\nHow to affect the algorithm that magically choose on version in the ran=\nge?\n\nRegards,\n\nHerv=E9\n\nLe samedi 14 juin 2014 07:27:06 Christian Schulte a =E9crit :\nhilst\nn -\nI\nhould\nT'\ng\nour\n,\nt\na\nss,\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46080103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/46089351", "body": "Jason van Zyl  on dev@maven.apache.org replies:\nreproducibility=20\nrange=20\nnon-SNAPSHOT=20\n\nHow is this mathematical? A SNAPSHOT is simply a representation of =\nconcrete version number which may fall within the constraints of the =\nrange. It has a special meaning to us to mean a pre-release version and =\nwe may arbitrarily do one thing or another with a SNAPSHOT when we see =\none. I don't see how this is mathematical. What we have done to =\ninclude/exclude them we have arbitrarily changed a couple times now.\ndoing a=20\n\nThe only way to do this is to constrain what you resolve against to not =\ncontain snapshots. In the case of my current setup we simply disallow =\nSNAPSHOTs entirely.\n\nTraditionally there are two ways to attain consistency and that is =\nhaving concrete versions where you can resolve arbitrary content in your =\nrepositories. Or you use ranges and resolve against constrained content =\nin your repositories.=20\n\nThat said Christian's patch is working fine as not too affect any =\nexisting behaviour and in the release we can mark the use of ranges in =\nparents as provisional. Though to me it seems more consistent to allow =\nit in the parent if you're going to allow it in a dependency. I will =\nadmit to being biased here as I'm working with a project that has =\nhundreds of projects and we would effectively use this as a way to =\nversion the entire set of projects consistently. Which is very =\nconvenient.=20\n\nMaybe this is something we can also discuss in the hangout next week.\nrange?\n\n## whilst\n\nshould\n'-SNAPSHOT'\nmeaning\nbehaviour\nqualifier,\nnot\na\nprogress,\n\nThanks,\n\nJason\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46089351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/46092135", "body": "=?ISO-8859-1?Q?Herv=E9?= BOUTEMY  on dev@maven.apache.org replies:\nLe samedi 14 juin 2014 10:15:40 Jason van Zyl a =E9crit :\n one\nncrete\n has a\narily\n+1\nif my frenglish doesn't cause any unexpected result, mathematic definit=\nion of a=20\nrange is a lower bound, an upper bound + a comparison algorithm: anythi=\nng that=20\nis between the bounds given the comparison algorithm is in the range\nso 1.1-SNAPSHOT is in [1,2] range\nand yes, 1.1-anything is in the [1,2] range too\n\nso the question is not if 1.1-SNAPSHOT is in the range: it is\n\n## the question is: do we want to let the range resolver choose such a 1.1=\n\nSNAPSHOT at the time we're working?\n\nand the answer depends on the context, not on the range definition.\nyes, I know, that why I'd like we all can discuss and be sure we unders=\ntand=20\nourselves\nen\n?\not\nit's a way to do that, yes: I wouldn't say that it's the only one\n\nanother way is to change the algorithm that selects the effective versi=\non from=20\nthe list of everything that is available  in the range in the repo: IIU=\nC, the=20\nactual algorithm is \"take the max\" (I couldn't find where it is coded).=\n\nIt could be changed to \"take the max that has other constraints\": in th=\ne=20\ncontext of a release (ie passing from SNAPSHOT to non-SNAPSHOT), don't =\naccept=20\nSHAPSHOTs\nving\nnt in\nyes, but how is the constraint expressed and coded?\nsting\n as\n+1 this patch improves features consistency: parent is a dependency lik=\ne=20\nanother\nts and\n\nyes, I think this would be useful\n\n I still don't understand how version ranges can be used without=20\nreproducibility issues, how version is selected in the range, if the al=\ngorithm=20\nis parametrized or completely hardcoded (I suppose as \"max\" function), =\nif some=20\nother algorithms could be useful in other contexts (\"min\", for example)=\n range?\nwhilst\non -\n I\nshould\nSHOT'\nning\naviour\nier,\n not\n's a\n\n## gress,\n\nn moral\nr\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46092135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/46094284", "body": "Jason van Zyl  on dev@maven.apache.org replies:\none\nconcrete\nhas a\narbitrarily\ndefinition of a=20\nanything that=20\n1.1-\n\nI will argue that insofar as range resolution is concerned we should =\ndeal purely with the numeric computation and avoid all special =\nconsideration for our qualifiers such as SNAPSHOT. I will even go so far =\nas to say that you should never put a special qualifier in a range =\ndefinition and that it needs to remain numeric.\n\nSo if you have a dependency which specifies a range of [1.0,2.0) and you =\nhave a build of this where 1.1-SNAPSHOT is being deployed, then =\nultimately the SNAPSHOT gets expanded to 1.1-yyyymm.ddhhss-# and if that =\nartifact is visible, that it's purely considered on the numerical =\nrepresentation and the resolver will select it.\n\nWe partition the deployment of non-release artifacts from release =\nartifacts, yet we don't employ this partitioning during resolution and I =\nbelieve users have taken to the habit of using group repositories which =\nmakes everything available and I think makes this issue harder to deal =\nwith.=20\n\nSo to me there is no special context based on magic qualifiers, there is =\nonly the numeric range calculation.\nunderstand=20\nwhen\nnot\nversion from=20\nIIUC, the=20\ncoded).\nthe=20\naccept=20\nhaving\ncontent in\n\nTrying to encode these in such a way where you effectively have a =\nproperty graph is hard. Aether has some preliminary support for this but =\nnot really. In practice to date it's really constrain the version or =\nconstrain what you are resolving against.\n\nEither explicit with your version as a concrete version if you want to =\nresolve against the wild. Or you use ranges and the constraint is =\nencoded as the list of repositories you are going to resolve against.\n\nI would love arbitrary property graph based resolution, but even if we =\nhad it (which is by no means trivial) I probably still wouldn't want to =\nencode special magic for SNAPSHOTs.\nexisting\nas\nlike=20\nprojects and\nalgorithm=20\nif some=20\nexample)\n\nGiven that we have a de facto formalism through our code, specifically =\nin Aether, that I would gravitate toward using a formalized resolution =\nmodel like what OSGi. I'm certainly not a huge proponent of OSGi, but =\nthey have a completely formalized and specified resolution algorithm.=20\n\nAt any rate you have the two mode of ensuring reproducibility which is =\nto use concrete versions against an arbitrary set of repositories, or =\nrange versions against a constrained set of a repositories. In both =\ncases you'll have reproducibility problems if your repositories are not =\nmanaged correctly. But I think trying to come up with a property graph =\nbased resolution mechanism to deal with context is not going to happen =\nany time soon and most likely never so I don't really think pursuing =\nthat is an option.\nrange?\n\n## whilst\n\nshould\n'-SNAPSHOT'\nmeaning\nbehaviour\nqualifier,\nnot\nit's a\n\n## progress,\n\nin moral\nfor\n\nThanks,\n\nJason\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46094284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/61836145", "body": "Karl Heinz Marbaise  on dev@maven.apache.org replies:\nHi Martin,\n\njust register on xcircles..\n\nsee here:\n\nhttp://maven.apache.org/issue-tracking.html\n\nKind regards\nKarl Heinz Marbaise\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/61836145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/68569048", "body": "Stephen Connolly  on dev@maven.apache.org replies:\n\nI have recused myself from asking as I have a conflict (being a CloudBees\nemployee)... but I am not stopping anyone petitioning the PMC to make such\na request and if the PMC wanted such facilities I would suspect I could get\nthem granted for this project.\n\nBTW this would need to be an action decided on by the PMC and driven by the\nPMC.\n\n-Stephen (PMC member and CloudBees employee)\nl:\nur\ne\nse\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/68569048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/68637459", "body": "=?ISO-8859-1?Q?Herv=E9?= BOUTEMY  on dev@maven.apache.org replies:\nyes, we should probably enhance the documentation: I had a look at it,\nand it seems we have:\n1. confusion bewteen \"Guide to Developing Maven\" [1] and \"Guide to Buil=\n   ding=20\n   Maven\" [2],\n2. confusion in these between Maven as Maven core only and any Maven=20=\n\ncomponent, ie core or plugin or ...\n\nI'm starting enhancements: feedback appreciated\n\nRegards,\n\nHerv=E9\n\n[1] http://maven.apache.org/guides/development/guide-m2-development.htm=\nl\n\n[2] http://maven.apache.org/guides/development/guide-building-m2.html\n\nLe vendredi 2 janvier 2015 22:27:59 Tibor17 a =E9crit :\nmost\nand\nlpful:\nchange.\n.\ne your\nature\nplease\ncket\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/68637459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/78077016", "body": "Jason van Zyl  on dev@maven.apache.org replies:\nHerv=E9,\n\nAfter EclipseCon today I will look at the doco you started (much =\nappreciated) and fill in some information. I'll try once again to get =\nthe release staged as well.\n\nDo you think you can put the site plugin along with related plugins =\nthrough it's paces with master to make sure we didn't miss anything? =\nIgor tried to capture the case in the ITs for the Cobertura issue and if =\nwe can capture the other site related issues in a general way in the ITs =\nwe can make sure we don't bonk them again.\nnow. I've provided explanation of the problem and links to the fix and =\ncorresponding IT changes in the jira.\nyour\nfeature\nplease\nticket\n\nThanks,\n\nJason\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/78077016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/124183099", "body": "Benson Margulies  on dev@maven.apache.org replies:\nIf this change is so ugly, why are there no  comments explaining the ugly?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/124183099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/124189431", "body": "Stephen Connolly  on dev@maven.apache.org replies:\nIt's not completely ugly, but it does entangle dependencies further which I\nview as ugly.\n\nThere is an existing todo above this code to move the validation to a\ndifferent module, so I believe this will all get removed at that time\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/124189431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/125786750", "body": "Jason van Zyl  on dev@maven.apache.org replies:\nAt first blush this change seems like a bad idea to me. I consider the =\nreactor/multi-module project an atomic unit and this change runs counter =\nto that. Why do you want a parent installed instead of everything =\nworking cohesively within the reactor?=20\n\nAre you trying to build part of the tree for some reason and cannot =\nbuild it all together? Or are you stepping into a module and trying to =\nbuild it by itself? I understand that there are limitations and there =\nneeds to be a way to build within the context of a reactor regardless of =\nwhere you are but I=E2=80=99m not sure I want us to have to support this =\nfeature forever.\n\nCan you provide a little more background please.\nwhich I\nugly?\nand\nhave\n\n## or\n\njavascript:;\n\nThanks,\n\nJason\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/125786750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/125799993", "body": "Igor Fedorenko  on dev@maven.apache.org replies:\nI am not sure I understand your concerns. Consider the following simple\nsource tree with a parent and single child project\n\n```\nsome:parent:1.2.3\n  some:module parent=3Dsome:parent:[1.0,2.0)\n```\n\nBefore this change Maven simply ignored local some:parent:1.2.3 when\nbuilding the module and always attempted to resolve\nsome:parent:[1.0,2.0) from repositories. With this change Maven resolves\nsome:parent:[1.0,2.0) from the source tree as expected.\n\nOr did I misunderstand the problem?\n\n--=20\nRegards,\nIgor\nrever.\nch I\nnd\n;>\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/125799993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/125802249", "body": "Jason van Zyl  on dev@maven.apache.org replies:\nI look local to mean =E2=80=9Clocal repository=E2=80=9D which is bad. =\nDealing with things only in terms of the reactor/MMP is the only thing =\nthat makes sense.\nsimple\nresolves\nthe\ncounter\nworking\nbuild\nbuild it\nbe\nyou\nfeature forever.\nwhich I\na\ntime\nthe ugly?\nand\nhave\nworking,\n\n## or\n\njavascript:;\nwill\ncome\n\nThanks,\n\nJason\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/125802249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/125933013", "body": "Stephen Connolly  on dev@maven.apache.org replies:\nSo I hit the original MNG-5840 with non-version range parents doing\nsomething like the following.\n\ngit clone {parent,client,server}\n\nNote that client and server both have\n<relativePath>../parent/pom.xml</relativePath>\n\nWorking away on server I spot a critical bug that needs fixing.\n\ncd server\ngit stash # so that I can switch branches easily\ngit checkout stable\ngit stash pop # recover my WIP\ngit add -p # add only the fix from the large set of unrelated changes\ngit commit -m \"critical fix\"\ngit stash # so that I can take the remaining WIP back to master\ngit checkout master\ngit merge stable # we always merge from stable up to master\ngit checkout stable\nmvn release:prepare release:perform\ngit checkout master\ngit merge -s ours stable # mark the pom changes for release as merged\ngit push origin stable master\ngit stash pop # recover the WIP and clear the stash list\ncd ..\n\nand continue working\n\nI expect that the `mvn release:prepare release:perform` will be ok... but\nthe release:prepare blew up because parent's stable branch doesn't have the\nsame findbugs sensitivity and as a result when using the newer release of\nparent the build fails due to the findbugs complaining about potential null\npointers that are not actual null pointers.\n\nNow I'd be ok if we got as far as release:perform as that would be in\nstable/target/checkout and thus that would be forced to resolve the\nreferenced pom... but that is just luck.\n\nThere are all sorts of changes that I might have made in the master branch\nof parent... I may have changed the dependency management... and thus I\ncould be using methods that are not available in the stable branch so that\nrelease:prepare will work but release:perform will fail to compile.\n\nIt is not reasonable to expect me to have to set up a separate clone of the\nproject just for maintenance porting.\n\nNow we could make the change for MNG-5840 just check if the parent version\ncontains one of the following characters [ ( or , since if any of those\nthree characters are missing it must be a single version. That would avoid\nneeding maven-artifact's version range parser... BUT now I cannot use\nparent version ranges with my workflow above... and having been burned\nmultiple times by this issue I would not be happy to ship a release that\nlet any MNG-5840 style failures fall through.\nto\na\nr.\nnd\ne\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/125933013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/125933437", "body": "Stephen Connolly  on dev@maven.apache.org replies:\nhe\nll\n\nIn case somebody asks, the reason I cannot just do\n\ncd ../parent && git checkout stable && cd ..\n\nis that in my case there are about 30 modules inter-related like this and\nthey all have different degrees of WIP which would need to be stashed\nbefore switching branches... and in any case I would actually have to check\nout the corresponding release version tags and not the stable branch as\nthat will have -SNAPSHOT versions and may have unreleased changes\nh\nt\nn\nd\n to\nd\nt\n a\ner.\nve\n\n## r\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/125933437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "basovnik": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/45078998", "body": "It may be more clear and precise, but `bundle` type is already being used ([7300+](http://search.maven.org/#search|ga|1|p%3A%22bundle%22) times). As far as I know, `osgi-bundle` is used [too](http://felix.apache.org/site/apache-felix-maven-osgi-plugin.html), but not so much... We can add both types..\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45078998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45094172", "body": "I understand your reasons but there is a little conflict with [dependency plugin](http://maven.apache.org/plugins/maven-dependency-plugin/get-mojo.html#artifact).\n\n```\n-Dartifact=groupId:artifactId:version[:packaging][:classifier]\n```\n\nFollowing command does not work:\n\n```\nmvn dependency:get -Dartifact=org.jbpm:jbpm-audit:6.0.1.Final:bundle\n```\n\nAt least I would notice in the plugin description that `packaging` can have only [default values](http://maven.apache.org/pom.html#Maven_Coordinates):\n`pom`, `jar`, `maven-plugin`, `ejb`, `war`,`ear`, `rar`, `par`\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45094172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "pbenedict": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/45096124", "body": "Personally I prefer \"osgi-bundle\" too, but the argument is moot since new types are not being allowed into core. I agree with Jason. Jason's direction should allow Maven to scale better by allowing plugins to define the packaging types.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45096124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "mosabua": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/45811127", "body": "if we need to change something in the book - I can take care of that. \n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45811127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/112198560", "body": "Enforcer plugin is for build time enforcement. Prerequisite is build time as well as plugin runtime requirement. As such it should not be deprecated. Documentation update would however be useful.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/112198560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/maven/comments/23189321", "body": "Hahah ... I just ran into this resulting into an NPE in my Maven Repository Provisioner and was going to patch only to find that you already fixed it. Thanks @ifedorenko .  Now I just need a 3.5.1 release ;-) ", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/23189321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "talios": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/45968040", "body": "How will this affect the maven-release-plugin's release:prepare-with-pom goal? Will the parent version reference be automatically resolved and written correctly, or will we need to update m-r-p?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45968040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/45975916", "body": "With regards to `release:prepare` I agree, but here I'm talking about release:prepare-with-pom which generates a \"resolved pom\" in relation to version ranges, in that instance - we should be consistent.\n\nIt also worries me slightly that with all the existing issues with version ranges, introduces magical \"upper bounds checks in parents only\" will cause issues - as that somewhat implies we're not got any centralised rules around range resolution ( this is a contentious issue as there is a long standing issue wanting -SNAPSHOTs to be excluded from ranges, but only under certain circumstances - i.e. integration testing may want SNAPSHOTs, but compilation should nominally only use released artifacts ).\n\nIdeally - this could be solved as part of the POM 5 change, if `<version/>` had for instance a `includeSnapshots` or `allowOpenRange` attribute or something - and force the _default_ to be no SNAPSHOTs, no open ranges.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/45975916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/46076519", "body": "Interesting about the version range changes in aether there - whilst the [2.2.*] range is nice, that doesn't offer SNAPSHOT exclusion - unless the `VersionFilter` is being exposed somehow to maven - I don't see maven directly supporting that. Tho this discussion should be taken off-issue I guess.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46076519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/46105389", "body": "wow - what the hell happened to the formatting here?\n\n@jvanzyl said in one part \"In the case of my current setup we simply disallow SNAPSHOTs entirely.\" - I'd love to know the actual workflow of this, do you _never_ do an `mvn install`, which would put a -SNAPSHOT into your local repository - and thus, be resolved.\n\nThis would great for the hangout discussion.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46105389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "a-horst": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/46279524", "body": "Just to get it right: for the ITs I have to clone https://git-wip-us.apache.org/repos/asf/maven-integration-testing.git and then use my local SNAPSHOT build (maven-3.2.2-SNAPSHOT) with the patch/fix to build (mvn install -Prun-its) the maven-integration-test project?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46279524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/46286090", "body": "Ok, so I executed the ITs and faced two problems:\n1. We use our own dedicated Nexus OSS and hence have custom user settings (with mirror etc.). A lot of ITs fail because of that; they all pass without custom user settings. I might have missed it but it should be documented somewhere.\n2. Only IT [MNG-4625](http://jira.codehaus.org/browse/MNG-4625) is failing but I doubt this is related to the change above.\n\nI'll give it another try to make sure it's not caused by encoding issues and I will also run the ITs with maven-3.2.1.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46286090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/46291995", "body": "So, executing ITs with maven-3.2.1 also fails [MNG-4625](http://jira.codehaus.org/browse/MNG-4625).  mng-5591-workspace-reader-module-a also fails but I assume that's a different issue. This is the stack (sorry for the German message):\n\n```\ntestit(org.apache.maven.it.MavenITmng4625SettingsXmlInterpolationWithXmlMarkupTest)  Time elapsed: 0.01 sec  <<< ERROR!\norg.apache.maven.it.VerificationException: Exit code was non-zero: 1; command line and log =\nC:\\Program Files\\Apache\\apache-maven-3.2.1\\bin\\mvn --global-settings C:\\Users\\ahorst\\git\\maven-integration-testing\\core-it-suite\\target\\test-classes\\settings.xml --settings settings.xml -e --batch-mode -Dtest.prop=&x=y<> -Dmaven.repo.local=C:\\Users\\ahorst\\.m2\\repository validate\n\">\" kann syntaktisch an dieser Stelle nicht verarbeitet werden.\n\n        at org.apache.maven.it.Verifier.executeGoals(Verifier.java:1359)\n        at org.apache.maven.it.Verifier.executeGoal(Verifier.java:1235)\n        at org.apache.maven.it.Verifier.executeGoal(Verifier.java:1229)\n        at org.apache.maven.it.MavenITmng4625SettingsXmlInterpolationWithXmlMarkupTest.testit(MavenITmng4625SettingsXmlInterpolationWithXmlMarkupTest.java:57)\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46291995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/46325077", "body": "I already got it running in Eclipse (pretty straight forward with m2e etc.). Actually the failed test [MNG-4625](http://jira.codehaus.org/browse/MNG-4625) never seemed to have passed: see the respective job history of [core-it-maven-3-win](https://builds.apache.org/view/M-R/view/Maven%20Core%20ITs%20%28unstable%29/job/core-it-maven-3-win/).\n\nI could narrow down the problem to the use of the special characters in the command which are the actual subject of the test (the property `test.prop=&x=y<>`). However they seem to break the eventual execution of the Maven build for the IT. While the CmdShell (the concrete Shell for Windows; see [maven-shared-utils](https://github.com/apache/maven-shared/tree/trunk/maven-shared-utils/src/main/java/org/apache/maven/shared/utils/cli)) correctly quotes the shell invocation it seems like for the Maven execution (on Windows) the special characters need to be quoted as well.\n\nI adjusted the IT to use a quoted assignment and the IT succeeds:\n\n```\nverifier.setSystemProperty( \"test.prop\", \"\\\"&x=y<>\\\"\" );\n```\n\ninstead of\n\n```\nverifier.setSystemProperty( \"test.prop\", \"&x=y<>\" );\n```\n\nTaking into account that MNG-4625 apparently never succeeded on Windows, I guess we can say that ITs succeeded with the proposed changes (I just simply didn't run ITs on Unix).\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46325077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/46421059", "body": "This is mine:\n\n```\nApache Maven 3.2.1 (ea8b2b07643dbb1b84b6d16e1f08391b666bc1e9; 2014-02-14T18:37:52+01:00)\nMaven home: C:\\Program Files\\Apache\\apache-maven-3.2.1\nJava version: 1.7.0_55, vendor: Oracle Corporation\nJava home: C:\\Program Files\\Java\\jdk1.7.0_55\\jre\nDefault locale: de_DE, platform encoding: Cp1252\nOS name: \"windows 8\", version: \"6.2\", arch: \"amd64\", family: \"windows\"\n```\n\nAs mentioned above, I have the same behavior as the [Maven CI Job](https://builds.apache.org/view/M-R/view/Maven%20Core%20ITs%20%28unstable%29/job/core-it-maven-3-win/).\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46421059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/48112720", "body": "Any news on this? FYI: I used `cmd.exe` and `cygwin`.\n\nI see that you fixed the IT on [Jenkins](https://builds.apache.org/view/M-R/view/Maven%20Core%20ITs%20%28unstable%29/job/core-it-maven-3-win/602/changes#detail0). I'll pull the respective changes and run ITs again. I'll come back with the results.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/48112720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/48114857", "body": "Alright, so with Robert's fix of the [IT](https://builds.apache.org/view/M-R/view/Maven%20Core%20ITs%20%28unstable%29/job/core-it-maven-3-win/602/changes) eventually all ITs succeed with the changes of this pull request:\n\n```\n[INFO] Maven ITs .......................................... SUCCESS [21:37 min]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 22:04 min\n[INFO] Finished at: 2014-07-06T17:30:14+02:00\n[INFO] Final Memory: 69M/421M\n[INFO] ------------------------------------------------------------------------\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/48114857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "FredipusRex": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/46523185", "body": "You do realize that the current OR condition is actually out in use right now in many POM files, right? This was previously the subject of a patch (MNG-3106) - originally only one condition was accepted which was patched to allow for ORing of conditions - arguably the wrong thing to do, but it's pretty well understood out in the Maven community. While this patch finally matches Maven to the Sonatype book, it will break a lot of POMs without recourse other than multiple, near duplicate activations.\n\nThe right way to fix this would have been to add the ability to specify the condition (AND, OR), perhaps through a set of tag attributes.\n\n```\n<activation>\n    <property>\n        <name>JDKCheck</name>\n        <value>true</value>\n    </property>\n    <property>\n        <name>NeedsJava4or5</name>\n    </property>\n    <os group=\"1\" condition=\"OR\" group-condition=\"AND\">\n        <name>Linux</name>\n    </os>\n    <jdk group=\"1\">1.6</jdk>\n    <jdk group=\"2\" condition=\"AND\" group-condition=\"OR\">1.4</jdk>\n    <jdk group=\"2\">1.5</jdk>\n</activation>\n```\n\nAll conditions now belong to a group - either the default group or a named group attribute. Members of the default group have no attributes and are AND'd together (keeping the functionality of your patch). There do not need to be any members of the default group - in which case, it acts purely as glue to named groups.\n\nOne member of each named group must indicate how the group relates to the default group via the condition attribute and how the members of the group are related to each other via the group-condition attribute.\n\nThis allows compact but complex relationships. The above example is activated when the JDKCheck property is true and the NeedsJava4or5 property exists and the JDK is 1.4 or 1.5, or when compiling under Linux and the JDK is 1.6. It does not allow infinite numbers of levels and parenthetical statements, but does provide for most common build scenarios. When there are no members of the default group, it should be assumed to be not activated and the first group (if any) with the AND condition should be considered the default group. This allows something like group 1-OR with group 2-AND to act like an either/or choice.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46523185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mikebrock": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/46737130", "body": "I think that could be pretty cool. I see no reason why not. \n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/46737130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "markdingram": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/49514275", "body": "already merged\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/49514275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "JigarJoshi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/61130522", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/61130522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/63268352", "body": "quiet option is too quiet, I originally wanted just to hide the transfer logs, sometime it can be annoying in CI systems\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/63268352/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "martin-g": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/61229172", "body": "@michael-o I think even `quiet` should/could prevent logging the transfer output.\nI just created a PR with the provided patch as requested by Jason van Zyl in the ticket to help with its processing.\nFeel free to improve it as you believe it would be the best!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/61229172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/63268182", "body": "@jvanzyl Yes. I don't need the new option.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/63268182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "martinschaef": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/61830233", "body": "Sorry, I don't have a JIRA account. Could you guys do that? I'm only testing my static analysis tool and already created dozens of JIRA accounts for other projects where my tool found bugs ;) \nI revised the code again according to the way initList is used elsewhere in the class - only the last commit is important.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/61830233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/62033548", "body": "http://jira.codehaus.org/browse/MNG-5721\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/62033548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ananich": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/66915459", "body": "Is there anything else I can do to help to merge this change?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/66915459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Tibor17": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/68410326", "body": "I wanted to have final field o `MavenProject#dependencyArtifacts`, but in that case two tests would fail due to `DefaultProjectDependenciesResolver#process()` iterates over empty collection.\n\nThe solution for the first test would be to compare hashCodes of collections in `DependencyContext#isResolutionRequiredForCurrentProject()`.\n\nGenerally the domain model is excellent, but the implementation is totally open and really terrible.\nThe worst is that open implementation can change the status of objects by any plugin, it can set any collection and share the collection in whole Maven. The collections are not thread-safe. The methods hashCode/equals are not autogenerated and we have to compare collections by identity `==`.\nThe models should be immutable and plugins should inject services modifying the models. Models should not have any setter and functionality. The setters should be in separate interface as a hint used by internal builders over calling model's constructor with thousands of params.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/68410326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/68440499", "body": "@jvanzyl \nThat's clear we must not break current users.\nYou kow my problem is, as always when i design any API, how much open the interfaces should be.\nHere I tried to make final fields handling concurrent collections, but after breaking two tests I had to break my code ideas. So it's hard to make perfect thread visibility, because here you have to use concurrent collections everywhere, break the shared collection instances and copy them everywhere, and run the tests million times by every single change with instance variable.\nAs I did in JUnit, the same regarding thread visibility, I had to struggle with another developer and it was really pain to talk with him due to he did not understand what i tried to explain what really happens in memory and so that theory is nice only on the paper.\n\nYou know, api with immutable model snapshots and modifiable services is much easier for making deterministic behavior. \n`private Provider<MavenProject> provider;`\n`private Service service;`\n`MavenProject currentSnapshot = provider.get();`\n`String pomProperty = currentSnapshot.getProperty(\"my-key\");// only getters`\n`service.setProperty(\"my-key\", \"new property value\");`\nThe snapshot instance (umodifiable) is not the same as the internal one in project which is modifiable.\nWasn't you thinking about some kind of API emulator or adapter in Maven 4?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/68440499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/68554366", "body": "@hboutemy \n@jvanzyl \nAny objections to push this?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/68554366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/68561294", "body": "@jvanzyl \nMy ant build says BUILD SUCCESS.\nI saw your TODO comments moreless related to immutable objects.\nCurrently the code is not ready for immutable objects and therefore it was simple toapply _concurrent_ collections.\nOne way or another immutable objects:\n- improve code clarity\n- safe enough in multiple-threads env\n- every s/w is spaghetti code, but using immutable objects you simply put the barriers between parts of the code and then the contributors are willing to make bigger changes and spend their spare time\n- if this speeds up the development, you have chance to push the compettitors away\n\nI am watching Maven Dev Hangout.\nWill be glag if you talk about Maven stability.\n\nThe method `#getMetadataList()` returns unmodifiable collection, but It can be changed.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/68561294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/68568625", "body": "The link should be in README.md.\nLook at README file @ JUnit and JavaHamcrest projects, where the most\nimportant is build status @ CloudBees and Travis\nhttps://github.com/junit-team/junit/blob/master/README.md\nhttps://github.com/hamcrest/JavaHamcrest\nWhy such important projet does not have privilegies in CloudBees and free\naccount?\n\nOn Fri, Jan 2, 2015 at 10:09 PM, Jason van Zyl notifications@github.com\nwrote:\n\n> Ant build? The ITs are in a separate repository. This may be helpful:\n> \n> http://takari.io/2014/06/01/contributing-to-maven-core.html\n> \n> There are are 700+ integration tests that need to pass for any change.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/apache/maven/pull/34#issuecomment-68562504.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/68568625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/68697988", "body": "Hi Jason, \n\nthe point of this patch is to force the devs to write `safe` code. Immediately as I have seen the code I recognized, same as Herve stated in my email, that the code is too open inside.\nThe patch is maybe good for one class, but I agree with you that it is not good for the architecture, and therefore I vote for immutable objects.\nThis means I recognized immutable objects as a good decision, but it's big change which needs the author(s) to improve the core.\n\nI wasn't aware of ITs.\nI would appreciate Jenkins build, like CloudBees or ASF machine, where I would be able to change the repo URL from master to my GitHub personal branch.\nI don't kow how about you guys, but keeping the PC running and building the core with every bug appeared with my code change consumes the electricity I have to pay.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/68697988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/68702414", "body": "Jason, \nDon't worry about this patch, I'll close it - since I have private copy and the diff.\nI will wait for your patch, and then I'll go through the diff and I will look for visibility issues again.\nI reported one concurrency issue in JIRA against Maven two years ago. Since then I don't build Maven modules in parallel - personal attitude.\nUsually the devs don't know that they have to think of Java concurrency at the point of architecture design. Usually they have no imagination of what happens with thread private copy of variables and when these copies reconcile with main memory via memory barriers and how this is related to Java Memory Model.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/68702414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/113717735", "body": "try-with-resources is cool.\n+1\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/113717735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "makigumo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/71620924", "body": "fixed in fbd6e53e838d3c77d689adeae19fa6de6ecc050f\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/71620924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mfriedenhagen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/71979108", "body": "@ananich: #35 should take care oft this and even tackles the other start scripts. Since I think Mavericks Mountain Lion, a JDK is not installed by default, so the first branches should not be a problem as anyone with a default /System Java has set or installed this on purpose.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/71979108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/127376555", "body": "Hello,.just out of curiosity: why did you use the old junit3 mechanism?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/127376555/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Stephan202": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/89738913", "body": "I can't seem to comment on [MNG-5786](https://jira.codehaus.org/browse/MNG-5786) anymore (comment button missing), presumably because of the impending Codehaus shutdown. So I'll continue the discussion here.\n\n@jvanzyl wrote:\n\n> The intended use and behaviour is to have one `.mvn` at the root of the multi-module project. By design we currently do not expect there to be multiple `.mvn` directories within one project tree. So I consider this behaviour correct.\n\nI understand wanting to keep the system simple and supporting only a single `.mvn` within the project tree. But as it stands, a \"rogue\" `.mvn` higher up, \"outside\" the project tree can silently impact the build. This can lead to hard to explain issues further down the line. As such, I suggest Maven either:\n1. Warns if more than one `.mvn` is found in the path from CWD to root;\n2. Fixes the code such that the \"nearest\" `.mvn` in the path from CWD to root always wins.\n\nOption 2 is no more difficult to understand than \"we support only one `.mvn`\" (as one does not even need to think about error cases) and can be achieved with a trivial patch; that's precisely what this PR proposes.\n\nSide note: if we feel uncomfortable considering any `.mvn` that may be outside the project tree, then the search logic should be extended with an extra termination condition: stop looking for a `.mvn` once the traversal up the directory tree reaches a directory that lacks a `pom.xml`. \n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/89738913/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/89845254", "body": "@ifedorenko: I have no such use case, and in fact I have not used the `.mvn` feature at all, yet. I found the issue simply by looking at the patch that originally introduced the feature (8ed9a1caa8890773b45c6c408a4e40acf4f4b0fd).\n\nTo reiterate: my thesis is that the current implementation of this feature makes needless assumptions, can cause confusion, and can cause a build in some environment _A_ to yield different results from a build in some environment _B_, simply because of a `.mvn` in a (presumably) irrelevant location.\n\nI think that the patch can go some way to alleviate these issues. Alternatively, it'd be good for Maven to emit a warning under certain circumstances. That's all I propose. I have no strong opinion one way or another.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/89845254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/140189697", "body": "A variation on the proposed fix was merged in #58. So I'll close this PR.\n\n(I'll also delete by branch/fork, but the diff can still be viewed in [MNG-5786](https://issues.apache.org/jira/browse/MNG-5786).)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/140189697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "pcollaog": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/97145798", "body": "Great.. thanks for create the jira issue ;)\n\nOn Tue, Apr 28, 2015 at 1:04 PM, Jason van Zyl notifications@github.com\nwrote:\n\n> https://issues.apache.org/jira/browse/MNG-5813\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/apache/maven/pull/44#issuecomment-97120279.\n\n## \n\nFrancisco Collao G\u00e1rate\nLinuxUser #363300\nhttp://blog.pcollaog.cl\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/97145798/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/113517031", "body": "Any plans to fix this problem?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/113517031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/116327806", "body": "Close: https://issues.apache.org/jira/browse/MNG-5813\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/116327806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "birkedal": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/109946813", "body": "Looks like there are still problems on Solaris after applying the patch. It seams like it's the `$()` that is problematic. See this comment on [MNG-5658](https://issues.apache.org/jira/browse/MNG-5658): https://issues.apache.org/jira/browse/MNG-5658?focusedCommentId=14420034&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14420034\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/109946813/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/138463968", "body": "It works just fine after the switch to backticks :+1: \nI have no opinion on whether that other idiom is better or not.\n\nOne more little detail; if JAVA_HOME is not set I get `mvn: !: not found` from the exclamation mark in the test on line 175. I would guess the same applies for lines 144 and 147 as well.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/138463968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "barthel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/120301859", "body": "I'll open a new pull request with a squashed commit and more explanation.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/120301859/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/120420443", "body": "If you re-define the version as odd is a SNAPSHOT and even is a release, you have to change the internal version handling too.\n\nOr you split the repositories and push the releases into the public and the developer version into private repository. At one point you have to decide, if you resolve the developer or the stable version.\nThe stable version resolve has to work with the default version range resolver strategy.\n\nIf you need the developer version range resolver, your odd/even strategy and both repositories (public, private) has to be configured.\n\n---\n\nA possible odd/even strategy implementation has to check the artifact at `VersionRangeRequest` instead.\n\nIt is possible to write tests to ensure that only your artifacts are handled by the new strategy and third party artifacts are provided to default version range resolver.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/120420443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/120431206", "body": "My preferred strategy is to resolve only released versions within a version range (`\"onlyReleases\"`). If a developer needs a SNAPSHOT version, it is possible to insert the SNAPSHOT version directly without version range.\nFor now it is **NOT** possible to resolve only an released artifact at a version range if you have access to released **AND** SNAPSHOT versions (like the local repository).\nBut that is my case so I would like to give a more flexible way to react on the needs (discussed in the issue).\n\nFor now it isn't possible to change the strategy in a plugin or something like that. At the first time the strategies shipped with the Maven core (maven-aether-provider) are the only once.\n\nMaybe it is a more clear solution to implement a filter around the hard defined version range resolver. That's what the new strategies internally really are.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/120431206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/144993151", "body": "I closed this pull request and I come back soon with a less invasive filter solution.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/144993151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/144997575", "body": "Only b6d72699c8b0089351f797e217d635424c1ae5a2 contains the enhancements.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/144997575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/maven/comments/13804883", "body": "+1\nBut, I'm oriented on the current used pattern like in #setRepositoryEventDispatcher or #setSyncContextFactory.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/13804883/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "dsyer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/121934925", "body": "It looks like `$MAVEN_CONFIG` is already used to prepend to the command line arguments. Isn't that enough? There is no comment or any other usage of `$MAVEN_CONFIG` so it's hard to tell what the intent is.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/121934925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/122027101", "body": "My reading of the windows script is it works already (but it's harder to tell with batch scripts, for me at least).\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/122027101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "KostyaSha": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/124847267", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/124847267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "fbricon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/139963041", "body": "Seems to be duplicated by #40 \n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/139963041/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "phang98": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/142225342", "body": "The other commit is on branch, does it matter?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/142225342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/143642743", "body": "I'll look into the integration test part.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/143642743/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "revans2": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/145854660", "body": "@ifedorenko Without this kind of functionality using the shade plugin with multi-module projects is a huge pain, and would require us to use an external build system to coordinate the maven builds.  You have to fully build/install each shaded package independent of all other packages that depend on it.\n\nI understand that it is ugly to have the dependencies change as the build progresses.  I agree it really confuses things to run dependency:tree and see it be completely different from what is actually pulled in.  But it is not as bad as getting the wrong uber-jar that is missing things it needs.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/145854660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "davidmoten": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/maven/comments/6439715", "body": "what a mess, xml without schema!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/6439715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/comments/6440111", "body": "I was interested in writing tooling around composing plugins maximising\ntype safety for example but was disappointed that the definition of a\nplugin's configuration was not something I could reverse engineer\nsatisfactorily from the plugin.xml and in the process discovered that the\nplugin.XML didn't have an xsd making more guesswork out of the process. I\nused xpath to get stuff out of it in the end but I stopped work when I\nrealised that my only hope was parsing plugins' source code.\n\nI'm a big fan of XML always having an xsd but I probably won't be able to\ncheck out modello and get an xsd happening in the near future and I'm\nassuming for my interests that it won't help much either. I wonder if real\ntype information for configuration will turn up in plugin.xml sometime?\n\nThanks for chasing it.\nD\nOn 25 May 2014 18:14, \"Herv\u00e9 Boutemy\" notifications@github.com wrote:\n\n> on a pure principle, I know it looks awkward\n> on a practical one:\n> 1. did you ever try to write a plugin descriptor by hand? or do you always\n> let plugin-tools generate the descriptor (like the vast majority of plugin\n> developers)?\n> 2. are you able to give us a xsd description for the configuration element\n> content? and that fits into Modello descriptor, since Modello generates the\n> xsd from .mdo?\n> \n> I'm not a big xsd expert: any help appreciated to fix the plugin.mdo I\n> wrote to at least document the descriptor \"from a human point of view\" (ie\n> not seeing in general that I had to cheat with configuration element)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/apache/maven/commit/19247f363bee07d1afc6f8902f4083fd890fc47a#commitcomment-6439921\n> .\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/6440111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/comments/6440162", "body": "Yep some type information but limited. Collections of type T for instance\nthere is no mention of T in plugin.xml\nOn 25 May 2014 19:52, \"Herv\u00e9 Boutemy\" notifications@github.com wrote:\n\n> I'm a big fan of XML having an XSD too, we should be able to get along\n> with each other :)\n> \n> I had to reverse engineer too to write the plugin.mdo that actually\n> documents the descriptor structure as much as possible: but the real source\n> of information is still source code and examples, since this .mdo is only\n> intended as documentation, it's not used by Maven core at all\n> \n> but every plugin.xml is really used by Maven core to inject content, so\n> it's really what maven knows from any plugin/mojo: if you look at a\n> plugin.xml in any plugin, you'll see type information in every\n> parameter/type and configuration/name of param/@implementationhttps://github.com/implementation(= what I couldn't really describe as xsd, and even less make it generated\n> from Modello)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/apache/maven/commit/19247f363bee07d1afc6f8902f4083fd890fc47a#commitcomment-6440157\n> .\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/6440162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "PascalSchumacher": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/maven/comments/21488308", "body": ":(", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/21488308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "kwin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/32460741", "body": "This <prerequisites> is still supported for Maven Plugins (https://issues.apache.org/jira/browse/MNG-5501?focusedCommentId=14419813&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14419813), therefore rather than deprecating that I would add a hint, that this should only be used for packaging \"plugin\".\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/32460741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "jdillon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/64118607", "body": "Yup, working on that; marked the PR as WIP until I can get this sorted out\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/64118607/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "rajivpjs": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/71405276", "body": "I will work on this and have this done shortly. What do you mean by WDYT?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/71405276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/71407078", "body": "oh ok!!!\n\nI think it is a great idea. Usually, when I want to test for Exceptions I use annotation approach like having @Test(expected = Exception.class). However, looking at the existing examples of Apache I couldn't find any. So, I actually learnt the Rule approach is kind of equivalent. I am just applying the change.\n\nThanks.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/71407078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/72126082", "body": "Well spotted. Sorry, this was accidental. I will revert this change shortly.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/72126082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "rpatrick00": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/86667111", "body": "Like it or not, sh and cmd are different and have different capabilities.  In the sh script, we know that the directory exists because of the check for existence of the POM file.  I easily can add the POM file existence test to the cmd script and print the same errors if the pom file does not exist.\n\nIn the cmd script, I need to check for the existence of the extracted directory because if, for some reason, the directory extracted doesn't exist (e.g., a bug in the extraction code), the user gets a cryptic error.  The same is not true for the sh script.\n\nI will add the redundant check to the sh script too just for symmetry purposes...\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/86667111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/86667117", "body": "OK\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/86667117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "bellingard": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/88667025", "body": "As you have defined 3 axes for the JDK, you are going to execute and publish 3 SonarQube analysis for the same commit - which is useless. You should do it once only.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/88667025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}}}}