{"_default": {"1": {"gkleiman": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/336e932199643e88c0edbea7c1f08d4b45596389", "message": "Tested that agent resends unacknowledged operation updates on recovery.\n\nThis patch adds a test to verify that the agent resends unacknowledged\noperation status updates after a recovery.\n\nReview: https://reviews.apache.org/r/65182/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/60f23d870080c5d70963857cb06a50cf0d2825fb", "message": "Tested that operation updates dropped en route to master are resent.\n\nThis patch adds\n`StorageLocalResourceProviderTest.ROOT_RetryOperationStatusUpdate`\nwhich verifies that operation status updates are resent by the\nagent after being dropped en route to the master.\n\nReview: https://reviews.apache.org/r/65057/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/433a7c8acffeba57e9ffc6f395a6cb31151edfc7", "message": "Added some deduplication logic to `Master::updateOperation`.\n\nThis patch adds some logic to deduplicate the status updates that are\nadded to `Operation::statuses`. The logic is similar to the handling\nof task status updates, but we should revisit it in MESOS-8441.\n\nReview: https://reviews.apache.org/r/65137/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/b9bf0b54b85a054eb48b1f33de460b1f05e06b1c", "message": "Improved the documentation of protos related to operation feedback.\n\nReview: https://reviews.apache.org/r/64936/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/66e358cab298dce6418e146a2190232688981fd4", "message": "Fixed typos in SLRP tests.\n\nReview: https://reviews.apache.org/r/64963/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/8e002d91a6469b5fee98029f42986c6f66c9a89f", "message": "Cleaned up `ResourceProviderManagerHttpApiTest.ConvertResources`.\n\nThis patch makes the test follow the pattern used by the Default\nExecutor tests.\n\nReview: https://reviews.apache.org/r/64694/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/e8b505741a31a1394c138510fbf4331b478f308d", "message": "Stopped logging optional fields unconditionally in agent handler.\n\nThe operation ID and framework ID fields associated with operations\nand their status updates are optional, so they should only be logged\nif set.\n\nReview: https://reviews.apache.org/r/64590/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/760ab18c50a88dd81aafc4baafb6a6811cee7456", "message": "Renamed offer operation to operation.\n\nThe motivation for this renaming is that the Operation workflow\n(including status update, retry, etc.) might be re-used for non offer\nrelated operations in the future. As a result, we intentionally make the\nname more general to capture potential future use cases.\n\nThis patch also made the naming of protobuf message types, fields and\nvariable names that are related to Operations more consistent.\n\nThis patch also renamed master registry operation to `RegistryOperation`\nto distinguish that from `Operation`.\n\nReview: https://reviews.apache.org/r/64762/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/d807de1359feab7e0e13522d47cbb3099ec15daf", "message": "Renamed operation protos for consistency.\n\nReview: https://reviews.apache.org/r/64726/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/a4b1134e4e407d8523e6f1c53aa709fd6aaba003", "message": "Made OfferOperationStatusUpdateManager tests pass on Windows.\n\nReview: https://reviews.apache.org/r/64522/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/3f44f0e2ff13a54fd5c5822b5c5a30a9b6fec6de", "message": "Made the agent forward status updates for unknown offer operations.\n\nThere are some cases in which an agent can get offer operation status\nupdates for operations that it doesn't know about.\n\nIf this happens, the agent should forward the updates to the master\nwithout updating its internal state.\n\nReview: https://reviews.apache.org/r/64588/"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/235622772", "body": "I'm very very sorry for this, this PR is not ready yet.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/235622772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "greggomann": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/434ef5f431d62113d649e7a7c946c55d43a8034a", "message": "Resumed the clock if necessary when destroying test agent.\n\nBecause the `cgroups::destroy()` code path makes use of `delay()`,\nthe clock must not be paused in order for the destructor of the\ntest `Slave` to reliably destroy all remaining containers.\n\nThis patch updates the destructor to check if the clock is paused\nand, if so, resume it before destroying containers.\n\nReview: https://reviews.apache.org/r/65232/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/e34ed9602c72b7c72e13fb02cee54e4ddbf4c1b8", "message": "Added missing registry-related flags to the master config docs.\n\nReview: https://reviews.apache.org/r/65184"}, {"url": "https://api.github.com/repos/apache/mesos/commits/4959887230a7d7c55629083be978810f48b780a3", "message": "Added missing fields to the GET_MASTER operator API call.\n\nSeveral fields were present in the old master '/state' endpoint\nwhich are now not accessible via the V1 operator API. This patch\nadds two such fields to the response for the GET_MASTER call.\n\nReview: https://reviews.apache.org/r/65056/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/71160110bb9458a6e584350ccae7709ae05a5b0c", "message": "Made resource provider manager conditionally set framework ID.\n\nWhen forwarding operation status updates from resource providers\nto the agent, the manager was setting the framework ID\nunconditionally. This is a problem when OPERATION_DROPPED updates\nwith no framework ID are generated by the resource provider.\n\nReview: https://reviews.apache.org/r/65034/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/f6b33da25c3b4704db45a8ebd2cdbf5f439c9a4e", "message": "Made the agent check for offer operation update retries.\n\nLocal resource providers send all offer operation status updates\nusing the reosurce provider API. This patch makes the agent's\nresource provider message handler skip operation updates when an\nupdate is a retry.\n\nReview: https://reviews.apache.org/r/64505/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chhsia0": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/69e5e28ed0756f94c839a453052d268696d66a33", "message": "Added a storage local resource provider test for CSI plugin restart.\n\nThe test does the same as the `PublishResources` test, but it kills the\nCSI plugin container between each operation.\n\nReview: https://reviews.apache.org/r/64998/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/0e4d6f2ff8c0ebaa1a43e87ceab47108fd2eb31e", "message": "Sped up storage local resource provider unit tests.\n\nThis patch makes all storage local resource provider unit tests use an\nallocation interval of 50ms and decline offers with filters.\n\nReview: https://reviews.apache.org/r/65059/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/a0283a9f29354088e51f837ad61d776434070f3a", "message": "Renamed storage local resource provider tests to describe them better.\n\nReview: https://reviews.apache.org/r/64994/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/4924443fc6d1b44c33e3403564746bd964e18703", "message": "Added SLRP unit tests for profile updates and corner cases.\n\nThis patch adds the following storage local resource provider tests:\n\n`NoResource`: RP updates its state with no resources, and can recover\nfrom a checkpointed state that contains no resources.\n\n`ZeroSizedDisk`: CSI plugin reports a pre-existing volume with\nzero capacity.\n\n`SmallDisk`: CSI plugin reports a storage pool and a pre-existing volume\nwith sizes < 1MB.\n\n`NewProfile`: A new profile is added after RP updates its state.\n\nReview: https://reviews.apache.org/r/64992/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/32b85a2b06f676b68a16deaa8359ae64a1e8ead9", "message": "Fixed detaching task volume directories of destroyed frameworks.\n\nReview: https://reviews.apache.org/r/65231/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/ab6f0d2c8d76206caf0f66a06e92bfebca19dfbf", "message": "Made `GetNodeID` call depend on `PUBLISH_UNPUBLISH_VOLUME` capability.\n\nReview: https://reviews.apache.org/r/65229/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/bf2515d881a5fea8d0002978aa4f9ab553943c91", "message": "Documented the change in the Protobuf requirement.\n\nReview: https://reviews.apache.org/r/64823/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/e2b32b8774b86667803d86f4aac669b4014f1d62", "message": "Bumped the CSI spec bundle to 0.1.0.\n\nThe bundle is generated as follows:\n\n1. Download the tarball from the following link:\n   https://github.com/container-storage-interface/spec/releases\n2. Run the following commands:\n   tar zxf v0.1.0.tar.gz\n   mv spec-0.1.0 csi-0.1.0\n   tar zcf csi-0.1.0.tar.gz csi-0.1.0\n\nReview: https://reviews.apache.org/r/64964"}, {"url": "https://api.github.com/repos/apache/mesos/commits/b55396b067495fb2015446358b2c6b99a49b2c44", "message": "Updated README for the gRPC bundle.\n\nReview: https://reviews.apache.org/r/64957"}, {"url": "https://api.github.com/repos/apache/mesos/commits/307b4353207a4e7520eb7a16d760ed5086f36ff6", "message": "Bumped bundled gRPC to 1.8.3.\n\nReview: https://reviews.apache.org/r/64941/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/93bc00af70c355b30dba6d45bef129afe7338f01", "message": "Removed `nodist_liburi_volume_profile_SOURCES`.\n\nAdding generated protobuf headers into `nodist_*_SOURCES` for modules\ndoesn't enfource build dependencies in the generated makefile so the\nlines are removed.\n\nNOTE: Currently `liburi_volume_profile.la` cannot be built standalone.\nThe issue is tracked in MESOS-8370.\n\nReview: https://reviews.apache.org/r/64899/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/5c54732f4bec358a08f619baab822252ee9bb9a6", "message": "Renamed ACL fields for standalone container API for consistency.\n\nReview: https://reviews.apache.org/r/64901/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/d35170a9185c5a31b10d1ebd18d8799a7ff6fe41", "message": "Fixed CI build failure for `volume_profile.pb.h`.\n\nReview: https://reviews.apache.org/r/64897/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/30eb221614d851f252f7d008c157dafa8ac4ac05", "message": "Made protobuf version 3+ a hard requirement for building Mesos.\n\nReview: https://reviews.apache.org/r/64822/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/3a37f6019d22696581424865bd4c279f0be14439", "message": "Fixed compile error for `make distcheck`.\n\nReview: https://reviews.apache.org/r/64818/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/63f116a54e4a67d08535d9ddd03f1343ec0181a1", "message": "Fixed compilation for python eggs when gRPC is enabled.\n\nReview: https://reviews.apache.org/r/64763/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/1a365b7856c7bad4b7fc76c2e6726c8e2ccf1ceb", "message": "Fixed a bug that SLRP would fail if the state files do not exist.\n\nReview: https://reviews.apache.org/r/64756/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/866d4c8da0794b1d45ba0e57e857bf06dabdc295", "message": "Removed the usage of `Bytes::kilobytes()` and `Bytes::megabytes()`.\n\nReview: https://reviews.apache.org/r/64755/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/e3b8c1ab5e74a473c75ddb22acfb6f04a327def7", "message": "Removed `kilobytes()`, `megabytes()`, etc from `Bytes`.\n\nThese functios are removed because they are lossy. The unit conversion\nfor `Resource` should be explicit. For example:\n  `resource.scalar().set_value((double) size.bytes() / Bytes::MEGABYTES)`\n\nReview: https://reviews.apache.org/r/64754/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/835d2a2c483c72c389c5d38edefd05584af73e0f", "message": "Moved files related to volume profiles into `resource_provider/storage`.\n\nReview: https://reviews.apache.org/r/64727/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/4feb36706cd6a751e82378cd9d7a93928ccf7f19", "message": "Refactred `UriVolumeProfileAdaptor` and `VolumeProfileTest`.\n\nThis patch moves `uri_volume_profile.proto` to `volume_profile.proto`\nand made it a Mesos internal protobuf, to avoid loading the same\nprotobuf twice when loading the `UriVolumeProfileAdaptor` module.\n\nReview: https://reviews.apache.org/r/64725/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/78cc4e944209556b73461b7b6bbbbe47b43b4032", "message": "Added unit tests for storage local resource provider recovery.\n\nReview: https://reviews.apache.org/r/64596/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/098f9d8cddbdd357c501dde043a28783718b6e37", "message": "Added logging for container daemon.\n\nReview: https://reviews.apache.org/r/64711/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/db4a6a55b1a05c42e8a89f03035db709192c1c07", "message": "Dropping instead of failing offer operations with mismatched versions.\n\nReview: https://reviews.apache.org/r/64692/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/a36e2ec0d968b5ab48d14a9260151eeb8ade1c26", "message": "Updated logging for storage local resource provider.\n\nReview: https://reviews.apache.org/r/64664/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/69650845fa9bd88926d37fc7a2b5e40fbeb89b54", "message": "Fixed the calculation of available capacity test CSI plugin.\n\nThe size of existing volumes should be substracted away from the\navailable capacity. Otherwise, the total capacity will keep increasing\nevery time the plugin restarts.\n\nReview: https://reviews.apache.org/r/64665/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/cafd388e34e1f51606f1ca61e113dea0da2db78c", "message": "Fixed unit tests for volume profile module integration.\n\nThis patch loads `liburi_volume_profile` dynamically and uses it in the\nunit tests of storage local resource providers.\n\nNOTE: `volume_profile_tests.cpp` is removed from compilation to avoid\\\nloading `uri_volume_profile.proto` twice.\n\nReview: https://reviews.apache.org/r/64659/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/0f3bdd2ee12574111d4ba2938a6d70fd0a3ee4dc", "message": "Modified SLRP to use the VolumeProfileAdaptor module.\n\nThis changes the Storage Local Resource Provider's source of profile\ninformation from only using the default to using a VolumeProfileAdaptor\nmodule.\n\nThis patch is based on https://reviews.apache.org/r/64616.\n\nReview: https://reviews.apache.org/r/64658/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/28bf0891bf0b985153fa129e69fda0b7fd97d456", "message": "Refactored and fixed bugs for SLRP resource reconciliation.\n\nReview: https://reviews.apache.org/r/64644/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/b36152d6f2b6c07b6cf6cce641a8514b60913ff4", "message": "Printed out the source profile and ID for a disk resource.\n\n`Resource::DiskInfo::Source` is printed out in the following formats:\n\n  TYPE(profile,id):root\n\nIf the source has no profile and ID, then \"(profile,id)\" will be\nskipped. If either the profile or the ID is missing, the missing part\nwill be replaced with an empty string. If the source has no root path,\n\":root\" will be skipped.\n\nReview: https://reviews.apache.org/r/64591/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/5894f8632cb0072c7b24ac8181dc852d083e2263", "message": "Fixed a corner case for pre-existing volumes created by old RPs.\n\nWhen an agent failed over and registered as a new one, the RP will be\nregistered as a new one as well, but it could pick up the checkpointed\nstates for volumes created by an old RP as pre-existing volumes. We\nshould use the checkpointed capabilities for these volumes instead of\nusing the default mount or block capability.\n\nReview: https://reviews.apache.org/r/64621/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/7e432a9308c5b472aa29168617164a7ee69c02d2", "message": "Disabled checkpointing for OFFER_OPERATION_DROPPED in SLRP.\n\nReview: https://reviews.apache.org/r/64633/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/1b4f3864591f526646beb32339cc48d91853c9ae", "message": "Fixed unit error in storage local resource provider.\n\nReview: https://reviews.apache.org/r/64627/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/ae9d1033bcedf178007e9cea95386fa1f4e4822f", "message": "Fix compile error for bundled gRPC on Debian 8 with libc-ares-dev.\n\nThis patch adds the following commit to `3rdparty/grpc-1.4.2.patch`:\n\nhttps://github.com/grpc/grpc/commit/f8b6d6f\n\nThe gRPC patch file also includes the following patches originally:\n\nhttps://github.com/grpc/grpc/commit/807693b\nhttps://github.com/grpc/grpc/commit/43f7acf\nhttps://github.com/grpc/grpc/pull/11558\nhttps://github.com/grpc/grpc/pull/11565\n\nReview: https://reviews.apache.org/r/62876/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/cac8fdf0159bd112a1b8a6cc28e90613ab7950d4", "message": "Printed fatal messages in lambdas where errors happen in SLRP.\n\nReview: https://reviews.apache.org/r/64587/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/99db5fa8c6c676b150bdf4a7b6343c4a0d9703ee", "message": "Disabled `SlaveTest.ResourceProviderPublishAll` on Windows.\n\nThis test uses `sleep`, which does not exist on Windows.\n\nReview: https://reviews.apache.org/r/64593/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/4d895545891e09da063c4e845621557f75b4f6b3", "message": "Add a unit test for pre-existing volume support in SLRP.\n\nReview: https://reviews.apache.org/r/64584/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sambatyon": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/ddde325257359950b4a7b2c0bb88dd072330f744", "message": "Mesos flags related to ZooKeeper use SecurePathOrValue.\n\nUp until now the Mesos master flag `--zk` as well as the Mesos agent\nflag `--master` would leak ZooKeeper authentication credentials in\nboth logs and results for the `/flags` endpoint, if the credentials\nwere part of the configuration url.\n\nThis patch prevents this leakage if a user decides to store the\nZooKeeper url in a file and pass the file as a value to the flags\nmentioned above (using the preffix `file://`).\n\nReview: https://reviews.apache.org/r/65090"}, {"url": "https://api.github.com/repos/apache/mesos/commits/398f36150f6c6c6ed465f6d9323243815fbd2b3d", "message": "Added SecurePathOrValue for file flags which need not to leak contents.\n\nThe default behavior when serializing a flag, if its value comes from\na file (by using the prefix `file://`) is to show the contents of\nthe file instead of the path to the file.\n\nA common pattern for flags containing sensitive information is to\nstore the values in a secure file, however the default behavior\nof serializing flags causes these values to be leaked when\nserializing a subclass of `FlagsBase`.\n\nThis patch introduces the structure `SecurePathOrValue` so that\nthe default behavior is overriden and the path of the flag will\nbe shown instead of the flag value itself.\n\nReview: https://reviews.apache.org/r/65226"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bbannier": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/b3f70652c9ab035b2d9827aeac2209049fa61b2b", "message": "Updated `mesos-tidy` docker build setup for benchmarks.\n\nThis patch updates the `mesos-tidy` docker build setup to generate\n`benchmarks.pb.h` needed by the libprocess benchmark files added as\npart of `eb901173b8aa43b9fd1ab0f727ff5187982c4449`.\n\nWe also reorder the targets to be build in the script so that all\nproto targets are located close to each other and after manually\ntriggered 3rdparty dependencies (like e.g., protobuf). This should\nreduce redudant build invocations.\n\nReview: https://reviews.apache.org/r/65212"}, {"url": "https://api.github.com/repos/apache/mesos/commits/eb901173b8aa43b9fd1ab0f727ff5187982c4449", "message": "Added libprocess benchmarks to cmake build setup.\n\nTo make sure that `benchmarks` is built as part of the tests we add a\ndependency of `libprocess-tests` on `benchmarks` even though no actual\ncompile- or runtime dependency exists.\n\nReview: https://reviews.apache.org/r/65166/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/b4372acb1133973e605c9c618e144ba3f4f74c16", "message": "Fixed handling of terminal operations in `updateSlave` handler.\n\nAn offer operation can be become terminal between any previously\nreceived non-terminal offer operation status update and receiving an\n`UpdateSlaveMessage` (e.g., if the agent failed over, or when the\nagent was partitioned from the master).\n\nThe master will in its offer operations status handler attempt\nto apply operations which became terminal since the last update. At\nthe same time, the total resources in an `UpdateSlaveMessage` would\nalready contain the result of applying the operation, and we need to\nprevent the master from attempting to apply the same operation twice.\n\nThis patch updates the master handler for `UpdateSlaveMessage` to\ntransition pending operations which are reported as terminal without\nalso updating the resources on the agent as any update would already\nbe reflected in the new total from the `UpdateSlaveMessage.\n\nReview: https://reviews.apache.org/r/65072/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/24c71047c6a866bdbc83af90650828f239ee07b0", "message": "Fixed master's `updateOperation` for operations without framework ID.\n\nThis patch fixes logging of master's `updateOperation` for operations\nwithout framework ID. We also add a `CHECK` before the part updating\nresources or the allocator for non-speculated operations; currently\nnon-speculated operations can only be initiated from a framework, but\nnot from e.g., the operation API, and additional work is needed to\nsupport this.\n\nReview: https://reviews.apache.org/r/65096/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/69930fe93bcb513c16f4f575b504978d6e0d96dc", "message": "Made it possible to update an operation without mutating resources.\n\nIn certain situations it can make sense to update the state of an\noperation without also wanting to update resources. In this patch we\nmodify the master's `updateOperation` function to take an additional\nparameter signifying whether resources should be updated, or whether\nwe only care about updating the operation and tracking of used\nresources.\n\nWe will use this functionality in a subsequent patch to perform more\ncontained updates to agent state when processing `UpdateSlaveMessages`\nwhich contain both resources and operations (and where any terminal\noperations were already applied to the agent's resources).\n\nReview: https://reviews.apache.org/r/65095/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/dd866f9fd73858ef4d6369edddb4aa9a2f1c1a8f", "message": "Simplified master's `updateOperation` function.\n\nThis replaces repetitive code by instead using a helper variable which\nallows us to avoid branching. We can then also replace a `Try<bool>`\nwith a plain `bool` further simplifying the code.\n\nReview: https://reviews.apache.org/r/65093/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/3d8ef23c0ecec028641d7beee4c85233495a030b", "message": "Added example framework converting disk resources.\n\nThis patch introduces an example HTTP framework which transforms\n'RAW' disk resources from resource providers into 'MOUNT' volumes and\nsubsequently unreserves them.\n\nReview: https://reviews.apache.org/r/64932/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/164d99e1be7ab9901ca743a83fda3d3e1c3f2956", "message": "Fixed post-reviews for posting reviews from `master` branch.\n\nThe post-reviews script allows to specify the tracking branch against\nwhich to post reviews; we default to creating patches against\n`master`.\n\nThe script also contains some protection against posting reviews from\nthe tracking branch, but this protection seems to predate the tracking\nbranch configuration flag. Instead we also disallow posting patches\nfrom the `master` branch, even if the tracking branch is not `master`.\n\nThis patch fixes this sanity check to check that the current and\ntracking branch are different.\n\nReview: https://reviews.apache.org/r/65073/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/62518905824558f2569f11e2cd0e0c40775138de", "message": "Changed 'ConstantEndpointDetector' to have value semantics.\n\nThe class 'ConstantEndpointDetector' was holding a reference to one of\nits constructor parameters which introduces unnecessary brittleness.\n\nIn this patch we adjust the class to just hold a copy of the\noriginally passed value instead.\n\nReview: https://reviews.apache.org/r/64805/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/a1a7c6fb07898d22642ed76ce4068681ec05943e", "message": "Fixed handling of checkpointed resources for RP-capable agents.\n\nThe master will not resend checkpointed resources when a resource\nprovider-capable agent reregisters. Instead the checkpointed resources\nsent as part of the agent reregistration should be evaluated by the\nmaster and be used to update its state.\n\nThis patch fixes the handling of checkpointed resources sent as part\nof the agent reregistration so that the resources are used to update\nthe master state.\n\nReview: https://reviews.apache.org/r/64889/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/838850f92e30115947343db8f34966c0d5f4d43a", "message": "Added test of handling of checkpointed resources in reregistration.\n\nThis patch adds a test that confirms that the master resends\ncheckpointed resources to the agent on reregistration.\n\nReview: https://reviews.apache.org/r/64888/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/a09530eab31682f09a4db349038b9d5607fdfe1a", "message": "Future-proofed use of agent capabilities in tests.\n\nEven though currently the resource provider capability is the only\ncapability which can be toggled by users, when examining agent flags\nwe expect either no capabilities at all or a full set of capabilities\n(including both toggleable and required capabilities).\n\nThis patch cleans up test code agent capabilities by delegating the\nbulk of the work to a helper function providing a set of\ndefault-enabled capabilities and only adds a single capability to that\nset. This not only makes it clearer which exact capability a test\ncares about, but also future-proofs the code for the case where we\nextend the set of required capabilities in the future.\n\nReview: https://reviews.apache.org/r/64891/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/b4db23788a91fbd1f832e5033c3c0e82911a96d9", "message": "Made sure continuations using actor state are executed in actor context.\n\nIn `e273efe6976434858edb85bbcf367a02e963a467` we introduced layer\ncheckpointing to the provisioner, but did not make sure that\ncontinutations making use of internal state of the provisioner actor\ninstalled on futures where always executed in the actor's context.\nThis was problematic as continuations could be executed while actor\nstate was changing (data races), or after the the actor had terminated\n(use after free).\n\nIn this patch we instead defer execution of continutions to the actor\nowning the data.\n\nThis issue was identified with the clang-tidy `mesos-this-capture`\ncheck.\n\nReview: https://reviews.apache.org/r/64885/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/41cdab963121cead0c0937ac821c8d7cdbeddacf", "message": "Fixed resource provider driver disconnection handling.\n\nThe expectation for disconnection of the resource provider driver is\nthat disconnection handlers of the resource provider would be invoked\nand a new connection would be detected.\n\nThis patch fixed the issue by transition the future returned by\nConstantEndpointDetector into DISCARDED if a \"discard\" is initiated by\nthe caller. This will properly trigger `detected` callback to be called.\n\nThis patch is based on: https://reviews.apache.org/r/64806/\n\nReview: https://reviews.apache.org/r/64856"}, {"url": "https://api.github.com/repos/apache/mesos/commits/0685b3ce3569ae79d620ea301b422c2c2814d3ea", "message": "Fixed clang build on e.g., ubuntu16.\n\nThe clang version on e.g., ubuntu16 would emit a diagnostic message\nfor the increment inside the expectation,\n\n    ../../src/tests/log_tests.cpp:2439:120:           \\\n      error: expression with side effects has no effect\n\nWe reorder expressions to avoid above situation.\n\nReview: https://reviews.apache.org/r/64810/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/2d108e659e0b1a43956274a8b6c62066fdbc823f", "message": "Fixed an agent assertion.\n\nInitially it was valid to assert that 'checkpointResources' would\nnever be called for an agent with resource providers, but we have\nsinced moved to an implementation where we might perform checkpointing\nof agent resources (but never local resource provider resources).\n\nThis patch adjusts an assertion in the agent's 'checkpointResources'\nfunction to that reality.\n\nReview: https://reviews.apache.org/r/64750/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/699a5d2263f417df56dcad70cebe28ad284919d1", "message": "Fixed handling of resource provider updates without resources.\n\nOn master failover the master might learn about a resource provider\nwithout resources. This patch relaxes an assertion in the master\npermitting such scenarios.\n\nReview: https://reviews.apache.org/r/64600/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/aaef8563f0c1c149758975103c7066b7e0e81705", "message": "Made resource provider driver start explicit.\n\nThe driver for HTTP connections of resource providers is implemented\nas an actor which takes callbacks. It previously started listening for\nand handling of events on creation. We typically store drivers as\nmember of resource providers.\n\nThis setup is in general problematic since it e.g., becomes impossible\nto write safe callbacks using internal resource provider state; it was\ne.g., impossible to write a safe callback using the member driver to\nsend calls. This is due to a race between initialization of the member\ndriver and a newly created driver starting to handle events and\ntriggering callbacks making use of a not yet initialized member driver\nvariable. As a concrete example, with a 'MockResourceProvider' holding\na 'std::unique_ptr<Driver>' member tests would regularly hit this\nrace, even though the time window between creating a temporary to\nassign to the member and the assignment appeared to be small.\n\nThis patch introduces an explicit 'start' method to the driver which\nis to be used to explicitly start processing of events by the driver.\n\nReview: https://reviews.apache.org/r/64650/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/66dbf9932142b8444af19d9993a64529c7d4a891", "message": "Fixed handling of resource versions in agent oversubscribed updates.\n\nAgents can use 'UpdateSlaveMessage' to send updates on their\noversubscribed resources, their resource provider state, or both. We\npreviously assumed that 'UpdateSlaveMessage' from a resource\nprovider-capable agent would always contain the most recent resource\nversion of the agent even thought the field is marked 'optional'.\n\nThis patch simplifies the handling in the master to not assert a set\nresource version for 'UpdateSlaveMessage' for resource\nprovider-capable agents. Instead we explicitly and unconditionally\ncheck whether the field is set and handle only set values.\n\nReview: https://reviews.apache.org/r/64648/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/f036eb6119e79bd20792e4118934d101b8b0ce17", "message": "Removed unused import in proto file.\n\nImporting 'mesos/resource_provider/resource_provider.proto' became\nunnessecary after the cleanups in 'eeb09cbc1'.\n\nReview: https://reviews.apache.org/r/64599/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/bf4ac91bd31046e7c736439a9aad0369ca6c3ea2", "message": "Fixed style violations regarding whitespace around operators.\n\nReview: https://reviews.apache.org/r/64603/"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/230986849", "body": "Could you please move this to reviewboard so we got this growing discussion in the expected place? @drexin @haosdent @brat002 @ConnorDoyle \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/230986849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/278670383", "body": "@houht: Was this intended to be a bug report? If you, could you head over to https://issues.apache.org/jira/browse/MESOS and file a ticket there?", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/278670383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/19287295", "body": "@h0tbird Please file a JIRA ticket if this is an issue for you.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19287295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/126453567", "body": "Ups, this one should in fact have pointed to `mesos-containerizer.md`.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/126453567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/161343683", "body": "I created https://issues.apache.org/jira/browse/MESOS-8442 to track removal of these files; the fix is in principle trivial, we just need to make sure to not break existing tooling.\r\n\r\nRegarding this change, I was educated by a native speaker that the spelling here is actually valid and intended when I tried to perform a similar change, https://reviews.apache.org/r/46934/.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/161343683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "miroswan": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/a24be7195768d3e160a45b0d8d99bd1008518e0d", "message": "Updated api-client-libraries.md.\n\n* Adding Go client for the Mesos Operator API\n\nThis closes #258"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rukletsov": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/a9f5ef3a497151a7539172db3f30bfc329b5fa81", "message": "Flattened continuation chains in containerizer for readability.\n\nReview: https://reviews.apache.org/r/61811/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/19cf3068b81355818a9c4cdb797883f2b73cdbce", "message": "Rewrote some comments in switchboard.cpp for clarity."}, {"url": "https://api.github.com/repos/apache/mesos/commits/18879df50c78a4d1550a29a9cc08209eb7f82eb0", "message": "Fixed a typo in \"switchboard.cpp\"."}, {"url": "https://api.github.com/repos/apache/mesos/commits/9c03a463c1ac8f63dc00255945a04016c45f04e9", "message": "Logged socket create/connect failures on warning level.\n\nIf a socket create or connect failure occurs during link() or send(),\nthe reason for error is not propagated to the library user. Also, the\ndata being sent or queued is silently dropped on the floor. The socket\ncode does not log itself on a higher level when an error situation\noccurs. The only trace is the log entries touched in this patch:\nhaving them at warning level will significantly simplify debugging.\n\nThis patch also consistently logs send / link target.\n\nReview: https://reviews.apache.org/r/65048/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/f44a2d783413ce408aee9a99611a21f58307250c", "message": "Updated health check doc with 3xx redirects.\n\nReview: https://reviews.apache.org/r/64980/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/223aad37ee034283c82afa9b33a7db9d4959646c", "message": "Removed redundant `struct` prefix in \"linux/ns.cpp\".\n\nReview: https://reviews.apache.org/r/64807/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/5517db067054327aeb333a8cc2678da218a4cc93", "message": "Fixed the type-punned pointer and strict aliasing issue.\n\nDereferencing a pointer cast from a different type of pointer\nviolates the so-called \"strict aliasing\" rule, which is undefined\nbehaviour and might lead to bugs when compiler optimizations are\nenabled.\n\nFor more information on this topic, see\nhttps://blog.regehr.org/archives/959\nhttp://alas.matf.bg.ac.rs/manuals/lspe/snode=153.html\n\nReview: https://reviews.apache.org/r/64686/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/b44e36289320ac2cf9e8fa80bd7905bc44cd4a87", "message": "Improved the comment around the union in ns::clone().\n\nReview: https://reviews.apache.org/r/64685/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/253c2899b809affc2cd408c812eb59e42dbffdde", "message": "Updated 1.4.2 CHANGELOG."}, {"url": "https://api.github.com/repos/apache/mesos/commits/769108e94a7c7834c44e01091a9940354eb3f6e4", "message": "Terminated driver-based executors if kill arrives before launch task.\n\n`ExecutorRegisteredMessage` or `RunTaskMessage` may not be delivered\nto a driver-based executor. Since these messages are not retried,\nwithout this patch an executor never starts a task and remains idle,\nignoring kill task request. This patch ensures all built-in driver-\nbased executors eventually shut down if kill task arrives before\nthe task has been started.\n\nReview: https://reviews.apache.org/r/64033/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/b2eddcfe0ede4725208ae33c8c7f56563ff10514", "message": "Ensured executor adapter propagates error and shutdown messages.\n\nPrior to this patch, if an error, kill, or shutdown occurred during\nsubscription / registration with the agent, it was not propagated back\nto the executor if the v0_v1 executor adapter was used. This happened\nbecause the adapter did not call the `connected` callback until after\nsuccessful registration and hence the executor did not even try to\nsend the `SUBSCRIBE` call, without which the adapter did not send any\nevents to the executor.\n\nA fix is to call the `connected` callback if an error occurred or\nshutdown / kill event arrived before the executor had subscribed.\n\nReview: https://reviews.apache.org/r/64070/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/47392cf9f9024718550c69bcef9319560b47d5c7", "message": "Ensured command executor always honors shutdown request.\n\nReview: https://reviews.apache.org/r/64069/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/44a702a1b26963040e6cb6c362b7f01e5b4ef097", "message": "Promoted log level to warning for disconnected events in exec.cpp.\n\nWhen the executor library receives messages while being disconnected,\nit might indicate an out-of-order message delivery or lost messages.\nThis should be logged at the warning level to simplify triaging.\n\nReview: https://reviews.apache.org/r/64032/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/3547410ad3601f4bdc75f3b984c7e825ba323e8f", "message": "Disabled flaky PartitionedSlaveReregistrationMasterFailover."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/206217129", "body": "Pushed:\nCommit: dd29b2bcb60c54556559264ec236a7f5eeaaca9e [dd29b2b]\nAuthor: Alberto alberto.delbarrio.albelda@gmail.com\nDate: 5 Apr 2016 10:00:33 CEST\nCommitter: Alexander Rukletsov alexr@apache.org\nCommit Date: 6 Apr 2016 10:27:58 CEST\n\nFixed a typo in fetcher doc.\n\nhttps://github.com/apache/mesos/pull/96\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/206217129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/214990574", "body": "Could you please close this pull request?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/214990574/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/214991812", "body": "```\nCommit: 321cd2aa651c68b8a5863c96f8754f7f5ed0d424 [321cd2a]\nAuthor: Stian Soiland-Reyes <stain@apache.org>\nDate: 22 Apr 2016 16:49:09 CEST\nCommitter: Alexander Rukletsov <alexr@apache.org>\nCommit Date: 27 Apr 2016 09:16:29 CEST\n\nAdded 0.28.1 download link to the stable releases page.\n\nhttps://github.com/apache/mesos/pull/97\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/214991812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/214991887", "body": "I've pushed this to HEAD, could you please close the PR?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/214991887/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/218097967", "body": "I've adjusted the placing (we sort companies alphabetically) and committed this.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/218097967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/220271611", "body": "CC @hausdorff \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/220271611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/220271622", "body": "CC @hausdorff \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/220271622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/231354265", "body": "Could you please update your RR with suggestions from Adam? \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/231354265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/231472331", "body": "Why would we want to back port such change?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/231472331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/233599610", "body": "Could you please close this PR since there is a review instead now?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/233599610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/70072622", "body": "It looks like the common pattern is to switch on the type. Could you please follow this pattern? You can convert `has_*()` into `CHECK`s.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/70072622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/85733844", "body": "This line contains trailing whitespaces.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/85733844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/85733901", "body": "Entries are sorted alphabetically in this file.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/85733901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/143264159", "body": "Shouldn't we remove `\"task\": ` instead?", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/143264159/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ArmandGrillet": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/634c8af2618c57a1405d20717fa909b399486f37", "message": "Updated tests to use `createCallSubscribe`.\n\nUpdate all the tests that send v1 API SUBSCRIBE calls\nto use the `createCallSubscribe` test helper.\n\nReview: https://reviews.apache.org/r/63661/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/4d263688a7cdb83b412570b4b4915e73eb827b12", "message": "Updated support/mesos-style.py to build the virtualenv less often.\n\nInstead of just checking if the virtual environment exists, we now\nalso check if it is required to lint the modified files or not.\n\nThe virtual environment will thus be built when using the script as\na git hook only if JavaScript or Python files have been modified.\n\nReview: https://reviews.apache.org/r/64683/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/82979512bbdabb53318bcfef37729355917fb46c", "message": "Added logging based on container class.\n\nThis change adjusts log level based on the container class.\nIf the class is `DEBUG` we print the log entry at a verbose\nlevel 1, otherwise we print it at the `INFO` level.\n\nWe use the added macro in mesos containerizer so that COMMAND\nchecks cause less INFO logs (15 lines instead of 26 before).\n\nReview: https://reviews.apache.org/r/63953/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/e809c3eea5058ea9d956fc5e97222b91fa9ef6ba", "message": "Added containerClass() to MesosContainerizerProcess::Container.\n\nThis function always returns a ContainerClass, with `DEFAULT` being\nthe default value returned. Also simplifies the conditional\nstatements in mesos/containerizer.cpp to use the function added.\n\nReview: https://reviews.apache.org/r/64575/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/da2fc8da2446346d9f5369dafa7db1345f0541cf", "message": "Improved logs displayed after a slave failed recovery.\n\nAdd some steps to clean the Docker daemon\nstate used by the Docker containerizer.\n\nReview: https://reviews.apache.org/r/64379/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nfnt": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/8cf6b0882e8e393702c673e2b29ac6781cec0b85", "message": "Added a resource provider test case.\n\nReview: https://reviews.apache.org/r/65126/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/75659c9613b768cde6ca8afe7fbdaa1306b0cef8", "message": "Added a helper function for resource provider tests.\n\nReview: https://reviews.apache.org/r/65125/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/f6d7cd6da41b0d43c0923dea35531775850c0b5e", "message": "Moved agent response code into 'protobuf_utils.cpp'.\n\nReview: https://reviews.apache.org/r/65043/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/c88c2e241c32e917e58df3f458d5905f1688c1f7", "message": "Added validation for operations applied on resource provider resources.\n\nSome operations can be provided with multiple resources. As we currently\ndon't support operations that use resources of multiple resource\nproviders, validation has been added to make sure that these resources\nare from a single resource provider.\n\nReview: https://reviews.apache.org/r/64916/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/7db362c9e3428d72bc20b549d1988d7eb40c8fca", "message": "Fixed a crash when resubscribing resource providers.\n\nIf a resource provider resubscribed while its old HTTP connection was\nstill open, the agent would crash, as a continuation would be called\nerroneously. This continuation is now only called when a HTTP connection\nis closed by a remote side (i.e. the resource provider) and not when\nthe resource provider manager closes the connection.\n\nReview: https://reviews.apache.org/r/64713/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/605b238d601b520c88143df9b9a3bcca1f705eca", "message": "Introduced a 'UUID' type.\n\nReview: https://reviews.apache.org/r/64168/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/23d76defdf88a2d8d954dbe69559a005b72c4795", "message": "Stout: Used a namespace for UUID.\n\nTo avoid conflicts when introducing a UUID type in Mesos' namespace,\nStout's UUID type is put in the 'id' namespace.\n\nReview: https://reviews.apache.org/r/64380/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/7467c810ac3fc315482f04a08abcf9bb1d5d8c37", "message": "Mesos: Used a namespace for UUID.\n\nTo avoid conflicts when introducing a UUID type in Mesos' namespace,\nStout's UUID type is put in the 'id' namespace.\n\nReview: https://reviews.apache.org/r/64381/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/7c6b7d2073454af0641274db18c7d2ac92e581ef", "message": "Fixed a flaky test.\n\nCallbacks of already invalidated instances could be called in\n'ResubscribeResourceProvider' when simulating a resource provider\nrestart. This has been resolved by not only restarting a resource\nprovider's driver, but by also creating a new 'MockResourceProvider'\ninstance.\n\nReview: https://reviews.apache.org/r/64546/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "qianzhangxa": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/a3e1f9b82ec966017ffe1f9767b93965a7af9670", "message": "Updated Qian Zhang's entry in the contributors list."}, {"url": "https://api.github.com/repos/apache/mesos/commits/2c5da1b668de91e33831caafb18a3b4d71b26c69", "message": "Detached `virtualLatestPath` when recovering the executor.\n\nPreviously we miss to detach `/frameworks/FID/executors/EID/runs/latest`\nwhen we find the latest run of the executor was completed in the method\n`Framework::recoverExecutor`, that is a leak.\n\nReview: https://reviews.apache.org/r/65167"}, {"url": "https://api.github.com/repos/apache/mesos/commits/9585a2173970589f91858301c66479827c1370a9", "message": "Updated `ROOT_TaskSandboxPersistentVolume` to check `/files` endpoint.\n\nReview: https://reviews.apache.org/r/65070"}, {"url": "https://api.github.com/repos/apache/mesos/commits/e126254edd6abdad7f765dfa97ac8f695c88aca7", "message": "Made task's volume directory visible in the /files endpoints.\n\nIn MESOS-7225, we made a task can access any volumes specified in its\ndisk resources from its own sandbox by introducing a workaround to the\ndefault executor, i.e., add a `SANDBOX_PATH` volume with type `PARENT`\nto the corresponding nested container. It will be translated into a bind\nmount in the nested container's mount namespace, thus not visible in the\nhost mount namespace, that means the task's volume directory can not be\nvisible in Mesos UI since it operates in the host mount namespace.\n\nIn this patch, to make the task's volume directory visible in Mesos UI,\nwe attached the executor's volume directory to it, so when users browse\ntask's volume directory in Mesos UI, what they actually browse is the\nexecutor's volume directory. Note when calling `Files::attach()`, the\nthird argument `authorized` is not specified, that is because it is\nalready specified when we do the attach for the executor's sandbox and\nit is also applied to the executor's tasks.\n\nReview: https://reviews.apache.org/r/64978"}, {"url": "https://api.github.com/repos/apache/mesos/commits/5225a49c495bc7e3362bcee2d460d8c99111c7f4", "message": "Detached the virtual paths regardless of the result of gc.\n\nPreviously we only detach the following paths when the gc for the\nexecutor's sandbox succeeds.\n  1. /agent_workdir/frameworks/FID/executors/EID/runs/CID\n  2. /agent_workdir/frameworks/FID/executors/EID/runs/latest\n  3. /frameworks/FID/executors/EID/runs/latest\n\nBut the problem is, such gc may not always succeed, e.g., it may fail\ndue to the parent directory of the executor's sandbox already gc'ed.\n\nNow in this patch, we will detach those paths regardless of the result\nof gc.\n\nReview: https://reviews.apache.org/r/65156"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bmahler": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/bc9fe648038b6139cc9df709fdd58208ce0a08aa", "message": "Eliminated some unnecessary copying in the agent's HTTP operator API.\n\nReview: https://reviews.apache.org/r/65204"}, {"url": "https://api.github.com/repos/apache/mesos/commits/7d8ae37b022ac82c6945ff07ac980017f347b45e", "message": "Added a default move constructor for Result.\n\nReview: https://reviews.apache.org/r/65200"}, {"url": "https://api.github.com/repos/apache/mesos/commits/1ead3e669ed06198cb96a9ab901ad86df835402e", "message": "Added the v1 operator API performance improvements to the CHANGELOG."}, {"url": "https://api.github.com/repos/apache/mesos/commits/55200d2cfea70c0078b98b492fd87c876939acfa", "message": "Fixed some grammar in the quota documentation."}, {"url": "https://api.github.com/repos/apache/mesos/commits/39d917cc066f0fe1f74c11ecfff6f41c765b2fd3", "message": "Added a TODO for informing frameworks that an agent is unreachable.\n\nCurrently, we tell partition aware frameworks that unreachable agents\nare LOST. Ideally the partition awareness change would have included\nagent unreachability information rather than only task unreachability\ninformation.\n\nReview: https://reviews.apache.org/r/64931"}, {"url": "https://api.github.com/repos/apache/mesos/commits/74b2a0b7125d6ac5fc8fdc535f4cf57e67cbf061", "message": "Unified the marking agent unreachable logic in the master.\n\nThe logic for marking an agent unreachable in the master had two\nvery similar code paths that differed slightly across failover\nand steady state cases. This patch uses a single code path.\n\nUnfortunately, some slight differences were necessary, and a\nfailover boolean was introduced to accomodate them. Specifically,\nthe failover and steady state cases expect the agent to reside\nin the recovered and registered lists, respectively.\n\nReview: https://reviews.apache.org/r/64930"}, {"url": "https://api.github.com/repos/apache/mesos/commits/51a3bd95bd2d740a39b55634251abeadb561e5c8", "message": "Removed the inaccurate `slaves.transitioning` function in the master.\n\nThis function used to return whether the agent was transitioning\nbetween states, however it was updated in e510813f93e253480005ce\nto return only when the agent is recovered.\n\nThis patch removes the now confusing function in favor of just\ndirectly checking the state we care about in the reconciliation\nlogic. Since there were no other usages, the function is removed.\n\nReview: https://reviews.apache.org/r/64968"}, {"url": "https://api.github.com/repos/apache/mesos/commits/3290b401d20f2db2933294470ea8a2356a47c305", "message": "Abort libprocess when a Process throws an uncaught exception.\n\nPreviously, we logged the exception, terminated the throwing\nProcess, and continued to run. However, currently there exists\nno known user-level code that I'm aware of that handles the\nunexpected termination due to an uncaught exception.\n\nGenerally, this means that when an exception is thrown (e.g.\na bad call to std::map::at), the process terminates with a log\nmessage but things get \"stuck\" and the user has to debug what\nis wrong / kill the process.\n\nLibprocess would likely need to provide some primitives to\nbetter support handling unexpected termination of a Process\nin order for us to provide a strategy where we continue running.\n\nReview: https://reviews.apache.org/r/64939"}, {"url": "https://api.github.com/repos/apache/mesos/commits/cc1a3364273197b2d9b762228441319846c6b363", "message": "Documented a rate limiting bug in marking agents unreachable.\n\nIn the master failover case of marking agents unreachable, we\ndo not discard the rate limiting tokens when the agents re-register.\nThis means that the rate will be slowed down due to the no-op\noperations that continue to obtain rate limiting tokens.\n\nReview: https://reviews.apache.org/r/64929"}, {"url": "https://api.github.com/repos/apache/mesos/commits/45a2a1defba6883ad097c5163c9c9dd868671028", "message": "Added CHECKs to prevent accidental overwrite of slaves.unreachable.\n\nIn these cases, there should not be a previous entry within the\nunreachable agents map.\n\nReview: https://reviews.apache.org/r/64928"}, {"url": "https://api.github.com/repos/apache/mesos/commits/c398373f12ed99e3712609cb738702bccebc0591", "message": "Updated the master to use .at for const access to `slaves.unreachable`.\n\nTo prevent accidental insertion of entries when performing const\naccess, we use the `.at` operator.\n\nReview: https://reviews.apache.org/r/64927"}, {"url": "https://api.github.com/repos/apache/mesos/commits/e989b22664a8c7468eb028bccc2a5ead37f8501f", "message": "Removed gtest thread safe filter in libprocess tests.\n\nWe require pthread and therefore the GTEST_IS_THREADSAFE macro\nalways returns true within the libprocess tests. Similar to what\nis done in Mesos, we and exit if it's false.\n\nReview: https://reviews.apache.org/r/65013"}, {"url": "https://api.github.com/repos/apache/mesos/commits/064c0ee4c7347b63fca20d15d835b07b47e78a85", "message": "Added tests to ensure that libprocess metrics are alphabetical.\n\nFor human readability, we ensure that metrics are ordered\nalphabetically in the JSON response.\n\nReview: https://reviews.apache.org/r/65012"}, {"url": "https://api.github.com/repos/apache/mesos/commits/3d5bf3fb66f4a55edba47849aa3d1998fb64e943", "message": "Reverted back to alphabetical ordering of libprocess metrics in JSON.\n\nAt some point, the alphabetical ordering of metrics in the JSON\nresponse was lost. This doesn't matter for consumption within a\nprogram, but this loses readability for human users hitting the\nmetrics via a browser or curl.\n\nReview: https://reviews.apache.org/r/65011"}, {"url": "https://api.github.com/repos/apache/mesos/commits/24317f9d12757310b92d82b8a9bcd39a956b678d", "message": "Removed a stale TODO in the allocator.\n\nThis TODO was added when we used to skip roles with satisfied\nquota during the first phase of allocation. We no longer do\nthis since we now allocate reservations for these roles.\n\nReview: https://reviews.apache.org/r/64765"}, {"url": "https://api.github.com/repos/apache/mesos/commits/6e9a7a01940d0a593a605a618eb14af30abcbf05", "message": "Added a note about quota fixes in the 1.5.0 CHANGELOG."}, {"url": "https://api.github.com/repos/apache/mesos/commits/3035c8828345e7b0f33a4755d50139c8b693d567", "message": "Eliminated some unnecessary copying in the HTTP operator API.\n\nThis is only a minor portion of the performance improvements\nneeded to bring the v1 operator API close to the v0 API\nperformance.\n\nReview: https://reviews.apache.org/r/64741"}, {"url": "https://api.github.com/repos/apache/mesos/commits/cc3ee7aad3bee10dc4130ab2b39b89dddea8f4bb", "message": "Fixed the volume profile related build breakage.\n\nDue to some lacking ifdef guards around GRPC being enabled,\nthe build broke for those that don't enable GRPC."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/22743271", "body": "Hey deric, we've since merged that file with the 'High Availability' document. We'll update the website to kill the reference to it, thanks for reporting!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/22743271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/23239089", "body": "The incubator repository is now obsolete, given we've graduated and migrated to a new git repository.\n\nAs an FYI, we currently only use Apache's Review Board for code reviews. However, I'd love to have some tooling in place to accept simple github pull requests like this one.\n\nWe also purely use JIRA as a means for tracking issues, I filed an issue here: https://issues.apache.org/jira/browse/MESOS-665\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/23239089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/24624807", "body": "Hi Andrew, we use Apache's ReviewBoard for patches, although we'd love to see some tooling in place so that people can send simple pull requests like this one!\n\nhttps://reviews.apache.org/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/24624807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/27272556", "body": "Awesome! Can you send this via the apache ReviewBoard?\n\nhttps://reviews.apache.org/groups/mesos/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/27272556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/46711186", "body": "Hi Ken, it looks like the asf bot didn't close this when I committed your patch. Could you close this request?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/46711186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/71957729", "body": "Thanks Arnaud! Nice, there will be built-in HTTPS support in Mesos at some point, you may want to chime in here:\n\nhttps://issues.apache.org/jira/browse/MESOS-1825\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/71957729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/262127137", "body": "I pushed this with some minor changes to make it consistent with the other entries.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/262127137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/15443932", "body": "I'm not sure that /tmp/mesos is the best example for this as it implies that it is ok for the data to be wiped when /tmp is cleaned by the OS.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/15443932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/48921014", "body": "Can we omit \"core facility\" here? It seems inconsistent with the rest of the items in this list, where we've just included the organization name.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/48921014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/89030359", "body": "I think the current ordering is alphabetical based on the name of the title, can you place this after \"Building Applications...\" and before \"Mesos in Action...\"?", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/89030359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/89031027", "body": "Also it looks like you don't want to open a new class=row div here. You're missing the title text as well. If you have a look at the other entries you can see the expected format.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/89031027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/89031974", "body": "How about \"is a distributed scheduled job cloud solution designed with HA and fault-tolerance in mind. It focuses on horizontal scaling, and provides transient and daemon jobs, event and schedule based job triggers, job dependencies, and job history.\"\r\n\r\nI tried to rephrase this a bit, does it still sound accurate?", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/89031974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/140382041", "body": "Let's put running after starting.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/140382041/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/140382123", "body": "A TODO here for adding per-framework metrics so that we don't have to loop over the tasks would be great.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/140382123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/142247344", "body": "2 space indents", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/142247344/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/142247472", "body": "2 space indent, would also be good to warn the reader here that this value is relied on for the CSS", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/142247472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/161334491", "body": "We should leave as 'iff' since this is a short form of \"if and only if\". Ditto on the other cases.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/161334491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/161334849", "body": "I'm inclined to leave in the extra \"e\" since I believe both spellings are acceptable FWICT and we have more with the extra \"e\":\r\n\r\n\u279c  mesos git:(master) \u2717 grep -Ri acknowledgements src | wc -l\r\n     149\r\n\u279c  mesos git:(master) \u2717 grep -Ri acknowledgments src | wc -l\r\n       6\r\n\r\nDitto for the other cases.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/161334849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/161337083", "body": "Sure, however this file is actually generated from source, so the change would need to be made there:\r\nhttps://github.com/apache/mesos/blob/1.4.0/src/files/files.cpp#L352-L371\r\nhttps://github.com/apache/mesos/blob/1.4.0/3rdparty/libprocess/include/process/help.hpp#L82-L90\r\n\r\nI think @bbannier was looking into whether we could remove generated markdown since they're no longer needed. We now generate them at the time of publishing the website.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/161337083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jpeach": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/cc010f509a9a1a8639ffef1985549352812fbc14", "message": "Forced the Docker image delete on build failure.\n\nWhen a Docker build fails, force the `rmi` operation so that we don't\nleave orphan containers on the ASF build agents."}, {"url": "https://api.github.com/repos/apache/mesos/commits/04dd7f32b5cce29c68e20611580dc6bdc61fce11", "message": "Narrowed task sandbox permissions from 0755 to 0750.\n\nSince task sandboxes can contain private data, we should not\nmake them accessible to others by default. This changes all the\nplaces that create a task sandbox directory to use a helper API\n`slave::paths::createSandboxDirectory` that consistently deals\nwith setting the directory mode and ownership.\n\nA number of tests depended on the previous behavior where\nfailing to change the ownership was logged but did not cause\na failure. Depending on the test, these were updated to either\ndisable the agent `switch_user` flag, or to specify the current\nuser in the task launch message.\n\nReview: https://reviews.apache.org/r/64630/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/de508d94dadb585fff171a5f44a38ce7dd0dfc01", "message": "Stopped applying empty executor resources in `network/ports` recovery.\n\nAt recovery time, the containerizer sends only the executor resources,\nbut ports are typically allocated against tasks. This means that we\ndon't know about the complete set of container resources until the\ncontainerizer makes the subsequent `update()` call. If we perform a\ncontainer ports check between the two calls, we can erroneously kill\nthe container because we believe it to have no allocated ports.\n\nReview: https://reviews.apache.org/r/65153/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/73fc563005aec597d840cc20233e230b3806702e", "message": "Fixed a couple of minor network/ports isolator issues.\n\nAdded a log message (similar to the one in the `cgroup/cpu` isolator\nto track then the resouces for a container are updated.\n\nHoisted a `CHECK` so that it happens before accessing the protobuf\nfield it is protecting.\n\nReview: https://reviews.apache.org/r/65105/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/9ecfb4aecd081ac9a74cdf2c71ec1565bf242e16", "message": "Logged some additional information on a master CHECK.\n\nIf the master attempts to remove an unreachable task on a registered\nagent, log some additional debugging information in the CHECK to help\ntrack down what happened.\n\nReview: https://reviews.apache.org/r/65143/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/ecf718795bbbc06473ba43b7dbd9107446e1a15e", "message": "Prevented a crash when an agent with terminal tasks is partitioned.\n\nIf an agent is lost, we try to remove all the tasks that might have\nbeen lost. If a task is already terminal but has unacknowleged status\nupdates, it is expected that we track it in the unreachable tasks list\nso we should remove the CHECK that prevents this. This patch also\nchanges to how unreachable tasks are presented in the HTTP endpoints\nso that terminal but unacknowleged tasks are shown in in the list of\nunreachable tasks and not completed tasks, which is different than\n1.4.x where they are shown as completed.\n\nReview: https://reviews.apache.org/r/64940/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/e39809bd67fba7205fe293f1f888eb2c357ded33", "message": "Fixed some unsigned comparison warnings."}, {"url": "https://api.github.com/repos/apache/mesos/commits/090f112fa5a3a6bd1f415842c4d5c7ffc5fa5614", "message": "Improved image store manifest parsing errors.\n\nWhen one of the image store backends fails to parse an image manifest,\nit is most probable that the the on-disk state is incorrect. Emitting\nthe path in the error makes it easier for an operator to figure out\nwhat went wrong.\n\nReview: https://reviews.apache.org/r/64995/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/2fd4fe0656c1ee73ddf3a2277a1e932706e29b07", "message": "Made the `os::read` error less redundant.\n\nThe error from `os::read` would typically format as \"Failed to open\nfile: File not found\", which is unnecessarily redundant. It should\nbe sufficient to just report the `ErrnoError()`.\n\nReview: https://reviews.apache.org/r/64993/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/bcde76bb644907b4ad6895bf9aee44baef7cc1e5", "message": "Fixed CSI documentation typo."}, {"url": "https://api.github.com/repos/apache/mesos/commits/acf61580f6b1716a7ea641cc27d1d0308138b982", "message": "Fixed autoconf help string."}, {"url": "https://api.github.com/repos/apache/mesos/commits/ca7d00025bd5325cb3cac36c2898a3d09c829176", "message": "Enabled function sections.\n\nIf we tell the compiler to place each function in a separate\nsection, this allows the linker to garbage collect unused\nsections. This significantly decreases the size of the final\nbuild artifacts and provides some modest improvements in build\ntimes.\n\nReview: https://reviews.apache.org/r/64743/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/0da7b6cc37786df94465ae98948fd7be669a843e", "message": "Renamed fetcher test to trigger the UNZIP filter.\n\nRenamed the fetcher tests that depend on unzip(1) so that they\nwill trigger the UNZIP test filter and automatically be disabled\nif unzip(1) is not present."}, {"url": "https://api.github.com/repos/apache/mesos/commits/91ea75e83560dfa3a4a38563b942ef7ec2a5bb29", "message": "Toggled the authenticate_http_readwrite flag in MesosTest.\n\nThe default executor authentication mechanism depends on SSL support\nbeing enabled in the build. Multiple tests that invoke the default\nexecutor have compilation time checks for SSL support so they\ncan disable the Mesos agent authenticate_http_readwrite flag in\nthis case.  Rather than duplicating this check to multiple tests,\nset it to an appropriate default in the MesosTest fixture.\n\nReview: https://reviews.apache.org/r/64436/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/784b7f599f8ad8350fc7d6703a4b584301b23edc", "message": "Fixed `os::chown` error message.\n\ngetpwnam(3) only sets `errno` if there is an error. To detect\nthe (most common) case where the user account is successfully\nnot found, we need to clear `errno` and verify that it is\nstill clear on failure.\n\nReview: https://reviews.apache.org/r/64620/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/ca6729315fdbc751b673ea3005609cdaba9bb5b8", "message": "Removed extraneous newlines."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/148843748", "body": "Mesos doesn't use convenience typedefs.\r\n```C\r\nhashset<pair<FrameworkID, ExecutorID>> executorIDs\r\n```\r\n\r\nIn subsequent lines, I believe that this is ok:\r\n```\r\nauto id = std::make_pair(executor.framework_id(), executor.executor_id());\r\n```", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/148843748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/148844153", "body": "We should update this error message:\r\n```\r\nError(\"Framework '\" + executor.framework_id() +\r\n      '\" has a duplicate ExecutorID '\" +\r\n      stringify(executor.executor_id()) + \"'\");\r\n```", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/148844153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "gupta-ak": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/8964137f68015c40af2fc850d3c9cb71895454c4", "message": "Windows: Updated networking documentation.\n\nThe networking docs now describe how the Docker network modes in the\n`Network` enum work on Windows, since the enum only has Linux network\nmodes.\n\nReview: https://reviews.apache.org/r/63861/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/6b35c93baf4445686caea6ca12788fe7593e0dd8", "message": "Windows: Mapped the Docker network info types.\n\nThe Network enum in DockerInfo is specific to Linux containers. `HOST`\ndoesn't exist on Windows and `BRIDGE` is `NAT` on Windows. The current\ndefault docker network setting was always `HOST`, which broke the\nWindows docker executor. Now, if a specific network isn't given, the\nnetwork mode will default to `HOST` on Linux agents and `NAT` on Windows\nagents. Also, `BRIDGE` mode will be translated to `NAT` on Windows.\n\nReview: https://reviews.apache.org/r/63860/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/eccd0a9f9aa53acd2b1daf7512868eb6faff93a7", "message": "Windows: Fixed mock signal values in stout.\n\nRemoved `SIGSTOP` and `SIGCONT` on Windows, since they are meaningless,\nand never unused. Also, fixed the WEXITSTATUS macro to cast the exit\ncode instead of bit-masking it, since Windows exit codes are 32 bit\nunsigned ints.\n\nReview: https://reviews.apache.org/r/63859/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/1b6f9e90fc034f16ec2fa937ef8d11cb4c4b948e", "message": "Windows: Fixed docker executor `PATH` variable.\n\nThe `docker` executable is not usually installed in\n`os::host_default_path()` on Windows, so the Executor cannot find it.\nNow, before launching the Executor, the Agent finds the directory\ncontaining `docker` and prepends it to the `PATH` given to the Executor\nso that both the Executor and Agent use the same `docker`.\n\nReview: https://reviews.apache.org/r/65147"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "xujyan": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/24a746d85780051d862db0697b63c3c52db4362a", "message": "Improved documentation on resource reservations.\n\nAdded explanation for authorizations on static reservations.\n\nReview: https://reviews.apache.org/r/64516"}, {"url": "https://api.github.com/repos/apache/mesos/commits/ae515379e8447b9f6ac8416f3a69cec57b5d7ba5", "message": "Used `reserve_resources` ACL for static reservations.\n\nReview: https://reviews.apache.org/r/64515"}, {"url": "https://api.github.com/repos/apache/mesos/commits/5d0d35236c3b0db3b2f3363244fc45b0928a0541", "message": "Refactor out `authorizeReserveResources` that takes a `Resources`.\n\nThis allows us to authorize static resource reservations that don't\ncome from `Offer::Operation::Reserve`.\n\nReview: https://reviews.apache.org/r/64514"}, {"url": "https://api.github.com/repos/apache/mesos/commits/48e9542c8eb60cfb089dfdca4ab6895fe68fc2e6", "message": "Updated CHANGELOG with MESOS-6406, MESOS-7215 and MESOS-8337.\n\nThese are all changes we made around partition-awareness in 1.5.0 so\nthey are grouped together."}, {"url": "https://api.github.com/repos/apache/mesos/commits/bbd3aaff9ea3f8de4405b652a7294ed9a9d36063", "message": "Fixed flaky PartitionedSlaveReregistrationMasterFailover test.\n\nThe test was flaky due to a race condition that causes status updates\nto be dropped because the agent reregisters before the schedulers.\n\nReview: https://reviews.apache.org/r/64933/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/20769217", "body": "Doesn't look like we need to make this copy here and the non-const ref `Offer::Operation& operation` below? (The adjustments are already made in the master?)", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/20769217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jieyu": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/14f4fdfae7d3f3a6d2dbc139c8a21c81b0e4ec20", "message": "Fixed some style issues in CHANGELOG."}, {"url": "https://api.github.com/repos/apache/mesos/commits/c1f9e945b036571c61a0ff562dceffb75a137694", "message": "Added doc for cgroups devices isolator.\n\nReview: https://reviews.apache.org/r/62965/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/ccc5051a1e981cfc9fcd448ff23738e2cc2133eb", "message": "Added a script to build Mesos docker image.\n\nThis script leverages the packaging scripts to build the RPM first, and\nthen generate the Mesos docker image by installing the Mesos RPM. This\nresults in smaller Mesos docker image.\n\nThis script can be run on both Linux or OSX. You just need to have\nDocker installed.\n\nCurrently, the script will build a Mesos docker image from the current\nhead. Future work will make it work for building a specific tag or sha.\n\nReview: https://reviews.apache.org/r/63939/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/31835a1637fa44f97f57b72df9abd044d57d5009", "message": "Added doc for filesystem isolators.\n\nReview: https://reviews.apache.org/r/62959/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/3f6d2ac4af5a74be27223a1917f8df43217e721a", "message": "Added some defensive checks for persistent volume sharing check.\n\nThis patch adds some defensive checks for detecting if a persistent\nvolume is shared by multiple containers. It's currently not a bug\nbecause of a `contains` check above in the loop body and we set\n`info->resources` only after we update the volumes. But this is a bit\nfragile and should be avoided.\n\nSee more details in MESOS-8356.\n\nReview: https://reviews.apache.org/r/65050/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/99010defac2b08bf72963da823fa7245fbac245b", "message": "Added MESOS-8356 to 1.3.2 CHANGELOG."}, {"url": "https://api.github.com/repos/apache/mesos/commits/985a69bbc579991d65aa20c9b1be591881e684a5", "message": "Added MESOS-8356 to 1.4.2 CHANGELOG."}, {"url": "https://api.github.com/repos/apache/mesos/commits/c8e6487d251d938c3c221f606f7e924514877655", "message": "Fixed the persistent volume permission issue in DockerContainerizer.\n\nThis patch fixes MESOS-8356 by skipping the current container to be\nlaunched when doing the shared volume check (`isVolumeInUse`). Prior to\nthis patch, the code is buggy because `isVolumeInUse` will always be set\nto `true`.\n\nReview: https://reviews.apache.org/r/65049"}, {"url": "https://api.github.com/repos/apache/mesos/commits/ceb3c431305552380caf0aca87067c73e8e13e08", "message": "Added initial doc about CSI support in Mesos.\n\nReview: https://reviews.apache.org/r/64868"}, {"url": "https://api.github.com/repos/apache/mesos/commits/0086fcc5a3505a6b5c126f478900f07a03e3db05", "message": "Updated CHANGELOG about MESOS-4945."}, {"url": "https://api.github.com/repos/apache/mesos/commits/608539dbcaa6895fd257f5e7287b94721b5e9e8e", "message": "Updated CHANGELOG about CSI support in 1.5.0."}, {"url": "https://api.github.com/repos/apache/mesos/commits/e490d452a62889e93c5e9e04273679f53fa2117c", "message": "Updated CHANGELOG about standalone container support."}, {"url": "https://api.github.com/repos/apache/mesos/commits/d9cf4bc25055b30c9f7de8971e8b991394275301", "message": "Renamed isCommandExecutor to isGeneratedForCommandTask.\n\nThe name `isCommandExecutor` is not really precise because it could also\nfor Docker Executor. This patch renamed this method to be more accurate.\n\nReview: https://reviews.apache.org/r/64814"}, {"url": "https://api.github.com/repos/apache/mesos/commits/7773ce827edeb4431182284aaba0eda9401d0ac6", "message": "Cleaned up ContainerInfo generation logic in the slave.\n\nAfter this patch, the invariant becomes that for command tasks, we\nalways set the ContainerInfo of the generated ExecutorInfo to be the\nsame as that in TaskInfo (if exists). This simplifies the logic when we\nactually generate ContainerInfo for containerizer during launching\nphase.\n\nThis also made the logic introduced in the following patch more readable\nand maintainable: https://reviews.apache.org/r/63598\n\nReview: https://reviews.apache.org/r/64811"}, {"url": "https://api.github.com/repos/apache/mesos/commits/e49e8795001acc444efee01042bdf44b62c62907", "message": "Fixed a compile error due to string literals and macros.\n\nReview: https://reviews.apache.org/r/64790"}, {"url": "https://api.github.com/repos/apache/mesos/commits/b16383db06cdec0007074adfeb32f165aaa4e082", "message": "Updated CHANGELOG about the new API in Log::Reader."}, {"url": "https://api.github.com/repos/apache/mesos/commits/41ecc6a39ea3609c4e69cc5c6321898514f4e0da", "message": "Added MESOS-7973 to CHANGELOG and added some description."}, {"url": "https://api.github.com/repos/apache/mesos/commits/a9d3f1e7ae9480b7aeb79f7061193b900f753606", "message": "Fixed a compile issue when gRPC is enabled."}, {"url": "https://api.github.com/repos/apache/mesos/commits/5f40f3d401bbdd7e324113214c286a26faf67540", "message": "Made volume secret isolator not standalone container aware.\n\nWe'll revisit this later.\n\nReview: https://reviews.apache.org/r/64742"}, {"url": "https://api.github.com/repos/apache/mesos/commits/edf8b7076d5fdbc6afd623e47f9f17c7aeda178b", "message": "Fixed a few typos in SLRP."}, {"url": "https://api.github.com/repos/apache/mesos/commits/071e8cfbedf084196df7df427a9b12ed8a3cf8fa", "message": "Added tests for VIEW_STANDALONE_CONTAINER ACL.\n\nReview: https://reviews.apache.org/r/64657"}, {"url": "https://api.github.com/repos/apache/mesos/commits/da538bdb898db47d619328f58310cc7dac4eb48c", "message": "Added validation for VIEW_STANDALONE_CONTAINER ACL.\n\nReview: https://reviews.apache.org/r/64656"}, {"url": "https://api.github.com/repos/apache/mesos/commits/c07eab683aa7b3c94e6fafc08725b2613a8476e4", "message": "Updated upgrades.md about the GET_CONTAINERS API change.\n\nReview: https://reviews.apache.org/r/64655"}, {"url": "https://api.github.com/repos/apache/mesos/commits/a2bae69ebb0e191f2a4b91d3a07d2302a8126421", "message": "Updated CHANGELOG about the change to GET_CONTAINERS API.\n\nReview: https://reviews.apache.org/r/64654"}, {"url": "https://api.github.com/repos/apache/mesos/commits/d9951bd5214d34f7a014a38bae5e1b733b45cb38", "message": "Added doc for new fields in GET_CONTAINERS operator API.\n\nReview: https://reviews.apache.org/r/64653"}, {"url": "https://api.github.com/repos/apache/mesos/commits/7de21b1ccaf0da00eba42a4a4a687ba2ef6f07b4", "message": "Supported getting all containers in the agent API.\n\nReview: https://reviews.apache.org/r/64639"}, {"url": "https://api.github.com/repos/apache/mesos/commits/a814362db5b93b6c3862abe299d80f29d23e1bbe", "message": "Added VIEW_STANDALONE_CONTAINER ACL.\n\nReview: https://reviews.apache.org/r/64638"}, {"url": "https://api.github.com/repos/apache/mesos/commits/cc6e2a1ac94a60b4a0c764b207d87a47a06ff314", "message": "Updated GET_CONTAINERS API allowing nested/standalone containers.\n\nReview: https://reviews.apache.org/r/64628"}, {"url": "https://api.github.com/repos/apache/mesos/commits/88738706d1ccc26cd1a6d3f23957bf1e0a61d4b5", "message": "Added standalone isolator capability.\n\nRecently, we introduced the standalone container suport (MESOS-7302).\nSome isolators might not be able to handle standalone containers.\nTherefore, we introduce an isolator capability (similar to nesting\ncapability) so that we won't try to invoke those isolators that do not\nsupport standalone containers when dealing with a standalone container.\n\nReview: https://reviews.apache.org/r/64624"}, {"url": "https://api.github.com/repos/apache/mesos/commits/2576117702cb021e0ad2c873697bfd8201b1ee37", "message": "Fixed a bug in handling standalone container recovery.\n\nIt's possible that the pid is not known for a standalone container. For\ninstance, the agent crashes after the containerizer checkpoints the\nruntime directory, but before it is able to checkpoint the pid. In that\ncase, we just assume that the child will exit due to the broken control\npipe and we can move to destroy without recovering it.\n\nReview: https://reviews.apache.org/r/64623"}, {"url": "https://api.github.com/repos/apache/mesos/commits/0a7d46634b0b6250856e0b4cec7c5fd9842b6f3e", "message": "Fixed compile errors on clang 3.9."}, {"url": "https://api.github.com/repos/apache/mesos/commits/37a393cb53e552fda6c6af04aa95836d3539c305", "message": "Fixed a bug related to offer operation application in the agent.\n\nThe bug is introduced in this patch:\nhttps://reviews.apache.org/r/64477/\n\nGiven that we also keep track of each resource provider's total\nresources in addition to the total resources of the agent, we need to\nmake sure we update those totals after applying an operation.\n\nThe bug may manifest as a CHECK failure in the agent that checks if\n`totalResources` of the agent is a super set of all the resource\nprovider resources.\n\nReview: https://reviews.apache.org/r/64589/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/97fec08a5f422531f997fde418853b48a440359b", "message": "Fixed the compile error in SLRP related to UUID change."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/141226340", "body": "@conqer I had a related idea years ago. Some discussion and code can be found here:\nhttps://reviews.apache.org/r/14686\n\nThe goal is slightly different. You want to get rid of those 'dispatch' boilerplate code. My goal is to create a common base class for those libprocess Process wrapper classes so that we don't need to pass raw pointer (or smart pointer) around. It's safe to copy the wrapper class.\n\nLooking at your examples, the following code hurts the readability a bit. We'll be having a lot of 'dispatch' calls in the code base, at which moment, people might be asking why not just use the raw dispatch (i.e., dispatch(process, xxx, args...);) instead?\n\n```\nFuture<size_t> result =                                                          \n  dispatcher->dispatch(                                                          \n    Interface::writeToFile,                                                      \n    data);\n```\n\nIf would be cool if we can do the following directly. But I guess it not quite possible.\n\n```\nFuture<size_t> result = dispatcher->writeToFile(data);\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141226340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141254728", "body": "@conqer It's a trade off, right? User has to use 'dispatch' at very single call site vs. only has one dispatch in the boilerplate code. I personally prefer the second one to simply the call sites.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141254728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141263272", "body": "If you are OK with using `dispatch(&TokenManager::xxx, args...)` at the callsite, why not just use TokenManagerProcess directly? Why do you need TokenManager?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141263272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141275625", "body": "Yeah, I think the lifecycle management part is definitely useful.\n\nI am just not very convinced about the 'dispatch' part. I could be wrong. Maybe you should ping BenH.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141275625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141513470", "body": "@conqer Thanks for the summary! I think we all agree that  \"Automatic life cycle management.\" is a useful thing to do (as you already did). We can iterate on the \"dispatch\" primitive later and see what other people think about this.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141513470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/231119641", "body": "Can you ask the question on dev/user mailing list, or slack channel? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/231119641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/263650040", "body": "Yeah, curl currently is a dependency if people wants to use container image support in unified containerizer. There is plan to remove this dependency.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/263650040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/272235714", "body": "Can you split this into two PR? One for adding yourself into contributor list, the other one for the actual fix?", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/272235714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/106755477", "body": "Please remove this tailing space. This failed the style check commit hook.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/106755477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/122989199", "body": "This failed the style checker. Please wrap code in 80 char width.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/122989199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/122989353", "body": "I would also mention that it might be a wait failure as well `Failed to fork or wait process`", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/122989353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/137335401", "body": "kill one line to be consistent with other places", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/137335401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/137335576", "body": "Please remove tailing white spaces. It failed our style checker:\r\n```Jies-MacBook-Pro:mesos jie$ support/apply-review.sh -g 232\r\nCookie coming from patch-diff.githubusercontent.com attempted to set domain to github.com\r\n2017-09-06 10:26:30 URL:https://patch-diff.githubusercontent.com/raw/apache/mesos/pull/232.patch [1509] -> \"232.patch\" [1]\r\n232.patch:31: trailing whitespace.\r\nCilium brings HTTP-aware network security filtering to Linux container\r\n232.patch:32: trailing whitespace.\r\nframeworks. Using a new Linux kernel technology called BPF, Cilium\r\n232.patch:33: trailing whitespace.\r\nprovides a simple and efficient way to define and enforce both\r\n232.patch:36: trailing whitespace.\r\nFor more information on using Cilium with Mesos, check out the\r\nwarning: 4 lines add whitespace errors.\r\ndocs/cni.md:495: trailing whitespace.\r\n+Cilium brings HTTP-aware network security filtering to Linux container \r\ndocs/cni.md:496: trailing whitespace.\r\n+frameworks. Using a new Linux kernel technology called BPF, Cilium \r\ndocs/cni.md:497: trailing whitespace.\r\n+provides a simple and efficient way to define and enforce both \r\ndocs/cni.md:500: trailing whitespace.\r\n+For more information on using Cilium with Mesos, check out the ```", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/137335576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/162842165", "body": "Can you sort the entry based on first name? Thanks!", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/162842165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "abudnik": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/52a55debebdba2f40361dafc5c10cf9d1b1a584d", "message": "Fixed flaky EOFBeforeRecv test.\n\nThis patch is a small correction of commit d4185d4a11.\nBefore this patch, if EOF event for a ssl socket is received before\na client called `recv`, then this EOF event is lost. This leads to\nhanging `recv` on the ssl socket after calling `shutdown`.\n\nReview: https://reviews.apache.org/r/65179/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/ff6915822140fb243d0711102922969e03c85f2d", "message": "Updated comments in IOSwitchboard.\n\nThis is addendum to review https://reviews.apache.org/r/65122\n\nReview: https://reviews.apache.org/r/65190/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/6d19caac8bc1a11e986f7f78796371062d2eff39", "message": "Fixed race condition in IOSwitchboard for ATTACH_CONTAINER_INPUT call.\n\nPreviously, IOSwitchboard terminated itself after io redirect had\nbeen finished and occasionally before an http response had been sent\nto the agent for `ATTACH_CONTAINER_INPUT` request. This patch ensures\nthat termination of the IOSwitchboard server process does not occur\nbefore input stream is closed and an HTTP response is send to the\nwriter.\n\nReview: https://reviews.apache.org/r/65122/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/06195ea0d5a24b493b9fb2c76a4986478ea479c5", "message": "Fixed a potential race condition in the test infrastructure.\n\nThere was a race condition leading to flaky\n`LinuxCapabilitiesIsolatorFlagsTest.ROOT_IsolatorFlags` test.\nThis test launches successively multiple agents, while reusing the\nsame variable. After reassigning the value of the variable, agent's\nd-tor is called. If agent recovery is not yet completed, then some\norphaned container might blink in the agent's d-tor as it is\ndescribed in the comment to the code.\n\nReview: https://reviews.apache.org/r/64770/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/82a631911a81cfe076f0bb9b0a7ae7a297ffa17f", "message": "Added error message in tests for orphaned containers.\n\nReview: https://reviews.apache.org/r/64953/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/196fe20861a4efc8edcabb08ce8821e8ed1b8f02", "message": "Fixed flaky `NestedMesosContainerizerTest` tests.\n\nThis patch is an addition to commit 0cc636b2d5.\n\nReview: https://reviews.apache.org/r/64749/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/0cc636b2d5ad5c934b8b7f350bc8c99b9282b5ab", "message": "Fixed flaky `ROOT_CGROUPS_RecoverLauncherOrphans` test.\n\nContainerizer recovery returns control to the caller before completion\nof destruction of orphaned containers. Previously, `wait` was called on\na container right after calling `recover`, so `wait` was almost always\nsuccessfull, because destruction of the orphaned container takes some\ntime to complete.\n\nThis patch replaces check for the container existence with the check\nthat a related freezer cgroup has been destroyed. The freezer cgroup\nis destroyed during container destruction initiated by a containerizer\nrecovery process.\n\nReview: https://reviews.apache.org/r/64680/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mengzhugithub": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/9e2f9a2401a7665872f9cb2d994ca5013cd852c9", "message": "Added an performance benchmark for master `GetState` v1 api.\n\nThis test is based on the master failover benchmark. Note that\nit does not include executors for now.\n\nReview: https://reviews.apache.org/r/64969/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/aded41aecb5aab988313689c2b0664b86d45eb1f", "message": "Used jsonify in http serialization for better performance.\n\nThis change avoids building an in-memory JSON::Object in favor\nof using jsonify to directly output the serialized JSON from\nthe protobuf.\n\nReview: https://reviews.apache.org/r/65063/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/53480e907d3e7ae888844d23c311b8fd2fee875f", "message": "Updated documentation for `d_type` check regarding `xfs` on `overlay`.\n\nReview: https://reviews.apache.org/r/65104/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/455c7d8da74009b82c65559014a51712e60aec11", "message": "Updated quota documentation to reflect 1.5 improvements.\n\nThis adds a NOTE to the implementation details of the allocator\nto help clarify some of the improvements made in 1.5.\n\nReview: https://reviews.apache.org/r/65103/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/9abb48fb0cba1be179de148555b5a48dc86408f7", "message": "Added a test for quota allocation including non-quota resources.\n\nThis test verifies the behavior of allocating a resource to quota\nroles that have no quota set for that particular resource (e.g.\nallocating memory to a role with only quota set for CPU). If a\nrole has no quota set for a resource, it will get that resource\nonly when two conditions are both met:\n\n  (1) It is tentatively being allocated some other resources on the\n      same agent to meet its quota, or some reservations (which may\n      or may not involve quota resources); and\n\n  (2) After allocating those resources, quota headroom is still\n      above the required amount.\n\nReview: https://reviews.apache.org/r/64794/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/0c416d51940c0ae0f5ae8ca8e9346fa8ab928725", "message": "Fixed a quota headroom violation during quota allocation.\n\nIn the quota role allocation stage, if a role gets some resources\non an agent to meet its quota, it will also get all other resources\non the same agent that it does not have quota for. This may violate\nthe guarantees of other roles that have set quota on these resources.\n\nWe fix this issue during the quota allocation stage by ensuring that,\nif a role has no quota set for a scalar resource, it will get that\nresource only when two conditions are both met:\n\n  (1) It is tentatively being allocated some other resources on the\n      same agent to meet its quota, or some reservations (which may\n      or may not involve quota resources); and\n\n  (2) After allocating those resources, quota headroom is still\n      above the required amount.\n\nAlso refactored the fine-grained quota allocation logic.\n\nReview: https://reviews.apache.org/r/64793/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/c5654bc2891a85450844b1944652b8858ed693c0", "message": "Added a utility to shrink scalar resource while keeping its meta-data.\n\nThis is particularly useful when performing fine-grained allocation\nof resources by \"chopping off\" some of the resources when possible.\nNote that some resources, e.g. MOUNT volumes, cannot be shrunk.\n\nReview: https://reviews.apache.org/r/64798/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/8714e97be537994c19b2d17c407af070eec13fab", "message": "Fixed a bug where quota headroom is tracked incorrectly.\n\nOnly resources allocated towards a role's quota should be\nsubtracted from `requiredHeadroom`. In addition to this,\nunreserved resources in the quota allocation stage may also\ncontain resources that a role does not have quota for, they\nshould not be subtracted from `requiredHeadroom`.\n\nReview: https://reviews.apache.org/r/64792/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/7ad0420289d5e6445ab024fd7c084655a0c97ab1", "message": "Fixed a few comment typos in `hierarchical.cpp`.\n\nReview: https://reviews.apache.org/r/64760/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/b386fe1108d2d41dedc74a7059d8d70018ac28e7", "message": "Moved the quota headroom tracking before quota allocation.\n\nThis paves the way for improved quota headroom enforcement\nfor the quota role allocation stage.\n\nReview: https://reviews.apache.org/r/64761/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/2f6981e0ea544544c3c3101a80281b5309f1acaa", "message": "Added a test to ensure MOUNT disk is not chopped during allocation.\n\nWhile quota allocation should be fine-grained, some resources are\nunchoppable. They have to be offered entirely. This test verifies\none of the cases: disk resource of type MOUNT.\n\nReview: https://reviews.apache.org/r/64758/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/9aeef9ce3a90829b2166dac931e64d5bbf18e230", "message": "Made quota resource allocation fine-grained.\n\nThe allocator now does fine-grained resource allocation up\nto the role's quota limit. And a role's quota is only\nconsidered to be satisfied if all of its quota resources\nare satisfied. Previously, a role's quota is considered\nto be met if any one of its quota resources reaches the limit.\n\nAlso fixed a few affected allocator tests.\n\nReview: https://reviews.apache.org/r/64003/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/044fce508993c118c3fd52e9b8bc3a5472ea7734", "message": "Added a test to ensure the amount of quota headroom is sufficient.\n\nThis test verifies that quota headroom is correctly maintained\nwhen some roles have more reservations than their quota. We need\nto ensure that one role's excessive reservation is not counted\ntowards another role's quota headroom.\n\nReview: https://reviews.apache.org/r/64699/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/c9933c5a5efc2202bd2f346f2b0861aa02853922", "message": "Fixed a bug where insufficient headroom is held for quota.\n\nIf a role has more reservation than its quota, the current quota\nheadroom calculation is insufficient in guaranteeing quota\nallocation. See MESOS-8339.\n\nThis patch fixes the issue by computing the amount of unreserved\nresources we need to hold back such that each quota role can have\nits quota satisfied. Previously, we included the quota role\nunallocated reservations as part of the headroom since we knew it\nwould be held back, but we didn't handle the case that a quota role\nhad more reservations than quota.\n\nReview: https://reviews.apache.org/r/64698/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/f8111469b2f7c05703a680c1753df3541a83df94", "message": "Added a test to check shared resources accounting in quota enforcement.\n\nThis test verifies that when enforcing quota limit, shared resources\nthat are part of a role's reserved-allocated resources are only\ncharged once even when they are offered multiple times.\n\nReview: https://reviews.apache.org/r/64466/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/2763792a16cb2a7579c0a150ed4d3ac523d92883", "message": "Added a test to ensure non-quota role reservations are allocated.\n\nThis test checks against the symptom of failing to allocate\nnon-quota role's reservations if resources are set aside for\nthe quota limit headroom. See MESOS-8293.\n\nReview: https://reviews.apache.org/r/64465/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/4fa909245c1ec8a4bc50f9867164be1f1e3653ef", "message": "Fixed a bug with quota headroom that can leave reservations unallocated.\n\nAlso fixed a bug where quota headroom may include revocable resources.\n\nReview: https://reviews.apache.org/r/64636/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "andschwa": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/9b1fda56a04da9dafadd117a21cdf92d24e50483", "message": "Updated C++ Style Guide.\n\nAdded three missing style notes:\n\n* Use of `::` for global namespace\n* Put `template <typename T>` on own line\n* Prefer `->foo()` to `.get().foo()`\n\nReview: https://reviews.apache.org/r/65114"}, {"url": "https://api.github.com/repos/apache/mesos/commits/55b66c624f5a2e44fcf87bdcab8932a2c7a2c284", "message": "Added Developer Guide to documentation.\n\nThis guide was started with the intent to capture \"tribal knowledge\"\nabout Mesos development. I've added several general practices and\npatterns I've had explained to me by various Mesos developers, and also\nadded a Windows section with design patterns I had documented\nexternally.\n\nReview: https://reviews.apache.org/r/65113"}, {"url": "https://api.github.com/repos/apache/mesos/commits/b8c006f6355a653ca62d8ae6af86a0845476ce25", "message": "Fixed use of `os::which`.\n\nBecause `os::which` was added to its own header, all uses of it now need\nto include said header.\n\nIn `tests/environment.cpp`, instead of using `os::system(\"which foo\")`,\nwe now use `os::which(\"foo\")` to be compatible with Windows.\n\nReview: https://reviews.apache.org/r/65145"}, {"url": "https://api.github.com/repos/apache/mesos/commits/c8594dcc31b75d67c5f72488479cf7c7baac98e1", "message": "Ported `os::which` to Windows.\n\nBecause `os::which` still lived in `posix/os.hpp`, it was refactored\ninto its own `os/which.hpp` (which the respective `os/posix/which.hpp`\nand `os/windows/which.hpp`. Consumers of this will need additionally\ninclude the new header, instead of just `os.hpp`.\n\nThe differences in implementation from POSIX to Windows are:\n\n* Split the `PATH` on `;` not `:`.\n* Also loop over `PATHEXT` because executables on Windows end with one\n  of a set of extensions.\n* Removed the permissions check because it is not applicable on\n  Windows (instead, an executable ends with an extension in `PATHEXT`,\n  see above).\n\nReview: https://reviews.apache.org/r/65144"}, {"url": "https://api.github.com/repos/apache/mesos/commits/93ab49409e1a81679b50fd4f30f287bd4d4569a3", "message": "Windows: Explicitly state source and destination path for extract.\n\nMakes it more clear that it is in the correct order.\n\nReview: https://reviews.apache.org/r/64962"}, {"url": "https://api.github.com/repos/apache/mesos/commits/ff77d3235f5845192064b0f227918775ee035b01", "message": "Windows: Fixed memory leak.\n\nThe environment strings variable block is allocated by the system, and\nmust be manually freed (according to the docs).\n\nReview: https://reviews.apache.org/r/64961"}, {"url": "https://api.github.com/repos/apache/mesos/commits/12be4ba002f2f5ff314fbc16af51d095b0d90e56", "message": "Fixed conversion warnings.\n\nFixed conversion warnings in `cram_md5` authentication. The potential\nfor overflow here is exceedingly unlikely, and we have been ignoring\nthese warnings to date without problem.\n\nFixed conversion warning in `files.cpp`. The signature accepts an\n`off_t` type, but we calculated the offset from a `size_t`.\n\nFixed `size_t` to `int` warning in `default_executor.cpp`. The only use\nof this counter is in `taskGroup.tasks().Get(index++)`, which expects an\n`int`, so we changed the type.\n\nFixed conversion warnings in master. We can't change the return types\nbecause the `Metric` class only accepts `double` types, so we\n`static_cast` (as we were already doing elsewhere in the class).\n\nFixed warnings when converting to `pid_t` in the containerizer. Can't\nchange the arguments types because they're in the protocol, but they\nobviously represent a `pid_t` originally, so this is a safe\n`static_cast`.\n\nFixed warnings when constructing a `Seconds` in `slave.cpp` as it takes\n`int64_t`, but we're giving it a `double`. We can't change the `double`\nbecause it's set in the protocol, and we're currently ignoring the\nconversion anyway, so we just cast. We may want to provide a `double`\nconstructor for `Seconds` in the future that does proper rounding.\n\nFixed `size_t` to `int` conversion warning in `slave.cpp`. This counter\nwas only used in `usage->mutable_executors(i++)` which expected an\n`int`, so we changed the type.\n\nFixed conversion warnings in `zookeeper.cpp`. The signatures of these\nfunctions take an `int`, and they're coming from a `size()`. We have\nbigger problems if this overflows.\n\nReview: https://reviews.apache.org/r/64736"}, {"url": "https://api.github.com/repos/apache/mesos/commits/0597b3c17d291cc56f5cd5b59f376d1d59b9a4ab", "message": "Fixed conversion warnings in tests.\n\nFixed `double -> float` conversions. While the Protobuf type and literal\ntype are both `double`, the `FLOAT_EQ` tests were being used instead of\n`DOUBLE_EQ`, causing a conversion warning.\n\nFixed `size_t` to `int` conversion warnings by casting.\n\nFixed warning for `Seconds(double)` as it takes `int64_t`. Can't change\nthe argument types because they're set in the protocol.\n\nReview: https://reviews.apache.org/r/64735"}, {"url": "https://api.github.com/repos/apache/mesos/commits/c79412cd29c50c1f2d562f6c081f818d39f1f2d2", "message": "Fixed conversion warnings.\n\nJust casting to the used type.\n\nReview: https://reviews.apache.org/r/64734"}, {"url": "https://api.github.com/repos/apache/mesos/commits/65f06d36ad1701e70f541f42b8a32961e471ff15", "message": "Fixed conversion warnings in tests.\n\nStringified a `size_t` for `http::Request.headers` value.\n\nThe types in `metrics_tests.cpp` were defined as `double`, and so should\nbe compared with `EXPECT_DOUBLE_EQ`, not `EXPECT_FLOAT_EQ`.\n\nReview: https://reviews.apache.org/r/64733"}, {"url": "https://api.github.com/repos/apache/mesos/commits/67d42478578da3065c549a1e4b91b087586d45b4", "message": "Fixed conversion warnings in tests.\n\nThe signature of `flags.load` takes an `int`, but\n`arraySize` (correctly) returns a `size_t`. We don't want to change\n`flags.load` to take a `size_t` because its signature is `int argc,\nchar** argv`, and so we may be sending it `int` in other places.\n\nAs all the test arrays are statically sized, we know that we're not\noverflowing an `int`, so it is safe to just `static_cast<int>` here.\n\nReview: https://reviews.apache.org/r/64732"}, {"url": "https://api.github.com/repos/apache/mesos/commits/9db0415007722d45c4ab7539a454b70ba955bfc0", "message": "Ended `IOSwitchboard::_prepare` with `UNREACHABLE`.\n\nAll paths should `return`, but the compiler wasn't able to determine\nthis.\n\nReview: https://reviews.apache.org/r/64731"}, {"url": "https://api.github.com/repos/apache/mesos/commits/177a2221496a2caa5ad25e71c9982ca3eed02fd4", "message": "Changed `Sorter::count()` to return `size_t` instead of `int`.\n\nAlso applies to `DRFSorter::count()`. The implementations return\n`hashmap::count()` which is a `size_t`. Converting `size_t` to `int`\nimplicitly generates a \"possible loss of data\" warning.\n\nReview: https://reviews.apache.org/r/64730"}, {"url": "https://api.github.com/repos/apache/mesos/commits/ac84a883db62a452db1a80b0f15c81d73a14a68e", "message": "Templated operator overloads of `Duration`.\n\nWithout this change, every use of `Duration * 2` throws a conversion\nwarning because we multiply `Duration` by `int` and `size_t` without\ncasting to `double`, and the operator overloads were all accepting only\ndoubles.\n\nBy templating them on `typename T`, we gain two benefits: no conversion\nwarnings are emitted because an `int64_t` can be safely multiplied by\nany arithemetic type without casting, and when multiplying by integral\ntypes, we are no longer subject to potential FPE introduced by casting\nto a `double`. It is safe to simply template on `typename T` without\nchecking if it is an arithmetic type, as the compiler will only generate\na template if `double nanos * T multiplier` is valid.\n\nReview: https://reviews.apache.org/r/64729"}, {"url": "https://api.github.com/repos/apache/mesos/commits/a3febec7ebed3f0b28bebdcd336ce92979cd88ad", "message": "Windows: Added `/EHsc` to `CMAKE_CXX_FLAGS`.\n\nAfter upgrading Visual Studio to 15.5.2, warning C4530 started being\nemitted for practically every file. Since we use the STL (which uses\nexceptions), apparently we need to compile with `/EHsc`. This sets the\nexception-handling model to catch C++ exceptions, and to assume that\nfunctions declared as `extern \"C\"` never throw a C++ exception.\n\nReview: https://reviews.apache.org/r/64701"}, {"url": "https://api.github.com/repos/apache/mesos/commits/c222453e2cef279e2f3b892f5beaf0d360a5bc95", "message": "Removed executable bit from website files.\n\nThese CSS, PNG, JA, MD, and ERB files are not executables, and so should\nnot have the executable bit set."}, {"url": "https://api.github.com/repos/apache/mesos/commits/24f6702723c98d1098a9aa2e16e533eedccd36c2", "message": "Removed executable bit from text file.\n\n`CMakeLists.txt` should not be marked executable."}, {"url": "https://api.github.com/repos/apache/mesos/commits/5601070ac69c2e77729b396f646dfb6b58e6dde1", "message": "Removed executable bit from text files.\n\n`CMakeLists.txt` and `docker.cpp` should not be marked executable."}, {"url": "https://api.github.com/repos/apache/mesos/commits/b7c218fda59ce2c66ac1b5775a4d48b03c830305", "message": "Windows: Deleted unused and unnecessary OS version functions.\n\nThe Windows API `GetVersionEx` was deprecated in Windows 8. Using it in\nthe `os.hpp` header caused hundreds of warnings that it was deprecated\nto be emitted when building. While the function still exists, it stopped\nreturning the correct value when it was deprecated (so the version it\nreturns is 6.3, that is, Windows 8).\n\nHowever, replacing it was less than straightforward. The recommended\nreplacement is to use the \"version helper functions\", but these are not\ncapable of providing the version information of the system. The intent\nof the deprecation and the new APIs is to prevent developers from using\nthe version of Windows as a feature check. The new APIs are all of the\nform `bool IsWindows10OrGreater()`. While it is possible to use\n`IsWindowsServer()` to determine if we're on a client or server version\nof Windows, no current user-mode API is provided to query the build\ninformation of the OS. This is unfortunate, as retrieving this\ninformation is a valid use case of the now deprecated API.\n\nAn explored alternative was to query the registry, but this was\ndiscarded as it was not consistently available.\n\nAnother alternative was to parse the output of `systeminfo`, which can\nreturn CSV formatted version information. However, we chose not to do\nthis currently as it is slow (on the order of seconds to invoke the\ncommand).\n\nThere still exists a kernel-mode API to retrieve the version\ninformation. However, to use it would entail either including WDK (which\nis massive and not something we're going to do), or to invoke it\ndynamically by getting the address from `nt.dll`. This is possible, but\nit would be hacky, and was not necessary.\n\nThe chosen route was to simply delete the use of `GetVersionEx`. After\nreviewing the use of these functions, it turned out to be entirely\npossible to `delete` them.\n\nNote that this means the entirety of `systems_tests.cpp` was rendered\npointless for Windows.\n\nReview: https://reviews.apache.org/r/64697"}, {"url": "https://api.github.com/repos/apache/mesos/commits/45669854d27c902e6bbd2d9845c1dbde74620380", "message": "Windows: Removed manual use of `O_BINARY`.\n\nThis is now superfluous as it is added in stout.\n\nReview: https://reviews.apache.org/r/64690"}, {"url": "https://api.github.com/repos/apache/mesos/commits/13d67efa006d1a84822251759ae08781ea0bb7bc", "message": "Windows: Fixed `os::open()` to always use `O_BINARY`.\n\nPreviously, we had been manually adding the `O_BINARY` flag as we\nencountered bugs due to the Windows default behavior of performing\nline-ending translation. This was error prone.\n\nGiven this precedent, it seems safe to assume that all our existing code\nexpects the POSIX semantics of \"binary mode\", that is, no translation of\nwritten data at all. So now we add this flag by default in `os::open()`\ninstead of in the users.\n\nIt is possible that a future use requires text translation. At such\npoint, we can trivially fix `os::open()` to take a boolean flag to\ncontrol the addition of `O_BINARY`, but we do not currently need to\nengineer this.\n\nReview: https://reviews.apache.org/r/64689"}, {"url": "https://api.github.com/repos/apache/mesos/commits/3eaab8a2e37e6d9c3a7e74123611637d20aa9729", "message": "Windows: Patched protobuf to fix warnings.\n\nThe patch was generated by diffing the following commit against tag\nv3.5.0, this was merged upstream in\nhttps://github.com/google/protobuf/pull/4000:\n\ncommit 80809271a\nAuthor: Rodrigo Hernandez <kwizatz@aeongames.com>\nDate:   Mon Dec 4 19:04:42 2017 -0600\n\n    Using binary one's complement to negate an unsigned int\n\n    This removes a Visual Studio warning:\n\n    warning C4146: unary minus operator applied to unsigned type, result\n    still unsigned.\n\nAnd the addition of three static casts to make the return of\n`std::distance` match the LHS type.\n\nWith the patch applied, we can stop disabling all warnings for protobuf\ncode (which didn't entirely work anyway, because these warnings were in\npublic headers included everywhere in Mesos)."}, {"url": "https://api.github.com/repos/apache/mesos/commits/bd7b1f32ea7e948afe434b0950f6334a46a32823", "message": "Included `<stout/os/ftruncate.hpp>` where used.\n\nThis was not caught previously because the pre-compiled header included\nimplicitly."}, {"url": "https://api.github.com/repos/apache/mesos/commits/51d1e8e1e11d7a6a66ac809cb2bedba199ea4ba9", "message": "Windows: Stopped compiling files with no source code.\n\nThese two `utils.cpp` files have no code on Windows due to the source\nbeing wrapped in `#ifdef __linux__`, and so they generate warnings as\nthe compiled objects defined no new symbols. Since they are unused,\nremoving them from the Windows build fixes the warning."}, {"url": "https://api.github.com/repos/apache/mesos/commits/d95686674445d75f3ebd9d69fd42dd5cb84b3bdb", "message": "Windows: Removed `/debug:fastlink` linker flag.\n\nWith Visual Studio 2017, `fastlink` is now the default, so this is\nsuperfluous. Morever, this particular CMake variable also passes the\nflag to `lib.exe` when generating a static library, and this emits a\nwarning because `lib.exe` does not accept this flag. It was intended to\nbe sent to the `link.exe` linker, and so should not have included\n`STATIC` in the list of types."}, {"url": "https://api.github.com/repos/apache/mesos/commits/9ac915688a4083860bcec9f9fc26e258e28b94ff", "message": "Windows: Fixed type in job object `pid_list` struct.\n\nThis type was erroneously declared as `ULONG_PTR` because the\ndocumentation states it as such. This is true if the array is\ndynamically allocated, then the struct ends with a pointer to the first\nelement of the array. However, we avoid this allocation by statically\ndefining the struct with an array the size of `max_pids` for process\nidentifiers. PIDs on Windows are `DWORD` typed, and since the array is\ndefined statically, the type is the element type, not the pointer type.\n\nThe compiler warning for this was missed in the noise of existent\ncompiler warnings on Windows."}, {"url": "https://api.github.com/repos/apache/mesos/commits/c8ee3a020486c80bd89a82ee19ef798f19277c91", "message": "Windows: Silenced known deprecation warning from Google Test.\n\nWe previously fixed the Google Test build by defining\n`_SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING` when building Google Test,\nbut by not also adding it to the interface, it generates a warning for\nevery test file including it. This is very noisy, and we have already\nacknowledged the warning."}, {"url": "https://api.github.com/repos/apache/mesos/commits/4bf96153abfde2c5b18373072a5a85c377293086", "message": "Windows: Added legacy support for admin-only symlinks.\n\nSome users are regrettably stuck on versions of Windows before this\nfeature was added. If the `ALLOW_UNPRIVILEGED` flag is unsupported, the\ncreation of the symlink will fail with `ERROR_INVALID_PARAMETER`.\n\nReview: https://reviews.apache.org/r/64461"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/22940762", "body": "\ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/22940762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "mpark": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/ff14433da0c77f4fb36e24247936fcb866f5fa8f", "message": "MesosTidy: Enabled `mesos-this-capture`.\n\nReview: https://reviews.apache.org/r/65149"}, {"url": "https://api.github.com/repos/apache/mesos/commits/e5bc824fbbc377f614b6e1d8a0be9b69c2af2c60", "message": "Replaced `convertResourceFormat` with `downgradeResources` accordingly.\n\nReview: https://reviews.apache.org/r/65031/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/15faeea9f369922b7ea623d87d8eb5e134a6a6c4", "message": "Replaced `convertResourceFormat` with `upgradeResources` accordingly.\n\nReview: https://reviews.apache.org/r/65030/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/bc412f1094d19c51be92ca9f3d45f4f9003c75be", "message": "Replaced `ResourcesState::recoverResources` with `state::read`.\n\nWe have 2 versions of `protobuf::(write|read)`. One that operates on\na file descriptor, and another that works with file paths. The file\ndescriptor version is used to open a file in append mode and appends\nto the file as events (e.g., status updates) arrive. We then read\nthe messages back one at a time until we eventually read nothing,\nat which point `protobuf::read` returns a `None` indicating EOF.\nThe path version on the other hand simply tries to read the full\nexpected state, and returns an error if it's not able to.\n\nThe existing `ResourcesState::recoverResources` used the file descriptor\nversion of `protobuf::read`, reading one message at a time as described\nabove. However, the resources being read back is written using\n`state::checkpoint`. `state::checkpoint` uses the path version of\n`protobuf::read`, and also provides atomic writes. We therefore do not\nneed to deal with partial writes, and expect to read the full state.\nAs such, we can now simply use `state::read` to read the resources back.\n\nReview: https://reviews.apache.org/r/65026"}, {"url": "https://api.github.com/repos/apache/mesos/commits/3685c011bb71da0ba2af75691101ea383eeb2ccd", "message": "Replaced `os::read` with `state::read`.\n\nThe `state::checkpoint` utility was updated to checkpoint\nthe automatically downgraded resources. This was done to mitigate\nthe need to manually invoke `downgradeResources` prior to\ncheckpointing. `state::read` was introduced to provide a symmetric\nfunctionality for `state::checkpoint`. Specifically, it will perform\nupgrade resources upon reading the checkpointed resources state.\n\nThis patch updates the previous uses of `os::read` which was used to\nread the state that was written by `state::checkpoint(path, string)`.\nWhile there is no functional change, it completes the picture where\n`state::read` is used to read state written by `state::checkpoint`.\n\nReview: https://reviews.apache.org/r/65025"}, {"url": "https://api.github.com/repos/apache/mesos/commits/80f66061e343fa26dd7e3b9613f0fa8e0b9b4a36", "message": "Replaced `protobuf::read` with `state::read`.\n\nThe `state::checkpoint` utility was updated to checkpoint\nthe automatically downgraded resources. This was done to mitigate\nthe need to manually invoke `downgradeResources` prior to\ncheckpointing. `state::read` was introduced to provide a symmetric\nfunctionality for `state::checkpoint`. Specifically, it will perform\nupgrade resources upon reading the checkpointed resources state.\n\nThis patch updates the previous uses of `protobuf::read` accompanied\nby calls to `convertResourceFormat`. Rather than reading the protobufs\nthen upgrading the resources, we know simply call `state::read` which\nperforms the reverse operation of `state::checkpoint`.\n\nReview: https://reviews.apache.org/r/65024"}, {"url": "https://api.github.com/repos/apache/mesos/commits/ef303905e0be96f28d79a569afd004ec75f98296", "message": "Added `state::read` to complement `state::checkpoint`.\n\nReview: https://reviews.apache.org/r/65023"}, {"url": "https://api.github.com/repos/apache/mesos/commits/fda054b50ff7cdd2d7a60d31cfe24ce42bfbfaa5", "message": "Updated uses of `protobuf::read(path)` which now returns `Try<T>`.\n\nSince the path version of `protobuf::read` now returns `Try<T>`,\nmany of the existing code is removed and/or simplified.\n\nReview: https://reviews.apache.org/r/65022"}, {"url": "https://api.github.com/repos/apache/mesos/commits/4f9cda17e1a747bc3c4ab3667569304e09600b29", "message": "Returned `Try<T>` from `protobuf::read(path)` rather than `Result<T>`.\n\nThe path version of `protobuf::read` used to return `Result<T>` and\nreturned `None` only when the file is empty (`ignorePartial` is always\n`false`). The `None` return represents EOF for the \"streaming\" version\nof `protobuf::read` that takes an FD, but for the path version an empty\nfile when we expected to read `T` is simply an error. Thus, we map the\n`None` return to an `Error` for the path version and return a `Try<T>`.\n\nReview: https://reviews.apache.org/r/65021"}, {"url": "https://api.github.com/repos/apache/mesos/commits/93c6809122382412c1fc9324aa3cb67c54577e4e", "message": "Added `vector<Resource>` overloads for `(down/up)gradeResources`.\n\nReview: https://reviews.apache.org/r/65029"}, {"url": "https://api.github.com/repos/apache/mesos/commits/ab519aaa68bf71762c7d7f2f9aa7b6fb7b04a685", "message": "Fixed the order of parameters of `is_specialization_of` in libprocess.\n\nReview: https://reviews.apache.org/r/65055"}, {"url": "https://api.github.com/repos/apache/mesos/commits/3b0d1fa2b652047af19471ead5eb228675427484", "message": "Fixed the order of parameters of `is_specialization_of` in stout.\n\nGiven `std::is_base_of<T, U>`, the interpretation of the question is:\n\"is `T` base of `U`?\". Similarly, in this case want to ask the question\n\"is some type a specialization of a template?\" As such, the order of\ntemplate paramters should be `is_specialization_of<Type, Template>`.\n\nReview: https://reviews.apache.org/r/65054"}, {"url": "https://api.github.com/repos/apache/mesos/commits/8be2b0f585f0e00d0ab62547fccd0cd160454a07", "message": "Introduced `upgradeResources` to complement `downgradeResources`.\n\nReview: https://reviews.apache.org/r/64920"}, {"url": "https://api.github.com/repos/apache/mesos/commits/02eefa2c74e19708a0fe3b9e1d0011b152e01ea6", "message": "Updated the comment for `precomputeResourcesContainment`.\n\n`precomputeResourcesContainment` used return a `bool`, but was modified\nto return `void` since the `bool` is already included in the `result`.\nThis fixes the corresponding comment that was not adjusted accordingly.\n\nReview: https://reviews.apache.org/r/64919"}, {"url": "https://api.github.com/repos/apache/mesos/commits/dfa813ecbba251f13dc7eafb9020ad23638a1da7", "message": "Fixed the broken GRPC build.\n\nAdded `upgradeResources` to the `resources_utils.hpp`, and a silly\nmistake around using `foreach` over a protobuf mutable repeated field.\n\nReview: https://reviews.apache.org/r/64924"}, {"url": "https://api.github.com/repos/apache/mesos/commits/23d5ac1da25b1dfe9ee20b73e7b8a9e401782dbf", "message": "Upgraded resources that come from `protobuf::read`.\n\nReview: https://reviews.apache.org/r/64739"}, {"url": "https://api.github.com/repos/apache/mesos/commits/e9e656747b4da88498e07b44f6bc5fee2a64dad8", "message": "Used the protobuf-reflection-based 'downgradeResources' utility.\n\nReview: https://reviews.apache.org/r/63977"}, {"url": "https://api.github.com/repos/apache/mesos/commits/db8984f0eec628747c4f2f9caa85608d73a47f95", "message": "Modified `downgradeResources` to use protobuf reflection.\n\nPreviously, our `downgradeResources` function only took a pointer to\n`RepeatedPtrField<Resource>`. This wasn't great since we needed manually\ninvoke `downgradeResources` on every `Resource`s field of every message.\n\nThis patch makes it such that `downgradeResources` can take any\n`protobuf::Message` or `protobuf::RepeatedPtrField<Resource>`.\n\nReview: https://reviews.apache.org/r/63976"}, {"url": "https://api.github.com/repos/apache/mesos/commits/4451ff7aeed1cc8fd7882cda76a35b131a31a201", "message": "Renamed \"normalize\" to \"upgrade\" in resources adjustment operations.\n\nWe have introduced the notion of \"downgrading\" resources in order to\nsupport downgrades of various components. The opposite operation used\nto be called \"normalize\", but it seems \"upgrade\" would be simpler.\n\nReview: https://reviews.apache.org/r/64895"}, {"url": "https://api.github.com/repos/apache/mesos/commits/f429cebcbf982efd75966934ac876e99b6c6560e", "message": "Pulled out `upgradeResources` out of `validateAndNormalizeResources`.\n\nReview: https://reviews.apache.org/r/64738"}, {"url": "https://api.github.com/repos/apache/mesos/commits/327726d3c7272806c8f3c3b7479758c26e55fd43", "message": "Added validation / normalized resources for storage-related operations.\n\nWhen the storage-related operations were added, the cases were added to\nthe `switch` but the corresponding validation / normalization code was\nnot added. This patch adds the missing code.\n\nReview: https://reviews.apache.org/r/64737"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/128664020", "body": "@haosdent: I was able to apply the review request from Reviewboard and the upgrade has been committed. Please close this pull request.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/128664020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/129318960", "body": "Thanks for this! I've committed the patch to master. Could you please close this PR?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/129318960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/129319434", "body": "@usultrared: I was about to commit this but I wanted to confirm that you want `Linkernetworks`, rather than `LinkerNetworks` or `Linker Networks`? From www.linkernetworks.com it seems like the last one would be preferred?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/129319434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/129322999", "body": "@usultrared: I've committed the patch to master. Could you please close this PR?\n\nIn terms of involvement with the community, what type of involvement are you looking for?\n\nIf you're interested in contributing to the development of Mesos, the [Apache Mesos Triage](https://issues.apache.org/jira/secure/RapidBoard.jspa?rapidView=55) JIRA board would be a good place to look for interesting tickets, as well as [Submitting a Patch](http://mesos.apache.org/documentation/latest/submitting-a-patch/) guide on the [Apache Website](http://mesos.apache.org). There is also an IRC channel at `#mesos` on irc.freenode.net.\n\nIf you're interested in Marathon, I think the best way to contribute is to create pull requests on the [Github Repo](https://github.com/mesosphere/marathon). You can also find folks on `#marathon` on irc.freenode.net. \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/129322999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/230524460", "body": "```\ncommit bb965cf48ad742ef09ef7c1019db7c221139ecd3\nAuthor: Gina <ghofstede17@gmail.com>\nDate:   Tue Jul 5 18:07:30 2016 +0200\n\n    Added DevOps category and Vamp.\n\n    This closes #127\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/230524460/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "Gilbert88": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/364e78af7598289f6724c2ee037e0cb1de377902", "message": "Fixed the default executor flaky testes in tests/cluster.cpp.\n\nThis patch fixes some flaky tests listed below:\n1. DefaultExecutorTest.KillTask/0\n2. DefaultExecutorTest.TaskWithFileURI/0\n3. DefaultExecutorTest.ResourceLimitation/0\n4. DefaultExecutorTest.KillMultipleTasks/0\n\nThe root cause is that either docker containerizer or mesos\ncontainerizer have wait() and destroy() rely on the same\nfuture `ContainerTermination` which means these two methods\nbecome ready simultaneously, but this is not true for the\ncomposing containerizer because wait() may finish before\ndestroy in which case the `containers_` hasshmap is not\ncleaned up yet in destroy()'s `.onAny` callback.\n\nReview: https://reviews.apache.org/r/65141"}, {"url": "https://api.github.com/repos/apache/mesos/commits/ee06a3b4e15a0419df2311e65a72bf03e6bae802", "message": "Reverted \"Updated composing containerizer tests.\".\n\nThis reverts commit 84365a140c3730e2d6579ad500118d6749d2f87f.\n\nReview: https://reviews.apache.org/r/65140"}, {"url": "https://api.github.com/repos/apache/mesos/commits/dd6ab9dcc7b8b9ceb40528e0879cd4e9eace8132", "message": "Reverted \"Fixed `wait()` and `destroy()` in composing containerizer.\".\n\nThis reverts commit 95decd404438abd422794524e01d72a889821566.\n\nThere are two reasons to revert this commit:\n  1. After the agent recovers, if the nested containers that are\n     launched beforehand are killed, they will no longer be updated\n     with new status, because the `WAIT_NESTED_CONTAINER` call from\n     the default executor will end up with a future forever. Please\n     see MESOS-8391 for details.\n  2. The original commit makes the composing containerizer wait()\n     and destroy() rely on the same future of a ContainerTermination\n     promise. This would get into the bug that composing containerizer\n     destroy() may fail due to the wait() future got discarded.\n     Need to protect it by using `undiscardable()`. Please see\n     MESOS-7926 for details.\n\nReview: https://reviews.apache.org/r/65139"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/214985669", "body": "Hi @Djidiouf , thanks for this PR. This is a known issue. Currently we have some tests in LinuxFilesystemIsoaltorTest are flaky. We used to trying fix them by increasing the await time from 15 sec to 60 sec, but it the tests are still flaky, because that may not be the root cause for this failure.\n\nWe usually track on mesos issues in apache mesos JIRA (https://issues.apache.org/jira/browse/MESOS/), which makes it easier to classify diff types and priority of  any issue. If you are interested in working on any issue, please follow [this](http://mesos.apache.org/documentation/latest/submitting-a-patch/) document and submit patches to apache mesos reviewboard. :)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/214985669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/233022520", "body": "Thanks for the clarification @ktf .\n\nThis patch LGTM!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/233022520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "packtpartner": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/bbd461773f0116eb98cf54acf10eb4ef017d475f", "message": "Added a training video to presentations.md.\n\nCreated a new section \"Apache Mesos - Training\" as suggested\nby James Peach and added a video listing.\n\nThis closes #251"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/249", "title": "Update presentations.md", "body": "Added a new Video course.", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/259610912", "body": "Hi @liorze  I have added a new book in the documentation section, can you help me with it?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/259610912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/259617981", "body": "can u push the request? @liorze \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/259617981/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/259618310", "body": "and merge the request to the documents page\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/259618310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/260860387", "body": "@jpeach  can you help me in this?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/260860387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/262141150", "body": "Thank you @bmahler \r\nSorry for the trouble.\r\nOne question, will the book be featured on - http://mesos.apache.org/documentation/latest/index.html", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/262141150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/265362768", "body": "@bmahler \r\nJust checking in", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/265362768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/269436304", "body": "@kaysoky thanks :) ", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/269436304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "judithpatudith": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/07008ac5b529fad856e5036d3c3600d5a25ce733", "message": "Added new MesosCon videos and fixed 404s on presentations.md.\n\n-Fixed 404s caused by Linux Foundation URL structure changes.\n-Added new MesosCon slides and Playlists.\n-Linked to playlist URLs that don't autoplay when you visit them.\n\nThis closes #257"}, {"url": "https://api.github.com/repos/apache/mesos/commits/e35e6808b518ab3f9c1754f64f38d2c539844a8e", "message": "Fixes WG table formatting and add Community WG.\n\nEdits to http://mesos.apache.org/documentation/latest/working-groups/:\n\n- Fix table formatting\n- Add the Community WG (with @vinodkone as the owner since he originally\n  proposed the group)\n\nThis closes #252"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lava": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/49f4b2aff4d9f0603947b04071203a55d008a61c", "message": "Fixed comparison logic for additive reconfiguration policy.\n\nThe case where multiple resources have the same name\nwas not handled correctly, and could result in false\nnegatives.\n\nReview: https://reviews.apache.org/r/65074/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/07430e7011f0cf7df589e5022c7ed6fb70776b37", "message": "Added new reconfiguration_policy flag to docs/updgrades.md.\n\nReview: https://reviews.apache.org/r/65019/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/d02d66043e2beedbb7cd1c1bbf78ce8d506d82b7", "message": "Added a master flag to disallow agents without domain.\n\nAdded a new `--require_agent_domain` flag and implementation. When\nset to true, it will cause the master to refuse (re-)registration\nattempts for agents with no configured domain.\n\nThis is intended as a safety net for operators, who could forget to\nconfigure the fault domain of a remote agent and let it join the\ncluster. If this happens, an agent in a remote region will be\nconsidered a local agent by the master and frameworks (because agent's\nfault domain is not configured), causing tasks to potentially land in a\nremote agent which is undesirable.\n\nReview: https://reviews.apache.org/r/64507/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/3eb57cae3674fc835c784cac9eaa63e1aab7ba1c", "message": "Correctly reset slave status when aborting a registration.\n\nPreviously, the slave was not erased from the `registering`\nand `reregistering` sets in the master for some code paths\nthat would result in a failed (re-)registration attempt.\n\nThis could lead to a state where the reason of the unsuccessful\n(re-)registration attempt is fixed on the agent, but the master\nignores subsequent attempts because it assumes the previous\noperation is still in progress.\n\nReview: https://reviews.apache.org/r/64506/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/ee621bb36debf9d88325ef339afa46ade384e23d", "message": "Updated docs to mention new flag.\n\nReview: https://reviews.apache.org/r/64450/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "orsenthil": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/370b5b634d1132a34022ec184a3056de46b45c4a", "message": "Added links for stout / libprocess READMEs in the getting-started guide.\n\nThis closes #254"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "adam-mesos": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/81937e5e4f8bacf8ea8fa10db5ca919ff0047370", "message": "Updated the release guide website publish section."}, {"url": "https://api.github.com/repos/apache/mesos/commits/f2a506bfb58fa563c63d96f966e53f9bbba3d43f", "message": "Updated the website for Mesos 1.2.3 release."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/62694911", "body": "Thanks! I can merge this in now, but we will be releasing 0.21 very soon, and the release manager will (hopefully) update it again then.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/62694911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/62695025", "body": "commit ac991e21a9b1c2864f96aef66c73f99eb3ba5e01\nAuthor: Samuel theralphsamuel@gmail.com\nDate:   Wed Nov 12 01:59:21 2014 -0800\n\n```\nUpdated download instructions to latest version.\n\nChanged the url and file name in `wget` and in `tar -zxf` commands\nrespectively.\n\nThis closes: #30\nReview: https://github.com/apache/mesos/pull/30\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/62695025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/112886292", "body": "Thanks @kensipe but the Torque integration project is inactive, unsupported, and may no longer work. We've recently discussed moving it out of the Mesos repo into a separate project, if somebody wants to own/maintain it. So, rather than linking to something outdated (or 404), we should just remove the link.\nSee https://issues.apache.org/jira/browse/MESOS-2311 and https://reviews.apache.org/r/31595/ for more context.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/112886292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/140258568", "body": "@conqer Could you please provide a description and a link to a JIRA so we can understand what you're proposing/fixing here?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/140258568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/230934066", "body": "If we do this, let's not forget:\nApache Mesos Essentials by  Dharmesh Kakadia\nhttps://www.packtpub.com/big-data-and-business-intelligence/apache-mesos-essentials\n\nBuilding Applications on Mesos by David Greenberg\nhttp://shop.oreilly.com/product/0636920039952.do\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/230934066/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "mpereira": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/a9a49f834d78168e1445f089934e89d02b8ac549", "message": "Fixed reference to Mesos paper in the documentation.\n\nThe paper is also available at\nhttps://people.eecs.berkeley.edu/~alig/papers/mesos.pdf but I noticed\nit was already included in the site's assets so I just linked that\ninstead.\n\nThis closes #247"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/148956583", "body": "I [amended my commit](https://github.com/apache/mesos/pull/247/commits/46e9e4221f705f94dbe8120c498153dc3af714da) to use the URL you suggested.\r\n\r\nDo you think it's still worth pinging someone about maybe fixing the broken URL [referenced by external websites](https://www.google.com/search?q=%22mesos.berkeley.edu/mesos_tech_report.pdf%22&oq=%22mesos.berkeley.edu/mesos_tech_report.pdf%22)?", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/148956583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "kaysoky": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/87629bf323256223fa2a4cbde08ef9d45c6cfa5a", "message": "Renamed VolumeProfileAdaptor to DiskProfileAdaptor.\n\n\"Disk Profile\" is more accurate than \"Volume Profile\" when describing\nthe set of parameters passed into a Storage Resource Provider while\ncreating disk resources.  A disk resource is not necessarily a \"Volume\"\nbut will always be a disk.\n\nReview: https://reviews.apache.org/r/64972\nReview: https://reviews.apache.org/r/64973"}, {"url": "https://api.github.com/repos/apache/mesos/commits/454e7f2b7c9e87817109f51dae6356aa8f56e766", "message": "Moved SLRP resource recovery logic into a helper.\n\nThis logically separates the Storage Local Resource Provider's\nrecovery logic so that we can insert another step between\nrecovering resources and starting the ResourceProvider Driver.\n\nA subsequent patch will insert the intermediate recovery step(s).\n\nReview: https://reviews.apache.org/r/64615"}, {"url": "https://api.github.com/repos/apache/mesos/commits/f4743f76b34e737d86e5734cdc5f2e70ae2eee3e", "message": "Added flag to pass VolumeProfileAdaptor module to SLRP.\n\nThis adds an agent flag to choose the VolumeProfileAdaptor module\nto load and passes this information down to the storage resource\nproviders. A single module can potentially be used by multiple\nstorage resource providers.\n\nWe choose to pass the module along as a global variable because the\nmodule is not needed by many of the components in the injection path.\nSpecifically, the Storage Local Resource Provider will need the module,\nbut its parents, the Local Resource Provider and Resource Provider\nDaemons will not.\n\nReview: https://reviews.apache.org/r/64612"}, {"url": "https://api.github.com/repos/apache/mesos/commits/504d702cda73ea2583f2adaa45f3a00c5bb993d4", "message": "Added tests for UriVolumeProfile module.\n\nThese tests mostly exercise the parsing logic used by the module\nand some of the interaction expected from callers of the module\n(i.e. the Storage Local Resource Provider).\n\nReview: https://reviews.apache.org/r/64354"}, {"url": "https://api.github.com/repos/apache/mesos/commits/343776d5ea1977fa3fed7fe7c2996c37b5ba5168", "message": "Added example VolumeProfile module.\n\nThis example module shows how a VolumeProfile module might be\nimplemented (and is a viable module in its own right).  The module\ncan be configured to fetch a map of profiles from a URI (`file://` or\n`http(s)://`) and possibly cache this item for some time.\n\nReview: https://reviews.apache.org/r/64353"}, {"url": "https://api.github.com/repos/apache/mesos/commits/86548e1a6ef5e0c4e7bc03e861c4b5c4dc7eae38", "message": "Added default VolumeProfile module implementation.\n\nBy default, Mesos and the Storage Local Resource Provider (SLRP) will\nnot expect profiles to be used. This is partly due to the experimental\nnature of the \"profile\" field and partly because some explicit operator\nintervention is required to get profiles defined. There is no default\nprofile that is accepted by CSI plugins.\n\nReview: https://reviews.apache.org/r/64352"}, {"url": "https://api.github.com/repos/apache/mesos/commits/f80cb6246407951cb7eb37f21bf3a63d98d732ea", "message": "Defined a module interface for translating volume profiles.\n\nThis module is currently intended for use by the Storage Local\nResource Provider (SLRP), but may be used by other components if\nthose components use any of the affected Container Storage Interface\n(CSI) requests. The affected calls are listed in the module's comments.\n\nReview: https://reviews.apache.org/r/63971"}, {"url": "https://api.github.com/repos/apache/mesos/commits/e5f43c990accf43e1323a78f94f7d22c135061c8", "message": "Moved generated CSI code into public directories.\n\nThis moves the Container Storage Interface (CSI) code generated from\nits protobufs into the `include` directory so that other public\nheaders can use them.  The `csi/spec.hpp` was moved too, because\nwe prefer to include a layer of header indirection when adding\ngenerated headers into non-generated headers.\n\nAn upcoming module specifically for CSI support will need to return\nobjects defined in the CSI specification.  And because modules have\npublic interfaces, we'll need the generated headers to be public too.\n\nReview: https://reviews.apache.org/r/64351"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/155853543", "body": "Make sure you read our [guidelines for submitting patches](http://mesos.apache.org/documentation/latest/submitting-a-patch/).  We only use Pull Requests for changes to the website.  Code changes are reviewed on ReviewBoard.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/155853543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/231467185", "body": "The travis CI is broken/not-maintained, since we don't (usually) make any code changes via GitHub PRs.  See: http://mesos.apache.org/documentation/latest/submitting-a-patch/\n\nCan you file a JIRA for this change?  We might have to consider backwards compatibility if the resources string changes.  And we'd like that discussion to take place in JIRA.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/231467185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/242180440", "body": "This MPI code likely does not work anymore, as there is no maintainer for it.  I've opened https://issues.apache.org/jira/browse/MESOS-6084 to track the deprecation of the MPI framework.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/242180440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/242217839", "body": "Dealing with large artifacts should be the framework's responsibility.  \n\nSuppose the framework launches a task with a URI that sometimes hangs.  The framework will receive a `TASK_RUNNING` status update as soon as the URI is done fetching.  If this status update does not come without some framework-defined timeout, the framework should then remediate, say by killing the task and trying again.\n\nWe don't want Mesos to dictate the maximum timeout for any fetches.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/242217839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/243933559", "body": "LGTM.\n\nChecked the UI by running a couple agents:\n\n```\nbin/mesos-master.sh --work_dir=/tmp/master --ip=127.0.0.1\nbin/mesos-agent.sh --master=localhost:5050 --work_dir=/tmp/agent1\nbin/mesos-agent.sh --master=localhost:5050 --work_dir=/tmp/agent2 --port=5052\nbin/mesos-agent.sh --master=localhost:5050 --work_dir=/tmp/agent3 --port=5053\n```\n\nCommenting out this line: \nhttps://github.com/apache/mesos/blob/fb23845214088bf48dd0e9e0324cafa3643d574a/src/cli/execute.cpp#L453\n\nThen building and running:\n\n```\nsrc/mesos-execute --master=localhost:5050 --command=\"sleep 1000\" --name=\"Hoarding task\"\n```\n\nAs expected, the UI showed 1 CPU of usage, consistently.  Checking the \"Offers\" tab showed one offer for each agent (hoarded).\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/243933559/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/246429052", "body": "You can see [on the ASF Mesos CI](https://builds.apache.org/job/Mesos/buildTimeTrend) that successful builds typically takes 60-90 minutes.  However, this is for `make distcheck`.  \n\nA `make check` should take ~40 minutes on a c3.2xlarge AWS instance (8 cores, 15 GB RAM, SSDs).  This is probably beyond the free-tier of Travis.\n\nIf you're interested, here are two commits that show the history of Travis CI usage in Mesos.  It was only enabled briefly between 0.22 and 0.23 :smile: :\n- https://reviews.apache.org/r/28683/\n- https://reviews.apache.org/r/34225/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/246429052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/265537627", "body": "The book in this PR is already staged (i.e. committed).  We plan to update the website later.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/265537627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "ipronin": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/39525482a756e951e798db4c6831b79b65bb75b5", "message": "Fixed RecoverTest.CatchupTruncated test flakiness.\n\nMost likely the \"lock already held by process\" LevelDB error was caused\nby a Shared<Replica> still retained by one of the processes when the\ntest tries to recreate it. This change makes sure that the test code is\nthe only owner of the replica.\n\nReview: https://reviews.apache.org/r/64938/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/310c2c6129e09097f5d31431f754e2285b3c3f58", "message": "Added Log.Reader.catchup() method to Java bindings.\n\nThe new method is a wrapper for Log::Reader::catchup() method of the C++\nReplicated Log API.\n\nReview: https://reviews.apache.org/r/62288/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/49c91614da2a85dd49d1fdc33ef83f9c816de2d2", "message": "Added Log::Reader::catchup() method.\n\nThe new method catches-up positions missing in the local non-leading\nreplica to allow safe eventually consistent reads from it.\n\nReview: https://reviews.apache.org/r/62287/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/aa4d95a0a509394a6616b92a1f170846f713c250", "message": "Added CatchupMissing log process.\n\nThe process is used to catch-up a non-leading VOTING replica by running\nthe recovery protocol to find current begin and end positions of the log\nand catching-up positions that are missing on the replica. This allows\nfollowing replicas to serve eventually consistent reads.\n\nReview: https://reviews.apache.org/r/62286/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/9c25771dcd1ed8dcc7696c0ceaad1d5f08033f88", "message": "Moved retry logic from RecoverProtocolProcess to RecoverProcess.\n\nReview: https://reviews.apache.org/r/62761/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/826277d0b19bfe74062f0f6facff0293133262c3", "message": "Exposed runRecoverProtocol() function in recover.hpp.\n\nThis function is needed catch-up missing positions of a non-leading\nVOTING replica.\n\nReview: https://reviews.apache.org/r/62760/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/6d95a2f02b55e7b957f686f2ff94548fe9b0ffc9", "message": "Added tombstone flag to NOP log action.\n\nNOP action is used as a filler for holes in the \"fill\" procedure and as\nthe action in a response to a promise request for a truncated position.\nThe tombstone flag is introduced so that replicas are able to\ndistinguish the truncated action from a real NOP.\n\nReview: https://reviews.apache.org/r/62285/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/9ac50f31886b63046439ae4d127aa26360f1d3d6", "message": "Fixed code style issues.\n\nReview: https://reviews.apache.org/r/62284/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/2fec43f7d6d639666be8f43adaf690fabd32c9d4", "message": "Fixed a comment typo.\n\nReview: https://reviews.apache.org/r/62283/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vinodkone": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/ca3940b3750af20d29f7a08fc9560b4b3068dce2", "message": "Updated Mesos version to 1.6.0."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/37211863", "body": "also. please rebase off the master.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/37211863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/61931128", "body": "This has been committed. Can you close this?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/61931128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/204558214", "body": "libev is committed. You can rebase it now.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/204558214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/236998352", "body": "I think this broke the ReviewBot. See https://issues.apache.org/jira/browse/MESOS-5958\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/236998352/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/254662319", "body": "Can you close this in favor of the review request?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/254662319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/263641776", "body": "Thanks for the PR. \r\n\r\n@jieyu  what's our recommendation regarding curl dependency? I remember there was a discussion in the mailing list sometime back.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/263641776/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/19363756", "body": "@kamilchm can you file a ticket on issues.apache.org?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19363756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58094904", "body": "Does this comment still apply? AFAICT MESOS-1797 doesn't apply to ZK 3.4.8 since that issue has been resolved in ZK 3.4.7. Looks all the patch does is apply PPC specific fixes for which you already submitted a review https://reviews.apache.org/r/45376/.\n\nI would recommend to kill the zookeper.patch stuff in this review altogether since 3.4.8 doesn't need any patches per se. Then in https://reviews.apache.org/r/45376/ you can add back the patch stuff and mention that you need the patch to compile it on PPC.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58094904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/79516117", "body": "Instead of removing your old affiliation (IBM) completely, can you add an \"end_date\" to it? That way your contributions while you were employed at IBM, will be attributed correctly. See my affiliation above for an example.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/79516117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/81236751", "body": "If your name and reviewboard username have also changed along with your affiliation, then it's probably worth to have two different entries in the YAML file.\n\n```\n- name: Yong Qiao Wang\n  affiliations:\n    - {organization: IBM}\n  emails:\n    - yqwyq@cn.ibm.com\n  jira_user: gradywang\n  reviewboard_user: JamesYongQiaoWang\n\n- name: Yongqiao Wang\n  affiliations:\n    - {organization: Huawei}\n  emails:\n    - grady.wang@foxmail.com\n  jira_user: gradywang\n  reviewboard_user: gradywang\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/81236751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/82063596", "body": "oh ok. then a single entry sounds fine.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/82063596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/148613391", "body": "I think you can use \"https://www.usenix.org/legacy/events/nsdi11/tech/full_papers/Hindman.pdf\"", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/148613391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/148613763", "body": "https://www.usenix.org/conference/nsdi11/mesos-platform-fine-grained-resource-sharing-data-center is even better because it has links to video, audio, slides and the paper.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/148613763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "zhitaoli": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/5e88bc076f9c04293057ed1e4b2f941d1238368c", "message": "Documented new image gc support in Mesos containerizer.\n\nReview: https://reviews.apache.org/r/64813/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/310ba44a4d48d65e5f28db050fed72e343cde441", "message": "Added test for `prune_images` acl validation.\n\nReview: https://reviews.apache.org/r/64865/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/250a9a53ccd937733ef0a507b555aecbb44af356", "message": "Added authorization for prune images API call.\n\nReview: https://reviews.apache.org/r/64864/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/57f37c8e675e5205e3fa662799ab86f49ad70222", "message": "Added `excluded_images` parameter to `PRUNE_IMAGES` agent API.\n\nReview: https://reviews.apache.org/r/64812/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/213242fa373ef26bc44dc5ff445f1be82659d702", "message": "Added a new operator API for `PRUNE_IMAGES`.\n\nReview: https://reviews.apache.org/r/56722/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/71003361", "body": "Can we restructure these two sentences as this is not very clear.\n\nMaybe consider something among:\n\n```\n// Used to determine the Unix user that an executor or task should be\n// launched as.\n//\n// If using MesosSchedulerDriver and this field is set to an empty string, MesosSchedulerDriver\n// will automagically set it to the current user.\n//\n// If using HTTP API, this field must be explicitly set.\n```\n\nSame for the other comment.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/71003361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "komuta": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/141173a72c0ef6b209b38ef382700e3b94b463cc", "message": "Set container info from executor by default if available.\n\nThe current implementation only works for non-command executor\ninstances. We still need to get the container info from the executor\n(if none has been defined in the task) in command mode to properly use\nsome features (volumes for example).\n\nReview: https://reviews.apache.org/r/63598/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jeffaco": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/884226e3b6f432a0f2148d0d0bee498995de662f", "message": "Windows: Updated cURL to version 7.57.0.\n\nThe cURL source and build have improved significantly since we pulled in\nthe previous versoin (7.43.0). Most notably, the new version now\nsupports SChannel (native Windows crypto) on Windows, so we no longer\nneed to use OpenSSL. This benefits us two-fold: it fixes the issue where\nOpenSSL on Windows does not come with a certificate bundle (and thus\ncaused any downloads over TLS to fail because the certificates couldn't\nbe checked), and means we can enable TLS support for anything that uses\ncURL unconditionally, as it \"just works\".\n\nBecause we set `-DCMAKE_USE_WINSSL=ON` uncondtionally, we had to the\n`crypt32` Windows library to the interface link libraries for `libcurl`.\n\nBetween the old and new versions, cURL changed some aspects of their\nbuild system:\n\n1. The Debug configuration now calls the executable `curl-d.exe`, so we\n   had to updated its imported location and explicitly rename it to\n   `curl.exe` in the copy step.\n\n2. We continued to disable building the tests, but the option changed\n   its name from `BUILD_CURL_TESTS` to `BUILD_TESTING`. This is now\n   especially important because building the tests require Perl, which\n   we definitely do not want to add.\n\n3. We disabled LDAP because it didn't build without further\n   setup (OpenLDAP), and we don't currently need it.\n\nReview: https://reviews.apache.org/r/64720/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "AntonDan": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/259", "title": "Update contributors.yaml", "body": "Entry for myself in the contributors file", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/162843847", "body": "Ah my bad, didn't realize they were sorted. Hope it's fixed now", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/162843847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "pleia2": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/256", "title": "Correct spelling errors in the docs", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/161921933", "body": "Ok, I'll back out these adjustments.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/161921933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/161922006", "body": "Noted, I wasn't familiar with this short form. I'll remove these edits.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/161922006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "nhandler": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/255", "title": "Add curl examples to operator-http-api", "body": "When reading this document, many people will want to test out the\r\nrequests against their own environment. Providing curl examples will\r\nhelp assist with this task.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "haoyixin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/221", "title": "Fixed a bug in the logging of cni isolator.", "body": "the old errno would always be 0, and we can't get the reason that why execute ifconfig failed.\r\n\r\nso, we use the return value of spawn for WSTRINGIFYing error in log.\r\n\r\nand this fix format issue @haosdent ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "shendabin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/216", "title": "1.3.x", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aaronjwood": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/205", "title": "Clarify existence of FrameworkID in SUBSCRIBE calls.", "body": "I wanted to clarify how `FrameworkID` should or shouldn't be set in `SUBSCRIBE` calls. Spoke with Anand about this earlier today when I was running into issues with resubscribing.", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/239626047", "body": "Hi @haosdent. Sure, I'm sorry. I had created a JIRA and reviewboard account and went to open this PR but should have only included the change to the contributors file. I can revert the code changes if needed so that only the change to the contributors file lives here.\n\nI've gone ahead and created a JIRA for this https://issues.apache.org/jira/browse/MESOS-6038\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239626047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239626440", "body": "For the context: I had found a few places where these `Promise` objects were leaking. Once the `Future` was returned there was no way to free the memory for the `Promise` object that had been allocated thus causing the leak. I don't have any direct issues with running Mesos that stemmed from this, it's just something I came across that I thought could be fixed.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239626440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/240482442", "body": "I might be misunderstanding things but why can we not do this? I see it being done here https://github.com/apache/mesos/blob/master/3rdparty/libprocess/src/http.cpp#L1001\n\nIf we make the `Promise` local like it is in this patch, pass its address into the tuple via the copy constructor (that should be the copy constructor getting called, right?) so that it takes a copy and doesn't rely on an actual address from the stack, and return the future in the same way as the example above, would that not work? Even though the `Promise` is local to the stack, when we return `Future` shouldn't it be a copy of what's needed underneath?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/240482442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/240490079", "body": "No no, that's okay. I appreciate everyone helping me validate these changes. I'm trying to be very careful with this :)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/240490079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/240494909", "body": "I don't have access to their Slack but I agree.\nI added some more comments that weren't discussed here to this https://reviews.apache.org/r/51068/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/240494909/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/240922944", "body": "It looks like I was wrong about this, I had thought the copy constructor of tuple was getting called when it wasn't the copy constructor at all. I did some more testing with this and found that the original version behaves properly.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/240922944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/284504311", "body": "@hatred No problem, thanks for the help!", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/284504311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "avarsha-ibm": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/191", "title": "Adding support for s390x architecture", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "CVTJNII": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/190", "title": "Ensure curl is present on Ubuntu", "body": "When running on a clean Ubuntu install curl may not be present.  The following error was seen while experimenting with the ubuntu:14.04 Docker container:\r\n\r\n```\r\nReceived status update TASK_FAILED for task 'test'\r\n  message: 'Failed to launch container: Failed to perform 'curl': ABORT: (../../../3rdparty/libprocess/include/process/posix/subprocess.hpp:214): Failed to os::execvpe on path 'curl': No such file or directory\r\n*** Aborted at 1480435360 (unix time) try \"date -d @1480435360\" if you are using GNU date ***\r\nPC: @     0x7f1d40711c37 (unknown)\r\n*** SIGABRT (@0x61) received by PID 97 (TID 0x7f1d38ef5700) from PID 97; stack trace: ***\r\n    @     0x7f1d40fca330 (unknown)\r\n    @     0x7f1d40711c37 (unknown)\r\n    @     0x7f1d40715028 (unknown)\r\n    @           0x46e1fc _Abort()\r\n    @           0x46e22a _Abort()\r\n    @     0x7f1d4648d0e1 process::internal::childMain()\r\n    @     0x7f1d46491f7b _ZNSt5_BindIFPFiRKSsPPcS3_RKN7process10Subprocess2IO20InputFileDescriptorsERKNS6_21OutputFileDescriptorsESC_bPiRKSt6vectorINS5_9ChildHookESaISF_EEESsS3_S3_S7_SA_SA_bSD_SH_EE6__callIiJEJLm0ELm1ELm2ELm3ELm4ELm5ELm6ELm7ELm8EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE\r\n    @     0x7f1d46491394 _ZNSt5_BindIFPFiRKSsPPcS3_RKN7process10Subprocess2IO20InputFileDescriptorsERKNS6_21OutputFileDescriptorsESC_bPiRKSt6vectorINS5_9ChildHookESaISF_EEESsS3_S3_S7_SA_SA_bSD_SH_EEclIJEiEET0_DpOT_\r\n    @     0x7f1d464904f0 std::_Function_handler<>::_M_invoke()\r\n    @           0x4780b0 std::function<>::operator()()\r\n    @     0x7f1d4524f325 process::defaultClone()\r\n    @     0x7f1d4648fb3d std::_Function_handler<>::_M_invoke()\r\n    @     0x7f1d4648f3c3 std::function<>::operator()()\r\n    @     0x7f1d4648d93d process::internal::cloneChild()\r\n    @     0x7f1d4648b8c5 process::subprocess()\r\n    @     0x7f1d45b967f1 mesos::uri::curl()\r\n    @     0x7f1d45b96e18 mesos::uri::curl()\r\n    @     0x7f1d45b991b8 mesos::uri::DockerFetcherPluginProcess::fetch()\r\n    @     0x7f1d45ba485a _ZZN7process8dispatchI7NothingN5mesos3uri26DockerFetcherPluginProcessERKNS2_3URIERKSsS5_SsEENS_6FutureIT_EERKNS_3PIDIT0_EEMSE_FSC_T1_T2_ET3_T4_ENKUlPNS_11ProcessBaseEE_clESP_\r\n    @     0x7f1d45baba29 _ZNSt17_Function_handlerIFvPN7process11ProcessBaseEEZNS0_8dispatchI7NothingN5mesos3uri26DockerFetcherPluginProcessERKNS6_3URIERKSsS9_SsEENS0_6FutureIT_EERKNS0_3PIDIT0_EEMSI_FSG_T1_T2_ET3_T4_EUlS2_E_E9_M_invokeERKSt9_Any_dataS2_\r\n    @     0x7f1d46441071 std::function<>::operator()()\r\n    @     0x7f1d46423db1 process::ProcessBase::visit()\r\n    @     0x7f1d4642c1c6 process::DispatchEvent::visit()\r\n    @     0x7f1d4504084c process::ProcessBase::serve()\r\n    @     0x7f1d464200a6 process::ProcessManager::resume()\r\n    @     0x7f1d4641cd31 _ZZN7process14ProcessManager12init_threadsEvENKUt_clEv\r\n    @     0x7f1d4642b96e _ZNSt12_Bind_simpleIFZN7process14ProcessManager12init_threadsEvEUt_vEE9_M_invokeIIEEEvSt12_Index_tupleIIXspT_EEE\r\n    @     0x7f1d4642b8c5 _ZNSt12_Bind_simpleIFZN7process14ProcessManager12init_threadsEvEUt_vEEclEv\r\n    @     0x7f1d4642b85e _ZNSt6thread5_ImplISt12_Bind_simpleIFZN7process14ProcessManager12init_threadsEvEUt_vEEE6_M_runEv\r\n    @     0x7f1d40d67a60 (unknown)\r\n    @     0x7f1d40fc2184 start_thread\r\n    @     0x7f1d407d537d (unknown)\r\n' \r\n  source: SOURCE_AGENT\r\n  reason: REASON_CONTAINER_LAUNCH_FAILED\r\n```\r\n\r\nThis is resolved by running 'apt-get install curl' which this PR adds to the getting started instructions.\r\n\r\nThis PR only adds Curl to the Ubuntu instructions as it is believed to already be present on CentOS:\r\n\r\n```shell\r\n$ for dist in ubuntu:14.04 ubuntu:16.04 centos:6.6 centos:7; do echo \"$dist: $(docker run $dist curl --version 2>&1 | head -n 1)\"; done\r\nubuntu:14.04: docker: Error response from daemon: oci runtime error: exec: \"curl\": executable file not found in $PATH.\r\nubuntu:16.04: docker: Error response from daemon: oci runtime error: exec: \"curl\": executable file not found in $PATH.\r\ncentos:6.6: curl 7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.15.3 zlib/1.2.3 libidn/1.18 libssh2/1.4.2\r\ncentos:7: curl 7.29.0 (x86_64-redhat-linux-gnu) libcurl/7.29.0 NSS/3.19.1 Basic ECC zlib/1.2.7 libidn/1.28 libssh2/1.4.3\r\n```", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jneimanmesos": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/178", "title": "WIP: Mesos Documentation Project Reorg Proposal", "body": "This is an initial proposal for reorganizing the Mesos Documentation. \r\n\r\nOur goal is to satisfy the needs of Operators, Developers, and Contributors by:\r\n\r\n  - Revising, restructuring, and expanding existing topics.\r\n  - Authoring new topics, such as _Quick Start_ and _What is Mesos?_.\r\n  - Reorganizing the table of contents.\r\n  - Providing role-specific views of the table of contents.\r\n\r\n\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "haosdent": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/158", "title": "Fixed MESOS-5925 Building Mesos in Docker 1.12 on OS X", "body": "- Replaced gmock-1.7.0.tar.gz with a correct permissions version.\n- Replaced gperftools-2.5.tar.gz with a correct permissions version.\n\nBecause I found upload binary changes does not work in https://reviews.apache.org/r/51079/ and  https://reviews.apache.org/r/51080/,  I open this pull request.\n", "author_association": "MEMBER"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/128593622", "body": "This document is sorted by dictionary order, could you put it after \n- [LIFX](http://lifx.co)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/128593622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/128593971", "body": "And I think @davelester could help you merge this.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/128593971/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/128595710", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/128595710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/128664795", "body": "Thank you very much. @mpark \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/128664795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/129296955", "body": "Maybe @davelester is busy with MesosConf now, let me help you @mpark .\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/129296955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/130628004", "body": "Hi, @usultrared The document is not real time update. It would show after next website generation. But your company has already in repo now. https://github.com/apache/mesos/blob/master/docs/powered-by-mesos.md\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/130628004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/132237198", "body": "+1, ping @davelester \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/132237198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141167847", "body": "This idea looks cool. :+1: \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141167847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/147584753", "body": "Passed in https://travis-ci.org/apache/mesos/builds/85041081 . Let me close this and move discussion to https://reviews.apache.org/r/39257/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/147584753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/153925250", "body": "Could you include the change of document?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/153925250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/185292684", "body": "Hi, we use https://reviews.apache.org/groups/mesos/ to review patches. Could you follow https://github.com/apache/mesos/blob/master/docs/submitting-a-patch.md to post you patch? Thank you very much.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/185292684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/217621118", "body": "Weibo is the twitter in China. They use Mesos, Swarm and Docker to build their Docker Container Platform and share the details on [infoQ](http://www.infoq.com/cn/articles/weibo-DCP1) \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/217621118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/217632860", "body": "ping @rukletsov @vinodkone , may you help to review the Powered by Mesos updates?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/217632860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/217632868", "body": "ping @rukletsov @vinodkone , may you help to review the Powered by Mesos updates?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/217632868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/217632873", "body": "ping @rukletsov @vinodkone , may you help to review the Powered by Mesos updates?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/217632873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/219896230", "body": "@fayusohenson Are you still working on this? May you post it in reviewboard? https://reviews.apache.org/groups/mesos/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/219896230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/219915168", "body": "@fayusohenson I copy your patch to https://reviews.apache.org/r/47510/ for review convenience. Noted that @janisz has similar patch on https://reviews.apache.org/r/47499/ . I think both of them may merged eventually because their include different necessary changes. \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/219915168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/228508027", "body": "haha, you could ignore travis, it always failed.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/228508027/reactions", "total_count": 2, "+1": 1, "-1": 0, "laugh": 1, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/231167366", "body": "Thanks @bbannier I file the ticket at https://issues.apache.org/jira/browse/MESOS-5803 , let's continue the discussion there.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/231167366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232883006", "body": "Please update `include/mesos/mesos.proto` as well.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232883006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232885884", "body": "LGTM. :-)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232885884/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/238068160", "body": "You can ignore the failure because Mesos didn't use travis\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/238068160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239610552", "body": "Hi, @aaronjwood Because we use [reviewboard](https://reviews.apache.org/groups/mesos/) to review code changes. Could you follow https://github.com/apache/mesos/blob/master/docs/submitting-a-patch.md to submit your patch? \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239610552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239610674", "body": "In addition, I think it would be more helpful to describe more context about the memory leaks here to help others understand this patch. \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239610674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239621448", "body": "Run `man tar` in OS X could not find this option: `no-same-owner`.  I think we should make sure this patch don't break OS X?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239621448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239623328", "body": "Verify OS X tar would ignore unknow flags. So it works in OS X. \n\n+1 for this change.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239623328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239627140", "body": "It looks like a bug of docker mount volume in OS X.\n\n```\nroot@7f689b81a4bb:~/workspace/cpp/mesos/build/gmock-1.7.0# chown root:root test/gmock_test_utils.py\nchown: changing ownership of 'test/gmock_test_utils.py': Permission denied\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239627140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239627506", "body": "@tillt That make sense. I am finding if it has tracked in docker issues, otherwise I could file one.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239627506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239655071", "body": "As I checked, only gmock-1.7.0 and gperftools-2.5 encounter this problem. If I use the releases from https://github.com/google/googlemock/releases, it works fine.\n\nAnd for other tars, although there are packaged with different users. They still could be unpacked successfully.\n\n```\n$ tar --list -v --file boost-1.53.0.tar.gz  | head -2\ndrwxr-xr-x jie/staff         0 2016-01-18 07:35 boost-1.53.0/\ndrwxr-xr-x jie/staff         0 2016-01-18 07:34 boost-1.53.0/boost/\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239655071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239655236", "body": "OK, I think I find the root cause. \n\n```\n$ stat test/gmock-port_test.cc\n  File: 'test/gmock-port_test.cc'\n  Size: 2020            Blocks: 4          IO Block: 512    regular file\nDevice: 28h/40d Inode: 37331162    Links: 1\nAccess: (0444/-r--r--r--)  Uid: (    0/    root)   Gid: (    0/    root)\nAccess: 1970-01-01 00:00:00.000000000 +0000\nModify: 2013-09-18 17:50:15.000000000 +0000\nChange: 2016-08-14 04:06:55.000000000 +0000\n Birth: -\n```\n\n```\n$ stat ./.git/objects/pack/pack-4ad0e5887c21e2edcca6e6b0af3851568bbee729.idx\n  File: './.git/objects/pack/pack-4ad0e5887c21e2edcca6e6b0af3851568bbee729.idx'\n  Size: 144180          Blocks: 282        IO Block: 512    regular file\nDevice: 28h/40d Inode: 37330833    Links: 1\nAccess: (0444/-r--r--r--)  Uid: (    0/    root)   Gid: (    0/    root)\nAccess: 2016-08-14 04:08:46.000000000 +0000\nModify: 2016-04-19 21:45:36.000000000 +0000\nChange: 2016-08-14 04:06:51.000000000 +0000\n Birth: -\n```\n\nThose files are `-r--r--r--`, which don't allow to write. \ud83d\ude02 Docker is correct.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239655236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239656413", "body": "cc @tillt @karya0 @radekg\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239656413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239683887", "body": "@radekg Yes, I think to change the incorrect permissions in the tar packages is better than add `--no-same-owener` as a workaround.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239683887/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/240466750", "body": "+1 For what @Vish0007 said. If promise became a locale scope object here, return its future seems incorrect. I search `return \\S+\\.future\\(\\);` in all exists code, all `Promise` are member objects or heap objects.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/240466750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/240487580", "body": "> Even though the Promise is local to the stack, when we return Future shouldn't it be a copy of what's needed underneath?\n\nSorry, I misunderstanding something before. Future store its data in `std::shared_ptr<Data> data` and your function return a copy instead of const reference, so it should work.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/240487580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/240490973", "body": "By the way, copy a comment from @jpeach in https://mesos.slack.com/messages/cxx/\n\n``````\nPromise<int> promise = Promise<int>();\n\nwhy not just\n```Promise<int> promise;```\n``\n``````\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/240490973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/240497154", "body": "You could join via https://mesos-slackin.herokuapp.com/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/240497154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/246430519", "body": "Some experience to make it faster as well. https://reviews.apache.org/r/39257/diff/1#index_header (`- CXXFLAGS=-gsplit-dwarf`)\nBut I think we give up travis ci long time ago? Refer to https://issues.apache.org/jira/browse/MESOS-5655?focusedCommentId=15339918&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15339918\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/246430519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/261018689", "body": "@klueska may interest at this.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/261018689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/262164519", "body": "hi, @windreamer Since we order this list alphabetically, could you put your name before `name: zhou xing`?", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/262164519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/262166955", "body": "LGTM, thank you.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/262166955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/262167111", "body": "LGTM \ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/262167111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/263643510", "body": "The associate mail: [Making 'curl' a prerequisite for installing Mesos](https://www.mail-archive.com/dev@mesos.apache.org/msg34530.html)", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/263643510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/265466373", "body": "Refer to \r\n* https://github.com/apache/mesos/blob/1.1.0/src/python/native/setup.py.in#L29-L30\r\n* https://github.com/apache/mesos/blob/1.1.0/src/python/scheduler/setup.py.in#L31\r\n* https://github.com/apache/mesos/blob/1.1.0/src/python/executor/setup.py.in#L31\r\nThis patch looks good to me. @tillt May you help review this patch again? Thank you in advance.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/265466373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/272910462", "body": "This has been fixed in latest code https://github.com/apache/mesos/blob/1.1.x/include/mesos/zookeeper/zookeeper.hpp#L44 We should close this pr.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/272910462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/280402227", "body": "Hi, @dcaba Since Mesos have used Apache CI to perform testings instead of travis ci, could refer to https://issues.apache.org/jira/browse/MESOS-5655 for the details. And thx @jfarrell, he just disabled the travis ci for Mesos. cc @vinodkone ", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/280402227/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/284135227", "body": "yah, actually apache jenkins have integrated with github. Could provide build status via this badge icons.\r\n\r\nBuild status: ![](https://builds.apache.org/job/Mesos-Buildbot/badge/icon)\r\ncmake,gcc,--verbose --enable-libevent --enable-ssl,GLOG_v=1 MESOS_VERBOSE=1,centos:7 ![](https://builds.apache.org/view/All/job/Mesos-Buildbot/BUILDTOOL=cmake,COMPILER=gcc,CONFIGURATION=--verbose%20--enable-libevent%20--enable-ssl,ENVIRONMENT=GLOG_v=1%20MESOS_VERBOSE=1,OS=centos%3A7,label_exp=(docker%7C%7CHadoop)&&(!ubuntu-us1)&&(!ubuntu-eu2)/badge/icon)", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/284135227/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58294393", "body": "Looks good to me. Could you put it after `[New York, NY]`, because it is sorted by alphabetically. By the way, you need find a committer help you submit this.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58294393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69151507", "body": "Hi, why remove this condition `if (initializing || consecutiveFailures > 0) {`\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69151507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69152934", "body": "Oh, got it. Could you follow https://github.com/apache/mesos/blob/master/docs/submitting-a-patch.md to submit the patch at https://reviews.apache.org/groups/mesos/ \nWe use reviewboard to review code changes.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69152934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69599122", "body": "The path incorrect here?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69599122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69601291", "body": "I post a quick fix at https://reviews.apache.org/r/49641/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69601291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69700021", "body": "OK, LGTM. If you are not familiar with review board, I could help you to post this patch there.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69700021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69842063", "body": "> 1) let the framework persist task health status before acknowledging the update\n\nThis approach looks better. @brat002 May you mind close this pull request and let me create a ticket in https://issues.apache.org/jira/browse/MESOS to track this?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69842063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/77327254", "body": "Ubuntu 14.04 din't contain openjdk-8-jdk in their repo.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/77327254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/77327318", "body": "We still need to support 14.04, may you add a new section only for 16.04?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/77327318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/122888338", "body": "Add a extra space, need to align \"<<\"", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/122888338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/122888509", "body": "Put it after `#include \"common/protobuf_utils.hpp\"`", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/122888509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/122889806", "body": "`Failed to fork process`", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/122889806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/122892058", "body": "Replace `failed` to `Failed`.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/122892058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "brat002": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/118", "title": "Make Mesos healtchecks compatible with Marathon", "body": "https://github.com/mesosphere/marathon/issues/916\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/230989616", "body": "> May you mind close this pull request and let me\n> Yes, of course.\n\n2016-07-07 9:04 GMT+03:00 Benjamin Bannier notifications@github.com:\n\n> Could you please move this to reviewboard so we got this growing\n> discussion in the expected place? @drexin https://github.com/drexin\n> @haosdent https://github.com/haosdent @brat002\n> https://github.com/brat002 @ConnorDoyle https://github.com/ConnorDoyle\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/apache/mesos/pull/118#issuecomment-230986849, or mute\n> the thread\n> https://github.com/notifications/unsubscribe/ADyecDwP1haN5pVccLf-ksJ-mPXssuB7ks5qTJb7gaJpZM4JCPCQ\n> .\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/230989616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69152156", "body": "We need to update Health status every time when it triggered.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69152156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69314525", "body": "Could anybody make correct pull request? I am not C programmer and not 100% sure in these changes. \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69314525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69706561", "body": "It will be great. Thank you.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69706561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "frankscholten": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/105", "title": "MESOS-3139 Added first draft CMake build docs.", "body": "", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/104", "title": "MESOS-3932 Suppressed boost auto_ptr compile warnings.", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ayouwei": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/69", "title": "update module doc:  add parameter -c to build command", "body": "without -c parameter, get error:\n\n/usr/lib/gcc/x86_64-redhat-linux/4.8.3/../../../../lib64/crt1.o: In function `_start':\n(.text+0x20): undefined reference to`main'\ncollect2: error: ld returned 1 exit status\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "conqer": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/65", "title": "Process dispatch", "body": "## Generic Asynchronous Dispatcher   \n## Motivation\n\n  Since mesos code is based on the actor model and dispatching an interface  \nasynchronously is a large part of the code base, generalizing the higher level concept of  \nasynchronously dispatching an interface would eliminate the need to manually \nprogram the dispatch boilerplate.                                         \n\nAn example usage:  \nFor a simple interface like:                                                     \n\n``` C\nclass Interface                                                                  \n{                                                                                \n  virtual Future<size_t> writeToFile(const char* data) = 0;                      \n  virtual ~Interface();                                                          \n};     \n```\n\nToday the developer has to do the following:                                     \n\na.  Write a wrapper class that implements the same interface to add the  \n    dispatching boilerplate.  \nb.  Spend precious time in reviews.  \nc.  Risk introducing bugs.                                                       \n\n  None of the above steps add any value to the executable binary.                \n\nThe wrapper class would look like:                                               \n\n``` C\n\n// -- hpp file                                                                   \nclass InterfaceProcess;                                                          \n\nclass InterfaceImpl : public Interface                                           \n{                                                                                \npublic:                                                                          \n  Try<Owned<InterfaceImpl>> create(const Flags& flags);                          \n\n  virtual Future<size_t> writeToFile(const char* data);                          \n\n  ~InterfaceImpl();\nprivate:                                                                         \n  Owned<InterfaceProcess> process;                                               \n};                                                                               \n\n// -- cpp file                                                                   \nTry<Owned<InterfaceImpl>> create(const Flags& flags)                             \n{                                                                                \n  // Code to create the InterfaceProcess class.                                  \n}                                                                                \n\nFuture Future<size_t> InterfaceImpl::writeToFile(const char* data)               \n{                                                                                \n  process->dispatch(                                                             \n    &InterfaceProcess::writeToFile,                                              \n    data);                                                                       \n}                                                                                \n\nInterfaceImpl::InterfaceImpl()                                                   \n{                                                                                \n  // Code to spawn the process                                                   \n}                                                                                \n\nInterfaceImpl::~InterfaceImpl()                                                  \n{                                                                                \n  // Code to stop the process.                                                   \n}   \n```\n\nAt the caller/client site, the code would look like:                             \n\n``` C\nTry<Owned<Interface>> in = InterfaceImpl::create(flags);                         \nFuture<size_t> result =                                                          \n  in->writeToFile(data);                                                                       \n```\n## Proposal                                                                         \n\n  We should use C++'s rich language semnatics to express the intent and avoid  \nthe boilerplate we write manually.  \n  The basic intent of the code that leads to all the boilerplate above is:       \n\na. An interface that provides a set of functionality.  \nb. An implementation of the interface.  \nc. Ability to dispatch that interface asynchronously using actor.                \n\nC++ has a rich set of generics that can be used to express above.                \n## Components                                                                       \n1. ProcessDispatcher  \n   This component will \"dispatch\" an interface implementation asychronously using \n   the process framework.  \n   This component can be expressed as:                                            \n   \n   ``` C\n   ProcessDispatcher<Interface, InterfaceImplmentation>   \n   ```\n2. DispatchInterface  \n   Any interface that provides an implementation that can be \"dispatched\" can be  \n   expressed using this component.  \n   This component can be expressed as:                                            \n\n``` C\nDispatchable<Interface>  \n```\n## Usage:\n1. Simple usage  \n\n``` C\nTry<Owned<Dispatchable<Interface>>> dispatcher =                                 \n  ProcessDispatcher<Interface, InterfaceImpl>::create(flags);                    \n\nFuture<size_t> result =                                                          \n  dispatcher->dispatch(                                                          \n    Interface::writeToFile,                                                      \n    data);                                                                       \n```\n1. Collecting the interface in a container                                       \n   \n   ``` C\n   vector<Owned<Dispatchable<Interface>>> dispatchCollection;                       \n   \n   Try<Owned<Dispatchable<Interface>>> dispatcher1 =                                \n   ProcessDispatcher<Interface, InterfaceImpl1>::create(flags);                   \n   \n   Try<Owned<Dispatchable<Interface>>> dispatcher2 =                                \n   ProcessDispatcher<Interface, InterfaceImpl2>::create(\"test\");                  \n   \n   dispatchCollection.push_back(dispatcher1);                                       \n   dispatchCollection.push_back(dispatcher2);    \n   \n   ```\n\nThe advantages of using the generic dispatcher:\n- Saves time by avoiding to write all the boilerplate and going through review  \n  cycles.  \n- Less bugs.  \n- Focus on real problem and not boilerplate.  \n- Less code to represent a primitive.  \n", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/140798434", "body": "@adam-mesos, @mpark  I have updated the description.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/140798434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141209566", "body": "@haosdent  What do you think about the usage difference. Earlier at the call site it used to be:\ninterface->foo(arg1, arg2);\n\nWith this change, the interface would be:\ndispatcher.dispatch(&interface::foo, arg1, arg2);\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141209566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141209728", "body": "@jieyu \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141209728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141245079", "body": "@jieyu I agree that there is a inconvenience factor in writing \"dispatch\". The advantage is that you just write the process implementation class (no wrapper) and life cycle management comes for free. I am guessing that writing hundreds of lines of wrapper is more inconvenient.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141245079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141257085", "body": "I see your point about the familiarity of using c++ syntax to call a\nmethod. Since I have been writing both the caller sites and callee\ncode(wrapper), i feel that i might be happy trading off adapting my call\nstyle to avoid writing 100s of boilerplate. If this was an external facing\nAPI, I would not have second thoughts about using C++ language syntax. Here\nthe caller and callee is usually the same developer and developers usually\navoid boilerplate. WDYT?\n\nOn Thu, Sep 17, 2015 at 3:26 PM, Jie Yu notifications@github.com wrote:\n\n> @conqer https://github.com/conqer It's a trade off, right? User has to\n> use 'dispatch' at very single call site vs. only has one dispatch in the\n> boilerplate code. I personally prefer the second one to simply the call\n> sites.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/apache/mesos/pull/65#issuecomment-141254728.\n\n## \n\nJojy G Varghese\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141257085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141268341", "body": "Couple of reasons:\n- Conceptually I will be tightly coupled with the dispatch mechanism\n  (process)\n- Life cycle management and process'ness of the implementation will also\n  have to be done at the client site. By process'ness i mean process start,\n  end, terminate etc. In a way this is the same point as the above point\n  (tight coupling).\n\nOn Thu, Sep 17, 2015 at 3:56 PM, Jie Yu notifications@github.com wrote:\n\n> If you are OK with using dispatch(&TokenManager::xxx, args...) at the\n> callsite, why not just use TokenManagerProcess directly? Why do you need\n> TokenManager?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/apache/mesos/pull/65#issuecomment-141263272.\n\n## \n\nJojy G Varghese\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141268341/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141300092", "body": "Yes i think it will come down to :\n- Inconvenience in adapting to the dispatch way of calling things\n\nvs\n- getting rid of all the boilerplate\n- representation of dispatch primitive\n- Automatic life cycle management.\n\nthanks for your feedback.\n\nOn Thu, Sep 17, 2015 at 4:29 PM, Jie Yu notifications@github.com wrote:\n\n> Yeah, I think the lifecycle management part is definitely useful.\n> \n> I am just not very convinced about the 'dispatch' part. I could be wrong.\n> Maybe you should ping BenH.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/apache/mesos/pull/65#issuecomment-141275625.\n\n## \n\nJojy G Varghese\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141300092/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141701521", "body": "Wanted to clarify what i meant by representation of dispatch as a higher level construct. Process \"Dispatch\" is A policy of how a interface can be dispatched. There could be others - say C++11 async or maybe grand central dispatch. The thought is along the lines of policy based designs.\n\n> On Sep 18, 2015, at 10:26 AM, Jie Yu notifications@github.com wrote:\n> \n> @conqer Thanks for the summary! I think we all agree that \"Automatic life cycle management.\" is a useful thing to do (as you already did). We can iterate on the \"dispatch\" primitive later and see what other people think about this.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/141701521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "hshoff": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/22281015", "body": "Just realized this isn't right way to submit a patch. My bad. Github's easy file editing to pull request got me.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/22281015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "deric": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/22933636", "body": "Ok cool, replace it with the link to `master/docs/High-Availability.md` and we can close the issue. It's hard to find the current version of documentation. Btw. the incubator repository won't be used anymore?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/22933636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ankurcha": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/24979222", "body": ":+1: \n\nI submitted a pretty much equivalent pull request #6. Although, I may suggest being consistent and using markdown for all docs rather than just a single file.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/24979222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Du-Li": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/27323133", "body": "Yes. This change together with another CLI mesos-upload were submitted to the ReviewBoard last Friday at the Mesos Hackathon.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/27323133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "davelester": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/31990534", "body": "Just committed this, thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/31990534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35659955", "body": "Thanks for this Du, closing this PR.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35659955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35660146", "body": "Thanks, CloudPhysics was added to the #PoweredByMesos page a while ago so we've closed this issue.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35660146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35660534", "body": "Thanks for this previous contribution; this was fixed in the documentation a few months back so we've closed this PR.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35660534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661479", "body": "Thanks for contributing this; we previously didn't have a way to accept these types of pull requests but now do. Unfortunately, we made the change from textile -> markdown without this patch, but appreciate your contribution along with @ankurcha!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661510", "body": "Thanks for contributing this; we previously didn't have a way to accept these types of pull requests but now do. Unfortunately, we made the change from textile -> markdown without this patch, but appreciate your contribution!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661660", "body": "Thanks for contributing this; we previously didn't have a way to accept these types of pull requests but now do. If this PR is still relevant, please reopen it and we'll see that it is reviewed.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/37085163", "body": "Thanks! Could you also update this pull request to remove the link to logging-and-debugging.md in home.md?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/37085163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/48945644", "body": "Thanks! I just committed this, but it looks like asfbot didn't close this when I committed your patch. Could you close this request?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/48945644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/62494157", "body": "Thanks for sharing! This has been committed. Can you close this?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/62494157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/105638062", "body": "Thanks for this contribution, I just pushed this to master. Could you please close this PR?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/105638062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/105639071", "body": "Thanks for this contribution, I just added Allegro to the Powered By Mesos list by applying this pull request: https://github.com/apache/mesos/pull/43\n\nIs it safe to assume that Allegro and the Allegro Group are the same company? Or is this just a coincidence?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/105639071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/111747685", "body": "Thanks for adding yourself to the PoweredBy page! I just merged this into master.\n\nCould you please close this pull request?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/111747685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/129997175", "body": "@mpark thanks for committing this! In the future if you update the documentation or adopters list, please also do a separate update of the website to reflect these changes so they don't get out of sync. I can put it live this time.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/129997175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/130984127", "body": "@usultrared  This is now reflected on the website: http://mesos.apache.org/documentation/latest/powered-by-mesos/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/130984127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/138726976", "body": "@markeijsermans awesome, this has now been committed. Can you close this PR?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/138726976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/138727044", "body": "@eguven @mamachanko awesome, this has now been committed. Can you close this PR?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/138727044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/138727099", "body": "@pmbauer awesome, this has now been committed. Can you close this PR?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/138727099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Humbedooh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/35667417", "body": "Looks good :) (I'm just writing something to test the IRC relaying of this)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35667417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "CruncherBigData": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/35760223", "body": "great thanks. Will do.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35760223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "h4ck3rm1k3": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/40812917", "body": "Updated the commit to rebase it and remove the other patches.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/40812917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sirupsen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/42228515", "body": "oops, opened the PR to the wrong repo :blush: This was for our internal fork :)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/42228515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "yifan-gu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/44363827", "body": "Pushed via review board.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/44363827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kensipe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/46719823", "body": "done deal.  Thx!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/46719823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "adgaudio": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/48981126", "body": "Awesome!  thanks :)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/48981126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "tnachen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/53287289", "body": "hi @MartinWeindel, can you post on reviewboard instead? That's how all the mesos patches are reviewed.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/53287289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58532808", "body": "@kmatzen Thanks for the PR, we usually take reviewboard patches.\nThe biggest problem for adding privileged flag is that it changes the default local loopback address of the container, and then launching docker container as an executor I believe will start failing.\nLet's try to get your patch ready so we can merge it.\nCan you add a unit test in docker_containerizer_tests that mimics the ROOT_DOCKER_Launch_Executor_Bridged test, but also add the priviledged flag and see if the unit test pass or fail?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58532808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58570685", "body": "@kmatzen btw we can collaborate here and eventually you still need to submit a reviewboard for the final review.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58570685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58678260", "body": "@kmatzen if you don't have time to work on this i'll take this over\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58678260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58766111", "body": "Are you running the unit test as is? The best way is to enable verbose logging and run the test again.\nBtw can you post your patch on reviewboard? Let's move it there as I like to get this committed soon\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58766111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58767009", "body": "if you run it with gdb-mesos-test, then you also add the --verbose flag to it. Then you can see the slave log with the test output, and it should tell you why the container launched failed (or maybe some other reason). It also show you the docker commands it ran, so if the docker command failed try running it manually too.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58767009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58767788", "body": "You can find me on #mesos irc (tnachen), if you like to ask any questions right away\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58767788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58771052", "body": "The executor framework should detect it's getting a 127.0.0.1 and attempt to register with the public ip.\n\nAre you adding privileged? The framework itself should already done this, and want to make sure with privileged it's still doing the correct behavior.\n\n> On Oct 11, 2014, at 5:35 PM, Kevin Matzen notifications@github.com wrote:\n> \n> It's always setting MESOS_SLAVE_PID to 127.0.1.1 which is fine for the --net=host tests, but won't work for --net=bridged. How do I specify an alternative slave address? Can I set the slave --hostname somewhere?\n> \n> MESOS_SLAVE_PID=slave(2)@127.0.1.1:40751\n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58771052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/151665563", "body": "Technically this is not correct as the container ID shouldn't have the SlaveID in there and will cause other problems. I'm not sure what the recovery problem as I haven't looked into yet, but I know this is not how we should fix this. We should fix the logic that's happening in recover instead. \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/151665563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "MartinWeindel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/53337852", "body": "post on reviewboard will follow\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/53337852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "minid33": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/58530671", "body": "@kmatzen Looks like this is the way your code enters an Apache project, I'd love for this change to go in, I need it a lot.\n\nhttp://mesos.apache.org/documentation/latest/mesos-developers-guide/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58530671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kmatzen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/58692214", "body": "Sorry about the delay.  I'll get the unit test ready this evening.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58692214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58734532", "body": "I tried to run ROOT_DOCKER_Launch_Executor_Bridged itself and it failed.  How am I supposed to run this test? ROOT_DOCKER_Launch_Executor passes.\n\n```\nmesos/src$ sudo GLOG_v=1 GLOG_alsologtostderr=1 ./mesos-tests --gtest_filter=DockerContainerizerTest.*\nWARNING: Logging before InitGoogleLogging() is written to STDERR\nI1010 20:13:51.893070  6507 process.cpp:1671] libprocess is initialized on 127.0.1.1:60054 for 32 cpus\nSource directory: /media/kmatzen/89723e86-174d-4e30-b4be-cd91c420b5dc/kmatzen/mesos\nBuild directory: /media/kmatzen/89723e86-174d-4e30-b4be-cd91c420b5dc/kmatzen/mesos\n-------------------------------------------------------------\nWe cannot run any cgroups tests that require mounting\nhierarchies because you have the following hierarchies mounted:\n/sys/fs/cgroup/blkio, /sys/fs/cgroup/cpu, /sys/fs/cgroup/cpuacct, /sys/fs/cgroup/cpuset, /sys/fs/cgroup/devices, /sys/fs/cgroup/freezer, /sys/fs/cgroup/hugetlb, /sys/fs/cgroup/memory, /sys/fs/cgroup/perf_event\nWe'll disable the CgroupsNoHierarchyTest test fixture for now.\n-------------------------------------------------------------\nNote: Google Test filter = DockerContainerizerTest.*-CgroupsNoHierarchyTest.ROOT_CGROUPS_NOHIERARCHY_MountUnmountHierarchy:SlaveCount/Registrar_BENCHMARK_Test.performance/0:SlaveCount/Registrar_BENCHMARK_Test.performance/1:SlaveCount/Registrar_BENCHMARK_Test.performance/2:SlaveCount/Registrar_BENCHMARK_Test.performance/3\n[==========] Running 13 tests from 1 test case.\n[----------] Global test environment set-up.\n[----------] 13 tests from DockerContainerizerTest\n[ RUN      ] DockerContainerizerTest.ROOT_DOCKER_Launch_Executor\n[       OK ] DockerContainerizerTest.ROOT_DOCKER_Launch_Executor (1910 ms)\n[ RUN      ] DockerContainerizerTest.ROOT_DOCKER_Launch_Executor_Bridged\ntests/docker_containerizer_tests.cpp:384: Failure\nValue of: statusRunning.get().state()\n  Actual: TASK_LOST\nExpected: TASK_RUNNING\ntests/docker_containerizer_tests.cpp:385: Failure\nFailed to wait 1mins for statusFinished\ntests/docker_containerizer_tests.cpp:376: Failure\nActual function call count doesn't match EXPECT_CALL(sched, statusUpdate(&driver, _))...\n         Expected: to be called twice\n           Actual: called once - unsatisfied and active\nF1010 20:15:04.572291  6507 logging.cpp:57] RAW: Pure virtual method called\n    @     0x7fa98a7f15fd  google::LogMessage::Fail()\n    @     0x7fa98a7f8cf6  google::RawLog__()\n    @           0x5043c6  mesos::internal::tests::Cluster::Slaves::shutdown()\n    @           0x7b4ba4  mesos::internal::tests::MesosTest::ShutdownSlaves()\n    @           0x9a6b03  testing::internal::HandleExceptionsInMethodIfSupported<>()\n    @           0x99dca0  testing::Test::Run()\n    @           0x99dd7e  testing::TestInfo::Run()\n    @           0x99de85  testing::TestCase::Run()\n    @           0x99e128  testing::internal::UnitTestImpl::RunAllTests()\n    @           0x99e3c7  testing::UnitTest::Run()\n    @           0x491473  main\n    @     0x7fa988a2dec5  (unknown)\n    @           0x49d468  (unknown)\n```\n\ndmesg:\n\n```\n[1844524.194131] netlink: 1 bytes leftover after parsing attributes in process `docker.io'.\n[1844524.195348] device veth3f9c entered promiscuous mode\n[1844524.195794] IPv6: ADDRCONF(NETDEV_UP): veth3f9c: link is not ready\n[1844524.218055] IPv6: ADDRCONF(NETDEV_CHANGE): veth3f9c: link becomes ready\n[1844524.218137] docker0: port 2(veth3f9c) entered forwarding state\n[1844524.218150] docker0: port 2(veth3f9c) entered forwarding state\n[1844534.343950] docker0: port 2(veth3f9c) entered disabled state\n[1844534.344886] device veth3f9c left promiscuous mode\n[1844534.344903] docker0: port 2(veth3f9c) entered disabled state\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58734532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58766839", "body": "I ran the test with GLOG_v=1 GLOG_alsologtostderr=1.  Is there something else to set?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58766839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58769515", "body": "It's always setting MESOS_SLAVE_PID to 127.0.1.1 which is fine for the --net=host tests, but won't work for --net=bridged.  How do I specify an alternative slave address?  Can I set the slave --hostname somewhere?\n\n```\nMESOS_SLAVE_PID=slave(2)@127.0.1.1:40751\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58769515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58811919", "body": "This problem is with the original ROOT_DOCKER_Launch_Executor_Bridged.  Maybe this patch is something you should take over since I'm not configuring something correctly on my system, but I'd still like to figure out what's going wrong for the existing tests and how to prevent it.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58811919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dharmeshkakadia": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/61931219", "body": "Thanks :)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/61931219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/76590678", "body": "Travis failed is unrelated. \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/76590678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/76590700", "body": "Travis failure is unrelated.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/76590700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "akerekes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/74279526", "body": "Is there a plan to include this PR in the meantime before actual HTTPS support is implemented?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/74279526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/74324437", "body": "@arnaudbriche There is one more location where this needs to be fixed:\nhttps://github.com/apache/mesos/blob/master/src/webui/master/static/browse.html#L71\nIt should be:\n\n```\nhref=\"//{{slave_host}}/files/download.json?path={{encodeURIComponent(file.path)}}\">\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/74324437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "arnaudbriche": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/74499307", "body": "Thanks @akerekes for pointing this out.\nIt should also be noted that when one tries to connect to a non-leader node, mesos (server-side) issue a 301 Redirect with an hardcoded http:// protocol. \nI did took a quick look at the C++ code,  but didn't find an easy way to fix it though.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/74499307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "pharshal": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/90903233", "body": "Travis failure is unrelated.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/90903233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "vi4m": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/105791244", "body": "Same company, can close this pull request\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/105791244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "wendigo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/111474450", "body": "Thanks :) Closed\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/111474450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "vitan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/111897831", "body": "merged. thanks to @davelester \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/111897831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "usultrared": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/128590028", "body": "please approve it .thanks\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/128590028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/128595480", "body": "haosdent,\nDone . https://github.com/apache/mesos/pull/54\n\nOn Fri, Aug 7, 2015 at 12:30 PM, haosdent notifications@github.com wrote:\n\n> This document is sorted by dictionary order, could you put it after\n> - LIFX http://lifx.co\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/apache/mesos/pull/54#issuecomment-128593622.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/128595480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/128595536", "body": "@davelester https://github.com/davelester\nappreciated . https://github.com/apache/mesos/pull/54\n\nOn Fri, Aug 7, 2015 at 12:34 PM, haosdent notifications@github.com wrote:\n\n> And I think @davelester https://github.com/davelester could help you\n> merge this.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/apache/mesos/pull/54#issuecomment-128593971.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/128595536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/129296575", "body": "Haosdent ,\nLooks like its still pending .  May I know how to speed this up ?\nappreciated .\n\nOn Fri, Aug 7, 2015 at 12:57 PM, haosdent notifications@github.com wrote:\n\n> [image: :+1:]\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/apache/mesos/pull/54#issuecomment-128595710.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/129296575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/129319602", "body": "Very appreciated .\nBtw, we developed so much code and incubated one project ,\nCould you please direct me and let me know how to deeply involve into this\ncommunity .\nFor example , we improved Marathon etc.\n\nOn Mon, Aug 10, 2015 at 12:40 PM, haosdent notifications@github.com wrote:\n\n> Maybe @davelester https://github.com/davelester is busy with MesosConf\n> now, let me help you @mpark https://github.com/mpark .\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/apache/mesos/pull/54#issuecomment-129296955.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/129319602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/129319717", "body": "@Park , its  Linkernetworks.   thanks.\n\nOn Mon, Aug 10, 2015 at 2:21 PM, Michael Park notifications@github.com\nwrote:\n\n> @usultrared https://github.com/usultrared: I was about to commit this\n> but I wanted to confirm that you want Linkernetworks, rather than\n> LinkerNetworks or Linker Networks? From www.linkernetworks.com it seems\n> like the last one would be preferred?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/apache/mesos/pull/54#issuecomment-129319434.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/129319717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/130114554", "body": "Guys,\nI still cannot see linkernetworks in that page . \nSomething wrong here ?\n\nSent from my iPhone\n\n> On Aug 12, 2015, at 2:06 AM, Dave Lester notifications@github.com wrote:\n> \n> @mpark thanks for committing this! In the future if you update the documentation or adopters list, please also do a separate update of the website to reflect these changes so they don't get out of sync. I can put it live this time.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/130114554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/130609997", "body": "Guys, \nit still not reflect on the website .\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/130609997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/130644013", "body": "Thanks , man\n\nSent from my iPhone\n\n> On Aug 13, 2015, at 7:23 PM, haosdent notifications@github.com wrote:\n> \n> Hi, @usultrared The document is not real time update. It would show after next website generation. But your company has already in repo now. https://github.com/apache/mesos/blob/master/docs/powered-by-mesos.md\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/130644013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/131000512", "body": "lester,\nJust changed from linkernetworks to Linker Networks . Thanks anyway.\n\nSent from my iPhone\n\n> On Aug 14, 2015, at 2:04 PM, Dave Lester notifications@github.com wrote:\n> \n> @usultrared This is now reflected on the website: http://mesos.apache.org/documentation/latest/powered-by-mesos/\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/131000512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "methus01": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/129350582", "body": "@mpark thanks for your help. \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/129350582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mamachanko": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/138205972", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/138205972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "eguven": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/138826968", "body": "thanks @davelester \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/138826968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/168022474", "body": "I'm guessing the master is broken\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/168022474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/178673383", "body": "closed\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/178673383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "philipphoffmann": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/142200546", "body": "Was already fixed in the meantime ...\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/142200546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "eharry": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/146170075", "body": "Sorry to make this pull request, It is a misoperation.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/146170075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "elsmorian": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/146863583", "body": "@davelester \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/146863583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/146885934", "body": "@davelester \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/146885934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "xiaods": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/153787206", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/153787206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239614536", "body": "could you please describe the context about memory leaks and give some testing to confirm the root cause.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239614536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/261989254", "body": "OMG, it is need rebase.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/261989254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/262110252", "body": "+1", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/262110252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "artemharutyunyan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/167065204", "body": "Hello BrickXu, thanks for the PR. Mesos project is actually using Review Board for accepting patches. I went ahead and created a patch with your change (https://reviews.apache.org/r/41706/), it should be pushed to Mesos shortly.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/167065204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "BrickXu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/167065596", "body": "@artemharutyunyan Thank you :)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/167065596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "hatred": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/174675487", "body": "Thanks for your contribution. We currently only accept Github PR's for changes to the website. All other code changes are reviewed on [ReviewBoard](https://reviews.apache.org/groups/mesos/). \n\nHere are our guidelines for [submitting](http://mesos.apache.org/documentation/latest/submitting-a-patch/) patches. \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/174675487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/284503069", "body": "Thanks for the PR. I couldn't find a way to assign myself as a reviewer here. I would review this and help get it committed.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/284503069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "acaiafa": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/190359753", "body": "ping!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/190359753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jmlvanre": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/202839170", "body": "```\ncommit 299f07a4e534f7a01a6b933d26f8935a327b5e99\nAuthor: Sjoerd Mulder <sjoerdmulder@gmail.com>\nDate:   Tue Mar 29 13:18:49 2016 +0200\n\n    Fixed UI rendering issues.\n\n    Remove a <td> element that renders a table too wide.\n    Only convert to decimal if a value is present.\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/202839170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/202839888", "body": "@sjoerdmulder can you close this PR? I've committed to head.\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/202839888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/231682347", "body": "It will get added to the website the next time it gets published.\nWe do that pretty regularly.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/231682347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "sjoerdmulder": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/202840488", "body": "Great :) Thnx\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/202840488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "chenzhiwei": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/204145852", "body": "I found I need to rebase again if the upgrade libev patch was submitted, so let's wait for libev patch to be submitted, then I will rebase.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/204145852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58131254", "body": "Thank your for pointing this, I will remove this comment. And for the zookeeper patch file I think I already removed it.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58131254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "thomas-maurice": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/214309173", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/214309173/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/272240449", "body": "Done !\r\nThe second PR is #199 ", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/272240449/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "joerg84": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/220184227", "body": "Thanks for adding documentation to Mesos!\nJust some information about the review/contribute process at Mesos.\nWe use ReviewBoard for reviews. Details can be found here: http://mesos.apache.org/documentation/latest/committing/\n\nLooking forward to see your contributions there!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/220184227/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/220184401", "body": "Thanks for contributing to Mesos!\nJust some information about the review/contribute process at Mesos.\nWe use ReviewBoard for reviews. Details can be found here: http://mesos.apache.org/documentation/latest/committing/\n\nLooking forward to see your contributions there!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/220184401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "tillt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/221532921", "body": "Committed as:\n\n```\ncommit b33e780909561e07b377c9836c43b65117e98630\nAuthor: Spritekin <guimo@spritekin.com>\nDate:   Wed May 25 12:19:34 2016 +0200\n\n    Added CMCRC to powered-by-mesos.md.\n\n    This closes #108\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/221532921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/221533453", "body": "Committed as:\n\n```\ncommit 71b47658e411456df4a34491ea82bd4115f70479\nAuthor: Jan Stabenow <hello@jan-stabenow.de>\nDate:   Wed May 25 12:23:30 2016 +0200\n\n    Add Livespotting into powered-by-mesos.md.\n\n    This closes #106\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/221533453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239626373", "body": "Why exactly do we need this patch?\n\nI understand it solves the problem for the OP but WHY does the problem even occur?\nAs far as I understand, the option `--no-same-owner` is only effective when being invoked by `root` - so if `root` was the current user, why would we get a permission denied? I would like to understand the actual problem.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239626373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239627232", "body": "If it truly is a bug of docker, then we should get that fixed upstream, no? \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239627232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69628598", "body": "We commonly use capital initials for product/project and organization names. Maybe clarifying that we are not trying to \"revert\" our slave->agent naming scheme here :). Then also trying to adjust the style a bit for consistency of this document...\n\nHow about this?\n\n```\nMrRedis is a Mesos framework for provisioning Redis in-memory cache instances. This provides auto Redis master election, auto recovery of Redis slaves and comes with the CLI and a UI.\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69628598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69632803", "body": "The PR is not updated though, or am I missing something? ;-)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69632803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jstabenow": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/221534774", "body": "@tillt thanks :-)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/221534774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jvanz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/228504989", "body": "How is it possible? I've updated the contributors.yaml only. xD\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/228504989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "drcrallen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/229779151", "body": "Filed https://reviews.apache.org/r/49422/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/229779151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/248361144", "body": "This was supposed to be agains the metamx branch, not apache. Will open official contribution once internal stuff is finished.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/248361144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "asfbot": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/230548357", "body": "Alex Rukletsov  on dev@mesos.apache.org replies:\nPushed.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/230548357/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/231171819", "body": "Benjamin Mahler  on dev@mesos.apache.org replies:\n+Kevin\n\nKevin, this looks like a change to your patch below, does his change look\ngood to you?\n\ncommit dae2c0667c1be913d08cff57717764c6ce7a45d9\nAuthor: Kevin Klues klueska@gmail.com\nDate:   Thu Dec 17 06:21:02 2015 +0100\n\n```\nWrote cmd to create WANdiscoSVN file for centos.\n\nPreviously we just told users to create this file and then add the\ncontents to it. Now they can just copy and paste a single command to\ncreate the file and fill the contents automatically.\n\nReview: https://reviews.apache.org/r/41361/\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/231171819/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/263879637", "body": "Alex Rukletsov  on dev@mesos.apache.org replies:\nCurl is also a prerequisite for mesos-native HTTP health checks (from Mesos\n1.2). We will remove it eventually but likely not in the nearest future.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/263879637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/264014230", "body": "Benjamin Mahler  on dev@mesos.apache.org replies:\nRight now this fails at container launch time rather than initialization of\nthe agent, seems like a bug?\nAlso it would be great to avoid surfacing a stack trace for this.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/264014230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "klueska": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/231197146", "body": "Looks good to me.  To summarize the issue that he's fixing a bit more clearly. Just running:\n\n```\nsudo cat > /etc/yum.repos.d/wandisco-svn.repo\n```\n\nDoesn't actually do what's intended because anything after the redirect (i.e. the `>`) isn't picked up by the sudo.  We need to run `bash -c \"<argument>\"` instead so that sudo launches a subshell and the redirect happens inside the subshell.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/231197146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "rji": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/231397995", "body": "From the mailing list and new community Slack, I've seen a bot handling GitHub PRs, so hopefully this is ok. Otherwise I'll open up a patch on Reviewboard.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/231397995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/238670965", "body": "Would someone mind building and pushing the website? It looks like there isn't a CI job to do this.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/238670965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "timcharper": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/231453613", "body": "Not sure why the tests have failed, but @rukletsov - I've updated the PR; it doesn't seem like a good idea to put a `CHECK` call into a string formatter, so I didn't. Do you disagree?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/231453613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/231454102", "body": "I ran the tests manually and they still pass\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/231454102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/231591841", "body": "I've followed the instructions and the JIRA issue is here: https://issues.apache.org/jira/browse/MESOS-5824\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/231591841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "gggina": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/231679148", "body": "Thanks.\nHow does this get added to http://mesos.apache.org/documentation/latest/frameworks/ ?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/231679148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jfarrell": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227020", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227148", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227178", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227233", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227248", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227264", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227281", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227349", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227349/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227362", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227377", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227396", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227410", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227417", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227452", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227452/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227462", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227472", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227488", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227533", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227546", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227554", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227570", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227579", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227592", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227656", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227667", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227684", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227698", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227712", "body": "Closing per request at https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232227712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/242726808", "body": "Closing as requested in https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/242726808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/242726881", "body": "Closing as requested in https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/242726881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/242726962", "body": "Closing as requested in https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/242726962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/242727004", "body": "Closing as requested in https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/242727004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/242727035", "body": "Closing as requested in https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/242727035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/242727087", "body": "Closing as requested in https://s.apache.org/V8r3\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/242727087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "ktf": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/232885468", "body": "Done.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/232885468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/233006697", "body": "Hopefully improved.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/233006697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "akinsWin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/235830475", "body": "sy!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/235830475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "caogj": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/238064537", "body": "cc/ @gyliu513 @haosdent, mesos repo doesn't have `.travis.yml` file, so the build has failed.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/238064537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/238078732", "body": "close this, move to ref #155 \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/238078732/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/238078857", "body": "cc/ @gyliu513 @haosdent\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/238078857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/238415545", "body": "Submitted in RB.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/238415545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799432", "body": "OK, and it will be my pleasure to re-order other contributors, can i?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "gyliu513": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/238074442", "body": "cc @vinodkone , can you please add @invenfantasy to Mesos contributor list? Thanks.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/238074442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/262133457", "body": "cc @bmahler ", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/262133457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799380", "body": "Can you please put your name right under Line 134 https://github.com/apache/mesos/blob/master/docs/contributors.yaml#L134 to keep alpha order for this file?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799456", "body": "Sure, please go ahead ;-)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "radekg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/239640771", "body": "@haosdent:\n\n```\n[rad] Downloads $ uname -a\nDarwin moan.fttx-di01-b07.german-fiber.net 15.4.0 Darwin Kernel Version 15.4.0: Fri Feb 26 22:08:05 PST 2016; root:xnu-3248.40.184~3/RELEASE_X86_64 x86_64\n[rad] Downloads $ ls -la | grep zookeeper\n-rw-r--r--@   1 rad  staff    22261552 Jun  7 16:57 zookeeper-3.4.8.tar.gz\n[rad] Downloads $ tar xvf zookeeper-3.4.8.tar.gz --no-same-owner\nx zookeeper-3.4.8/\nx zookeeper-3.4.8/zookeeper-3.4.8.jar.md5\nx zookeeper-3.4.8/zookeeper-3.4.8.jar.asc\nx zookeeper-3.4.8/zookeeper-3.4.8.jar\nx zookeeper-3.4.8/contrib/\nx zookeeper-3.4.8/contrib/ZooInspector/\nx zookeeper-3.4.8/contrib/ZooInspector/icons/\nx zookeeper-3.4.8/contrib/ZooInspector/icons/launch_run.gif\nx zookeeper-3.4.8/contrib/ZooInspector/icons/save_edit.gif\nx zookeeper-3.4.8/contrib/ZooInspector/icons/new_con.gif\nx zookeeper-3.4.8/contrib/ZooInspector/icons/search_prev.gif\nx zookeeper-3.4.8/contrib/ZooInspector/icons/file_obj.gif\nx zookeeper-3.4.8/contrib/ZooInspector/icons/launch_stop.gif\nx zookeeper-3.4.8/contrib/ZooInspector/icons/jspdecl.gif\nx zookeeper-3.4.8/contrib/ZooInspector/icons/fldr_obj.gif\nx zookeeper-3.4.8/contrib/ZooInspector/icons/refresh.gif\nx zookeeper-3.4.8/contrib/ZooInspector/icons/info_obj.gif\nx zookeeper-3.4.8/contrib/ZooInspector/icons/search_next.gif\n...\n[rad] Downloads $ ls -la | grep zookeeper\ndrwxr-xr-x@  22 rad  staff         748 Feb  6  2016 zookeeper-3.4.8\n-rw-r--r--@   1 rad  staff    22261552 Jun  7 16:57 zookeeper-3.4.8.tar.gz\n```\n\n@tillt I'm all for fixing this in docker, the only thing that worries me is the amount of time it takes docker to fix this (if this is a bug and not a _feature_ of the new Docker for mac). The `--no-same-owner` option has zero impact on anything and works fine in every case. The patch does not break anything. It seems that the tar option was designed specifically for such situations, why not to take advantage of it and have the `Makefile` working in every situation and report to docker that the problem exists. Thoughts?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239640771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239683774", "body": "@haosdent yep, this solves the problem, I guess I can fix my pr?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239683774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239684241", "body": "\ud83d\udc4d  from me to merge this\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239684241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239684272", "body": "Fix in https://github.com/apache/mesos/pull/158\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/239684272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Vishant0031": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/240449664", "body": "@aaronjwood  the \"promise\" object you have has local scope (and lifetime) and its not valid outside the method; I am sure valgrind would report this as error;\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/240449664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/140641268", "body": "is this task id (MESOS_TASK_ID?), should this be \"Task Id\"?", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/140641268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "IvanJobs": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/241623186", "body": "Well, actually after communication with Joseph Wu, I think this NOOP Container Logger is not so common and should not be accept by mesos community. So just forget about it. But if you have special use case and want to use this, I'm happy about that\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/241623186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dcaba": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/246212043", "body": "The build times out after 50 minutes (maximum job length the free version of travis allows)... I'm afraid we cannot afford executing all the tests in Travis (last one that initiates is tests/health_check_tests.cpp), so I can make configurable in support/docker_build.sh the task in the Makefile we want to execute (being the distcheck the default one, that Jenkins will continue using), or just dismiss Travis usage for this project... @janisz , any ideas/recommendations about how to proceed?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/246212043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/246852064", "body": "Hi @kaysoky , @haosdent !\n\n  thanks so much for your comments. Yep, I see this is not new for the project, and I was missing a lot of context when I initiated this PR. So now we have two options, from my point of view:\n- Dismiss this PR. This integration brings small or no value to the project (at a cost of a .travis.yml and keeping the integration active), as the free version of travis does not meet all the CI requirements you currently have covered with Jenkins.\n- Accept the PR. This will fix the \"red flag\" we can see in all the PRs, and this job will potentially provide quicker feedback as we are only compiling in the end (while Jenkins will bring the results of all the test coverage later)\n  \n  Please, make the decision bearing in mind what's more convenient for the project... No rancor at all if you close without merge ;) (it was an exercise requiring small efforts). But I'd appreciate the related Jira issue is closed (MESOS-5655) and you actually disable Travis to prevent these red crosses to add noise to all PRs.\n  \n  Best,\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/246852064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/247172867", "body": "BTW,\n\n   I've just remembered a benefit of keeping this active (that will not affect too much that decision); Travis will run the compilation / ci task not only when you raise a PR against the mesos repo, but also in any branch or fork if the account has the integration active (not sure how Jenkins is configured in your case, but probably it does not have visibility of the forks potential contributors may be initating).\n\n```\nBest!\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/247172867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/280339956", "body": "Hi,\r\n\r\n  a bit surprised travis integration is still enabled (so all PRs have red crosses)... let me know if you want me to resolve the conflicts to integrate this (in addition to a basic travis job, there's also some other small amends I think are interesting). If not, I will just close.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/280339956/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/284106797", "body": "Great. Thanks for the update; this parallel CI job in travis (this PR was bringing) was not adding too much benefits (just the nice github <-> travis integration, that can show green ticks or red crosses in PRs submitted in this repo?), and it was only worth to fix the red crosses while the integration was still enabled. Closing PR then! Best!", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/284106797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/78301199", "body": "@janisz , yes! Not aware of its existence, and this duplication makes no sense... probably we should also add a link to http://mesos.apache.org/documentation/latest/submitting-a-patch/ in the project README, so all these supporting services are known for new contributors to apache projects. I will add a couple of commits. \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/78301199/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "janisz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/247275030", "body": "I agree with @dcaba if Travis is enabled then it should at least run style check (whole compile is good too).\n\n> But I think we give up travis ci long time ago?\n> Why it's still enabled?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/247275030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/255474056", "body": "Looks like this was resolved by #173\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/255474056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/255476019", "body": "+1 for merge. Can someone shepherd it or disable Travis and wire ASF Jenkins instead?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/255476019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/255477347", "body": "@brat002 I think this should be closed as it turns out it was a bug in Marathon.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/255477347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/24904496", "body": "Created an issue for this [MESOS-8073](https://issues.apache.org/jira/browse/MESOS-8073)", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/24904496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/77374205", "body": "Can we use same Dockerfile as we are using on Jenkins? Take a look at [support/docker_build.sh](https://github.com/apache/mesos/blob/42e8d6fb8b894c08b4b0c7cc40036fe630489bba/support/docker_build.sh)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/77374205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/140917021", "body": "Task ID is one line above", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/140917021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "gradywang": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/250475893", "body": "@vinodkone, cloud you help to review this again? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/250475893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/79523013", "body": "Thank @vinodkone, I have fixed by your comments.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/79523013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/81929327", "body": "@vinodkone I also used `gradywang` as my reviewboard username  rather than `JamesYongQiaoWang` when I in IBM in main contributions. For my name, it does not changed, and just change to the recommended format. So can I only change the old entry?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/81929327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ronaldpetty": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/254662778", "body": "Yes sir!  https://reviews.apache.org/r/52993/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/254662778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "liorze": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/259616102", "body": "Sure, what can I do for you? \nJust letting you know, I'm not a committer in this project.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/259616102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "windreamer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/262164706", "body": "ok, did not notice it, sorry", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/262164706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/262165696", "body": "close in favor of #187 ", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/262165696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/262166834", "body": "@haosdent is this OK?", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/262166834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "abdasgupta": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/265395516", "body": "I don't think it is the correct way to merge the PR that requires code changes.\r\n\r\nI think you have to create a JIRA issue first for this. Please follow the link: http://mesos.apache.org/documentation/latest/submitting-a-patch/", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/265395516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "chengweiv5": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/265424987", "body": "@haosdent Please help to review", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/265424987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "houht": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/278832692", "body": "@bbannier OK,Thanks.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/278832692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "xoho": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/4057433", "body": "Need to update the link at http://mesos.apache.org/documentation/ to reflect the merge of \"Using ZooKeeper\" into \"High Availability\".  The link on the page http://mesos.apache.org/documentation/ still points to https://github.com/apache/mesos/blob/master/docs/Using-ZooKeeper.textile when it should point to https://github.com/apache/mesos/blob/master/docs/High-Availability.md.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/4057433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "stelcheck": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/5607832", "body": "I am having an issue in Chronos where it seems that when the Chronos framework tries to register, it registers with localhost (see https://github.com/airbnb/chronos/issues/193), and therefore unless the master is on the same machine as Chronos the registration never completes.\n\nCould that be causing the issue?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/5607832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jdef": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/8892794", "body": "Is there a memory leak here? Why not call `freeaddrinfo` before returning?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/8892794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/comments/8892934", "body": "Filed in reviewboard for the above concern\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/8892934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/comments/18398184", "body": "sweet! I didn't realize this made it into 1.0\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/18398184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/148790566", "body": "already got feedback that `fep` is probably not a good choice for a name here", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/148790566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "i-chaochen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/11352747", "body": "Hi, I tried to install the latest mesos(0.22.1) on AWS by the steps from mesos documentation \nhttp://mesos.apache.org/documentation/latest/ec2-scripts/\n\n// I can launch spark cluster on AWS in eu-west-1a with same key and key-id\nWhen I setted up my security key and key id ready to launch mesos cluster, it is constantly failed at \"Invalid availability zone\" error.\n\n// the reason I tried launch cluster on eu-west-1 because my key is generated on eu-west-1\nI also have tried eu-west-1, eu-west-1b and eu-west-1c, neither of ways can succeeded.\n\nI have printed out the opts below the Launch slaves(the launch script is stopped at here), is it normal?\nopts:\n{'ami': 'ami-4517dc2c', 'ft': 1, 'branch': 'master', 'zone': 'eu-west-1a', 'resume': False, 'ebs_vol_size': 0, 'master_instance_type': '', 'identity_file': 'awskey.pem', 'proxy_port': None, 'instance_type': 'm1.large', 'key_pair': 'awskey', 'swap': 1024, 'slaves': 1, 'download': 'none', 'spot_price': None, 'os': 'amazon64', 'wait': 60}\n\nDo you have idea how to fix it? Any helps would be appreciated!\nBest regards,\n\n./mesos-ec2 -k awskey -i awskey.pem --zone=eu-west-1a launch test01-mesos\nSetting up security groups...\nChecking for running cluster...\nLaunching instances...\nERROR:boto:400 Bad Request\nERROR:boto:<?xml version=\"1.0\" encoding=\"UTF-8\"?>\nInvalidParameterValueInvalid availability zone: [eu-west-1a]273c2517-bb07-4b79-a481-bbe7d898341a\nTraceback (most recent call last):\nFile \"./mesos_ec2.py\", line 571, in \nmain()\nFile \"./mesos_ec2.py\", line 478, in main\nconn, opts, cluster_name)\nFile \"./mesos_ec2.py\", line 261, in launch_cluster\nblock_device_map = block_map)\nFile \"/usr/local/lib/python2.7/dist-packages/boto/ec2/image.py\", line 329, in run\ntenancy=tenancy, dry_run=dry_run)\nFile \"/usr/local/lib/python2.7/dist-packages/boto/ec2/connection.py\", line 973, in run_instances\nverb='POST')\nFile \"/usr/local/lib/python2.7/dist-packages/boto/connection.py\", line 1208, in get_object\nraise self.ResponseError(response.status, response.reason, body)\nboto.exception.EC2ResponseError: EC2ResponseError: 400 Bad Request\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\nInvalidParameterValueInvalid availability zone: [eu-west-1a]273c2517-bb07-4b79-a481-bbe7d898341a\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/11352747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/11352979", "body": "I can launch the cluster by default \"us-east-1b\" , but I changed default as \"eu-west-1a\" in mesos_ec2.py, it still can't launch and the same problem as the above.\n\nDo you have any good idea to fix it?\n\nRegards\n\nPS:\nI also have noticed from AWS console that all security groups have been created in us-east-1b, even I set the zone as \"eu-west-1a\", and none of mesos security groups have been created in eu-west-1. \n\nSo, is it I used a wrong way to launch the script or there is a bug in mesos_ec2.py?\n\nAny feedback would be appreciated!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/11352979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "ozdanborne": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/13504480", "body": "typo: `of` should be `or`\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/13504480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "westurner": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/14940222", "body": "These image URIs now appear to 404ing:\n- https://mesos.apache.org/documentation/latest/architecture/\n  - `../images` seems to work\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/14940223", "body": "@jonorossi \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/14940273", "body": "Thanks!\n\nSo the paths for the .md files are\n\n```\n./images/img.PNG\n./doc.md\n```\n\nWhereas the site-deployed paths are:\n\n```\n/documentation/latest/images/img.PNG\n/documentation/latest/doc/\n```\n\nCurrently:\n- images display w/ GitHub\n- images 404 w/ the site\n\n... I'll copy this to JIRA when I get a minute.\nOn Dec 12, 2015 1:31 AM, \"Jonathon Rossi\" notifications@github.com wrote:\n\n> @westurner https://github.com/westurner IIRC the architecture images\n> were 404s beforehand even with an absolute URL because the files didn't\n> live there. There were few images that were actually working beforehand,\n> most images were broken. The previous comment to this one (260acd0\n> https://github.com/apache/mesos/commit/260acd03b45c9a203a53bc92171aedadbb970dad)\n> in the PR actually fixed the script so the deployment would post-process\n> the markdown as it did with links. There is still something going wrong\n> with the deployment (i.e. manual running of the script and getting\n> committed to subversion).\n> \n> I've mentioned in a couple of mailing list threads that we need to make\n> this process automated via the Jenkins server. @davelester\n> https://github.com/davelester was helping to organise this with the\n> Apache ops guys as he is the web site maintainer.\n> \n> Here is the JIRA issue: https://issues.apache.org/jira/browse/MESOS-3687\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/apache/mesos/commit/3c264c0929d328b1f8bedac3ad2fddadf782ec71#commitcomment-14940262\n> .\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jonorossi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/14940262", "body": "@westurner IIRC the architecture images were 404s beforehand even with an absolute URL because the files didn't live there. There were few images that were actually working beforehand, most images were broken. The previous comment to this one (260acd03b45c9a203a53bc92171aedadbb970dad) in the PR actually fixed the script so the deployment would post-process the markdown as it did with links. There is still something going wrong with the deployment (i.e. manual running of the script and getting committed to subversion).\n\nI've mentioned in a couple of mailing list threads that we need to make this process automated via the Jenkins server. @davelester was helping to organise this with the Apache ops guys as he is the web site maintainer.\n\nHere is the JIRA issue: https://issues.apache.org/jira/browse/MESOS-3687\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/comments/14940317", "body": "I don't recall the paths exactly but the script in the Git repo should be pretty easy to follow.\n\nThis is the subversion repo where the site gets automatically deployed from when committed. The plan was for the \"source\" directory (and just about every else except publish) to be deleted because that is replaced by it all living the the Git repo now. I suspect the old Rakefile in the svn repo has been run rather than the updated Git one.\n\nhttp://svn.apache.org/viewvc/mesos/site/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "h0tbird": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/19286203", "body": "Where is `W_EXITCODE` declared?\n\n```\n../../src/slave/containerizer/mesos/containerizer.cpp: In lambda function:\n../../src/slave/containerizer/mesos/containerizer.cpp:2282:35: error: 'W_EXITCODE' was not declared in this scope\n       return W_EXITCODE(0, SIGKILL);\n```\n\n**EDIT:** This is a non-posix W\\* function. C libraries like musl dont define them.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19286203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/19287343", "body": "Done: [MESOS-6310](https://issues.apache.org/jira/browse/MESOS-6310)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19287343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "kamilchm": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/19360216", "body": "Why this was reverted? I found it to be an issue on NixOS https://github.com/NixOS/nixpkgs/pull/19064\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19360216/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/19366004", "body": "Sure, I'll do to it tomorrow with more details.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19366004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/20303015", "body": "I've encountered permission denied problems when I ran Marathon with different user than *root* set in NixOS service config. ", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/20303015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "cstrahan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/20300335", "body": "@kamilchm Which error, specifically, is caused by this?", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/20300335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "thinker0": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/23351430", "body": "+1", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/23351430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dominichamon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/9956566", "body": "typo: requires\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/9956566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "GregBowyer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30103797", "body": "Sorry not sure what you mean, do you want the args to come through automake in general, rather than being fixed directly in the ext_modules.py ?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30103797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "timothysc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30099159", "body": "Why are the compilation args not explicitly flowing through?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30099159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30134482", "body": "@GregBowyer - yup. \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30134482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "dhilipkumars": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69630222", "body": "I totally agree. :-) my bad i should have done that in the first place. Now its more clearer. \n\n```\nMrRedis is a Mesos framework for provisioning Redis in-memory cache instances. The scheduler provides auto Redis master election, auto recovery of Redis slaves and comes with the CLI and a UI.\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69630222/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69636046", "body": "Its updated now ;-) . Thanks in Advance\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69636046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "drexin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69773011", "body": "Could we please make this behavior optional? In a cluster with lots of tasks this would create a lot of unnecessary traffic.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69773011/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ConnorDoyle": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69823476", "body": "+1 to @drexin's comment; cutting down communication between the task host and the scheduler was the original motivation behind implementing health checks in the Mesos agent :)\n\nOther options: 1) let the framework persist task health status before acknowledging the update 2) have a deeper look at the status updates that are synthesized by the master during reconciliation, maybe trigger the executor to send the current health?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69823476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "terrymanu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/89080820", "body": "Yes, please. That's better.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/89080820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "conradkdotcom": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/126455695", "body": "woops, let me just commit that once again", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/126455695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ralic": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/161336318", "body": "Since it is documentation, would it be better not to use acronym ? So that translation of the documentation maybe access by machine or the reader easier.", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/161336318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}}}