{"_default": {"1": {"karpet": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/lucy/commits/a1a61b7282ec5068b72dc5c912be26c508f0bbc8", "message": "Add sha512 explicit algorithm to file extension"}, {"url": "https://api.github.com/repos/apache/lucy/commits/488d6f4cfbf23faf79c52de193fc50de6152236e", "message": "Add test showing custom analyzer\n\n**Why**: User discussion on email list revealed our Analyzer docs\nneeded bolstering. This test demonstrates the simple custom\nanalyzer use case.\n\nRef https://lists.apache.org/thread.html/7e0f446bcccddf8faaffbb4fbb5a5265016a06f736f30757f0ee35af@%3Cuser.lucy.apache.org%3E"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nwellnhof": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/lucy/commits/598b4d074029998d30ad9a3b85190cc95aa00e0a", "message": "Fix handling of trailing double quotes in QueryParser\n\nFixes LUCY-325."}, {"url": "https://api.github.com/repos/apache/lucy/commits/b22794165abfcd33d5fd4e578397a6a1926f9c6b", "message": "Regen charmonizer.c for --rpath fix"}, {"url": "https://api.github.com/repos/apache/lucy/commits/5535d25f8a5b1ad86e2d5540589c6e46654e350e", "message": "Fix previous merge of 'improve-locking' branch\n\nI accidentally merged the first version of the 'improve-locking' branch.\nAdd changes to the 'v2' branch as separate commit."}, {"url": "https://api.github.com/repos/apache/lucy/commits/d7feb997003ae1fc84a348e8584ea97b69b02d95", "message": "Merge branch 'improve-locking'\n\nFixes LUCY-323.\n\n- Major rewrite of FilePurger, making it do less work.\n- Eliminate global deletion lock, making PolyReader and FilePurger\n  never wait for a lock.\n- Redesign Lock API in preparation for native locks.\n- Remove LockFactory.\n- Fix locking bug with non-default merge lock timeout.\n- Fix locking bug with concurrent BackgroundMergers.\n- Port some tests to C."}, {"url": "https://api.github.com/repos/apache/lucy/commits/a3cf33f1efc796a284d6a5761142f89a1319ac52", "message": "Merge branch 'master' into improve-locking"}, {"url": "https://api.github.com/repos/apache/lucy/commits/7a64a288c36f7d3e3b30fd0f0605d7570e0c5a5a", "message": "Create files with FILE_ATTRIBUTE_NOT_CONTENT_INDEXED\n\nMight avoid problems with the Windows Search Service, although my\nearlier testing suggests that the only reliable solution is to\nexclude the folder via Indexing Options in Control Panel."}, {"url": "https://api.github.com/repos/apache/lucy/commits/54d5093f51b938e55fd734fbb1d3162f390452be", "message": "Make FSFolder always use Windows API\n\nFixes LUCY-324."}, {"url": "https://api.github.com/repos/apache/lucy/commits/3b1b63e8d8f7fcdf30d4c2af7c9ee519c662569a", "message": "Use Windows API to delete and rename files\n\nDelete files on Windows by calling CreateFile with\nFILE_FLAG_DELETE_ON_CLOSE and closing the handle immediately. Unlike\nDeleteFile, this allows files opened with FILE_SHARE_DELETE to be\n(eventually) deleted.\n\nPart of LUCY-324."}, {"url": "https://api.github.com/repos/apache/lucy/commits/de646e69ebc74cde8536b2b4b1a85ee4d5a6c54c", "message": "Fix t/051-fsfile.t cleanup on Windows"}, {"url": "https://api.github.com/repos/apache/lucy/commits/291a3269312a29792f8294fdf1b1f68dbfd94a79", "message": "Avoid rescanning the index folder for latest snapshot\n\nEliminate up to four unnecessary scans in BackgroudMerger:\n\n- BGMerger_init\n- S_merge_updated_deletions (twice)\n- BGMerger_Prepare_Commit\n\nEliminate two unnecessary scans in Indexer:\n\n- Indexer_init\n- Indexer_Prepare_Commit"}, {"url": "https://api.github.com/repos/apache/lucy/commits/040bb290f12f8df015b1d9ae99758f1600a52f18", "message": "Improve Analyzer documentation\n\nDocument that Analyzer subclasses must override the Equals method.\nAdd synopsis with example classes to Perl POD."}, {"url": "https://api.github.com/repos/apache/lucy/commits/6e8538a8834a49da7e8cce8b94decc130467b0f3", "message": "Move LockFileLock to separate file"}, {"url": "https://api.github.com/repos/apache/lucy/commits/2bd2bc611325ee643f325ecfd11d5227319949a8", "message": "Move host ivar from Lock to LockFileLock"}, {"url": "https://api.github.com/repos/apache/lucy/commits/d23b560dc34d1c1cbc731fdc745b4e72324d8717", "message": "Release locks on destruction"}, {"url": "https://api.github.com/repos/apache/lucy/commits/35388cd22600cb3c202cf11c8c9afd661c8f4fe4", "message": "Port LockFileLock tests to C"}, {"url": "https://api.github.com/repos/apache/lucy/commits/e06cdbf63d3036c3a33e5265444d827065539e92", "message": "Don't hide I/O errors behind LockErr\n\nOnly return a LockErr if there's lock contention, not on unrelated\nI/O errors."}, {"url": "https://api.github.com/repos/apache/lucy/commits/38a33badb310ba9fea5bf9a923277da4a82ec369", "message": "Remove Lock_Is_Locked"}, {"url": "https://api.github.com/repos/apache/lucy/commits/de14d4ca31ab27fc1569966c1b182fa4829afd40", "message": "Change lock acquitision order in BGMerger_init\n\nObtain the merge lock before the write lock so that an already running\nbackground merger won't abort when failing to acquire the write lock\nduring commit.\n\nRelease the merge lock at the very end of BGMerger_Commit. It doesn't\nreally matter when we release the merge lock after we acquired the\nwrite lock in BGMerger_Prepare_Commit. I think it makes the code\nclearer to release it at the very end of BGMerger_Commit."}, {"url": "https://api.github.com/repos/apache/lucy/commits/4e6e5bbf2814e8e2a824b5ae1b91d068233cd248", "message": "Improve merge lock handling\n\nDon't check the merge lock with Is_Locked in\nFilePurger_Purge_Aborted_Merge. This prevented background mergers from\ncleaning up because they already held the merge lock. Require that\ncallers hold the merge lock instead.\n\nDon't check the merge lock with Is_Locked in Indexer_init. Since we\nhold the write lock, and the merge.json file from aborted merge has\nbeen removed, the presence of a merge.json file is a reliable indicator\nthat it belongs to an active background merger. Move the merge lock\nrequest form S_maybe_merge to Indexer_init.\n\nAlso, S_maybe_merge used to Obtain the merge lock instead of merely\nRequesting it. Waiting for a potentially long-running background merger\nslows things down unnecessarily and increases the chance for write lock\ncontention. This didn't affect the default configuration which has a\nzero merge lock timeout."}, {"url": "https://api.github.com/repos/apache/lucy/commits/5270b988c477a2e1c110e2069c66bb2d3f27a60f", "message": "Rework snapshot and deletion locks\n\nRequest exclusive or shared snapshot locks instead of the global\ndeletion lock. This removes the need to retry lock requests and\nreduces contention."}, {"url": "https://api.github.com/repos/apache/lucy/commits/79161a4b233ce3570ecf4c48745b469ccb50aec7", "message": "Don't allow double obtain/release"}, {"url": "https://api.github.com/repos/apache/lucy/commits/3e2298650d8fc0213ce25078cadeb4f22d45bb5f", "message": "Remove LockFactory and make Lock a private class\n\nIf there are users who really use custom locks, this can be reverted."}, {"url": "https://api.github.com/repos/apache/lucy/commits/1a8e02df0a0257e4ba70de4a41504507b0ba8a47", "message": "Always check for stale locks in Is_Locked\n\nNote that checking for stale locks isn't necessary when requesting\nshared locks."}, {"url": "https://api.github.com/repos/apache/lucy/commits/bb83d0d77bf99ed09b2bbad782c3c1d3b94f04a9", "message": "Merge SharedLock into LockFileLock\n\nSupplying the lock type when requesting a lock better matches other\nfile lock APIs. Merging the implementations allows to convert\nMaybe_Delete_File into a static function.\n\nMake shared and exclusive locks check for locks of the other type\nexcept for exclusive locks created with `exclusive_only`.\n\nClear_Stale is broken for shared locks but will be removed with the\nfollowing commit."}, {"url": "https://api.github.com/repos/apache/lucy/commits/2051451de456f51e35345f12206ca4cb0040dd7c", "message": "Separate purging of snapshots and aborted merges\n\nPurge aborted merge when starting an Indexer/BGMerger session and\npurge snapshots at the end of Commit.\n\nRework FilePurger to use a single hash for purged and spared files\nwhen purging snapshots. Optimize Folder handling assuming that\nSnapshots only contain entries local to the index folder.\n\nMake sure to list the contents of the real directory, not the\nvirtual compound file directory. CFReaderDirHandle lists both real\nand virtual files which might be a bug in itself.\n\nPort BGMerger tests to C.\n\nTODO: Move Perl BGMerge test to t/binding."}, {"url": "https://api.github.com/repos/apache/lucy/commits/5f15a92bde4c63e2b0d1c3d8b74a294ed8a3d1f0", "message": "Make FSFileHandle always use Windows handles\n\nSwitch FSFileHandle over to WinAPI for open/close/write.\n\nAdd sanity checks to FileHandle_do_open.\n\nFix minor bug in Unix Write method (-1 return value was added to file\nlength). Make Windows Read method use synchronous API and add an extra\ncheck for unexpected EOF.\n\nFixes LUCY-321."}, {"url": "https://api.github.com/repos/apache/lucy/commits/d14281228c3368386c3d98e211687ead916cee1c", "message": "Fix EasyAnalyzer_new default\n\nLucy::Analyzer::EasyAnalyzer->new segfaulted without arguments."}, {"url": "https://api.github.com/repos/apache/lucy/commits/85ca41becddfc4a47c684b7b74e3cc51fe2cf688", "message": "Remove useless code from SegWriter.c"}, {"url": "https://api.github.com/repos/apache/lucy/commits/d6fcd5fb475f6cbeedb72ccd5bcbfa5339b241fa", "message": "Add \"install\" target to C Makefile\n\nFixes LUCY-319."}, {"url": "https://api.github.com/repos/apache/lucy/commits/169c2eccd1d28dbae39e34c4fe1a6e041dd14582", "message": "Regenerate charmonizer.c for LargeFiles fix"}, {"url": "https://api.github.com/repos/apache/lucy/commits/873f4391b82199ce9cdca9e25c17c2614df3a219", "message": "Fix cross-compiling to MinGW on Unix\n\n\"windows.h\" must be lowercase on case-sensitive file systems."}, {"url": "https://api.github.com/repos/apache/lucy/commits/e2c7d719964cc67c7096f7782ad2783b98162088", "message": "Add cross-compilation support to configure script\n\nIf the environment variable TARGET_CC is set, configure uses the value\nas target compiler for cross-compiling. For example:\n\n    TARGET_CC=x86_64-w64-mingw32-gcc ./configure"}, {"url": "https://api.github.com/repos/apache/lucy/commits/982fdecda6cb90c780ab00ca680daaeac25e6ba2", "message": "Update Charmonizer code\n\n- New compiler version API.\n- CC is set by Charmonizer.\n- Pass --charmonic to cfc (requires to run more probes).\n- Fix warnings."}, {"url": "https://api.github.com/repos/apache/lucy/commits/cd3e363e19c6aac5a6680604db21ec493838e8f7", "message": "Remove indirection from NumUtil_encode_bigend_* arg"}, {"url": "https://api.github.com/repos/apache/lucy/commits/2c43cf0d0922812d5178cc085502a4f09d221905", "message": "Optimize NumUtil_encode_bigend_* functions\n\nMake GCC generate bswap instructions. For details see:\n\nhttp://stackoverflow.com/q/36497605"}, {"url": "https://api.github.com/repos/apache/lucy/commits/a923dd3858b899e477e9135f1a56c95a23b8797b", "message": "Stop using endian macros in NumberUtils.cfh\n\nUse an inline function instead. Modern compilers can compute the\nresult at compile time and eliminate the if/else statement."}, {"url": "https://api.github.com/repos/apache/lucy/commits/4b541569518665e3974f96f76c493ff05f200a33", "message": "Remove U64_TO_DOUBLE macro\n\nIt was only needed for MSVC6."}, {"url": "https://api.github.com/repos/apache/lucy/commits/8a37f575d2e2aa640ac930467ad81ec9bc6c3eed", "message": "Special case Booleans in Freezer_thaw\n\nNow Freezer_deserialize doesn't support Booleans anymore but this\nshould be harmless.\n\nFixes LUCY-292."}, {"url": "https://api.github.com/repos/apache/lucy/commits/af6e18eb81383367ff24698797e8833f42fd23e0", "message": "Valgrind cleanup\n\nRemove unneeded compiler flags, check for LUCY_VALGRIND environment\nvariable at run time."}, {"url": "https://api.github.com/repos/apache/lucy/commits/751c3b39d921096884fb4d19a33dba42b215059e", "message": "Get_Searchers accessor for PolySearcher\n\nFixes LUCY-255."}, {"url": "https://api.github.com/repos/apache/lucy/commits/fc66f673a0671086e0c5ff2ccddd510a1ebc9e22", "message": "Port PolySearcher tests to C"}, {"url": "https://api.github.com/repos/apache/lucy/commits/2b905009e69fccfc8abe62cfe7814565f15beab5", "message": "Add TestUtils_create_index"}, {"url": "https://api.github.com/repos/apache/lucy/commits/3dfb22cd9c0b4298599859db760600390c79c21a", "message": "Minor test fixes"}, {"url": "https://api.github.com/repos/apache/lucy/commits/c037045cdc9408e950e8cf23c21e1cd7bb9e695c", "message": "Allow automated parallel tests"}, {"url": "https://api.github.com/repos/apache/lucy/commits/70f322105cf0ed8a757422c4c06888c9b899fa41", "message": "Stop creating test working dir"}, {"url": "https://api.github.com/repos/apache/lucy/commits/33f9460eab874687ce3ffdfdee20ee04fa1b56a0", "message": "Stop creating persistent uscon index"}, {"url": "https://api.github.com/repos/apache/lucy/commits/a2247002411563c7121bdda5388f61c798c2c329", "message": "Use custom tempfile in t/025-debug.t\n\nStop using the test \"working dir\"."}, {"url": "https://api.github.com/repos/apache/lucy/commits/5967a20ddc45474291261181e25ec7378414470b", "message": "Parallel test support for init_test_index_loc\n\nUse File::Temp to create a temporary directory in 't' that will be\ncleaned up at exit. A side effect is that the directory won't be\nremoved if the test crashes."}, {"url": "https://api.github.com/repos/apache/lucy/commits/355da9a659b17fbe245c614014b599526a3f086c", "message": "Skip more 025-debug tests on Windows\n\nRedirecting stderr doesn't seem to work. Also fix skip count."}, {"url": "https://api.github.com/repos/apache/lucy/commits/df92734893823ff0d917ba582586100579f17163", "message": "Fix and enable LUCY_DEBUG under MSVC\n\nSwitch to ISO variadic macros."}, {"url": "https://api.github.com/repos/apache/lucy/commits/a876a98dc003f6e33956491118ce34429b55a5c0", "message": "Fix Lucy::Util::Debug Perl module\n\nIt wasn't enabled when setting the LUCY_DEBUG environment variable."}, {"url": "https://api.github.com/repos/apache/lucy/commits/470bb27deac5028f290fb6f24b9bf33c8f0d551a", "message": "Fix svnmucc command in release_commands.pl\n\nThe svnmucc release command was broken by a recent svn update. It\ndoesn't seem to be possible to move files and remove the old parent\ndirectory in a single step. See\n\n    https://issues.apache.org/jira/browse/SVN-4579.\n\nFixes LUCY-308."}, {"url": "https://api.github.com/repos/apache/lucy/commits/61fd0da377db365f3f8cb0c61e0d2cb6cbcf8309", "message": "Fix links in FileLocking.md"}, {"url": "https://api.github.com/repos/apache/lucy/commits/f88e30832a6781491f52aa06979d167572296a92", "message": "Fix IndexManager with many small segments\n\nIxManager_Choose_Sparse would throw when handling more than about 40\nsegments because of the integer overflow test in S_fibonacci.\n\nAlso, the naive recursive implementation of S_fibonacci had abysmal\nperformance. After all, the result was created by adding only 0s and\n1s. The number of calls to S_fibonacci when computing fib(n) was\nfib(n+1), resulting in more than a billion of iterations with n ~ 45.\nOn my (heavily loaded and low-end) test machine, Choose_Sparse could\ntake up to 40 seconds to complete.\n\nOn the positive side, if anyone was hit by this performance problem,\nit's likely they also saw the \"index n too large\" exception and we\nonly had two reports so far.\n\nUse a precomputed lookup table and fix the test for large values of n.\n\nFixes LUCY-318."}, {"url": "https://api.github.com/repos/apache/lucy/commits/3c97420f70f92c0f5a9cdf3cee707e5cfa9a98b4", "message": "Ignore exceptions in SearchClient dtor\n\nFixes LUCY-286."}, {"url": "https://api.github.com/repos/apache/lucy/commits/355a13d9870b44d32438dd690f317bf9628e5382", "message": "Ignore CPAN Testers forcing parallel tests\n\nParallel tests are known to fail (LUCY-260)."}, {"url": "https://api.github.com/repos/apache/lucy/commits/a8f7e9c6076652c31013d2d2523bcd236c4a9526", "message": "Remove ELAST from ErrorMessage\n\nELAST isn't an actual error code and causes conflicts.\n\nFixes LUCY-317."}, {"url": "https://api.github.com/repos/apache/lucy/commits/6513de06954cd41f99345bde513cf6ce6faed078", "message": "Support X.Y.Z.D Perl versions"}, {"url": "https://api.github.com/repos/apache/lucy/commits/710159091b19149088cc77147006730f31931a25", "message": "Rework PAUSE exclusions\n\nRemove class lists in Lucy::Redacted and `_gen_pause_exclusion_list`.\nThe generated `no_index` section was essentially ineffective, because\nit was overridden by the auto-generated `provides` section. It was\nalso cluttered with files that wouldn't be indexed anyway.\n\nAdd `no_index` section manually in Build.PL. Since version 0.40_11,\nthis stops Module::Build from creating a `provides` section in the\nCPAN META files. Add directories `sample` and `devel` to `no_index`\nin order to stop MetaCPAN from indexing their contents.\n\nRemove the custom `distmeta` action which checked version numbers in\n.pm files and relied on the `provides` section being generated.\n\nPart of LUCY-313."}, {"url": "https://api.github.com/repos/apache/lucy/commits/05fc61872fefde7d88348009d3d2ef6a06b3ba10", "message": "Document that Hits#Next returns a HitDoc"}, {"url": "https://api.github.com/repos/apache/lucy/commits/62cdcf930dc871fb95b5c99fc86e93afe7a3e344", "message": "Fix memory leak in HitQueue\n\nHitQueue would leak a FieldType if the last SortRule was of type\nFIELD. This wasn't discovered by our test suite because we always\nbreak ties by DOC_ID.\n\nThanks to Serkan Mulayim for the report.\n\nFixes LUCY-315."}, {"url": "https://api.github.com/repos/apache/lucy/commits/87ea1b4d195196611333f1148e1f4dce2166c2e4", "message": "Stop using strerror\n\nEspecially with non-English locales, 'strerror' can return strings in\narbitrary encodings. Now that CB_VCatF has more thorough UTF-8 checks,\nthis can result in unwanted exceptions.\n\n'strerror' also isn't thread-safe.\n\nAdd some utility functions to set the global error object, optionally\nfollowed by a textual representation of the error in 'errno' or\nreturned by 'GetLastError' on Windows. Convert 'errno' values using\ncustom messages for all 'errno' macros from current Linux and Darwin\nkernels.\n\nAlso make some error messages more informative by adding the reason\nfor the error, e.g. in FSDH_do_open which may fail when opening an\nindex.\n\nFixes LUCY-311."}, {"url": "https://api.github.com/repos/apache/lucy/commits/e30057d752652fb52be7e45949c8778ddfbeaf7b", "message": "Change tag names in release_commands.pl"}, {"url": "https://api.github.com/repos/apache/lucy/commits/0959ad9d3ffa474396059268e431fa43daa9a1c4", "message": "Try several ports in remote searcher tests\n\nFixes LUCY-312."}, {"url": "https://api.github.com/repos/apache/lucy/commits/26d3c773fc2784ef6f45eac622e4d99af63a5476", "message": "Regenerate charmonizer.c for pattern rules fix\n\nFixes LUCY-309."}, {"url": "https://api.github.com/repos/apache/lucy/commits/8576b74184a4bcfe3c1e6be37ce53a8fde8deacb", "message": "Exclude Lucy/Test.xs from CPAN tarball\n\nFixes LUCY-310."}, {"url": "https://api.github.com/repos/apache/lucy/commits/94d52202bdc3990ce8335c8dcdbe12a6196406a0", "message": "Update release date for 0.6.0 release"}, {"url": "https://api.github.com/repos/apache/lucy/commits/787a2ecbd2b60fe51451177f7e0ab9a26e6782c1", "message": "Update version number for 0.6.0 release"}, {"url": "https://api.github.com/repos/apache/lucy/commits/020aa63217c54ac43e4ef19409d1917e3b961ce1", "message": "Update update_version script"}, {"url": "https://api.github.com/repos/apache/lucy/commits/6c25611a104e15b4fc2b42b605ec95bf33d0d9da", "message": "Update rat-excludes"}, {"url": "https://api.github.com/repos/apache/lucy/commits/dd30ae94a677aba8f683254c79c29dc6d12651fd", "message": "Fix charmonizer memory leaks"}, {"url": "https://api.github.com/repos/apache/lucy/commits/5b1bedbe71bfe456cecd5c415950594d68ed7ea8", "message": "Update valgrind suppressions"}, {"url": "https://api.github.com/repos/apache/lucy/commits/a3a42c006bb0d539fe9924cf8c66c787092c524e", "message": "Change Clownfish C library name\n\nThe Clownfish C library is now named libclownfish."}, {"url": "https://api.github.com/repos/apache/lucy/commits/7071a277cfc2be26fb5eb4e46b5fecbc715eecaf", "message": "Merge branch 'string-helpers'\n\nSee CLOWNFISH-76."}, {"url": "https://api.github.com/repos/apache/lucy/commits/aa48a9e68c2dd51a7c4391cab1bcd5f77bb39d8a", "message": "Move StringHelper from Clownfish to Lucy"}, {"url": "https://api.github.com/repos/apache/lucy/commits/f257a45e0c73cc5875b8f6e3a66ba4eff2e84ae5", "message": "Move some functions from StrHelp to Str"}, {"url": "https://api.github.com/repos/apache/lucy/commits/3cc039724fa1862aa71333911f2bfc5c84b50f3e", "message": "Use CharBuf to unescape JSON strings\n\nAlso use a stricter custom decoder for hex escapes. (strtol allows\nleading whitespace and plus signs.)"}, {"url": "https://api.github.com/repos/apache/lucy/commits/0a41b29b1b655cf5e1d59462eb5e51478cc98c38", "message": "Simplify build code after Clownfish changes\n\n- Remove inherit_metadata hack.\n- Remove xs_prereqs."}, {"url": "https://api.github.com/repos/apache/lucy/commits/d55cf2db5c13a09ac6b8058254e8cddba0f80c1f", "message": "Add sort_spec param to Simple_Search\n\nThe sort_spec parameter was lost when porting Lucy::Simple to C.\n\nFixes LUCY-307."}, {"url": "https://api.github.com/repos/apache/lucy/commits/6759c8bdebc4c421f2243b027960fab08c42bc23", "message": "Add Lucy::Test to INSTALL.SKIP"}, {"url": "https://api.github.com/repos/apache/lucy/commits/03b8995dccbf988e53ba52a72088495c1608265b", "message": "Update .cfp files after Clownfish changes\n\nAdd \"major_version\" and \"installed\" properties."}, {"url": "https://api.github.com/repos/apache/lucy/commits/90c7b471178bbc21216e3dff7d4b1c62bba53d26", "message": "Update lemon\n\n- Update lemon.c to 09a96bed from 2016-05-24.\n- Update lempar.c to 57ffa985 from 2016-07-12."}, {"url": "https://api.github.com/repos/apache/lucy/commits/e0833028bb5ac545ca5ea5f087521ff5cf70788f", "message": "Compile lemon without extra compiler flags\n\nAvoids compilation problems on Windows."}, {"url": "https://api.github.com/repos/apache/lucy/commits/dd760b3439acb42516e14ba8475179ac1da0a428", "message": "Merge branch 'separate-tests'"}, {"url": "https://api.github.com/repos/apache/lucy/commits/eb64f820cd0432908f2c629481ab604e311c4756", "message": "Make sure not to add JsonParser.c twice\n\nFix Makefile in case JsonParser.c already exists."}, {"url": "https://api.github.com/repos/apache/lucy/commits/bb7ae3b6669e8b00ae6a337df5f43044eca5e9b9", "message": "Build separate Perl binaries with make"}, {"url": "https://api.github.com/repos/apache/lucy/commits/b57bd0af86eafbf3f3749b06b72822a58f881f8e", "message": "Rename core directory to \"cfcore\" for CPAN tarball"}, {"url": "https://api.github.com/repos/apache/lucy/commits/c1ac59aa73240ab36985faf83f8d58103a382f76", "message": "Separate test binaries"}, {"url": "https://api.github.com/repos/apache/lucy/commits/bdf9ac404628369185b87767a421a3c8eb745661", "message": "Don't access ivars in tests\n\nAdd some helper methods for tests."}, {"url": "https://api.github.com/repos/apache/lucy/commits/572d35647c881f0ba8a9b034f49240f0f7193c16", "message": "Move tests to separate directory"}, {"url": "https://api.github.com/repos/apache/lucy/commits/2016986f1a3c78bfe35dff135d6ee9046cf47885", "message": "Regenerate charmonizer.c\n\nRemoves MakeRule_add_command_with_libpath."}, {"url": "https://api.github.com/repos/apache/lucy/commits/c0e4d81d8ce4d4dc928d9f641321c8f8d7b78223", "message": "Rework BitVector_Next_Hit\n\n- Avoid overflow in pointer arithmetic.\n- Fix conversion warnings.\n- Relax int32_t range check.\n- Simplify.\n- Fix and add test."}, {"url": "https://api.github.com/repos/apache/lucy/commits/745a278bef0d3e8106759cb2482b22c3f5be10d2", "message": "Check for BitVector capacity overflow\n\nThe actual capacity of a BitVector is rounded up to the next multiple\nof eight, so capacity must not be larger than (SIZE_MAX - 7)."}, {"url": "https://api.github.com/repos/apache/lucy/commits/d73b1cc0fb85b02564aaaa961515357299439c8d", "message": "Fix comparison warning on 32-bit systems"}, {"url": "https://api.github.com/repos/apache/lucy/commits/044712a2efcb2b784b31303f0d276c1ebe7a98cc", "message": "Fix pointer cast warnings"}, {"url": "https://api.github.com/repos/apache/lucy/commits/9166d2cff4ca51efb781b5620836d37647d82781", "message": "Fix unused parameter warnings"}, {"url": "https://api.github.com/repos/apache/lucy/commits/87c8b4d60e8c8b42cc86a92e1a4cead5d7aebad6", "message": "Test more platforms with Appveyor\n\n- C build with MinGW32\n- C build with MSYS2/MinGW64\n- Perl build with ActivePerl"}, {"url": "https://api.github.com/repos/apache/lucy/commits/b7113135617eed0c44b7d13d20bb6e1c4b0c6b54", "message": "Use rpath for test executable"}, {"url": "https://api.github.com/repos/apache/lucy/commits/c5e8d65108f9aaaac73dbc2fe8a39e6d81bfb31f", "message": "Regenerate charmonizer.c"}, {"url": "https://api.github.com/repos/apache/lucy/commits/68e4662ff725e5ec94732afaba4f04d41210872c", "message": "Switch to new Charmonizer Make API\n\nRework the Charmonizer fragment to use the new API to build binaries."}, {"url": "https://api.github.com/repos/apache/lucy/commits/6f1efa315e36f7814988c7c7a5fa11fb27c433bd", "message": "Regenerate charmonizer.c for Windows fix"}, {"url": "https://api.github.com/repos/apache/lucy/commits/70caaa3d31c963af604c13ddb8616a363a92be5d", "message": "Adjust for Clownfish build system changes"}, {"url": "https://api.github.com/repos/apache/lucy/commits/b4b44ed8623933ab717ae32f7b47c1f4898d28b6", "message": "Adjust for Clownfish build system changes\n\nDon't switch Perl build to \"make\" yet."}, {"url": "https://api.github.com/repos/apache/lucy/commits/43803a0fd5b426d6ecaea62fbc5d80489eaa4af0", "message": "Regenerate charmonizer.c for binfmt and shell changes\n\nFixes LUCY-303."}, {"url": "https://api.github.com/repos/apache/lucy/commits/42ce69634e4eaf566e401ba7acf22b289be34ee2", "message": "Regenerate charmonizer.c"}, {"url": "https://api.github.com/repos/apache/lucy/commits/abee805b16713bb42a1e94e97db944462400160a", "message": "Clean empty directory 'lib/Lucy/Docs'"}, {"url": "https://api.github.com/repos/apache/lucy/commits/632a46b8b8df694d320cda2bcec72d5248e9a49f", "message": "Dereference token_re on older Perls\n\nBroken in commit 633c4d3.\n\nFixes LUCY-297."}, {"url": "https://api.github.com/repos/apache/lucy/commits/97d51f7d0b0f1f37cba1434e66e1af9ad6a45366", "message": "Fix switching Perl versions under Travis"}, {"url": "https://api.github.com/repos/apache/lucy/commits/51c01bd282032ee21d72900b4a265aae2dff8c89", "message": "Move pod2mdtext.pl from Lucy to Clownfish"}, {"url": "https://api.github.com/repos/apache/lucy/commits/8193b73efedf0222e99f26b62ee21e18498af6aa", "message": "Fix %i64/%u64 mismatches"}, {"url": "https://api.github.com/repos/apache/lucy/commits/2748bb85e41f8431f77667eb70aeef83b0712f55", "message": "Fix wrong vararg type in LFLock_init\n\nThis only results in random junk in a tempfile name, so probably\nharmless."}, {"url": "https://api.github.com/repos/apache/lucy/commits/94c6aa2ea3a649ceb5a1dcab9a5df24239600914", "message": "Fix test_all.sh script for newer Go versions\n\nWhen cleaning the CFC build before building the Clownfish runtime and\nLucy, I get an error with Go 1.5 because \"CFC.h\" could not be found.\nI'm not sure what's at play here. Cleaning the CFC build afterwards\nis only a band-aid. This needs some further investigation."}, {"url": "https://api.github.com/repos/apache/lucy/commits/56e7c206191862822c1a111af4959283069702d1", "message": "Fix bug in Perl implementation of Doc_Equals\n\nDetected by a GCC 5.2 warning."}, {"url": "https://api.github.com/repos/apache/lucy/commits/04bd80fe37340838015ec6a61293fb6865fa9fbe", "message": "Improve integer division with rounded-up result\n\nThere's no need for floating point math:\n\n    ceil((double)p / (double)q) == (p + q - 1) / q\n\n(ignoring overflow)"}, {"url": "https://api.github.com/repos/apache/lucy/commits/d657bd1678ec81cfba11ae177bc8ffcc753d2cee", "message": "Adjust for Obj_to_Host changes"}, {"url": "https://api.github.com/repos/apache/lucy/commits/ee5cebea40162fb5d57268f3828547a480d407d3", "message": "Change copyright year in NOTICE"}, {"url": "https://api.github.com/repos/apache/lucy/commits/cb66d5d8f0641c84fde2607fe109978fe3562ade", "message": "Fix compiler warning"}, {"url": "https://api.github.com/repos/apache/lucy/commits/eefbb4085f69c9951b5cb723ba91770f11fc4ad4", "message": "Use indelible rel/ namespace for release tags"}, {"url": "https://api.github.com/repos/apache/lucy/commits/962b4803bc5450441a49ee83975702bb9f10e952", "message": "No shell access to people.apache.org anymore\n\nAdjust devel/bin/release_commands.pl."}, {"url": "https://api.github.com/repos/apache/lucy/commits/f7798ced681eeeff0e6621c28c741082f0db13f9", "message": "Rework Travis setup\n\n- Test Go bindings.\n- Test without sudo."}, {"url": "https://api.github.com/repos/apache/lucy/commits/2dec3cec6bd6f29629cbfa43d3979f4344311bca", "message": "Updating CHANGES for release 0.5.0"}, {"url": "https://api.github.com/repos/apache/lucy/commits/5d09b9a6b248e53577488c6bfca717eb76861ab2", "message": "Updating version number for release 0.5.0"}, {"url": "https://api.github.com/repos/apache/lucy/commits/614b68f4bf7c9753101311eb8c984d5aac701e20", "message": "Update test_all.sh script\n\nThis script must now be run from a parent directory containing both\nthe Clownfish and Lucy repos.\n\nInstall Clownfish artifacts in a temp dir.\n\nAlso build and test the Go bindings."}, {"url": "https://api.github.com/repos/apache/lucy/commits/8d58931a592f26ad46a62f1683f112e4a860848f", "message": "Add test_lucy.o to Makefile clean target"}, {"url": "https://api.github.com/repos/apache/lucy/commits/20305610f328701dcf7ebb5453af33503ce45d37", "message": "Disable problematic Go test TestSortWriterMisc\n\nThe test crashes on Linux, but it looks like an issue with the\ntest, not the Lucy internals."}, {"url": "https://api.github.com/repos/apache/lucy/commits/fb986db61293e06db54fe15054f59e7a948add0c", "message": "Guard against ord buffer overflow in SortFieldWriter"}, {"url": "https://api.github.com/repos/apache/lucy/commits/a7a652f37b5fa7bd9ff66cd0ee6786a91720232d", "message": "Build Go bindings with -lm\n\nNeeded on Linux, should be harmless on Darwin."}, {"url": "https://api.github.com/repos/apache/lucy/commits/f0500e351b9a1d19c6b10265af348e20bd288669", "message": "Fix Go bindings after Blob ctor changes"}, {"url": "https://api.github.com/repos/apache/lucy/commits/24398881171deeb035dfecb41400236b48de789b", "message": "Don't thaw Booleans under valgrind\n\nThis is known to leak."}, {"url": "https://api.github.com/repos/apache/lucy/commits/e1b4fb26900c4792223461b2f0565c82181e752e", "message": "Rework pod2mdtext.pl\n\n- Tidy up code.\n- Rework extraction of name section.\n- Switch to long options.\n- Add options for project name.\n- Per-project index filename.\n- Use en dash."}, {"url": "https://api.github.com/repos/apache/lucy/commits/0d6b493f2c7ed321580c2c2f79c9658ae46ec1cb", "message": "Use \"hash\" instead \"Hash\" in DocuComments\n\n\"Hash\" implies a Clownfish::Hash but the Perl bindings use Perl hashes."}, {"url": "https://api.github.com/repos/apache/lucy/commits/00ece714822831ce49459e9594a8326a6f6dd452", "message": "Add custom POD for $doc->get_fields\n\n\"void*\" return type throws off the code sample generator."}, {"url": "https://api.github.com/repos/apache/lucy/commits/91dfa85ae70a6a21591acbf68f2d9a676f460b28", "message": "Improve pod2mdtext.pl"}, {"url": "https://api.github.com/repos/apache/lucy/commits/8886a2b932f453184a42a5cad8623c7dd14de627", "message": "Update Perl dist build target"}, {"url": "https://api.github.com/repos/apache/lucy/commits/cd2d01960c50969cad03979e4e2392e170f23a72", "message": "Check for incompatible Clownfish major version\n\nFixes LUCY-289."}, {"url": "https://api.github.com/repos/apache/lucy/commits/4c5c08021c6e2d927324549c0fca2e75a241b4e1", "message": "Merge branch 'ctor-documentation'"}, {"url": "https://api.github.com/repos/apache/lucy/commits/4ce89d7feead40c40c894f5d7dcbe3b1fd5c5585", "message": "Fix method name in PolyReader POD"}, {"url": "https://api.github.com/repos/apache/lucy/commits/f8debe51d20aaa1b2dd1a3deb6c2389b73da3386", "message": "Make some ctors non-public\n\nRemove the C API documentation for some ctors to match the Perl API."}, {"url": "https://api.github.com/repos/apache/lucy/commits/61d89111b49157e9cd6419664da26e57ee3ba55c", "message": "Add POD for Analyzer abstract ctor"}, {"url": "https://api.github.com/repos/apache/lucy/commits/bc7b8fc3a279a99305c5063f5f001c869fafa44d", "message": "Add POD for Lucy::Simple ctor"}, {"url": "https://api.github.com/repos/apache/lucy/commits/2889932c424bf707bc69ee873bb159d9334484f5", "message": "Fix typo"}, {"url": "https://api.github.com/repos/apache/lucy/commits/4d6e33205a36b7c4ad0175674eccf0561202d8fd", "message": "Document all public constructors and initializers\n\nCFC now uses the constructor documentation for Perl POD.\n\nMake the constructor public if the initializer is public.\nAdd hand-rolled POD for abstract constructors."}, {"url": "https://api.github.com/repos/apache/lucy/commits/286231bcaa7bd0c2443f0081fbec5e61145b315d", "message": "Remove argument summary from =head2 in hand-rolled POD"}, {"url": "https://api.github.com/repos/apache/lucy/commits/530498d8852c704280d6cb2e124b0b728a3f70b4", "message": "Require specific Clownfish version in Lucy.pm\n\nFixes LUCY-273."}, {"url": "https://api.github.com/repos/apache/lucy/commits/fca85919f2969543d4920c3c1eb7659aaa2d99a1", "message": "Add Clownfish and CFC to build_ and configure_requires\n\nFixes CPAN Testers build on Cygwin and possibly other Windows setups.\n\nFixes LUCY-288."}, {"url": "https://api.github.com/repos/apache/lucy/commits/846598e812b9060b76dcf7a18346b9291197da99", "message": "Require specific Clownfish version in Build.PL\n\nAuto-update the required Clownfish version only for new major releases.\nFor minor relases, the exact required Clownfish and CFC versions must be\nupdated manually, if necessary.\n\nFixes LUCY-287."}, {"url": "https://api.github.com/repos/apache/lucy/commits/5573fdb87c4ce980b7fdd79882e417b4da92f79c", "message": "Add support for CPAN developer releases\n\nNow the \"update_version\" script can be used to set CPAN developer\nversions containing an underscore."}, {"url": "https://api.github.com/repos/apache/lucy/commits/da05df9c7b0036ebaecea417bb3ad30c3d4c1de5", "message": "Regenerate charmonizer.c to fix OS detection"}, {"url": "https://api.github.com/repos/apache/lucy/commits/6e490904ee5c84e8197994f85d3bd09e73b8e4c8", "message": "Address CI test scripts in release_commands.pl"}, {"url": "https://api.github.com/repos/apache/lucy/commits/e11061a447c0553b4de3bea3f0d248f543779a07", "message": "Readd licensing info lost in the previous commit"}, {"url": "https://api.github.com/repos/apache/lucy/commits/7a02b3a1483666d43a9b3784c76f210e4e7b76e8", "message": "Update and fix rat-excludes\n\nIt seems that Rat's -E option expects regexes that are matched against\nthe filename without directory."}, {"url": "https://api.github.com/repos/apache/lucy/commits/8fd3d5858b5b12bd06719bf46c1443b2e370bdb2", "message": "Add license headers to C sample code"}, {"url": "https://api.github.com/repos/apache/lucy/commits/895c2e52ff4f5ed4d5b3ea0b1bc0bb8e9f759381", "message": "Add license headers to Appveyor files"}, {"url": "https://api.github.com/repos/apache/lucy/commits/e1ff79ee548e4732d0ec22fff7b3f50d2001d491", "message": "Adjust for To_Bool removal"}, {"url": "https://api.github.com/repos/apache/lucy/commits/f5916a4e0ddfcd5eef6fffd305e7cea37dd842d8", "message": "Prepare for BB_Mimic removal\n\nReplace BB_Mimic with BB_Grow/memcpy/BB_Set_Size."}, {"url": "https://api.github.com/repos/apache/lucy/commits/d59ed7b2a393646cddc8726d71191d4f0f289185", "message": "Prepare for Blob_compare removal"}, {"url": "https://api.github.com/repos/apache/lucy/commits/0d4f3465b424212ee1b029e29c86a1ed771b59d0", "message": "Adjust for changes to labeled param handling"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/lucy/pulls/55", "title": "Remove Compiler ivars", "body": "Remove all instance variables from the Compiler base class.\r\n\r\n- Make Compiler inherit from Obj instead of Query.\r\n- Use per-subclass ivar for boost if needed.\r\n- Copy some relevant ivars from the respective Query.\r\n- Fetch Similarity from DataReader's schema.\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/lucy/issues/comments/96991923", "body": "> Curiously, the changes broke a test for segment merging -- but the test was faulty and had been passing accidentally before. I believe the issue was that the pivot changes to Sort_quicksort resulted in a different ordering for tied elements; the old order passed but the new order failed.\n\n@rectang I didn't get any test failures, but this commit could in fact change the order of tied elements:\n\nhttps://github.com/nwellnhof/lucy-clownfish/commit/67fb2ea43da223421b0f38279f7866eaa1901672\n\nI should have made that more clear by splitting it into two commits. The off-by-one error is actually in a part of the code below that isn't touched by that commit. The last element with a key equal to the pivot wasn't swapped, because the loop exit condition used `<` instead of `<=`. But the changes above make everything work as it should when using `<`.\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/issues/comments/96991923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/lucy/issues/comments/191797253", "body": "Please merge.\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/issues/comments/191797253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/lucy/issues/comments/203376235", "body": "I see that you avoided any type changes to instance variables or method parameters and return values. So what we have now is a couple of explicit but still unchecked casts from `size_t` to `uint32_t`. This shouldn't matter in practice, but part of me prefers to convert all these variables and parameters to `size_t`, including I32Array and BitVector. Also, when serializing a `size_t` as 32-bit value, 100% correct code should check for overflow like\n\n```\nsize_t size = Vec_Get_Size(vector);\nif (size > UINT32_MAX) {\n    THROW(...);\n}\nOutStream_Write_U32(outstream, (uint32_t)size);\n```\n\n(Or check before adding elements to such arrays.)\n\nOTOH, this seems silly for things like the number of PolyQuery children, document fields, or sort rules.\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/issues/comments/203376235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/lucy/issues/comments/209410043", "body": "`Next_Hit` and `To_Array` still work with `int32_t` indices. For now, we should at least add a check like\n\n```\nif (ivars->cap > INT32_MAX) { THROW(...) }\n```\n\nIn the long run, I'd suggest to change the return value of `Next_Hit`, remove `To_Array`, and switch its users over to `Next_Hit`.\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/issues/comments/209410043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/lucy/issues/comments/212793699", "body": ":+1: for doing this tedious work.\n\n(The build fails on Windows because Charmonizer doesn't support PRId32 yet.)\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/issues/comments/212793699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/lucy/issues/comments/213288815", "body": "Looks good.\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/issues/comments/213288815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/lucy/issues/comments/214684946", "body": "Looks good.\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/issues/comments/214684946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/lucy/issues/comments/217110874", "body": "Looks good.\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/issues/comments/217110874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/lucy/issues/comments/217629392", "body": "Looks good.\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/issues/comments/217629392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/lucy/comments/2314104", "body": "With this change, it's impossible to pass custom cflags via the command line, isn't it?\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/comments/2314104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/lucy/pulls/comments/58843541", "body": "I just realized that Perl switched from `I32` to `SSize_t` for array sizes in 5.20. Ideally, we should add a typedef depending on the Perl version and use it for `size` and `i`. But this can be done later.\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/pulls/comments/58843541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/lucy/pulls/comments/59541301", "body": "The overflow check should be:\n\n```\nif (bit_size > SIZE_MAX - 7) {\n    return SIZE_MAX / 8 + 1;\n}\n```\n\nOr maybe an alternative implementation:\n\n```\nstatic CFISH_INLINE size_t\nSI_octet_size(size_t bit_size) {\n    if (bit_size == 0) { return 0; }\n    return (bit_size - 1) / 8 + 1;\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/pulls/comments/59541301/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/lucy/pulls/comments/60538825", "body": "I think this should be `OutStream_Write_CI32`.\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/pulls/comments/60538825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/lucy/pulls/comments/61550957", "body": "Isn't the cast needed to avoid overflow in the multiplication?\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/pulls/comments/61550957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/lucy/pulls/comments/62415281", "body": "We should probably get rid of `%i8` and `%u8` (in Clownfish).\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/pulls/comments/62415281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "rectang": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/lucy/commits/f1c0f2201988e288240dfde8e073cc7bd717014c", "message": "Add CHANGES for 0.6.0."}, {"url": "https://api.github.com/repos/apache/lucy/commits/489d7fcc0d2eb362a32194f7f06f7fd91af79d02", "message": "Merge CHANGES for 0.5.x."}, {"url": "https://api.github.com/repos/apache/lucy/commits/3f9b4a7fa3db7f5f1929c645b2af27ee703c4d8a", "message": "Merge branch 'LUCY-295-misc2'\n\nMisc int type fixes for -Wconversion, part 2.\n\n*   frequencies (term freq, doc freq)\n*   doc counts\n*   pointer math results\n*   change return type of Sim_Encode_Norm to uint8_t\n*   grab bag of other fixes\n\nThis closes #49."}, {"url": "https://api.github.com/repos/apache/lucy/commits/110cfc2bb216605cd356196dd5eefd18c819bd74", "message": "Harmless int type fixes in SortCollector."}, {"url": "https://api.github.com/repos/apache/lucy/commits/bca2a204a9c09ef34a4dc3baba5d46bb147cc100", "message": "Fix harmless type glitch in BitVector."}, {"url": "https://api.github.com/repos/apache/lucy/commits/b5ad0f223343cee8e554438ce49693efa3bc1646", "message": "Harmless cast (doc count shouldn't be negative)."}, {"url": "https://api.github.com/repos/apache/lucy/commits/25747a2397193882595667b4cba0a6d42658669d", "message": "Harmless sign cast in Lock."}, {"url": "https://api.github.com/repos/apache/lucy/commits/9b7e53fef47f613ac0240c12cdd37d448ad32802", "message": "Internal int type change.\n\nValues are constrained to a closed set, all positive."}, {"url": "https://api.github.com/repos/apache/lucy/commits/06c0800442c90a86702160b10ec9896e8e473694", "message": "Harmless casts in SortFieldWriter."}, {"url": "https://api.github.com/repos/apache/lucy/commits/f6a4e0af445e80b839b86f47de1fdc3dca833fba", "message": "Settle on uint32_t for mem thresh.\n\nThe memory threshold which triggers a flush could be a size_t but\ndoesn't need to be and it's less work to settle on uint32_t."}, {"url": "https://api.github.com/repos/apache/lucy/commits/94b48ca6a9713438b284e70d212acfcee96e6811", "message": "Change width of test-only var."}, {"url": "https://api.github.com/repos/apache/lucy/commits/6a7ce0a3d1b321c30c088f1b8d6c748675b21909", "message": "Harmless casts of file positions."}, {"url": "https://api.github.com/repos/apache/lucy/commits/72fd9af8ba351fd9a6450dfffb4189095c2d4b26", "message": "Change return type of Encode_Norm to uint8_t.\n\nEncode_Norm is expected to implement a single-byte encoding."}, {"url": "https://api.github.com/repos/apache/lucy/commits/fe29dae681d18c3472f33e04c23fdc970341c52f", "message": "Guard against overflow.\n\nThe return value of Compare only need be positive/negative/0 -- the\nmagnitude doesn't matter."}, {"url": "https://api.github.com/repos/apache/lucy/commits/1be7e72ed55cb939f42c6e71ccec7e2337d550d1", "message": "Cast buf counts in SortExternal and PostingPool."}, {"url": "https://api.github.com/repos/apache/lucy/commits/4792d3e842920c2b101ec160164f256ac23ba498", "message": "Cast pointer math results.\n\nAll instances are not expected to overflow and would not result in\ntragedy in the extremely unlikely event that overflow does happen."}, {"url": "https://api.github.com/repos/apache/lucy/commits/a94f500f219160a944cb8523ae6be6902d75147e", "message": "Harmless sign casts for position/count vars."}, {"url": "https://api.github.com/repos/apache/lucy/commits/b341575bd4867f87f704f931214d2797912df540", "message": "Make float-not-zero check explicit."}, {"url": "https://api.github.com/repos/apache/lucy/commits/48a4d185fc3570c7336dae884f8343377e31608e", "message": "Cast some freq values.\n\nPerform some harmless sign casts for integers containing frequency\ncounts (term freq, doc freq)."}, {"url": "https://api.github.com/repos/apache/lucy/commits/e914c3ceef2cc8f656fba735edfb02538b53f301", "message": "Merge branch 'LUCY-295-misc1'\n\nAttend to miscellaneous integer conversion warnings.\n\n* Doc IDs.\n* Timeouts.\n* Sort ordinals.\n* \"Tick\" array indexes.\n\nThis closes #48."}, {"url": "https://api.github.com/repos/apache/lucy/commits/166c26eadd76c3d8f5cc8f77ddc8a518e45164e1", "message": "Address ord int conv warnings in SortCollector.\n\nPrefer unsigned integers to clarify bounds checking of lookups in ord\narrays."}, {"url": "https://api.github.com/repos/apache/lucy/commits/304d5cfd36983eeb7d1d4ccb54154fd1039b5043", "message": "Placate -Wconversion for sort ordinals.\n\nAdd some casts, but generally hold off on redundant checks.  (Aside from\none doc_id < 0 check.)  The primary safety mechanism is that\nimplementations of SortCache_Value, which take an ord, perform safe\nInStream reads and will throw errors properly upon being handed\nout-of-range ords."}, {"url": "https://api.github.com/repos/apache/lucy/commits/f391174cd33ba98e989ada7bc61e93c5c0576cc6", "message": "Limit range of lock timeouts/intervals."}, {"url": "https://api.github.com/repos/apache/lucy/commits/679ced9ce848c8d6bfaeecd710d143c6cb398ff0", "message": "Adapt \"tick\" variables for -Wconversion.\n\nArray indexes, segment numbers, etc."}, {"url": "https://api.github.com/repos/apache/lucy/commits/f37309a2f03194b2a40108f1cdb032168b3bff22", "message": "Adapt doc ID int types to placate -Wconversion."}, {"url": "https://api.github.com/repos/apache/lucy/commits/ac91ea9054afba34fe17a5ab7a1983297e61038a", "message": "Merge branch 'LUCY-295-text-sizes'\n\nAddress -Wconversion warnings relating to string lengths, code point\ncounts, and binary data lengths.\n\nIn addition, minor refactoring of Inversion.\n\nThis closes #47."}, {"url": "https://api.github.com/repos/apache/lucy/commits/a4b0b3b252f4bf253039756bad02b2fe80077114", "message": "Address -Wconversion for string/byte lengths.\n\nFor text lengths, unicode code point counts, and sometimes arbitrary\nbyte lengths: add casts and adress potential overflow issues with\nchecks."}, {"url": "https://api.github.com/repos/apache/lucy/commits/5ba152510713a98c981e461e4102464a618f3807", "message": "Change width of size variables for RawPosting."}, {"url": "https://api.github.com/repos/apache/lucy/commits/619ec102499b0f7cc98006ce0ba71dd7f098f879", "message": "Change type to avoid integer promotion confusion.\n\nThe compiler promotes `uint8_t` to `int` when performing bitwise\noperations, which then gets confusing when you assign to a `size_t`\nvariable.  Avoid the whole mess by using `unsigned` instead of\n`uint8_t`."}, {"url": "https://api.github.com/repos/apache/lucy/commits/080c33acda88cb5d35a8a91541873b906ad38310", "message": "Fix end offsets for edge case highlight data.\n\nUnder some circumstances (outside the most common code paths), the end\noffset for the last token in a field may have been too high, as a result\nof counting bytes rather than code points in UTF-8 source data.\nHowever, Highlighter only uses this data for heat mapping; it uses safe\nstring iteration when actually choosing excerpt boundaries, and cannot\noverrun."}, {"url": "https://api.github.com/repos/apache/lucy/commits/d6135b56c13257c044853aa5dd8fa16f1478018a", "message": "Disallow Token lengths over 2 GB."}, {"url": "https://api.github.com/repos/apache/lucy/commits/2fe08b3686270d2367871b9425039c7b07b51d46", "message": "Refactor resizing of Inversion."}, {"url": "https://api.github.com/repos/apache/lucy/commits/4677247ce93d1fc5d6979e784c1c41bc518225ff", "message": "Merge branch 'LUCY-295-tests-int-types'\n\nFix -Wconversion warnings in the Lucy unit tests.\n\nThis closes #45."}, {"url": "https://api.github.com/repos/apache/lucy/commits/a26954e8e303a113c68f5ab947326c6b597dcc3d", "message": "Merge branch 'LUCY-295-file-pos'\n\nPerform casts or variable type conversions in code manipulating file\npositions in order to adapt for -Wconversion.\n\nThis closes #46."}, {"url": "https://api.github.com/repos/apache/lucy/commits/8bc81c25c3521fbd1110a6a5c22c1542767e8de3", "message": "Restore cast to avoid overflow.\n\nIt's theoretically possible for very large doc IDs (threshold of\nINT32_MAX / 8) to overflow the file position.  Cast to int64_t before\nperforming the multiplication."}, {"url": "https://api.github.com/repos/apache/lucy/commits/cc9a8169112df6989ec32d6c357ca63d0837773c", "message": "Cast or convert integers holding file positions.\n\nPerform casts or change variable types to make code manipulating file\npositions compliant with -Wconversion."}, {"url": "https://api.github.com/repos/apache/lucy/commits/e9afedbfdec345099cc47922ea4cabc34273dee7", "message": "Change internal size_t to int64_t in OutStream."}, {"url": "https://api.github.com/repos/apache/lucy/commits/e629483e624bb6a701ff39b37ba7f4e09fd63140", "message": "Change `len` param to int64_t for internal read.\n\nUse int64_t rather than size_t to make overflow checking easier."}, {"url": "https://api.github.com/repos/apache/lucy/commits/882fbc1e9e0006e79d4eaaacef8f30444e88c924", "message": "Make straightforward int type adjustments.\n\nEither cast or change types to quiet -Wconversion warnings."}, {"url": "https://api.github.com/repos/apache/lucy/commits/641449dfe744acce2bcee78f7312d40fbf90dd04", "message": "Be consistent about using correct integer type."}, {"url": "https://api.github.com/repos/apache/lucy/commits/bbac126ab9d815d8519dfe3f008db572a3ea4305", "message": "Switch test macro from signed to unsigned.\n\nUse TEST_UINT_EQ instead of TEST_INT_EQ as needed."}, {"url": "https://api.github.com/repos/apache/lucy/commits/2d6629e26a1890d14e43bb6680561e079942d0af", "message": "Merge branch 'LUCY-295-more-cf-size_t'\n\nAdapt Lucy code for better conformance with Clownfish APIs -- in\nparticular, those that have changed to use size_t for element counts.\n\nThis closes #44."}, {"url": "https://api.github.com/repos/apache/lucy/commits/7ffa1e0231508051d7f49eaa432703fa57b16fcd", "message": "Adapt for size_t StringIterator APIs."}, {"url": "https://api.github.com/repos/apache/lucy/commits/beca7cbe501707c1ef9308050b83466d6547e89a", "message": "Cast arg to Int_new."}, {"url": "https://api.github.com/repos/apache/lucy/commits/a52a0a998d6eaf97bb389d6a40c0834f3a4585a2", "message": "Adapt for size_t ByteBuf APIs."}, {"url": "https://api.github.com/repos/apache/lucy/commits/56cabf0ce0f827b15e666a3760cdd54ace6f5d0e", "message": "Adapt for Blob size_t APIs."}, {"url": "https://api.github.com/repos/apache/lucy/commits/90d4a7d6d4e310d9d8c0568b76c4dba246dad01f", "message": "Adapt for String size_t APIs.\n\nAdapt for String methods which either return size_t or accept size_t\nparameters."}, {"url": "https://api.github.com/repos/apache/lucy/commits/f57736f3d759eded77d52f3bcacda3e180a31b28", "message": "Adapt for size_t tick param to Vec_Store."}, {"url": "https://api.github.com/repos/apache/lucy/commits/76dc745df3707ab98fbff1e6ba7abd7dc252c6ef", "message": "Adapt for Vec_Fetch size_t tick param.\n\nChange variable types or cast as necessary to adapt to size_t `tick`\nparam to Vec_Fetch."}, {"url": "https://api.github.com/repos/apache/lucy/commits/bb67e9f0b737eba783f053c0f7421d71d2affb5a", "message": "Adapt for changes to Hash_Get_Size.\n\nThe return value has been widened to size_t, so cast where necessary."}, {"url": "https://api.github.com/repos/apache/lucy/commits/74d7d40db233e1dbfb2c7961116607d00ddad3bf", "message": "Cast to narrow type from Vec_Get_Size.\n\nCast from size_t to uint32_t to avoid -Wconversion warnings.  In each of\nthese cases, the number of elements in the Vector should be small."}, {"url": "https://api.github.com/repos/apache/lucy/commits/30663d768a85f5cdf55b4c29026954280d68269c", "message": "Address a few more simple Vec_Get_Size.\n\nAdapt a few more easy-to-review transitions from uint32_t to size_t."}, {"url": "https://api.github.com/repos/apache/lucy/commits/90eebf02f6903deb62604e6dd951afcedbf00477", "message": "Merge branch 'LUCY-302-numutils-warnings'\n\nIn NumberUtils.cfh:\n\n* Widen the array index type for addressing 1-bit, 2-bit, and 4-bit arrays.\n* Address a few (false positive) compiler warnings from `-Wconversion`.\n\nThis fixes #43."}, {"url": "https://api.github.com/repos/apache/lucy/commits/dd6e79c9e36f9ff13c64609dd9aad9feec748b09", "message": "Fix warnings regarding NumUtil array manip.\n\nMake appropriate casts or other adjustments to avoid warnings with\nregards to NumUtil 1-bit, 2-bit and 4-bit integer array manipulation\nroutines."}, {"url": "https://api.github.com/repos/apache/lucy/commits/a311c31918770867929c1174c7d471d36d1c409f", "message": "Change tick params for sub-byte arrays to size_t.\n\nChange the tick (array index) parameter for 1-bit, 2-bit, and 4-bit\ninteger array manipulation routines from uint32_t to size_t."}, {"url": "https://api.github.com/repos/apache/lucy/commits/f48cc9edddcb1ff8da2ddb79d4ced3f828f8689b", "message": "Rework casting in decode_bigend_u16.\n\nBoth versions pass tests, but this doesn't make -Wconversion complain."}, {"url": "https://api.github.com/repos/apache/lucy/commits/e691a2223c2e55860804b0e1d65c8fcf2690f597", "message": "Perform a safe truncation.\n\nThe result being truncated will never be wider than 8 bits."}, {"url": "https://api.github.com/repos/apache/lucy/commits/42694aa7ce4f94a88c7ffc6359bde4d740f26a33", "message": "Use ptrdiff_t to avoid conversion warnings."}, {"url": "https://api.github.com/repos/apache/lucy/commits/fec8c524724c9b257089e9ed9c334cc5c44a4dbc", "message": "Change some masks from uint8_t to unsigned int."}, {"url": "https://api.github.com/repos/apache/lucy/commits/e6b61338ce163a89a4e34e2e230c5e6ea1bb437b", "message": "Merge branch 'LUCY-301-C32-transition'\n\nAt present, InStream, OutStream, and NumberUtils provide an unsigned\ncompressed format called C32/C64 -- and when we need signed\nrepresentations, we just cast.\n\nTo get rid of all these casts (and fix some sites missing casts),\nsupport signed and unsigned variants.\n\nThis closes #42."}, {"url": "https://api.github.com/repos/apache/lucy/commits/8b4ad2105117adf74e3224255f90d6e076221960", "message": "Merge branch 'LUCY-300-max-field-2gb'\n\nInstall an early sanity check restricting field lengths to a maximum of\n2 GB.\n\nThis closes #41."}, {"url": "https://api.github.com/repos/apache/lucy/commits/6c167aa5acc6f2a680184c7bd823500fbce1f0eb", "message": "Avoid PRId32 for the sake of Windows.\n\nFor the time being, Charmonizer knows about PRId64 but not PRId32."}, {"url": "https://api.github.com/repos/apache/lucy/commits/7876b136436fe89419e86d7ad635abc1322864eb", "message": "Invoke signed version of function."}, {"url": "https://api.github.com/repos/apache/lucy/commits/ab5a44bd414e79ed0a5127e303887056ce09d7cd", "message": "Remove obsolete C32/C64 code."}, {"url": "https://api.github.com/repos/apache/lucy/commits/febd2ff3cb76b460e0778e6d732830cf1f860e50", "message": "Misc C32/C64 transition.\n\nTransition all remaining Read/Write C32/C64 to Read_CI64/etc."}, {"url": "https://api.github.com/repos/apache/lucy/commits/656a773b89d3676dc9d62d48f5a2d145342bb32c", "message": "Change C32/C64 for freq, positions.\n\n`freq` (num occurrences per document for a term) is generally\nrepresented as a uint32_t.  Positions may be signed or unsigned -- it's\nnot consistent.  Just match up to existing usage."}, {"url": "https://api.github.com/repos/apache/lucy/commits/3089bfdf4c09b7cf3f937405417c93e23063d727", "message": "Switch C32 code relating to doc IDs.\n\nDoc IDs are signed.  Delta doc IDs may signed or unsigned.  Use the\nappropriate CI32 or CU32 read/write methods for both."}, {"url": "https://api.github.com/repos/apache/lucy/commits/e5ba8a19dd8e04039e7de5479b852150b7705b46", "message": "Switch C64 to CI64 for file positions.\n\nChange Read/Write C64 to CI64 for file positions, all of which are\nrepresented as signed 64-bit integers."}, {"url": "https://api.github.com/repos/apache/lucy/commits/5e4dcd2e31a80ed20e86ca931bbbc565f6781820", "message": "Change size_t C32/C64 read/writes.\n\nAdapt Read_C32/Write_C32/Read_C64/Write_C64 to Read_CU32/etc for\nvariables representing memory sizes: String, Blob, Vector and Hash sizes\nin particular."}, {"url": "https://api.github.com/repos/apache/lucy/commits/451c469cfdea48be9ea6f21bb7437b26f98f2b9b", "message": "Forbid fields above 2 GB.\n\nCheck for fields above 2 GB before the document enters the any writer\nsubcomponents below SegWriter."}, {"url": "https://api.github.com/repos/apache/lucy/commits/17a3d60bbe2b5a1279052278225b2875668b2968", "message": "Change easy-to-review Read_C32 to CU32.\n\nAll of these have the type of the lvalue show up in the diff, making it\neasy to confirm that the types match."}, {"url": "https://api.github.com/repos/apache/lucy/commits/795626b6c4c6c98cd6f6ac0d0a2899e4b6e09e33", "message": "Switch Go bindings from C32/C64 to CI32/etc.\n\nChange IO methods invoked to use explicitly signed/unsigned versions\nrather than casting."}, {"url": "https://api.github.com/repos/apache/lucy/commits/cbe964dfa85720357b8e6f06347028671c641e06", "message": "Switch Perl bindings from C32/C64 to CI32/etc.\n\nChange IO methods invoked to use explicitly signed/unsigned versions\nrather than casting."}, {"url": "https://api.github.com/repos/apache/lucy/commits/c1af09331739ee47e4a9dc138b7dd0265ba74497", "message": "Remove obsolete NumUtil C32/C64 code."}, {"url": "https://api.github.com/repos/apache/lucy/commits/67656d94224b9350deb224699eda5956a0b8a989", "message": "Switch NumUtils client code to cu32/ci32.\n\nChange all invocations from NumUtil_xxxx_c32 to use the\nNumUtil_xxxx_cu32 and NumUtil_xxx_ci32 variants which are explicitly\nsigned or unsigned."}, {"url": "https://api.github.com/repos/apache/lucy/commits/cef8cbc1dc507196ac0881f72709031b2889abff", "message": "Support compressed signed integers in NumberUtils."}, {"url": "https://api.github.com/repos/apache/lucy/commits/ce89b9c40ea86b45c181852a12edeaa7bea2d054", "message": "Read/write compressed signed integers."}, {"url": "https://api.github.com/repos/apache/lucy/commits/3e3c64895bc92b19fadebe2a7b3188e8a218597d", "message": "Add explicit cu32 and cu64 to NumUtil.\n\nDuplicate the functionality of xxxx_c64 in xxxx_cu64, in preparation for\nthe addition of xxxx_ci64 (for signed integers) and the eventual removal\nof xxxx_64."}, {"url": "https://api.github.com/repos/apache/lucy/commits/8a48ef58e2592336594bebb08a25ea763f83037c", "message": "Duplicate IO C32 as explicitly unsigned CU32.\n\nPrepare for the addition of CI32 -- a signed compressed integer."}, {"url": "https://api.github.com/repos/apache/lucy/commits/4370756cc66285b53c11bd027bc6148563ba9b13", "message": "Merge branch 'LUCY-295-bitvec-size-fixes'\n\nMake some adjustments to the BitVector size mods, as suggested by Nick\nWellnhofer."}, {"url": "https://api.github.com/repos/apache/lucy/commits/7edcd1cfcbedfe2beffdcf8b270b81f23074dc84", "message": "Fix bit-to-byte-size routine."}, {"url": "https://api.github.com/repos/apache/lucy/commits/66aba12b38005102a67f5407975a8edc48eef4e8", "message": "Add safety check to BitVec_Next_Hit."}, {"url": "https://api.github.com/repos/apache/lucy/commits/54841aa79335c214c7217b053bb42162752358bb", "message": "Merge branch 'LUCY-295-bitvec-size'\n\nChange BitVector to use `size_t` instead of `uint32_t` to address\nbits in the array.\n\nThis fixes #40."}, {"url": "https://api.github.com/repos/apache/lucy/commits/42640a6f408adb78556532b6a43f4d71cd842caa", "message": "Adapt Go bindings for BitVector width change."}, {"url": "https://api.github.com/repos/apache/lucy/commits/71d7edd2c2c1eeaf1a1b4e8b9a01a621b53180d4", "message": "Adapt for changed BitVector return value APIs.\n\nBitVec counts and sizes are now measured in size_t not uint32_t."}, {"url": "https://api.github.com/repos/apache/lucy/commits/e03b8c7160bca49bb212bdf027a7f9ca2d2c4524", "message": "Rework BitVector tests for index width change.\n\nChanging indexes from uint32_t to size_t requires updating a fair amount\nof test code."}, {"url": "https://api.github.com/repos/apache/lucy/commits/0a6ea88df1e5064609561e874b74707c855097b2", "message": "Widen arguments to BitVector functions.\n\nBitVector API functions now take size_t indexes rather than uint32_t."}, {"url": "https://api.github.com/repos/apache/lucy/commits/efd6ac7bf73ffa4b99bfe493bb3ef1ef5c5e8ef6", "message": "Factor out routine for octet size calculation.\n\nCreate a dedicated static function which given a bit size returns a byte\nsize."}, {"url": "https://api.github.com/repos/apache/lucy/commits/07285699c4f819d9be0dc1c7984c2bfe79be7851", "message": "Change BitVector to use size_t indexes.\n\nHave BitVector use a size_t to track its capacity and to index into the\nbit array."}, {"url": "https://api.github.com/repos/apache/lucy/commits/67c6fec0b888d0470d99ee1c6855bbaecc9b712d", "message": "Merge branch 'LUCY-295-i32array-size-v2'\n\nChange I32Array so that it uses a size_t to index into its array of 32-bit\nintegers. This entails both changes to the class internals and to the internal\nAPI. (I32Array is not a public API.)\n\nThis fixes #39."}, {"url": "https://api.github.com/repos/apache/lucy/commits/c07e85462f3d763fa5b2cbfc291eb03c5d52ebe2", "message": "Adapt Go bindings for I32Array size change."}, {"url": "https://api.github.com/repos/apache/lucy/commits/e7b501caf3e6b6672f7c888e3fadecb30d07b360", "message": "Various adaptations to I32Array size change.\n\nThese changes are a grab bag, some of which are easy to review and some\nof which are more subtle."}, {"url": "https://api.github.com/repos/apache/lucy/commits/3f0e59ba8f3f7c99f6ea8950d48c4fcd28a700b9", "message": "Adapt calls into I32Array APIs for size change.\n\nAdd/remove casts for functions where the width of a size argument has\nchanged."}, {"url": "https://api.github.com/repos/apache/lucy/commits/ffb3c830ac57fd5d94b24b1ad438542238b8ac84", "message": "Adapt PhraseQuery, ProximityQuery for I32Array.\n\nAdapt these two very similar Query subclasses for the I32Array size\nchange."}, {"url": "https://api.github.com/repos/apache/lucy/commits/bb4f6e44bc55664f7ac4ec5e3c318619ffa6f8f2", "message": "Adapt PolyReader_sub_tick for changes to I32Array."}, {"url": "https://api.github.com/repos/apache/lucy/commits/0c494085ac98a77d7969f1a385be1bf39936bb2e", "message": "Adapt Perl bindings for I32Array size change."}, {"url": "https://api.github.com/repos/apache/lucy/commits/7e31cc6930fe9c78b9a21124765dc33a98d10759", "message": "Change I32Array size to `size_t`.\n\nOnly the core module -- all usage sites need to be changed next."}, {"url": "https://api.github.com/repos/apache/lucy/commits/8804cba6ff7cbf2bc660a859c9b78e06c3284eb8", "message": "Merge branch 'LUCY-295-vec-size'\n\nThe Clownfish API `Vec_Get_Size` has changed from returning `uint32_t`\nto returning `size_t`.  Adapt Lucy for the effect of this change.\n\nThis branch is broken up into commits according to the kind of remedy\nthat was applied at each site, and the associated difficulty of proofing\nthe change.\n\nThis closes #36."}, {"url": "https://api.github.com/repos/apache/lucy/commits/10c57752ee1a2f45d3f6d7e372bd9c9279f9e98c", "message": "Fix sign of arg to sizeof."}, {"url": "https://api.github.com/repos/apache/lucy/commits/e7d675a67fefcca764d538b5dafc76d57ed42c47", "message": "Tricky type changes to match Vec_Get_Size.\n\nAfter converting variables assigned the return value of Vec_Get_Size\nfrom `uint32_t` to `size_t`, at least one cast or other type conversion\nis performed."}, {"url": "https://api.github.com/repos/apache/lucy/commits/f0884c6ac873f65432a1f92e4c475ff488db21cb", "message": "Type change to match Vec_Get_Size.\n\nWiden the types of variables which are assigned the return value from\nVec_Get_Size.  The widening should have no impact on behavior or require\nany casting; the variables should not be used in any context which\nrequires implicit conversion."}, {"url": "https://api.github.com/repos/apache/lucy/commits/e2235fef95d2a1253ccba8405518e67a3445a99e", "message": "Iter var change to match Vec_Get_Size.\n\nChange the type of iteration variables to `size_t` to match the return\ntype of Vec_Get_Size.  This commit is restricted to simple cases where\nthe iteration variable is scoped to the loop block and is only used as\nan C array index or arguments to Vector methods which take a `size_t`."}, {"url": "https://api.github.com/repos/apache/lucy/commits/b9fba0dada5199810b25ac7ab49d57bf9547f538", "message": "Merge remote-tracking branch 'github/LUCY-294-nul-term'\n\nFix some nul-termination problems in test code.\n\nThis closes #35."}, {"url": "https://api.github.com/repos/apache/lucy/commits/7805188df7a812382b484b68223f49964a8aaa39", "message": "Quiet warnings for debugging vars.\n\nUnless DEBUG is set, a few variables look like they are unused to the\ncompiler -- so tell it otherwise."}, {"url": "https://api.github.com/repos/apache/lucy/commits/d9c7f35926aa337320112d6f03736b0cd13261c0", "message": "Ensure nul-terminated C strings in test code.\n\nUse `Str_To_Utf8` which is guaranteed to return a nul-terminated C\nstring instead of `Str_To_Ptr8`."}, {"url": "https://api.github.com/repos/apache/lucy/commits/a738254b66fa2d49729725affbdf2c93e0bef84a", "message": "Merge branch 'LUCY-292-decref-order'\n\nThis closes #34."}, {"url": "https://api.github.com/repos/apache/lucy/commits/71c99cf69008b7742ffa41218574c308d9494e5f", "message": "Fix refcount order when overwriting.\n\nWhen there's a possibility that a recounted value is overwriting itself,\ndelay the decref until after any incref so that there is no way the\nrefcount can fall to 0 prior to the incref."}, {"url": "https://api.github.com/repos/apache/lucy/commits/b30f5c2beb46161f4217d0577394826afe4e5e05", "message": "Merge branch 'LUCY-282-go-qparser'\n\nTune and test the Go bindings for QueryParser.\n\nThis closes #32."}, {"url": "https://api.github.com/repos/apache/lucy/commits/6cc97ececdd033388728dc3503901aa65d12009c", "message": "Merge branch 'LUCY-282-Go-index-pt2'\n\nContinue with tuning and testing the Go bindings for Lucy's indexing\ncomponents.\n\n* IndexReader\n* Lexicon\n* PostingList, Posting\n* Various DataReaders and DataWriters\n\nThis closes #31."}, {"url": "https://api.github.com/repos/apache/lucy/commits/8b99de01d90fdb011286e8739815ddda6b9d05fd", "message": "Tune and test QueryParser Go bindings."}, {"url": "https://api.github.com/repos/apache/lucy/commits/3d858387e037993cc21f4fe4b04f6ce34d666491", "message": "Add utility converting Go string slice to Vector."}, {"url": "https://api.github.com/repos/apache/lucy/commits/126c6ba8907c2f134c9921cafe8d7dc74f1fbc5d", "message": "Tune and test Go bindings for SegWriter."}, {"url": "https://api.github.com/repos/apache/lucy/commits/2932054958f0fc785d13d1bbfe59dee9ce42ef00", "message": "Tune and test Go bindings for DeletionsWriter."}, {"url": "https://api.github.com/repos/apache/lucy/commits/362aeddca1599907090188035e77aeeba7b57c8b", "message": "Tune and test Go bindings for DataWriter."}, {"url": "https://api.github.com/repos/apache/lucy/commits/e5e4232b6c0c8d22f46c6db5430fb92ee949c855", "message": "Tune and test Go bindings for PostingListReader."}, {"url": "https://api.github.com/repos/apache/lucy/commits/3358bc298eaaecd0e705af869d6c59f2e869dc8e", "message": "Tune and test Go bindings for LexiconReader."}, {"url": "https://api.github.com/repos/apache/lucy/commits/db08b691bf6a8b5ce450f296f496c76604eef3e6", "message": "Tune and test Go bindings for SortReader."}, {"url": "https://api.github.com/repos/apache/lucy/commits/bfe8a34733ff43ecf34dc2e7523684381dbec5a9", "message": "Test Go bindings for DeletionsReader."}, {"url": "https://api.github.com/repos/apache/lucy/commits/a405c39703da14ede15b1b20a54bf63165b32df5", "message": "Tune and test HighlightReader Go bindings."}, {"url": "https://api.github.com/repos/apache/lucy/commits/6deeba866eab0ffa1a6ad875a2d8912f16c9ae8b", "message": "Suppress SegReader and PolyReader Go ctors.\n\nFor now, providing lucy.OpenIndexReader is enough."}, {"url": "https://api.github.com/repos/apache/lucy/commits/fe25122fadcb9115ddd0810e9986898048e5303e", "message": "Tune and test Go bindings for IndexReader."}, {"url": "https://api.github.com/repos/apache/lucy/commits/c1cdb4d7912d0105ad5e00491769111eb8991d0b", "message": "Tune and test Go bindings for DocReader."}, {"url": "https://api.github.com/repos/apache/lucy/commits/38bea5a604fd4d190bb49719f50d05e1a1c58de5", "message": "Tune and test Go bindings for DataReader."}, {"url": "https://api.github.com/repos/apache/lucy/commits/d262be92763c9d145fd7fdcd3cef07cc8ec18a13", "message": "Test Go bindings for Posting."}, {"url": "https://api.github.com/repos/apache/lucy/commits/a693aa1decaff2b4e33eaacc180cf95b680d8317", "message": "Test Go bindings for PostingList."}, {"url": "https://api.github.com/repos/apache/lucy/commits/932c211412d89078a5ebc2400fd36540f534f0ba", "message": "Test Go bindings for Lexicon.\n\nUse SegLexicon to test out Lexicon."}, {"url": "https://api.github.com/repos/apache/lucy/commits/123c48ea22447cfd0e41be19b43b29c7f1ba357f", "message": "Merge branch 'LUCY-282-Go-highlight'\n\nTune and test custom bindings for Highlighter and HeatMap.\n\nThis closes #30."}, {"url": "https://api.github.com/repos/apache/lucy/commits/ae8f0c1ed32f4e5edc95eec64ca17bd215166294", "message": "Test Go bindings for Highlighter."}, {"url": "https://api.github.com/repos/apache/lucy/commits/a4d63f2eca1cbe0d33e5b719fcbc343e9d8e06f2", "message": "Tune and test Go bindings for HeatMap."}, {"url": "https://api.github.com/repos/apache/lucy/commits/dc3a17e8865769c7b27255a9a308dca133ec6e03", "message": "Merge branch 'LUCY-282-misc-go-pt1'\n\nTune and test Go bindings for a variety of classes and methods. Some\nwere overlooked during the first pass through the codebase creating\ncustom Go bindings.\n\nThis closes #29."}, {"url": "https://api.github.com/repos/apache/lucy/commits/8208210b3f5877b2056fecd4fa19f4de94ccdd6e", "message": "Trap errors in Go bindings for Matcher_Next.\n\nUse the same design pattern as Hits_Next: trap errors in a Go struct\nmember and expect the user to check after iteration finishes."}, {"url": "https://api.github.com/repos/apache/lucy/commits/66120820174ffd6bc2459179fe642d094cc3ad57", "message": "Test Go bindings for HitDoc."}, {"url": "https://api.github.com/repos/apache/lucy/commits/91dd3894b16cc3f5140c2ac398d193a59f4b19a0", "message": "Tune and test Go bindings for Doc."}, {"url": "https://api.github.com/repos/apache/lucy/commits/d5063a519200d52c1abeec263bd008f176fa94bd", "message": "Tune and test Go bindings for Stepper."}, {"url": "https://api.github.com/repos/apache/lucy/commits/dd4328b3a0c528e6d168c1c241bc07253c2e2c4b", "message": "Catch errors in Go binding for DH_Next().\n\nUse the same approach we took with Hits_Next(): trap errors and capture\nthem to a member variable, and expect the user to check that no errors\noccurred after iteration finishes."}, {"url": "https://api.github.com/repos/apache/lucy/commits/dac0e2bd5d4f93f84842d393a59d3f84f215bf88", "message": "Add error to Go binding for MakeCompiler."}, {"url": "https://api.github.com/repos/apache/lucy/commits/6d0a55f7387df4714386b7ffce9ba554c0c384f4", "message": "Add error to Go binding for MakeMatcher."}, {"url": "https://api.github.com/repos/apache/lucy/commits/3d636a19d41e9f049aaa444db097de5e31895e9a", "message": "Add error retval for SortCache Go bindings.\n\nSome methods need to trap exceptions and return error objects."}, {"url": "https://api.github.com/repos/apache/lucy/commits/d483dd076c36f3e8c29d80de5ad6e401e5531ca0", "message": "More custom Go for Searcher.\n\nHand-roll bindings for FetchDoc, fetchDocVec and topDocs to allow for\nreturning a tuple including an `error`."}, {"url": "https://api.github.com/repos/apache/lucy/commits/e35becd7dd804ceb103e19710f0aa85fd864e150", "message": "Consolidate Searcher Go bindings."}, {"url": "https://api.github.com/repos/apache/lucy/commits/e101acade8d9d2f1235b71e23db661e44359cf3d", "message": "Tune and test Go bindings for Simple."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/lucy/issues/comments/96907430", "body": "I've checked over the `IxManager_Recycle` changes.  They look good to me.\n\nCuriously, the changes broke a test for segment merging -- but the test was faulty and had been passing accidentally before.  I believe the issue was that the pivot changes to Sort_quicksort resulted in a different ordering for tied elements; the old order passed but the new order failed.  Here is a patch to make the test robust against such fluctuations: https://gist.github.com/rectang/720462b157c884331b96\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/issues/comments/96907430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/lucy/issues/comments/96907490", "body": "All the commits on this pull request look good.\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/issues/comments/96907490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/lucy/issues/comments/205525390", "body": "I agree with making I32Array and BitVector use size_t internally to match the other types. Once they are converted, it will make sense to go back and fix the unchecked-but-explicit casts.\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/issues/comments/205525390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/lucy/issues/comments/206541824", "body": "The Go bindings need some more work for this changeset. I'll submit another version.\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/issues/comments/206541824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/lucy/issues/comments/213116250", "body": "I'll add a couple small commits before merging to address those issues.  Thanks for the review!\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/issues/comments/213116250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/lucy/comments/2314197", "body": "Hmm, for the source files compiled with clownfish_params => source, yes.  FWIW, extra_compiler_flags still gets used when compiling the .xs files.\n\nMy goal here is to consolidate build stuff which is common across hosts into a shared structure so that it doesn't have to be duplicated across each host build.\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/comments/2314197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/lucy/pulls/comments/61782155", "body": "Good catch -- I'll add a commit to this pull request reverting that line.\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/pulls/comments/61782155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "asfbot": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/lucy/issues/comments/105383853", "body": "Marvin Humphrey  on dev@lucy.apache.org replies:\n\n+1 to merge.\n\nMarvin Humphrey\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/issues/comments/105383853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/lucy/issues/comments/138748083", "body": "Marvin Humphrey  on dev@lucy.apache.org replies:\n\nI reviewed a diff of the generated POD before and after merging this branch\n(and the corresponding Clownfish branch). A summary of the changes is below my\nsig.\n\nUnsurprisingly for a change of this magnitude, there were a few glitches.\nThese are the ones I think we should to attend to:\n-   Restore documentation for several methods IndexSearcher inherits\n  from Searcher.  Same with PolySearcher (though it's a less important\n  class).\n-   Restore Doc#add_fields.\n-   IndexReader#offsets became IndexReader#_offsets and should be restored.\n-   The PostingList methods Next, Advance, and Get_Doc_ID should become\n  public.\n-   Restore BitCollector#collect\n-   Restore ANDQuery#add_child and ORQuery#add_child.\n\nMarvin Humphrey\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/issues/comments/138748083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/lucy/issues/comments/154602028", "body": "Marvin Humphrey  on dev@lucy.apache.org replies:\n\n+1 to merge.  Thank you for diving in!\n\nSortExternal is fairly large, fairly easy to make mistakes in, and not\nthat easy to keep in your head.  I scrutinized these commits closely\nenough to satisfy myself that I couldn't find any local mistakes in\nthe diffs, and that if there were any big conceptual mistakes, they\nwould probably have caused the whole module to blow up.\n\nMarvin Humphrey\n", "reactions": {"url": "https://api.github.com/repos/apache/lucy/issues/comments/154602028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}}}}