{"_default": {"1": {"szaboferee": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/ffc5554438aceb24eabc9815511285f069084968", "message": "FLUME-3115. Update netty library\n\nThis change upgrades the netty library to 3.10.6 and also adds netty-all 4.1.17\n\nThis closes #155\n\nReviewers: Miklos Csanady\n\n(Ferenc Szabo via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/8466766538ed7e8325abf81392008b1d9de8a1f6", "message": "FLUME-3201. Fix SyslogUtil to handle RFC3164 format in December correctly\n\nThis closes #188\n\nReviewers: Tristan Stevens, Miklos Csanady\n\n(Ferenc Szabo via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/c7b95a746ba8ffd0337540e3233032d2b071c648", "message": "FLUME-3159. Setting JdbcChannel test connection to in-memory derby\n\nThis patch changes the JdbcChannel tests to use in-memory derby to make parallel\ntest run possible.\n\nThis closes #177\n\nReviewers: Denes Arvay\n\n(Ferenc Szabo via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/8b3fad52b2da1510fa066ded2816b9cfc35f22e1", "message": "Changing javax.jms to geronimo jms spec\n\njavax.jms has GNU GPL licence which is not compatible with Apache\n\nThis closes #172\n\nReviewers: Miklos Csanady, Denes Arvay\n\n(Ferenc Szabo via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/773555c5c7d09650f8f4173ced232954b1a3a361", "message": "FLUME-3127. Upgrade libfb303 library dependency\n\n- thrift version changed to 0.9.3\n- thrift objects generated with the new version\n- deprecated method calls updated in ScribeSource\n- cross-compatibility tested with Flume 1.6 and 1.7\n\nThis closes #163\n\nReviewers: Denes Arvay\n\n(Ferenc Szabo via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/32c167dccd711f163221b374bf6a4af68e66f0df", "message": "FLUME-3157. Refactor TestHDFSEventSinkOnMiniCluster to not use LeaseManager private API\n\nThis fix removes LeaseManager private API usages from tests in\nTestHDFSEventSinkOnMiniCluster as these methods are expected to be\nremoved/changed in future versions of Hadoop/HDFS.\n\nTest refactored, it has the same result and behaviour.\n\nThis closes #164\n\nReviewers: Denes Arvay\n\n(Ferenc Szabo via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/0cc7542ddc18239754befb19408dc3aca4337a66", "message": "FLUME-3132. Upgrade tomcat jasper library dependencies\n\nExclude the vulnerable jasper library transitive dependencies from hadoop, hbase\ndependencies.\n\nThis closes #152\n\nReviewers: Attila Simon, Miklos Csanady\n\n(Ferenc Szabo via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/3cd1b331308d8d312fae258d94cd64a69ceb1644", "message": "FLUME-3112. Upgrade jackson-core library dependency\n\nUpgrading the version in dependency management and removing unused ones.\nBoth 1.x and 2.x jackson versions are needed, renamed the jackson.version\nproperty to codehaus.jackson.version and added fasterxml.jackson.version\nfor the 2.x jackson.\n\nThis closes #154\n\nReviewers: Attila Simon, Miklos Csanady, Denes Arvay\n\n(Ferenc Szabo via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/aa1aea07b7e2bd25e28efdc262239ec501fbf086", "message": "FLUME-3131. Upgrade Spring Framework library dependencies\n\nThe Spring Framework libraries are transitive depencencies through ActiveMQ\nthus it's not possible to upgrade.\nThey are only used is tests so moved ActiveMQ to test scope.\n\nThis closes #153\n\nReviewers: Attila Simon, Denes Arvay\n\n(Ferenc Szabo via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/4d79aa003aa02e8d513a1ae1406795d758143397", "message": "FLUME-3152 Add Flume Metric for Backup Checkpoint Errors\n\nThis change adds a new metric (channel.file.checkpoint.backup.write.error)\nto the File Channel. It gets incremented if an exception happens\nduring backup checkpoints writes.\n\nThis closes #156\n\nReviewers: Denes Arvay\n\n(Ferenc Szabo via Denes Arvay)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/124862800", "body": "why don't we use `<pluginManagement>` in the parent pom?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124862800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124863170", "body": "Why don't we use `<dependencyManagement>` in the parent pom", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124863170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124874194", "body": "dependencyManagement?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124874194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124875415", "body": "Now, that we use common versions, we might would like to look at the exlusions in the dependencies. Again, the version numbers could come from `dependencyManagement`", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124875415/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/136612541", "body": "I'm a little bit concerned about this FlumeBeanConfigurator class, because if it is not used with caution it could expose setters we might would not like to expose. I see why it is easier to use a util like this with the jetty configuration. We should consider moving this somewhere so only the HttpSource  could see and use it.\r\n\r\nAlso some question that could be documented is :\r\nWhen the user sets both `keystorePassword` and `SslContextFactory.KeyStorePassword` which one will be set?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/136612541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141070167", "body": "Is it possible to use java 8 optional instead?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141070167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141071974", "body": "Why not just initialize with the empty list?\r\n\r\nor we could use the Optional.ifPresent(Consumer<? super T> consumer) at the end, where the get() is called", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141071974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141075123", "body": "the optional wrapper seems unnecessary because there is a single initialization and 3 get in the same method.\r\nInitialization could be moved to declaration", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141075123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141076172", "body": "the optional might be an overhead here too.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141076172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141080618", "body": "This variable has only this initialization and a few get in this class. I guess the Optional here is not needed.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141080618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141085582", "body": "same one initialization with gets. ", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141085582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141100634", "body": "What happens if you would like to have two redis channel with different redis servers?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141100634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141104186", "body": "It might be better to have an example host (localhost) here or an IP address", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141104186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141104681", "body": "The cluster scenario is not documented", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141104681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141105083", "body": "It would be great if these settings could be set from the configuration", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141105083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141105423", "body": "What happens if we would like to have two channel with different redis servers?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141105423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141105693", "body": "I see the cluster related config names but not the actual implementation that uses them.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141105693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150564050", "body": "The file you added comments to is a markdown file, so the syntax you have used is not the right one.\r\nAlso, the comments would have very limited additional value.\r\nI would recommend closing this pull request.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150564050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/151096923", "body": "I would remove this property and also the version tag from the part:\r\n`        <groupId>org.apache.maven.plugins</groupId>\r\n        <artifactId>maven-surefire-plugin</artifactId>\r\n        <version>${surefire.version}</version>`\r\n\r\nso the plugin could use the pluginManagement settings from the parent pom", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/151096923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/148844690", "body": "Hi @rgoers , thanks for the pull request\r\nI am wondering how this metastore_db folder is necessary to upgrade the log4j version.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/148844690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/148863101", "body": "This is some leftover from a failed test run. Could you please remove it so we could review the real changes?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/148863101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150552312", "body": "I was wondering why were you changing log4j.properties to XML.\r\nAre there benefits I am not aware of?\r\n\r\nThere might be systems where flume was integrated with log4j.properties format. What is the precedence if there are both .properties and .xml?\r\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150552312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150553086", "body": "Wouldn't be better to have this in the parent dependencyManagement as there are transitive dependencies that are still using log4j 1.x? ", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150553086/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150555066", "body": "I would prefer the slf4j logger here because that way the user could decide to use a different logger implementation.\r\n(despite the fact that the original code already used log4j)", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150555066/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150581592", "body": "All references in flume however, some dependencies of flume has it as a transitive dependency.\r\nFor example hive-shmis, hadoop-common, kafka_2.10.\r\n\r\nWe should harmonize the versions for these dependencies as well to avoid version mismatches. ", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150581592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150585409", "body": "What happens if there is a log4j.properties (log4j 2 format) and a log4j.xml file on the classpath at the same time?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150585409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150585591", "body": "Flume components are using slf4j. I guess this log4j logger in the HttpSink was overlooked at the review and that is why it is not an slf4j logger. It would be nice if it could be consistent. ", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150585591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150609515", "body": "I agree. I will make a different PR about it. Thank you.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150609515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150615356", "body": "Seeing the output of `mvn dependency:tree` there are a few places where it looks like you might have missed it. Could you please double check it to see if I am right? \r\n\r\nWouldn't it be easier to use the dependencyManagement in parent pom to exclude the old version?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150615356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150615959", "body": "Great, thanks for the information.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150615959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "mcsanady": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/8324af363216a45603830909c19a3b26e6625205", "message": "FLUME-3194 upgrade derby to the latest version\n\nCurrent derby version contains security vulnerabilities.\nThis update will upgrade to a later version.\n\nThis closes #184\n\nReviewers: Ferenc Szabo\n\n(Miklos Csanady via Ferenc Szabo)"}, {"url": "https://api.github.com/repos/apache/flume/commits/d116f9707d5b5da501b1bb9a5fca812db7ce849b", "message": "FLUME-3158: Upgrade surefire version and config\n\nSet surefire version to the latest and configure it\nto rerun failed tests.\nThis way the flaky tests will not break the build as often.\n\nThis closes #182\n\nReviewers: Ferenc Szabo\n\n(Miklos Csanady via Ferenc Szabo)"}, {"url": "https://api.github.com/repos/apache/flume/commits/ed288acba39bfd611c10b338e36224c1415c2c4c", "message": "FLUME-3186. Make asyncHbaseClient config parameters available from Flume config\n\nThis patch adds the ability to set the asyncHbaseClient's config parameters via\nthe Flume configuration.\n\nThis closes #178\n\nReviewers: Ferenc Szabo, Denes Arvay\n\n(Miklos Csanady via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/d434d23dadc411e5d7486447316172c495d70f22", "message": "FLUME-3173. Upgrade joda-time to 2.9.9\n\nThis closes #169\n\nReviewers: Marcell Hegedus\n\n(Miklos Csanady via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/a7d2a289a67f057a5cdb28dabbd3e651613dfa3e", "message": "FLUME-3154. Add HBase client version check to AsyncHBaseSink and HBaseSink\n\nThe current implementation of HBaseSink and AsyncHbaseSink is not\ncompatible with the 2.0 version of HBase, which will be released soon.\nThis change adds a check and makes these sinks fail gracefully if\nincompatible HBase jars can be found in the classpath.\n\nThis closes #160\n\nReviewers: Bessenyei Bal\u00e1zs Don\u00e1t, Ferenc Szabo, Denes Arvay\n\n(Miklos Csanady via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/be25c5e1142a8d8b637df18de62f1a0a8759ea82", "message": "FLUME-3155. Use batch mode in mvn to fix Travis CI error\n\nReduce the output verbosity to fix the \"log length has exceeded the limit of\n4 MB\" Travis CI error.\n\nThis closes #161\n\nReviewers: Ferenc Szabo\n\n(Miklos Csanady via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/1fcef1a3bef16bd0fe67cb7984c67e5fd600b520", "message": "FLUME-3141. Small typo found in RegexHbaseEventSerializer.java\n\nThis closes #149\n\nReviewers: Denes Arvay\n\n(Miklos Csanady via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/63aabc4dae977e1e46a76b0b259afb778f3d2754", "message": "FLUME-3093: Groundwork for version changes in root pom\n\nThis commit extracts the version numbers from the subprojects'\npom.xml to the root pom.xml without introducing any other change\n(i.e. the dependency tree didn't change)\n\nThis closes #132\n\nReviewers: Ferenc Szabo, Attila Simon\n\n(Miklos Csanady via Denes Arvay)"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/180", "title": "FLUME-3190: flume shutdown hook issue when both hbase and hdfs sink a\u2026", "body": "When both hdfs and hbase sink are in use, during shutdown (KILL SIGTERM), the hdfs sink won't be able to rename/close the .tmp hdfs file because the underlying filesystem could be closed earlier when shutting down the other component.\r\n\r\nThis change registers a new ShutdownHook in the hadoop's ShutdownHookManager, which will prevent other hooks to run until Flume stops itself.\r\n\r\nTested on a cluster which could reproduce the error before the change, but eliminated after.", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/302406273", "body": "Tested with mvn dependency:tree : no difference detected.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/302406273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/312009385", "body": "I accidentally deleted the branch", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/312009385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/316609990", "body": "It won't work. Not compatible with hadoop's currently used version.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/316609990/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/135488970", "body": "The second line of this message should be included in the commit where hbase2-sink is added. I will delete it from here.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/135488970/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/135488974", "body": "hbase2-sink is going to be a new sink based on hbase-sink. After adding hbase2-sink the flume will be use asynchbase-sink and hbase-sink with hbase-client1.x and will be able to use hbase2-sink with hbase-client2.x versions.\r\nUnfortunately asynchbase library is not compatible with hbase 2.0", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/135488974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117480522", "body": "This import for Random is not used.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117480522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117480620", "body": "Imported IOException is not used", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117480620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117481076", "body": "The import for Random in the next line can be deleted", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117481076/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117481627", "body": "\"final\" is not needed at private methods", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117481627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117481934", "body": "\"final\" is not needed at private methods", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117481934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117482209", "body": "This method should not be redeclared in different packages.\r\nIf you can extract it outside the original package the private constraint cannot be used. There the \"final\" label will be useful. ", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117482209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117482722", "body": "Extract this from modules.\r\n\"final\" is not necessary on private methods", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117482722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117482999", "body": "Unnecessary semicolon", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117482999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117483918", "body": "zkPort and serverPort can be private", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117483918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117484405", "body": "Can be extracted to another package", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117484405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117484836", "body": "Can be extracted to another package", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117484836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117484923", "body": "Extract it", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117484923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117485024", "body": "extract it", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117485024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117485094", "body": "extract it", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/117485094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/151105790", "body": "`<plugin>\r\n        <groupId>org.apache.maven.plugins</groupId>\r\n        <artifactId>maven-surefire-plugin</artifactId>\r\n        <configuration>\r\n          <argLine>-Dtests.locale=en_us</argLine>\r\n          <redirectTestOutputToFile>true</redirectTestOutputToFile>\r\n        </configuration>\r\n      </plugin>`", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/151105790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "rgoers": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/fbc7a68e7e8cafe3265af649f6c56f665fd10b19", "message": "Merge branch 'trunk' into flume-2050"}, {"url": "https://api.github.com/repos/apache/flume/commits/6813d9cbdde5a677453f5aa429715ce96c4540e0", "message": "Upgrade to Log4j 2.10.0"}, {"url": "https://api.github.com/repos/apache/flume/commits/e4fd6ab31f54259b7dde33b7a30c3a098da3c07f", "message": "Remove more references to log4j 1"}, {"url": "https://api.github.com/repos/apache/flume/commits/6b6605c06ff09224378159aa5466b593c5876e28", "message": "Update configuration to match log4j 1.x"}, {"url": "https://api.github.com/repos/apache/flume/commits/4bb5e88eccf7e9676eb527bd0fa7ecfc9bce50f2", "message": "FLUME-2050 - modify pattern layout so NDC is ignored if it has no data"}, {"url": "https://api.github.com/repos/apache/flume/commits/4a07fbf04004662c095b80474a0cdc9a922cde33", "message": "FLUME-2050 remove spurious files"}, {"url": "https://api.github.com/repos/apache/flume/commits/140ea5d2808b7f6fce496e5e2d175821f302f25b", "message": "FLUME-2050 Upgrade to Log4j 2"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/148882186", "body": "I didn't modify those files so I'm not sure how they got in the commit. Out of curiosity, is there a reason they aren't copied to the target directory if the tests are going to modify them? Maven convention is that only items in the target directory should be modified by the build so I don't have my gitignore set up to skip these files.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/148882186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/148882356", "body": "I will revert those files as soon as I can.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/148882356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150573315", "body": "Log4j 2 doesn't support the log4j 1 properties format. Even if the log4j 2 properties format is used it is still different than the log4j 1 format. I prefer the XML format.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150573315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150573489", "body": "No. All references to log4j 1 have been removed except for this one instance.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150573489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150573724", "body": "Because it was using log4j I converted it to use log4j...", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150573724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150604128", "body": "Log4j uses an @Order annotation on the ConfigurationFactories to determine which factories get precedence. Properties have the highest, followed by yaml and then XML. So if a properties file is present it will be used instead of the xml file.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150604128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150604486", "body": "I went through and excluded all the transitive dependencies to log4j in the Flume pom.xml files that I could find. They have been replaced with references to log4j-1.2-api.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150604486/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150604688", "body": "I have no problem if that change is made but it doesn't necessarily have to happen as part of this PR.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150604688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150626854", "body": "It might. I will take a look again.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/150626854/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "andrasbeni": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/e4312ad1acfd28e23405e6775374948fa35d5e40", "message": "FLUME-199. Remove hardcoded ports from unit tests\n\nMany unit tests use hardcoded port numbers which leads to flakiness and causes\nproblems when running builds in parallel.\nThis patch fixes this issue by searching for available ports instead of the\nhardcoded ones.\n\nThis closes #124\n\nReviewers: Miklos Csanady, Ferenc Szabo\n\n(Andras Beni via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/857df3fe9b211a0e34f17cc6d776a1296951134a", "message": "FLUME-2579 Support durable subscription in JMSSource\n\nJMSSource has created only nondurable subscriptions which could lead to event loss in case\nof topic destination type.\n\nThis change enables durable subscription creation and lets user specify client id.\nAlso removed JMSMessageConsumerFactory which has no additional value.\n\nThis closes #120.\n\nReviewers: Attila Simon, Denes Arvay\n\n(Andras Beni via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/f2996cca55bbb852dc10512ca3369ae7fd56c44f", "message": "FLUME-3072. Add IP address to headers in Flume Log4j appender\n\nLog4jAppender and LoadBalancingLog4jAppender resolve local hosts address at startup and\nadd it to each event's header with the key \"flume.client.log4j.address\".\n\nThis closes #121.\n\n(Andras Beni via Denes Arvay)"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/108", "title": "FLUME-3056 TestApplication hangs indefinitely", "body": "Skip configuration handling in Application while stop() is running", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/281790064", "body": "Hi @simonati ,\r\nPlease see my comment in [jira](https://issues.apache.org/jira/browse/FLUME-3056?focusedCommentId=15879129&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15879129) . I hope it describes the problem.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/281790064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/102563096", "body": "Thanks for your remark. I'm afraid I will have to rework my change a bit, because this single boolean flag will not entirely prevent the issue. ", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/102563096/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "tmgstevens": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/580f781341b42672f234af069b9190ff1cc00dca", "message": "FLUME-2698. Upgrade Jetty Version\n\nUpdate Jetty version to 9.4.6.\nBeside the version upgrade this patch exposes the new Jetty's configuration\nvariables on the HTTPSource to provide users the possibility of fine-tuning\nthe HTTPSource.\n\nThis closes #158\n\nReviewers: Ferenc Szabo, Mike Percy, Miklos Csanady, Denes Arvay\n\n(Tristan Stevens via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/54e2728a8e141ee63704018c4497bbe083c0f75f", "message": "FLUME-3046. Kafka Sink and Source Configuration Improvements\n\nThis patch fixes the infinite loop between Kafka source and Kafka sink\nby introducing the following configuration parameters in those components:\n- topicHeader in Kafka source to specify the name of the header where it\n  stores the topic name where the event comes from.\n- setTopicHeader in Kafka source to control whether the topic name is stored\n  in the given header.\n- topicHeader in Kafka sink to configure the name of the header which\n  is used to specify in which topic to send the event.\n- allowTopicOverride in Kafka sink to control whether the target topic's name\n  can be overridden by the specified header.\n\nThis closes #105\n\nReviewers: Attila Simon\n\n(Tristan Stevens via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/ef54f9fd6372143adc8c6a66f174feba381fec95", "message": "FLUME-2917. Provide netcat UDP source as alternative to TCP\n\nThis patch adds a netcat UDP source.\n\nReviewers: Lior Zeno, Chris Horrocks, Bessenyei Bal\u00e1zs Don\u00e1t\n\n(Tristan Stevens via Bessenyei Bal\u00e1zs Don\u00e1t)"}, {"url": "https://api.github.com/repos/apache/flume/commits/14fb4d84fd0e100253ca947bc96810c242e7a82b", "message": "FLUME-2857. Make Kafka Source/Channel/Sink restore default values when live updating config\n\nThis commit changes Kafka Channel, Sink and Source to fix an error where\nsub-configurations aren't tolerant of the configure() method being called more\nthan once (as happens when a Live Config Update happens).\n\nReviewers: Denes Arvay, Attila Simon, Bessenyei Bal\u00e1zs Don\u00e1t\n\n(Tristan Stevens via Bessenyei Bal\u00e1zs Don\u00e1t)"}, {"url": "https://api.github.com/repos/apache/flume/commits/585c4c92ed65c529871765ab64a5b3637fbdb07d", "message": "FLUME-2999. Kafka channel and sink should enable statically assigned partition per event via header\n\nThis feature is useful for anyone who needs greater control of which\npartitions are being written to - normally in a situation where multiple\nFlume agents are being deployed in order to horizontally scale, or\nalternatively if there is a scenario where there is a skew in data that\nmight lead to one or more partitions hotspotting.\n\nWe also have the ability to specify custom partitions on to the Kafka\nProducer itself using the kafka.* configuration properties. The Kafka\nProducer provides the ability to set the partition ID using a particular\nProducerRecord constructor, this is just a matter of providing the\noption to use this constructor.\n\nReviewers: Attila Simon, Mike Percy\n\n(Tristan Stevens via Mike Percy)"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/47", "title": "Flume 2852", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/98847069", "body": "This gives time for Kafka to process the message - avoids flakiness. There is precedent in other tests for this.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98847069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98847083", "body": "This gives time for Kafka to process the message - avoids flakiness. There is precedent in other tests for this.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98847083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98847161", "body": "Done", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98847161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98847480", "body": "Done", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98847480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98847496", "body": "Done", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98847496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98847688", "body": "Done", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98847688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98848099", "body": "I think that's a different setting", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98848099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/101462487", "body": "Fixed", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/101462487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/101462530", "body": "Fixed.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/101462530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/101462702", "body": "Done", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/101462702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/101462726", "body": "Done", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/101462726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/138032422", "body": "Clarified the ``keystore`` bit in the docs and actually changed the order of precedence.\r\n\r\nRegarding the ``FlumeBeanConfigurator`` I'm afraid I don't agree that we could expose anything that wasn't already exposed. The Configurator only uses public setters, so cannot set any property that wasn't already available to be set - developers obviously need to use it with their eyes open.\r\n\r\nI've added a set of Unit tests to test the functionality of this, including testing that private setters cannot be modified. Hopefully this satisfies your concerns.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/138032422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/139532630", "body": "Would be nicer, but we'd need to infer the type because there isn't a Class.getMethod(String name) method.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/139532630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/139606869", "body": "Note the concern, but we've got plenty of users requesting additional configuration. It feels wrong to copy the params in one-by-one as we'll forever be behind the curve. Do you have any thoughts as to how we can improve the configurability? \r\n\r\nI can only think of shading the three relevant classes in a test and specifically including a JUnit to test that properties don't disappear.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/139606869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/140865146", "body": "Done", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/140865146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/140865174", "body": "Done", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/140865174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/140865534", "body": "Done", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/140865534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/153491096", "body": "Please remove this. This is probably due to an incorrect /etc/hosts file in your test environment", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/153491096/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/153491266", "body": "test scope should remain for this - we only need full Kafka for the tests, right?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/153491266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/153491498", "body": "What is this for?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/153491498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/153491541", "body": "What is this for?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/153491541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/153491830", "body": "What are these imports for? Please review.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/153491830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/153491913", "body": "These changes are redundant", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/153491913/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/153492015", "body": "We shouldn't need these changes", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/153492015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/154577725", "body": "I believe our style guide allows wildcard imports for static fields", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/154577725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/154577958", "body": "I'm not sure why you've changed this.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/154577958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "adenes": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/99f591994468633fc6f8701c5fc53e0214b6da4f", "message": "Fix source assembly\n\nflume-checkstyle breaks the assembly because its parent is not the flume-parent\nRemoving the moduleSets definition from the src assembly solved the issue.\nFiles are added based on fileSets, the resulting tarball's content equals\nto the result of the dev-support/generate-source-release.sh in a clean\nworking directory.\n\nThis closes #175\n\nReviewers: Miklos Csanady, Ferenc Szabo\n\n(Denes Arvay via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/82e9f4d4845934ea77c26be491dc5a856970c7bd", "message": "FLUME-3164. Update version to 1.9.0-SNAPSHOT in pom.xmls and documentation files"}, {"url": "https://api.github.com/repos/apache/flume/commits/7e6c3f1f4122648b2ed9ca5a77f57b7139a369cc", "message": "FLUME-3166. Update LICENSE\n\nAdding geronimo-jms_1.1_spec jar to the Apache licensed list."}, {"url": "https://api.github.com/repos/apache/flume/commits/2bdb8323eb1abb28d443471b19a3a5bdae58f0bb", "message": "FLUME-3178. Update RELEASE-NOTES for 1.8.0"}, {"url": "https://api.github.com/repos/apache/flume/commits/0c4260801c6dfee0003e437b0a7ca5a6cc7391f3", "message": "FLUME-3168. Update CHANGELOG for 1.8.0"}, {"url": "https://api.github.com/repos/apache/flume/commits/b359f32e324fb815c0506f3bad016187a0b7765e", "message": "Set the copyright date dynamically in documentation footer\n\nDisplay \"2009-current year\" instead of the hardcoded \"2009-2012\".\n\nThis closes #171\n\nReviewers: Ferenc Szabo\n\n(Denes Arvay via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/1541f089a5dec9b21549f6a6e961ef835a8b68bb", "message": "FLUME-3175. Turn off doclint for javadoc generation\n\nWith Java 8's new doclint feature the javadoc generation breaks due to the\nstrict checking so adding -Xdoclint:none to the maven-javadoc-plugin's\nconfiguration.\n\nThis closes #168\n\nReviewers: Bessenyei Bal\u00e1zs Don\u00e1t, Ferenc Szabo\n\n(Denes Arvay via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/4a3f3c76f01d8a2c204b94dec7d3c7b3c68e7136", "message": "Fix NetCat UDP Source table in FlumeUserGuide.rst\n\nThis closes #170\n\nReviewers: Ferenc Szabo\n\n(Denes Arvay via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/13771c905316052d3e94aeb3b4a0d49a27c0f852", "message": "FLUME-1520. Timestamp interceptor should support custom headers\n\nThis change adds a configuration parameter to the TimestampInterceptor\nfor the user to be able to define the name of the timestamp header.\n\nReviewers: Tristan Stevens, Attila Simon\n\n(Hari Shreedharan, Tristan Stevens, Attila Simon via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/66327aa20207ca62cd7c7a4cf9e24724b5ee0dfc", "message": "FLUME-3144. Improve Log4jAppender's performance by allowing logging collection of messages\n\nLog4jAppender treats Collection messages as a special case making it possible to log\nCollection of events in one Log4j log call. The appender sends these events to the\nreceiving Flume instance as one batch with the rpcClient.appendBatch() method.\n\nThis closes #151\n\nReviewers: Ferenc Szabo, Miklos Csanady\n\n(Denes Arvay via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/fdc53f338931b96addf06f3f2be59da128656ec0", "message": "FLUME-3092. Extend the FileChannel's monitoring metrics\n\nThis patch adds the following new metrics to the FileChannel's counters:\n- eventPutErrorCount: incremented if an IOException occurs during put operation.\n- eventTakeErrorCount: incremented if an IOException or CorruptEventException occurs\n  during take operation.\n- checkpointWriteErrorCount: incremented if an exception occurs during checkpoint write.\n- unhealthy: this flag represents whether the channel has started successfully\n  (i.e. the replay ran without any problem), so the channel is capable for normal operation\n- closed flag: the numeric representation (1: closed, 0: open) of the negated open flag.\n\nCloses #131.\n\nReviewers: Attila Simon, Mike Percy\n\n(Denes Arvay via Mike Percy)"}, {"url": "https://api.github.com/repos/apache/flume/commits/ed433ae1b12d40117ca3dca2ffd57389984ede72", "message": "FLUME-3085. HDFS Sink can skip flushing some BucketWriters, might lead to data loss\n\nThis commit fixes the issue when in HDFSEventSink.process() a BucketWriter.append()\ncall threw a BucketClosedException then the newly created BucketWriter wasn't\nflushed after the processing loop.\n\nThis closes #129\n\nReviewers: Attila Simon, Mike Percy\n\n(Denes Arvay via Mike Percy)"}, {"url": "https://api.github.com/repos/apache/flume/commits/e5c3e6aa76cf2b0bb0838ff6dcd3853656bff704", "message": "FLUME-3080. Close failure in HDFS Sink might cause data loss\n\nIf the HDFS Sink tries to close a file but it fails (e.g. due to timeout) the last block might\nnot end up in COMPLETE state. In this case block recovery should happen but as the lease is\nstill held by Flume the NameNode will start the recovery process only after the hard limit of\n1 hour expires.\n\nThis change adds an explicit recoverLease() call in case of close failure.\n\nThis closes #127\n\nReviewers: Hari Shreedharan\n\n(Denes Arvay via Bessenyei Bal\u00e1zs Don\u00e1t)"}, {"url": "https://api.github.com/repos/apache/flume/commits/f215374bdf9a08b16fa7ccd3b40098024afe8677", "message": "FLUME-3049. Make HDFS sink rotate more reliably in secure mode\n\nIt was reported that the HDFS sink had a bug where file rotation was not\nreliable in secure mode.\n\nAfter investigating, it turns out that this was caused by a bug in the\nFlumeAuthenticator code: A \"try\" block in UGIExecutor.execute() was\nwrapping exceptions (such as IOException) with a SecurityException.\n\nThat exception wrapping was breaking the contract of BucketWriter\nbecause the caller (HDFSEventSink) did not understand how to react to\nthe SecurityException. This also likely had other negative effects in\nexceptional cases.\n\nThe following changes are included in this patch:\n\n* Remove the exception wrapping in UGIExecutor.execute().\n* Add tests for exception propagation in FlumeAuthenticator\n  implementations.\n* Add testRotateBucketOnIOException() to TestBucketWriter as a\n  regression test for the HDFS sink issue.\n\nCloses #106.\n\nReviewers: Attila Simon, Mike Percy\n\n(Denes Arvay via Mike Percy)"}, {"url": "https://api.github.com/repos/apache/flume/commits/21a64db1b0ebcb812e5c510668b580e84ff37f35", "message": "FLUME-3025. Expose FileChannel.open on JMX\n\nThis patch exposes the FileChannel's open flag on JMX to make it possible to detect when it wasn't able to start up. In those cases the open flag is false.\n\nThis closes #85\n\nReviewers: Attila Simon, Bessenyei Bal\u00e1zs Don\u00e1t\n\n(Denes Arvay via Bessenyei Bal\u00e1zs Don\u00e1t)"}, {"url": "https://api.github.com/repos/apache/flume/commits/f581f6ed0e820da370c4a83a4ff7b05278d09fc3", "message": "FLUME-2812. Fix semaphore leak causing java.lang.Error: Maximum permit count exceeded in MemoryChannel\n\nbytesRemaining.release(putByteCounter) gets called in MemoryTransaction.doRollback while acquire is called only in doCommit. This results in semaphore leak and the number of permits in the semaphore eventually exceeds Integer.MAX_VALUE and Semaphore.release() throws java.lang.Error: Maximum permit count exceeded.\n\nThis closes #83\n\nReviewers: Attila Simon, Bessenyei Bal\u00e1zs Don\u00e1t\n\n(Denes Arvay via Bessenyei Bal\u00e1zs Don\u00e1t)"}, {"url": "https://api.github.com/repos/apache/flume/commits/05feab49bc75522cb76e906dbb88aef8e5c71584", "message": "Add flume-shared module to assembly xmls\n\nFixes the issue that the assembly plugin created the source package without\nthe flume-shared project in it so maven compile failed on that.\n\nThis closes #67\n\nReviewers: Mike Percy\n\n(Denes Arvay via Bessenyei Bal\u00e1zs Don\u00e1t)"}, {"url": "https://api.github.com/repos/apache/flume/commits/27c725802b16915acaa3ea05cdac0236972af1f0", "message": "FLUME-3003. Fix flaky testSourceCounter in TestSyslogUdpSource\n\nThe event processing in SyslogUDPSource is handled on a separate thread by Netty so message delivery, thus the sourceCounter's increment can be delayed resulting in a flaky test.\n\nThis patch fixes that issue by adding more delay when necessary.\n\nReviewers: Lior Zeno, Bessenyei Bal\u00e1zs Don\u00e1t\n\n(Denes Arvay via Bessenyei Bal\u00e1zs Don\u00e1t)"}, {"url": "https://api.github.com/repos/apache/flume/commits/d9c9a7dd9a6889ecf6b9dc88fb8e02ccc1cd5167", "message": "FLUME-2797. Use SourceCounter for SyslogTcpSource\n\nThis patch uses the newer SourceCounter class for the SyslogTcpSource.\nIt also marks the SyslogTcpSource as deprecated and improves how the\nunit tests are written so they don't require DNS.\n\nReviewers: Attila Simon, Lior Zeno, Bal\u00e1zs Don\u00e1t Bessenyei, Mike Percy\n\n(Denes Arvay via Mike Percy)"}, {"url": "https://api.github.com/repos/apache/flume/commits/118d5a4bcf5371fb215e0f7393fadf26073643f8", "message": "FLUME-2844. SpillableMemoryChannel must start ChannelCounter\n\nReviewed by Bessenyei Bal\u00e1zs Don\u00e1t\n\n(Denes Arvay via Mike Percy)"}, {"url": "https://api.github.com/repos/apache/flume/commits/4b74aa286b16916900854ccea95cf906d3fdda5d", "message": "FLUME-2963. FlumeUserGuide: Fix error in Kafka Source properties table\n\n(Denes Arvay via Mike Percy)"}, {"url": "https://api.github.com/repos/apache/flume/commits/ec28b66246f1f165ccaf01abf7fb27adebc9e4bb", "message": "FLUME-2725. HDFS Sink does not use configured timezone for rounding\n\n(Denes Arvay via Mike Percy)"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/115", "title": "Doc fix: Size of files created by HDFS Sink won't necessarily match the configured rollSize value", "body": "Updated the description of the HDFS Sink's `hdfs.rollSize` property to reflect the actual behaviour: it keeps track of the size of the incoming events' body thus the size of the created files won't necessarily match the configured value.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/103", "title": "Add BucketWriterOptions to simplify the BucketWriter's constructor", "body": "The goal if this pull request is to get rid of the 24 parameters of the `BucketWriter`'s constructor by wrapping them to the builder-like `BucketWriterOptions` class.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/82", "title": "[WIP] Proof of concept for a generic password provider", "body": "One of the main security concerns regarding Flume is that currently passwords can only be set in plain text in the config file. I have a proof-of-concept to overcome this limitation with an extensible password provider.\r\n\r\nThe core of the solution is the `PasswordProvider` interface which has a default implementation (`PlainTextPasswordProvider`) which returns the value of the given key, thus taking care of backwards compatibility.\r\nThe other implementation is the `ExternalProcessPasswordProvider` which executes the configured command and returns its output.\r\n\r\nUsage example can be seen in the `AvroSource` (see the 2nd commit of this PR):\r\n\r\n``` diff\r\n- keystorePassword = context.getString(KEYSTORE_PASSWORD_KEY);\r\n+ keystorePassword = PasswordConfigurator.getPassword(context, KEYSTORE_PASSWORD_KEY);\r\n```\r\n\r\n**Example configuration to use the `ExternalProcessPasswordProvider`:**\r\n\r\n```\r\n...\r\na.sources.avro.keystore-password.passwordProviderClass=org.apache.flume.conf.ExternalProcessPasswordProvider\r\na.sources.avro.keystore-password.command=get_avro_keystore_password.sh\r\n...\r\n```\r\n\r\n**Example configuration with no `passwordProviderClass` set:**\r\n\r\n```\r\n...\r\na.sources.avro.keystore-password=SecretPassword\r\n...\r\n```\r\n\r\nAs no `passwordProviderClass` is set in this example the default `PlainTextPasswordProvider` is used which returns the value of `a.sources.avro.keystore-password`.\r\n\r\n---\r\n\r\n_Note: this is still a work in progress, I wanted to sketch up my idea. Any questions/comments/suggestions are more than welcome._\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/252638841", "body": "lgtm too, \ud83d\udc4d\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/252638841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/257826245", "body": "Both tickets are related but none of those fixes the issue releasing non-acquired permits of the `bytesRemaining` semaphore.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/257826245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/258153972", "body": "@bessbd: I've created a test case explicitly for the _Maximum permit count exceeded_ error: `testAvoidMaximumPermitCountExceeded()`. It fails with the not-fixed version of the `MemoryChannel`.\nI'm not sure whether it should be merged too, because this error is just a symptom of the leaking semaphores, which is covered in the `testByteCapacityAfterRollback`.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/258153972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/261888546", "body": "Thank you for the reviews @satiatcloudera.\r\n@bessbd, @jholoman, @mpercy could you please do a final review? Thanks.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/261888546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/265105144", "body": "@bessbd, @jholoman could you please commit this? (Unless there is any objection, of course). Thanks.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/265105144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/275941285", "body": "Hi @mpercy, I've added two test cases to test whether the exception gets properly propagated in the `SimpleAuthenticator` and `KerberosAuthenticator` implementations. Let me know your opinion about these tests. Thanks.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/275941285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/276421789", "body": "Hi @mpercy, thanks for your comment. Yes, one of the side effects of the wrapping is that `BucketWriter` doesn't close the file if an `IOException` is thrown because it doesn't expect the exception to be wrapped in `SecurityException`. But it's just one example, same applies to the `BucketWriter.doFlush()` method, which is transitively called from `HDFSEventSink.process()` which also handles `IOException`s differently than other exceptions. I agree that this test is a bit low-level but I think writing unit test for one of the actual effects of the wrapping wouldn't really test this change.\r\nMy intent with the test was that the implementations (`SimpleAuthenticator` and `KerberosAuthenticator` - which delegates the call to `UGIExecutor`) don't wrap the exception, meaning they rethrow it as-is or a new one with the same type (or subclass). This is the contract we broke with the wrapping in the `UGIExecutor.execute()`. (I might have used other approaches to test, e.g. checking that the very same exception instance is thrown, that's true.)\r\n\r\nI updated the Jira ticket to make the intent behind this change more clear.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/276421789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/276449817", "body": "I might be wrong but I think because the closing of the files depends on a couple of other components as well, I definitely wouldn't call that kind of a test a unit test for this change.\r\nThis test wants to test only the gist of this change: that the `PrivilegedExecutor` implementations propagate the original exceptions. One of the side effects of not doing so is that `BucketWriter` doesn't close the files (that was the original problem which led me to this bug), but there are other places where we call `PrivilegedExecutor.execute()`. None of those are prepared for `SecurityException`, so if we wanted to test this from the callers point of view we would need to create test cases for all the calls. \r\n\r\nI'm not against doing it, just my opinion is that they are simply too far from the change, the resulting test would be way too complex and hard to overview and would test many other things too. I would even call them integration tests, as they test a whole setup: Flume with some source and channel + hdfs sink with kerberos.\r\n\r\nAgain, I might be wrong and it may be possible to write better unit test for this but I couldn't come up with any significant improvement without making it unnecessary complex. If you have any concrete idea please share with me.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/276449817/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/276678113", "body": "Thank you for the detailed explanation @mpercy. I incorporated your code snippet into `TestBucketWriter` with some minor changes (e.g. using Mockito as suggested).\r\nI like the idea of changing it to parameterized test, I'll created a separate PR for that.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/276678113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/282291910", "body": "Thanks @mpercy for the fix. I'm wondering how this didn't cause a problem during the 1.7 release, do you have any idea, do you remember any issue around this?", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/282291910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/282729451", "body": "Thanks @mpercy for the clarification.\r\nWe've tested the change with a different parent pom (thus different repository settings), without the parent definition in place `mvn deploy` failed indeed, with the change it was successful.\r\n\ud83d\udc4d  for the PR.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/282729451/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/284827855", "body": "ok, no problem, I'm going to resubmit this if you have no objections.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/284827855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/285302037", "body": "Hi @lingjinjiang,\r\nThank you for the patch. My only concern with it is that with this we won't be backward compatible, although I'm not totally sure that this is necessary in this case.\r\nOn the other hand it wouldn't need significant effort to introduce a new configuration option for this (which by default would allow listing the hidden files).\r\nWhat do you (and the others) think?", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/285302037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/285311516", "body": "Hi @hangc0276,\r\nThank you for your patch.\r\n\r\nUnless I misunderstood your explanation I think it can't happen. Let me summarize it, and please correct me if I got it wrong:\r\n- `flush()` schedules the `idleFuture`\r\n- in `close()` if `idleFuture != null && !idleFuture.isDone()` -> cancelling `idleFuture` and setting to `null`\r\nBut this is a _not done_ check, so if it's not done yet, it will be set to `null` (regardless if it's currently running, which means that the `close()` was called by it)\r\n\r\nIn fact the `idleFuture` will be set to `null` for sure:\r\n- if in the previously mentioned check `idleFuture.isDone()` is `true` that would mean that it had been run before -> called the `close()` method -> set the `BucketWriter.idleFuture` to `null`.\r\n- if it's not done yet -> the `BucketWriter.idleFuture` will be set to `null`\r\n\r\nLet me know if you see any flaw in my reasoning.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/285311516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/290410528", "body": "Hi @lingjinjiang, thank you for the update on the patch and sorry for the delayed reply.\r\nCould you please also add unit tests for the feature and update the documentation as well? Thank you.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/290410528/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/292536741", "body": "Thank you for the review @harishreedharan. I'd be more than happy to commit but unfortunately I don't have committer rights yet.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/292536741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/292711360", "body": "Hi @bessbd, it'd be great if you could commit this. Thanks in advance.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/292711360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/293178322", "body": "Thank you @bessbd for committing this. Could you please have a look on the other open PRs as well? Thanks.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/293178322/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/293178658", "body": "Unless an other reviewer finds anything to change in this PR there is nothing to do on your side. A committer will commit this soon. Thanks again for the fix.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/293178658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/295755531", "body": "Some comments for the implementation:\r\n- I replaced the `writers` list to a set. Actually to a `LinkedHashSet` in order to be consistent with the `List` implementation regarding to the ordering of the elements. (Although the logic doesn't depend on the ordering.)\r\n- The `writers` variable was moved into the `try-catch` block as it isn't used outside of it.\r\n- I moved the `writers.add(bucketWriter)` call to right after the `append()` call. It means that the first `BucketWriter` won't be added if it has been closed already (so a new `BucketWriter` was created), but it isn't necessary as flushing a closed `BucketWriter` does nothing (and flush happened during the close, anyway).\r\n- I had to change the visibility of the `initializeBucketWriter()` method to package private to be able to mock the `BucketWriter`s in the test.\r\n\r\nTests in `flume-ng-sinks/flume-hdfs-sink` pass, checkstyle as well.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/295755531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/298407949", "body": "Thank you for the review @simonati, I have updated the change based on your comments, please let me know what you think.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/298407949/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/299098788", "body": "@mpercy, @bessbd, could you please review this change and commit if you are ok with it? Thanks in advance.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/299098788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/299824908", "body": "thanks @mpercy for the review, I'll update the PR soon.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/299824908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/299849642", "body": "Hi @mpercy, I have updated the pull request based on your review. Could you please have a look on it again? Thanks.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/299849642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/301753693", "body": "Thanks for the review @mpercy, I've updated your pull request based on your comments.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/301753693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/305500097", "body": "First of all thank you for your patch, @iaiengxia, I think it tackles an issue which might be often painful for our users.\r\nBut I'd suggest to use a more robust solution, e.g. [config by typesafehub](https://github.com/typesafehub/config). It has [getDuration()](https://typesafehub.github.io/config/latest/api/com/typesafe/config/Config.html#getDuration-java.lang.String-) and [getBytes()](https://typesafehub.github.io/config/latest/api/com/typesafe/config/Config.html#getBytes-java.lang.String-) methods.\r\nIf we used the already existing library we wouldn't need to have our own implementation, which, even if we had tests for it, would be very error prone.\r\n\r\nWhat do you think?\r\n\r\nFor the time unit: the above mentioned `getDuration()` interprets the numbers without any unit as milliseconds, so for cases where Flume expects it to be in seconds we should first try to parse it as number (or explicitly check whether there is no unit set) and if it fails then use the `getDuration()` and convert the returned milliseconds to seconds.\r\n\r\nThe user guide can be found here: https://github.com/apache/flume/blob/trunk/flume-ng-doc/sphinx/FlumeUserGuide.rst\r\nTo render the user guide to html to check your changes use the following commands:\r\n```\r\nexport LC_ALL=C.UTF-8 # Required to build the javadocs on some platforms and in some locales\r\nmvn clean install -Psite -DskipTests\r\n```\r\nThe compiled file will be placed in the `target/site` directory.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/305500097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/307069086", "body": "Thank you for the updated patch, it looks good to me, +1\r\nI'm about to commit this.\r\n\r\n(Did you amend the commit and force-pushed? For a more complex pull request it might be better to have multiple commits to be able to see the differences between them. The committers will squash the commits before pushing to the main branch.)", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/307069086/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/308695430", "body": "@kailashk24 , it hasn't been merged to the main branch yet, but I'm going to commit it soon if there are no objections.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/308695430/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/311921018", "body": "Thanks @simonati for the patch, LGTM +1", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/311921018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/311926039", "body": "Thank you for the patch @simonati. I have committed the #142 pull request, could you please push a new commit for this PR to retrigger the Travis CI build? Thanks.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/311926039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/312215521", "body": "Thanks for updating the patch, LGTM \ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/312215521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/77815018", "body": "There are a couple of copy-paste lines here and there, could you please refactor it a little bit?\ne.g. extract the `reader.readEvents-reader.commit` loops to a method.\nThe assertion part (`listFiles`, checking the count, removing from the `expectedLeftFiles`, checking the emptiness of it) might be possible to extract too, to improve the readability of the code. (e.g. `void assertExpectedLeftFiles(String... expectedFileNames)`)\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/77815018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/77816145", "body": "Wrong indentation, it should be in line with the `Assert` above.\nNote: we use 2 spaces for indentation.\nYou can verify whether your code conforms to Flume's code formatting guidelines by running checkstyle on it: `mvn clean verify -DskipTests -Drat.skip`, please run it, there are a couple of other warnings too.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/77816145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/82813269", "body": "I tried it, there is no difference regardless of whether it's excluded or not. Moreover I discovered that removing all the project dirs from the exclude list has no impact on the files in the src package. I suppose `**/target/**` does the job.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/82813269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/86110591", "body": "As it's about the output of a shell script I don't expect to have non-ascii characters, that's why I decided to use iso-8859-1 by default. I might be wrong so I'm open to reconsider this.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/86110591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/88275313", "body": "You are right, thanks, will commit the fix soon.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/88275313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/88283394", "body": "Thank you for your review. I wasn't sure which way to go, because I didn't want to put the responsibility of updating the flag to the FileChannel. (Which shouldn't be a problem, to be honest, as all the other counters work like this).\nThanks for the good example, I agree with you and I'll update my patch according to your comment.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/88283394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/89277058", "body": "`\\\\s*,\\\\s*` should be in the default column, `\\s*,\\s*` will be translated to `s*,s*`. (Double backslash is needed to display a single one)", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/89277058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98481375", "body": "Thanks @simonati for the comment, I pushed a new commit to refactor this.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98481375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/94421642", "body": "It would be better to change this to `private final`: just add it to the constructor and replace the `this.ris = ris` with a `super(ris)` call in the subclasses.\r\nThere is no need for the subclasses to access this and pushing the responsibility of setting it (and also giving the possibility to modify it) to the subclasses would make it very error-prone.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/94421642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/94422003", "body": "The parameter is not needed if `AbstractAvroEventDeserializer.ris` is changed to `private final`.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/94422003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/94422230", "body": "I think `FLUME_AVRO` would be a more expressive name for this.\r\nPlease add this to the user guide as well. Thanks.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/94422230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/94423544", "body": "This (line 48-57) is a copy-paste from `AvroEventDeserializer`. Could you please simplify it by pushing it (from here and from the `AvroEventDeserializer`) up to the `AbstractAvroEventDeserializer`? \r\nIf the logic is moved to the parent class then its `schemaType` field can be changed to `private final`.\r\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/94423544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/94424550", "body": "nit: explicit type argument can be replaced with `<>`", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/94424550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/104615811", "body": "I think it might be good to rename the `$JAVA_OPTS` to `$JAVA_HEAP_MAX` or add this as a new variable (as in Hadoop: https://github.com/apache/hadoop-common/blob/trunk/hadoop-common-project/hadoop-common/src/main/bin/hadoop-functions.sh#L544).\r\nThe reason is that if in the future new default parameters will be added to the `$JAVA_OPTS` passing in `-Xmx` will clear them too, resulting in unexpected behaviour (unless we do this change when we add the new parameters).", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/104615811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/104638665", "body": "Please remove the extra space before the `=`, it results in runtime error (`bin/flume-ng: line 230: JAVA_HEAP_MAX: command not found`). Thank you.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/104638665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/104641788", "body": "We could make it more bulletproof by using `$FLUME_JAVA_OPTS =~ -Xmx[0-9]+` check to make sure that there is a dash before and at least one number after the `Xmx`.\r\nNot sure that this is necessary though, what do you think, @chenjianwei3 ?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/104641788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/104741141", "body": "Could you please rename this to `TestChannelCallback` to conform to the current naming conventions?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/104741141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/104745142", "body": "Could you please add some comment here, maybe with a reference to the Jira issue? Knowing the background helps to understand the test and that the expected behaviour is not to throw an exception but without that knowledge it's quite baffling.\r\nIt would be even better to wrap the `onCompletion` calls to a `try-catch` block and in case of an (unwanted) NPEx fail the test with an `Assert.fail()`.\r\n\r\nPlease also rename the test method name to `testOnCompletion` as most of the test methods in Flume have the `test` prefix. (Or to some more self-explaining like `testOnCompletionLoggingNoException` - could be better but this is the best I could come up with)", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/104745142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/104745991", "body": "minor: this can be private", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/104745991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/104746605", "body": "minor: could you please move these 3 variables up to the top of the class?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/104746605/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/102227788", "body": "In general it's a good practice to wrap this to a `finally` block. In this particular case it mightn't be necessary as this is only called from the shutdown hook, so in fact it doesn't matter whether this is set to `false`. But in that case do we really need this line, wdyt?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/102227788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/103220725", "body": "I'd choose a more descriptive name for this, e.g. `lifecycleLock`. I suppose the `volatile` just remained from the previous change, a `final` would be better here :)", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/103220725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/108654826", "body": "This line is longer than 100 characters which brakes the checkstyle verification, could you please fix it? Thank you.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/108654826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/115210988", "body": "Chaining the `do*` calls in Mockito's Stubber class ensures that the first call will call the real method and the second call throws the exception. \r\nFor more details see the Stubber's javadoc: https://static.javadoc.io/org.mockito/mockito-core/1.9.0/org/mockito/stubbing/Stubber.html", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/115210988/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/115212099", "body": "I'm not sure but I vaguely remember some issue regarding to the ordering (cc. @simonati) so I would keep the `LinkedHashSet`. On the other hand not tests break with `HashSet`.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/115212099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/115212601", "body": "sure, will update the code", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/115212601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/115212652", "body": "ok, will do.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/115212652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116718791", "body": "No, I explained it in more details in the comment for the `unhealthy` flag.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116718791/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116719530", "body": "It won't be flaky, because the reason of the sleep is that the usable space is cached for the configured interval (see: https://github.com/apache/flume/blob/trunk/flume-ng-channels/flume-file-channel/src/main/java/org/apache/flume/channel/file/LogFile.java#L162-L162), so the test has simply wait for it to get invalidated.\r\nThere is no other thread or any other condition the test has to wait for and which might not happen during the sleep.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116719530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116720658", "body": "I increased this to 1500 because 1000 made the test flaky: it might have happened that the checkpoint was created in the same second when the checkpoint writer thread updated it which caused the `lastModified` check to fail on OSes/file systems where the lastmod timestamp has second granularity.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116720658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116721013", "body": "Thank you for your suggestion. I created a custom class as we are on Java 7, but the logic itself is the same.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116721013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/120667882", "body": "Nit: explicit type argument can be replaced by `<>`. Or `Collections.singletonMap()` might be even better.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/120667882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124801578", "body": "I think the`Thread.currentThread().interrupt();` should be called here to set the interrupt flag of the thread.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124801578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124802946", "body": "Could you please explain what this comment means? Or is it related to the changes you made, i.e. removing the configuration part from the `try-catch` block?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124802946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124805824", "body": "Wouldn't it be useful to do an `instanceof` check for `e.getCause()`?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124805824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124805980", "body": "Same as above (line 150)", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124805980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124813479", "body": "I kind of agree, but with the current implementation (throwing `new FlumeException(nce)`) the message itself is an implementation detail as well, because it comes directly from the netty code.\r\nI'd suggest to explicitly define the message when throwing the `FlumeException`. Wdyt?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124813479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124813899", "body": "I'm not sure it is needed here at all, without knowing the previous version of the code it cannot be understood. I'd simply remove it.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124813899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124827315", "body": "yes, thx", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124827315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/125189845", "body": "This can be replaced by method reference, i.e. `pipelineFactory = Channels::pipeline`", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/125189845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/133175544", "body": "nit: could you please fix the indentation here?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/133175544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/135871896", "body": "Thank you @mcsanady for that updated patch. @bessbd what do you think about the chage, are you ok with it? Thanks.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/135871896/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/138300744", "body": "Could you please remove the `logger` parameter of this method?\r\nI think it's better to have a private logger as all the logged exceptions are propagated to the caller so they have the chance to log the errors with their own loggers.\r\nPlus if a caller doesn't have a logger then it can't call this method. Or - which is even worse - can try to call it with `null` logger and then bump into unexpected NPExceptions.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/138300744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/138300993", "body": "These `@Override`s are not needed to be removed as these methods still override the ones from the parent class. Could you please put them back + also add them to the newly added methods? Thanks.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/138300993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/145453497", "body": "Could you please use standard `Map` instead of the `ImmutableMap`?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/145453497/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "bessbd": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/5405fc68c657fe6f2aabe14aa5cd19c781a032ea", "message": "Add README.md and doap_Flume.rdf to the generated release artifacts\n\nThis closes #69\n\n(Cherry-picked from flume-1.7 branch by Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/5e52ac4ad18a7776f4c74499c1314fbfd3513160", "message": "FLUME-2993. Add support for environment variables in configuration files\n\nFlume does not currently support environment variable interpolation in the properties file configuration.\n\nEnabling it helps with:\n* removing security credentials from config files\n* copy-pastes in configuration files when defining multiple agents\n\nThis closes #97\n\nReviewers: Lior Zeno, Jeff Holoman, Shang Wu\n\n(Bessenyei Bal\u00e1zs Don\u00e1t via Bessenyei Bal\u00e1zs Don\u00e1t)"}, {"url": "https://api.github.com/repos/apache/flume/commits/911de0078b14dafda8a5c64dfa7139d19dc198a0", "message": "Add e-mail templates to HowToRelease.md\n\nReviewers: Attila Simon\n\nThis closes #78"}, {"url": "https://api.github.com/repos/apache/flume/commits/5bf1d9b7b06365d19ccc374f0ed58a3c97e96a7c", "message": "Add Developer Section / Developers Quick Hack Sheet from cwiki.apache.org\n\nReviewers: Attila Simon\n\nThis closes #81"}, {"url": "https://api.github.com/repos/apache/flume/commits/68f955d86bc2bcd8d2776af63d8993e81511bb09", "message": "Add Developer Section / How to Commit from cwiki.apache.org\n\nReviewers: Attila Simon\n\nThis closes #80"}, {"url": "https://api.github.com/repos/apache/flume/commits/beddc405b2cb529efdc99a55b1edff5c391caebe", "message": "Add Developer Section / How to Contribute from cwiki.apache.org\n\nReviewers: Attila Simon\n\nThis closes #79"}, {"url": "https://api.github.com/repos/apache/flume/commits/9b65219cca4dd68a06aecdd51e953c9e367c3826", "message": "Add Developer Section / How to Release from cwiki.apache.org\n\nReviewers: Mike Percy\n\nThis closes #77"}, {"url": "https://api.github.com/repos/apache/flume/commits/2399329ee2ca2d9fc4ec0ec8fc5d16fb213795b2", "message": "FLUME-3002. Fix tests in TestBucketWriter\n\nSome tests are flaky in TestBucketWriter.\n\nThis commit fixes the flakiness mentioned before by\nadding a new constructor with an extra Clock parameter.\n\nReviewers: Attila Simon, Denes Arvay"}, {"url": "https://api.github.com/repos/apache/flume/commits/4b44dfc643c9ec94c7cd3071b3536ba6e37b377b", "message": "Set MAVEN_OPTS for Travis-CI\n\nTravis builds occasionally fail with Java heap space error.\n\nThis commit sets higher limits to fix the issue mentioned above.\n\nReviewers: Lior Zeno, Mike Percy\n\nThis closes #75"}, {"url": "https://api.github.com/repos/apache/flume/commits/132063b93310b08d616037972aae2fcb9f919e3a", "message": "Fix .travis.yml\n\nLicense was missing from .travis.yml, so RAT checks failed.\n\nThis commit adds the license header to .travis.yml.\nAfter this change RAT passes again.\n\nThis closes #74"}, {"url": "https://api.github.com/repos/apache/flume/commits/d6a73c8e3ea6833de27b04e8e65a9868cac4a509", "message": "Add .travis.yml\n\nASF infra has enabled Travis for Apache Flume.\n\nThis change adds .travis.yml, because the option \"Build only if .travis.yml is present\" is turned on.\n\nWith this commit, builds will run with -DskipTests."}, {"url": "https://api.github.com/repos/apache/flume/commits/bb0eba0b2000bbd0ec6602f6221279412cc208b4", "message": "FLUME-2924. Update POM versions to 1.8.0-SNAPSHOT"}, {"url": "https://api.github.com/repos/apache/flume/commits/5e400ea8c471ef41c12dd8ad2079ac8a351ec509", "message": "Update CHANGELOG for 1.7"}, {"url": "https://api.github.com/repos/apache/flume/commits/d40abcbfbf31528dbbb1739118ddb1dc60bfbeeb", "message": "Update RELEASE-NOTES for 1.7.0"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/243390501", "body": "LGTM, +1\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/243390501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/247294677", "body": "\ud83d\udc4d \n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/247294677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/253280184", "body": "I'm about to commit this\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/253280184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/254506274", "body": "I'm about to commit this\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/254506274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/255585140", "body": "@liorze : thank you for the comment!\n\nI actually copied it from my local environment. That's what I have been using.\n(Btw, it looks like to me we aren't exactly consistent with these options. See DEVNOTES vs. README.md)\n\nRegarding the tests: yes, that's what I think.\nI see two options:\nWe either fix all the flakiness and make sure it all fits into reasonable time limits.\nOr, we create different test suites, one for smoke testing and another one which contains all the tests we have. (Because some of them aren't exactly \"unit\" tests, afaik.)\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/255585140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/255585511", "body": "@liorze : thank you for offering to fix the DEVNOTES. (Although, I'm not sure how this is related to switching to Java 8)\n\nDo you have any other review comments for this change?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/255585511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/255595599", "body": "I think, if we have MAVEN_OPTS = \"...\" mvn, then we need to have MAVEN_SKIP_RC = 1.\n\nIf we are going to use multiple mvn ... commands, then I think it's easier to set it up in one place. (before_install)\n\nThe caching is to speed up the builds. ( https://docs.travis-ci.com/user/caching/#Arbitrary-directories )\nI can remove it, that's fine.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/255595599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/255622141", "body": "> Thanks for helping me understand. Maybe add a comment about this for people new to Travis?\n\nI did not notice **huge** speedups, so I'm just going to remove it for now.\n\n> Why? I don't understand the reason\n\nAccording to http://stackoverflow.com/a/35755762/5323166 , if there are any defaults (mavenrc, etc.) set in the FS, `MAVEN_OPTS` env var is ignored.\n\nAfaik, all Travis-CI build environments are \"disposable\" (the Docker stuff you have mentioned), so it should be fine to \"pollute\" the environment, but we can go YAGNI and change it later.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/255622141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/255626088", "body": "Thank you, @mpercy \n\nI'm about to commit this\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/255626088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/255972127", "body": "@mpercy : thank you for the review!\n\nI'm about to commit this\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/255972127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/256011810", "body": "In a separate commit, we should consider adding info about pull requests\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/256011810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/256641044", "body": "I'm about to commit this\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/256641044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/256660107", "body": "@satiatcloudera : thank you for the review!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/256660107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/256663969", "body": "Thank you, @satiatcloudera \n\nGood catch!\nI'll add those lines and commit it.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/256663969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/256888536", "body": "I'm about to commit this.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/256888536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/256894755", "body": "I'm about to commit this\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/256894755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/256894866", "body": "@satiatcloudera : thank you for the review!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/256894866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/256912892", "body": "@satiatcloudera : thank you for the review\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/256912892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/256912914", "body": "I'm about to commit this\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/256912914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/257071409", "body": "@adenes : thank you for the patch!\n\nIs this PR related to https://issues.apache.org/jira/browse/FLUME-2461 ?\n\n(Or maybe https://issues.apache.org/jira/browse/FLUME-2739 ?)\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/257071409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/258019970", "body": "@adenes : I see now.\n\nDo you have any easy way to reproduce this error?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/258019970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/258398422", "body": "@lew181818 : what kind of readme are you looking for?\n\nI don't think this has been merged yet.\n\nAlso, the corresponding JIRA ticket is https://issues.apache.org/jira/browse/FLUME-2807 , I believe.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/258398422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/258591283", "body": "Please, note that I'll only merge the first commit. See https://github.com/apache/flume/pull/83#issuecomment-258153972 for further information\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/258591283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/258591885", "body": "@adenes : thank you for the patch!\n@satiatcloudera : thank you for the review!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/258591885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/258875740", "body": "@lew181818 : if you are only looking for a documentation on the configuration, maybe https://github.com/apache/flume/pull/14/files#diff-4d9ec6998a1233dda992589304f831d4R67 should help.\n\nPlease, let me know, if I misunderstood your request.\n\nBtw, if there is demand for this PR to be merged, we can reboot the review process.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/258875740/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/259072799", "body": "@benwheeler : thank you for the PR!\n\nAccording to Travis, there are some missing license headers. Could you please fix them by copy-pasting the first few lines from https://github.com/benwheeler/flume/blob/7b887e19d526b7d72b594723b75c7839e07d1d53/flume-ng-configuration/src/main/java/org/apache/flume/conf/sink/SinkType.java to the files RAT is complaining about?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/259072799/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/261619462", "body": "+1, LGTM\n\nI'll leave some time for others to review this, then commit it if nobody disagrees.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/261619462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/261723671", "body": "I'm about to commit this.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/261723671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/261724376", "body": "@peterableda : thank you for the patch!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/261724376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/261926560", "body": "I'm about to commit this", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/261926560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/262076285", "body": "@adenes : thank you for the patch!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/262076285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/262076340", "body": "@satiatcloudera : thank you for the review!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/262076340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/262508494", "body": "@satiatcloudera : thank you for the patch!\r\n\r\nIt looks all good to me. Please, fix the issue @adenes has mentioned and I'll commit this.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/262508494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/262575551", "body": "+1, LGTM\r\n\r\nI'm about to commit this", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/262575551/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/262575590", "body": "I'm about to commit this", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/262575590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/262588728", "body": "@satiatcloudera : thank you for the patch!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/262588728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/262588777", "body": "@jholoman , @adenes : thank you for the reviews!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/262588777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/262591900", "body": "@peterableda : thank you for the patch!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/262591900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/262591944", "body": "@adenes , @jholoman : thank you for the reviews!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/262591944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/263872811", "body": "I'm about to commit this", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/263872811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/263877564", "body": "@simonati : thank you for the patch!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/263877564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/263877606", "body": "@adenes : thank you for the review!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/263877606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/264959493", "body": "I'm about to commit this", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/264959493/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/265080703", "body": "@jholoman : thank you for the patch!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/265080703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/265080733", "body": "@simonati : thank you for the reviews!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/265080733/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/265210671", "body": "LGTM, +1", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/265210671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/265210911", "body": "I'm about to commit this", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/265210911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/265214849", "body": "@simonati : thank you for the patch!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/265214849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/265214953", "body": "@adenes , @jholoman : thank you for the reviews!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/265214953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/267830119", "body": "@benwheeler : sorry for the super-late response.\r\n\r\nI have tried building and running Flume with HTTP sink. I received errors. With some try-and-error changes, the following patch seemed to solve the problems and I was able to run the HTTP sink: https://gist.github.com/bessbd/e95a999ba92678304c89d5ea338ae310\r\n\r\nAfter your response, I'll merge this PR.\r\n\r\nThank you", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/267830119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/270958681", "body": "I'm about to commit this", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/270958681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/270974749", "body": "@jholoman , @meou : thank you for the reviews!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/270974749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/270979214", "body": "@laxman-ch : thank you for the patch!\r\n\r\nIt looks fine to me. However, to be able to commit it with confidence, some kind of test would be very useful.\r\n\r\nIt doesn't have to be a junit test, but any ways of making sure that this is the right change.\r\n\r\nIe: \r\n> Before applying the patch, if I do this, this happens.\r\n> After applying the patch, if I do this, that happens.\r\n\r\nDo you think you could please provide such additional information?", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/270979214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/274441805", "body": "@benwheeler : thank you for that! I'm currently doing a last check to make sure the PR is ready for merging.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/274441805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/274625774", "body": "Looks good to me, +1\r\n\r\nI'm about to commit this", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/274625774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/274738005", "body": "@benwheeler : thank you for the patch!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/274738005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/274738050", "body": "@meou , @jholoman : thank you for the reviews!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/274738050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/274739252", "body": "Just for future reference: I was using https://gist.github.com/bessbd/1322f6cca8f2f62d6a15fda2b8e02718 as an echo server and https://gist.github.com/bessbd/031f464a45b4c7f768890267a9f40f4c for config", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/274739252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/275882214", "body": "@mpercy : would you like me to merge the PR?", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/275882214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/275912811", "body": "Thanks for the patch, @mpercy !", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/275912811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/278246404", "body": "@laxman-ch : thank you for the PR!\r\n\r\nIs there a way to test this change? (If a unit test is difficult to implement, do you know of any ways to reproduce the issue manually? Ie. \"this is the config I use, this is the input that causes OOM\".)", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/278246404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/280780814", "body": "I'm about to commit this", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/280780814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/280781690", "body": "@simonati : thank you for the patch!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/280781690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/280781735", "body": "@adenes , @jholoman : thank you for the reviews!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/280781735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/283010587", "body": "LGTM, +1\r\n@mpercy : would you like me to commit this for you?", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/283010587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/292586252", "body": "@harishreedharan : I can commit it if you'd like me to.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/292586252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/292742415", "body": "@adenes : I'll do it asap", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/292742415/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/292777641", "body": "@harishreedharan : thank you for the review!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/292777641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/292777655", "body": "@adenes : thank you for the patch!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/292777655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/292786890", "body": "LGTM, +1\r\n\r\nI'm about to commit this", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/292786890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/292787721", "body": "@adenes : thank you for the review!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/292787721/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/292787727", "body": "@marcellhegedus : thank you for the patch!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/292787727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/293690600", "body": "@adenes : sure. I've just been a little swamped lately.\r\nI've noticed that you have reviewed many of those open PRs. Do you mind providing single-line comments/summaries on future reviews? (Ie. impact of patch and/or things you have considered for approval)", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/293690600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/293701790", "body": "@eskrm : sure, it's on my backlog. I'll do my best to prioritise this ticket.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/293701790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/294375348", "body": "@loleek : thank you for the patch!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/294375348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/294375363", "body": "@adenes : thank you for the review!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/294375363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/294789573", "body": "I have done a quick review, ran the tests and it all seems fine.\r\n\r\nI'll leave some time for others to leave review comments if they have any.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/294789573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/297805170", "body": "LGTM, +1\r\n\r\nI'm about to commit this", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/297805170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/297854163", "body": "@eskrm : thank you for the patch!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/297854163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/312518915", "body": "@filippovmn : thank you for the pull request!\r\n\r\nIs there an easy way to reproduce the faulty behavior in order to validate the patch?\r\nDo you think there is an easy way to add a unit test for this?", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/312518915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/313222548", "body": "I've run the tests and it looks fine to me.\r\nI'll leave some time for others to review and leave comments if they have any.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/313222548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/314862088", "body": "LGTM, +1\r\nI'm about to commit this", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/314862088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/314895942", "body": "@filippovmn : thank you for the patch!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/314895942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/flume/comments/19431057", "body": "@satiatcloudera \nI have reformatted your commit message so that it conforms the release guideline: https://cwiki.apache.org/confluence/display/FLUME/How+to+Release and the previous related commits (see 5e400ea8c471ef41c12dd8ad2079ac8a351ec509 and d40abcbfbf31528dbbb1739118ddb1dc60bfbeeb)\n\nAlso, afaik, git commit messages are only modifiable by rewriting history ( https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History ), which should be avoided ( http://stackoverflow.com/questions/1491001/what-are-the-practical-consequences-of-rewriting-git-history ).\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/comments/19431057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/84609007", "body": "When I remove the MAVEN_SKIP_RC setting, the build fails.\n\nI think, that line is required. I'll include a comment about this.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/84609007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/85072951", "body": "This should be FLUME\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/85072951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/85073039", "body": "Jira -> JIRA?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/85073039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/85073174", "body": "Maybe we should update this for pull requests\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/85073174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/85332035", "body": "Why iso-8859-1?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/85332035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/84885228", "body": "Maybe we should add the \"Reviewers:\" line here (and \"This closes #x\") if it's a pull request.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/84885228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90918606", "body": "I totally agree with 1&2. Thanks for those.\r\nI'm pushing a commit soon to address the issues you have mentioned.\r\n\r\nRegarding the \"we\" concern: we have a lot of \"we\"-s (sic :) ) in the doc: https://github.com/apache/flume/blob/trunk/flume-ng-doc/sphinx/FlumeUserGuide.rst#a-simple-example\r\nWe can either stay consistent with it or rephrase those using passive voice, etc.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90918606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90924264", "body": "Just pushed a commit for this.\r\nPlease, let me know your thoughts.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90924264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87305344", "body": "nit: `5000ms            The maximum request processing time` -> `5000            The socket connection timeout in ms`\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87305344/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87305474", "body": "nit: `5000ms            The maximum request processing time` -> `5000            The maximum request processing time in ms`\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87305474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87305956", "body": "Maybe it would be useful to add a line on how it can be tested easily, such as `nc -k -l 0.0.0.0 8080`\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87305956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/103812248", "body": "Isn't `SUFFIX` to be supplied here?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/103812248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/106168258", "body": "This could be rewritten as `fList[0].getName().contains(translatedSuffixString)`. Also, I think it should be `fList[0].getName().endsWith(translatedSuffixString)`", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/106168258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/106168644", "body": "Shouldn't we hard-code the value of `translatedSuffixString`? (I think it is always `\"_20170201.avro\"`)", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/106168644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/106169757", "body": "Is setting the clock necessary?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/106169757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/135486920", "body": "Is it going to be hbase2-sink for both asynchbase and hbase-sink in the next version? Ie. are they going to be merged?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/135486920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/135486939", "body": "Can this message be formulated in a way that it indicates hbase2-sink is not yet implemented?\r\nOr is this PR work-in-progress, thus not yet to be merged?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/135486939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/135914490", "body": "@adenes : I haven't tried the new patch myself, but it looks good to me on a first read.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/135914490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/147578986", "body": "Do we have to remove this?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/147578986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/147579002", "body": "Can you please add javadoc to clarify usage?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/147579002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/147579006", "body": "Can you please add javadoc to clarify usage?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/147579006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/147579104", "body": "Are the `+ \"\"`-s needed? As per https://stackoverflow.com/a/1572724/5323166 , `String.valueOf` is recommended. Please, let me know if the intent was different.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/147579104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/147579562", "body": "Should be \"Redis\" instead of \"redis\".", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/147579562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/147579618", "body": "We could add RedisChannel to `flume/flume-ng-configuration/src/main/java/org/apache/flume/conf/channel/ChannelType.java` so that people don't have to type `org.flume.channels.redis.RedisChannel`", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/147579618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/147579671", "body": "Also, the sentence `Redis provides high concurrency.` seems redundant.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/147579671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/147579847", "body": "I have noticed a few occurrences of `catch (Exception e)`. According to https://stackoverflow.com/a/2416334/5323166 we should catch the most specific type we can. Can we catch more specific exceptions here?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/147579847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "Robin021": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/d3552627869b45956181149f4b7ecf0e344080b7", "message": "FLUME-3156. Update example configuration of Kafka Sink\n\nChange ki to k1 in Kafka Sink configuration example.\n(a1.sinks.ki.kafka.producer.compression.type)\n\nThis closes #165\n\nReviewers: Bessenyei Bal\u00e1zs Don\u00e1t, Denes Arvay\n\n(Robin Wang via Denes Arvay)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "TeddyBear1314": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/2c3fe6dc60750185cd2cd149e3605760b1c6a8ca", "message": "Fix an infinite recursion in SourceConfiguration\n\nMinor change to fix an infinite recursion in\norg.apache.flume.conf.source.SourceConfiguration.getSourceConfigurationType()\n\nThis closes #166\n\nReviewers: Denes Arvay\n\n(TeddyBear1314 via Denes Arvay)"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/140", "title": "small fix correct typo", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pravin-dsilva": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/a51ca18b77625055051e310a021c38a002ffe89c", "message": "FLUME-3057. Update snappy-java version\n\nFlume has a snappy-java dependency with version 1.1.0. Upon building Flume on\nppc64le architecture, errors such as \"[FAILED_TO_LOAD_NATIVE_LIBRARY] no native\nlibrary is found for os.name=Linux and os.arch=ppc64le\" are seen\nNative libraries for ppc64le were added in snappy-java version 1.1.1.\nHence Flume needs to have a higher version of snappy-java.\n\nThis closes #157\n\nReviewers: Ferenc Szabo, Attila Simon\n\n(Pravin D'silva via Denes Arvay)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "marcellhegedus": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/1e69fc7c29f104a2117a62de11cba9b2a2c740e1", "message": "FLUME-2620. File Channel to support empty values in headers\n\nFlume user guide does not specify whether a value in event header could be null or not.\nGiven an external system generating events which header values can be null and a user configures\nFlume with Memory Channel then he will have no trouble.\nLater on when the user changes Memory Channel to File Channel then Flume will fail with NPE.\nIt is because FC is serializing events with protocol buffer and header values are defined as\nrequired in the proto file.\nIn this patch I have changed the value field to optional. However protocol buffer does not have\na notation for null and setting a field to null raises NPE again. Added a null check before\nserialization to prevent this.\nThere is on caveat: When an optional field is not set, at deserialization it will be set to a\ndefault value: in this case it will be empty string.\n\nReviewers: Miklos Csanady\n\n(Marcell Hegedus via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/03c8357dfeff9615d1590a5c980eb4cfe035f3be", "message": "FLUME-2817. docs: Fix multi-agent flow example\n\nThis closes #126\n\nReviewers: Denes Arvay, Bessenyei Bal\u00e1zs Don\u00e1t\n\n(Marcell Hegedus via Bessenyei Bal\u00e1zs Don\u00e1t)"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/290645330", "body": "Thanks @adenes for the review! @bessbd please merge if you agree.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/290645330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/317713185", "body": "Javadoc on line 142 still refers to StaticInterceptor:\r\n```\t\t    * Builder which builds new instance of the StaticInterceptor.```\r\n\r\nAlso please include the apache issue id in the commit message.\r\nThanks!\r\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/317713185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/317966042", "body": "LGTM +1", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/317966042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "filippovmn": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/c570a51b3c53e4899d16dd623e19a0d939518dd2", "message": "Fix HttpSink bad response handling\n\nAfter a bad response, connection.getInputStream() returns null.\nThis patch adds a check for this.\n\nThis closes #139\n\nReviewers: Bessenyei Bal\u00e1zs Don\u00e1t\n\n(filippovmn via Bessenyei Bal\u00e1zs Don\u00e1t)"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/312823422", "body": "@bessbd\r\nOK. I think it's not difficult", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/312823422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/312899911", "body": "@bessbd\r\nI added a test that checks the ability to ignore some types of errors (in this case: 401) using the configuration.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/312899911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "simonati": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/964bcf56a54d38595f0ec74c484aa40d39732d9d", "message": "Facelift AvroSource and test using lambdas\n\n- Make avro ip filter tests more reliable by checking whether the\n  caught exception is really what the test expected\n- Use lambda instead of anonymous classes to make the code shorter\n\nThis closes #143.\n\nReviewers: Denes Arvay\n\n(Attila Simon via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/b5e5ba50f4333272b9e2f2be2b32027e667f32e2", "message": "FLUME-2752. Fix AvroSource startup resource leaks\n\nCleanup after Netty initialisation fails (call this.stop())\n\n- Make sure this.stop() releases the resources and end up the component in\n  a LifecycleAware.STOPPED state\n- Added junit test to cover the invalid host scenario\n- Added junit test to cover the used port scenario\n\nThis closes #141.\n\nReviewers: Denes Arvay\n\n(Attila Simon via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/d01dfd321409e069b8f44f667c4f8b3fb70df607", "message": "Compile with jdk8 on Travis CI\n\nThis commit changes the Travis CI build config to use Java 8.\n\nThis closes #142.\n\nReviewers: Denes Arvay\n\n(Attila Simon via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/4b6b841ab79162151af8d5e162fcc963f8009c69", "message": "Add Impala and Hive recommendation on hdfs.writeFormat setting in the user guide\n\nThis closes #89\n\nReviewers: Denes Arvay, Jeff Holoman\n\n(Attila Simon via Bessenyei Bal\u00e1zs Don\u00e1t)"}, {"url": "https://api.github.com/repos/apache/flume/commits/2ff2dbbd13db5de747c654ef132c98941cdd45dc", "message": "FLUME-3031. Change sequence source to reset its counter for event body on channel exception\n\nThis patch improves rollbacks for the sequence source.\nAlso, it updates tests and user documentation accordingly.\n\nThis closes #90\n\nReviewers: Denes Arvay, Jeff Holoman, Bessenyei Bal\u00e1zs Don\u00e1t\n\n(Attila Simon via Bessenyei Bal\u00e1zs Don\u00e1t)"}, {"url": "https://api.github.com/repos/apache/flume/commits/ed9f6ff6f7bde07f0d3d7ffead904b884e3142ae", "message": "Fix Remove Header Interceptor properties table in FlumeUserGuide.rst\n\nThis closes #91\n\nReviewers: Denes Arvay, Bessenyei Bal\u00e1zs Don\u00e1t\n\n(Attila Simon via Bessenyei Bal\u00e1zs Don\u00e1t)"}, {"url": "https://api.github.com/repos/apache/flume/commits/83632c614e784bb7b1039dd0b0a8aa57cbfce7e6", "message": "Fix KafkaSource and KafkaSink example configurations in the user guide\n\nThis closes #86\n\nReviewers: Jeff Holoman, Denes Arvay\n\n(Attila Simon via Bessenyei Bal\u00e1zs Don\u00e1t)"}, {"url": "https://api.github.com/repos/apache/flume/commits/7c4b2fd3e88f038dea3bdae01eb864547770ad48", "message": "FLUME-2997. Fix flaky test in SpillableMemoryChannel\n\nWhen the mock sinks are slower than sources, testParallelSingleSourceAndSink sometimes fails.\nIn such situations the channel can get full, thus uncaught ChannelFullException breaks the test.\n\nSince testCapacityWithOverflow was designed to cover such a scenario, we\ncan safely fix the test by increasing the channel capacity to make sure it won't get full.\n\nThis commit does the previously mentioned change.\n\nReviewers: Bessenyei Bal\u00e1zs Don\u00e1t\n\n(Attila Simon via Bessenyei Bal\u00e1zs Don\u00e1t)"}, {"url": "https://api.github.com/repos/apache/flume/commits/14ab61ef199278a4f1f683baffc2084b471f6c64", "message": "Update LICENSE\n\nThe LICENSE file was outdated and missing some license texts\n\nThis closes #68\n\nReviewers: Mike Percy, Bessenyei Bal\u00e1zs Don\u00e1t\n\n(Attila Simon via Bessenyei Bal\u00e1zs Don\u00e1t)"}, {"url": "https://api.github.com/repos/apache/flume/commits/2fd0d2572ceb2bc0138c880a3b763647349b64f4", "message": "FLUME-2971. Add secure Kafka Sink/Source/Channel setup to the User Guide\n\nThe User Guide already has details about configuring Kafka channel to work with a kerberized Kafka cluster.\n\nThis patch adds similar description for Kafka Sink and Kafka Source.\n\nReviewers: Tristan Stevens, Mike Percy, Bessenyei Bal\u00e1zs Don\u00e1t\n\n(Attila Simon via Bessenyei Bal\u00e1zs Don\u00e1t)"}, {"url": "https://api.github.com/repos/apache/flume/commits/fca8c5b970cf0bbae61bae08f2084dd4f3bd1143", "message": "FLUME-2998. Add a missing configuration parameter to SequenceSource docs\n\nSequenceSource's totalEvents is configurable, but it is not in the documentation.\n\nThis patch fixes that problem by adding the missing configuration parameter to the docs.\n\nReviewers: Denes Arvay, Bessenyei Bal\u00e1zs Don\u00e1t\n\n(Attila Simon via Bessenyei Bal\u00e1zs Don\u00e1t)"}, {"url": "https://api.github.com/repos/apache/flume/commits/25e4bc6d80cf475862a1686fb2c3c97fcea27278", "message": "FLUME-2954. Make raw data appearing in log messages explicit\n\nFlume has built-in functionality to log data flowing through, mainly for\ndebugging purposes. This functionality appears in several places in the\ncode base. Such functionality can raise security concerns in production\nenvironments where sensitive information might be ingested so it is\ncrucial that enabling such functionality be as explicit as possible.\n\nThis patch adds two system properties, one to enable logging of Flume\nconfiguration properties and one to enable logging of raw data. If they\nare not set, these items are never logged at any log4j logging level.\n\nReviewers: Bal\u00e1zs Don\u00e1t Bessenyei, Denes Arvay, Mike Percy\n\n(Attila Simon via Mike Percy)"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/230412510", "body": "Flume Apache project generally don't accept pull requests. Please check out the https://cwiki.apache.org/confluence/display/FLUME/How+to+Contribute for details. Also is there any flume jira which is resolved by your contribution? I'll try to start reviewing your code in the meanwhile. \n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/230412510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/230412629", "body": "At first glance it seems like your change is conflicting with this one:\nFLUME-2918. Speed up TaildirSource on directories with many files\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/230412629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/230413029", "body": "https://github.com/apache/flume/commit/7d1e683fbd7d261fff9fcf17ad78fd8469c64905\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/230413029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/230541169", "body": "Hi @tinawenqiao,\n\nSorry for the confusion, on the source level I suspected conflicts, not on the functionality level. Would you mind moving this discussion to the dev list of flume (dev@flume.apache.org)? So that community can also help you?\n\nYour three changes sounds like three different improvements. \n1) Sounds like a good improvement for TailDirSource (please check Spooling Directory Source how similar is supported using deserializer: https://flume.apache.org/FlumeUserGuide.html#spooling-directory-source) Your logic can be a part of a new deserializer.\n2) This is something looks very specific to your use case. I believe it could be a little bit more generalised and or driven by configuration parameter(s).\n3) Sounds like a good improvement for TailDirSource but would be good to avoid inventing a new pattern syntax (please check out the latest development on SpoolingDirSource as it is now capable of checking a directory subtree recursively)\n\nCheers,\nAttila\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/230541169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/252641656", "body": "looks good to me +1\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/252641656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/253268513", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/253268513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/253836386", "body": "(I should have said that it compiles: mvn clean install -DskipTests)\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/253836386/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/262326573", "body": "Patch contains code fix, user guide update and testing. The diff for test looks ugly because it is full rework of tests (removed the original ones as they are covered by the new ones also the original tests didn't cover rollback).\r\n\r\nTests pass: (the new tests failed before the code fix)\r\nmvn test -Dtest=org.apache.flume.source.TestSequenceGeneratorSource -pl flume-ng-core", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/262326573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/262330041", "body": "mvn site -DskipTests passes on my local branch not including latest commit.\r\nPlease note that site on trunk is broken. Fix for that is https://github.com/apache/flume/pull/91", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/262330041/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/262988365", "body": "I think the reset configuration for kafkachannel is kind of internal. Without it the channel would be able to guarantee message delivery. With \"latest\" it would skip a whole bunch of events when offset has to be reseted.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/262988365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/262988945", "body": "I would recommend changing the docs instead of the source", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/262988945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/263116045", "body": "Existing implementation achieves at least once message delivery. This doesn't guarantee that messages are delivered more than once (in fact it is a known downside). Exposing this configuration allows users to change the delivery characteristics of kafkachannel - if really needed - but making it default would break existing setups.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/263116045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/263270853", "body": "Thanks @adenes for the review!\r\n@jholoman, @bessbd could you please do a final review? Thanks.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/263270853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/263318841", "body": "Hi @UmarA ,\r\nSince it has been fixed would you mind closing this pull request?", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/263318841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/264035190", "body": "Hi @Huangxianjun,\r\nWould you mind closing this pull request?\r\nMany thanks!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/264035190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/264035549", "body": "Hi @ypen19,\r\nWould you mind closing this pull request? This looks wrong.\r\nMany thanks!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/264035549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/279664398", "body": "Thanks for the heads up! Let me take a look today.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/279664398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/281153641", "body": "Hi @sebastian-alfers,\r\n\r\nThis change is quite big and hard to follow. Please give me more time to finish the review or help any other reviewer by making consumption of your changes easier by leaving some more hints about the ideas behind your changes.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/281153641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/298571899", "body": "Hi @bessbd, @mpercy,\r\n\r\nCould you please retrigger Travis CI? (build failed because of https://repo.maven.apache.org/maven2 had been unreachable)\r\nI doesn't seem to have the necessary entitlement to do it. \r\n\r\nCheers,\r\nAttila", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/298571899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/298866377", "body": "Hi @mpercy,\r\nFor future reference a workaround exists: amending the commit message and force pushing the last commit retriggered Travis CI. (And any meaningful new commit would do the same)\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/298866377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/311915996", "body": "Tests executed (and passed):\r\nmvn test -DfailIfNoTests=false -fae -Dtest=TestAvroSource,TestAvroSink,TestDefaultSourceFactory,TestLoadBalancingLog4jAppender,TestLog4jAppender,TestLog4jAppenderWithAvro\r\n\r\n(all tests where AvroSource was referenced)", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/311915996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/311917057", "body": "TravisCI failed since it incorrectly used jdk1.7.0_80 for the build. Java target version was bumped to 1.8 some time ago. Please merge #142 first for fixing that.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/311917057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/311946722", "body": "TravisCI failed since it incorrectly used jdk1.7.0_80 for the build. #142 fixed that issue. \r\n\r\nCould you please update this pull request to retrigger Travis? (`git commit --amend` then a `git push --force` would be sufficient).  \r\n\r\nYou may add some context to the commit message eg: \r\n```\r\nFix a typo in Sink metrics. \r\n\r\nAPI breaking change since the name of a counter changed.\r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/311946722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/312262337", "body": "Testing done: mvn test -DfailIfNoTests=false -fae -Dtest=TestAvroSource,TestAvroSink,TestDefaultSourceFactory,TestLoadBalancingLog4jAppender,TestLog4jAppender,TestLog4jAppenderWithAvro", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/312262337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/flume/comments/19430684", "body": "@bessbd I'm pretty sure this wasn't my original commit message. Would you mind adding at least the jira reference?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/comments/19430684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/comments/19431495", "body": "Could you please point me to the part of the guideline which says that jira reference should be removed from license file changes? Sorry I couldn't find it. \n\nOn the other hand I guess since rewriting would already affect another commit (couldn't catch this mistake early) we have to live with it.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/comments/19431495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/83441365", "body": "I guess it is still a TODO informing the rest of flume that ExecSource stopped unexpectedly.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83441365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83639178", "body": "I'm vaguely guessing that the original comment aimed to take a note about a behavior - which is also specified in the user guide as well - that during startup of ExecSource if the executed command fails it will do that \"silently\" instead of and this is a TODO.\n\nExample config:\n\n> tier1.sources = source1\n> tier1.channels = channel1\n> tier1.sinks = sink1\n> tier1.channels.channel1.type = file\n> tier1.channels.channel1.capacity = 10000\n> tier1.sinks.sink1.channel = channel1\n> tier1.sources.source1.channels = channel1\n> tier1.sources.source1.type = exec\n> tier1.sources.source1.command = tail -F /tmp/dirwhichdoesntexist/input.log\n> tier1.sinks.sink1.type = logger\n\nSince the user guide also mentions it I'm fine with removing the TODO comment.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83639178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/86597603", "body": "+1 on this change. It solves the problem of leaking semaphore caused by rollBacks. (Essentially rollback should be a \"purely drop all temporal changes\" and commit should be a \"check if temporal changes are applicable then apply\")\n\nAdditionally please note that doCommit is still able to leak as acquiring the queueRemaining and bytesRemaining semaphores are outside of the synchronised block. (Purely moving them inside the block would have a huge perf penalty in situations when channel is nearly full and keepAlive was set) I would recommend a two level check (one without wait within the synchronised block and another upfront check which could wait)  in a separate change.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/86597603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/88272760", "body": "Shouldn't license be the first thing of every source file? If yes than it is interesting that it passed RAT check. \n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/88272760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/88279496", "body": "I guess the idea behind the Counters is that they are not on the critical path, the object which is monitored can offer the information to them instead of pulled by the Counter. I guess this would be dangerous the other way around: eg if the counter fetches the size of the channel that might block the actual workflow (so a monitoring UI would effectively block dataflow). In this change I see the same pattern the counter pulls the isOpen information from the filechannel. In this particular case the isOpen doesn't block but it in the future this assumption might fail.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/88279496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/88483535", "body": "Thanks for the javadoc! It is very useful.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/88483535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/88491734", "body": "+1  for Unicode standard and UTF-8 implementation even for defaults.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/88491734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/89518088", "body": "nit: missing space after //", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/89518088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/89522165", "body": "Naive question: could you please tell why the else path is not needed. Condition to the if statement suggests that we silently ignore some failure scenario.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/89522165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/89522230", "body": "is consumer.committed(tp).metadata() not useful anymore?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/89522230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/89522424", "body": "I think this should be private", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/89522424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/89522472", "body": "I think this should be private", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/89522472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/89526799", "body": "nit: could you please remove Long.valueOf? it is not needed (here and in the doRollback function)", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/89526799/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90056751", "body": "Have you measuered the performance impact of this change? Based on general guidance this should be the other way around except perf measurement shows otherwise. I would like to ask you moving back the log level checking condition if you do relatively heavy computation for calculating the argument list for logging function calls on critical paths (doTake is considered as critical path)\r\n\r\nPlease see: http://logging.apache.org/log4j/1.2/manual.html#performance", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90056751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90057087", "body": "I would like to ask you to revert this line. I consider shutdown metrics to be quite useful.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90057087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90057453", "body": "nit: missing whitespace after //", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90057453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90058988", "body": "Please see my comment on logging performance.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90058988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90059809", "body": "This looks good as partition() and offset() only returns a value and performs no computation.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90059809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90060984", "body": "Please see my comment on logging performance.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90060984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90062153", "body": "What is the intention here?\r\nFrom the javadoc of KafkaConsumer.close() it seems that wakeup won't interrupt the stop. So I would assume something else should have been interrupted by this statement. In that case wouldn't be the desired order: wakeup first then close?\r\n\r\n> org.apache.kafka.clients.consumer.KafkaConsumer\r\n> public void close()\r\n> Close the consumer, waiting indefinitely for any needed cleanup. If auto-commit is enabled, this will commit the current offsets. Note that wakeup() cannot be use to interrupt close. ", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90062153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90062984", "body": "Thanks for the explanation. Fine by me.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90062984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90068258", "body": "Have you considered moving this into the \r\n> if (consumerAndRecords.get().failedEvents.isEmpty() && eventTaken) {\r\n\r\nblock?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90068258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90351215", "body": "Please ignore my comment I misread this change. It is completely fine in the way you done it originally.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90351215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90352920", "body": "You can save the cost of string concatenation with {} if log level doesn't match (which is already a gain). In java before calling any function, its argument list is evaluated. So JVM will execute consumerAndRecords.get().getOffsetMapString() statement before invoking logger.trace(arg1, arg2) to make sure arg2 is computed so that it can be passed into.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90352920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90353764", "body": "You can save the cost of string concatenation with {} if log level doesn't match (which is already a gain). In java before calling any function, its argument list is evaluated. So JVM will execute consumerAndRecords.get().getOffsetMapString() statement before invoking logger.trace(arg1, arg2) to make sure arg2 is computed so that it can be passed into.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90353764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90353882", "body": "Please ignore my prev comment I misread this change. Sorry for that. It is completely fine in the way you done it originally.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90353882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90354979", "body": "Indeed. conter.stop() logs this data at info level already. ", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90354979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98476294", "body": "I think this cleanup should be part of tearDown. (Here and in other tests as well.)", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98476294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90349464", "body": "Hi @umesh9794,\r\nHere is an example for violation: missing spaces around '='. I don't know why Trevis is different to github in aspect of the reported line numbers (after applying your patch seem to me that Trevis was correct). You can check style locally by executing `mvn clean install -DskipTests`\r\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90349464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/106397374", "body": "I'm fine with adding an extra header to the events by default.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/106397374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/106395291", "body": "Thanks for cleaning this up. ", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/106395291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/106396157", "body": "Would you mind using constants instead of magic value? ie DEFAULT_CREATE_DURABLE_SUBSCRIPTION and DEFAULT_DURABLE_SUBSCRIPTION_NAME", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/106396157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/113749234", "body": "Instead of accessing sfwriters you can collect the created BucketWriters from your test extension of HDFSEventSink. This way you could check that whatever bucketwriter was created is actually flushed/closed. sfwriters list might not have reference to every created bucketwriter (lookup path is common so the newly created bw kicks out the closed one on line 406). ", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/113749234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/113750621", "body": "Looks good to also capture the bucketwriter created on line 406. Since the original (line 389 or 393) one threw a closed exception that means that we don't have to flush the original one only the newly created one (close implicitly contains flush as well)", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/113750621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/113750934", "body": "nit: I would have stubbed the channel.take() instead of juggling around with this transaction.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/113750934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/114724620", "body": "Ahh I see. MockChannel is in flume-ng-core test folder thus cannot be used as is. And a simple Mockito.mock(MemoryChannel.class) is not enough as beside take(), also getTransaction has to be implemented. It might need a later refactoring to move this Mock implementations to a shared module but for now I'm fine with this.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/114724620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116774952", "body": "I agree with @adenes on this. This cache is not refreshed by a background thread but essentially by the channel.put() call from the test itself.  ", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116774952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116775151", "body": "Nice one!", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116775151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124811802", "body": "I think that should be considered as internal implementation detail (the situation that we use Netty so it throws a netty related exception should not be considered by any user of the AvroSource). I think the \"API\" here is a FlumeException with the relevant message.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124811802/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124812571", "body": "Sure thing. ", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124812571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124813093", "body": "Yes it is related to that change. Can you please recommend a better wording?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124813093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124813760", "body": "I think the same answer applies. ", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124813760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124815256", "body": "> I'd suggest to explicitly define the message\r\n\r\nGood point. ", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124815256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124823951", "body": "Does this sound good?\r\n\r\nthrow new FlumeException(\"Failed to set up server socket\", nce);", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124823951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124840130", "body": "With one exception I removed this comment. In that occurrence the helper function is called by different tests and some of the tests expect a FlumeException to be thrown caused by invalid configuration. It could have saved me some time during implementation that `configure()` can also raise a FlumeException so I would like to make life of future devs a bit easier. Also I rephrased a little the comment.\r\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/124840130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98200985", "body": "Please rename it to DEFAULT_<< property name >> to follow convention.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98200985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98202488", "body": "Would you mind rephrasing it to \r\n```java\r\nif (allowTopicHeader) {\r\n    eventTopic = headers.get(topicHeader);  \r\n    if (eventTopic == null) {\r\n       log.debug(\"usage of topicheader was configured but header was not available {}\", info about the event); \r\n       eventTopic = topic;\r\n    }\r\n} else {\r\n    eventTopic = topic;\r\n}\r\n```", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98202488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98202630", "body": "I think allowTopicOverride would be more self describing name.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98202630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98202841", "body": "please consider my naming comment from above (ALLOW_TOPIC_OVERRIDE)", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98202841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98204294", "body": "Also I think TOPIC_OVERRIDE_HEADER and DEFAULT_TOPIC_OVERRIDE_HEADER naming might be better. Would you consider changing it?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98204294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98205495", "body": "Please use naming convention for default values by prefixing DEFAULT in the name instead of postfixing: DEFAULT_TOPIC_HEADER", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98205495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98205759", "body": "DEFAULT_SET_TOPIC_HEADER like above", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98205759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98205866", "body": "You may simply use TOPIC_HEADER instead.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98205866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98208786", "body": "What is the purpose of having Thread.sleep  between startup of source and produce? Is it really needed?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98208786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98208883", "body": "What is the purpose of having Thread.sleep  between produce and process? Is it really needed?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98208883/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98212105", "body": "Would you mind splitting it up to 3 tests which are indeed test slightly different things?\r\n\r\n1. header override was not configured --> expect that there is a header called `topic` and its value is `test0`\r\n2. header override was not configured only the header name --> expect that newly created header is `customTopicHeader`<->`test0`\r\n3. header override is disabled --> expect `topic`<->`test0` and `customTopicHeader`<->`null`", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/98212105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/99364951", "body": "nit: this line of code is not needed", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/99364951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/99365200", "body": "Thanks for the updated log message. I hope this will help troubleshooters.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/99365200/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/99366696", "body": "As discussed offline an async call is involved so keeping this.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/99366696/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/99366704", "body": "As discussed offline an async call is involved so keeping this.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/99366704/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/99369516", "body": "Isn't it similar concept to the one in Sink? If not then would you mind updating the name of the DEFAULT constant to be consistent? \r\n(I see that KEY_HEADER looks confusing then but I guess that can be fixed in a followup commit)", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/99369516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "roshannaik": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/b54f085ffa89b74c9e91e478e864424bfbe0a7a2", "message": "FLUME-2175. Document Protocol Buffer upgrade steps\n\nUpdate Developer Guide with notes on how to upgrade Protocol Buffer\nversion.\n\nReviewers: Ashish Paliwal, Attila Simon\n\n(Roshan Naik via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/c1fae53bf2c254f5cf1282f32116a7aedc5340ed", "message": "FLUME-2901. Document Kerberos setup for Kafka channel\n\nAdd details about configuring Kafka channel to work with a Kerberized\nKafka cluster.\n\n(Roshan Naik via Mike Percy)"}, {"url": "https://api.github.com/repos/apache/flume/commits/10639e80cc83c14213dcc78692ab8f78945ddf8e", "message": "FLUME-2761. Move Hive sink out of preview mode\n\nReviewed by Bessenyei Bal\u00e1zs Don\u00e1t\n\n(Roshan Naik via Mike Percy)"}, {"url": "https://api.github.com/repos/apache/flume/commits/e6df16d782ae8917b443be81d6a5ad755e02f5c3", "message": "FLUME-2889: Fixes to DateTime computations\n\n(Tristan Stevens via Roshan Naik)"}, {"url": "https://api.github.com/repos/apache/flume/commits/ffb52b9e656df51e5e6881cfc8ed851a89cdc2f1", "message": "FLUME-2889. Fixes to DateTime computations\n\n(Roshan Naik via Hari Shreedharan)"}, {"url": "https://api.github.com/repos/apache/flume/commits/de6ecf48568761de829c8d8caf9bc41f9bf9e64c", "message": "FLUME-2881. Windows Launch Script fails in plugins dir code\n\n(Jonathan Smith via Roshan Naik)"}, {"url": "https://api.github.com/repos/apache/flume/commits/a8dd873588a282bb832c923010a485ab39ccf37b", "message": "FLUME-2806. flume-ng.ps1 Error running script to start an agent on Windows\n\n(Liam Mousseau via Roshan Naik)"}, {"url": "https://api.github.com/repos/apache/flume/commits/0421fa2ab1eb9575b34bbb2f44e8c6d83842eaeb", "message": "FLUME-2801. Performance improvement on TailDir source\n\n(Jun Seok Hong via Satoshi Iijima and Roshan Naik)"}, {"url": "https://api.github.com/repos/apache/flume/commits/f38a52102cf7a09e9727aa7a1321a86dcbe84c0d", "message": "FLUME-2835. Hive Sink tests need to create table with transactional property set\n(Sriharsha Chintalapani via Roshan Naik)"}, {"url": "https://api.github.com/repos/apache/flume/commits/c8eb221c6bbeb24a6e5073eb89e69e7cd2a10366", "message": "FLUME-2798. Malformed Syslog messages can lead to OutOfMemoryException\n\n(Phil D'Amore via Roshan Naik)"}, {"url": "https://api.github.com/repos/apache/flume/commits/bd80c5e67deda4ec146f19fc92ff0c3bff61a982", "message": "FLUME-2804. Hive sink - abort remaining transactions on shutdown\n\n (Sriharsha Chintalapani via Roshan Naik)"}, {"url": "https://api.github.com/repos/apache/flume/commits/318da208844d02ed7554724ae526cefe94dd894c", "message": "FLUME-2754 - Hive Sink skipping first transaction in each Batch of Hive Transactions\n\n(Deepesh Khandelwal via Roshan Naik)"}, {"url": "https://api.github.com/repos/apache/flume/commits/757a560db73c2e6fbec56deea4c753a45ccf9032", "message": "FLUME-2498.  Implement Taildir Source\n\n(Satoshi Iijima via Roshan Naik)"}, {"url": "https://api.github.com/repos/apache/flume/commits/f3b6ceb6a0d363c16e7b1f535d66b803b184b075", "message": "FLUME-2552 - add Roshan Naik in developers section in pom.xml"}, {"url": "https://api.github.com/repos/apache/flume/commits/4e06f6fe7af751672925967ce45feb18a92c4888", "message": "FLUME-2657: Upgrade to Hive 1.0\n\n(Hari Shreedharan via Roshan Naik)"}, {"url": "https://api.github.com/repos/apache/flume/commits/c9289c083c8dc66a103119f2ade1879e03acaed6", "message": "FLUME-2624 : Improve Hive Sink performance\n\n(Deepesh Khandelwal via Roshan Naik)"}, {"url": "https://api.github.com/repos/apache/flume/commits/1003d1f410bd5f9e94ebafe6df641d8ab3e90d3e", "message": "FLUME-2558. Update javadoc for StressSource\n\n(Ashish Paliwal via Roshan Naik)"}, {"url": "https://api.github.com/repos/apache/flume/commits/ac999bebeaa59659960fe9e998a0c20b1d476564", "message": "FLUME-2246. Make event data size configurable for logger sinker\n\n(Ashish Paliwal via Roshan Naik)"}, {"url": "https://api.github.com/repos/apache/flume/commits/22cd3909bbc0d9dbdb42b845f36be133326eb67c", "message": "FLUME-2480. Typo in file channel exception: \"Usable space exhaused\"\n\n(Santiago M. Mola via Roshan Naik)"}, {"url": "https://api.github.com/repos/apache/flume/commits/55a4666434d892f838208b315cd9ba06ea07659b", "message": "FLUME-2487. SyslogParser has rounding errors in timestamp parsing\n\n(Santiago M. Mola via Roshan Naik)"}, {"url": "https://api.github.com/repos/apache/flume/commits/a73b6785332a55eeb82f4a915e09cee305714959", "message": "FLUME-1521. Document the StressSource\n\n(Ashish Paliwal via Roshan Naik)"}, {"url": "https://api.github.com/repos/apache/flume/commits/35de8ff18d096bd41caf3dabbcadc70b7d90ac40", "message": "FLUME-1594. Document JMX options\n\n(Ashish Paliwal via Roshan Naik)"}, {"url": "https://api.github.com/repos/apache/flume/commits/f20e0a9410481e874e5d4916ff3b32d7f893e780", "message": "FLUME-2509.  Add description for properties in Failover Sink Processor\n\n(Ashish Paliwal via Roshan Naik)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "c-sahuja": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/5e9cfef2b26f1960601d08d571e4c85c269503af", "message": "FLUME-2905. Fix NetcatSource file descriptor leak if startup fails\n\nThis patch fixes the issue in NetcatSource which occurs if there is a problem\nwhile binding the channel's socket to a local address and leads to a file descriptor\n(socket) leak.\n\nReviewers: Attila Simon, Denes Arvay\n\n(Siddharth Ahuja via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/591b138321280cea1e7d61efcaf625a67202cb3d", "message": "FLUME-2966. Fix NPE in JMS Source\n\nJMS Source does not check for null text in a TextMessage. This can lead to NullPointerException.\nThis commit fixes that problem by checking for nullity of textMessage.getText().\n\nReviewers: Denes Arvay, Attila Simon, Mike Percy, Bessenyei Bal\u00e1zs Don\u00e1t\n\n(Siddharth Ahuja via Bessenyei Bal\u00e1zs Don\u00e1t)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "liorze": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/33d19046f0db66c3093f68716e4f6100301d3b49", "message": "FLUME-2945. Bump java target version to 1.8\n\n- Removed the unsupported PermSize and MaxPermSize settings from .travis.yml\n- Updated DEVNOTES, README and Flume User Guide\n- Removed the maven-compiler-plugin from the taildir-source subproject\n- Changed the sourceJavaVersion and targetJavaVersion to 1.8 in the root pom.xml\n\n(Lior Zeno via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/988ede948ffaf6526c226323a6808922f38b625c", "message": "FLUME-2959. Fix issues with flume-checkstyle module\n\n* The lack of a parent POM caused warnings related to UTF-8 encoding\n* The XML files should have an ASL 2.0 license header\n\n(Lior Zeno via Mike Percy)"}, {"url": "https://api.github.com/repos/apache/flume/commits/ba64b12670f7b2c9ce079f8898f4601689a51def", "message": "FLUME-2950. ReliableSpoolingFileEventReader.rollCurrentFile is broken\n\nFLUME-2939 introduced a Java 7 API (nio.file) to\nReliableSpoolingFileEventReader. However, the committed patch breaks\nrollCurrentFile() on Windows machines. File rename might be not atomic,\nin such cases, and under the assumption that the rolled file and the\ncurrent file store the same data, Flume only logs a warning and does not\nassume that the user broke the contract that the spooling directory\nsource demands.\n\nIn order to determine whether the files store the same data, we used the\ncom.google.common.io.Files.equal() method. However, FLUME-2939 uses\njava.nio.file.Files.isSameFile() which has different semantics.\nConsequently, this relaxation does not hold anymore. In addition,\nTestSpoolingFileLineReader.testDestinationExistsAndSameFileWindows\nfails. This patch brings back the old check using Files.equal().\n\n(Lior Zeno via Mike Percy)"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/48", "title": "FLUME-2726: Remove * imports from Kafka Channel", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/255584090", "body": "We actually recommend the following setup: `export MAVEN_OPTS=\"-Xms512m -Xmx1024m -XX:PermSize=256m -XX:MaxPermSize=512m\"`. Have you experienced any issues with this configuration?\n\nDo you think we should enable the tests after we have fixed our flaky tests?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/255584090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/255585384", "body": "I'll update the DEVNOTES as part of FLUME-2945, thanks.\n\nRe/ tests, I think we have a few more tests to fix, it looks doable. Let's give it a try and go with plan b if it takes to much time to fix.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/255585384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/255585567", "body": "It's related because the `MaxPermSize` option is deprecated in Java 8.\n\nNo, LGTM.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/255585567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/285861199", "body": "Hi @geoffroyvergne, thank you for your contribution.\r\n\r\nCan you please clean up your code a bit? i.e. minimize the changeset (remove comments and whitespace changes). ", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/285861199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/285861399", "body": ":ship:", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/285861399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/285891827", "body": "Thanks. Can you please also enable the checkstyle plugin (uncomment it in the pom file)?\r\n\r\nWe will also have to merge this one first https://reviews.apache.org/r/53056/, as elasticsearch 5.x requires Java 8.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/285891827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "stakafum": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/83e25691dc5f32d020b122d679b6f124162e4aef", "message": "FLUME-3100. Support arbitrary header substitution for topic of Kafka Sink\n\nThis patch adds the ability of header substitution n Kafka Sink's\nkafka.topic configuration variable.\n\nThis closes #137.\n\nReviewers: Denes Arvay\n\n(Takafumi Saito via Denes Arvay)"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/136", "title": "[FLUME-3098] Add Amazon Kinesis Stream Sink", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/133", "title": "[FLUME-3096] add Google Cloud Pub/Sub Source", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/306992807", "body": "@adenes  Thanks for the review. I have updated my pull request.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/306992807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "mpercy": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/73d87444013a656f763feb38ce20c43670dc6230", "message": "flume-checkstyle module should use ASF root pom as parent\n\nThe flume-checkstyle module doesn't currently declare a parent pom. This\nwill be a problem when we try to deploy our artifacts because we are\nmissing a distributionManagement section in the flume-checkstyle module.\nThe deploy will fail with an error message that looks something like:\n\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-deploy-plugin:2.7:deploy (default-deploy)\non project flume-checkstyle: Deployment failed: repository element was not specified in the POM inside\ndistributionManagement element or in -DaltDeploymentRepository=id::layout::url parameter\n\nThis patch should solve the problem.\n\nReviewers: Attila Simon, Denes Arvay, Bessenyei Bal\u00e1zs Don\u00e1t\n\nCloses #109."}, {"url": "https://api.github.com/repos/apache/flume/commits/18453d3ef182e92785d9fb74ff4fbdc244a4bc88", "message": "Change how we build and sign release artifacts\n\nThese simple scripts automate creation and signing of the release\nartifacts. They help guarantee that the source artifacts published match\nthe Git tag.\n\nUpdated the How To Release documentation to explain how to use the\nscripts.\n\nThis closes #98\n\nReviewers: Denes Arvay, Bessenyei Bal\u00e1zs Don\u00e1t"}, {"url": "https://api.github.com/repos/apache/flume/commits/94f1fab85ab772ecb5af6cba0d4b15ffdb2f6315", "message": "Fix startup order for ExecSource\n\nThis patch starts the SourceCounter in the ExecSource before starting\nthe runner thread that processes input from the forked command.\n\nStarting the SourceCounter before calling its methods is required to get\ncorrect metric counts because the metrics are all reset to 0 when\nSourceCounter.start() is called.\n\nA follow-up patch will attempt to enforce that a SourceCounter or any\nother MonitoredCounterGroup is running at the time that calls to modify\nthe metrics occur.\n\nAfter applying this patch, TestExecSource.testMonitoredCounterGroup no\nlonger fails.\n\nThis closes #72\n\nReviewers: Attila Simon, Bessenyei Bal\u00e1zs Don\u00e1t\n\n(Mike Percy via Bessenyei Bal\u00e1zs Don\u00e1t)"}, {"url": "https://api.github.com/repos/apache/flume/commits/87d4c2c13862144eb578b211bcf800b2206834ff", "message": "Remove test dependencies from binary release artifact\n\nThis patch removes some test-specific dependencies from the binary\nrelease artifact. These were introduced by the new\nflume-shared-kafka-test module that is intended for sharing test code.\nPlease see the new comment in bin.xml for more information.\n\nReviewers: Bessenyei Bal\u00e1zs Don\u00e1t\n\nCloses #70"}, {"url": "https://api.github.com/repos/apache/flume/commits/53fb37443eec3261b32f39cb363183988498e47f", "message": "Upgrade to ASF pom version 18\n\nThis gets rid of some annoying warning messages from RAT, such as:\n\nWarning:  org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser: Property 'http://www.oracle.com/xml/jaxp/properties/entityExpansionLimit' is not recognized.\nCompiler warnings:\n  WARNING:  'org.apache.xerces.jaxp.SAXParserImpl: Property 'http://javax.xml.XMLConstants/property/accessExternalDTD' is not recognized.'\nWarning:  org.apache.xerces.parsers.SAXParser: Feature 'http://javax.xml.XMLConstants/feature/secure-processing' is not recognized.\nWarning:  org.apache.xerces.parsers.SAXParser: Property 'http://javax.xml.XMLConstants/property/accessExternalDTD' is not recognized.\nWarning:  org.apache.xerces.parsers.SAXParser: Property 'http://www.oracle.com/xml/jaxp/properties/entityExpansionLimit' is not recognized.\n\nReviewers: Bessenyei Bal\u00e1zs Don\u00e1t, Hari Shreedharan\n\nThis closes #63."}, {"url": "https://api.github.com/repos/apache/flume/commits/9965dae7bd384abd2e25fd1756dbe516e8acdb9b", "message": "Fix sphinx layout errors\n\nMinor syntax error fixes"}, {"url": "https://api.github.com/repos/apache/flume/commits/0259d302730f94b99c1a84f8311d1abc0f635eb3", "message": "Fix broken link in README"}, {"url": "https://api.github.com/repos/apache/flume/commits/c7de4ba5ca70c42099a2f9bf4ad2de3fdcbb7d30", "message": "FLUME-2952. SyslogAgent: Avoid NPE on stop()\n\nMinor test bug fix\n\nReviewed by Hari."}, {"url": "https://api.github.com/repos/apache/flume/commits/209c1e2548080525919fe78a1a61cc8fc7ab306f", "message": "FLUME-2936. KafkaSource tests: Use loopback instead of host address\n\nTestKafkaSource is flaky because it tries to run Kafka on the host\naddress instead of the loopback address. This patch fixes that problem.\n\nIt also introduces a bug fix related to passing properties to\nKafkaSourceEmbeddedKafka.\n\n(Lior Zeno via Mike Percy)"}, {"url": "https://api.github.com/repos/apache/flume/commits/188c3104ab6030c40d652595a2274527a4ad4105", "message": "FLUME-2949. checkstyle: Make suppressions compatible with Windows\n\nFile paths in checkstyle-suppressions.xml are written with non-portable\nseparators. Switching to \"[/\\\\]\" as a path separator should fix this\nissue.\n\n(Lior Zeno via Mike Percy)"}, {"url": "https://api.github.com/repos/apache/flume/commits/7013708baddc8ed7d861797d1fd8280a94b6025c", "message": "FLUME-2939. Update recursive SpoolDir source to use Java 7 APIs\n\n(Bessenyei Bal\u00e1zs Don\u00e1t via Mike Percy)"}, {"url": "https://api.github.com/repos/apache/flume/commits/cfbf1156858af9ae26975fefc94594d91c8cd3f4", "message": "FLUME-2941. Integrate checkstyle for test classes\n\nAlso make test code conform to style guidelines.\n\nAdditionally, this patch makes style violations fatal to the build.\n\nThis patch is whitespace-only from a code perspective. After stripping\nline numbers, the generated test bytecode before and after these changes\nis identical.\n\nCode review: https://reviews.apache.org/r/49830/\n\nReviewed by Hari."}, {"url": "https://api.github.com/repos/apache/flume/commits/c8c0f9b8404ef60222f49aa91f74f5a846b57ca7", "message": "Minor README tweaks"}, {"url": "https://api.github.com/repos/apache/flume/commits/2252fb1938a4fd578f88c64eb444c74777c46212", "message": "FLUME-2937. Integrate checkstyle for non-test classes\n\nBased on the Google checkstyle file with modifications.\n\nThe changes here do not change the generated Java bytecode (after\nstripping line numbers). They are syntax / whitespace ONLY.\n\nCode review: https://reviews.apache.org/r/49403/\n\nReviewed by Hari."}, {"url": "https://api.github.com/repos/apache/flume/commits/2fe393898f420d100117ca277cce198858e2c24f", "message": "FLUME-1899. Make SpoolDir work with subdirectories\n\n(Phil Scala and Bessenyei Bal\u00e1zs Don\u00e1t via Mike Percy)"}, {"url": "https://api.github.com/repos/apache/flume/commits/af4ea3fef1068c96b3c96e7915ddb12a8d9f94d9", "message": "Move README.textile to README.md and add license header\n\nThe version of textile implemented by GitHub doesn't appear to support a\ncomment syntax."}, {"url": "https://api.github.com/repos/apache/flume/commits/2f731f0aaeb490ab72400d8c83074daac840ac44", "message": "FLUME-2935. Bump java target version to 1.7\n\n* Renamed README to README.textile in order to allow GitHub to properly\n  render the headings. Also changed the min. requirement to JDK 1.7\n* pom.xml:\n  * Changed the sourceJavaVersion and targetJavaVersion to 1.7\n  * Removed the test dependency hadoop-minicluster since it is already\n    required as a \"normal\" dependency. This was causing Maven warnings\n* flume-ng-elasticsearch-sink/pom.xml: pom file had two identical\n  dependencies, causing Maven warnings\n* FlumeUserGuide.rst: changed the system requirements to Java 1.7\n* KafkaLocal.java: The tests threw a MethodNotFoundException, since\n  there isn't a constructor for KafkaConfig with a java.util.properties\n  parameter. Instead, I used the static method KafkaConfig.fromProps.\n\n(Lior Zeno via Mike Percy)"}, {"url": "https://api.github.com/repos/apache/flume/commits/4a7db4a363a7ed7391e11685bb6a0f47cbfa2328", "message": "FLUME-2934. Document new cachePatternMatching option for TaildirSource\n\n(Attila Simon via Mike Percy)"}, {"url": "https://api.github.com/repos/apache/flume/commits/7d1e683fbd7d261fff9fcf17ad78fd8469c64905", "message": "FLUME-2918. Speed up TaildirSource on directories with many files\n\nThis patch greatly improves the performance of TaildirSource on\ndirectories that contain a large number of files.\n\n(Attila Simon via Mike Percy)"}, {"url": "https://api.github.com/repos/apache/flume/commits/1b9e589152f0093b6ef7cea580c00ff52944d2cf", "message": "FLUME-2923. Bump asynchbase version to 1.7.0\n\nNewer versions of HBase and the asynchbase library support error types\nsuch as RegionMovedException. Also, asynchbase has incorporated several\nfixes since version 1.5.0.\n\nSee https://github.com/OpenTSDB/asynchbase/blob/v1.7.0/NEWS\n\n(Bessenyei Bal\u00e1zs Don\u00e1t via Mike Percy)"}, {"url": "https://api.github.com/repos/apache/flume/commits/ee4999bc23f42bc300ed87b0d46fd96418d6a185", "message": "FLUME-2910. AsyncHBaseSink: Failure callbacks should log the exception that caused them\n\n(Abraham Fine via Mike Percy)"}, {"url": "https://api.github.com/repos/apache/flume/commits/f4f15bee1e4ba109c6a21f639668911a13241014", "message": "FLUME-2913. Don't strip SLF4J from imported classpaths\n\nIt is no longer necessary to strip other versions of SLF4J from\nclasspaths imported from hadoop or hbase. With recent versions of SLF4J,\nwhen multiple connectors are found, one of them \"wins\" and the logging\ndoes not break. A warning is printed once, however. This is acceptable\nbecause having too long of a classpath can cause major problems on\nsystems with a low ARG_MAX.\n\n(Bessenyei Bal\u00e1zs Don\u00e1t via Mike Percy)"}, {"url": "https://api.github.com/repos/apache/flume/commits/37ddd1b27258f2c3095094b79cbd8852478de33d", "message": "FLUME-2909. Upgrade RAT to 0.11\n\nThis allows command-line override of RAT using the command mvn -Drat.skip=true\nwhich is useful in a development environment.\n\n(Bessenyei Bal\u00e1zs Don\u00e1t via Mike Percy)"}, {"url": "https://api.github.com/repos/apache/flume/commits/cec64a54abb8410a5e98cd2f815a5a839b49ce74", "message": "FLUME-2557. Make DatasetSink work with Kerberos\n\n(Joey Echeverria via Mike Percy)"}, {"url": "https://api.github.com/repos/apache/flume/commits/534fe268d1d0ad197f6e4a867ab0ae0155d1a927", "message": "FLUME-2497. Support fractional seconds in Syslog timestamps\n\nThis fixes a bug in the SyslogTcpSource and SyslogUdpSource where\nfractional timestamps fail to parse.\n\n(Johny Rufus via Mike Percy)"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/190686416", "body": "Hi @arae I'm a committer on both projects and I agree with @toddlipcon, @jarcec and @harishreedharan that this would be good to have as part of Kudu, at least for now. That would also allow us to test it using the MiniCluster. Right now Kudu doesn't ship MiniCluster binaries in a way that is downloadable via Maven (although I believ the java classes for the MiniCluster are be available via Maven). Would you mind squashing your PR into one commit and submitting a Gerrit CR to Kudu? Instructions are here: http://getkudu.io/docs/contributing.html\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/190686416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/226557779", "body": "We can't use the pull request flow directly in the Flume project, but I've merged your patch. Thanks for your contribution!\n\nPlease close this pull request.\n\nBest,\nMike\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/226557779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/233824046", "body": "+1, looks good. I have some style nits (checkstyle is failing) and the merge between master and trunk is a little weird but I will fix those on commit.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/233824046/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/236094413", "body": "Hi, thanks for the patch. Is it possible to write a test to verify this fix?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/236094413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/236095639", "body": "+1. LGTM\n\nThanks for the patch. I made one minor modification in the CHANGELOG and will merge this manually.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/236095639/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/243919956", "body": "Thanks guys.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/243919956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/252653755", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/252653755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/252654050", "body": "This has a merge conflict with trunk but I am going to manually resolve the conflict and squash the PR into a single commit before pushing to trunk.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/252654050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/252944635", "body": "+1 from me\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/252944635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/253267856", "body": "It's fine\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/253267856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/255621437", "body": "> The caching is to speed up the builds.\n\nThanks for helping me understand. Maybe add a comment about this for people new to Travis?\n\n> I think, if we have MAVEN_OPTS = \"...\" mvn, then we need to have MAVEN_SKIP_RC = 1.\n\nWhy? I don't understand the reason\n\n> If we are going to use multiple mvn ... commands, then I think it's easier to set it up in one place. \n\nWe aren't doing that yet, right? Would we ever do that?\n\nPersonally I like to avoid putting stuff in default locations for build scripts in order to avoid unintended side effects either in other concurrent builds or in future builds. I just don't like to \"pollute\" the environment. However, I'm guessing Travis uses a Docker image or something like that and wipes out the home dir before each build so you can leave cruft in $HOME and it will never affect future builds. Is that right?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/255621437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/255622939", "body": "> I did not notice huge speedups, so I'm just going to remove it for now.\n\nI wasn't asking to remove it, just for a comment to be added to the yaml file, but either way is OK with me.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/255622939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/255773678", "body": "+1 LGTM\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/255773678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/258154878", "body": "I didn't look at this much yet, but would this ultimately be compatible with standard JAAS credential providers, like the one Hadoop implements?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/258154878/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/266505116", "body": "Thanks for the quick review Denes. I have incorporated your ideas. Let me know what you think.\r\n\r\nThanks,\r\nMike", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/266505116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/275880435", "body": "Is there some way to write a test for this?", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/275880435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/275885669", "body": "@bessbd No need for you to merge it, I can merge it myself. Thanks for the +1!", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/275885669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/276224285", "body": "Your new test validates this change at a very low level, but doesn't actually replicate any aspect of the real environment. Can you think of a way to test the actual fix at a higher level?\r\n\r\nMore concretely: By making this change I think you are trying to fix a bug where the files never roll. But I don't see that issue filed or documented anywhere. I also don't see a test that shows that bug now being fixed. Do you think it's possible to write a test demonstrating that your patch fixes the bug?\r\n\r\nAlso, the commit message doesn't contain any information about why this change was necessary. From looking at FLUME-3049 I see a comment saying \"This has unexpected side effects as the callers try to catch the wrapped exception\". What are the side effects? What is the contract we are trying to provide to callers and how does this restore that? A more detailed explanation would be helpful for reviewers now and for developers / users in the future.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/276224285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/276439030", "body": "> I think writing unit test for one of the actual effects of the wrapping wouldn't really test this change.\r\n\r\nWhy not?", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/276439030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/276443205", "body": "Maybe it's not possible to test this change without running a MiniKdc or something. I haven't looked into it. But if it's possible to add a better test for this bug I think we should do it.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/276443205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/276551250", "body": "How about adding a test to TestBucketWriter that uses a UGIExecutor? You can modify or subclass MockHDFSWriter to cause an exception to be thrown on the following call to open() or flush(), for example. Then write a test to ensure that rolling occurs in the situation where it wouldn't before.\r\n\r\nEven better, while we're doing this we could improve our test coverage of BucketWriter in a secured environment in general. I don't think we have any unit test coverage of that right now, which is unfortunate (am I wrong about that?). You could add a test for this case without specifying which PrivilegedExecutor to use (i.e. just use the proxy object that is a protected member of TestBucketWriter), then parameterize TestBucketWriter so that we execute all test cases in both secure and non-secure modes.\r\n\r\nWe could test in a Kerberized env by instantiating a MiniKdc like we do in TestFlumeAuthenticator and using UGIExecutor with the same keytab we use there. Actually, I am not sure we even need Kerberos to use the UGIExecutor, since doAs isn't a Kerberos concept (it's a feature of HDFS).\r\n\r\nSound doable?", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/276551250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/276555632", "body": "I haven't tested this, and probably we could do something even better, but maybe something similar to this would give us a reasonable amount of coverage for this case without a lot of boilerplate code or test setup needed. I'm assuming we already have unit test coverage for what to do when the bucketWriter append() call throws an IOException or when the bucketWriter is closed when HDFSEventSink tries to append an event to it:\r\n\r\n```java\r\n  // Test that we don't swallow IOExceptions in secure mode. We should close the bucket writer\r\n  // and rethrow the exception. Regression test for KUDU-3049.\r\n  @Test\r\n  public void testRotateBucketOnIOException() throws IOException, InterruptedException {\r\n    int maxBytes = 300;\r\n    MockHDFSWriter hdfsWriter = new MockHDFSWriter();\r\n    final String PROXY_USER = \"alice\";\r\n    PrivilegedExecutor ugiProxy =\r\n        FlumeAuthenticationUtil.getAuthenticator(null, null).proxyAs(PROXY_USER);\r\n    BucketWriter bucketWriter = new BucketWriter(\r\n        0, maxBytes, 0, 0, ctx, \"/tmp\", \"file\", \"\", \".tmp\", null, null,\r\n        SequenceFile.CompressionType.NONE, hdfsWriter, timedRollerPool, ugiProxy,\r\n        new SinkCounter(\"test-bucket-writer-\" + System.currentTimeMillis()), 0, null, null, 30000,\r\n        Executors.newSingleThreadExecutor(), 0, 0);\r\n\r\n    Event e = EventBuilder.withBody(\"foo\", Charsets.UTF_8);\r\n    // Write one event successfully.\r\n    bucketWriter.append(e);\r\n    \r\n    // Fail the next write.\r\n    // Note: We might be able to do this more generically using mockito.\r\n    hdfsWriter.throwExceptionOnNextAppend(new IOException(\"Test injected IOException\"));\r\n    \r\n    // The second time we try to write we should get an IOException.\r\n    try {\r\n      bucketWriter.append(e);\r\n      fail();\r\n    } catch (IOException ex) {\r\n      logger.info(\"Caught expected IOException\", ex);\r\n    }\r\n    // The third time we try to write we should get a BucketClosedException, because the\r\n    // BucketWriter should attempt to close itself before rethrowing the IOException on the first\r\n    // call.\r\n    try {\r\n      bucketWriter.append(e);\r\n      fail();\r\n    } catch (BucketClosedException ex) {\r\n      logger.info(\"Caught expected BucketClosedException\", ex);\r\n    }\r\n\r\n    assertEquals(\"events written\", 1, hdfsWriter.getEventsWritten());\r\n  }\r\n```", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/276555632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/276721189", "body": "Thanks for updating the test, @adenes. +1, LGTM. I am about to commit this.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/276721189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/282352456", "body": "We had an unrelated issue that caused us to back out the checkstyle patch for 1.7. The problem was that the source artifact wouldn't build with checkstyle. That was fixed in #98.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/282352456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/283056965", "body": "Thx for the +1 Donat! I can commit it, no worries.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/283056965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/298777147", "body": "@simonati I don't know how to do that; try just re-pushing the patch.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/298777147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/flume/comments/19531391", "body": "How about just MAVEN_OPTS=\"...\" mvn clean install -DskipTests\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/comments/19531391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/comments/19531393", "body": "Is this needed for something?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/comments/19531393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/comments/19531397", "body": "Can skip this with the above command I think\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/comments/19531397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/70695650", "body": "Please add a comment at the top of the test with a description. You can leave out @throws clauses and all of that junk that is not really additionally helpful to developers reading the test code\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70695650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70695789", "body": "Please increase your batch size to at least 2 events\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70695789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70696839", "body": "The test is pretty good but please make the following modifications:\n1. Add multiple events to the channel.\n2. Call process() multiple times.\n3. Ensure that the file is readable by a reader after multiple batches have been flushed.\n4. Test all of the following codecs: bzip2, gzip, snappy\n\nYou probably would want to extract a helper method to avoid copy / paste for testing all the codecs\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70696839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70697829", "body": "Please also rebase on trunk. We've added a checkstyle plugin to the Maven build that will run and tell you what's wrong. In this case, the line exceeds 100 chars.\n\nA reasonable way for you to build Flume and run your test while invoking checkstyle is:\n\nmvn clean install -DfailIfNoTests=false -Dtest=TestHDFSEventSink\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70697829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/71053982", "body": "> > Test all of the following codecs: bzip2, gzip, snappy\n> \n> Snappy and gzip require the native hadoop libraries. Do you know of a work around here to enable that?\n\nI believe there are pure Java versions of some compression strategies, particularly deflate and gzip. Maybe not snappy though... Please try deflate and gzip and let me know if it doesn't appear to work.\n\n>  I thought that writing one event (and thus a corresponding batch size of one) would suffice. Is there a scenario that I'm missing where multiple events would be different?\n\nI want to make sure that multiple batches concatenated is still readable in all cases. I suppose more than one event per batch doesn't add much coverage, but certainly we need to test multiple batches in order to ensure that the SequenceFile framing is working properly across multiple sync() calls on the same file.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/71053982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/82808082", "body": "Should we also add this line to the `<fileSets> <exclude>` section in this file?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/82808082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/82813973", "body": "Ok thanks Denes! LGTM\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/82813973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83047686", "body": "No need to specify the URL here; it may even change in the future since this doesn't point to a git hash or anything\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83047686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83624465", "body": "I don't really understand the purpose of this, actually I don't think it makes any sense because the startup is async and start() only fails synchronously. There isn't really another mechanism that I know of to \"inform the rest of flume that ExecSource stopped unexpectedly\". Or is there, and I just don't know about it?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83624465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83666708", "body": "Okay thanks. Yeah I feel that we should only put actionable TODOs in the code.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83666708/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/84608256", "body": "Do you have evidence that this line is required? If so, can you please add a comment about it?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/84608256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/115107477", "body": "nit: Can we keep the if-statement? I suppose add() on the same element multiple times would just replace the previous element in the set and end up as a no-op, but it seems clearer to me to keep the \"contains\" there, especially now that you've switched to a hash-based container and it would be an O(1) operation, e.g.\r\n\r\n```\r\nif (!writers.contains(bucketWriter)) {\t\t\r\n  writers.add(bucketWriter);\t\t\r\n}\r\n```", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/115107477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/115107507", "body": "nit: I don't think we need ordering, how about just HashSet<>()?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/115107507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/115204717", "body": "I don't see any logic here to make this throw only on the second call. It seems like it would throw on every call. Maybe I'm missing something.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/115204717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/115205662", "body": "I think it would be good to add some more assertions: how many events were taken from the channel, how many events were successfully written to HDFS, and how many bucketWriters there are.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/115205662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/115344574", "body": "OK", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/115344574/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116592836", "body": "It's sort of weird that the getter is an int but the setter is a boolean. Can we just make everything an int, including the underlying variable? Also, did you consider making this an error count instead of just 1/0 since that would provide additional information?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116592836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116593056", "body": "nit: magic number. Please add comment for why we want 3", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116593056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116598553", "body": "nit: magic number. Please add a comment why we want 1", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116598553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116626541", "body": "This is likely going to be flaky under system load. You could probably make it fail by running this test in a loop while also running stress -c 16 in another terminal.\r\n\r\nI would suggest doing something like this:\r\n\r\n```\r\nFileUtils.deleteDirectory(baseDir);\r\nfinal long TIMEOUT_MILLIS = 15000;\r\nwhile (System.currentTimeMillis() < beforeCheckPointWrite + TIMEOUT_MILLIS) {\r\n  if (channel.getChannelCounter().getCheckpointWriteErrorCount() > 0) {\r\n    break;\r\n  }\r\n  Thread.sleep(10);\r\n}\r\n// the channel's directory has been deleted so the checkpoint write should have failed\r\nassertThat(\"checkpointWriteErrorCount\",\r\n    channel.getChannelCounter().getCheckpointWriteErrorCount(),\r\n    greaterThan(0));\r\n```\r\nYou could probably even wrap that loop in a helper function and have it take a lambda expression, i.e.\r\n\r\n```\r\nvoid assertEventuallyTrue(String description, BooleanSupplier expr, long timeoutMillis) {\r\n  long start = System.currentTimeMillis();\r\n  while (System.currentTimeMillis() < start + timeoutMillis) {\r\n    if (expr.getAsBoolean()) break;\r\n    Thread.sleep(10); // Sleep for 10ms before each retry\r\n  }\r\n  assertTrue(desc, expr.getAsBoolean());\r\n}\r\n\r\nFileUtils.deleteDirectory(baseDir);\r\nlong timeoutMillis = 15000;\r\nassertEventuallyTrue(\"checkpointWriteErrorCount > 0\",\r\n                     () -> channel.getChannelCounter().getCheckpointWriteErrorCount() > 0,\r\n                     timeoutMillis);\r\n```", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116626541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116635980", "body": "This sleep will make this test potentially flaky. Can you make it more reliable? Perhaps using the assertEventuallyTrue() function I suggest in another comment below. Perhaps you could put the entire following block in a lambda, i.e.\r\n\r\n```\r\n  assertEventuallyTrue(\"putErrorCount > 0\",\r\n      () -> {\r\n        Transaction tx = channel.getTransaction();\r\n        tx.begin();\r\n        try {\r\n          channel.put(EventBuilder.withBody(\"test\".getBytes()));\r\n          tx.commit();\r\n          tx.close();\r\n        } catch (ChannelException ex) {\r\n          log.info(\"ChannelException\", ex);\r\n        }\r\n        return channelCounter.getEventPutErrorCount() > 0;\r\n      },\r\n      timeoutMillis);\r\n```", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116635980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116637092", "body": "Please add comment like:\r\n\r\n// This is guaranteed to throw an error if the above put() threw an error.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116637092/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116637243", "body": "Please add Javadoc for each metric in this interface. It should describe the purpose and behavior of the metric.\r\n\r\nFor example:\r\n\r\n```\r\n/** A count of the number of errors encountered while trying to put() onto the channel,\r\n  * including IOExceptions and corruption-related errors.\r\n  */\r\nlong getEventPutErrorCount();\r\n```", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116637243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116655856", "body": "Don't we want to mark the channel unhealthy here too? And elsewhere that we increment event take / put error count as well as checkpoint write failure?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/116655856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/138301578", "body": "If this is to be case sensitive, it should probably lowercase the first letter so that the property fooBar maps to setFooBar() which would be consistent with most of the rest of Flume.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/138301578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/138301979", "body": "Perhaps mark as @InterfaceAudience.Private and @InterfaceStability.Evolving for a release", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/138301979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/138302156", "body": "Should this just throw?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/138302156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/138302377", "body": "Should we do this the opposite way, where we try to call a setter for each property in the map, or that isn't going to be viable?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/138302377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/138302867", "body": "Why remove all these `@Override`s? There is no longer an inheritance relationship?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/138302867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/138306313", "body": "This is clearly a highly flexible approach, but do we really want to adopt all public methods of Jetty being configurable via Flume? Flume has traditionally been nearly 100% backwards compatible and if we directly expose Jetty public methods to users then are we writing checks we can't cash later on? Say if Jetty changes some method names in a future major version that we would like to upgrade to.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/138306313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "wang1026": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/630083228364f6cd5dc18839fbd4b167cb615b38", "message": "FLUME-2427. Be less verbose in isFileClosed() notification\n\nSome versions of HDFS and implementations of FileSystem do not implement\nthe isFileClosed() method.\n\nWe perform a check for that method each time a new file is opened. This\npatch lowers the severity of the message printed when we detect that the\nmethod is not present from LOG.warn() to LOG.info().\n\nWe also remove the stack trace from the log message.\n\n(Ping Wang via Mike Percy)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "benwheeler": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/a844914721f68282b6fce2b3b0006603bafd790d", "message": "Add an HTTP sink\n\nThis patch adds an HTTP sink. Supports configurable backoff & retry for different HTTP status codes, and instrumentation.\n\nThis closes #84\n\nReviewers: Shang Wu, Jeff Holoman, Bessenyei Bal\u00e1zs Don\u00e1t\n\n(Ben Wheeler via Bessenyei Bal\u00e1zs Don\u00e1t)"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/274441404", "body": "@bessbd I've merged your patch.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/274441404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/87605992", "body": "HttpClient is a dependency of Wiremock, but the version in Flume (4.2.1) is not compatible with recent versions of Wiremock.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87605992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87606512", "body": "The way this is coded, the underlying connections are actually reused. The HttpURLConnection is designed to make a single request. See https://docs.oracle.com/javase/7/docs/api/java/net/HttpURLConnection.html.\n\nI did implement a HttpClient version of this sink, but the performance wasn't any better (though I didn't spend much time tuning the HttpClient version).\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87606512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87608921", "body": "How do you mean? I have some logging at info level at line 252-259 to combine rollback and backoff reporting.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87608921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87767175", "body": "Hmm, I have not profiled this to see what happens. Java 7 versions of HttpURLConnection shouldn't have disconnect() called unless you want the connection closed (as this is a hint to close the socket). There are some system properties that could be used to tune this like \"http.maxConnections\" (default 5) or \"http.keepalive\" (default true).\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87767175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/88276793", "body": "Having done some reading on netcat, I'm not sure how to do this. It will allow me to start a listening service, but won't let me send back a specific response code for a specific request.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/88276793/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jholoman": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/fa1ee05af38bcf08ed18ff36d4284e68836a9054", "message": "FLUME-3027. Change Kafka Channel to clear offsets map after commit\n\nThis change adds a call to clear the offsets map after a commit so as to avoid repeatedly committing already-committed offsets. Also updates various debug and trace log messages/calls to help with troubleshooting.\n\nThis closes #92\n\nReviewers: Attila Simon, Bessenyei Bal\u00e1zs Don\u00e1t\n\n(Jeff Holoman via Bessenyei Bal\u00e1zs Don\u00e1t)"}, {"url": "https://api.github.com/repos/apache/flume/commits/a0a50849d5ad33e6e6903316a3bd3dbba8547843", "message": "FLUME-2982. Add localhost escape sequence to HDFS sink\n\nIt would be useful to be able to just use %[localhost] escape sequence\ninstead of having to pass in a header or use the host interceptor.\n\nPart of the problem of using an interceptor is the case where Flume only\nconsists of a channel and a sink (think KafkaChannel). There is support\nin Flume for a sink-side interceptor at the time of this writing.\n\nReviewers: Grant Henke, Mike Percy\n\n(Jeff Holoman via Mike Percy)"}, {"url": "https://api.github.com/repos/apache/flume/commits/dbf2e989744a6b2921076be017102f75323a69f4", "message": "FLUME-2810. Add static Schema URL to AvroEventSerializer configuration\n\nCurrently the only way to pass a schema to the avro event serializer is\nvia header. This introduces an option to specify the location directly\nin the Flume configuration.\n\n(Jeff Holoman via Mike Percy)"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/262569702", "body": "LGTM, thanks for patch", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/262569702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/262832350", "body": "Thanks @satiatcloudera. \r\n\r\n2) Totally agree. I had a version with this and somehow it got reverted.\r\n3) process() from a sink calls channel.take() until the batch size. If there is no event we break out of the loop and then commit the transaction. See https://github.com/apache/flume/blob/trunk/flume-ng-sinks/flume-hdfs-sink/src/main/java/org/apache/flume/sink/hdfs/HDFSEventSink.java#L362. \r\n\r\nThe logic here is a little complicated, and it's always worth another look. We could probably catch the Exceptions that the Kafka Consumer could throw during commitSync CommitFailedException and Wakeup exception. Is it ok if we address this logic in another jira? \r\n\r\n4) I agree, but I'd like to separate that change. \r\n\r\n5) We are just clearing our internal tracking Map. This essentially prevents committing previously committed offsets. In a topic with a large number of partitions, this can be problematic. \r\n\r\nAll of this is kind of hard to follow. I think the unit-tests are kind of tricky to understand, and the logic could be clearer. \r\n\r\nThe intent of this patch is to address a situation where the Channel can get totally stuck. Happy to take another pass at refactoring the channel.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/262832350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/263178996", "body": "Agree that on this we need to document the existing default value. \r\n\r\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/263178996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/89538726", "body": "I haven't found a good use for it, and it's just polluting the logs. ", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/89538726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/89538751", "body": "Agree", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/89538751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/89538756", "body": "Sure", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/89538756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/89540152", "body": "This needs to be moved back out of the if statement.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/89540152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/89540237", "body": "See comment", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/89540237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90074803", "body": "My understanding is that using the {} means they aren't evaluated if the logging mode doesn't match. Am I wrong about this?\r\n\r\nhttp://www.slf4j.org/faq.html#logging_performance", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90074803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90120726", "body": "They are already printed in the Flume Agent log when the channel closes:\r\n\r\norg.apache.flume.instrumentation.MonitoredCounterGroup: Shutdown Metric for type: CHANNEL, name: kafka-channel-1. channel.start.time == 1480359313437\r\n\r\nSo this was redundant.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90120726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90121563", "body": "The intention is to break out of the blocking thread in poll(), before closing the consumer.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90121563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90124735", "body": "Maybe? I don't have a strong opinion on it and would prefer to make as few changes as possible. ", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90124735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90767138", "body": "I think we should be explicit about a couple of different things in the user guide\r\n\r\n1) This only affects values and not keys\r\n2) You can use env variables however you want, the example is just an example. \r\n\r\nI would also review the language a little bit (eg, remove \"we\") ", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90767138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90767180", "body": "Can you add a test for multiple substitutions per key?", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/90767180/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "peterableda": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/31c729e3cbfc1e5111318b1d1abed875807185cd", "message": "Clean up references to the Flume 0.9 TailSource and recommendations to use Exec source to tail files\n\nFlume has Spooling Directory Source and Taildir Source now, so there's no need to use workarounds such as the Exec source to tail files.\n\nThis closes #88\n\nReviewers: Denes Arvay, Jeff Holoman\n\n(Peter Ableda via Bessenyei Bal\u00e1zs Don\u00e1t)"}, {"url": "https://api.github.com/repos/apache/flume/commits/72a68f0d4ce032c2973f711738e9f3f55ddacd4b", "message": "Remove hostHeader = hostname property from Host interceptor example\n\nWe are overriding the host header name from `host` to `hostname` in the example usage section. Due to this example users are overriding the header name too but still use the `%{host}` substitution as shown in the HDFS Sink section. This leads to errors.\n\nThis change removes the mentioned example config line, thus the default header will be used.\n\nThis closes #87\n\nReviewers: Bessenyei Bal\u00e1zs Don\u00e1t\n\n(Peter Ableda via Bessenyei Bal\u00e1zs Don\u00e1t)"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/170019192", "body": "I will create a patch and attach it to a JIRA\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/170019192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "gcommeau": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/de941e7b85ed55bfbd804880f421be3889187d31", "message": "FLUME-2171. Add Interceptor to remove headers from event\n\nSimilar to Flume OG decorators, this introduces an Interceptor to remove headers from an event.\n\nReviewers: Bessenyei Bal\u00e1zs Don\u00e1t, Jeff Holoman, Denes Arvay, Attila Simon\n\n(Gabriel Commeau and Bessenyei Bal\u00e1zs Don\u00e1t via Jeff Holoman)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "TedBear42": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/9868c4231362e5568a1675a604288d60cbadd7fe", "message": "FLUME-3020. Improve HDFS Sink escape sequence substitution\n\nWhen using escape sequences, the current code will call InetAddress\nfor every event which results in a huge impact to performance.\n\nThis patch fixes that issue by caching the local host in a static variable.\nWe can do this because there is zero chance the local host will change for a life of a JVM.\n\nReviewers: Hari Shreedharan, Jeff Holoman, Bessenyei Bal\u00e1zs Don\u00e1t\n\n(Theodore michael Malaska via Bessenyei Bal\u00e1zs Don\u00e1t)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "andrearota": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/7d5ceacac49f5d15bf8f75e0209592c5524a3dda", "message": "FLUME-2911. Add include pattern option in SpoolDir source\n\n* Documented what happens when ignorePattern and includePattern both\n  match for a given file.\n* Added two tests to simulate what happens when both ignorePattern and\n  includePattern options are specified\n* Refactored of ReliableSpoolingFileEventReader test and fix of code\n  style violations\n\nCloses #60\n\nReviewers: Bessenyei Bal\u00e1zs Don\u00e1t, Denes Arvay, Attila Simon\n\n(Andrea Rota via Mike Percy)"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/239026987", "body": "As requested on [JIRA FLUME-2911](https://issues.apache.org/jira/browse/FLUME-2911), I documented what happens when ignorePattern and includePattern are combined and both match for a given file in the spooling directory.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/239026987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/240571919", "body": "Added two tests to stress what happens in case both the options are declared and they go in conflict each other, according to [original JIRA request](https://issues.apache.org/jira/browse/FLUME-2911).\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/240571919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/249536581", "body": "@vvii could you please describe what this proposed PR does?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/249536581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/78280281", "body": "Thank you @adenes for your suggestions. I have refactored the test code and fixed code style violations.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/78280281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "granthenke": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/330e572879c9903f5b1084d84b237685aa9970c6", "message": "FLUME-2983. Handle offset migration in the new Kafka Source\n\nSimilar to FLUME-2972, offsets tracking the position in Kafka consumers\nchange from using zookeeper for offset storage to Kafka when moving from\n0.8.x to 0.9.x.\n\nFLUME-2821 makes the client change in the Kafka Source but does not\nensure existing offsets get migrated in order to continue consuming\nwhere it left off. Flume should have some automated logic on startup to\ncheck if Kafka offsets exist, if not and migration is enabled (by\ndefault) then copy the offsets from Zookeeper and commit them to Kafka.\n\nThis change should also fix the backwards incompatibility caused by\nremoving the zookeeperConnect property. The bootstrap can be looked up\nif zookeeperConnect is used.\n\nReviewers: Denes Arvay, Mike Percy\n\n(Grant Henke via Mike Percy)"}, {"url": "https://api.github.com/repos/apache/flume/commits/1e8f2651dacf5daef55d75c7b9b12492962e7921", "message": "FLUME-2972. Handle offset migration in the new Kafka Channel\n\nOffsets tracking the position in Kafka consumers change from using\nZookeeper for offset storage to Kafka when moving from Kafka 0.8.x to\n0.9.x.\n\nFLUME-2823 makes the client change in the Kafka Channel but does not\nensure existing offsets get migrated in order to continue consuming\nwhere it left off.\n\nFlume should have some automated logic on startup to check if Kafka\noffsets exist, if not and migration is enabled (by default) then copy\nthe offsets from Zookeeper and commit them to Kafka.\n\nReviewers: Bal\u00e1zs Don\u00e1t Bessenyei, Denes Arvay, Mike Percy\n\n(Grant Henke via Mike Percy)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lfzCarlosC": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/dff1505c1ed76358d3f6e84df95118e1d92ece8d", "message": "Fix various typos\n\nThis closes #49\n\n(Fonso Li via Mike Percy)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ccpds": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/5a083a30b603d7213b1d44a174400b6cd44db70c", "message": "FLUME-2890. Typo in Twitter source warning\n\nReviewed by Lior Zeno.\n\n(Daniel Templeton via Mike Percy)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "smola": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/c554ba3d9b8234b37ba0b5dde3657034d11acb0b", "message": "FLUME-2514. Speed up TestFileChannelRestart tests\n\nTestFileChannelRestart tests are really slow. For example,\ntestToggleCheckpointCompressionFromFalseToTrue and\ntestToggleCheckpointCompressionFromTrueToFalse take ~4 minutes each.\n\nSome of them could be made faster by using channels with lower capacity.\n\nReviewed by Bessenyei Bal\u00e1zs Don\u00e1t\n\n(Santiago M. Mola via Mike Percy)"}, {"url": "https://api.github.com/repos/apache/flume/commits/4eacba1930c3abfddf4fb50c5a272798708df811", "message": "FLUME-2567. Remove external Maven repositories\n\n(Santiago M. Mola via Mike Percy)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tinawenqiao": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/1ca0765aae795a41a43e39324f5f1c8bae57b751", "message": "FLUME-2955. Add file path to the header in TaildirSource\n\nAllow for adding a file path to the header dynamically. This is\nparticularly useful when the filegroup path contains a regex expression.\n\n(tinawenqiao via Mike Percy)"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/230447643", "body": "@satiatcloudera Thanks for your remind. I will check FLUME-2918. In addition to the function of recursive directory access, multiline is supported and also fix the bug if a line\u2018s length exceeds 8192 bytes. In order to get some common messages such as filepath from sink\uff0cI add filepath,hostname,ip in the header of flume event.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/230447643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/230502651", "body": "@satiatcloudera I review the FLUME-2918. It does not support recursive directory.  I have two tests as follows:\n\n1.\nfilegroups.ab=/var/folders/g9/gbqgyz4n2_17b39prgl002xm0000gn/._/1467730207992-0/[ab].log filepath=/var/folders/g9/gbqgyz4n2_17b39prgl002xm0000gn/T/1467730207992-0/a.log\nIn TaildirMatcher.TaildirMatcher() {... this.parentDir = f.getParentFile(); ...} ,  parentDir value is  /var/folders/g9/gbqgyz4n2_17b39prgl002xm0000gn/._/1467730207992-0. So it returns exception :\njava.lang.IllegalStateException: Directory does not exist: /var/folders/g9/gbqgyz4n2_17b39prgl002xm0000gn/.*/1467730207992-0\n    at com.google.common.base.Preconditions.checkState(Preconditions.java:145)\n    at org.apache.flume.source.taildir.TaildirMatcher.<init>(TaildirMatcher.java:136)\n    at org.apache.flume.source.taildir.ReliableTaildirEventReader.<init>(ReliableTaildirEventReader.java:78)\n    at org.apache.flume.source.taildir.ReliableTaildirEventReader.<init>(ReliableTaildirEventReader.java:48)\n    at org.apache.flume.source.taildir.ReliableTaildirEventReader$Builder.build(ReliableTaildirEventReader.java:322)\n    at org.apache.flume.source.taildir.TaildirSource.start(TaildirSource.java:92)\n    at org.apache.flume.source.taildir.TestTaildirSource.testRegexFileNameFilteringEndToEnd(TestTaildirSource.java:104)_\n\n2.\nfilegroups.ab=/var/folders/g9/gbqgyz4n2_17b39prgl002xm0000gn/T/1467730207992-0/.*[ab].log filepath=/var/folders/g9/gbqgyz4n2_17b39prgl002xm0000gn/T/1467730207992-0/01/a.log\n    I found a.log can't be tracked by the taildirsource\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/230502651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kevinconaway": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/358bb670029549ed4cff192c79307fd3e4d69972", "message": "FLUME-2922. Sync SequenceFile.Writer before calling hflush\n\nThis closes #52\n\n(Kevin Conaway via Mike Percy)"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/225020476", "body": "@harishreedharan Is it sufficient to grab the patch from this PR?  You can add `.patch` to the URL to get the patchfile:\n\nhttps://github.com/apache/flume/pull/52.patch\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/225020476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/225022093", "body": "Nm, I just uploaded the patch to Jira.  Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/225022093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/225024786", "body": "@harishreedharan are you the right person to review this?\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/225024786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/225194848", "body": "Merged.  Closing this out.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/225194848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/226195309", "body": "@jarcec is this something that you're able to review?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/226195309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/233405285", "body": "@mpercy updated the test per your comments.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/233405285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/70698003", "body": "> Test all of the following codecs: bzip2, gzip, snappy\n\nSnappy and gzip require the native hadoop libraries.  Do you know of a work around here to enable that?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70698003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70699311", "body": "> Add multiple events to the channel.\n> Please increase your batch size to at least 2 events\n\nThe idea behind this test (and this is why your request for documentation is a good one ;)) is to simulate what happens when a batch of events is written to the file (and thus hsync'd to hdfs) but the file is _not_ yet closed.  In that case, the data that we wrote should still be readable.  With that in mind, I thought that writing one event (and thus a corresponding batch size of one) would suffice.  Is there a scenario that I'm missing where multiple events would be different?\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70699311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/71135317", "body": "> I believe there are pure Java versions of some compression strategies, particularly deflate and gzip. Maybe not snappy though... Please try deflate and gzip and let me know if it doesn't appear to work\n\nDeflate works without the native libraries.  Snappy and gzip do not.  The gzip check is actually done by the `SequenceFile.Writer` for some reason: https://github.com/apache/hadoop/blob/bad85f3e3a53b5fb692c77df6c11dcf968ad7e62/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/SequenceFile.java#L1151\n\n> I want to make sure that multiple batches concatenated is still readable in all cases. I suppose more than one event per batch doesn't add much coverage, but certainly we need to test multiple batches in order to ensure that the SequenceFile framing is working properly across multiple sync() calls on the same file.\n\nUnderstood, thanks for clarifying.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/71135317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "pippobaudos": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/19664c3c559c7d0360f7bb5a64eff88b8f25a80d", "message": "FLUME-2948. docs: Fix parameters on Replicating Channel Selector example\n\nThis closes #55\n\n(Niccolo Becchi via Mike Percy)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dylan8902": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/9601f5bf0a5294d5ffd324010768fe0299044d6d", "message": "User guide: fix mistake and formatting\n\nchange source to sink and fix formatting in Kafka Channel documentation\n\n(Dylan Jones via Mike Percy)"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/226682262", "body": "Great thank you. Your very welcome.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/226682262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/226710993", "body": "Sorry Umar, this has been fixed in 9601f5bf0a5294d5ffd324010768fe0299044d6d\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/226710993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jarcec": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/f46bee03eb2c9094aa192dd6b82a494cb26eef35", "message": "FLUME-2920: Kafka Channel Should Not Commit Offsets When Stopping\n\n(Kevin Conaway via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/a619cc15748d76357f84bd3d0fa0a3e496ee61a1", "message": "FLUME-2915: The kafka channel using new APIs will be stuck when the sink is avro sink\n\n(Jeff Holoman via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/46ae5accd03e5b8b18d3e1fb52761c1df4e51e5a", "message": "FLUME-2908: NetcatSource - SocketChannel not closed when session is broken\n\n(Grant Henke via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/4eb2a3bb510671fe92cec0ebb61d7e78adc8f526", "message": "FLUME-2852: Kafka Source/Sink should optionally read/write Flume records\n\n(Tristan Stevens via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/e8c4a7bffc74f6ea10ae6cc45adbaf4919f45186", "message": "FLUME-2823: Flume-Kafka-Channel with new APIs\n\n(Jeff Holoman via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/7f588e6a158f5d108e39f50a92f8d1d108b12c24", "message": "FLUME-2822: Flume-Kafka-Sink with new Producer\n\n(Jeff Holoman via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/f8abaf78fb98e91b7a228aaa231f4164d8dcfc97", "message": "FLUME-2821: Flume-Kafka Source with new Consumer\n\n(Grigoriy Rozhkov via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/5293eba9a418180b42b3138c0c0b5aac38361f7f", "message": "FLUME-2897: AsyncHBase sink NPE when Channel.getTransaction() fails\n\n(Mike Percy via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/caa64a1a6d4bc97be5993cb468516e9ffe862794", "message": "FLUME-2891: Revert FLUME-2712 and FLUME-2886\n\n(Hari Shreedharan via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/109ec30725a4c665a2ccf5f40af8a0e455cf4166", "message": "FLUME-2886: Optional Channels can cause OOMs\n\n(Hari Shreedharan via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/e6416a0707a8be539a163bec9d7b12f7afbc36cf", "message": "FLUME-2718: HTTP Source to support generic Stream Handler\n\n(Hari via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/88b3fee10f1ec10dc33872710a4d4084c86b5e7d", "message": "FLUME-2841: Upgrade commons-collections to 3.2.2\n\n(Hari Shreedharan via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/d8d97db4be954fc15e4632d6c9ae5dd8f46c189c", "message": "FLUME-2734: Kafka Channel timeout property is overridden by default value\n\n(Johny Rufus via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/a2f55e180f80b1daa707df9269375e1a7c69e6b5", "message": "FLUME-2751: Upgrade Derby version to 10.11.1.1\n\n(Johny Rufus via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/5f6d6c3b1d0100c57c2656fcd014dc2ee8e0a607", "message": "FLUME-2737: Documentation for Pollable Source config parameters introduced in FLUME-2729\n\n(Ted Malaska via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/e98bcd4529e462e17680053e9356a6280d807164", "message": "FLUME-2630: Update documentation for Thrift SRc/Sink SSL support\n\n(Johny Rufus via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/407874b9041b2073e3ccc8e0a18353f865d900ce", "message": "FLUME-2633: Update Kite dependency to 1.0.0\n\n(Tom White via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/990776427d0bb12e8775c31fc78d47bea8f6501f", "message": "FLUME-2443: org.apache.hadoop.fs.FSDataOutputStream.sync() is deprecated in hadoop 2.4\n\n(Hari Shreedharan via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/82631f811a7c6a4d8e6ec886f80d1a21876947e5", "message": "FLUME-2594: Close Async HBase Client if there are large number of consecutive timeouts\n\n(Hari Shreedharan via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/d1227feb601f30d0c7ec2910b91e648ee410d179", "message": "FLUME-2488: TestElasticSearchRestClient fails on Oracle JDK 8\n\n(Johny Rufus via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/94b25aebc6d90480bb00898de4b98257cc7d8cbb", "message": "FLUME-2549: Enable SSLv2Hello for HttpSource\n\n(Hari Shreedharan via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/8c7f6936045222026c93f34bda861acec79066cf", "message": "FLUME-2548: Enable SSLv2Hello for Avro Source and NettyAvroRpcClient\n\n(Hari Shreedharan via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/76ddc82fb829995f2c88976d4153de132edf0a20", "message": "FLUME-2505: Test added in FLUME-2502 is flaky\n\n(Hari Shreedharan via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/7e21ad36c05e07c4c6b92aa489f08c3cb562cb28", "message": "FLUME-2533: HTTPS tests fail on Java 6\n\n(Hari Shreedharan via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/aef02df10a26a6b6911b771a506994f2069857cf", "message": "FLUME-2500: Add a channel that uses Kafka\n\n(Hari Shreedharan via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/ea2fcdaa5132bd4fe01bc00a7da2dddb29756b02", "message": "FLUME-2520: HTTP Source should be able to block a prefixed set of protocols.\n\n(Hari Shreedharan via Jarek Jarcec Cecho)"}, {"url": "https://api.github.com/repos/apache/flume/commits/84c526fedbf30f14bf80ac7bc40aa043f400ec98", "message": "FLUME-2237. Example config in User Guide to use same notation for Agent name\n\n(Ashish Paliwal via Jarek Jarcec Cecho)"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/39110909", "body": "Hi Krisztian,\nwould you mind opening a new Flume JIRA and submitting your patch there? Due to the formalities and different licences we can't accept pull requests from Github.\n\nhttp://issues.apache.org/jira/browse/FLUME\n\nJarcec\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/39110909/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/39640531", "body": "Thank you Krisztian, The flume folks should be able to look into it shortly!\n\nJarcec\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/39640531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/185292829", "body": "Considering the fact that Kudu is a new component that is still evolving, changing quite rapidly and is on much faster release schedule then flume, I would not mind having the Kudu sink part of kudu repository for the time being.\n\n(I'm a Flume PMC member, but I'm representing my own opinion here)\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/185292829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "harishreedharan": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/7962ce63bc1cfdfed6b54b8b211e785ccab350f5", "message": "FLUME-2875. Allow RollingFileSink to specify a file prefix and a file extension.\n\n(Ralph Goers via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/8bb556604047974775eb2da4c5c1686d89fe62d2", "message": "FLUME-2712. Optional channel errors slows down the Source to Main channel event rate\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/67ed62aa18df3675b68369d0d00c8f0dcbdfb970", "message": "FLUME-2781. Kafka Channel with parseAsFlumeEvent=true should write data as is, not as flume events.\n\n(Gonzalo Herreros via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/3fccd241d92bc5b70d216a2111e28897cf93c5df", "message": "FLUME-2773. TailDirSource throws FileNotFound Exception if ~/.flume directory is not created already\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/a4946111383b3dfdb4c128fe5390ff3983213cbb", "message": "FLUME-2749. Fix kerberos configuration error when using short names in multiple HDFS Sinks\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/38f0b316ddcc834c6249c7179c4c1d23ab445a84", "message": "FLUME-2738. Fix file descriptor leak in AsyncHBaseSink when HBase cluster goes down.\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/48126c235c73c67d9c3c2084df122fc96fd2064d", "message": "FLUME-2732. Make maximum tolerated failures before shutting down and recreating client in AsyncHbaseSink configurable\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/344e0accae5675fd3d14b8414531528607865aae", "message": "FLUME-2215. ResettableFileInputStream can't support ucs-4 character\n\n(Alexandre Dutra via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/f7560038a25430378f09ea631b6e472979d7988c", "message": "FLUME-2690. Update ChangeLog for 1.6 Release\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/493976e20dfe14b0b611c92f3e160d4336d10af2", "message": "FLUME-2690. Update ChangeLog for 1.6 Release\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/848f8eef348eefa273ffc53386e2245e5de0113f", "message": "FLUME-2649. Elasticsearch sink doesn't handle JSON fields correctly\n\n(Benjamin Fiorini via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/2f2c4984d1d6da5f34304fd201ddcf3c8e5173bd", "message": "FLUME-2683. Update License file for 1.6 release\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/8443062c8809e3ce4bee864e61d9837c5a243287", "message": "FLUME-2679. Make hbase-1 the default profile\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/0b72ca223f412ae214395c60e381c99fb1fcc18a", "message": "FLUME-2678. Refactor Hive dependencies.\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/e1740c0568024570611fd42175f1c782e8093067", "message": "FLUME-2652. Documented transaction handling semantics incorrect in developer guide.\n\n(Graham Gear via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/b92fbdcf0ea34efe47749af872bb68dc98b0cad5", "message": "FLUME-2676. Update flume docs and release notes to 1.7-SNAPSHOT in trunk and 1.7 branch"}, {"url": "https://api.github.com/repos/apache/flume/commits/651559fbf1f353156753ecba12d14820a4d6eaad", "message": "FLUME-2675. Update pom.xml version in trunk and 1.7 branch"}, {"url": "https://api.github.com/repos/apache/flume/commits/019ab5207f2d2f0e7b9113b855b37d20dce664bf", "message": "FLUME-2658. Upgrade to Hbase 1.0\n\n(Roshan via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/364752a43f8ad7f85fd232351a179db017cd2265", "message": "FLUME-2673. Remove unused import in TestLog\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/275329ca6c5ebd5212879696fcd0d19f691c1b60", "message": "FLUME-2670. Modify dependencies to not pull hadoop/hive related jars\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/4188e4dedb4af0792bfac3086e3b2a7d415f2248", "message": "FLUME-2665. Update documentation for hdfs.closeTries based on FLUME-2586\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/94f568b96afc79d7850de64e47dead1c7352cef9", "message": "FLUME-2148. Windows : Add flume-env.ps1\n\n(Roshan Naik via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/a508d953162a2b5e771ce5c3c8ee40e02c3fe3c7", "message": "FLUME-2668. Document SecureThriftRpcClient/SecureRpcClientFactory in Flume Developer Guide\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/be4ae294ca549648f785e7eea7564ee95112130a", "message": "FLUME-2595. Add option to checkpoint on file channel shutdown\n\n(Roshan Naik via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/fc03456a1e4b1059b7fc6f29d96f9d047e28badb", "message": "FLUME-2645. ipFilter.rules property name is wrong\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/b68f5991d45fd4f89471233c2e3318fe252b5788", "message": "FLUME-2635. Documentation for zookeeper dynamic configuration in flume\n\n(Ashish Paliwal via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/c3eff4bffcaf6c952ba13efef456d6a1a40f89cb", "message": "FLUME-2664. Site profile fails due to dependency issues\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/c77f1ac469aac712e533cce7748683f1d2cc131a", "message": "FLUME-2649. Elasticsearch sink doesn't handle JSON fields correctly\n\n(Benjamin Fiorini via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/91ec5794589bf3711cca2a251a511fa360e5ac30", "message": "FLUME-2613. Add support in FileChannelIntegrityTool to remove invalid events from the channel.\n\n(Ashish Paliwal via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/cfefda167ea42aa5d68e15ac55bc2d6394c2d48d", "message": "FLUME-2654. Clarify error message in MemoryChannel when byte capacity is reached.\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/4d2a34e931554baa1c1b255d95540a46354a521f", "message": "FLUME-1934. Spooling Directory Source dies on encountering zero-byte files.\n\n(Grant Henke via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/e60c22a318f7c4fe3868a3ad762e3998f61b49d7", "message": "FLUME-2626. Remove trustmanager-type from Thrift RPC client and Thrift Source.\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/39bc4da1ed286fa3690876dda741cadb35386d93", "message": "FLUME-2642. Limit the number of calls to UGI.checkTGTAndRelogin method.\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/49150fe6d4fa11d07a19e3ed106ccb0453a18c84", "message": "FLUME-2639. SecureThriftRpcClient client privileged calls throw IllegalAccessError\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/542b1695033d330eb00ae81713fdc838b88332b6", "message": "FLUME-2631. End to End authentication in Flume\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/3d03053615694ca638e5ddf314081826b8a5f1ac", "message": "FLUME-2570. Add option to not pad date fields.\n\n(Peter Leckie via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/4a91456a72276e19e1a63d6a4df214bccef2bac8", "message": "FLUME-2214. File Channel Integrity Toll documentation.\n\n(Ashish Paliwal via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/a103a677145a43aa6fa78dfeeb34018879e24a94", "message": "FLUME-2574. SSL support for Thrift RPC.\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/6f6f69b8b3435385b578af4bfb7790f2984bfb35", "message": "FLUME-2592. Fix help message in File Channel Integrity Tool.\n\n(Ashish Paliwal via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/a7f9255a83beb222e1f3e871dff2d44568fa3f43", "message": "FLUME-1734. Add a Hive Sink based on Hive Streaming support.\n\n(Roshan Naik via Hari Shreedharan)"}, {"url": "https://api.github.com/repos/apache/flume/commits/62a4cad223aebfa0aa0f9d20c1c37f04a8b918a9", "message": "FLUME-1334. Windows startup scripts.\n\n(Roshan Naik via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/1d49ef704a8bb08280b4e653e6db94dc3d2c2475", "message": "FLUME-2591. DatasetSink 2.0\n\n(Joey Echeverria via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/0d6eccad2781884fe0f000f74b8f964cbdd7971f", "message": "FLUME-2586. HDFS Sink must try to rename files even if close fails.\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/91c58804da51a551fcbbe290261810c7750ee749", "message": "FLUME-2568. Additional fix for TestReliableSpoolingFileEventReader\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/1d9bab6760df38e538705a74dd599de03129777b", "message": "FLUME-2562. Add metrics for Kafka Source, Kafka Sink and Kafka Channel.\n\n(Gwen Shapira via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/199684b62ec983b8f922b1d6d706479032a18e64", "message": "FLUME-2578. Kafka source throws NPE if Kafka record has null key\n\n(Gwen Shapira via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/84465664c21ed0a1261f015a010b94a98153c8d7", "message": "FLUME-2556. BucketWriter DateFormat test fails intermittently.\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/34e9bda312506a118fad87fcbdecc48bf3918c95", "message": "FLUME-2373. Support TBinaryProtocol in Thrift RPC.\n\n(Stefan Krawczyk via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/9dd7d95357f925134b0ef2aadd8636722f57533d", "message": "FLUME-2560. Add Kafka Channel to dist tarballs.\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/698f0ba2de9c697ea9fe52134e36a694abc28d88", "message": "FLUME-2538. TestResettableFileInputStream fails on JDK 8.\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/619e78fe68658db242808a18f41ee5137b127748", "message": "Update CHANGELOG for 1.5.2"}, {"url": "https://api.github.com/repos/apache/flume/commits/2b2ac63b39734b084b1ed1ff884a9f0c3f7e3033", "message": "Update RELEASE-NOTES for 1.5.2"}, {"url": "https://api.github.com/repos/apache/flume/commits/293a8c0db2b3b2e696eab0e64bd83d140bfe56d8", "message": "FLUME-2551. Add dev-support directory to source tarball."}, {"url": "https://api.github.com/repos/apache/flume/commits/2c18533253be786b9c60bf687cdf38d2384d2625", "message": "FLUME-2385. Remove incorrect log message at INFO level in Spool Directory Source.\n\n(Phil Scala via Hari Shreedharan)"}, {"url": "https://api.github.com/repos/apache/flume/commits/29e31bfb5fe2be5e3e73b0e02858d49603d6eff8", "message": "Preparing for Flume-1.5.1 Release"}, {"url": "https://api.github.com/repos/apache/flume/commits/543c4c43d5bb04f99ea89cbe9c7c9ab4174563cb", "message": "Updating CHANGELOG for 1.5.1 release"}, {"url": "https://api.github.com/repos/apache/flume/commits/efbf87fb6ddc0bbc736446a5a91cf6a83d34d2d4", "message": "FLUME-2525. Handle a zero byte .flumespool-main.meta file for the spooldir source.\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/fdd61e840b004ca1b5c23b28e8d9eeda300f56f7", "message": "FLUME-2523. Document Kafka channel\n\n(Gwen Shapira via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/77d56e95ead7a04499aa83d1a78fcfbd957b20c7", "message": "FLUME-2517. Cache SimpleDataFormat objects in bucketwriter for better performance.\n\n(Pal Konyves via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/375143493c79d8c1a05723ea16ccd25374fe7294", "message": "FLUME-2511. Allow configuration of enabled protocols in Avro source and RpcClient.\n\n(Tom White via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/f99adaabcf9d6c6b8f4c8fe5895fe478c8307694", "message": "FLUME-2486. TestExecSource fails on some environments\n\n(Santiago M. Mola via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/622faa6f8812cd751dfad22deaa21bf0aa613111", "message": "FLUME-2499. Include Kafka Message Key in Event Headers.\n\n(Ricky Saltzer via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/f979b2683fc48d85806ae7593ee0e393bd812260", "message": "FLUME-2502. Improve Spool Directory Source's performance by not listing files each time.\n\n(Prateek Rungta via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/a582c100f5f0b368a6dcc77c2b29138ef4b28840", "message": "FLUME-2482. File Channel tests must disable scheduled checkpoint to avoid a race condition with forced checkpoint.\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/aa6fb7fbd9273c905a242c045f99a5b114fb3dc0", "message": "FLUME-1710. JSONEvent.getBody should not return null\n\n(Ashish Paliwal via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/8328bccd41077d457cab064541127fc993e97619", "message": "FLUME-2126. Problem in elasticsearch sink when the event body is a complex field\n\n(Ashish Paliwal via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/f17c7d5022d3e9d112a3843909ad523535fe7e4f", "message": "FLUME-2475. toLowerCase/toUpperCase must specify Locale.\n\n(Santiago M. Mola via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/7ffbd86bc01013ef0a0cbf855243aec5d772a386", "message": "FLUME-2489. Upgrade Apache Curator to 2.6.0\n\n(Santiago M. Mola via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/72b54c9909290fa5b98123b4b0c1332a425c5c64", "message": "FLUME-2472. SyslogUtils fails when system locale is not English\n\n(Santiago M. Mola via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/35cf900017a797e5ff3aedb01f05c88bb3f86ca0", "message": "FLUME-2346. idLogFileMap in Log can lose track of file ids.\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/9968f0fb00f8d25245067242a48040229952e46f", "message": "FLUME-2466. Embedded agent name cannot contain spaces\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/9f0abea027c408669977aa34cd32f5e525bb508b", "message": "FLUME-2495. Kafka Source may miss events when channel is not available\n\n(Gwen Shapira via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/9b2c28d805b89b8b3eac8f082e580e313f44c384", "message": "FLUME-2479. Adding new test files.\n\n(Gwen Shapira via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/e1cb6913f358e4de54d69d1f6f21edecf06a9da2", "message": "FLUME-2479. Kafka property auto.commit.enable is incorrect for KafkaSource.\n\n(Gwen Shapira via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/9f75c40a69fa4404ea2c344fa29285a00eb082fa", "message": "FLUME-2492. Flume's Kafka Source doesn't account time correctly\n\n(Gwen Shapira via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/e1e5acea2fbb04699eba76ea930def38e34f328d", "message": "FLUME-2481. TestFileChannelEncryption fails with System locale other than en_US\n\n(Santiago M. Mola via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/d2cb4ba7524b3dacbce9f19a524a56c786eb3e48", "message": "FLUME-1501. Flume Scribe Source needs unit tests.\n\n(Ashish Paliwal via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/6d0243112fa1ff1cb796ebe158630ae681a2afc8", "message": "FLUME-2463. Add Hive and HBase dataset support in DatasetSink.\n\n(Ryan Blue via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/ef2b089ab70e04e67b70c23416ef7051e992122b", "message": "FLUME-2469. DatasetSink should load dataset when needed, not at startup.\n\n(Ryan Blue via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/26444fd7a8c804b6f2507ee3bf54e1c811ee5168", "message": "FLUME-2470. Kafka Sink and Source config updates. Missed a couple files in the last commit, adding them.\n\n(Gwen Shapira via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/bde2c28211a2d05a9930f1599cb15864ad3cdba0", "message": "FLUME-2470. Kafka Sink and Source must use camel case for all configs.\n\n(Gwen Shapira via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/186a3b808b371cbf2c4b5a47325caa324c7c7a6e", "message": "FLUME-2455. Kafka Sink Documentation.\n\n(Thilina Buddika, Gwen Shapira via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/0bbd0ad7aaad2f592c596608d4e1981aa86eb53d", "message": "FLUME-2250. Kafka Source.\n\n(Frank Yao, Ashish Paliwal, Gwen Shapira via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/75f748cbd101d6efe8463a1c747fb87d2f668091", "message": "FLUME-2251. Kafka Sink.\n\n(Thilina Buddhika, Gwen Shapira via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/acc9651346fe5834cdf5cdf0eb417f624aab1d09", "message": "FLUME-2462. Remove use of deprecated methods in DatasetSink\n\n(Ryan Blue via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/72be82d301895c214a10dd875260ddc308048623", "message": "FLUME-2337. export JAVA_HOME in flume-env.sh.template and increase heap size\n\n(Roshan Naik via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/dd466c7e4623d9f5fd459b59836274d852f58d36", "message": "FLUME-1491. Support fetching configuration from Zookeeper.\n\n(Ashish Paliwal via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/59f0b4df97231acdc0b9769dccb3211c502b36d3", "message": "FLUME-2426. Support interceptors in the Embedded Agent\n\n(Johny Rufus via Hari)"}, {"url": "https://api.github.com/repos/apache/flume/commits/4e08bf7d38bea365d35a6d391d1507a129cc9ba9", "message": "FLUME-2420. HDFS Bucketwriter must access sfWriters map only within synchronized blocks.\n\n(chenshangan via Hari)"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/94963526", "body": "Flume does not accept PRs. Could you file a jira here: https://issues.apache.org/jira/browse/FLUME and submit this as a patch? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/94963526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236263", "body": "We don't do pull requests. Could you please create a patch file and attach it to the jira you created? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236395", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236426", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236453", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236477", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236487", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236502", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236560", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236613", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236632", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236687", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236715", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236739", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236772", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236810", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/145730948", "body": "Yep, a committer will review he patch. Thanks @SeekerResource!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/145730948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/154220137", "body": "This fell of my radar. Sorry! I will look at this next week.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/154220137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/154506174", "body": "Unfortunately we do not accept Pull Requests for flume. Could you submit this as a patch on the jira, please? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/154506174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/185855125", "body": "Until Kudu's APIs are stable and mature, I agree that having it in the Kudu project is probably a good idea. I would be really glad to have it in Flume once Kudu APIs are final and stable (and if testing would be easy).\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/185855125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/188425057", "body": "Could you please submit this as patch against the trunk branch on the jira? We don't do PRs yet on Flume\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/188425057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/225018467", "body": "@kevinconaway Can you please submit this as a patch on the jira? We don't do PRs yet.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/225018467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/225024256", "body": "I am not entirely sure what the ASF policy these days is. Earlier, unless it was attached to a jira the copyright was still with the author, so it had to be a patch on the jira (but with the new github integration, that might have changed - I am not sure, so I will commit the patch from the jira later today).\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/225024256/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/243528951", "body": "+1. Please go ahead and commit.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/243528951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/263682934", "body": "The tests pass fine, but there are checkstyle violations causing the build to fail:\r\n```[ERROR] src/test/java/org/apache/flume/channel/kafka/TestKafkaChannel.java:[900,17] (whitespace) WhitespaceAround: WhitespaceAround: '=' is not preceded with whitespace.\r\n[ERROR] src/test/java/org/apache/flume/channel/kafka/TestKafkaChannel.java:[900,18] (whitespace) WhitespaceAround: WhitespaceAround: '=' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)\r\n[ERROR] src/test/java/org/apache/flume/channel/kafka/TestKafkaChannel.java:[901,57] (whitespace) WhitespaceAround: WhitespaceAround: '=' is not preceded with whitespace.\r\n[ERROR] src/test/java/org/apache/flume/channel/kafka/TestKafkaChannel.java:[901,58] (whitespace) WhitespaceAround: WhitespaceAround: '=' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)\r\n[ERROR] src/test/java/org/apache/flume/channel/kafka/TestKafkaChannel.java:[910] (sizes) LineLength: Line is longer than 100 characters (found 135).\r\n[ERROR] src/test/java/org/apache/flume/channel/kafka/TestKafkaChannel.java:[920,18] (whitespace) WhitespaceAround: WhitespaceAround: '=' is not preceded with whitespace.\r\n[ERROR] src/test/java/org/apache/flume/channel/kafka/TestKafkaChannel.java:[920,19] (whitespace) WhitespaceAround: WhitespaceAround: '=' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)\r\n[ERROR] src/test/java/org/apache/flume/channel/kafka/TestKafkaChannel.java:[925] (sizes) LineLength: Line is longer than 100 characters (found 119).\r\n[ERROR] src/test/java/org/apache/flume/channel/kafka/TestKafkaChannel.java:[927] (sizes) LineLength: Line is longer than 100 characters (found 127).\r\n[ERROR] src/test/java/org/apache/flume/channel/kafka/TestKafkaChannel.java:[931,18] (whitespace) WhitespaceAround: WhitespaceAround: '=' is not preceded with whitespace.\r\n[ERROR] src/test/java/org/apache/flume/channel/kafka/TestKafkaChannel.java:[931,19] (whitespace) WhitespaceAround: WhitespaceAround: '=' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)\r\n[ERROR] src/test/java/org/apache/flume/channel/kafka/TestKafkaChannel.java:[932] (sizes) LineLength: Line is longer than 100 characters (found 133).\r\n[ERROR] src/test/java/org/apache/flume/channel/kafka/TestKafkaChannel.java:[936] (sizes) LineLength: Line is longer than 100 characters (found 114).\r\n[ERROR] src/test/java/org/apache/flume/channel/kafka/TestKafkaChannel.java:[953,17] (whitespace) WhitespaceAround: WhitespaceAround: '=' is not preceded with whitespace.\r\n[ERROR] src/test/java/org/apache/flume/channel/kafka/TestKafkaChannel.java:[953,18] (whitespace) WhitespaceAround: WhitespaceAround: '=' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)```\r\n\r\nThose need to be fixed.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/263682934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/292450677", "body": "+1. LGTM. Please feel free to merge @adenes !", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/292450677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "paliwalashish": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/32ef64dd6b4ee5457832324b3d401a6d724d92bd", "message": "FLUME-2753 Error when specifying empty replace string in Search and Replace Interceptor\n\n(Johny Rufus via Ashish Paliwal)"}, {"url": "https://api.github.com/repos/apache/flume/commits/2ddc36652a781ba57e0f537effa36c3a3d89402e", "message": "Patch for FLUME-2713"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "asdf2014": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/194", "title": "Using `volatile + ConcurrentHashMap + LongAdder` instead of `syncrhonzied + HashMap + AtomicLong` for CounterGroup", "body": "Using `volatile + ConcurrentHashMap + LongAdder` instead of `syncrhonzied + HashMap + AtomicLong` for CounterGroup.\r\n\r\nGet more details from my blog: [yuzhouwan.com](https://yuzhouwan.com/posts/31915#LongAdder).", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/314021797", "body": "LGTM.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/314021797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/126325745", "body": "Maybe this `catch` clause should change into the follow code style...\r\n```java\r\ncatch (InterruptedException ignored)\r\n```", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/126325745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "Guangxian": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/193", "title": "FLUME-3207:Fix some typos in TestReliableSpoolingFileEventReader", "body": "There is a mistake in `testConsumeFileOldestWithLexicographicalComparision`\r\n```java\r\npublic void testConsumeFileOldestWithLexicographicalComparision()\r\n      throws IOException, InterruptedException {\r\n    ReliableEventReader reader =\r\n        new ReliableSpoolingFileEventReader.Builder().spoolDirectory(WORK_DIR)\r\n                                                     .consumeOrder(ConsumeOrder.OLDEST)\r\n                                                     .build();\r\n    File file1 = new File(WORK_DIR, \"new-file1\");\r\n    File file2 = new File(WORK_DIR, \"new-file2\");\r\n    File file3 = new File(WORK_DIR, \"new-file3\");\r\n    Thread.sleep(1000L);\r\n    FileUtils.write(file3, \"New file3 created.\\n\");\r\n    FileUtils.write(file2, \"New file2 created.\\n\");\r\n    FileUtils.write(file1, \"New file1 created.\\n\");\r\n    file1.setLastModified(file3.lastModified());\r\n    file1.setLastModified(file2.lastModified());\r\n    // file ages are same now they need to be ordered\r\n    // lexicographically (file1, file2, file3).\r\n    List<String> actual = Lists.newLinkedList();\r\n    readEventsForFilesInDir(WORK_DIR, reader, actual);\r\n    List<String> expected = Lists.newLinkedList();\r\n    createExpectedFromFilesInSetup(expected);\r\n    expected.add(\"\"); // Empty file was added in the last in setup.\r\n    expected.add(\"New file1 created.\");\r\n    expected.add(\"New file2 created.\");\r\n    expected.add(\"New file3 created.\");\r\n    Assert.assertEquals(expected, actual);\r\n  }\r\n```\r\nThe code is incorrect. To set the same modify time for the three files, code should be:\r\n```java\r\nfile2.setLastModified(file1.lastModified());\r\nfile3.setLastModified(file1.lastModified());\r\n```\r\nTest `testConsumeFileYoungestWithLexicographicalComparision` has the same mistake.", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/192", "title": "FLUME-3205:Remove unnecessary 'synchronized' in ResettableFileInputStream", "body": "I found no concurrent access to ResettableFileInputStream object in flume code.\r\nRemove 'synchronized' will improve performance of SpoolDirectorySource.\r\nTested with a file of 200MB\uff0cwith 'synchronized' it took 9 seconds to read the file.\r\nWithout 'synchronized' it took 7 seconds.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wtx626": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/191", "title": "dataset sink support non-avro", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hanwei002": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/187", "title": "Flume 1.8", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vegiapparao": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/185", "title": "Feature/kafka 2.12 1.0.0", "body": "This PR has the changes to get Apache Flume working with the latest version if Kafka client.  We had issues getting one of the authentication types working with older version of Kafka client.  Its working with Kafka_2.12_1.0.0.\r\n\r\nFew tests are failing (most of the times they are related to VM crash/time out)  in flume-kafka-channel project, I will be fixing them, but I am creating this PR for an early feedback.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/153682549", "body": "Sorry its my IntelliJ settings, we have a policy not to use wildcard imports.  I can revert it back if it is not acceptable.  Please advise.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/153682549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "ishitbatra": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/179", "title": "comments added", "body": "comments are added", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JunLuo": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/176", "title": "add redis channel", "body": "In some cases, we need events can not be lost. But we don't want to install zk & kafka. \r\nTo make event deliver only once and to deploy many flume agents in different nodes but share only one channel, we developed redis channel. \r\nWe already use the redis channel in out production environment, and we want to feed back to flume.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/141261002", "body": "fixed", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141261002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141261019", "body": "fixed", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141261019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141261035", "body": "fixed", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141261035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141261055", "body": "fixed", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141261055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141261084", "body": "fixed", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141261084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141261100", "body": "fixed", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141261100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141874390", "body": "fixed", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141874390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141874412", "body": "fixed", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141874412/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141874529", "body": "fixed", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141874529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141874596", "body": "fixed", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141874596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141876808", "body": "fixed", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/141876808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "movit": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/173", "title": "FLUME-3179 Fix file channel size", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "HbnKing": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/167", "title": "modifying log4j file read repeatedly error", "body": "The  `log4j `files always segmentalized  the file by date and  log file size . but the  `taildirSource` regard it as a new file    .so the  data collected repeatly.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zyfo2": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/159", "title": "FLUME-3149 reduce cpu cost for taildir file source while still maintaining reliability by using posFile in memory channel", "body": "File channel tracks transferred events and use transnational mechanism to make transfer recoverable. However, it increases CPU cost due to frequent system calls like write, read, etc. The Cpu cost could be very high if the transfer rate is high. \r\nIn contrast, Memory channel has no such issue which requires only about 10% of CPU cost in the same environment but it's not recovered if the system is down accidentally.\r\nFor sources like taildir, I propose we could write position file in memory channel to achieve reliability and reduce CPU cost.\r\nAfter testing on my own production environment, CPU usage dropped from 13% to 3% and still maintain reliability.  \uff08Transfer rate: 1Mb/s ,  kafka sink, file channel -> memory channel with pos file)", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/147697229", "body": "sure.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/147697229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/147697258", "body": "sure.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/147697258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/147697373", "body": "Thanks for pointing out. I'll fix it.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/147697373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/147697671", "body": "Perhaps it's better to keep it to be compatible with other channels. I'll add it back and modify the user guide.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/147697671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "dufeng-g": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/150", "title": "Flume 1.7", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lingjinjiang": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/147", "title": "[FLUME-3133] Add a 'ipHeader' config in both tcp and udp syslog source", "body": "When I use the syslog source, I use the \"host\" header to tell where the event come from.However, when change the format of syslog service, the \"host\" header willl be missing.\r\n\r\nSo I add a new config named \"ipHeader\" which looks like the \"portHeader\" in Multiport Syslog TCP Source.\r\nWhen this config is specified, a header will be added.\r\n\r\nFor more detail: \r\nhttps://issues.apache.org/jira/browse/FLUME-3133", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/113", "title": "[FLUME-3068] Ignore hidden files in TaildirMatcher", "body": "[https://issues.apache.org/jira/browse/FLUME-3068](url)\r\nWhen using the taildir to monitor a directory, hidden files in the directory are tailed by the source.\r\nAs the hidden files are often temp files, config files or the files which not want to be tailed, so it's necessary to ignore the hidden file when using the taildir source. ", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/285581971", "body": "Hi @adenes ,\r\nThank you for your advice. Now I add a new configuration option named \"ignoreHiddenFile\", and the default value is \"false\". When set it to \"true\", the hidden file will be ingored.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/285581971/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/292721895", "body": "Hi @adenes , I add the unit test and update the documents. Could you review it?", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/292721895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ShaoboAi": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/145", "title": "bugfix type incompatible", "body": " ChannelSelectorConfigurationType cannot equal  ChannelConfigurationType", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gangken": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/144", "title": "Flume-2786. Fixed nested monitor lockout with polling trial of application lock.", "body": "This issue was discussed at [FLUME-2786](https://issues.apache.org/jira/browse/FLUME-2786), and I'd uploaded a patch for 1.6.0. Now I tried to apply the patch to trunk.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/126344139", "body": "Hi, @asdf2014 Thanks for your suggestion.\r\n\r\nSorry that I'v missed to reset the interrupted flag, so I log a warning message and interrupt the current thread to handle this exception.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/126344139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "lukangping": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/138", "title": "[FLUME-3090]Cassandra Sink module.", "body": "Here is the basic module for cassandra sink, which is used in our product code for collecting specific log event into the cassandra table.\r\nThere are 2 event serialization options: JsonCassandraEventSerializer and RegexCassandraEventSerializer.  For the property configuration, should be specified as:\r\n\r\na1.sinks.k1.type = cassandra\r\na1.sinks.k1.serializer = org.apache.flume.sink.cassandra.JsonCassandraEventSerializer\r\na1.sinks.k1.cassandra.contactPoints = 172.30.10.241\r\na1.sinks.k1.cassandra.username = test\r\na1.sinks.k1.cassandra.password = test\r\na1.sinks.k1.cassandra.keyspace =test_keyspace\r\na1.sinks.k1.cassandra.table = test_table\r\na1.sinks.k1.datetime.format = yyyy/MM/dd HH:mm:ss\r\n\r\nCheers.\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "iaiengxia": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/135", "title": "[FLUME-3095]add capacity unit support in configuration file", "body": "FLUME-3095\r\nBy the way I want to ask, how to modify the **User Guide Documentation**", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/303753673", "body": "Now only the capacity type of configuration with the unit, because the capacity type of the configuration unit is unified by default, can be compatible with the previous use without units, but the time type of the configuration unit is not uniform, there are milliseconds and seconds, if added Unit, then it will not be compatible with the previous use without units, do not know what advice you have?\r\nIn addition, I need to update the **User Guide Documentation**, where is the update?", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/303753673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/305689504", "body": "To be honest, before I write the tool class, I did not find a library that could meet my needs. Thank you for increasing my knowledge @adenes . I read the source code of config.jar and read the development documentation and did some basic Of the test, now listed under the advantages and disadvantages I know:\r\n**Advantages of using config.jar:**\r\nThe solution is more mature and does not need to test the parsing parameters part of the code\r\n\r\n**Disadvantages of using config.jar:**\r\nThere is no separate way to directly parse a string with a unit, you must reload the configuration file, the change is relatively large, not fully compatible with the original program\r\nCan only parse a number and a unit of the parameters, such as 1g500m this with a number of units can not be resolved (do not know if there is such a demand)\r\n\r\n**Advantages of using custom tool classes to parse:**\r\nYou can parse parameters with multiple units\r\nEasy to use, the change is very small (read the time through a static method can be processed), and has been achieved\r\n\r\n**Disadvantages of using custom tool classes to parse:**\r\nRequires complete testing\r\n\r\nWhat do you think?\r\n\r\nFor the time unit, I suggest that some of the recommendations, if I provided in the `Context` class `getDuration ()` method used to resolve the time, if no unit does not need to parse the direct return number, there are units I will analyze the actual unit , Internally stored in milliseconds, but what number of units do I return?\r\n\r\nFor example, the default unit in milliseconds, timeout = 3000, I will return 3000, timeout = 3s (internal resolution into 3000ms), I will return 3000 (return the number of units in milliseconds).But in the default unit for the case of seconds, timeout = 3, I will return 3, timeout = 3s, How much should I return , if according to the above logic I will still return 3000, but the user expects to return the unit for seconds, How do I know the user's expectations unit?\r\n\r\nPerhaps you can use the `getDuration (String key, TimeUnit unit)` method to let the user tell me what unit it needs to return value, but this will lead to another problem, if the default unit is seconds, timeout = 3, I can not know 3 real units and convert them into units that the user expects, because no unit can not simply return the number, and need to be converted into the unit desired by the user.\r\n\r\nIt seems a bit difficult to analyze the time unit, because I need to meet the needs of existing components for time parameter resolution. I can not provide a common way to meet all the needs of the present situation. Based on the current situation, **my suggestion is** , No unit number directly return the number, there are units according to the actual unit analysis, and unified return in milliseconds as a unit of the number, if the user needs seconds, then their own conversion (really, the user needs for the second unit is not the beginning support time units, resulting in too long settings to read up is not convenient)...", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/305689504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "leocook": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/130", "title": "bugfix: when the file is rename, it's pos becomes to 0,and it will be send to\u2026", "body": "when the file is rename, it's pos change to 0,and it will be send to channel repeatedly.It looks like a bug to me,when I collect log what create by log4j etc.", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/303047390", "body": "There is two bugs\uff1a\r\n1.when rename the file,the file will be post to channel form pos 0 repeatedly;\r\n2.If bug NO.1 is fixed\uff0cwhen rename the file,it will not post repeatedly, bug when restart flume agent, the file witch is  renamed will post to channel repeatedly.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/303047390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "scottkp": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/123", "title": "Added support for Filter Queries read from config file", "body": "Added support for optional property in config file for Twitter Source. E.g. if keywords property is provided:\r\n...\r\na1.sources.r1.type = org.apache.flume.source.twitter.TwitterSource\r\na1.sources.r1.keywords = word1,word2,word3\r\n...\r\n\r\nOtherwise, existing functionality of twitterStream.sample() is invoked.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "geoffroyvergne": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/119", "title": "Elasticsearch5 sink", "body": "Hi Flume team,\r\nI worked for my company on this patch to be able to use ElasticSearch 5 with flume.\r\nWe heavy use Flume with Hadoop and ElasticSearch as well.\r\nWe are testing this patch that seams to work properly\r\nI thought it could be helpfull for some of your users\r\n\r\nLet me know if you have any questions\r\n\r\nGeoffroy", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/285891714", "body": "Hi there,\r\nAs you advised, I clean code (remove unusedd comments, and white spaces)\r\nAnd i fixed timezones assertions in the tests\r\n\r\nBR", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/285891714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/285931415", "body": "Hi, \r\nIf you want to pass all tests, you need to have an ElasticSearch instance running in local.\r\nThe standalone node doesn't exists anymore on the release 5.x\r\nThere is a maven dependency test\r\n\r\n<!-- https://mvnrepository.com/artifact/org.elasticsearch.test/framework -->\r\n<dependency>\r\n    <groupId>org.elasticsearch.test</groupId>\r\n    <artifactId>framework</artifactId>\r\n    <version>5.2.1</version>\r\n</dependency>\r\n\r\nBut I didn't implement it yet\r\nI'll try also to take a look at your patch\r\n\r\ncheers", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/285931415/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "hangc0276": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/114", "title": "\"idleFuture\" should reset to \"null\" after idle bucket closed", "body": "If we use \"idleTimeout\" to roll file, once the flush() method called, it will start a delayed thread to close the idle bucketWriter. The delayed thread will call close() method to check whether the \"idleFuture\" is done, and close opened file. If the \"idleFuture\" is running when checking, the idleFuture.isDone() method will return false, and the idleFuture won't be set to \"null\". When the bucketWriter calls flush() on the next time, the \"idleFuture\" is not \"null\" and idleFutrue.cancel(false) method returns false due to the \"idleFuture\" has completed in the last call. So new thread won't be created to close current idle bucketWriter and keeps current file openning.", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/104", "title": "fix \"eventCounter\" increase bug in append()", "body": "In append() function, when the \"batchCounter\" is equal to batchSize, flush() will be called, which may throw exceptions when the network jitter happens on HDFS. Once exception happens, the event appended to the batch will be rollback, but the \"eventCounter\" has already been increased, which will make the \"eventCounter\" wrong value. So, the \"eventCounter\" should be increased after flush() happens.", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/93", "title": "DEFAULT_AUTO_OFFSET_RESET should be \"latest\" according to official do\u2026", "body": "In the official document, the default value of \"kafka.consumer.auto.offset.reset\" is \"latest\", but in the source code, \"DEFAULT_AUTO_OFFSET_RESET\" is \"earliest\".", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/262991661", "body": "With \"earliest\" it would reset the offset when the consumer restarted or rebalanced, which will lead to message repeat consumption", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/262991661/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "chenjianwei3": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/112", "title": "\"[FLUME-3067][Shell]Defalut JAVA_OPTS \"-Xmx20m\" may be conflicted with cuctom defines.\"", "body": "When write a Flume bootstrap shell, set the environment variable FLUME_JAVA_OPTS with the defined values as the min(-Xms) \r\nand max(-Xmx) heap size for the JVM, then call \"bin/flime-ng\" to start Flume. \r\nSucceed to start, but the defalut \"-Xmx20m\" is still in process JVM options.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/104639548", "body": "so careless,   thank you very much.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/104639548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "bharatjiitd": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/110", "title": "FLUME-3023 {variable} substitution doesn't work for property 'fileSuffix'", "body": "Escaped the suffix before passing it to bucket writer. ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/103855128", "body": "ignore this test I will write a new one ... this seems to be incorrect.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/103855128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "umesh9794": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/107", "title": "FLUME-3051:Mention the incompatibility of Kafka source with 0.8.x Kafka brokers", "body": "Please review", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/96", "title": "FLUME-2980 : Automated concurrent Kafka offset migration test", "body": "", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/263585984", "body": "Tests are passing locally on trunk : \r\n\r\nCommand: \r\n` mvn  -DfailIfNoTests=false -Dtest=org.apache.flume.channel.kafka.TestKafkaChannel#testAutomaticOffsetsMigration clean test`\r\n\r\nRunning org.apache.flume.channel.kafka.TestKafkaChannel \r\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 90.408 sec\r\n\r\nResults :\r\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0\r\n[INFO] BUILD SUCCESS\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time: 02:28 min\r\n[INFO] Finished at: 2016-11-29T20:01:25+05:30\r\n[INFO] Final Memory: 523M/1982M\r\n[INFO] ------------------------------------------------------------------------\r\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/263585984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/263847959", "body": "Thanks @harishreedharan for your comment. Actually in the committed TestKafkaChannel.java file there are no such violations which are pointed by Travis. May I request you to verify the first one at least, which is for 900 line and 18 column?", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/263847959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/264338956", "body": "Thanks @simonati for pointing the checkstyle issues. Please review the updated commit. ", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/264338956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/277210335", "body": "Thanks @simonati. Will update the PR soon with synchronized messages amongst Kafka source/channel/sink.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/277210335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/277495318", "body": "@simonati, I have made the suggested changes. Please let me know your thoughts. ", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/277495318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "laxman-ch": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/102", "title": "FLUME-2984: Fix OOM in thrift source. Make transport buffer configurable.", "body": "", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/101", "title": "FLUME-2894: Fix flume components shutdown order", "body": "", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/269207592", "body": "Will close and reopen new pull request will right jira id so that it will be associated with appropriate jira.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/269207592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/271533159", "body": "Thanks for the review @bessbd \r\n\r\nBefore applying the patch that shutdown order is unpredictable and it is causing some data loss in our scenarios (AvroSource, CustomChannel, Kafka Sink)\r\n\r\nAfter applying the patch that shutdown order is fixed (Sources, Sinks,  Channels) and the shutdown issues are solved (hangs, data losses)\r\n\r\nI found it difficult to add a test for the shutdown scenario. Will check if its feasible.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/271533159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sebastian-alfers": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/99", "title": "Read header and footer if available", "body": "This commit fixes an issue, that header-values can not be restored correctly after an event was avro-serialized to disk.\r\n\r\nThe problem was, that deserializing the event from disk, the body of the event contained the binary and the header.\r\n\r\nSee: https://issues.apache.org/jira/browse/FLUME-2942\r\n\r\nDiscussion welcome!", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/270392682", "body": "@adenes Thanks fore your comments, I updated the pr", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/270392682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/271511554", "body": "@adenes any comments?", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/271511554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/273206216", "body": "@adenes ping", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/273206216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/279654216", "body": "@laxman-ch @adenes @simonati anyone likes to push this PR forward? Comments welcome", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/279654216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/281196571", "body": "@simonati Thanks for you comment. Actually, I wrote down all my ideas in the corresponding jira ticket. If you have any particular question feel free to point them out", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/281196571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/286753946", "body": "Push", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/286753946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "cjn082030": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/76", "title": "a EventDeserializer for spooldir", "body": "A simple EventDeserializer for spooldir.A deserializer that parses text lines from a file.Matching line/multiLine against the regular expression.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rolandjohann": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/65", "title": "Kafka Source in combination with Kafka Sink leads to infinite loop", "body": "Because Kafka Source sets some header fields - especially \"topic\" - this leads to unexpected behavior in combination with the Kafka Sink => The messages will be consumed and produced again into that topic until the agent will be shut down.\n\nThe Kafka Sink determines the topic to which the event should be produced to based on a header field \"topic\" and overwrites the configuration of the sink.\nTo (nearly) fix that there are multiple options:\n- update the documentation - done with this PR\n- explicitly allow topic overriding at the kafka sink via a flag\n- write the source topic into another header field - maybe \"kafka.topic\"\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "whitelilis": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/62", "title": "bugfix: when log rotate, taildir source will treat it as new file, so\u2026", "body": "\u2026 duplicate events\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "irwinsun": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/46", "title": "Trunk", "body": "(Jeff Holoman via Jarek Jarcec Cecho)\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ryanpersaud": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/45", "title": "Fixes to address 2K message size limit when using SyslogUDPSource.", "body": "Please see https://issues.apache.org/jira/browse/FLUME-2885.  Currently, the SyslogUDPSource truncates messages > 2K.  With this fix, the default behavior remains the same (2K is used for the buffer size), but if a user specifies a value for datagramSize in the flume configuration, then that size is used instead.  If we want to use AdaptiveReceiveBufferSizePredictor to avoid allocating buffers that are larger than necessary, 'someone' is going to have to develop a more comprehensive fix.  This at least allows for udp syslog users with messages larger than 2K to process their messages without truncation.\n\nI have deployed this fix in two environments where syslog messages can be larger than 2K, and it works as expected.\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/197018451", "body": "Hmm, it occurs to me that I should probably set datagramSize to the min of datagramSize and maxsize.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/197018451/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "skadilover": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/43", "title": "modify rotate way.", "body": "customer can rotate file as :\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/flume/comments/16637387", "body": "custmer can rotae file as\n\norder.log\norder2016-03-11-1.log\norder2016-03-11-2.log\norder2016-03-11-3.log\n\nthis may be better\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/comments/16637387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "robin7m": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/41", "title": "FLUME-2459 Spooling Directory Source support for gzip files", "body": "Flume has a fantastic source for spooling files, however, many systems store relevant files as compressed files.This change enables flume spooling directory Source to read gzip (.gz) compressed files just as if they were plain text (e.g. read line by line).\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "phlantin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/38", "title": "Flume 2866", "body": "This resolves FLUME-2866.\n\nThis adds a property \"fileTimeMinOffsetSeconds\" in the Spooling Directory Source. This prevents processing of files that are not older or newer than the amount of seconds defined by this property. The default value is \"0\" seconds, which preserves current behavior.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "arae": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/36", "title": "Kudu Sink for Flume", "body": "https://issues.cloudera.org/browse/KUDU-431\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/183487760", "body": "Hi Todd.\n\nI\u2019ll contact the Kudu guys and see what their preference is. Perhaps for now Kudu repos would be a better place for hosting these? Because Kudu is at v0.6 and not yet stable in many way.\n\nAra.\n\n> On Feb 12, 2016, at 1:01 PM, Todd Lipcon notifications@github.com wrote:\n> \n> Hi Ara. Thanks for contributing this!\n> \n> I haven't taken a look at the code quite yet, but one quick thought: would it be best to have this code hosted in the Flume project or in the Kudu project? I can think of a couple pros/cons:\n> \n> Pros for contributing as part of the Flume repo:\n> \n> I think this is the \"standard\" -- eg the flume repo already has sinks for many other systems like elastic search, hbase, kafka, etc. So, seems like it would make sense to put Kudu in there as well.\n> Flume users will have more of a \"batteries included\" experience -- no need to muck with classpaths or move jars into place, etc, to write to Kudu.\n> Pros for hosting as part of the Kudu repo:\n> \n> It's likely that, since Flume is a relatively stable/mature project, its APIs aren't going to break. Kudu is still in beta with new APIs and capabilities being added reasonably rapidly. Versioning the flume sink inside the Kudu repo will make it easier to (a) ensure that Kudu changes don't break the flume sink, and (b) quickly evolve the Flume sink to take advantage of those new features.\n> Currently, the Kudu project doesn't export any \"minicluster\" JAR for use by external projects. So, it will be impossible to do any integration testing of the Kudu sink if it's part of the Flume project. On the other hand, if we include it in the Kudu repo, we already have build/test infrastructure that runs a local minicluster and we could easily write some simple integration tests.\n> Any thoughts on this? Would also like to solicit thoughts from the rest of the Flume community as well. Thanks.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub https://github.com/apache/flume/pull/36#issuecomment-183487076.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/183487760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/183488593", "body": "Oh ok :)\n\nAra.\n\n> On Feb 12, 2016, at 1:05 PM, Todd Lipcon notifications@github.com wrote:\n> \n> Hey Ara. I am one of the Kudu guys :) Let's see what the Flume guys think, though.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub https://github.com/apache/flume/pull/36#issuecomment-183488015.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/183488593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/190851198", "body": "Sure.\n\nAra.\n\n> On Mar 1, 2016, at 3:52 AM, Mike Percy notifications@github.com wrote:\n> \n> Hi @arae https://github.com/arae I'm a committer on both projects and I agree with @toddlipcon https://github.com/toddlipcon and @jarcec https://github.com/jarcec that this would be good to have as part of Kudu for now. That would also allow us to test it using the MiniCluster. Right now Kudu doesn't ship MiniCluster binaries in a way that is downloadable via Maven (although I believ the java classes for the MiniCluster are be available via Maven). Would you mind squashing your PR into one commit and submitting a Gerrit CR to Kudu? Instructions are here: http://getkudu.io/docs/contributing.html http://getkudu.io/docs/contributing.html\n> \u2014\n> Reply to this email directly or view it on GitHub https://github.com/apache/flume/pull/36#issuecomment-190686416.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/190851198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/190997591", "body": "Done.\n\nhttp://gerrit.cloudera.org:8080/2383\n\nAra.\n\nOn Mar 1, 2016, at 3:52 AM, Mike Percy <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nHi @araehttps://github.com/arae I'm a committer on both projects and I agree with @toddlipconhttps://github.com/toddlipcon and @jarcechttps://github.com/jarcec that this would be good to have as part of Kudu for now. That would also allow us to test it using the MiniCluster. Right now Kudu doesn't ship MiniCluster binaries in a way that is downloadable via Maven (although I believ the java classes for the MiniCluster are be available via Maven). Would you mind squashing your PR into one commit and submitting a Gerrit CR to Kudu? Instructions are here: http://getkudu.io/docs/contributing.html\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/apache/flume/pull/36#issuecomment-190686416.\n\n---\n\nThis message is for the designated recipient only and may contain privileged, proprietary, or otherwise confidential information. If you have received it in error, please notify the sender immediately and delete the original. Any other use of the e-mail by you is prohibited. Thank you in advance for your cooperation.\n\n---\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/190997591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "githubyh": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/35", "title": "FLUME-2876 ElasticSearchSink: indexnameBuilderContext.putAll bug fixes", "body": "ElasticSearchSink: indexnameBuilderContext.putAll bug fixes\norg.apache.flume.sink.elasticsearch.ElasticSearchSink \nindexnameBuilderContext.putAll wrong serializerContext.putAll\n[https://issues.apache.org/jira/browse/FLUME-2876](url)\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "branky": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/33", "title": "fix Flume NG wiki url", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "praste": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/32", "title": "Size based rolling support for file sink", "body": "This fixes #FLUME-2856.\nAlso added support use a fixed naming pattern for files.\nSupport for allowing to delete old sink files is also added.\n\nUpdated documentation for above mentioned changes.\n\n To support `maxHistory` feature (i.e. to delete older files) I had to be able to predict file names. I introduced new required property for `RollingFileSink` called `fileName`. This is the only backwards incompatible change from end users point of view. I have also made a couple of backwards incompatible changes to `PathManager` class. However `PathManager` class is not being used by any class other than `RollingFileSink` class.\n\nI am open to rewrite some of the changes if people think refactoring will cause any issues.\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/172855784", "body": "BTW I don't know if I was supposed to send a pull request of attach patch to the JIRA. \nIt's been more than a month since I have attached patch to the  [FLUME-2856](https://issues.apache.org/jira/browse/FLUME-2856). I have also sent a couple of message to flume-dev list and tried sending emails to flume a couple of moderators/contributors email addressed documented on the flume's team page, with no avail.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/172855784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/175865794", "body": "any advise????\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/175865794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Svti": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/30", "title": "Create JsonHbaseEventSerializer.java", "body": "Add Hbase JSON EventSerializer\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "milleka2": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/28", "title": "allow poorly formatted events/data to be dropped", "body": "I ran into an issue where some of the raw data going into ElasticSearch was malformed (fields didn't match the data mapping), which ES rejected as part of the bulk insert. The Flume ES sink currently handles this by just sending the record over and over (hoping that maybe ES will just accept it later). Unfortunately, this creates a LOT of log traffic in ES default log settings AND it backed up our flume channel, because the data doesn't getting any better by blindly retrying it.\n\nThis patch allows users to choose between 3 options on what to do when bulk insert errors occur:\n1) retry until it somehow magically works (current default within apache flume)\n2) log the error message, then drop it\n3) drop it silently.\n\nIn our case, we just want to drop it, because losing a few records is worth it to keep our data flows moving. However, it would be better to have a more advanced option that can account for times when the ES server is down. Unfortunately, the ES client API doesn't allow for this flexibility to know the type of error, so this was the best option available at the time.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "magicluo0755": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/26", "title": "startup flume error if the plugins added in plugins.d directory", "body": "On windows platform, running flume-ng.cmd  will be faild  if you put some plugins into plugins.d dierctory.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "darionyaphet": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/25", "title": "check message size before send to kafka", "body": "Kafka Sink fetch message from channel and use Kafka Producer to send message to Kafka Broker . When Kafka Broker's config `message.max.bytes` and message is too long Flume Kafka Sink will failed to send message. \n\nI add a check before message send to Kafka Broker . The too long message will be discard and record log with message size.\nYou also can config the messageMaxSize in properties file.\n\nI Create a JIRA Ticket:https://issues.apache.org/jira/browse/FLUME-2837\n\nthanks\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/154608278", "body": "hi @harishreedharan  I had submit this patch at jira .  thank you ~\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/154608278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "gherreros": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/24", "title": "FLUME-2781 proposed implementation", "body": "Implemented a tiny change so \"put\" in the channel is consistent with \"take\". If parseAsFlumeEvent is false it uses the event body text instead of an Avro Flume event object.\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/137407151", "body": "Added patch file to the ticket. \n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137407151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/156030088", "body": "Please use Jira to report the issue.\nFrom a quick look the issue is that when the channel is stopped, it gets closed and queueRemaining is set to null. So when it is restarted the variable is not initialized again.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/156030088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "fangjian0423": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/20", "title": "fixed typo and close Serializer in HBaseSink", "body": "", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/121512503", "body": "hello, should we close the serializer in HBaseSink, isn't it?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/121512503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137329422", "body": "yeah, I created a issue in jira before: https://issues.apache.org/jira/browse/FLUME-2745.   But I can not assign to anybody.  Thanks\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137329422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "chenzhiguo": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/19", "title": "Fix Configuration failed bug.", "body": "Fix Configuration failed bug.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lucarosellini": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/18", "title": "Extension-friendly HttpSource", "body": "This patch allows third-party to developers extend HttpSource behavior easily, without having to reimplement the whole thing.\n\nMore specifically:\n- Adds an hook to customize `org.mortbay.jetty.servlet.Context`.\n- Delegates the HttpServlet instance creation to a protected factory method.\n- Changes FlumeHttpServlet visibility to `protected`, to let third party developers extend from it.\n- Adds an hook in `FlumeHTTPServlet` to customize `HttpServletResponse` before it is flushed.\n\nWe developed this patch because we had to add a custom servlet filter to the Jetty context.\n\nHaving this patch applied, a third-party developer could easily extend HttpSource like this:\n\n```\npublic class CustomHTTPSource extends HTTPSource {\n\n    @Override\n    protected void customizeServletContext(Context context) {\n        super.customizeServletContext(context);\n\n        context.addFilter(MyCustomHttpServletFilter.class,\"/*\",0);\n    }\n\n    @Override\n    protected HttpServlet getServlet() {\n        return new KeedioFlumeHTTPServlet();\n    }\n\n    protected class KeedioFlumeHTTPServlet extends FlumeHTTPServlet{\n        @Override\n        protected void customizeServletResponse(HttpServletRequest request, HttpServletResponse response) {\n            super.customizeServletResponse(request, response);\n\n            response.addHeader(\"Accept-Encoding\",\"...\");\n        }\n    }\n} \n```\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/137357957", "body": "@harishreedharan attached the patch to a new jira issue: https://issues.apache.org/jira/browse/FLUME-2782\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137357957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/154022784", "body": "Hi @harishreedharan, did you have the chance to take a look at this? \n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/154022784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "SeekerResource": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/14", "title": "Add a simple split interceptor ", "body": "a simple split interceptor , aims to deal with the situation as follows:\n\nthe source data like this:\n         \u201c\n               1,tom,boy,13\n               2,lili,girl,14\n               3,jack,boy,10\n               ...\n         \u201d\nand i hope to sink source data into two different hdfs directories named by boy and girl like this:\n         \u201c\n               hdfs://xxxx/sink/boy/....\n               hdfs://xxxx/sink/girl/....\n         \u201d\n\nwe can use this interceptor to accomplish this goal.\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/145380437", "body": "@harishreedharan\nhi harishreedharan, i have created FLUME-2781 and attached the patch, is that ok? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/145380437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Huangxianjun": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/13", "title": "This is a test,sorry for your time!", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sziep": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/12", "title": "Fix tests when default locale is not english", "body": "When running the tests on a system with a non english / us locale, some tests fail.\nAn explicit Locale is used now for the respective tests.\nReadme was updated to note that an increased ulimit is needed for the tests to run.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "schmiegelow": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/11", "title": "added ProxySupport for TwitterSource", "body": "This is a fix proposal for the following issue\nhttps://issues.apache.org/jira/browse/FLUME-2618\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bijugs": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/10", "title": "Changes to accept directory which stores config file as one of the param", "body": "Fix for [FLUME-2573](https://issues.apache.org/jira/browse/FLUME-2573)\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "guestmetrics": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/9", "title": "Update KafkaSource.java", "body": "Key is not always defined by a producer. In case of null key, this code blows up.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "PieterJanVanAeken": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/4", "title": "Add methods to retrieve information about the file", "body": "The getFileName() and getFilePath() methods are useful for a custom  deserializer that works with a ResettableFileInputStream. At the moment, there is no way in a Deserializer to find out which file it is processing. The other option is to make the FileInfo available in the Deserializer but imo this looks like the better of the two options.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "keyki": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/39106189", "body": "We are planning to start flume agents dynamically and it comes handy to be able to override parameters of a base configuration file without actually touching and modifying it, for example change the bind port.  \n\nExample:  \n\nagent.sources.avro-collection-source.bind = localhost\nagent.sources.avro-collection-source.port = 50000\nagent.sinks.hdfs-sink.hdfs.path = hdfs://localhost:9000/flume\nagent.channels.memoryChannel.capacity = 20000\n\nflume-ng agent -n agent -f flume.conf \n-o avro-collection-source.bind=0.0.0.0 \n-o avro-collection-source.port=30000\n-o hdfs-sink.hdfs.path=hdfs://localhost:9000/data\n-o memoryChannel.capacity=30000\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/39106189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/39115051", "body": "Hi Jarcec,\n\nHere is the link, https://issues.apache.org/jira/browse/FLUME-2351\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/39115051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "martinschaef": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/94966415", "body": "I'm not familiar with jira ... I guess I created an issue and not a patch. But its a one-liner anyway.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/94966415/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "guitoun3": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/137381098", "body": "Ok, Jira is there : https://issues.apache.org/jira/browse/FLUME-2755\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137381098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "omallassi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/137658555", "body": "@harishreedharan done there https://issues.apache.org/jira/browse/FLUME-2784 \n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137658555/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "alvarogala": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/138620578", "body": "Hi gherreros, I have been fighting this trouble for some days. Thank you for the patch!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/138620578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "bwzhang2011": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/155984532", "body": "please discard such merge operation. for I just want to submit some issue.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/155984532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/156118786", "body": "@gherreros, thanks for feed back.  when I review the code of SpillableMemoryChannel for the test part , it also failed for the same reason while re-configuring the SpillableMemoryChannel just as you pointed out for the step:  channel.stop()  then channel.start() it would throw the exception for open is not true while checking.  what's the more, when such begins, it will nonstop unless I restart so I wonder how could I resolve such problem for I don't want to restart the whole flume. and please help me and leave me some advice for how to use SpillableMemoryChannel well.  \n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/156118786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "manzhizhen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/171851446", "body": "You may be able to add a fourth option\uff0cthat is 4) log the error message, then make the transmitted data is written to a file specified by the user. \nThis will have a high demand for data services reissue opportunity retries.(_^__^_) \n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/171851446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "guodatou": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/178356625", "body": "Isn't like on linux you should put make an independent directory in plugins.d like this:\n\n$FLUME_HOME/plugins.d/pluginName/lib/yourPlugin\n$FLUME_HOME/plugins.d/pluginName/libext/yourPluginDep\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/178356625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "toddlipcon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/183487076", "body": "Hi Ara. Thanks for contributing this!\n\nI haven't taken a look at the code quite yet, but one quick thought: would it be best to have this code hosted in the Flume project or in the Kudu project? I can think of a couple pros/cons:\n\nPros for contributing as part of the Flume repo:\n- I think this is the \"standard\" -- eg the flume repo already has sinks for many other systems like elastic search, hbase, kafka, etc. So, seems like it would make sense to put Kudu in there as well.\n- Flume users will have more of a \"batteries included\" experience -- no need to muck with classpaths or move jars into place, etc, to write to Kudu.\n\nPros for hosting as part of the Kudu repo:\n- It's likely that, since Flume is a relatively stable/mature project, its APIs aren't going to break. Kudu is still in beta with new APIs and capabilities being added reasonably rapidly. Versioning the flume sink inside the Kudu repo will make it easier to (a) ensure that Kudu changes don't break the flume sink, and (b) quickly evolve the Flume sink to take advantage of those new features.\n- Currently, the Kudu project doesn't export any \"minicluster\" JAR for use by external projects. So, it will be impossible to do any integration testing of the Kudu sink if it's part of the Flume project. On the other hand, if we include it in the Kudu repo, we already have build/test infrastructure that runs a local minicluster and we could easily write some simple integration tests.\n\nAny thoughts on this? Would also like to solicit thoughts from the rest of the Flume community as well. Thanks.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/183487076/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/183488015", "body": "Hey Ara. I am one of the Kudu guys :) Let's see what the Flume guys think, though.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/183488015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mlmhl": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/236102565", "body": "Hi, thanks for good advise, I will add a test soon.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/236102565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "styg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/238852898", "body": "I had made a simple implementation, deal directly with gz data source:\nhttps://github.com/styg/bumblebee-ETL/tree/master/src/main/java/com/gsta/bigdata/etl/flume\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/238852898/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "awesomehailong": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/254207537", "body": "No\n\n\u53d1\u81ea\u6211\u7684 iPhone\n\n> \u5728 2016\u5e7410\u670817\u65e5\uff0c15:30\uff0c\u722a\u4e91 notifications@github.com \u5199\u9053\uff1a\n> \n> You can view, comment on, or merge this pull request online at:\n> \n>   https://github.com/apache/flume/pull/73\n> \n> Commit Summary\n> \n> FLUME-1666. Oops, forgot new test in previous commit\n> FLUME-2210. UnresolvedAddressException when using multiple hostNames in Elasticsearch sink configuration\n> FLUME-2192. AbstractSinkProcessor stop incorrectly calls start\n> FLUME-1851. Fix grammatical error in Flume User Guide.\n> FLUME-2206. ElasticSearchSink ttl field modification to mimic Elasticsearch way of specifying TTL\n> FLUME-2229. Backoff period gets reset too often in OrderSelector\n> FLUME-2065. Regex Extractor Interceptor config agent name inconsistent with rest of docs\n> FLUME-2233. MemoryChannel lock contention on every put due to bytesRemaining Semaphore\n> FLUME-2231. Add details in Flume Ganglia config in User Guide\n> FLUME-2235. idleFuture should be cancelled at the start of append\n> FLUME-2255. Correctly handle ChannelExceptions in SpoolingDirectorySource\n> FLUME-2262. Log4j Appender should use timeStamp field not getTimestamp, which was not available in older log4j versions.\n> FLUME-2238. Provide option to configure worker threads in NettyAvroRpcClient\n> FLUME-2209. AsyncHBaseSink will never recover if the column family does not exists for the first start.\n> FLUME-2217. Add option to preserve all Syslog headers in syslog sources\n> FLUME-2266. Update Morphline Sink to kite-0.10.0.\n> FLUME-2155. Index the Flume Event Queue during replay to improve replay time.\n> FLUME-1679. Add dependency on Guava to flume-ng-elasticsearch-sink POM\n> FLUME-2264. Log4j Appender + Avro Reflection on string results in an invalid avro schema\n> FLUME-2239. Clarify File Channel's dataDirs setting in User Guide\n> FLUME-2267. Increase default transactionCapacity for FileChannel from 1000 to 10000\n> FLUME-2056. Allow SpoolDir to pass just the filename that is the source of an event\n> FLUME-2270. Fix Twitter Source documentation.\n> FLUME-2278. Incorrect documentation for write-timeout of File Channel\n> FLUME-2265. Closed bucket writers should be removed from sfwriters map\n> FLUME-2275. Improve scalability of MorphlineInterceptor under contention\n> FLUME-2289. Disable maxUnderReplication test which is extremely flakey\n> FLUME-2292. Upgrade mapdb to 0.9.8\n> FLUME-2259. Transaction closure not happening for all the scenario in HBaseSink.\n> FLUME-2301. Update HBaseSink tests to reflect sink returning backoff only on empty batches\n> FLUME-2294. Add a sink for Kite Datasets.\n> FLUME-2303. HBaseSink tests can fail based on order of execution\n> FLUME-2302. TestHDFS Sink fails with Can't get Kerberos realm'\n> FLUME-2304. DatasetSink test fails unexpectedly.\n> FLUME-1892. Fix NullPointerException in IRC Sink.\n> FLUME-2305. BucketWriter#close must cancel idleFuture\n> FLUME-2312. Add utility for adorning HTTP contexts in Jetty\n> FLUME-2311 - Use standard way of finding queue/topic (Hugo Lassi\u00e8ge via Brock Noland)\n> FLUME-2130. Handle larger payloads via SyslogUDPSource\n> FLUME-2314. Upgrade to Mapdb 0.9.9\n> FLUME-2307. Remove Log writetimeout\n> FLUME-2319. Fix Ganglia documentation error\n> FLUME-2325. Bucketwriter must be permanently closed only on idle and roll timeouts.\n> FLUME-2320. Fixed Deadlock in DatasetSink\n> FLUME-1227. Introduce Spillable Channel.\n> FLUME-2334: Upgrade Asynchbase to 1.5.0 as this include hbase 0.96.x support\n> FLUME-2328: FileChannel Dual Checkpoint Backup Thread not released on Application stop\n> FLUME-2323: Morphline sink must increment eventDrainAttemptCount when it takes event from channel\n> FLUME-2283: Spool Dir source must check interrupt flag before writing to channel\n> FLUME-2329: Add an alias for the Morphline Solr Sink\n> FLUME-2324: Support writing to multiple HBase clusters using HBaseSink\n> FLUME-2335: TestHBaseSink#testWithoutConfigurationObject() must delete the table at the end of the test\n> FLUME-2336: HBase tests that pass in ZK configs must use a new context object\n> FLUME-2338. Support coalescing increments in HBaseSink.\n> Revert \"FLUME-2338. Support coalescing increments in HBaseSink.\"\n> FLUME-2338. Support coalescing increments in HBaseSink.\n> FLUME-2243. Avro Source should name threads instead of using generic names.\n> FLUME-2252. Add null check before closing table in HbaseSink\n> FLUME-2343. Add Kerberos and user impersonation support to Dataset Sink.\n> FLUME-2151. Windows: Update TestExecSource to use native commands on Windows\n> FLUME-2263. Bump Hadoop 2 version to 2.3.0\n> FLUME-2345. Update to Kite 0.12.0 dependency\n> FLUME-2225. Elasticsearch Sink for ES HTTP API\n> FLUME-2347: Add FLUME_JAVA_OPTS which allows users to inject java properties from cmd line\n> FLUME-2309. Spooling directory should not always consume the oldest file first.\n> FLUME-2350. Consume Order tests need to space out file creation.\n> FLUME-2357. HDFS sink should retry closing files that previously had close errors\n> FLUME-2181 - Optionally disable File Channel fsyncs (Hari via Brock)\n> FLUME-2381: Upgrade Hadoop version in Hadoop 2 profile to 2.4.0\n> FLUME-2368. Update CHANGELOG for 1.5 release\n> FLUME-2366. Update LICENSE\n> FLUME-2366: Removing -SNAPSHOT from 1.5 branch\n> Adding default version for thrift\n> FLUME-2368. Update CHANGELOG.\n> FLUME-2366. Update RELEASE NOTES for Flume 1.5\n> FLUME-2366. Updating Versions in 1.6 branch\n> Restore correct Asynchbase version\n> FLUME-2245. Pre-close flush failure can cause HDFS Sinks to not process events.\n> FLUME-2273 - Add handling for header substitution in ElasticSearchSink\n> FLUME-2397: HBase-98 compatibility\n> FLUME-2389. Spillable Memory Channel Example is incorrect\n> Updating RELEASE-NOTES for Flume 1.5.0.1\n> FLUME-2399. Update CHANGELOG for Flume 1.5.0.1\n> FLUME-2400. Dataset Sink is not built in hbase-98 profile\n> FLUME-2359. Update CHANGELOG to include FLUME-2400\n> FLUME-2399. Minor update to Release notes.\n> FLUME-2365. Add DOAP file for Flume.\n> FLUME-2024. Add ExecSource flush timeout to Flume User Guide\n> FLUME-2408. Remove FLUME-1899 from CHANGELOG.\n> FLUME-2416: Use CodecPool in compressed stream to prevent leak of direct buffers\n> FLUME-2404. Make ScribeSource read buffer and max frame size configurable\n> FLUME-2401. Optionally compress backup checkpoint.\n> FLUME-1793. Unit test TestElasticSearchLogStashEventSerializer fails with IBM JDK\n> FLUME-2431. Add simple regex search-and-replace interceptor\n> FLUME-2432. Update Kite dependency to 0.15.0.\n> FLUME-2441. HTTP Source Unit tests fail on IBM JDK 7\n> FLUME-1920. Remove Hadoop dependency from integration tests\n> FLUME-2439. Upgrade Dataset sink to use Kite 1.5.0\n> FLUME-2438. Make Syslog source message body configurable\n> FLUME-2425 - FileChannel should trim data and checkpoint directories (Johny Rufus via Brock Noland)\n> FLUME-2450 - Improve replay index insertion speed. (Hari via Brock)\n> FLUME-2420. HDFS Bucketwriter must access sfWriters map only within synchronized blocks.\n> FLUME-2426. Support interceptors in the Embedded Agent\n> FLUME-1491. Support fetching configuration from Zookeeper.\n> FLUME-2337. export JAVA_HOME in flume-env.sh.template and increase heap size\n> FLUME-2462. Remove use of deprecated methods in DatasetSink\n> FLUME-2251. Kafka Sink.\n> FLUME-2250. Kafka Source.\n> FLUME-2455. Kafka Sink Documentation.\n> FLUME-2470. Kafka Sink and Source must use camel case for all configs.\n> FLUME-2470. Kafka Sink and Source config updates. Missed a couple files in the last commit, adding them.\n> FLUME-2469. DatasetSink should load dataset when needed, not at startup.\n> FLUME-2463. Add Hive and HBase dataset support in DatasetSink.\n> FLUME-1501. Flume Scribe Source needs unit tests.\n> FLUME-2481. TestFileChannelEncryption fails with System locale other than en_US\n> FLUME-2492. Flume's Kafka Source doesn't account time correctly\n> FLUME-2479. Kafka property auto.commit.enable is incorrect for KafkaSource.\n> FLUME-2479. Adding new test files.\n> FLUME-2495. Kafka Source may miss events when channel is not available\n> FLUME-2466. Embedded agent name cannot contain spaces\n> FLUME-2346. idLogFileMap in Log can lose track of file ids.\n> FLUME-2472. SyslogUtils fails when system locale is not English\n> FLUME-2489. Upgrade Apache Curator to 2.6.0\n> FLUME-2475. toLowerCase/toUpperCase must specify Locale.\n> FLUME-2237. Example config in User Guide to use same notation for Agent name\n> FLUME-2126. Problem in elasticsearch sink when the event body is a complex field\n> FLUME-1710. JSONEvent.getBody should not return null\n> FLUME-2482. File Channel tests must disable scheduled checkpoint to avoid a race condition with forced checkpoint.\n> FLUME-2502. Improve Spool Directory Source's performance by not listing files each time.\n> FLUME-2499. Include Kafka Message Key in Event Headers.\n> FLUME-2486. TestExecSource fails on some environments\n> FLUME-2511. Allow configuration of enabled protocols in Avro source and RpcClient.\n> FLUME-2517. Cache SimpleDataFormat objects in bucketwriter for better performance.\n> FLUME-2520: HTTP Source should be able to block a prefixed set of protocols.\n> FLUME-2500: Add a channel that uses Kafka\n> FLUME-2523. Document Kafka channel\n> FLUME-2533: HTTPS tests fail on Java 6\n> FLUME-2525. Handle a zero byte .flumespool-main.meta file for the spooldir source.\n> Updating CHANGELOG for 1.5.1 release\n> Preparing for Flume-1.5.1 Release\n> FLUME-2505: Test added in FLUME-2502 is flaky\n> FLUME-2497. Support fractional seconds in Syslog timestamps\n> FLUME-2385. Remove incorrect log message at INFO level in Spool Directory Source.\n> FLUME-2548: Enable SSLv2Hello for Avro Source and NettyAvroRpcClient\n> FLUME-2549: Enable SSLv2Hello for HttpSource\n> FLUME-2551. Add dev-support directory to source tarball.\n> Update RELEASE-NOTES for 1.5.2\n> Update CHANGELOG for 1.5.2\n> FLUME-2538. TestResettableFileInputStream fails on JDK 8.\n> FLUME-2509. Add description for properties in Failover Sink Processor\n> FLUME-1594. Document JMX options\n> FLUME-1521. Document the StressSource\n> FLUME-2487. SyslogParser has rounding errors in timestamp parsing\n> FLUME-2480. Typo in file channel exception: \"Usable space exhaused\"\n> FLUME-2246. Make event data size configurable for logger sinker\n> FLUME-2560. Add Kafka Channel to dist tarballs.\n> FLUME-2557. Make DatasetSink work with Kerberos\n> FLUME-2488: TestElasticSearchRestClient fails on Oracle JDK 8\n> FLUME-2558. Update javadoc for StressSource\n> FLUME-2373. Support TBinaryProtocol in Thrift RPC.\n> FLUME-2556. BucketWriter DateFormat test fails intermittently.\n> FLUME-2578. Kafka source throws NPE if Kafka record has null key\n> FLUME-2562. Add metrics for Kafka Source, Kafka Sink and Kafka Channel.\n> FLUME-2568. Additional fix for TestReliableSpoolingFileEventReader\n> FLUME-2594: Close Async HBase Client if there are large number of consecutive timeouts\n> FLUME-2586. HDFS Sink must try to rename files even if close fails.\n> FLUME-2591. DatasetSink 2.0\n> FLUME-1334. Windows startup scripts.\n> FLUME-2443: org.apache.hadoop.fs.FSDataOutputStream.sync() is deprecated in hadoop 2.4\n> FLUME-1734. Add a Hive Sink based on Hive Streaming support.\n> FLUME-2592. Fix help message in File Channel Integrity Tool.\n> FLUME-2574. SSL support for Thrift RPC.\n> FLUME-2214. File Channel Integrity Toll documentation.\n> FLUME-2633: Update Kite dependency to 1.0.0\n> FLUME-2570. Add option to not pad date fields.\n> FLUME-2631. End to End authentication in Flume\n> FLUME-2639. SecureThriftRpcClient client privileged calls throw IllegalAccessError\n> FLUME-2642. Limit the number of calls to UGI.checkTGTAndRelogin method.\n> FLUME-2626. Remove trustmanager-type from Thrift RPC client and Thrift Source.\n> FLUME-2630: Update documentation for Thrift SRc/Sink SSL support\n> FLUME-2624 : Improve Hive Sink performance\n> FLUME-2657: Upgrade to Hive 1.0\n> FLUME-1934. Spooling Directory Source dies on encountering zero-byte files.\n> FLUME-2654. Clarify error message in MemoryChannel when byte capacity is reached.\n> FLUME-2613. Add support in FileChannelIntegrityTool to remove invalid events from the channel.\n> FLUME-2649. Elasticsearch sink doesn't handle JSON fields correctly\n> FLUME-2664. Site profile fails due to dependency issues\n> FLUME-2635. Documentation for zookeeper dynamic configuration in flume\n> FLUME-2645. ipFilter.rules property name is wrong\n> FLUME-2595. Add option to checkpoint on file channel shutdown\n> FLUME-2668. Document SecureThriftRpcClient/SecureRpcClientFactory in Flume Developer Guide\n> FLUME-2148. Windows : Add flume-env.ps1\n> FLUME-2665. Update documentation for hdfs.closeTries based on FLUME-2586\n> FLUME-2670. Modify dependencies to not pull hadoop/hive related jars\n> FLUME-2673. Remove unused import in TestLog\n> FLUME-2658. Upgrade to Hbase 1.0\n> FLUME-2675. Update pom.xml version in trunk and 1.7 branch\n> FLUME-2676. Update flume docs and release notes to 1.7-SNAPSHOT in trunk and 1.7 branch\n> FLUME-2652. Documented transaction handling semantics incorrect in developer guide.\n> FLUME-2678. Refactor Hive dependencies.\n> FLUME-2679. Make hbase-1 the default profile\n> FLUME-2683. Update License file for 1.6 release\n> FLUME-2649. Elasticsearch sink doesn't handle JSON fields correctly\n> FLUME-2690. Update ChangeLog for 1.6 Release\n> FLUME-2690. Update ChangeLog for 1.6 Release\n> FLUME-2215. ResettableFileInputStream can't support ucs-4 character\n> FLUME-2575. FLUME-2548 brings SSLv2Hello back for Avro Sink, but UG says it is one of the protocols to exclude\n> FLUME-2729. Allow pollableSource backoff times to be configurable\n> Patch for FLUME-2713\n> FLUME-2732. Make maximum tolerated failures before shutting down and recreating client in AsyncHbaseSink configurable\n> FLUME-2738. Fix file descriptor leak in AsyncHBaseSink when HBase cluster goes down.\n> FLUME-2737: Documentation for Pollable Source config parameters introduced in FLUME-2729\n> FLUME-2628. Add an optional parameter to specify the expected input text encoding for the netcat source\n> FLUME-2660. Add documentation for EventValidator\n> FLUME-2749. Fix kerberos configuration error when using short names in multiple HDFS Sinks\n> FLUME-2660. Add documentation for EventValidator. Fixed doc formatting issue\n> FLUME-2485. Thrift Source tests fail on Oracle JDK 8\n> FLUME-2753 Error when specifying empty replace string in Search and Replace Interceptor\n> FLUME-2498. Implement Taildir Source\n> FLUME-2763. flume_env script should handle jvm parameters like -javaagent -agentpath -agentlib\n> FLUME-2754 - Hive Sink skipping first transaction in each Batch of Hive Transactions\n> FLUME-2672. NPE in KafkaSourceCounter\n> FLUME-2095. JMS source with TIBCO\n> FLUME-2804. Hive sink - abort remaining transactions on shutdown\n> FLUME-2751: Upgrade Derby version to 10.11.1.1\n> FLUME-2734: Kafka Channel timeout property is overridden by default value\n> FLUME-2798. Malformed Syslog messages can lead to OutOfMemoryException\n> FLUME-2781. Kafka Channel with parseAsFlumeEvent=true should write data as is, not as flume events.\n> FLUME-2632: High CPU on KafkaSink\n> FLUME-2593. ResettableFileInputStream returns negate values from read() method\n> FLUME-2712. Optional channel errors slows down the Source to Main channel event rate\n> FLUME-2835. Hive Sink tests need to create table with transactional property set\n> FLUME-2841: Upgrade commons-collections to 3.2.2\n> FLUME-2801. Performance improvement on TailDir source\n> FLUME-2806. flume-ng.ps1 Error running script to start an agent on Windows\n> FLUME-2718: HTTP Source to support generic Stream Handler\n> FLUME-2704. Configurable poll delay for spooling directory source\n> FLUME-2875. Allow RollingFileSink to specify a file prefix and a file extension.\n> FLUME-2881. Windows Launch Script fails in plugins dir code\n> FLUME-2886: Optional Channels can cause OOMs\n> FLUME-2889. Fixes to DateTime computations\n> FLUME-2891: Revert FLUME-2712 and FLUME-2886\n> FLUME-2897: AsyncHBase sink NPE when Channel.getTransaction() fails\n> FLUME-2821: Flume-Kafka Source with new Consumer\n> FLUME-2822: Flume-Kafka-Sink with new Producer\n> FLUME-2823: Flume-Kafka-Channel with new APIs\n> FLUME-2852: Kafka Source/Sink should optionally read/write Flume records\n> FLUME-2889: Fixes to DateTime computations\n> FLUME-2908: NetcatSource - SocketChannel not closed when session is broken\n> Merge remote-tracking branch 'upstream/flume-1.7' into flume-1.7\n> File Changes\n> \n> M LICENSE (2)\n> M flume-ng-channels/flume-file-channel/src/main/java/org/apache/flume/channel/file/FileChannel.java (7)\n> M flume-ng-channels/flume-file-channel/src/main/java/org/apache/flume/channel/file/LogFileV3.java (1)\n> M flume-ng-channels/flume-file-channel/src/main/java/org/apache/flume/channel/file/Serialization.java (137)\n> M flume-ng-channels/flume-file-channel/src/test/java/org/apache/flume/channel/file/TestFlumeEventQueue.java (23)\n> M flume-ng-core/src/main/java/org/apache/flume/client/avro/ReliableSpoolingFileEventReader.java (4)\n> M flume-ng-core/src/main/java/org/apache/flume/formatter/output/BucketPath.java (1)\n> M flume-ng-core/src/main/java/org/apache/flume/source/AbstractPollableSource.java (3)\n> M flume-ng-core/src/main/java/org/apache/flume/source/SpoolDirectorySource.java (5)\n> M flume-ng-core/src/test/java/org/apache/flume/source/TestSpoolDirectorySource.java (2)\n> M flume-ng-core/src/test/java/org/apache/flume/source/TestSyslogUtils.java (61)\n> M flume-ng-core/src/test/java/org/apache/flume/source/http/TestHTTPSource.java (6)\n> M flume-ng-sdk/src/main/java/org/apache/flume/api/ThriftRpcClient.java (8)\n> M flume-ng-sinks/flume-hdfs-sink/src/test/java/org/apache/flume/sink/hdfs/HDFSTestSeqWriter.java (5)\n> M flume-ng-sinks/flume-hdfs-sink/src/test/java/org/apache/flume/sink/hdfs/TestHDFSEventSink.java (1)\n> M flume-ng-sinks/flume-ng-elasticsearch-sink/src/test/java/org/apache/flume/sink/elasticsearch/TestElasticSearchIndexRequestBuilderFactory.java (21)\n> M flume-ng-sinks/flume-ng-elasticsearch-sink/src/test/java/org/apache/flume/sink/elasticsearch/TestElasticSearchSink.java (1)\n> M flume-ng-sinks/flume-ng-hbase-sink/src/main/java/org/apache/flume/sink/hbase/HBaseSink.java (54)\n> M flume-ng-sources/flume-jms-source/src/main/java/org/apache/flume/source/jms/JMSMessageConsumer.java (7)\n> M flume-ng-tests/src/test/java/org/apache/flume/test/util/StagedInstall.java     (1)\n> M pom.xml (6)\n> Patch Links:\n> \n> https://github.com/apache/flume/pull/73.patch\n> https://github.com/apache/flume/pull/73.diff\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/254207537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lew181818": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/258245125", "body": "Hello - we are interested in this enhancement. Do you have a readme available? Has this been merged into a master version? The JIRA ticket FLUME-2781 does not refer to this issue. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/258245125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/258852641", "body": "@bessbd : For a readme, something simple like should we be using multiplexing source to direct the output into different sinks? Any other configuration to know to get this working in flume?\n\nThanks for the jira ticket. \n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/258852641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "UmarA": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/263335537", "body": "Yeh sure", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/263335537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "meou": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/265009171", "body": "LGTM. Thanks.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/265009171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/87469555", "body": "Looks like java.net.HttpURLConnection was chosen in HttpSink.java implementation. Did not see org.apache.http.\\* being used in test code. \n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87469555/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87476974", "body": "Just my 0.02, rather than create then close HttpURLConnection every time, could we try to re-use HttpURLConnection if the previous one is still good (or even keep it alive on purpose)?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87476974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87477162", "body": "could we have LOG.debug or LOG.warn here, like the way in line 265?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87477162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87690171", "body": "@benwheeler Got it. Thanks for the explanation.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87690171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87690195", "body": "@benwheeler yes, you are right. sorry for my ignorance.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87690195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87690268", "body": "@benwheeler OK.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87690268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87690278", "body": "@benwheeler  OK. But since no disconnect() is called, will too many underlying sockets got created and idle there?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/87690278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/88157566", "body": "@benwheeler  I see. OK. Thanks.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/88157566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "K0zka": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/284823698", "body": "no, no fucking way :-D I have wasted way too much time on this unfortunately, I'd rather just remember not to set the log level to debug", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/284823698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/293986388", "body": "This change is so simple, why does it take so long? It is sad to see how poorly this essential component is maintained :-(", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/293986388/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "zouyonghao": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/285864551", "body": "I think here you should use\r\n```java\r\nassertEquals(\"Coordinated Universal Time\",\r\n        factory.fastDateFormat.getTimeZone().getDisplayName(Locale.ENGLISH));\r\n```\r\n\r\nin the ```TestElasticSearchIndexRequestBuilderFactory.java```\r\n\r\nAnd additionly, I'm not sure whether you see my email that replied in the dev maillist.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/285864551/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/285879934", "body": "I put my patch for this on\r\nhttps://issues.apache.org/jira/browse/FLUME-3021\r\n\r\nI fixed all unit tests and it should work. But need more tests.\r\nAnd it seems it need some configuration files like some in your pr, you can feel free to test this patch and add your code to this.\r\n\r\nThanks.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/285879934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/285918399", "body": "Hi,\r\nIt seem all tests in ```TestElasticSearchSink``` could not be passed bacause the ```createNodes``` method do nothing. The solution is trying to mock the node.\r\nYou can take a look at https://reviews.apache.org/r/57538/\r\nI fixed all tests.\r\nOr maybe you can merge my commits at https://github.com/zouyonghao/flume\r\nthe trunk branch. \r\nBut I'm not sure whether to create a new pr or just use your pr, and whether you should post your patch at jira or just use github. I'm just a newbee to open source project.\r\n\r\nThanks.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/285918399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/285932282", "body": "But the unit tests are not integration tests, should be passed without any dependencies.\r\nAnd the embbed server has removed in es 5.x.\r\nSo in my patch, I mock a node that can be used by the ```openLocalDiscoveryClient``` method which is defined in ```ElasticSearchTransportClient```.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/285932282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "bearrito": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/288586759", "body": "How does this compare to https://issues.apache.org/jira/browse/FLUME-3021", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/288586759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "JerryShao2015": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/289732412", "body": "I also found this bug when an agent down and after kafka rebalance. After read the code of the commit offsets part, I found offsets map has not been clear, when the cousumer's partitions changed. I'd like to commit a patch to fix this bug, but found it has been fixed by others, haha.\r\n\r\nThanks all of the above persons.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/289732412/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "loleek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/290073118", "body": "Hi @adenes , things already done. Thanks for your suggestion.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/290073118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/293167984", "body": "@adenes Excause me, this is my first pull request.I wonder what's the next after your review.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/293167984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/108655392", "body": "My pleasure", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/108655392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/108659579", "body": "Done.Thanks for you review.", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/108659579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "eskrm": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/293656230", "body": "@bessbd \r\n\r\nWould you be able to help review this? Satoshi reviewed it in the linked ticket.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/293656230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/294894770", "body": "@bessbd Thanks.\r\n\r\nSquashed and added more detail to the commit message.", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/294894770/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/297569614", "body": "@bessbd Ready to merge?", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/297569614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/297829865", "body": "Thanks @bessbd ", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/297829865/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "qqj1979": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/298542917", "body": "How to support multiline  in TaildirSource\uff1f", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/298542917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/301026797", "body": "- KafkaSource EXCEPTION, {}\r\norg.apache.kafka.clients.consumer.CommitFailedException: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.\r\n\r\n**I encountered this problem, how to solve the solution\u3002**", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/301026797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kailashk24": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/308676619", "body": "Is this fix available as a patch ? ", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/308676619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}}}}