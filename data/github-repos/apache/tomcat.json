{"_default": {"1": {"markt-asf": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tomcat/commits/13c87497a30da63f5f7ccc4b2c68321d871a5173", "message": "Add release date for 9.0.4\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821874 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/cd2dff5b2836253c6811f5f2fa197dc12861de11", "message": "Improve failure message to aid debugging\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821838 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/559b17a826e61d9ad8cfeabd4f9f92e6c536d5ab", "message": "Prevent a stack trace being written to standard out when running on Java 10 due to changes in the LogManager implementation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821708 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/f0b8b14acdf554cabc86bd1e848f59944987f6cd", "message": "Increment version for next development cycle\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821549 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/73af8867581df40447474691a59fb30c32fa9b03", "message": "9.0.3 release vote was cancelled\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821528 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/f6a1cbeac05e88e6b2f9e9c5a5aae411f55b640b", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=62006\nDocument the new JvmOptions9 command line parameter for tomcat9.exe\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821381 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/377526beee3a78b1aca4cee30404fbc560b3f808", "message": "Correct a regression in the previous fix for BZ 61916 that meant that any call to addHeader() would have been replaced with a call to setHeader() for all requests mapped to the AddDefaultCharsetFilter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821328 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/0129025094fe0d88e0aef3ac02cfaa7f479cc146", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61993\nImprove handling for ByteChunk and CharChunk instances that grow close to the maximum size allowed by the JRE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821293 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/5930cbf315e96da993ecaba00e8a8a545e283f0e", "message": "Deprecated unused code\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821252 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/f751bd29019d323377db350c23fc409f5278077e", "message": "Align indexOf(String, int, int, int) implementations and pull up.\nUse ByteChunnks implementation as it is shorter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821251 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/3b1b3c18cac932a52d7b0e073e3cd22edc46cdde", "message": "Fix bug searching for single character Strings (search would always fail)\nBug found during comparison of indexOf() implementations between ByteChunk and CharChunk\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821235 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/9c05c36844343b907e00eb93ad0aa3ed3146229b", "message": "Clean up - No functional change\nAlign comments and variable names, re-order methods, etc. to minimise diff between ByteChunk and CharChunk\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821234 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/cdcae1c6d5ac903f8626b475fef9834a22f06f29", "message": "Revert 1821202 and add comment regarding compaction\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821225 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/f4ae47c4c610af3df22181d67f4d2c2d904604db", "message": "Align ByteChunk and CharChunk\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821203 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/91788c481b7ee86249f816bb5ad426b8590b70a7", "message": "Handle case where start != 0 and buffer is not empty when makeSpace() is called.\nAligns CharChunk with ByteChunk\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821202 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/6bd920e295442b7d11febb234e5c20f25c4a8165", "message": "Formatting / comment alignment\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821201 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/4a1e8f17fc97385159882a227ec44b4915f71bfd", "message": "Reduce diff between ByteChunk and CharChunk\nNo functional change\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821200 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/d88c8f006dc4bad8667e090e0862ca91fdd7bf9d", "message": "Pull up and align isNull and recycle\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821199 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/aeb572b9fbf53fc393de6905cd8761fbb01976e0", "message": "Pull up and align start (a.k.a. offset), end and hashcode\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821198 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/b38ae88bae0735ac39d555855d725b27f133e534", "message": "Add a base class with a view to aligning and pulling up the common code where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821197 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/f5d62366d75b2e16cb57cc0ad0ec44a1bafdb32e", "message": "Use local copy now it is available\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821167 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/f4058bef677b09da0f9e2514728dfb30ee092fc6", "message": "Format classes. No functional change.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820994 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/479fba941f4f3606bb2b65e0f225b2e3f7e709c1", "message": "Fix formatting. No functional change.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820981 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/16d4b92c8e1510c3e2c21fa700dccaeff0960c6a", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=43925\nAdd a new system property (org.apache.jasper.runtime.BodyContentImpl.BUFFER_SIZE) to control the size of the buffer used by Jasper when buffering tag bodies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820932 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/6f4a955e5f9457ac52289963aaaa37e043db2427", "message": "SpotBugs\nReduce visibility\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820875 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/c843ef406b5f9f9d5c5aa012386758883ee9b510", "message": "Clean up javax entries\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820864 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/bace648e860c10ff0310890b8d3ce4db466c10a8", "message": "Increment version for next dev cycle\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820863 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/c3d79e2143de51ecbc0a98a97b21ce9d262f6796", "message": "More false positives\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820792 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/fbd32fe521dd12c5d07e81dc3aff0d4608038e3e", "message": "SpotBugs\nFalse positive\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820786 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/1bfe95a3e1588fa170924f29b91d1bad9ad2d73e", "message": "Update for past refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820785 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/17ffcd72af6b7933f327a8ba20e73f71c759d0a3", "message": "SpotBugs\nPotential overflow in averaging (v. unlikely but an easy fix...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820781 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/22beea7a0f4d9ace803ab3d2bd0faa80163ee81a", "message": "Prevent NullPointerException and other errors if the stock ticker example is running when the examples web application is stopped.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820705 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/1d105f832ff80dbabd061195d146a605f1f0e8cd", "message": "Fix ConcurrentModificationException\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820701 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/18ad6f3460677ce07f5ba2a8d14f13fbe2ee6865", "message": "Modify the Default and WebDAV Servlets so that a 405 status code is returned for PUT and DELETE requests when disabled via the readonly initialisation parameter.\n\nAlign the contents of the <code>Allow</code> header with the response code for the Default and WebDAV Servlets. For any given resource a method that returns a 405 status code will not be listed in the Allow header and a method listed in the Allow header will not return a 405 status code.\n\nBased on a patch suggested by Ken Dombeck.\n\nThis closes #96\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820663 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/04a44be052defb433650776cac6aed1495fc305d", "message": "When using WebDAV to copy a file resource to a destination that requires a collection to be overwritten, ensure that the operation succeeds rather than fails (with a 500 response). This enables Tomcat to pass two additional tests from the Litmus WebDAV test suite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820576 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/7b0fa4cc4bdcaee0abf9227bd891c65d30624127", "message": "Implement a small optimisation to how JAR URLs are processed to reduce the storage of duplicate String objects in memory.\nPatch provided by Dmitri Blinov.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820302 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/47b8201c1a586ce255b2bf7a68d70f1b659550b1", "message": "Update configuration to new style\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820281 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/f162bb1c05c77c2b482e9a1dfb8ab970cb7f55a7", "message": "Add OCSP configuration information to the SSL How-To.\nPatch provided by Marek Czernek.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820279 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/3dac1578e9a17ce81239d3b95dab40938489deb2", "message": "Return a simple, plain text error message if a client attempts to make a plain text HTTP connection to a TLS enabled NIO or NIO2 Connector.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820276 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/6345fd0b2dd630464f545208ebbf8cbd600a0e93", "message": "SpotBugs\nImprove catch-all exception handling\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820265 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/1b222078d419df74cf6e27b6b0d1f60e86407bca", "message": "SpotBugs\nSimplify code\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820222 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/acae26d217def8bab2aaed46eafc0e82a4708100", "message": "Resolve false positive\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820219 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/004c6fe7f6e1e57dc9d7d60c97b312a42282411f", "message": "Fix typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820202 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/ecb98a878fb5227e56bbca52b55d401e93ecaf7b", "message": "Fix order\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820197 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/f5db05c32c9b757415d00363ca01a8da8046a49c", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61886\nLog errors on non-container threads at DEBUG rather than INFO. The exception will be made available to the application via the asynchronous error handling mechanism.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820196 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/27800aa3b85641013053c553617607ee10774661", "message": "Partial fix for https://bz.apache.org/bugzilla/show_bug.cgi?id=61886\nEnsure that multiple threads do not attempt to complete the AsyncContext if an I/O error occurs in the stock ticker example Servlet.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820194 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/b9bd1669dec6ffd9189b73cbc2b0e500193eebc9", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61910\nClarify the meaning of the allowLinking option in the documentation web application.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820153 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/a0649913d2e14960d821558a7a06c7c390d09ffc", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61916\nExtend the AddDefaultCharsetFilter to add a character set when the content type is set via setHeader() or addHeader() as well as when it is set via setContentType().\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820138 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/0cabdc2123bd53a41fbf12851751899d2e0cf3c1", "message": "Fix typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820005 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/1b6b496dadc2891b5428316dfbc8936a31f65c72", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61932\nAllow a call to AsyncContext.dispatch() to terminate non-blocking I/O.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820003 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/6952814e58620719693311339bb81faa577958bb", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61948\nImprove the handling of malformed ClientHello messages in the code that extracts the SNI information from a TLS handshake for the JSSE based NIO and NIO2 connectors.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1819903 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/d3399023e38f9f9513d6edc40884bf4c8a651ea5", "message": "Simplify.\nNo functional change.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1819148 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/ce95f30b892ea39c4d89a6e345376c455e128dda", "message": "ARIA ciphers were added in 1.1.0\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1819077 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/d6849ad5d9c7b46f3882c0434807c34cd202d96c", "message": "Correct message digest for newly added ARIA ciphers\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1819074 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/f55ce663093382419ffb05f5c860650fda2fe697", "message": "Fix typo (missing ':')\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1819071 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/ca5387d376979f5738fe610903bbe5ed1bdda4b4", "message": "Fix copy/paste error\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1819070 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/895274e8f7cbf94dbc8d418e915a5261cb358057", "message": "Remove ARIA ciphers from DEFAULT\nSet up aliases for ARIA ciphers\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1819068 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/6ce6527ed513f2e29147f7210d17dc5475d85c5a", "message": "Correct key exchange for some of the newly added ARIA ciphers\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1819063 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/78831f2c7a96ac7dcfc43c73c8403066a64e0902", "message": "Correct OpenSSL cipher names\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1819061 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/2155f3d4b4d05cac845171f06ab1a98ea7f41198", "message": "Correct OpenSSL cipher names\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1819057 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/096d8c726597f78af8b3afb9019030c1f1903048", "message": "Use correct format for names of unsupported ciphers\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1819054 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/794b2f1df1fc5e25167d1ba404a3f42ad8ab45ff", "message": "Add support for the OpenSSL ARIA ciphers to the OpenSSL to JSSE cipher mapping.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1818976 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/4e343d148e3de59bf5ac9e4e6bbceb908b1f239e", "message": "Correct handle EOF for ServletInputStream.isReady()\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1818438 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/eed94fef0519d1b017cc2e22713131f22315aef3", "message": "fix order\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1818436 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/47124cd64f1c213c3f09252f94800226ca7e878e", "message": "Follow-up to r1818179\nOnly download native source bundles when we need them.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1818184 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/5381ef396cffdd5c8e4e569b9d4a5d61e5a8f6f3", "message": "The native source bundles (for Commons Daemon and Tomcat Native) are no longer copied to the bin directory for the deploy target. They are now only copied to the bin directory for the release target. (markt)\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1818179 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/0f8e4ddac4efa2dc30956a5a3b9294e59ad570cd", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61565\nAdd TLS config reload to Manager app\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1818127 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/d307ef76e5e00fa976e812e529ddc2c1496dffde", "message": "Fix SpotBugs warning\nSimplify test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1818015 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/6368b62bcbee022f79b4f17fcfc12de4c380706a", "message": "Fix SpotBugs casting warning.\nSimplify by casting directing to ServiceRef given that an 'instance of' test immediately precedes the first cast.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1818014 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/59fbdca2873e8e2dc3806d7abb7b8da2a37d9c40", "message": "Expand fix for BZ 61566 to the script interface as well as the HTML interface.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1818004 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/94f53b06c05368658809b4cfbb5946d36b010e19", "message": "Re-word since this is the final fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1818001 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/77860e1539797c0cb6b80806e75e5a429377015e", "message": "Layout improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1818000 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/345b916687b946bb448a76dc7cd9ac95b67ffbae", "message": "Partial fix for https://bz.apache.org/bugzilla/show_bug.cgi?id=61566\nTrusted certs are now exposed for virtual hosts configured using a Java key store.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817999 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/f6baef98988a1f98392df287cc6ea7ed763d60b1", "message": "Partial fix for https://bz.apache.org/bugzilla/show_bug.cgi?id=61566\nCertificate chains are now exposed for virtual hosts configured using a Java key store.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817997 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/d01d4575d2175de22fe5ba2bbccc88be2748867f", "message": "Correct import\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817965 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/66ac9890783092259204aae9b4d6fb11fbb0d2ae", "message": "Revert 1816418\nCan't change WebSocket API\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817766 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/dbf6b397e938bcde0b93a79319d662e9560307b8", "message": "Revert 1816420\nCan't change WebSocket API\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817765 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/74e65de6ef7a2ab287767019d4618c61dacaafb0", "message": "Copy changes in ReflectionUtil in r1817517 to Util.\nUpdate unit tests for change in exception type\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817520 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/479b26ad999488a4c5d405244f8dd7ebfa5dda7d", "message": "Follow-up to r1817495\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817517 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/b7ce5679b9e6a073dadbc31e6ecde12ad1e0ede8", "message": "Improve the handling of methods with varargs in EL expressions. In particular, the calling of a varargs method with no parameters now works correctly.\nBased on a patch by Nitkalya (Ing) Wiriyanuparb.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817495 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/ff00d70321de6133335cc702eb0984cd5d1f1708", "message": "Follow-up to r1817302\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817314 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/e43dd7071a08e05c6a6c26275c36d217fc9fa888", "message": "SpotBugs\nSimplify.\nRemove unnecessary null checks.\nMake another null check unnecessary.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817305 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/0894128be7134417dd56daa893bba62d540cd602", "message": "SpotBugs\nAvoid implicit use of platform default encoding\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817302 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/b6b07c527834b1b71ad01b939c6a7e37d1d0c927", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61854\nWhen using sets and/or maps in EL expressions, ensure that Jasper correctly parses the expression.\nPatch provided by Ricardo Martin Camarero.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817298 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/989a74489434f13e264957f46377587d816b3f6b", "message": "Fix SpotBugs warning (rank <=16)\nserialization for ByteChunk\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817248 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/6582c6949e97b6e01d3ea3de043e37e0cc677b4e", "message": "Fix some SpotBugs (rank <=16) issues\nMark in/out as transient since serialization is primarily used to expose values - e.g. via JMX.\nI did look at removing serialization but that ultimately impacted the ServerCookie representation that is helpful to have exposed via JMX.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817244 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/2caba798ee522d62008e69f18136a8bb22492833", "message": "Another follow-up to r1817240\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817242 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/36f722f4fa5def1ebb6d18f1634129ac09d7b580", "message": "Follow-up to r1817240\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817241 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/16b50481b50d0c283bb04f8407c2bdcaa1570b46", "message": "Fix remaining SpotBugs issues (rank <=16) in tribes\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817240 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/2e252b442611fe00e27aa7868f880b29ea11195b", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61223\nAdd the mbeans-descriptors.dtd file to the custom MBean documentation so users have a reference to use when constructing mbeans-descriptiors.xml files for custom components.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817223 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/b7c599cae5fbec07d3ed470c5b20fefe3c1f962e", "message": "Update false positive list after DBCP update\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817196 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/dd338a5ad474e73ff968a47d4a93dd821c0110cc", "message": "Update the internal fork of Commons Codec to r1817136 to pick up some code clean-up.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817137 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/2bee9784520fcf4ebcb9df66351476a74c95a2ee", "message": "Align packaged renamed FileUpload with original.\nUpdate the internal fork of Commons FileUpload to 6c00d57 (2017-11-23)\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817136 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/65256e8b2f7b43d37d0908573cfcdbf2f0382745", "message": "Align packaged renamed DBCP2 with original.\nUpdate the internal fork of Commons DBCP 2 to 8a71764 (2017-10-18)\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817126 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/3e8c569ac18391d80e7e8ba029831701af5a4fb9", "message": "Fix Javadoc errors reported by CI\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817104 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/fd5c0a0ec664345a4f536d60e66e799d4c33f74b", "message": "Align packaged renamed Pool2 with original.\nI ended up adding the useless (in the context of DBCP) SecurityManager based CallStack implementation because excluding was complicating the merge.\nThis aligns the Commons Pool fork to the 2.4.3 release.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817096 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/2582215c4538c64ebb5bf67d1600ac086ae33a68", "message": "Align packaged renamed Pool2 with original.\nUseless (in the context of DBCP) SecurityManager based CallStack implementation excluded.\nThis updates Pool2 to the point where development switched to git. Another commit will follow shortly with the git updates.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817092 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/51eb38a975844d28ad0d096f19a55d29b8e75900", "message": "Align packaged renamed BCEL with original.\nNo functional changed. Reformatted Javadoc only.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817089 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/d876b8fd1541703fe8407e8044eb8cf040d478f3", "message": "Refactor so clone() works correctly for sub-classes (it seemed reasonable that this might get sub-classed)\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817088 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/0eb30bf18f14d77694e074dea8e8efee73c7e398", "message": "Add a test case for the clone() method before I start making changes to fix a SpotBugs issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817081 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/9a564692706c2810fdcbd00ccb2a9adaaab57072", "message": "Silence SpotBugs warning. It is pretty unlikely an instance of this class will be serialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817079 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/09dd855aee61a9914e8821b7e75c9af031fa3c68", "message": "offer() checks for parent==null so force should too\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817078 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/cc1f7100dbceb50c8806027525a7851f94510549", "message": "Spotbugs fixes (rank >=16) in tribes.transport\nReformat so Spotbugs can determine the exceptions are ignored deliberately.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817074 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/67a6d0ead4861c15d15a337aee9821eef643d7ec", "message": "Spotbugs fixes (rank >=16) in tribes.io\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816984 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/b24e8bcce90ddfe4fa11e183340617ad7654938c", "message": "Spotbugs fixes (rank >=16) in store config\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816983 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/71e0cf2ef26e4f8034508d2f5aa314fe882ca461", "message": "Address a few more SpotBugs warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816905 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/b299dba9051d8661c9ac9f86bd2b3baa811255be", "message": "Address a handful of SpotBugs warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816898 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/5fb6635efa0b2374576427b91ca0a1cb592b9f91", "message": "Revert visibility change in r1816624\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816841 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/f16101e348c4e8972052c233e849d50a33ca1d92", "message": "Follow on to r1816698.\nCorrectly chain flush() and end() so the necessary calls reach the underlying buffer.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816780 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/11dead2a22fd7fcc7194867518b99188abe3ff19", "message": "Few more false positives\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816743 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/680c925f9fc47ca436d92d938ba36cf192089056", "message": "Fix chaining to next filter\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816742 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/0efb8ee021591a04e569da98858087fdf31b54c1", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=60276\nDocument HTTP/2 compression support\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816716 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/45f6c328dfe8cd0fc468b0f2b79f01080af7b556", "message": "Skip build.properties file in jdbc-pool module when performing Checkstyle checks\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816715 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/cb1e9a7dd1ff902021deff1b5cece171efa41400", "message": "Missed renaming a couple of imports\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816705 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/58bfe009ff2e30800457e6e7343ae57de40b2144", "message": "Trigger sending the headers from the Http2OutputBuffer as the\nStreamOutputBuffer is too late if a filter (e.g. GZip) needs to\nbe added.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816704 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/29c319422efaab1d1885a5069107aafa2c9c65c2", "message": "First pass at implementing compression for responses\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816703 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/bd0e73bf945ae67faabeafeafd4545da215cee4d", "message": "Refactoring: HTTP/1.1 - HTTP/2 alignment\n\nAdd the Http2OutputBuffer which will be the insertion point for\nthe GZip filter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816702 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/011fe411537153b92085f36013bd29c59c957fe2", "message": "Refactoring: HTTP/1.1 - HTTP/2 alignment\n\nSimply HTTP/2 flush code\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816701 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/7fe14fe18eb2ee4bd585c1e35d7da561284071ad", "message": "Refactoring: HTTP/1.1 - HTTP/2 alignment\n\nChange StreamOutputBuffer to implement HttpOutputBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816700 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/e5e1c78bb245bfa7a34894de50b449eb37c56cb7", "message": "Refactoring: HTTP/1.1 - HTTP/2 alignment\n\nRemove unused code\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816699 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/96f04b73bc7f282f870bdcc203ce0c8a7ddf1ed0", "message": "Refactoring: HTTP/1.1 - HTTP/2 alignment\n\nAdd flush() to HttpOutputBuffer and chain filter implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816698 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/9bcaaedc7dd65b0af11bd01d19267de2596a3b1a", "message": "Refactoring: HTTP/1.1 - HTTP/2 alignment\n\nChain end() calls to align with doWrite() and getBytesWritten()\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816697 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/bfa7f4cf2eceb4df6b588f939e44b3edd842d8e7", "message": "Refactoring: HTTP/1.1 - HTTP/2 alignment\n\nPull up end() method from OutputFilter to OutputBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816696 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/2493129af966449aa2400d6b46437a4b099bc9cf", "message": "Refactoring: HTTP/1.1 - HTTP/2 alignment\n\nIntroduce HttpOutputBuffer into class hierarchy\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816695 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/8b450c1f8041759b48fec1f4839e68832991b781", "message": "Release vote passed\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816690 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/ed708cef30dfd364f788f440c3038450f5aaf852", "message": "ws police\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816678 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/ee61210536887a17169053882731ce805f82a505", "message": "Fix some SpotBugs issues in the tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816655 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/99b275a9e21958e501843d0d270064c75da0198c", "message": "Update the Java EE 8 XML schema to the released versions.\n- Picks up a couple of element name changes for web .xml\n- Lots of whitespace changes (as with the previous versions I converted tabs to spaces and removed trailing spaces before committing)\n- Adds (yes adds!) a handful of typos\n- Some additional commentary\n\nNo change to licensing. We are electing to distribute under the CDDL.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816647 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/161fa4afacf68c051f8c83e14a9ccfb2df607d48", "message": "Update the Java EE 8 XML schema to the released versions.\n- Picks up a couple of element name changes for web .xml\n- Lots of whitespace changes (as with the previous versions I converted tabs to spaces and removed trailing spaces before committing)\n- Adds (yes adds!) a handful of typos\n- Some additional commentary\n\nNo change to licensing. We are electing to distribute under the CDDL.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816622 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/6ca79c8961b3dfa3f3a6f354c9972fef49a81830", "message": "Refactor sendfile with compression support in mind. Use an approach similar to HTTP/1.1 so the StreamProcessor will have visibility of whether sendfile is in use when deciding whether or not to compress.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816571 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/0cd22d35ffb2ec6572783773f2d1740accef5cf0", "message": "Refactor header preparation with adding compression support in mind.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816570 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/bc36a76c431a021420729a8ee88e6db72a456dd9", "message": "Add compression config to HTTP/2 protocol\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816550 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/913cb6d8c027066630cf9cf8b37642843c3f7485", "message": "Refactor: Move compression code to new class to allow re-use with HTTP/2\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816549 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/a34bf2d74d0aaf78ea2027c68a5df0838f2bf514", "message": "Refactoring (with a longer term aim of aligning HTTP/1.1 and HTTP/2 to enable reuse)\n- Remove unused return value from end()\n- Remove duplicated Javadoc\n- Clean-up extra blank lines\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816538 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/db5e78c5f0a6c75b962a2d790e8708aa59d3fb4e", "message": "Fix SpotBugs issues (up to rank 16) in JDBC pool\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816449 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/f6445bf6423fef72f9c7cf5a5ab08ef59c35b722", "message": "Fix failing unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816443 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/be70289916ea2f89db673de974704d1a18d32dec", "message": "Fix a SpotBugs warning\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816433 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/091969a70b4f8bab4d28e99c1a0c0a5c42d98516", "message": "Fix download location.\nGet h2 JAR from Maven Central rather than the now closed Google code\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816431 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/abb6d505b321b45766d4a30bc107938a3d63f4f9", "message": "Remove deprecated code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816420 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/cc08f81dc6b4d91587ed71e46bfd7dd5b834b3ea", "message": "Getter and setter should use symmetric names\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816418 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/2a14b22b34465f33e27507fd5900ec093ac7ab3f", "message": "Bump version for next dev cycle\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816353 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/67f531e2297f84de0fcfa531fd5ace81dd0e37bf", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61816\nInvalid expressions in attribute values or template text should trigger a translation (compile time) error, not a run time error.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816338 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/5b3c1eb0bdba3b40dbc259f0102497a9b8b939ed", "message": "Fix a handful of low severity SpotBugs reports\n- false positives\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816248 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/0874da8cf879d5c1bed22f33b706287682d8a291", "message": "Fix a handful of low severity SpotBugs reports\n- Serialization warnings. Probably ignorable but the fix is simple.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816247 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/c183a752d4059c043352b5b986fb1f8da6850c1d", "message": "Fix a handful of low severity SpotBugs reports\n- Failure to delete/rename a file should result have some visible outcome\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816246 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/ac7b5903e70c93dc3349cf514af4f88fecb53903", "message": "Update jsvc docs for Daemon 1.1.x\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816147 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/947beaae17cfd18e55bb45f1f1d3bfe3d44b7594", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61600\nUse new Commons Daemon option to set Java 9 specific JVM options required to prevent warnings appearing in the logs on Tomcat stop.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816140 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/dc90fa4a03cecf7b8b29f9626ab53e130418c925", "message": "Commons Daemon released are now signed by default so no need to looked for specific signed version.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816128 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/ac313eb1600a4713af093a548e6f9ec86b10faba", "message": "Update to Commons Daemon 1.1.0 for improved Java 9 support.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816120 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/e2d461a21f1feebc9a8d1fcad989c3e2f9556131", "message": "Fix test failure\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816087 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/20bfc6570f121c52419d6f5eff8f1b2c580fb793", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=51496\nWhen using the Windows installer, check if the requested service name already exists and, if it does, prompt the user to select an alternative service name.\nPatch provided by Ralph Plawetzki.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816083 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/4c1ca352265fbc8ed8340d9b5bbff782f3e75f79", "message": "Add a property to the Authenticator implementations to enable a custom JASPIC CallbackHandler to be specified.\nPatch provided by Lazar.\nThis closes #93\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816078 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/4f6cc8f037fdaa97719968b8d26f41ae5c19e826", "message": "Correctly handle the case when AuthConfigFactoryImpl.registerConfigProvider() is called with a provider name of <code>null</code>.\nPatch provided by Lazar.\nThis closes #94\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816076 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/9aa5ab9669ccb6d46eb35a30c8f8e970a4e0d63c", "message": "Follow-up to r1812551\nNeed to sync on state if calling state.notify()\nReported by SpotBugs\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815933 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/67acb068028cadfecae560d1afc854c80dbe4cdb", "message": "Update Tomcat Native to 1.2.16\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815903 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/7965dc32d744dce2878338be9ba50da4d188ea7f", "message": "Revert accidental commit\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815840 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/c8168e12edb845947ab1af1bdebddeddb569bbec", "message": " When calling AuthConfigFactory.removeRegistration() and the registration is persistent, it should be removed from the persistent store.\nPatch provided by Lazar.\nThis closes #91\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815834 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/0128ae37ea4cc19beecf7e8edd851a26496ff210", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61782\nWhen calling AuthConfigFactoryImpl.doRegisterConfigProvider() and the requested JASPIC config provider class is found by the web application class loader, do not attempt to load the class with the class loader that loaded the JASPIC API.\nPatch provided by Lazar.\nThis closes #90\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815829 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/8a10e8235545bc998f7401804bd8581daa2be2f2", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61781\nEnable JASPIC provider registrations to be persisted when the layer and/or application context are null.\nPatch provided by Lazar.\nThis closes #89\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815826 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/1ee42fa7d131bcf6ecf2c3d0fa02040bf823e4b3", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61780\nOnly include the default JASPIC registration ID in the return value for a call to AuthConfigFactory.getRegistrationIDs() if a RegistrationContext has been registered using the default registration ID.\nPatch provided by Lazar.\nThis closes #88\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815806 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/d28f926228e637a18032c95d9e832f608e64d8cc", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61779\nAvoid a NullPointerException when a null RegistrationListener is passed to AuthConfigFactory.getConfigProvider()\nPatch provided by Lazar.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815802 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/2c5c659d30a4a3c9af06ac58f1e1199c3c5a86b2", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61778\nCorrect the return value when detaching a JASPIC RegistrationListener.\nPatch provided by Lazar.\nThis closes #86\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815800 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/277d583b32b874357626f16182eebbc30cc8d1d8", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61777\nAvoid a NullPointerException when detaching a JASPIC RegistrationListener.\nPatch provided by Lazar.\nThis closes #85\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815793 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/12967ea85ef26450854a7b13ca14c26fa9e281e3", "message": "Enable host name validation for HTTP requests.\nNote: This only logs failures. It does not (yet) trigger a 400 response.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815791 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/9f223e0da9a3cc1fc3668c911186eefd1dd8a094", "message": "Add error messages when exceptions are thrown due to host name parsing issues.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815790 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/68b88aa86b350f14039e5959ec557d94f3e99628", "message": "Fix spelling of octet\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815786 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/20f8fd88cf6023d4943ddbc77a3a25eebb4c4a50", "message": "Fix typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815778 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/31f72937a8b02a969b37acb54895e127b020bc01", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61658\nUpdate MIME mappings for fonts to use font/* as per RFC8081\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815615 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/860a0e6dde5639dba70d53fa706b8dc65340c902", "message": "Avoid a possible NullPointerException when timing out AsyncContext instances during shut down.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815505 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/badf6363c5eca4e313323f50789c0eec7e1c625e", "message": "Improve concurrency by reducing the scope of the synchronisation for javax.security.auth.message.config.AuthConfigFactory in the JASPIC API implementation.\nBased on a patch by Pavan Kumar.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815465 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/4b8e8060fb80e6e21fa036abff2f7a346507b08f", "message": "Follow-up to r1815451\nReview from kkolinko\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815459 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/0736a81497ed9b04c3ccc1a1aec21e036a9afcac", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61736\nImprove performance of NIO connector when clients leave large time gaps between network packets.\nPatch provided by Zilong Song.\nThis closes #81\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815451 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/1631eedbcca3c112a671859f1d5ca351358748d2", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61740\nCorrect an off-by-one error in the Hpack header index validation that caused intermittent request failures when using HTTP/2.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815442 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/995fc5399642fdfc4fcaffa716b8de4fe16ddbb6", "message": "alphabetical order\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815441 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/1129b48ff7f37c12f903728ca967ee39d242cb7e", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61682\nWhen re-prioritising HTTP/2 streams, ensure that both parent and children fields are correctly updated to avoid a possible StackOverflowError\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815429 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/fb631d214590e6058ae73249034ae9702e97f2a6", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61673\nAvoid a possible ConcurrentModificationException when working with the streams associated with a connection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815385 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/a2da400f38dbf63536b05a7be29af0ac26401934", "message": "Increase window for valid completion\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815330 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/1e43950a5980fd88c27cad203eb022dcc751a81c", "message": "Avoid possible NPE if no manifest is present.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815325 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/4e2e6b6d730823e027b6c4bdf2ec4872f95799b7", "message": "If the test logs files aren't closed, they will be locked. On Windows this means they can't be deleted. This causes the tearDown code to fail.\nClose the FileHandlers so the log files are closed so they can be deleted.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815319 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/5ccbc59f1823af22338f0efd9da32abe6f1919df", "message": "Correct failure message\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815318 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/8090a34c15b2864a19559c60ba7e3125058cac79", "message": "Switch the new SHA-256 hash to SHA-512\nFix typos in the change log\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815215 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/22fb9931e978cd083052aeb6509b6f6d44d01cdc", "message": "Add a SHA-256 hash\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815208 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/469423111417c2e9d39b95148dd845e9262a0007", "message": "Enforce not using static Assert.* imports\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815080 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/e1b3882ee74368e5d4e7fd90679e009280cdd69b", "message": "Remove use of all static Assert.* imports\n- fixes Gump errors with latest Checkstyle\n- doesn't introduce errors for older Checkstyle\n- makes unit tests consistent mwith use of Assert\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815079 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/8f4d5ba4ea05080a77a27b6c3b015c1b7d67f087", "message": "Switch to non-static imports\n- avoids checkstyle error\n- broadly the same code volume (or less)\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815069 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/fe728d2d554f8d8a46b82361a70022964da89667", "message": "Switch to non-static imports\n- avoids checkstyle error\n- broadly the same code volume (or less)\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815066 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/e906281a3adbfdaaa3790edafb16616dba9214bd", "message": "Try and improve the wording.\nThis closes #79\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1814980 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/44aa9d80f3a09ad30bbc34d45f29a2f7c8a7b7dc", "message": "Provide the SessionInitializerFilter that can be used to ensure that an HTTP session exists when initiating a WebSocket connection.\nPatch provided by isapir.\nThis closes #76\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1814973 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/36c24025e23612ec4e238a2bd7bccaf53c31dabb", "message": "Correct the description of how the CGI servlet maps a request to a script in the CGI How-To.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1814825 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/f52a52c4c62d3585d0d5dad6b3aacfbc855f1c46", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61668\nRefactor StringUtils to better handle null inputs.\nAdd test cases for bug and all StringUtils methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1814567 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/10a19fed71457170a053adbe61b1d2d80380deb7", "message": "Add some Javadoc to silence an Eclipse nag\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1814563 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/c8e7334084f8a55a3d15e928ec3c88588bb0234c", "message": "Fix import order\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812620 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/da3d8ddf984ab701d1868b019ab25552716c5f98", "message": "Fix String concatenation\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812617 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/b5987c1ed93611f8eff03703c0f6d3970b52d5ad", "message": "Improvements and copy/paste fix after kkolinko review\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812513 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/eef5b781e69b59b2422eb9dcbece68feae095554", "message": "Remove deprecated / unused code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812494 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/e09a256fc285b6703e6737a8527a1ccde6f51ac7", "message": "Remove deprecated code\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812490 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/17fdaef177202e09e5e111cbaa3f45c15f167142", "message": "Refactor XML and HTML escaping to a single location\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812489 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/fb7cd2aa4abfe79a7bc65fe6cc6f5621ce43459d", "message": "Correct refactored reset logic\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812401 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/e810a2f1ed573c2774526680576f5661c1c941eb", "message": "Complete the fix for https://bz.apache.org/bugzilla/show_bug.cgi?id=61601\nHandle multi-release JARs for packed web applications\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812315 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/2977aec09e6c9471775db5d3e9d79e51fd83da9d", "message": "Fix modifier order\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812221 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/b450ef3469a8b39d8e0866518920bacd9e1183ed", "message": "Fix a handful of SpotBugs warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812189 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/7e30da3ae6e42dd5ff1c6ae7b736385a4f6ac290", "message": "Remove deprecated code\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812188 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/c9c6c045c770bc2238679bb8f85127774cdb3cf1", "message": "Deprecate unused method with non-standard name (which FindBugs doesn't like)\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812184 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/147ee10023eb0fa28524f336ca306792c088393a", "message": "Fix remaining SpotBugs failures in the jdbc-pool code when the rank is set to 16\n(the maximum rank is 20 so there are still quite a few other issues to look at)\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812154 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/f1ca273fe2698084237cae1c355771484ade0eff", "message": "Fix remaining SpotBugs failures in the test code when the rank is set to 16\n(the maximum rank is 20 so there are still quite a few other issues to look at)\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812151 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/be55effc6bd546dc8fdedae669d457a7117504e7", "message": "Fix some SpotBugs false positives\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812139 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/13a124f1770dd7078567bcf7635007d0443139cf", "message": "Fix IDE nags\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812136 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/4ecdc51683d0a941105f22d50d9077ce9baefbbd", "message": "Fix some FindBugs warnings in the test cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812119 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/4388ddb3a5dbe0acb768cd8cb030d6a65bba7833", "message": "Fix Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812113 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/cc9d4dfe51d93c748fc28be05f1db0af947c9b2d", "message": "multiRelease needs to be volatile for DCL to work correctly (thanks SpotBugs)\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812107 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/c6607e74674b054af84bccf22172e763f9991387", "message": "Partial fix for https://bz.apache.org/bugzilla/show_bug.cgi?id=61601\nHandle multi-release JARs for unpacked web applications\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812103 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/efef22235f6a47b0fcc6bb2e4e3bc6e1cc476f6b", "message": "Fix additional false positives exposed by previous fixes for typos\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812094 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/79bd3eb285cbbff36365780490481d2e921afc9f", "message": "Fix some FindBugs false positives\nPatch provided by isapir\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812088 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/0afd6718a916fb403d3e2e132cfe98320482f7ee", "message": "Fix SpotBugs warning\nBetter null handling\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812087 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/33b3a9f4bbc615361e77d32f2d1a697137489dae", "message": "Remove deprecated code\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811936 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/b5e2270dc5584d6d69b3bb55820e2800581f0293", "message": "Deprecate unused method on internal Jar abstraction\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811932 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/3a947eb145d1e083457002fa2ce521462794a795", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61598\nUpdate the Windows installer to search the new (as of Java 9) registry locations when looking for a JRE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811861 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/287683a3e082637be62ee8dadf3ba26345b62d90", "message": "Update changelog\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811839 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/e29888e2121efec7c06bb8b9583dc8d3b0fd0324", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61597\n\nScan the module path as part of the standard Jar scanning when running\non Java 9.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811838 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/53a750121747723d005953eb9c2b67446ff672f4", "message": "Use consistent naming\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811837 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/47f482fd310d8839bb8ec0302655d2c2f753d06a", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61604\nFix SMAP generation for JSPs that generate no output.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811763 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/d9ee17c7247569a3b26c908ffd2995b98e5e37dc", "message": "Remove references file JAR specific license/notice files that were removed some time ago\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811663 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/6ba63115d40bccfa8e28ca9b96feda333d980877", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61590\nEnable service.bat to recognise when JAVA_HOME is configured for a Java 9 JDK.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811560 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/b4d250be8dfdfa0e284a46df2bc52fe3e933cfc4", "message": "ws police\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811350 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/69c915cc7dd1a5c13e1d694c8b4e64e65fcac1af", "message": "Correct description\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811329 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/a6e3899d1922f23e629fe96709825b308a76d8cb", "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61568\nAvoid a potential SecurityException when using the NIO2 connector and a new thread is added to the pool.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811328 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/8c48df0ccc484ba369635fde601523cb47a9cb44", "message": "git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811327 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/305902cec63a99c613908eb06d589b7c195367f7", "message": "Comment out @SuppressWarnings for now. I think it is more important that the Java 8 build is clean.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811319 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/57162b67c6dfb112d78602b80d0ee3b9655ff185", "message": "Revert changes included in r1811311 in error\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811318 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/177353e96b1f370c3e3846cca91e8aa227da3a0d", "message": "Tackle some of the Proxy related Java 9 deprecation warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811317 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/f2254a22d77aee55db3d5a4a2280360c871bb207", "message": "Refactor\nUse ReflectiveOperationException rather than multiple sub-classes\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811311 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/52ae61e969c1e53b2c7f3fe380f35f5b40e200b3", "message": "Create file from correct String\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811246 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/6f57ac3f589e9c067d79e429926de478073288f2", "message": "Avoid duplicate processing\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811235 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/20f059bb90ebcbe1271d21ffaf46962b3a70b2dd", "message": "Start to improved Java 9 JAR scanning\nMake StandardJarScanner easier to extend\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811226 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/a707e35540bacabd943548469d88148d26c8d521", "message": "getDeclaredConstructor() -> getConstructor()\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811220 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/1cea7ad85643697e4b81c8c46f2cb6c35d6b47b2", "message": "Update test to fix failure after newInstance() refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811206 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/b2351daa94b954b6cea753a88557c2139a21791c", "message": "Fix some more deprecation warnings when building with Java 9.\nUse of Class.newInstance() in jdbc-pool\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811205 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/100a8088de3f1501e3e82546dc1d2114234199cc", "message": "Fix some more deprecation warnings when building with Java 9.\nUse of Class.newInstance() in test code\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811204 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/c9a9879bad8e12951b85d33355a416db8fc317b4", "message": "Fix some more deprecation warnings when building with Java 9.\nUse of Class.newInstance() in o.a.tomcat\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811203 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/6972093b3daffacecb45d016721b025109fc7fb2", "message": "Fix some more deprecation warnings when building with Java 9.\nUse of Class.newInstance() in o.a.naming\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811201 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/31af7090ea1339b811befdeac091fdab81628dd1", "message": "Fix some more deprecation warnings when building with Java 9.\nUse of Class.newInstance() in o.a.juli\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811200 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/97d4a3d8fe04edc77207c25d763631a9680fae46", "message": "Fix some more deprecation warnings when building with Java 9.\nUse of Class.newInstance() in o.a.jasper\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811199 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/d6de67e099df7007dac7dfe266518ebb178ec440", "message": "Fix some more deprecation warnings when building with Java 9.\nUse of Class.newInstance() in o.a.catalina\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811198 13f79535-47bb-0310-9956-ffa450edef68"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/34903030", "body": "Thanks. Patch applied to trunk (8.0.x) and ported to 7.0.x and 6.0.x. I also removed an additional instance.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/34903030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/34908750", "body": "This pull request will not be applied because the JRE only install is not broken. Further, even if the service.bat script was broken for the use case when only JRE_HOME is set, this pull request still would not be applied as it contains multiple unrelated changes resulting from changing the built file rather than the source.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/34908750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/42253821", "body": "I am also -1 on this change. I'd actually prefer to see fewer comments in the default server.xml rather than more comments.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/42253821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/43977698", "body": "A rather late response but yes, this pull request should be closed (which I don;t think I can do - can I?)\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/43977698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/43977821", "body": "I believe a variation of this has been applied to trunk and that this pull request can be closed.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/43977821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/69624704", "body": "This pull request is declined. Even ignoring the poor quality of this pull request, supporting JSON formatted data is an application concern, not a container concern.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/69624704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/87757450", "body": "-1.\nServlet 3.0 and later webapps have resource JARs (assuming the JAR is packaged correctly). For single JAR apps, the Tomcat 8 resources implementation can be used to serve JSPs from any location within a JAR.\nSupporting this in Tomcat 7 would require a new DirContext impl. Given how fragile that code is I'd be extremely reluctant to make any changes to it that were not strictly necessary.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/87757450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/87983701", "body": "No. That is not what I am saying at all.\n\nI am saying the functionality you state you want to add (serving JSPs from within a JAR) can already be achieved by existing functionality for Tomcat 8 and trunk. Tomcat 7 would require a new DirContext implementation (which is likely to be very risky).\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/87983701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/106360093", "body": "Starting Tomcat with an appBase that is not an existing directory is an error and is reported as such in the logs.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/106360093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/109959429", "body": "OK. I've copied the Geronimo classes across and fixed the checkstyle and compilation errors. I've now seen some additional issues that need to be addressed.\n1. Remove the @version lines from the Javadoc (and the whole comment if that is the only Javadoc present)\n2. Line length (80 for comments, 100 for code)\n3. Use imports (particularly noticed in AuthConfigFactory)\n\nAnd something I forgot in my comment on the commit, the integration into build.xml should be a separate commit to.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/109959429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/110393102", "body": "1) I haven't reviewed the build.xml changes since I don't want to start building this JAR until the API is correct.\n2) Patch was incomplete. Applied along with additional patch for missing elements.\n3) I'm not convinced (yet) of the need for this refactoring. And it appears to have broken the caching.\n4) Patch was incomplete. Applied along with additional patch for missing elements.\n5) I'm not convinced. At least one commit contained tabs which checkstyle would have rejected.\n6) Look harder. For example. AuthConfigFactory has a number of additional constants. I typically use javap against both Tomcat and the reference implementation and diff the two results. I'll even go as far as re-ordering the methods in Tomcat to remove changes from the diff. When I ran this against the Geronimo classes there were a number of differences between Geronimo and the reference implementation.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/110393102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/130565904", "body": "The patch appears to be quite large for a marginal benfit. Separating the refactoring and the changes into separate commits would enable the true scale of the changes to be judged.\n\nI remain on the fence about this enhancement, pending a patch that clearly shows the scale of the changes.\n\nI am -1 on the patch as current written since:\n- it is not thread safe (look at the Java class cache)\n- it does not follow the coding style of the existing code:\n  - no tabs (use 4 \\* spaces for indent)\n  - no new line before {\n  - no space after (\n  - no space before )\n- it uses system properties for configuration when they are not necessary. Configuration for this feature should be at the Context level\n- no documentation provided\n- no license header in new files\n- max coding line length is 100\n- max comment line length is 80\n- it needs to be dsiabled by default\n\nI also have some more general concerns about this feature:\n- Is parallel threads scanning the same class an issue and if so, how do we prevent that?\n- The deployment process is already (or can be) multi-threaded. How much benefit does this feature provide when multiple apps are being deployed in parallel?\n- What will be the impact on performance for already deployed applications if this feature is enabled?\n- Is a 20s default tieout to scan a JAR appropriate?\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/130565904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/131576391", "body": "My comment regarding separating the refactoring and the functional changes stands. It is not the refactoring I am against, it is the mixing of refactoring and functional change in a single commit.\n\n/res/checkstyle\nNot every rule I mentioned is enforced mainly because not all of the current code follows it (due to the age of the code). We could go through and make all the changes but that creates a different problem (back-ports get more difficult). The general rule is a patch should follow the style of the code it is changing.\n\nRegarding thread safety I can now see that my concern regarding the Java class cache was mis-placed. However, scanning an individual class triggers the scanning of all the classes in the hierarchy. If those classes are in different JARs then you will get the same class scanned by multiple threads. How much of an issue that is is TBD.\n\nWhile this feature is likely to improve the startup of a Tomcat instance with a single, large application deployed on a multi-core machine I am far from convinced it will help when there are multiple applications deployed particularly when there are more applications deployed than cores available.\n\nYour lack of concern for the impact this feature may have on running applications is worring. As currently written it is likely that a deployment using this feature would have a noticeable performance impact on running applications if the system was moderately loaded at the time.\n\nMy position remains -1 on the proposed patch and neutral on the feature.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/131576391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/172488725", "body": "It appears this pull request was opened in error.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/172488725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/184110339", "body": "Spam. This idiot has been blocked.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/184110339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/188460191", "body": "Generally I like this patch. I do have a couple of comments:\n- I think it makes sense to make the change to a generic approach immediately. One way of doing this would be for the precompressed init param to take a comma separated list like \".gz,gzip,.br,br\". It would need suitable sanity checking.\n- The preference for different encodings is set by the client, not the server. See RFC7231, section 5.3.4. Look at o.a.catalina.Request.parseLocales() for a way of handling q values.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/188460191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/238803240", "body": "Rename the page. If someone complains, we can look at adding a redirect although we'll need to handle both Tomcat (for releases) and httpd (for the website). I'd prefer to have a single solution for both but I don;t see one at this point.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/238803240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/284432417", "body": "Patch applied. Thanks.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/284432417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/290742348", "body": "This change was made to trunk over 6 months ago.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/290742348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/292814996", "body": "Spam ", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/292814996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/292861020", "body": "Spam", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/292861020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/306182201", "body": "Given the name of the method call, the proposed comment adds no value. The patch also uses tabs rather than spaces.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/306182201/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307556995", "body": "I think more discussion is required on how to approach this. Specifically, when should the offset be applied? What is the impact on getters and setters? For example connector.setPort (getPort ()) should be a NO-OP. What is reported via JMX? There are all sorts of side effects that need to be thought through here else we'll end up creating some very non-intuative behaviour.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307556995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/309300523", "body": "Most added comments add no value. The s/poller/pollers/ change is the only one worth considering and that is a trivial change.\r\nThe patch uses a mix of tabs and spaces for indents.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/309300523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/311041570", "body": "My favourite kind of patch. It fixes a problem by deleting stuff. :)", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/311041570/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/311170062", "body": "Tomcat fails to compile after applying this patch.\r\n\r\nLooking in to this, I don't see any reason for BaseModelMBean to throw exceptions in its constructor. As far as I can tell, the constructor (and the matching constructors on all the sub-classes) can be removed.\r\n\r\nI'm going to look into this before coming back to this PR. No need to update the PR. The changes required are minor enough that I'll handle it on merge.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/311170062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/314524951", "body": "As requested.\r\nNote: normally projects can't close PRs like this but I can because of my infra role.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/314524951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/318673144", "body": "Patch applied. Many thanks.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/318673144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/320617826", "body": "Tomcat provides (by default) a static content cache in the resources layer so I do wonder if there is much benefit in caching the content in the JSP engine as well.\r\nThe proposed cache appears to be unbounded which is likely to be a problem for larger installations. Also, there is no need to cache the JSP content once it has been processed.\r\nMy original thinking was more along the lines of some refactoring to allow re-use of a single buffered input stream with some limit on the buffer size that could mean the stream did need to be re-opened for large JSPs.\r\nIt may be that the static content cache provided in the resources layer provides sufficient benefit that tidying up the multiple input streams provides minimal additional benefit in most cases. Where I would expect it to help is the case when (for whatever reason) caching in the resource layer is disabled.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/320617826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/321254441", "body": "My point is that with the o.a.c.webresources.Cache in place, this solution offers little additional benefit. I'm not suggesting creating dependencies from Jasper to Catalina.\r\n\r\nOn closer inspection, caching the content in the ParserController does limit the lifetime of the cache appropriately.\r\n\r\nThere are more than 2 reads per file. The process to determine encoding is another read.\r\n\r\nMy thinking is really just a different solution. It just caches the content in a different place - a buffered input stream. From memory there was also the opportunity to reduce some unnecessary processing (the result would be unchanged from the #parseDirectives phase) in the #parse phase.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/321254441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/333639417", "body": "-1\r\nThe public API of specification defined classes may not be changed.\r\nThis method would be worth adding to o.a.catalina.filters.FilterBase if any of Tomcat's internal filter implementations could make use of it (i.e. if it resulted in removing more code than it added)", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/333639417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/333651660", "body": "Generally, I'm in favour of refactoring that reduces the overall volume of code.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/333651660/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/334250974", "body": "There is definitely some value here although we might not choose to skip some parts of the patch. Let me pull in the obvious stuff and then we can see what is left.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/334250974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/334265792", "body": "I think I've pulled the obvious wins into Tomcat. Take a look and if you think there is merit in further changes please feel free to open another pull request.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/334265792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/336379669", "body": "I've added some comments to the bugzilla issue on how this might be addressed.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/336379669/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/336380991", "body": "Chris's original concern with the BZ 57767 patch (lack of Javadoc) still needs to be addressed.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/336380991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/336384584", "body": "I did wonder if this would be better as configuration on WsFilter but on reflection a separate Filter looks to be simpler for users to configure.\r\n\r\nThe patch needs documentation (webapps/docs/config/filter.xml)\r\n\r\nNo need to patches for the back-ports. We'll use svn merge and add NO-OP methods as necessary.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/336384584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/336388738", "body": "Making those classes final will cause problems if users have extended any of them. While that seems unlikely, experience suggests it has probably been done somewhere.  Is there any reason super.clone() can't be used instead for these?", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/336388738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/336398064", "body": "Thanks. Patch applied to trunk and back-ported to 8.5.x, 8.0.x and 7.0.x.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/336398064/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/336433353", "body": "No objections to back-porting here.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/336433353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/337965476", "body": "Those aren't placeholders. It is intentional content. I believe they are meant to be a lighthearted way of indicating that 'Context' is the only term that needs introducing.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/337965476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/337969483", "body": "We could pull the entries and add \"That's it!\" after the list.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/337969483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/341640157", "body": "The duplicated code is a sign that this could be handled elsewhere with less code (i.e. in StringUtils)", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/341640157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/342786246", "body": "Thanks for the proposed patch. I opted for a more general solution in StringUtils since fixing that problem there should - in theory - prevent it appearing anywhere else StringUtils is used.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/342786246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/342839243", "body": "This needs a wider discussion on the dev list first.\r\n\r\nHowever I do have some initial high level comments:\r\n- The choice of package is unexpected\r\n- Headers need to be standard ASF headers\r\n- Author details need to be removed\r\n- At least one file appears to have been written by someone other than the person submitting the pull request. That is a huge red flag as it is not clear that the person submitted the pull request has the necessary rights to do so.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/342839243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/343259683", "body": "Looking at this is on my TODO list to look at before the next release", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/343259683/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/345674097", "body": "Note there is a minor typo in the test method name. I'll fix that when I apply the patch.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/345674097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/345691175", "body": "Applied in r1815802", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/345691175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/349368600", "body": "This is a partial fix. It only addresses the attributes of the mbean element.\r\n\r\nI'm wondering if, rather than duplicate the comments in the DTD file, if it would be simpler to copy the DTD to the docs and link to the DTD.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/349368600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/349434741", "body": "Thanks for the patch. There wasn't anything wrong with it but the more I thought about it, the more I thought that referencing the DTD directly was a better solution.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/349434741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/351557171", "body": "The current OPTIONS behaviour is intentional.\r\nOPTIONS lists the valid methods, not the permitted methods, for a resource.\r\n\r\nThe GET/POST issue is before my time with the project. There might be some explanation in the mail archive. I agree with Chris it is unlikely to change.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/351557171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/351672274", "body": "The inconsistency stems from the different status codes used. If TRACE is disabled at the connector, level then a 405 is returned for TRACE requests. If readOnly is set in the DefaultServlet, a 403 is returned for PUT and DELETE. Methods that return a 405 should not be included in an OPTIONS response.\r\n\r\nDoing some mailing list archaeology, the readOnly parameter started out in the WebDAV servlet ( http://markmail.org/message/vls7an5nhf7eigwc ) and was refactored to the Default Servlet shortly afterwards ( http://markmail.org/message/vls7an5nhf7eigwc ). All this was back in 2000.\r\n\r\nLooking at RFC 2616 (since this code pre-dates RFC7231) there isn't much to choose between 403 and 405. Both look equally applicable. One obvious difference for this use case is that a 405 MUST include an Allow header so on that basis using 403 looks to be the simpler implementation.\r\n\r\nRFC 7231 adds some detail on the differences between 403 and 405. In short 405 means 'method never allowed' whereas 403 means 'request not allowed but might be allowed with different credentials'.\r\n\r\nIn this case it is arguable that 405 is the better response code since if readOnly is true, PUT and DELETE are never going to be allowed (with a similar argument applied to many of the WebDAV methods). We have made changes in 9.0.x to better align with RFC 7231 so I'm not against considering changing the status code used. That would also mean changing the OPTIONS response.\r\n\r\nAs I have been researching this I noticed that the is scope to clean up the existing code. HttpServlet.doOptions()  could use a StringBuilder and ALLOW_OPTIONS seems unnecessary. DefaultServlet.doOptions() appears to be unnecessary as well. This clean-up assumes the current behaviour is not changed. A switch to using 405 is likely to impact some of that clean-up.\r\n\r\nIf there is interest in switching the DefaultServlet to use 405 rather than 403 when readOnly is true, I'd suggest that a discussion on the dev@ list is required to ensure there is consensus on this approach.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/351672274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/354810610", "body": "I wanted to clear something up. It is not a case of me being willing to change something or not. I don't get to decide these things on my own. It is a community decision. Normally, we discuss things until we reach a solution we can all accept. In the unlikely event we can't reach an agreed solution then the PMC would have to vote to resolve the impasse. It is extremely rare that things reach that point.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/354810610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/354811636", "body": "Getting back to whether readOnly should affect POST, my own view is that it should not. readOnly refers to whether the default Servlet can change static content. For static content request parameters (via GET or POST) are irrelevant since they are ignored. Hence why POST defers to GET. Neither change existign content hence neither should be affected by readOnly. If the default Servlet (or WebDAV since it extends the default Servlet) used the request parameters then it might (depending on how they were used) be different.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/354811636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/355946556", "body": "Lack of response == lazy consensus. I plan to look at applying these patches (or possibly a variation of them) before tagging 9.0.x.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/355946556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/355979596", "body": "No argument with Konstantin's points here. I started to look at implementing this and I realised that the WebDAV is inconsistent with how the allow header is generated. A method may not be included in the allow header but will not generate a 405 if that method is used for the same resource. That seems wrong to me.\r\nBefore I start changing this, I'm going to put together a simple test case to check it and dig out the WebDAV test suite we have used in the past to make sure my changes don't break anything. This is probably going to delay the tag by a day or so.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/355979596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/356289613", "body": "I've fixed this in trunk. Given the behaviour changes (you can bet someone depends on a 403 rather than a 405 response) I'm not going to back-port it.\r\nThe way I ended up tackling this (WebDAV first then Default) meant I didn't work from the patch but I certainly depended heavily on this discussion.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/356289613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/tomcat/comments/14730299", "body": "The patch is unnecessary. The Tribes StringManager does not have to support multiple locales whereas the main StringManager (o.a.t.u.res) does.\n\nThere are multiple StringManager implementations to avoid unwanted dependencies.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/comments/14730299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/comments/21553794", "body": "Let me take a closer look at this one. Generally, I think we need to move away from using ''{n}'' and use [{n}] more consistently.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/comments/21553794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/129111529", "body": "The log message is intended to show if the connection remains in keep-alive after the current request finishes. You want to look at the Connection header (for close) on the response here to mimic the behaviour described for httpd.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/129111529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "rmaucher": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tomcat/commits/3c0d362a1c12f6e28015d1146f5bbd0888c20087", "message": "62002: Skip test for Java 9 (the CL is not a URL CL, did not investigate further).\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821490 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/06811b29d78e88490c4363963d9074126ef39e58", "message": "Typo.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821159 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/7aa6c8f6469287a140ffc4770f5d4dfb58468b77", "message": "61999: Disable saving POST data when maxSavePostSize is set to 0.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821157 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/7f0756dc649cbe6e796fe59b23a5b53411032420", "message": "Fix order issue in the sendfile setup code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820963 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/c4b4ded24966ae0d164f5220e0e6e6c34a16a2da", "message": "Following a report on the user list, the \"buffer full\" check and clear seems misplaced for NIO2, and should happen before a read.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820272 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/c05ef225ff370204b95598abf3ae201b96415e98", "message": "61945: Remove recursion when using prototype mode.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1819844 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/81bca3a2c9dbf9d6d857cc06b8b8a6ca3dda4259", "message": "61914: Avoid possible NPE on Java 9 when creating a SSL engine. Patch submitted by Evgenij Ryazanov.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1818919 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/d6088b055ab7b12fa923545d1f953629f22f4e4f", "message": "61918: Fix connectionLimitLatch counting when closing an already closed socket. Based on a patch by Ryan Fong.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1818711 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/fd4672ed86cf46e235b74bf57b644423c2fe4233", "message": "Add code to read from the internal buffer first, the upgrade transition has leftover bytes and is not manageable otherwise.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1818575 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/4bfd6bb092e446e12a872068cf496a17e8dc22d8", "message": "Take advantage of the cached session principal if possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817289 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/4818183a396fa0b98ea41773f4b4032d71e710a3", "message": "- Don't use setHeader for the cookie header, the header copy is done before.\n- Use AJP auth mechanism to pass a userName that will be used again for auth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817166 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/e5a1d4ab2d1423368930029e2387f6305b39a574", "message": "Revert\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817109 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/1141b3d00cd9653fe42f5f0c18001cef6190a4a5", "message": "Minor push builder fixes: don't remove the auth header, and exception on an empty method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817105 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/cd0248c4f6a6fe2d8f3452bbb6e65aafbf6e4683", "message": "Do not call onDataAvailable without data to read. I tried method with less side effects, but they all caused problems elsewhere, while this one passes the testsuite and everything else I could test it with.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816887 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/41eab912ae8123bf3e843bd53726454959048490", "message": "Add back the removal of HTTP mapping override as it matches the javadoc behavior (it is the same as for include). As this is highly questionable (it is obvious AsyncContext.dispatch should be equivalent to a forward instead), this is in the strict compliance flag.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816643 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/043c3a1422e4b7e93a571654e06a592f3964a907", "message": "Revert unwanted changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816627 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/61b9577e854d33f30409af798d3edfb62bc492fe", "message": "Revert r1816617\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816624 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/50e7b769c8dad5455f103fa59630e13194905401", "message": "Add a bare bones default-context-path impl (best effort really, it's a bad feature). Also fix for some mapping paths, excluded pending some clarifications.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816617 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/6593d2e7696565ab480a283cdf006d379f03e45a", "message": "Remove useless listener.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816546 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/17bb0f3ff8ea54a007d60d7bb3c3ff4209b16499", "message": "The system property replacement from the property source is best done using a system property of its own rather than a listener. Embedded can call the static method directly. Deprecate the (useless) listener.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816545 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/72627da6afca2f54a8b205519a4f62f182d08910", "message": "Add NPEs to ServletContext to match the javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816541 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/d0901874e1f9e174ac2dfc30a474f847ab4af281", "message": "61803: Remove outdated security considerations on SSL options. They changed, and the default is now secure, so it should be ok to drop them.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816157 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/8fe3b6e63ba74d7d2d07dab824de4eecf646bac5", "message": "Improvement on header write sync.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815456 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/744be00fb651dc3afbfd582255023759381fa4aa", "message": "Although I don't understand why yet, the test for BZ61740 demonstrated the headers write need a sync. This has a performance cost.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1814733 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/a9622e70568229caaece82d6673238a9d1fb0d0c", "message": "61719: Add a null check for apparent NPE possibility (all other places ensure the buffer is not null). Not sure if there's a worrying root cause.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1814195 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/bbbee0d96e82fb2a5cbac730366ac49ccb0d366d", "message": "61681: Allow HTTP/2 push when using a request wrapper. The main problem is that newPUshBuilder doesn't allow passing the base request, unlike startAsync, so add an extra proprietary method to do it. The request wrappers will then have to use reflection or cast to the base RequestFacade type.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1814192 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/1153498d9dac2001959f980eb69d26efb816ff0b", "message": "Add a useSendfile attribute for HTTP/2.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1814181 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/716c3a8810027376c5ba65b5f5a4f8902264c0b9", "message": "Reduce default stream concurrent execution from 200 to 20.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1813919 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/3081e2b4bfa282c10b5f9ae69dad29a4343839f9", "message": "Add sendfile support for HTTP/2 NIO2 using mapped files. Performance seems to be improved with h2load.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1813918 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/d7bf3a839ec892b568df0e88027befbd957b43d6", "message": "Cleanup the async IO syncs a bit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812551 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/76a2c1b1a664f940108a3595586c3638f1ef1911", "message": "Fix the merge mess caused by me cut&pasting the client code back to the container class. Noticed while porting to 8.5. Also fix the i18n property names.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812142 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/ce78902015ff6cb2aa673ca936ddab9beb73c225", "message": "Follow up to fix bad interaction with the recursive algorithm.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812135 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/8beba8a1eab59d3b305ee78ed00536306b47ca8d", "message": "Remove redirectSet field to avoid thread safety problems.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812134 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/240ef9172296e82b3e0c5c4cd8b5f7fee9725639", "message": "57767: Add support for authentication to the websocket client. Patch submitted by J Fernandez.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812129 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/bf3649492a9abeab70cfaf0e408888de5bfea7b0", "message": "61603: Add XML escaping to the names of some memory pools. The escape/filterXml methods could be factored out maybe (although it would add imports on other JARs).\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811704 13f79535-47bb-0310-9956-ffa450edef68"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/336431974", "body": "Well, it looks ok to me overall, so I'll add a bit of javadoc and merge it. Any issue with backporting it ?", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/336431974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/345239934", "body": "Abstraction is ok, more importantly limiting the number of impls will make it much much easier to maintain.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/345239934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "violetagg": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tomcat/commits/fca4ac9e3e5cf7688f8c8bd535d93b947d289f48", "message": "Fix typo. Fixes having an issue number are sorted by their number, ascending.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820634 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/7a9d41e35ab099df9ef02cc179a9103f600f2924", "message": "Fix typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1818647 13f79535-47bb-0310-9956-ffa450edef68"}, {"url": "https://api.github.com/repos/apache/tomcat/commits/d014b3aa31a0820fb2e787d534e8770fc473188f", "message": "Fix typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816563 13f79535-47bb-0310-9956-ffa450edef68"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/153633527", "body": "Hi,\nThanks for the patch.\nFix is available in trunk and Tomcat 8 (for 8.0.29 onwards).\nRegards,\nVioleta\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/153633527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/165754059", "body": "Hello,\n\nThe encoding specified by the user is provided to the ResponseWrapper.\nThe ResponseWrapper is provided with the method `doFilter` instead of the original Response. Thus after this filter every component will work with this ResponseWrapper using the correct encoding.\n\nWhy do you need to set the encoding to the original Response?\n\nRegards,\nVioleta Georgieva\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/165754059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/165765057", "body": "Can you provide a sample example that demonstrates the issue?\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/165765057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/165781265", "body": "I meant an example application which we can use to reproduce the issue that you are describing.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/165781265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/166293296", "body": "Ok,\n\nI understand now ...\n\nYou misunderstood the usage of that filter ...\n\nIt is specified in the documentation [1]:\n\"encoding - Name of the character set which should be set, if no other character set was set explicitly by a Servlet.\"\n\nSo for example if you specify the following `response.setContentType(\"text/html\");` in your servlet `UsersController` then the specified encoding `UTF-8` will be used and not `ISO-8859-1`.\n\nRegards,\nVioleta\n\n[1] http://tomcat.apache.org/tomcat-8.0-doc/config/filter.html#Add_Default_Character_Set_Filter\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/166293296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/238157598", "body": "Hi,\n\nI have one comment about renaming the page.\nIf there are bookmarks to that page with this change we will break these bookmarks.\n\nOtherwise the change is OK.\n\nWdyt?\n\nRegards,\nVioleta\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/238157598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/238784022", "body": "Hello,\n\nTypos are fixed with r1755675.\n\nRegards,\nVioleta\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/238784022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/239369097", "body": "Hi,\n\nYour patch was applied with r1755717.\n\nRegards,\nVioleta\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/239369097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/290724718", "body": "Hi,\r\n\r\nAre you sure that your repository is up-to-date?\r\nThe current revision is https://github.com/apache/tomcat/blob/trunk/build.properties.default#L189\r\n\r\nRegards,\r\nVioleta", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/290724718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/305586282", "body": "> I noticed instances of the code where curly braces were omitted for single-statement ifs, \r\n\r\nYep, we know that. If you take a look at the history you will see that typically when we prepare changes first make a change with formatting if we see that it is needed and then implement the change.\r\nWe use \r\n- the standard Eclipse formatting  \r\n- spaces only \r\n- lines up to 100 chars for code and 80 chars for javadoc, comments etc. \r\n- some additional settings for the compiler and javadoc http://svn.apache.org/repos/asf/tomcat/trunk/res/ide-support/eclipse/java-compiler-errors-warnings.txt", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/305586282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/305596629", "body": "> I was pointing out these examples while trying to figure out if you still require that I wrap each single statement if with braces, which would make the code less readable IMO.\r\n\r\n+1 for `switch` as you proposed earlier ", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/305596629/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/309113846", "body": "The change was applied with commit https://github.com/apache/tomcat/commit/cb884bfdcb537edadd9185fbd8af126c72af4ba5", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/309113846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/310175441", "body": "There aren't any replications since yesterday :(", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/310175441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/tomcat/comments/14154856", "body": "It is fixed with next commits.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/comments/14154856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/comments/14154860", "body": "It is fixed with next commits.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/comments/14154860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/comments/14154864", "body": "It is fixed with next commits.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/comments/14154864/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/comments/14154865", "body": "It is fixed with next commits.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/comments/14154865/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/95390817", "body": "this is not a spelling mistake", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/95390817/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/95391186", "body": "this will not be handled as part of this PR", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/95391186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/95391357", "body": "this is not a spelling mistake", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/95391357/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/95391733", "body": "this is not a spelling mistake", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/95391733/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/95392385", "body": "This is a protected method and if we change it this will be incompatible", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/95392385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/95392687", "body": "This is a protected method and if we change it this will be incompatible", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/95392687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/95393551", "body": "this is not a spelling mistake", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/95393551/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/95394344", "body": "This is generated code", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/95394344/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/95394722", "body": "this is not a spelling mistake", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/95394722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/95395105", "body": "this is not a spelling mistake", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/95395105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/95395247", "body": "this is not a spelling mistake", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/95395247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/100014965", "body": "applied", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/100014965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/100014979", "body": "applied", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/100014979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/100014999", "body": "applied", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/100014999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/100015008", "body": "applied", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/100015008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/100015018", "body": "applied", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/100015018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/100015036", "body": "applied", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/100015036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/100015479", "body": "applied", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/100015479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/100015643", "body": "I'll try to extend the test", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/100015643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/100424012", "body": "fixed", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/100424012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/119538772", "body": "Hi,\r\n\r\nFrom code format point of view: We use curly braces even when there is only one statement in \"if\", \"for\" blocks.\r\n\r\nRegards,\r\nVioleta", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/119538772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/119539287", "body": "Hi,\r\n\r\nFrom code format point of view: Keep the closing curly brace with \"catch\" on the same line.\r\n\r\nRegards,\r\nVioleta", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/119539287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/126773883", "body": "Please add copyright header", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/126773883/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/126779410", "body": "This is not working on my system as I have **space** in the path:\r\n\r\n```\r\njava.io.FileNotFoundException: /.../tc9.0.x%20(trunk)/.../org/apache/juli/logging-non-rotatable.properties (No such file or directory)\r\n\tat java.io.FileInputStream.open0(Native Method)\r\n\tat java.io.FileInputStream.open(FileInputStream.java:195)\r\n\tat java.io.FileInputStream.<init>(FileInputStream.java:138)\r\n\tat java.io.FileInputStream.<init>(FileInputStream.java:93)\r\n\tat org.apache.juli.ClassLoaderLogManager.readConfiguration(ClassLoaderLogManager.java:469)\r\n\tat org.apache.juli.ClassLoaderLogManager.readConfiguration(ClassLoaderLogManager.java:309)\r\n```", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/126779410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "csutherl": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tomcat/commits/588bdbfc2a3171bd475b5bb31b560bd2a0c43a01", "message": "Follow-up to r1816546 The Listener was removed, removing documentation reference.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817791 13f79535-47bb-0310-9956-ffa450edef68"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/314485041", "body": "@kkolinko or @markt-asf can we close this PR? It doesn't have any changes in it and is pretty old.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/314485041/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/337967336", "body": "This is a least the fourth time I've seen someone asking about this. Should we make a note or use a sarcasm font or something? :) It's funny, but seems to be confusing new folks.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/337967336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "isapir": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tomcat/pulls/77", "title": "Removed findbugs bad practice warnings by making classes final", "body": "CN org.apache.catalina.tribes.io.ChannelData.clone() does not call super.clone()\r\nCN org.apache.catalina.tribes.membership.Membership.clone() does not call super.clone()\r\nCN org.apache.catalina.tribes.tipis.AbstractReplicatedMap$MapMessage.clone() does not call super.clone()\r\nCN org.apache.catalina.util.URLEncoder.clone() does not call super.clone()", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/63", "title": "added portOffset attribute to server.xml per BZ-61171", "body": "https://bz.apache.org/bugzilla/show_bug.cgi?id=61171", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/305558275", "body": "@violetagg Thank you for your feedback, I updated the `for`, `catch`, and one of the `if`'s.\r\n\r\nWhile looking into updating the rest of the `if` statements I noticed instances of the code where curly braces were omitted for single-statement `if`s, e.g.\r\n\r\nhttps://github.com/isapir/tomcat/blob/e51512fdc062ffd07a3dd323cba76ab057d23322/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java#L256\r\n\r\nhttps://github.com/isapir/tomcat/blob/e51512fdc062ffd07a3dd323cba76ab057d23322/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java#L424\r\n\r\nhttps://github.com/isapir/tomcat/blob/e51512fdc062ffd07a3dd323cba76ab057d23322/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java#L470\r\n\r\nhttps://github.com/isapir/tomcat/blob/e51512fdc062ffd07a3dd323cba76ab057d23322/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java#L500\r\n\r\nhttps://github.com/isapir/tomcat/blob/e51512fdc062ffd07a3dd323cba76ab057d23322/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java#L503\r\n\r\nhttps://github.com/isapir/tomcat/blob/e51512fdc062ffd07a3dd323cba76ab057d23322/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java#L537\r\n\r\nhttps://github.com/isapir/tomcat/blob/e51512fdc062ffd07a3dd323cba76ab057d23322/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java#L546\r\n\r\nhttps://github.com/isapir/tomcat/blob/e51512fdc062ffd07a3dd323cba76ab057d23322/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java#L564\r\n\r\nhttps://github.com/isapir/tomcat/blob/e51512fdc062ffd07a3dd323cba76ab057d23322/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java#L565\r\n\r\nhttps://github.com/isapir/tomcat/blob/e51512fdc062ffd07a3dd323cba76ab057d23322/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java#L570\r\n\r\nhttps://github.com/isapir/tomcat/blob/e51512fdc062ffd07a3dd323cba76ab057d23322/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java#L621\r\n\r\nAnyway, it seemed like I shouldn't even continue in that file.  If you want to enforce these styles then perhaps it'd be better to run the source code through a code formatter.\r\n\r\nThanks,\r\n\r\n\r\nIgal", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/305558275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/305590500", "body": "@violetagg Yes, I read that on http://tomcat.apache.org/getinvolved.html#Coding_Conventions\r\n\r\nI was pointing out these examples while trying to figure out if you still require that I wrap each single statement `if` with braces, which would make the code less readable IMO.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/305590500/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/305591047", "body": "@ChristopherSchultz That's exactly the kind of feedback that I was looking for.  I will address the points to the best of my ability.\r\n\r\nKeep in mind that after those changes, the commit will be much larger and take longer to review, which raises the concerns that I mentioned in the mailing list.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/305591047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/305608364", "body": "> Did you actually test it to see if it would give you the desired channel options?\r\n\r\nI actually did\r\n\r\n> A small unit test wouldn't hurt\r\n\r\nWill do", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/305608364/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 1, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/305636648", "body": "@violetagg I refactored the method to use `switch` statement as advised. https://github.com/apache/tomcat/pull/56/files#diff-5c721c838c78fa7c31f9eb62c27863ceR383\r\n\r\n@ChristopherSchultz \r\n\r\n>I think the patch should include some TRACE-level logging, especially when catching the NumberFormatException.\r\n\r\nAdded\r\n\r\n>If there is an unrecognized option string, it should at least result in a WARN message emitted to the log. I might even lobby for an exception to be thrown.\r\n\r\nThrowing IllegalArgumentException\r\n\r\n>There are options that seem to be in conflict with each other, if only in terminology: e.g. \"async\" and \"sync\" can be specified together, which would read like a bug in the config.\r\n\r\nIf we add this then it should go into setChannelSendOptions() so that we also check if two conflicting integer options are passed then we warn/throw.  I can add that, but it should be a separate ticket/PR IMO.\r\n\r\n>Splitting on a comma should include optional whitespace e.g. \"\\s,\\s\" as the pattern.\r\n\r\nChanged regex to `\\s*,\\s*` \r\n\r\n>The patch needs to include documentation for the string-based configuration options (webapps/docs/cluster-howto.html).\r\n\r\nAdded\r\n\r\n>The javadoc in the patch needs to include the list of acceptable string option-names.\r\n\r\nAdded\r\n\r\n>A small unit test wouldn't hurt, as well (just testing setChannelSendOptions(String) -> getChannelSendOptions:int would be fine).\r\n\r\nAdded, **but I couldn't run the test case** in my IDE.  getting an error `Error:(33, 16) java: package trailers does not exist` for `test\\org\\apache\\coyote\\http2\\TestStream.java` and other files and I'm not sure yet how to resolve the dependencies.  where is package `trailers` coming from?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/305636648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/305820914", "body": "That's fine.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/305820914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/306243980", "body": ">It is necessary to fix configuration docs (webapps/config/cluster.xml).\r\n\r\nAdded\r\n\r\n>The patch needs to include fix for mapSendOptions.  BackupManager use mapSendOptions instead of channelSendOptions.\r\n\r\nAdded", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/306243980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/306269700", "body": ">If you configure channelSendOptions in string form, you should also expose it to JMX in string format.\r\nYou can see org/apache/catalina/ha/tcp/mbeans-descriptors.xml\r\n\r\nI updated the type from `int` to `String`.  I see that the current implementation does the same for `channelStartOptions` which is also an `int`, but set as a `String` in the mbeans-descriptor, so I expect it to work the same even though TBH I have not tested with JMX.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/306269700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/306997290", "body": "Can we merge this or do we need to wait for @KeiichiFujino 's input?  I believe that I addressed all of the issues that he pointed out.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/306997290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307137884", "body": ">Even if updating the type of channelStartOptions from int to String in mbeans-descriptor,\r\nit will display int format values.\r\nBecause the channelSendOptions is always set to int format.\r\nif you set channelSendOptions = \"asynchronous\", 8 will be displayed via JMX.\r\n\r\nRight, because we are not changing the way that the value is stored, we are only adding a way to make it easier to set it.  You will still be able to change the value (not sure if that's even permitted at runtime) via JMX with either `String` or `int` value, but it will be displayed in its `int` form.\r\n\r\nThis is the way that it is already implemented for `channelStartOptions`\r\n\r\n        <attribute\r\n      name=\"channelStartOptions\"\r\n      description=\"This sets channel start behaviour.\"\r\n      type=\"java.lang.String\"/>\r\n\r\nWhich is also an `int`, but specified as `String` in the mbeans-descriptor, and TBH, it will be inconsistent if other similar values will be displayed as `int` and this one will be displayed as `String`.\r\n\r\n    public int getChannelStartOptions() {\r\n        return channelStartOptions;\r\n    }\r\n\r\nI can write a method to translate back from `int` to `String`, but IMO this is really unnecessary, as it is an advanced option which you don't normally change at runtime, and if you need to troubleshoot an issue then you know what value you expect to see.\r\n\r\nAgain, setting the value via JMX should work now with either `String` or `int` input.  It's only the way that it is displayed that remains an `int`.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307137884/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307176520", "body": "@KeiichiFujino @ChristopherSchultz I added:\r\n\r\n* a method to translate the int value to a string list:\r\nhttps://github.com/apache/tomcat/pull/56/files#diff-5c721c838c78fa7c31f9eb62c27863ceR439\r\n\r\n* `public String getChannelSendOptionsName()`\r\nhttps://github.com/apache/tomcat/pull/56/files#diff-8e81c1ebb6efdca13082a2798a305251R403\r\n\r\n* a read-only `channelSendOptionsName` in mbeans-descriptor\r\nhttps://github.com/apache/tomcat/pull/56/files#diff-9dca3596f50abfe90c0ed9b54d4e2092R32\r\n\r\n* a test-case that checks the string representation\r\nhttps://github.com/apache/tomcat/pull/56/files#diff-a638e8120005efa2cccdf63066b7fde5R53\r\n\r\nI believe that this addresses all of the issues with this PR.\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307176520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307226556", "body": "I'll change it.  Please wait.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307226556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307230001", "body": "@ChristopherSchultz I updated the patch according to your feedback: https://github.com/apache/tomcat/pull/56/commits/f0c3968570f70823d30cf18144e82591a7ee0cee\r\n\r\nI was actually trying at first to get it to work with a bit shift but when it didn't work I resorted to  `Math.pow(2, bit)` -- bit shift is definitely better, though it's possible that `Math.pow(2, x)` utilizes shift in the JRE anyway.\r\n\r\nIn any event, great feedback, thanks!", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307230001/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307277953", "body": "@KeiichiFujino Thank you for your prompt review.\r\n\r\n>you need to add BackupManager mbean definitions ... in org/apache/catalina/ha/session/mbeans-descriptors.xml\r\n\r\nThank you for providing the path.  I was looking for that and didn't find it easily.\r\n\r\n>There is a typo in ... \"channelStartOptions name.\" -> \"channelSendOptions name.\"\r\n\r\nCorrected.  I actually copied and pasted it from your comment above --\r\n https://github.com/apache/tomcat/pull/56#issuecomment-307055014 -- and simply added new line characters, but I should have caught that ;)\r\n\r\nCan you please confirm that as far as you're concerned this can now be merged?  @ChristopherSchultz is awaiting your approval.\r\n\r\nThank you :)", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307277953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307278095", "body": "@KeiichiFujino p.s. This is the last commit that addresses the issues above: https://github.com/apache/tomcat/pull/56/commits/192d2eb13e9ec9448e183dcc3b166f7d3577c250\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307278095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307575634", "body": ">I think more discussion is required on how to approach this. Specifically, when should the offset be applied? \r\n\r\n@markt-asf I agree, and I was trying to find different options for this in order to initiate a discussion, but the way that Tomcat reads the config files and initializes objects via introspection really limits us here unless there is a major overhaul.\r\n\r\nThe process is somewhat like this:\r\n\r\n1) `Connector`s are initialized (no reference to `Service` or `Server`)\r\n2) `Service` is linked to the `Connector`s (still no reference to `Server`)\r\n3) `Server` is added to Service\r\n\r\nPoint (3)  is point where I took the `portOffset` from Server and applied it to the `Connector`s.\r\n\r\n>What is the impact on getters and setters? For example connector.setPort (getPort ()) should be a NO-OP. \r\n\r\nAt point (1) above the Connector's setPort() is called by the IntrospectionUtils with the values from `server.xml`.  That can not be a NO-OP at that point as that would practically disable the Connector, but we can check if `Service` and `Server` are null or not (which they are at initialization) and perhaps do something different accordingly?\r\n\r\nIs it even possible/allowed to change the port after initialization?", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307575634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/309840866", "body": "@ChristopherSchultz can we merge this please?", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/309840866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/310137849", "body": "Thank you \ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/310137849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/310184842", "body": "Should I close it manually?", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/310184842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/333640833", "body": "OK, the reason that I added this method is that I saw `init()` and I did not realize that it was part of the spec since it is not marked with `@Override` and I've never seen it before (looks like it's new in Servlet 4.0)\r\n\r\nShould I re-submit the JavaDoc enhancements and add `@Override` to `init()`?", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/333640833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/333642118", "body": "Actually, I see that I can not add `@Override` since it's not part of the `javax.servlet.Filter` interface.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/333642118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/333649330", "body": "@markt-asf - What do you think about changing `FilterBase` so that it extends `javax.servlet.GenericFilter`?  That way we can use methods like `getInitParameter()` and have a single base class and \"cleaner\" code.\r\n\r\nFor example, ATM some filters extend `org.apache.catalina.filters.FilterBase` (e.g. ExpiresFilter, FailedRequestFilter) and others extend `javax.servlet.GenericFilter` (e.g. CorsFilter, RemoteIpFilter).\r\n\r\nI can provide a patch if you agree.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/333649330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/333652751", "body": "I believe that this will both reduce the overall volume of code and make the code more maintainable moving forward.\r\n\r\nI usually try to submit small patches so that they're easier to review and accept though, so the reduction of code might only be visible in the second step.  I will work on it a bit and see how it goes.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/333652751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/333666348", "body": "I plan to refactor the rest of the Filters as I did for `CorsFilter`, but wanted you to see first what I meant.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/333666348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/333688377", "body": "FYI:  It's easier to see the changeset via this link (adding `?w=1` to a GitHub PR URL ignores same-line whitespace changes):\r\nhttps://github.com/apache/tomcat/pull/74/files?w=1", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/333688377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/333700953", "body": "TBH upon further inspection the benefit of this patch is limited since most filters do extend FilterBase.\r\n\r\nWhile I do think that it provides cleaner code that can be helpful for future filters as well, I understand if you choose to reject it.\r\n\r\nBest,\r\n\r\nIgal", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/333700953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/334251500", "body": "Sounds good.\r\n\r\nIf you have more specific guidelines in mind then I'd be happy to implement/refactor accordingly.  Please advise if so.\r\n\r\nThanks.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/334251500/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/334266150", "body": "I saw the SVN commits -- thanks!", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/334266150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/334542989", "body": "Actually, I just noticed that `javax.servlet.Filter` added default no-op `init()` and `destroy()` (yay!), so this Filter can be modified to implement `javax.servlet.Filter` instead of extending `javax.servlet.GenericFilter` without further changes since it doesn't require FilterConfig or anything else.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/334542989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/334544962", "body": "I updated accordingly to save a few CPU cycles and a few bytes of memory for each Request that hits the Filter.  \r\n\r\nCumulative change can be seen at https://github.com/apache/tomcat/pull/76/files?w=1\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/334544962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/334545971", "body": "p.s. I noticed that you sometimes backport code to 8.5 and even further back.  If you accept this patch, and if you want to backport, I can issue a different patch since this one will not work on 8.x without adding `init()` and `destroy()`.\r\n\r\nPlease let me know if you want me to issue a patch for the older versions.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/334545971/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/334964103", "body": "Cumulative changeset can be viewed at \r\nhttps://github.com/apache/tomcat/pull/78/files?w=1", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/334964103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/336480568", "body": "Sure, I will add the documentation.\r\n\r\nThanks :)", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/336480568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/336483594", "body": "I actually started with using super.clone() but upon further research opted for marking the classes as `final`.  All the \"best practices\" advocates say to avoid using the faulty clone() method as described in Joshua Bloch's book _Effective Java_, and also described in articles online like http://www.artima.com/intv/bloch13.html\r\n\r\nI will refactor these to use `super.clone()`.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/336483594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/336524324", "body": "Great, I will implement as advised on BZ.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/336524324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/336655018", "body": "@markt-asf I added the documentation as per your feedback", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/336655018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/339208781", "body": "I imagine that this was opened by accident and should be closed by anyone with permissions (including the OP)", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/339208781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/340850126", "body": "@markt-asf I added the documentation that you requested", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/340850126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/342903447", "body": "@markt-asf Can you please pull this patch in?  It'd be great to have it available in Tomcat 9.  Thanks.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/342903447/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/343562911", "body": "@kkolinko I will create a ticket.\r\n\r\nUnfortunately the issue with WebSocket is due to the JSR-356 specification.  I have spent a lot of time researching this issue and unfortunately that was the only solution that I found.\r\n\r\nIt's weird and it's a hack, but unless the EG updates the spec that's all we have.\r\n\r\nSee discussions at \r\nhttps://stackoverflow.com/questions/21888425/accessing-servletcontext-and-httpsession-in-onmessage-of-a-jsr-356-serverendpo\r\nhttps://stackoverflow.com/questions/17936440/accessing-httpsession-from-httpservletrequest-in-a-web-socket-serverendpoint\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/343562911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/119663995", "body": "Violeta, thank you for your feedback.\r\n\r\nI'll add curly braces to the `for` block.\r\n\r\nSo each of those if's should have curly braces?\r\n\r\n    if (\"asynchronous\".equals(opt) || \"async\".equals(opt))\r\n            return SEND_OPTIONS_ASYNCHRONOUS;\r\n\r\n\r\nThat's a lot of curly braces...  Perhaps a `switch` statement would be \"cleaner\" here then?", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/119663995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "zemian": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tomcat/pulls/72", "title": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=59901", "body": "Caching jsp file read to improve performance\r\n\r\nHi, I added jsp file content cache inside ParserController for this enhancement. This reduced two read I found during the parsing for both XML jsp and standard jsp. \r\n\r\nImpl notes: The ParserController instance seems to be bounded to JspServletWrapper lifecycle though, so this will cache only per JspServletWrapper instance context as well. I have seen that some tag file processing will create nested instances of JspServletWrapper, and in this case, we still not able to use the cache. I wasn't sure was there a better place to add the cache that can reuse by multiple JspServletWrapper instances at this point. Please let me know what you think what you think so far.", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/320836295", "body": "Hi Mark,\r\n\r\n> Tomcat provides (by default) a static content cache in the resources layer so I do wonder if there is much benefit in caching the content in the JSP engine as well.\r\n\r\nAre you referring to `org.apache.catalina.webresources.Cache`? To me this enhancement is at jasper level, so I thought it make more sense to keep it self contained. Also, is okay to bring catalina classes into jasper package? But any rate, if you do decide we go this route, please confirm and I will look into it more.\r\n\r\n> The proposed cache appears to be unbounded which is likely to be a problem for larger installations. Also, there is no need to cache the JSP content once it has been processed.\r\n\r\nI thought about this, but my current proposed cache is already bounded by `ParserController` instance, and it is already per request only. You still think we should limit cache further? If we do this, then we add much more complexity to caching though. Please confirm if we need this.\r\n\r\n> My original thinking was more along the lines of some refactoring to allow re-use of a single buffered input stream with some limit on the buffer size that could mean the stream did need to be re-opened for large JSPs.\r\n\r\nI am not clear on this suggestion yet. Do tell me more if you strongly feel that's more the right direction. My current proposed solution is to cache the jsp file content as char array, then re-feed into different Stream/Reader that is used by jasper parser. The previous code will perform two reads per single jsp file processing: once for `ParserController#parseDirectives` and another for `JspDocumentParser#parse`. The proposed code will reduce these to one file read only. \r\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/320836295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/321436547", "body": "Okay Mark. At this point, I am not sure I have a full grasp of the solution you wanted yet. I will study little more and revisit this issue later.\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/321436547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jelmerterwal": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tomcat/pulls/54", "title": "Respect minimum pool size [#61032]", "body": "https://bz.apache.org/bugzilla/show_bug.cgi?id=61032", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/296639304", "body": "For an application I develop, I see a drop in connections. The screenshot show different values of the connection pool.\r\n\r\nLegend for the colours;\r\n- grey -> pool size\r\n- greenish -> idle connections\r\n- orange/red -> connections in use\r\n- purple -> waiting for a connection\r\n\r\n![screen shot 2017-04-24 at 13 49 43](https://cloud.githubusercontent.com/assets/5363087/25335835/07a5554c-28f5-11e7-97f4-d877f1181e50.png)\r\n\r\nThe application uses dropwizard (www.dropwizard.io) which internally uses Tomcat's JDBC Pool. The application has 4 instances. The graph shows the sum of these instances for the number of connections.\r\n\r\n- min size of idle connection is set to 10 (so should be 10 x 4 = 40)\r\n- the decrease happens due abandoning of connections\r\n\r\nThe documentation indicates a minimum pool of idle connections should be available. It scared me when I first saw this happening.\r\n\r\n```\r\nminIdle\r\n\r\n(int) The minimum number of established connections that should be kept in the pool at all times. The connection pool can shrink below this number if validation queries fail. Default value is derived from initialSize:10 (also see testWhileIdle)\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/296639304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/296739663", "body": "Below an image of further progress during the day. Where graphs peek at 40 the application has been restarted.\r\n\r\n<img width=\"793\" alt=\"screen shot 2017-04-24 at 18 48 00\" src=\"https://cloud.githubusercontent.com/assets/5363087/25348472/af5048f0-291e-11e7-9c5c-ee9c4ffc7a87.png\">\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/296739663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/298689498", "body": "@markt-asf could you have a look at this PR?", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/298689498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "alexisgayte": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tomcat/pulls/51", "title": "#41 Check and update session record if one already exists.", "body": "- Closed the Statement.\r\n- Update followed by insert if row==0 to minimize request.", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/290915053", "body": "Hi Guys,\r\nI could not run the test but I use mostly this code with my tomcat8.\r\nThat will fix the issue #41.\r\n\r\nAlso remove and create the session create some issue if you want to link the PK in the database.\r\n\r\n\r\n\r\n ", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/290915053/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/292193098", "body": "I can see the point to lock the table in case of load balancing.\r\nIn the normal case - no session sharing with the same database store - we already `synchronized (this) ` on the server side.\r\nBut the previous version was deleting and inserting only.\r\nWill it not put down the perf as 90% are update?\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/292193098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "katya-stoycheva": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tomcat/pulls/49", "title": "Fix parser to fail if leading zeros in IPv4 part of IPv6 address", "body": "Leading zeros are not causing failure if in IPv4 addresses though.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/126873614", "body": "Added", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/126873614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/126873704", "body": "added a line to decode URL path but this behavior is different in IDE (Eclipse in my case) and command line so please test both to be sure everything works", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/126873704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "zhanhb": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tomcat/pulls/45", "title": "Update RemoteIpValve.java", "body": "If originalRemoteAddr matches the trustedProxies, the valve should modify the address", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JohnKiel": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tomcat/pulls/41", "title": "Check and update session record if one already exists.", "body": "Check and update session record if one already exists, instead of deleting and re-inserting new record.", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/277789797", "body": "If you use SELECT FOR UPDATE, then you're also starting and committing a transaction, with the overhead that entails.  If the record is modified or even deleted between the time the SELECT query and UPDATE, it's of little to no consequence, and no worse than the current delete/insert method.  The worst result would be slightly stale session data being written, which is kind of an issue anyway if you have an application with that many threads all competing to save data for the same session at basically the same time.\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/277789797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "wangyf2010": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tomcat/pulls/22", "title": "[Bug 58242] Scanning jars in classpath to get annotations in parallel instead of synchronously", "body": "During tomcat startup, it takes most of time on annotation scanning.\nFor our case, our apps have over 500 jars in class path.\nTomcat startup takes 28 seconds and annotation scanning takes 23 seconds.\n\nSo idea is: scan jars in parallel, per our benchmark testing, it could save 9 seconds. And jetty9 already support this feature.\n\nPer Mark Thomas comments:\nNew features are first added to trunk and then back-ported.\n\nSo file another PR for trunk.\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/131473216", "body": "Thanks for your comments, market!\nUnderstood your concern, let me explain it one by one:\n\n> The patch appears to be quite large for a marginal benfit. Separating the refactoring and the changes into separate commits would enable the true scale of the changes to be judged.\n> I remain on the fence about this enhancement, pending a patch that clearly shows the scale of the changes.\n> Benefit of this feature:\n> For enterprise applications, there are tons of jars in class path.\n> For our case, one application have over 500 jars in class path, it took about 23s on annotation scanning. Scan them in parallel could reduce it to be 14s. That's big gains. And also scan it in parallel isn't a new idea, jetty already supported, anyway, it's a reasonable feature for tomcat also.\n\nAs for refactoring code on ContextConfig:\nContextConfig class has too many code inside it, and annotation scanning is an independent functionality indeed. And parallel scanning's idea is: split each jar's scanning as separate task to run.\nThat's why I'd prefer to have separate class and let it focus on one jar's annotation scanning.\nBTW, it's only move that jar scanning logic into new class, no change on all methods' logics. So from this perspective, change is few.\n\n> I am -1 on the patch as current written since:\n> \n> it is not thread safe (look at the Java class cache)\n> it does not follow the coding style of the existing code:\n> no tabs (use 4 \\* spaces for indent)\n> no new line before {\n> no space after (\n> no space before )\n> it uses system properties for configuration when they are not necessary. Configuration for this feature >should be at the Context level\n> no documentation provided\n> no license header in new files\n> max coding line length is 100\n> max comment line length is 80\n> it needs to be dsiabled by default\n1. code style\n   Could you let me know where is the check style xml for tomcat coding? I tried to find it, but haven't get it.\n2. document & license are problem, you're right. I will add them.\n3. system property to disable this feature should be in context level.\n   Agree, will cover that.\n\n> I also have some more general concerns about this feature:\n> Is parallel threads scanning the same class an issue and if so, how do we prevent that?\n\nIt isn't possible to let parallel threads to scan same class, because, this feature is split each jar's scanning as separate task and dispatch separate thread to scanning. Won't have the case that multiple threads scan same jar or same class.\n\n> The deployment process is already (or can be) multi-threaded. How much benefit does this feature >provide when multiple apps are being deployed in parallel?\n\nThis feature is for one app's performance improvement. Even multiple apps are deployed in parallel, this feature could benefit each app's startup. As for how much, it depends on each app's dependency jars. If there are tons of dependency jars, this feature could benefit a lot.\n\n> What will be the impact on performance for already deployed applications if this feature is enabled?\n\nFirst, you mean \"deployed\", means already started it or just deployed onto tomcat?\nIf you're meaning latter one. This feature is to improve server startup performance, not care whether this app is deployed or not.\n\n> Is a 20s default tieout to scan a JAR appropriate?\n\nyes, that's for one jar, that should be good enough, per benchmark metrics, 20s could scan one jar with size 200MB.\n\nThanks for your detail comments, again.\nFrom my view, scanning annotations in parallel is better way, and as web server, tomcat also need it.\nIt could benefit those monster apps, especially for enterprise level apps.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/131473216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/131489980", "body": "> it is not thread safe (look at the Java class cache)\n\nPlease refer AnnotationScanningResult, it will fork a new instance for Java class cache or maps, that means for each thread, they're operation their own instances. They're safe.\n\nAfter completed all threads operations, then will merge results together into shared instances.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/131489980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/131649270", "body": "> My comment regarding separating the refactoring and the functional changes stands. It is not the refactoring I am against, it is the mixing of refactoring and functional change in a single commit.\n\nmake sense, I can split it into separate commits for refactoring & feature.\n\n> /res/checkstyle\n> Not every rule I mentioned is enforced mainly because not all of the current code follows it (due to the age of the code). We could go through and make all the changes but that creates a different problem (back-ports get more difficult). The general rule is a patch should follow the style of the code it is changing.\n\nGot it, thanks for detail explanation for that.\n\n> Regarding thread safety I can now see that my concern regarding the Java class cache was mis-placed. However, scanning an individual class triggers the scanning of all the classes in the hierarchy. If those classes are in different JARs then you will get the same class scanned by multiple threads. How much of an issue that is is TBD.\n\nYou're right. I can see JavaClassCacheEntry isn't thread safe. Should cover it.\n\n> While this feature is likely to improve the startup of a Tomcat instance with a single, large application deployed on a multi-core machine I am far from convinced it will help when there are multiple applications deployed particularly when there are more applications deployed than cores available.\n\nThat's the feature will benefit single, large application better. Might not huge benefit for multiple applications. But that's fair enough, we can't rely on one feature to benefit all cases. And in enterprise environment, one single web app is deployed in a single tomcat indeed.\n\n> Your lack of concern for the impact this feature may have on running applications is worring. As currently written it is likely that a deployment using this feature would have a noticeable performance impact on running applications if the system was moderately loaded at the time.\n\nIt only need resources when scan annotations during server startup, impact is little. Even without this feature, deploy a new web app onto running tomcat, it will have performance impact also. What I'm thinking is: mark those forked maps to be null and let GC recycle them ASAP.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/131649270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ttddyy": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tomcat/pulls/18", "title": "Add QueryExecutionReportInterceptor and tests to jdbc-pool", "body": "Hello,\n\nI wrote a JDBC interceptor, `QueryExecutionReportInterceptor`, and would like to contribute it to jdbc-pool module.\n### About\n\nThe `QueryExecutionReportInterceptor` outputs all query execution related information to JULI log or system.out at the time of query(s) execution.\n\n_Feature:_\n- Configurable log level or System.out\n- Work with batch executions\n- Logs actual query parameters\n- Turn on/off query parameters logging\n- Support JSON output\n\n_The log includes:_\n- Query execution status (success/failure)\n- Query execution time\n- Statement type\n- Batch execution\n- Num of batch\n- Num of query\n- Query\n- Query parameter values\n### Motivation\n\nI wrote a query reporting framework before, [datasource-proxy](https://github.com/ttddyy/datasource-proxy), which uses similar mechanism that jdbc-interceptor uses - using proxy to intercept query execution and do some logic.\n\nThe reporting feature is very useful especially in debugging or trouble shooting.\nI think it would be more beneficial for users if this feature comes from part of tomcat-jdbc-connection-pool library. So, I rewrote my logic to match with jdbc-interceptor and enhanced a bit of it.\n### Sample Output\n\nStatement:\n\n```\nsuccess:true, type:STATEMENT, batch:false, time:2, querySize:1, batchSize:0, query:[(select * from users)], params:[]\n```\n\nStatement (Batched):\n\n```\nsuccess:true, type:STATEMENT, batch:true, time:1, querySize:2, batchSize:2, query:[(insert into users values (200, 'FOO')),(insert into users values (201, 'BAR'))], params:[]\n```\n\nPreparedStatement:\n\n```\nsuccess:true, type:PREPARED, batch:false, time:3, querySize:1, batchSize:0, query:[(select 1 from users where id = ? and name = ?)], params:[(1=99,2=foo)]\n```\n\nPreparedStatement (Batched):\n\n```\nsuccess:true, type:PREPARED, batch:true, time:1, querySize:1, batchSize:2, query:[(insert into users (id, name) values (?, ?))], params:[(1=100,2=foo),(1=200,2=bar)]\n```\n\nPreparedStatement as JSON:\n\n```\n{\"success\":true, \"type\":\"PREPARED\", \"batch\":true, \"time\u201d:1, \"querySize\":1, \"batchSize\":1, \"query\":[\"insert into users (id, name) values (?, ?)\"], \"params\":[{\"1\":\"100\",\"2\":\"bar\"}]}\n```\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ebourg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/34910797", "body": "Thank you Mark.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/34910797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/44002922", "body": "@Humbedooh can do that, or the original poster.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/44002922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/69768016", "body": "As I understand this pull request is more a request for enhancement than an actual code contribution. I guess you suggest that Tomcat implements the [W3C HTML JSON form submission](http://www.w3.org/TR/html-json-forms/) draft, correct? \n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/69768016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "Humbedooh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/35882751", "body": "Should this pull request be closed then?\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/35882751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "asfbot": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/35883652", "body": "Rainer Jung  on dev@tomcat.apache.org replies:\nOn 24.02.2014 13:47, Humbedooh wrote:\n\n> Github user Humbedooh commented on the pull request:\n> \n> ```\n> https://github.com/apache/tomcat/pull/3#issuecomment-35882751\n> \n> Should this pull request be closed then?\n> ```\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/35883652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/35883848", "body": "Rainer Jung  on dev@tomcat.apache.org replies:\ntop-post requested by Humbedohh - test, please ignore.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/35883848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/44207667", "body": "Mark Thomas  on dev@tomcat.apache.org replies:\n\nGreg,\n\nThis should be all the changes you requested - or something very close\nto them anyway. Let us know if I missed something or messed something up.\n\nThe changes will be in 8.0.9 onwards.\n\nMark\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/44207667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/108005135", "body": "Mark Thomas  on dev@tomcat.apache.org replies:\n\nFor those of you wondering who closed these / how there were closed it\nwas me.\n\nMark\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/108005135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/271683516", "body": "Mark Thomas  on dev@tomcat.apache.org replies:\n\nI'd be OK with fixing this and adding back the misspelt method (marked\nas deprecated) if anyone complains.\n\nMark\n\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/271683516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/271683548", "body": "Mark Thomas  on dev@tomcat.apache.org replies:\n\nI'd be OK with fixing this and adding back the misspelt method (marked\nas deprecated) if anyone complains.\n\nMark\n\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/271683548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kkolinko": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/40340077", "body": "1. Bugzilla issue = ?\n   (with Tomcat version, steps to reproduce etc.)\n2. The patch (https://github.com/apache/tomcat/pull/5.patch) is a mess,\n   with deletions and additions. That will break svn history for those files if applied.\n\n3\n-            if( deadMaxTime < rp.getMaxTime() )\n-            if( deadMaxTime < rp.getMaxTime() ) {\n               deadMaxTime = rp.getMaxTime();\n-                deadMaxStartTime = rp.getMaxStartTime();\n-            }\n\nI would expect \"maxStartTime\" to be a maximum of its own value, but here you are calculating it from \"maxTime\".\n1. Is this information visible on the \"Status\" page of the Manager webapp? Maybe a patch will be needed there.\n2. Is this information visible in jconsole?\n   (6. Maybe some documentation update will be needed (depends on 4. and 5.), e.g. IIRC there is a page describing Tomcat JMX objects on the wiki.)\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/40340077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/40368010", "body": "It does not need to be a bug.\nEnhancement requests as well are filed via Bugzilla, and referenced on the changelog page.\nThe procedure:\nhttp://tomcat.apache.org/bugreport.html#How_to_submit_patches_and_enhancement_requests\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/40368010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/43018127", "body": "http://pubs.opengroup.org/onlinepubs/009695399/mindex.html\nhttp://pubs.opengroup.org/onlinepubs/9699919799/mindex.html\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/43018127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/87686379", "body": "1) Bugzilla issue = ?\n2) \"it is impossible to use the respective jsp files as a webapp\" - I do not believe that,  with Resources Jars support in Servlet 3.0 spec.\n3) -1 as changes formatting in many places, unrelated to your change.\n\"InputStream docBase\" is a confusing name,  and I do not see how you use the InputStream, at all. It is an unused parameter.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/87686379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/274253090", "body": "Please file this issue into Bugzilla, as documented at\r\nhttp://tomcat.apache.org/bugreport.html\r\n\r\nSo that it has proper visibility and can be linked to from a changelog file. (Do you read changelogs?)", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/274253090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/274253957", "body": "OK, thank you.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/274253957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/343488860", "body": "1. Create an entry in Bugzilla and reference this PR, so that this is correctly mentioned in change log.\r\nhttp://tomcat.apache.org/bugreport.html\r\n\r\n2. I do not mind this utility filter being added to Tomcat. It is small and there might be uses for it.\r\nIt is the same as the default of \"<%@page session=\"true\"%>\" in JSPs.\r\n\r\nBut I think that its use for WebSocket needs some additional explanation / discussion, and maybe a different fix.\r\n\r\n> \"too late to initialize the HttpSession object\"\r\n\r\nThe HttpSession is a tool that is used to share some information between requests. It is only useful if there is a subsequent request from the same client that is associated with the same session.\r\n\r\nIf the session is identified via a cookie (there are also different configuration options), it means that the client should receive a Set-Cookie header with a HTTP response and process it (in \"101 Switching Protocols\" HTTP response).\r\n\r\nI have not tested whether the Set-Cookie header in a \"101 Switching Protocols\" response is recognized by actual clients.\r\n\r\n> handshakeRequest.getHttpSession().getServletContext()\r\n\r\nThe above code is odd. You are not sharing some information, but are accessing some static configuration object. There should be an easier way to obtain a ServletContext. It is not what a session is needed for.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/343488860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/355958663", "body": "1) POST fallsback to GET, I think since RFC1945 (HTTP/1.0). Both HEAD and POST were improvements over single GET method supported by original HTTP protocol (0.9).\r\n2) DefaultServlet can be used as a target of RequestDispatcher.forward(), and such forward does not change the request method.\r\n\r\nAs such, I think that the behaviour of DefaultServlet.doPost() must not be changed.\r\n\r\nI am OK to change 403 to 405 as response code in DefaultServlet.doPut(), doDelete(). It seems reasonable.\r\n\r\nThough:\r\n1) The code 405 is since HTTP/1.1, does not exist in HTTP/1.0\r\n2) You are correct, that when a server uses code 405 it MUST generate an \"Allow\" header as well (RFC 7231).\r\nThere are some other places where SC_METHOD_NOT_ALLOWED code is used and no \"Allow\" header is generated.\r\n3) This changes behaviour of WebdavServlet.  For a readOnly WebdavServlet it is reasonable to return 403. Though 405 is OK as well.\r\n4) WebdavServlet has method determineMethodsAllowed(). It should be updated accordingly.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/355958663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "weipeng2k": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/40353961", "body": "1. Not bug.\n   It's not a bug. Just want to add maxStartTime to RequestInfo, it can record when does slow request happened.\n2. Commit error.\n   I am curious about tomcat-lite,read its code,but removed the .project and .classpath, It's my fault. I reverse it in my next commit.\n3. maxStartTime decided by maxTime\n   maxStartTime just record when did maxTime happened. If calculate maxStartTime itself, it may store the \"last maxStartTime\" not the real maxStartTime,I think maxStartTime would update when maxTime changed.\n4. Missing \n   I did not notice manager status web app. I should modify org.apache.catalina.manager.StatusTransformer, thank you remind me.\n5. maxStartTime can see in JConsole\n6. About wiki\n   I found request info in manager-howto.xml, it should updated also.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/40353961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "thiagoh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/42244563", "body": "@kkolinko I think that this duplicated documentation would be nice to have inside the `server.xml` just as other documentation for other ports like \n\n```\n<!-- A \"Connector\" represents an endpoint by which requests are received...\n```\n\nor\n\n```\n <!-- Define a SSL HTTP/1.1 Connector on port 8443\n         This connector uses the BIO implementation that requires the JSSE\n         style configuration. When using the APR/native implementation, the\n         OpenSSL style configuration is required as described in the APR/native\n         documentation -->\n    <!--\n```\n\nI insist on that because this port could be used as a **security flaw** if a program running inside the network simulates the localhost machine sending the shutdown signal. Once this documentation is inside the `server.xml` it's more easy to pay attention on this configuration instead of goind to the web look for it.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/42244563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "hazendaz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/42255555", "body": "Another -1 on this change.  I'm not sure how this would solve any perceived security issue.  The shutdown port is only accessible as local host so it requires you are on the actual machine to even issue anything against it.  On top of that, permissions on the process itself should be set such that not just any user on the machine can start/stop the process.  Then if someone somehow got passed this security the box, I would think there would be larger security concerns than tomcat.  Am I missing something here?\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/42255555/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/69741658", "body": "We run json using Jackson with jersey in tomcat.  No issues.  This code doesn't do anything.  So unclear how it solves anything.  All you did was add an empty if statement.\n\n--- Original Message ---\n\nFrom: \"ahu0605\" notifications@github.com\nSent: January 12, 2015 10:09 PM\nTo: \"apache/tomcat\" tomcat@noreply.github.com\nSubject: Re: [tomcat] now json is fashion (#15)\n\nbut when i push content type - json\uff0cthere is some bug , 4 ex :data is json \"{\\\"id\\\":\\\"asd\\\"}\",the value  will be a Map key, request.getPamaterMap () the key is {\"id\":\"asd\"}, value is null ,is not logic\n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/apache/tomcat/pull/15#issuecomment-69689061\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/69741658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/69744890", "body": "Sure...what I meant here is that this patch does nothing from tomcat perspective.  It's just an empty if statement.  It does nothing at all.\n\n--- Original Message ---\n\nFrom: \"Martin Grigorov\" notifications@github.com\nSent: January 13, 2015 8:18 AM\nTo: \"apache/tomcat\" tomcat@noreply.github.com\nCc: \"Jeremy Landis\" jeremylandis@hotmail.com\nSubject: Re: [tomcat] now json is fashion (#15)\n\nI'm pretty sure Jersey does something.\n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/apache/tomcat/pull/15#issuecomment-69742518\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/69744890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "cpbills": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/43012973", "body": "Seems like there are other scripts that need fixing; closing for now.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/43012973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "gregw": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/45101512", "body": "Awesome!.  We've pull the changes into our forked repo and they look pretty much exactly what we need.   We will probably do one more release cycle with our forked version, but will then look to see if we can consume the apache produced jars directly.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/45101512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "hanyong": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/45478715", "body": "Sorry, the patch DOES NOT work well.\n\nI found another problem.\n\nThe aysnc servlet timeout is triggered by the poller thead also, since the SelectionKey was deregistered when the socket be closed, the asyncTimeout will never triggered.\n\nIn this situation, If the user forgot to call \"AsyncContext.complete()\", the limit leak happens always.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/45478715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ahu0605": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/69689061", "body": "but when i push content type - json\uff0cthere is some bug , 4 ex :data is json \"{\\\"id\\\":\\\"asd\\\"}\",the value  will be a Map key, request.getPamaterMap () the key is {\"id\":\"asd\"}, value is null ,is not logic\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/69689061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/69754848", "body": "I am very sad this bug is not be modifed, PHP had surpported  content -type :JSON ,but java ...\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/69754848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/69769556", "body": "yes,from Perspective of development. it is benifit  java ,it is benifit  Tomcat ,our company has choice resin,if the problem keep alive, i maybe choice  PHP or Python\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/69769556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "martin-g": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/69703890", "body": "When you POST JSON data you should use http://docs.oracle.com/javaee/6/api/javax/servlet/ServletRequest.html#getReader() to consume the body and parse it as you find appropriate.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/69703890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/69742518", "body": "I'm pretty sure Jersey does something.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/69742518/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/99922783", "body": "No need of `public`, it is implicit.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/99922783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/99923774", "body": "`reading.set(false);`", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/99923774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/99924137", "body": "`reading.set(false);`", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/99924137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/99924267", "body": "`reading.set(false);`", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/99924267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/99924344", "body": "`reading.set(false);`", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/99924344/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/99924840", "body": "`reading.set(false);`", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/99924840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/99924904", "body": "`reading.set(false);`", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/99924904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/99928093", "body": "IMO `sendText(...)` should be executed in a different thread with some delay.\r\nOtherwise now even without calling `suspend()` the behavior would be same. `messages` will be serialized to its String form and the fourth message would have a chance to break the test.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/99928093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/100054233", "body": "Should this use StringManager ?", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/pulls/comments/100054233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "fjodorver": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/110251900", "body": "It's updated pull request.\n1) Build.xml configuration in separate commit now\n2) Fixed imports and formatting\n3)  Method refactoring has been made separately. Geronimo uses OSGi stuff to create this factory class, I see you had already fixed that. \nThrere are two reasons why this refactoring required in my opinion: get rid of extra final variable and get rid of extra indent.\n4) removed version from javadoc\n5) fixed checkstyle errors\n6) What about JASPIC 1.1 changes in API, I don't see any changes between this version. It looks like 1.1 changes is more like internal ones, and API classes are still the same. Correct me if I am wrong. \n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/110251900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/110630412", "body": "2,4,5) I use ant validate for checkstyle validation. Is it enough?\n3) It looks like we need to rewrite AuthConfigFactory anyway (for example, possible memory leaks, huge method and so on). I personally prefer to introduce small methods, which makes code reading much easier, because they work as self-commented code. Also, it simplifies code testing. As a bonus, in simple methods have shorter lines. For example, in current implementation need to introduce an ugly final variable, instead of just getting the correct value and make the first variable final. Second thing is guard clauses - usually I prefer to make such checks in the beginning of the method. It's quite good to get rid of necessary indentation and makes code lines shorter.\n6. I've refined method order and some signatures (there are runtime exceptions declared, which is not necessary). However, constants in AuthConfigFactory are used for internal purposes, so I'd proposed security management as separate patch. \n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/110630412/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ukari": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/165763957", "body": "Oh, you are right, sorry I make the mistake.\nBut why response's encoding not changed after I set AddDefaultCharsetFilter?(I mean a HttpServletResponse)\nIs the warpper effective?\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/165763957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/165767039", "body": "Here is the example\n\n2015-12-18 20:12 GMT+08:00 Wenjie Zhang notifications@github.com:\n\n> Here is the document for this filter,\n> http://tomcat.apache.org/tomcat-7.0-doc/config/filter.html#Add_Default_Character_Set_Filter\n> ,\n> base on the code, this should work, you might want to debug your code to\n> see what's going on there.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/apache/tomcat/pull/25#issuecomment-165765309.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/165767039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/165782452", "body": "I put that example in email, so you can't see it in github.\nhttps://drive.google.com/file/d/0BxfFe2h4UJX4OEdMZ2dZMTBvYzBvOEl5Ykx4WUxNVWJiRmpj/view?usp=sharing\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/165782452/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/166529165", "body": "I get it, but it won't work for application/json \ndue to this line? \n\n``` java\n  if (ct != null && ct.startsWith(\"text/\")) {\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/166529165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/166806452", "body": "Thank both of you very much!\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/166806452/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "wenjiezhang2013": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/165765309", "body": "Here is the document for this filter, http://tomcat.apache.org/tomcat-7.0-doc/config/filter.html#Add_Default_Character_Set_Filter,\nbase on the code, this should work, you might want to debug your code to see what's going on there.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/165765309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/166470358", "body": "@violetagg is right, it clearly says so from the code\n\n``` java\n@Override\n        public void setContentType(String ct) {\n\n            if (ct != null && ct.startsWith(\"text/\")) {\n                if (ct.indexOf(\"charset=\") < 0) {\n                    super.setContentType(ct + \";charset=\" + encoding);\n                } else {\n                    super.setContentType(ct);\n                    encoding = getCharacterEncoding();\n                }\n            } else {\n                super.setContentType(ct);\n            }\n\n        }\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/166470358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/166700042", "body": "If you read \n\n```\nThe HTTP specification is clear that if no character set is specified for media sub-types of \nthe \"text\" media type, the ISO-8859-1 character set must be used. However, browsers may \nattempt to auto-detect the character set. This may be exploited by an attacker to perform an \nXSS attack. Internet Explorer and other browsers have an option to enable this behavior.\n```\n\nfrom http://tomcat.apache.org/tomcat-8.0-doc/config/filter.html#Add_Default_Character_Set_Filter, you will be able to understand the problem\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/166700042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "gmokki": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/189250517", "body": "Thank you for the review comments.\n\nModified pull request to accept and pare \"gzip=.gz,br=.br\" syntax in the precompressed init parameter.\nHonors the full client preference settings from client as per RFC7231, including \\* and identity types.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/189250517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rhusar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/239305040", "body": "My thinking is that first, we need to stop perpetuating the wrong name \"mbeans-descriptor\" which is the name of the page, and more importantly, the page gives such a bad advice that it  deserves a rename since nobody could have been using it anyway.\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/239305040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/239407356", "body": "\ud83d\udc4d \n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/239407356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "SvetlinZarev": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/250139481", "body": "Nope, Boolean.getBoolean(\"xxx\") tries to convert the value of the system property \"xxx\" to a boolean or returns false if it's missing. The method name is indeed very misleading, but works as expected.\n\nhttp://docs.oracle.com/javase/7/docs/api/java/lang/Boolean.html#getBoolean(java.lang.String)\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/250139481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/272467340", "body": "It's not a no-op. Imagine the following case:\r\n\r\nWS-Host: wss://echo.websocket.org\r\nproxy-host: proxy\r\nproxy-port: 8080\r\n\r\nThe flow is as follows:\r\n```\r\n\r\nURI path = the WS-HOST\r\nString host = path.getHost();\r\nint port = path.getPort(); //-1 if the \":port\" part of the authority is missing\r\n\r\nif(hasProxy){\r\n            proxyConnect = createProxyRequest(host, port);\r\n}else{\r\n           if(-1 == port) then do portDiscovery -> 80/443 depending on ws/wss scheme\r\n          ...\r\n}\r\n```\r\n\r\nSo here in the proxy case the port will be -1, because WS-Host does not specify host. As a result the CONNECT request will not contain port in the request line -> hence invalid CONNECT request. \r\n\r\nIn the non-proxy case the original code correctly performs port discovery based on the scheme( if a port is not explicitly  provided in WS-Host).\r\n\r\nSo what I did was to do port discovery if no port is specified, regardless of proxy configuration. So in case of wss:// the connect will look like \"CONNECT host:443\" and in case of ws:// -> \"CONNECT host:80\".  Without my change in both cases it will look like \"CONNECT host\". So how can the proxy know the correct port ?", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/272467340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/272656716", "body": "Issue Description\r\n===\r\n\r\nWsWebSocketContainer generates bad CONNECT request when a proxy is used. The host does not contain port information, hence the app cannot connect to wss:// endpoints. Also some stricter proxy servers may reject requests without port info, thus making WsWebSocketContainer.connectToServer() fail for both ws:// and wss:// endpoints.\r\n\r\nSteps to reproduce\r\n===\r\n\r\nPrerequisites\r\n---\r\n1. Download Tomcat 8.5.9\r\n2. Configure it to use port 8081\r\n3. Clone git@github.com:adamfisk/LittleProxy.git\r\n4. Clone MCVE: git@github.com:SvetlinZarev/websocket-tomcat-bug.git\r\n5. Build (3), (4) -> mvn clean install (you may want to rename the mcve to ROOT)\r\n\r\nHow to reproduce it\r\n---\r\n1. Start LittleProxy (it defaults to port 8080)\r\n2. Configure Tomcat use the proxy: export CATALINA_OPTS=\"-Dhttp.proxyHost=localhost -Dhttp.proxyPort=8080 -Dhttps.proxyHost=localhost -Dhttps.proxyPort=8080\"\r\n3. Start tomcat: catalina.sh run\r\n4. Request the mcve: http://localhost:8081/ws\r\n\r\nExpected behavior\r\n---\r\nYou should see: \r\n\r\nConnected. Sending message...\r\nMessage: Hello World!\r\nDisconnected: \r\n\r\nActual behavior\r\n---\r\nAn exception is thrown. In case of LittleProxy it is a timeout exception during channel.handshake().get(); In my other case it is a DeploymentException caused by a bad request, because the (stricter) proxy rejected the request because  it does not contain port info.\r\n\r\nAdditional information\r\n---\r\nYou can play with the mcve by adding the following request parameters:\r\n* scheme - i.e. ws://, wss://\r\n* server - i.e. echo.websocket.org\r\n\r\nExample: 4. Request the mcve with: http://localhost:8081/ws?scheme=wss://&server=echo.websocket.org:443\r\nIt will succeed. Now remove the port from teh server string. It will fail.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/272656716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/272804729", "body": "> Does the CONNECT verb not imply a default port number when none is present?\r\n\r\n@ChristopherSchultz According to [rfc2817 section 5.2](https://www.ietf.org/rfc/rfc2817.txt):\r\n\r\n>  A CONNECT method requests that a proxy establish a tunnel connection\r\n>    on its behalf. The Request-URI portion of the Request-Line is always\r\n>    an 'authority' as defined by URI Generic Syntax [2], which is to say\r\n>    **the host name and port number** destination of the requested connection\r\n>    separated by a colon\r\n\r\nAlso by the never finalized draft https://tools.ietf.org/html/draft-luotonen-web-proxy-tunneling-01#section-3.1:\r\n\r\n> The client connects to the proxy server, and uses the CONNECT method\r\n>    to specify the hostname and the port number to connect to.  The\r\n>    hostname and port number are separated by a colon, and **both of them\r\n>    must be specified**.\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/272804729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/274253666", "body": "Hi, I've already created a bugzilla ticket: https://bz.apache.org/bugzilla/show_bug.cgi?id=60617\r\n\r\n> Do you read changelogs?\r\n\r\nI do.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/274253666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "alostale": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/250140376", "body": "Sorry, I misread the docs :(\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/250140376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ChristopherSchultz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/272464280", "body": "This looks like a no-op change. Does the CONNECT verb not imply a default port number when none is present?", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/272464280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/277764563", "body": "You should use SELECT ... FOR UPDATE instead of SELECT / UPDATE. Much less code and transactionally-safe. Also, if you use SELECT ... FOR UPDATE, you can use ResultSet.moveToInsertRow to insert a record if necessary.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/277764563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/292173969", "body": "Might this be better written as `SELECT ... FOR UPDATE` with either `updateRow` or `ResultSet.insert` if there are no results from the `SELECT`?", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/292173969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/305585400", "body": "A few comments:\r\n\r\n1. I think the patch should include some TRACE-level logging, especially when catching the NumberFormatException.\r\n2. If there is an unrecognized option string, it should at least result in a WARN message emitted to the log. I might even lobby for an exception to be thrown.\r\n3. There are options that seem to be in conflict with each other, if only in terminology: e.g. \"async\" and \"sync\" can be specified together, which would read like a bug in the config.\r\n4. Splitting on a comma should include optional whitespace e.g. \"\\\\s,*\\\\s*\" as the pattern.\r\n5. The patch needs to include documentation for the string-based configuration options (webapps/docs/cluster-howto.html).\r\n6. The javadoc in the patch needs to include the list of acceptable string option-names.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/305585400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/305607458", "body": "@isapir I appreciate your core patch as an initial effort. It looks like it will work. In order for it to be a good patch, it needs to be expanded, so a larger patch is appropriate.\r\n\r\nDid you actually test it to see if it would give you the desired channel options?\r\n\r\nA small unit test wouldn't hurt, as well (just testing setChannelSendOptions(String) -> getChannelSendOptions:int would be fine).", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/305607458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/305803015", "body": "How would you like your name to appear in the changelog? \"Patch provided by Igal Sapir\"?", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/305803015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/306198799", "body": "@KeiichiFujino Is this patch acceptable as-is, with additional patches for your items listed above? I think it's okay to add this feature only to channelSendOptions as a first commit. Adding mapSendOptions and JMX support can come later. Okay?", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/306198799/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307123651", "body": "@KeiichiFujino Okay, so we'd have a synthetic mbean attribute that we can re-construct from the int value we store internally? Or, do you think we should save the string that was used in configuration?", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307123651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307226239", "body": "@isapir FYI `1 << bit` is the same as `(int)Math.pow(2, bit)` and probably slightly more efficient. Better yet, it's less code to read. No particular reason to change the patch. I'm already happy with what we've got.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307226239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307226627", "body": "I'm waiting on a final review from @KeiichiFujino before I commit.\r\n\r\nIn the meantime there are 2 `@return` javadoc annotations with no value. Could you complete those?", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307226627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307226907", "body": "Thanks @Igal for your patience with this PR review. I know we've been a bit of a pain. But this work will make the contribution that much more useful.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307226907/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/310106427", "body": "Committed to tomcat-trunk in ASF svn r1799462. Back-ports to follow.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/310106427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/310174656", "body": "I'm not sure why the commit message hasn't closed this issue. Any thoughts on why that might be?", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/310174656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/310187295", "body": "Not quite yet. Let's see if we can get it closed automatically through the \"proper\" channels.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/310187295/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/340802067", "body": "A few years ago, Rich Bowen gave a talk @ ApacheCon about documentation and communities. He used Python as an example of a community where the Monty Python jokes are so pervasive, it appears that they have become the focus of the documentation instead of the actual subject (the code, etc.).\r\n\r\nHe suggested that humor, while intended to be fun, lighthearted, etc. often comes across as mean-spirited or condescending, and/or introduces confusion especially to those who do not understand (a) the language (e.g. English), (b) that they are in fact jokes or (c) the content of the jokes (e.g. unfamiliar with Monty Python).\r\n\r\nBasically, this kind of thing doesn't have a place in high-quality documentation.\r\n\r\nThis example is relatively benign, but there are probably other places where the humor is at least distracting if not worse.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/340802067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/340805284", "body": "References:\r\nhttps://apacheconna2015.sched.com/event/2P6d/rtfm-write-a-better-fm-rich-bowen-apache-software-foundation\r\nhttp://feathercast.apache.org/podcasts/ApacheConNA2015/Monday/Community/Monday_Community_04%20-%20Rich%20Bowen%20-%20RTFM%20-%20Write%20a%20Better%20FM.mp3\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/340805284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/343471174", "body": "@markt-asf re: `Filter` versus configuration\r\n\r\nThis could be something that we add now just as a `Filter` but in the future add a configuration option that just automatically attaches the `Filter` -- just like how using `<auth-method>` in `WEB-INF/web.xml` auto-attaches the appropriate `Valve` to the valve chain.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/343471174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/351546147", "body": "Patch looks good to me.\r\n\r\nRegarding your questions:\r\n\r\n> Why is a POST allowed when readOnly is true?\r\n\r\nProbably because the DefaultServlet just delegates POST -> GET, but ...\r\n\r\n> Why does a POST call GET internally?\r\n\r\nGood question. I suspect because that's what httpd does when making a POST request to a static resource.\r\n\r\nThat code has not changed since 2006 (the initial import) so at this point, it's \"legacy\" and \"backward-compatible\" and extremely unlikely to change.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/351546147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/355073672", "body": "I think 405 is more appropriate when the method is in fact not allowed (readOnly). As for POST, there is nothing \"writey\" about POST, whereas PUT and DELETE have definite \"write\" semantics. The fact that POST refers to GET is an irrelevant implementation detail.\r\n\r\nPlenty of (non-WebDAV) GET requests cause irreversible changes on the server (due to the implementation of a particular web application, not a vanilla web server itself) even when the official standard suggests that GET should be idempotent and read-only.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/355073672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/355985422", "body": "WRT WebDav, [RFC2618](https://tools.ietf.org/html/rfc2518) says that WebDav is an extension to HTTP/1.1 so I think we are always okay using 405 from `WebDavServlet`. We should, however, take care to adhere to the spec as much as possible, so we should e.g. include an `Allow` header in the response.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/355985422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/tomcat/comments/22378483", "body": "@powerYao Because in the distant past, someone decided that having those extra parentheses was good coding style.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/comments/22378483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "woonsan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/284036946", "body": "I'll propose a new PR using containment, not inheritance, as @markt-asf suggested.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/284036946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "simondi88": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/292813335", "body": "That is a pull request", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/292813335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/292813573", "body": "To merge the pull request", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/292813573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "KeiichiFujino": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/306139837", "body": "Hi,\r\n\r\nsome comments : \r\n\r\n- SimpleTcpCluster exposes the configuration via JMX.\r\nIf you configure channelSendOptions in string form, you should also expose it to JMX in string format.\r\nYou can see org/apache/catalina/ha/tcp/mbeans-descriptors.xml\r\n\r\n- It is necessary to fix configuration docs (webapps/config/cluster.xml).\r\n\r\n- The patch needs to include fix for mapSendOptions.\r\nBackupManager use mapSendOptions instead of channelSendOptions.\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/306139837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307055014", "body": "Sorry for the late reply.\r\n\r\nI do not think it work as expected.\r\nEven if updating the type of channelStartOptions from int to String in mbeans-descriptor, \r\nit will display int format values.\r\nBecause the channelSendOptions is always set to int format.\r\nif you set channelSendOptions = \"asynchronous\", 8 will be displayed  via JMX.\r\n\r\nFor example, \r\nThe channelSendOptions in the String format specified by the argument must be saved under a different name(e.g. channelSendOptionsName) and published to JMX.\r\nThen add the following definition to mbeans-descriptor.\r\n\r\n`\r\n<attribute\r\n  name=\"channelSendOptionsName\"\r\n  description=\"channelStartOptions name.\"\r\n  writeable=\"false\"    \r\n  type=\"java.lang.String\"/>\r\n`\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307055014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307273746", "body": "There are two comments.\r\n\r\nyou need to add BackupManager mbean definitions.\r\n```\r\n<attribute\r\n      name=\"mapSendOptionsName\"\r\n      description=\"mapSendOptions name.\"\r\n      writeable=\"false\"\r\n      type=\"java.lang.String\"/>\r\n```\r\nin org/apache/catalina/ha/session/mbeans-descriptors.xml\r\n\r\nThere is a typo in \r\n```\r\n<attribute\r\n      name=\"channelSendOptionsName\"\r\n      description=\"channelStartOptions name.\"\r\n      writeable=\"false\"\r\n      type=\"java.lang.String\"/>\r\n```\r\n\"channelStartOptions name.\"  -> \"channelSendOptions name.\" \r\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307273746/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307280550", "body": "I confirmed. there is no problem.\r\nThanks.\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307280550/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rmannibucau": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/306452893", "body": "@violetagg hello Violeta, would it be interesting to merge it with tomee handler (https://github.com/apache/tomee/blob/master/tomee/tomee-juli/src/main/java/org/apache/tomee/jul/handler/rotating/LocalFileHandler.java) ?", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/306452893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "JackLee1993": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307552666", "body": "i feel it's not very necessary for tomcat.What if the port is already bound?", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/307552666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/310222891", "body": "I get it,thanks ", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/310222891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/tomcat/comments/22352684", "body": "look like good", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/comments/22352684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/comments/22352750", "body": "look like nothing is work", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/comments/22352750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/comments/22377283", "body": "why the origin code hava ( ) ?", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/comments/22377283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "hasalex": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/310890504", "body": "OK, just discovered the is=\"false\" attribute in mbean-descriptors.xml.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/310890504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/311256599", "body": "Thanks for fixing (and merging) the PR\r\nIt worked on my machine ;) I'll have to learn more on the build process.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/311256599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jhorowitz-firedrum": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/319442679", "body": "Modified to include the recommendation from Mark Thomas: https://bz.apache.org/bugzilla/show_bug.cgi?id=61366#c3", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/319442679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "pmcelhaney": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/338016881", "body": "IMHO the humor doesn\u2019t work here. It comes across as condescending. It\u2019s *definitely* not helpful. ", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/338016881/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mithunsasidharan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/341648406", "body": "@markt-asf : I've modified `getSslEnabledProtocols()` to call `getSSLProtocol()` from within  since its the same code!", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/341648406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jfclere": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/343072803", "body": "See also in https://github.com/jgroups-extras/jgroups-kubernetes/blob/master/src/main/java/org/jgroups/protocols/kubernetes/stream/StreamProvider.java it seems we are reusing their internal interface, what doesn't look quite good, AKA it looks like an implementation detail of the Kubernetes logic.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/343072803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "maxime-beck": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/345232010", "body": "Apparently Microsoft recently came up with a new container management service **[1]** based on Kubernetes for Azure. This means that all container management providers that we're aiming to support now potentially work with Kubernetes. It makes us rethink our data model and especially our necessity for abstraction.\r\n\r\nBecause this now needs a higher level of investigation and analysis, I'll close this pull request for now.\r\n___\r\n**[1]** https://azure.microsoft.com/en-us/blog/introducing-azure-container-service-aks-managed-kubernetes-and-azure-container-registry-geo-replication/", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/345232010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lkirchev": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/346302744", "body": "Will replace it with a new PR.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/346302744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kdombeck": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/351590653", "body": "Thanks for the quick responses.\r\n\r\nI modeled this change after the changes for TRACE in the next if statement below. Also looking at [issue](https://bz.apache.org/bugzilla/show_bug.cgi?id=60697) this change seemed to be similar to that one.\r\n\r\nIt would make more sense to me if a user could actually change the request some how to invoke PUT or DELETE (by authenticating for example), but in this case there is nothing the user could do to ever get these 2 methods to work without changing the readOnly flag to false.\r\n\r\nI am not adamant that this change should be made. I am just trying to understand what appears to be an inconsistency to me. ", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/351590653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/352456119", "body": "I started this [thread](http://tomcat.10.x6.nabble.com/Change-HTTP-status-code-for-DefaultServlet-with-readOnly-set-to-true-td5070373.html) on the mailing list to look for consensus.\r\n\r\nIf consensus is reached would you like me to update this PR or start a different one?", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/352456119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/354304651", "body": "I haven't had any responses in [thread](http://tomcat.10.x6.nabble.com/Change-HTTP-status-code-for-DefaultServlet-with-readOnly-set-to-true-td5070373.html) I started for this issue.\r\n\r\nI have updated this PR to return a 405 rather than a 403. With this 405 response an Allow header will also be returned.\r\n\r\nI also updated HttpServlet.doOptions() to use a StringBuilder like you asked. I modeled it after this  [HttpServlet.doOptions()](https://github.com/javaee/servlet-spec/blob/master/src/main/java/javax/servlet/http/HttpServlet.java#L522)", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/354304651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/354386010", "body": "@michael-o I don't understand your question. Are you asking why ```PUT``` and ```DELETE``` are not allowed when the **readOnly** flag is true but ```POST``` is allowed?", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/354386010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/354555441", "body": "@michael-o I had the exact same question in my original post. The only thing I saw was that the POST delegates to the GET, so they both have the same effect.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/354555441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/355101653", "body": "@markt-asf I haven't received any responses to the [thread](http://tomcat.10.x6.nabble.com/Change-HTTP-status-code-for-DefaultServlet-with-readOnly-set-to-true-td5070373.html) I started on dev@. I know it was the holidays, so what is the best way to move forward to get consensus on this issue?", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/355101653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "michael-o": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tomcat/issues/comments/351696257", "body": "@markt-asf I'd second the 405 instead of 403.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/351696257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/354375224", "body": "Why is `POST` not part of the writable commands?", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/354375224/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/354543395", "body": "@kdombeck Correct.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/354543395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/354597383", "body": "Alright, did not notice that. Mark has to tell wether he is willing to change this in 9.0. The other version likely won't change.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/issues/comments/354597383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/tomcat/comments/21548024", "body": "Shall it really output `'#{..}'` or rather `#{..}`? I wasn't certain about the intention here during fix.", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/comments/21548024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "rajasharan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tomcat/comments/1602112", "body": "hi Mark, \n\nI've a quick question. Even though I'm using jdk7u4 my eclipse still needs the generics. Whats the trick to get rid of compile errors\n\nCheers\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/comments/1602112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "nitincchauhan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tomcat/comments/14154660", "body": "BUG must be index of double quote\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/comments/14154660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/comments/14154669", "body": "BUG must be index of double quote\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/comments/14154669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/comments/14154678", "body": "BUG must be index of double quote\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/comments/14154678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/comments/14154687", "body": "BUG must be index of double quote\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/comments/14154687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "gavinfish": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tomcat/comments/14726647", "body": "why we should maintain three StringManager in catalina.tribes.util, naming and tomcat.util.res, or why we need special StringManager for catalina.tribes and naming?\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/comments/14726647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "vmassol": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tomcat/comments/19237685", "body": "Hi Mark,\n\nThanks for fixing the regression (for the context see http://jira.xwiki.org/browse/XWIKI-13556). However I see you committed on trunk and that it got into Tomcat 9.0.0 M10. Could you tell me if it was also backported to all the affected branches. Asking since the problem was happening for all Tomcat versions:\n\n```\n>= 9.0.0.M5 for the 9.0.x branch\n>= 8.5.1 for the 8.5.x branch\n>= 8.0.34 for the 8.0.x branch\n>= 7.0.70 for the 7.0.x branch\n```\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/comments/19237685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tomcat/comments/24486575", "body": "Thanks", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/comments/24486575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "efge": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tomcat/comments/24486403", "body": "FYI this was backported for 7.0.81 (https://github.com/apache/tomcat70/commit/be895e53fffc092fa0b5eefe49dbad31b4069057)", "reactions": {"url": "https://api.github.com/repos/apache/tomcat/comments/24486403/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}}}}