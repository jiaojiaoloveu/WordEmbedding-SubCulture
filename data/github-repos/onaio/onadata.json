{"_default": {"1": {"ukanga": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/1213", "title": "Export async returns pending when CELERY_RESULT_BACKEND = False", "body": "/export_async endpoint.", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1208", "title": "FLOIP JSON API Spec", "body": "", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1191", "title": "Require Auth Default for new users", "body": "", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1161", "title": "Change SMS keyword when id_string changes", "body": "", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1153", "title": "PyXFormError: There has been a problem trying to replace ${Q64} with the XPath to the survey element named 'Q64...", "body": "\n```\nPyXFormError: There has been a problem trying to replace ${Q64} with the XPath to the survey element named 'Q64'. There is no survey element with this name.\n(9 additional frame(s) were not displayed)\n...\n  File \"rest_framework/views.py\", line 486, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"rest_framework/mixins.py\", line 21, in create\n    self.perform_create(serializer)\n  File \"rest_framework/mixins.py\", line 26, in perform_create\n    serializer.save()\n  File \"rest_framework/serializers.py\", line 215, in save\n    self.instance = self.create(validated_data)\n  File \"onadata/libs/serializers/merged_xform_serializer.py\", line 182, in create\n    validated_data['xml'] = survey.to_xml()\n\nPyXFormError: There has been a problem trying to replace ${Q64} with the XPath to the survey element named 'Q64'. There is no survey element with this name.\n```", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1114", "title": "Rethink how permissions work", "body": "Notes:\r\n- stick to only project permissions, currently we apply permissions to both projects and xforms\r\n- use group permissions only, adding a user to a group rather than applying permissions to every user\r\n- get rid of guardian?\r\n\r\nWhy?\r\n- the performance with the permission queries at this time especially with a large dataset is horrible\r\n- complexity in explaining how permissions work", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1112", "title": "Unique linked dataset parameter on exports", "body": "A form using a linked dataset as a media source uses the same export track as normal exports, as a result, if there have been no changes to data and there is an existing successful CSV export, that export is picked. This could be problematic when per form submissions e.g access to only data you have submitted to.\r\n\r\n### Expected behavior\r\n\r\nWhen there is an export from different data submitters, the export should return the correct form for the user requesting the linked dataset.\r\n\r\n### Actual behavior\r\n\r\nThere are cases where the export returned might have been generated by a different user.\r\n\r\n### Implementation plan\r\n\r\n- Include per form permission queries in `should_create_new_export()`\r\n-  Have linked dataset specific params to avoid clash with normal exports", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1106", "title": "Refactor and add tests to sms_support app", "body": "", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1083", "title": "Log and/or notify on export errors", "body": "- [ ] Add `ExportBuilder.log(error_message)` function to handle this.\r\n\r\nPossibly try to tag the error messages from the provided string.", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1063", "title": "Benchmark and Optimize CSV Import code", "body": "", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1029", "title": "Deleting a form should also apply to linked resources like linked media files and data views.", "body": "", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1010", "title": "Add a contributing documentation to repo", "body": "", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/999", "title": "TypeError at /api/v1/forms/[pk]/export_async.json 'int' object is not iterable", "body": "```python\r\n\r\nFile \"./onadata/apps/api/viewsets/xform_viewset.py\" in export_async\r\n  632.                 resp = get_async_response(job_uuid, request, xform)\r\n\r\nFile \"./onadata/libs/utils/api_export_tools.py\" in get_async_response\r\n  473.                 resp.update(job.result) if isinstance(job.result, dict) else \\\r\n\r\nException Type: TypeError at /api/v1/forms/[pk]/export_async.json\r\n```", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/994", "title": "Provide a read only view to XForm XML for all forms", "body": "- [ ] Provide preview endpoint for XForm XML and related media files that allow read-only and above roles to access the form.\r\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/987", "title": "Unhandled exception on CSV import", "body": "```python\r\n\r\n\r\nTraceback:\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\r\n  149.                     response = self.process_exception_by_middleware(e, request)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\r\n  147.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\r\n  58.         return view_func(*args, **kwargs)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/viewsets.py\" in view\r\n  87.             return self.dispatch(request, *args, **kwargs)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/views.py\" in dispatch\r\n  466.             response = self.handle_exception(exc)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/views.py\" in dispatch\r\n  463.             response = handler(request, *args, **kwargs)\r\n\r\nFile \"./onadata/apps/api/viewsets/xform_viewset.py\" in csv_import\r\n  556.                                            self.object, csv_file))\r\n\r\nFile \"./onadata/libs/utils/csv_import.py\" in submit_csv\r\n  142.     csv_reader = ucsv.DictReader(csv_file, encoding='utf-8-sig')\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/unicodecsv/py2.py\" in __init__\r\n  208.         if self.fieldnames is not None:\r\n\r\nFile \"/usr/lib/python2.7/csv.py\" in fieldnames\r\n  90.                 self._fieldnames = self.reader.next()\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/unicodecsv/py2.py\" in next\r\n  117.         row = self.reader.next()\r\n\r\nException Type: Error at /api/v1/forms/[pk]/csv_import\r\nException Value: line contains NULL byte\r\n```", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/986", "title": "Original filename should be in the content-desposition filename attribute even if the filename was auto-renamed by the storage", "body": "", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/985", "title": "Media files of type XML should have content-type as text/xml or application/xml", "body": "", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/982", "title": "Limit form versions to 10 digits to match form design guidelines", "body": "See https://opendatakit.org/help/form-design/guidelines/", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/976", "title": "ValueError exception: invalid literal for int() with base 10 at form manifest endpoint", "body": "Seems to be affecting linked dataviews.\r\n\r\n```python\r\nTraceback:\r\n\r\nFile \"/...../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\r\n  149.                     response = self.process_exception_by_middleware(e, request)\r\n\r\nFile \"/...../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\r\n  147.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n\r\nFile \"/...../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\r\n  58.         return view_func(*args, **kwargs)\r\n\r\nFile \"/...../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/viewsets.py\" in view\r\n  87.             return self.dispatch(request, *args, **kwargs)\r\n\r\nFile \"/...../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/views.py\" in dispatch\r\n  466.             response = self.handle_exception(exc)\r\n\r\nFile \"/...../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/views.py\" in dispatch\r\n  463.             response = handler(request, *args, **kwargs)\r\n\r\nFile \"./onadata/apps/api/viewsets/xform_list_viewset.py\" in manifest\r\n  131.         return Response(serializer.data, headers=self.get_openrosa_headers())\r\n\r\nFile \"/...../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/serializers.py\" in data\r\n  674.         ret = super(ListSerializer, self).data\r\n\r\nFile \"/...../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/serializers.py\" in data\r\n  239.                 self._data = self.to_representation(self.instance)\r\n\r\nFile \"/...../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/serializers.py\" in to_representation\r\n  614.             self.child.to_representation(item) for item in iterable\r\n\r\nFile \"/...../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/serializers.py\" in to_representation\r\n  472.                 ret[field.field_name] = field.to_representation(attribute)\r\n\r\nFile \"/...../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/fields.py\" in to_representation\r\n  1653.         return method(value)\r\n\r\nFile \"./onadata/libs/utils/decorators.py\" in with_check_obj\r\n  17.             return f(*args, **kwargs)\r\n\r\nFile \"./onadata/libs/serializers/xform_serializer.py\" in get_hash\r\n  365.                 data_view = DataView.objects.filter(pk=pk)\\\r\n\r\nFile \"/...../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/manager.py\" in manager_method\r\n  122.                 return getattr(self.get_queryset(), name)(*args, **kwargs)\r\n\r\nFile \"/...../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/query.py\" in filter\r\n  790.         return self._filter_or_exclude(False, *args, **kwargs)\r\n\r\nFile \"/...../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/query.py\" in _filter_or_exclude\r\n  808.             clone.query.add_q(Q(*args, **kwargs))\r\n\r\nFile \"/...../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/sql/query.py\" in add_q\r\n  1243.         clause, _ = self._add_q(q_object, self.used_aliases)\r\n\r\nFile \"/...../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/sql/query.py\" in _add_q\r\n  1269.                     allow_joins=allow_joins, split_subq=split_subq,\r\n\r\nFile \"/...../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/sql/query.py\" in build_filter\r\n  1203.             condition = self.build_lookup(lookups, col, value)\r\n\r\nFile \"/...../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/sql/query.py\" in build_lookup\r\n  1099.                 return final_lookup(lhs, rhs)\r\n\r\nFile \"/...../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/lookups.py\" in __init__\r\n  19.         self.rhs = self.get_prep_lookup()\r\n\r\nFile \"/...../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/lookups.py\" in get_prep_lookup\r\n  57.         return self.lhs.output_field.get_prep_lookup(self.lookup_name, self.rhs)\r\n\r\nFile \"/...../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/fields/__init__.py\" in get_prep_lookup\r\n  744.             return self.get_prep_value(value)\r\n\r\nFile \"/...../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/fields/__init__.py\" in get_prep_value\r\n  976.         return int(value)\r\n\r\nException Type: ValueError at /[username]/xformsManifest/[pk]]\r\nException Value: invalid literal for int() with base 10: 'i'\r\nRequest information:\r\nGET: No GET data\r\n\r\nPOST: No POST data\r\n\r\nFILES: No FILES data\r\n```", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/964", "title": "Deleting a form that has filtered dataset, it should also apply to the filtered datasets", "body": "", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/961", "title": "Reorder how attachments are saved.", "body": "Should be `xform_pk_id_string/*`. ", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/950", "title": "MQTT/Websockets with Exports show status/progress", "body": "", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/949", "title": "DataError exception not handled at /submission endpoint", "body": "```python\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/backends/utils.py\" in execute\r\n  64.                 return self.cursor.execute(sql, params)\r\n\r\nException Type: DataError at /submission\r\nException Value: invalid input syntax for type json\r\nLINE 1: ...ed\", \"status\", \"uuid\", \"version\", \"geom\") VALUES ('{\"grpC6_1...\r\n                                                             ^\r\nDETAIL:  Token \"Infinity\" is invalid.\r\nCONTEXT:  JSON data, line 1: ...013\": \"2\", \"grpC6_4cal/calculate_C6_2E\": Infinity...\r\n\r\n```", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/949/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/936", "title": "IntegrityError at /api/v1/orgs when creating an org or a user account on /api/v1/profiles", "body": "```python\r\nInternal Server Error: /api/v1/orgs\r\n\r\nIntegrityError at /api/v1/orgs\r\nduplicate key value violates unique constraint \"auth_user_username_key\"\r\nDETAIL:  Key (username)=(distmanagement) already exists.\r\n```\r\n\r\n- [ ] Handle on `/api/v1/orgs` API endpoint\r\n- [ ] Handle on `/api/v1/profiles` API endpoint", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/936/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/929", "title": "IntegrityError when deleting a project", "body": "```python\r\n\r\nIntegrityError at /api/v1/projects/[PK]\r\nupdate or delete on table \"logger_xform\" violates foreign key constraint \"logger_xf_content_object_id_34c4c46447a0371b_fk_logger_xform_id\" on table \"logger_xformuserobjectpermission\"\r\nDETAIL:  Key (id)=(164820) is still referenced from table \"logger_xformuserobjectpermission\".\r\n\r\n\r\nRequest Method: DELETE\r\nRequest URL: https://api.ona.io/api/v1/projects/[PK]\r\nDjango Version: 1.9.5\r\nPython Executable: /..../.virtualenvs/onadata/bin/uwsgi\r\nPython Version: 2.7.6\r\nPython Path: ['/..../.virtualenvs/onadata/src/savreaderwriter/savReaderWriter', '/..../.virtualenvs/onadata/src/savreaderwriter/savReaderWriter/cWriterow', '.', '', '/..../.virtualenvs/onadata/src/django-nose', '/..../.virtualenvs/onadata/src/j2xclient', '/..../.virtualenvs/onadata/src/cors-headers', '/..../.virtualenvs/onadata/src/pricing', '/..../.virtualenvs/onadata/src/django-digest', '/..../.virtualenvs/onadata/src/savreaderwriter', '/..../.virtualenvs/onadata/src/google-export', '/..../.virtualenvs/onadata/lib/python2.7', '/..../.virtualenvs/onadata/lib/python2.7/plat-x86_64-linux-gnu', '/..../.virtualenvs/onadata/lib/python2.7/lib-tk', '/..../.virtualenvs/onadata/lib/python2.7/lib-old', '/..../.virtualenvs/onadata/lib/python2.7/lib-dynload', '/usr/lib/python2.7', '/usr/lib/python2.7/plat-x86_64-linux-gnu', '/usr/lib/python2.7/lib-tk', '/..../.virtualenvs/onadata/local/lib/python2.7/site-packages']\r\nServer time: Mon, 20 Feb 2017 23:02:11 -0500\r\n\r\n\r\nInstalled Applications:\r\n('google_export',\r\n 'pricing',\r\n 'django.contrib.auth',\r\n 'django.contrib.contenttypes',\r\n 'django.contrib.sessions',\r\n 'django.contrib.sites',\r\n 'django.contrib.messages',\r\n 'django.contrib.staticfiles',\r\n 'django.contrib.humanize',\r\n 'django.contrib.admin',\r\n 'django.contrib.admindocs',\r\n 'django.contrib.gis',\r\n 'registration',\r\n 'django_nose',\r\n 'django_digest',\r\n 'corsheaders',\r\n 'oauth2_provider',\r\n 'rest_framework',\r\n 'rest_framework.authtoken',\r\n 'taggit',\r\n 'readonly',\r\n 'onadata.apps.logger',\r\n 'onadata.apps.viewer',\r\n 'onadata.apps.main',\r\n 'onadata.apps.restservice',\r\n 'onadata.apps.api',\r\n 'guardian',\r\n 'djcelery',\r\n 'onadata.apps.sms_support',\r\n 'onadata.libs',\r\n 'reversion')\r\nInstalled Middleware:\r\n('multidb.middleware.PinningRouterMiddleware',\r\n 'onadata.libs.profiling.sql.SqlTimingMiddleware',\r\n 'django.middleware.http.ConditionalGetMiddleware',\r\n 'django.middleware.cache.UpdateCacheMiddleware',\r\n 'django.middleware.common.CommonMiddleware',\r\n 'django.middleware.cache.FetchFromCacheMiddleware',\r\n 'django.contrib.sessions.middleware.SessionMiddleware',\r\n 'onadata.libs.utils.middleware.LocaleMiddlewareWithTweaks',\r\n 'django.middleware.csrf.CsrfViewMiddleware',\r\n 'corsheaders.middleware.CorsMiddleware',\r\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n 'django.contrib.messages.middleware.MessageMiddleware',\r\n 'onadata.libs.utils.middleware.HTTPResponseNotAllowedMiddleware',\r\n 'readonly.middleware.DatabaseReadOnlyMiddleware')\r\n\r\n\r\nTraceback:\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\r\n  149.                     response = self.process_exception_by_middleware(e, request)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\r\n  147.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\r\n  58.         return view_func(*args, **kwargs)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/viewsets.py\" in view\r\n  87.             return self.dispatch(request, *args, **kwargs)\r\n\r\nFile \"./onadata/libs/mixins/profiler_mixin.py\" in dispatch\r\n  34.         ret = super(ProfilerMixin, self).dispatch(request, *args, **kwargs)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/views.py\" in dispatch\r\n  466.             response = self.handle_exception(exc)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/views.py\" in dispatch\r\n  463.             response = handler(request, *args, **kwargs)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/mixins.py\" in destroy\r\n  87.         self.perform_destroy(instance)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/mixins.py\" in perform_destroy\r\n  91.         instance.delete()\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/base.py\" in delete\r\n  870.         return collector.delete()\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/deletion.py\" in delete\r\n  316.                             sender=model, instance=obj, using=self.using\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/transaction.py\" in __exit__\r\n  223.                         connection.commit()\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/backends/base/base.py\" in commit\r\n  242.         self._commit()\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/backends/base/base.py\" in _commit\r\n  211.                 return self.connection.commit()\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/utils.py\" in __exit__\r\n  95.                 six.reraise(dj_exc_type, dj_exc_value, traceback)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/backends/base/base.py\" in _commit\r\n  211.                 return self.connection.commit()\r\n\r\nException Type: IntegrityError at /api/v1/projects/[PK]\r\nException Value: update or delete on table \"logger_xform\" violates foreign key constraint \"logger_xf_content_object_id_34c4c46447a0371b_fk_logger_xform_id\" on table \"logger_xformuserobjectpermission\"\r\nDETAIL:  Key (id)=(164820) is still referenced from table \"logger_xformuserobjectpermission\".\r\n\r\nRequest information:\r\nGET: No GET data\r\n\r\nPOST: No POST data\r\n\r\nFILES: No FILES data\r\n\r\nCOOKIES: No cookie data\r\n```", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/928", "title": "Unhandled IntegrityError at projects endpoint", "body": "```python\r\nIntegrityError at /api/v1/projects\r\nduplicate key value violates unique constraint \"logger_project_name_74cebfdda007f55b_uniq\"\r\nDETAIL:  Key (name, organization_id)=(Monitoring Form, 675) already exists.\r\n\r\n\r\nRequest Method: POST\r\nRequest URL: https://api.ona.io/api/v1/projects\r\nDjango Version: 1.9.5\r\nPython Executable: /..../.virtualenvs/onadata/bin/uwsgi\r\nPython Version: 2.7.6\r\nPython Path: ['/..../.virtualenvs/onadata/src/savreaderwriter/savReaderWriter', '/..../.virtualenvs/onadata/src/savreaderwriter/savReaderWriter/cWriterow', '.', '', '/..../.virtualenvs/onadata/src/django-nose', '/..../.virtualenvs/onadata/src/django-digest', '/..../.virtualenvs/onadata/src/j2xclient', '/..../.virtualenvs/onadata/src/cors-headers', '/..../.virtualenvs/onadata/src/pricing', '/..../.virtualenvs/onadata/src/savreaderwriter', '/..../.virtualenvs/onadata/src/google-export', '/..../.virtualenvs/onadata/lib/python2.7', '/..../.virtualenvs/onadata/lib/python2.7/plat-x86_64-linux-gnu', '/..../.virtualenvs/onadata/lib/python2.7/lib-tk', '/..../.virtualenvs/onadata/lib/python2.7/lib-old', '/..../.virtualenvs/onadata/lib/python2.7/lib-dynload', '/usr/lib/python2.7', '/usr/lib/python2.7/plat-x86_64-linux-gnu', '/usr/lib/python2.7/lib-tk', '/..../.virtualenvs/onadata/local/lib/python2.7/site-packages']\r\nServer time: Mon, 20 Feb 2017 06:35:00 -0500\r\nInstalled Applications:\r\n('google_export',\r\n 'pricing',\r\n 'django.contrib.auth',\r\n 'django.contrib.contenttypes',\r\n 'django.contrib.sessions',\r\n 'django.contrib.sites',\r\n 'django.contrib.messages',\r\n 'django.contrib.staticfiles',\r\n 'django.contrib.humanize',\r\n 'django.contrib.admin',\r\n 'django.contrib.admindocs',\r\n 'django.contrib.gis',\r\n 'registration',\r\n 'django_nose',\r\n 'django_digest',\r\n 'corsheaders',\r\n 'oauth2_provider',\r\n 'rest_framework',\r\n 'rest_framework.authtoken',\r\n 'taggit',\r\n 'readonly',\r\n 'onadata.apps.logger',\r\n 'onadata.apps.viewer',\r\n 'onadata.apps.main',\r\n 'onadata.apps.restservice',\r\n 'onadata.apps.api',\r\n 'guardian',\r\n 'djcelery',\r\n 'onadata.apps.sms_support',\r\n 'onadata.libs',\r\n 'reversion')\r\nInstalled Middleware:\r\n('multidb.middleware.PinningRouterMiddleware',\r\n 'onadata.libs.profiling.sql.SqlTimingMiddleware',\r\n 'django.middleware.http.ConditionalGetMiddleware',\r\n 'django.middleware.cache.UpdateCacheMiddleware',\r\n 'django.middleware.common.CommonMiddleware',\r\n 'django.middleware.cache.FetchFromCacheMiddleware',\r\n 'django.contrib.sessions.middleware.SessionMiddleware',\r\n 'onadata.libs.utils.middleware.LocaleMiddlewareWithTweaks',\r\n 'django.middleware.csrf.CsrfViewMiddleware',\r\n 'corsheaders.middleware.CorsMiddleware',\r\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n 'django.contrib.messages.middleware.MessageMiddleware',\r\n 'onadata.libs.utils.middleware.HTTPResponseNotAllowedMiddleware',\r\n 'readonly.middleware.DatabaseReadOnlyMiddleware')\r\n\r\n\r\nTraceback:\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\r\n  149.                     response = self.process_exception_by_middleware(e, request)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\r\n  147.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\r\n  58.         return view_func(*args, **kwargs)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/viewsets.py\" in view\r\n  87.             return self.dispatch(request, *args, **kwargs)\r\n\r\nFile \"./onadata/libs/mixins/profiler_mixin.py\" in dispatch\r\n  34.         ret = super(ProfilerMixin, self).dispatch(request, *args, **kwargs)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/views.py\" in dispatch\r\n  466.             response = self.handle_exception(exc)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/views.py\" in dispatch\r\n  463.             response = handler(request, *args, **kwargs)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/mixins.py\" in create\r\n  21.         self.perform_create(serializer)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/mixins.py\" in perform_create\r\n  26.         serializer.save()\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/serializers.py\" in save\r\n  191.             self.instance = self.create(validated_data)\r\n\r\nFile \"./onadata/libs/serializers/project_serializer.py\" in create\r\n  331.             metadata=validated_data.get('metadata', dict())\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/manager.py\" in manager_method\r\n  122.                 return getattr(self.get_queryset(), name)(*args, **kwargs)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/query.py\" in create\r\n  401.         obj.save(force_insert=True, using=self.db)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/base.py\" in save\r\n  708.                        force_update=force_update, update_fields=update_fields)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/base.py\" in save_base\r\n  736.             updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/base.py\" in _save_table\r\n  820.             result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/base.py\" in _do_insert\r\n  859.                                using=using, raw=raw)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/manager.py\" in manager_method\r\n  122.                 return getattr(self.get_queryset(), name)(*args, **kwargs)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/query.py\" in _insert\r\n  1039.         return query.get_compiler(using=using).execute_sql(return_id)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/sql/compiler.py\" in execute_sql\r\n  1060.                 cursor.execute(sql, params)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/backends/utils.py\" in execute\r\n  64.                 return self.cursor.execute(sql, params)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/utils.py\" in __exit__\r\n  95.                 six.reraise(dj_exc_type, dj_exc_value, traceback)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/backends/utils.py\" in execute\r\n  64.                 return self.cursor.execute(sql, params)\r\n\r\nException Type: IntegrityError at /api/v1/projects\r\nException Value: duplicate key value violates unique constraint \"logger_project_name_74cebfdda007f55b_uniq\"\r\nDETAIL:  Key (name, organization_id)=(Monitoring Form, 675) already exists.\r\n```", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/923", "title": "Export failing for a form with 250K records", "body": "Results in a segmentation fault and running out of memory", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/921", "title": "TypeError: must be string, not int on exports string_to_date_with_xls_validation", "body": "```python\r\nException in request: TypeError: must be string, not intTraceback (most recent call last):\r\n  File \"/...../onadata/apps/viewer/tasks.py\", line 115, in create_xls_export\r\n    options\r\n  File \"/...../onadata/libs/utils/export_tools.py\", line 175, in generate_export\r\n    options=options, columns_with_hxl=columns_with_hxl\r\n  File \"/...../onadata/libs/utils/export_builder.py\", line 671, in to_xls_export\r\n    self.pre_process_row(row, section),\r\n  File \"/...../onadata/libs/utils/export_builder.py\", line 470, in pre_process_row\r\n    value, elm['type'])\r\n  File \"/...../onadata/libs/utils/export_builder.py\", line 437, in convert_type\r\n    return func(value)\r\n  File \"/...../onadata/libs/utils/export_builder.py\", line 190, in <lambda>\r\n    'date': lambda x: ExportBuilder.string_to_date_with_xls_validation(x),\r\n  File \"/...../onadata/libs/utils/export_builder.py\", line 201, in string_to_date_with_xls_validation\r\n    date_obj = datetime.strptime(date_str, '%Y-%m-%d').date()\r\nTypeError: must be string, not int\r\n```", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/912", "title": "SAV Export exception ArgumentError: argument 3: <type 'exceptions.TypeError'>: wrong type", "body": "```python \r\nException in request: ArgumentError: argument 3: <type 'exceptions.TypeError'>: wrong typeTraceback (most recent call last):\r\n  File \"/..../app-versioned/1485952384/onadata/apps/viewer/tasks.py\", line 293, in create_sav_zip_export\r\n    options\r\n  File \"/..../app-versioned/1485952384/onadata/libs/utils/export_tools.py\", line 156, in generate_export\r\n    options=options, columns_with_hxl=columns_with_hxl\r\n  File \"/..../app-versioned/1485952384/onadata/libs/utils/export_builder.py\", line 829, in to_zipped_sav\r\n    sav_writer = SavWriter(sav_file.name, **sav_options)\r\n  File \"/..../.virtualenvs/onadata/src/savreaderwriter/savReaderWriter/savWriter.py\", line 221, in __init__\r\n    self.valueLabels = valueLabels\r\n  File \"/..../.virtualenvs/onadata/src/savreaderwriter/savReaderWriter/header.py\", line 302, in valueLabels\r\n    value, c_char_py3k(label))\r\nArgumentError: argument 3: <type 'exceptions.TypeError'>: wrong type```", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/908", "title": "Handle deadlock exceptions during submissions and project edits", "body": "```python\r\nInternal Server Error: /submission\r\n\r\nOperationalError at /submission\r\ndeadlock detected\r\nDETAIL:  Process 520 waits for ShareLock on transaction 116627497; blocked by process 522.\r\nProcess 522 waits for ShareLock on transaction 116627494; blocked by process 520.\r\nHINT:  See server log for query details.\r\nCONTEXT:  while updating tuple (349,32) in relation \"logger_project\"\r\n\r\n\r\nRequest Method: POST\r\nRequest URL: https://odk.ona.io/submission\r\nDjango Version: 1.9.5\r\nPython Executable: /..../.virtualenvs/onadata/bin/uwsgi\r\nPython Version: 2.7.6\r\nPython Path: ['/..../.virtualenvs/onadata/src/savreaderwriter/savReaderWriter', '/..../.virtualenvs/onadata/src/savreaderwriter/savReaderWriter/cWriterow', '.', '', '/..../.virtualenvs/onadata/src/django-nose', '/..../.virtualenvs/onadata/src/django-digest', '/..../.virtualenvs/onadata/src/j2xclient', '/..../.virtualenvs/onadata/src/cors-headers', '/..../.virtualenvs/onadata/src/pricing', '/..../.virtualenvs/onadata/src/savreaderwriter', '/..../.virtualenvs/onadata/src/google-export', '/..../.virtualenvs/onadata/lib/python2.7', '/..../.virtualenvs/onadata/lib/python2.7/plat-x86_64-linux-gnu', '/..../.virtualenvs/onadata/lib/python2.7/lib-tk', '/..../.virtualenvs/onadata/lib/python2.7/lib-old', '/..../.virtualenvs/onadata/lib/python2.7/lib-dynload', '/usr/lib/python2.7', '/usr/lib/python2.7/plat-x86_64-linux-gnu', '/usr/lib/python2.7/lib-tk', '/..../.virtualenvs/onadata/local/lib/python2.7/site-packages']\r\nServer time: Wed, 8 Feb 2017 10:07:29 -0500\r\nInstalled Applications:\r\n('google_export',\r\n 'pricing',\r\n 'django.contrib.auth',\r\n 'django.contrib.contenttypes',\r\n 'django.contrib.sessions',\r\n 'django.contrib.sites',\r\n 'django.contrib.messages',\r\n 'django.contrib.staticfiles',\r\n 'django.contrib.humanize',\r\n 'django.contrib.admin',\r\n 'django.contrib.admindocs',\r\n 'django.contrib.gis',\r\n 'registration',\r\n 'django_nose',\r\n 'django_digest',\r\n 'corsheaders',\r\n 'oauth2_provider',\r\n 'rest_framework',\r\n 'rest_framework.authtoken',\r\n 'taggit',\r\n 'readonly',\r\n 'onadata.apps.logger',\r\n 'onadata.apps.viewer',\r\n 'onadata.apps.main',\r\n 'onadata.apps.restservice',\r\n 'onadata.apps.api',\r\n 'guardian',\r\n 'djcelery',\r\n 'onadata.apps.sms_support',\r\n 'onadata.libs',\r\n 'reversion')\r\nInstalled Middleware:\r\n('multidb.middleware.PinningRouterMiddleware',\r\n 'onadata.libs.profiling.sql.SqlTimingMiddleware',\r\n 'django.middleware.http.ConditionalGetMiddleware',\r\n 'django.middleware.cache.UpdateCacheMiddleware',\r\n 'django.middleware.common.CommonMiddleware',\r\n 'django.middleware.cache.FetchFromCacheMiddleware',\r\n 'django.contrib.sessions.middleware.SessionMiddleware',\r\n 'onadata.libs.utils.middleware.LocaleMiddlewareWithTweaks',\r\n 'django.middleware.csrf.CsrfViewMiddleware',\r\n 'corsheaders.middleware.CorsMiddleware',\r\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n 'django.contrib.messages.middleware.MessageMiddleware',\r\n 'onadata.libs.utils.middleware.HTTPResponseNotAllowedMiddleware',\r\n 'readonly.middleware.DatabaseReadOnlyMiddleware')\r\n\r\n\r\nTraceback:\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\r\n  149.                     response = self.process_exception_by_middleware(e, request)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\r\n  147.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\r\n  58.         return view_func(*args, **kwargs)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/viewsets.py\" in view\r\n  87.             return self.dispatch(request, *args, **kwargs)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/views.py\" in dispatch\r\n  466.             response = self.handle_exception(exc)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/views.py\" in dispatch\r\n  463.             response = handler(request, *args, **kwargs)\r\n\r\nFile \"./onadata/apps/api/viewsets/xform_submission_viewset.py\" in create\r\n  149.             error, instance = create_fn(username, request)\r\n\r\nFile \"./onadata/apps/api/viewsets/xform_submission_viewset.py\" in create_instance_from_xml\r\n  79.     return safe_create_instance(username, xml_file, media_files, None, request)\r\n\r\nFile \"./onadata/libs/utils/logger_tools.py\" in safe_create_instance\r\n  332.             username, xml_file, media_files, uuid=uuid, request=request)\r\n\r\nFile \"./onadata/libs/utils/logger_tools.py\" in create_instance\r\n  299.                 date_created_override)\r\n\r\nFile \"./onadata/libs/utils/logger_tools.py\" in save_submission\r\n  205.     instance = _get_instance(xml, new_uuid, submitted_by, status, xform)\r\n\r\nFile \"./onadata/libs/utils/logger_tools.py\" in _get_instance\r\n  96.             xml=xml, user=submitted_by, status=status, xform=xform)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/manager.py\" in manager_method\r\n  122.                 return getattr(self.get_queryset(), name)(*args, **kwargs)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/query.py\" in create\r\n  401.         obj.save(force_insert=True, using=self.db)\r\n\r\nFile \"./onadata/apps/logger/models/instance.py\" in save\r\n  455.         super(Instance, self).save(*args, **kwargs)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/base.py\" in save\r\n  708.                        force_update=force_update, update_fields=update_fields)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/base.py\" in save_base\r\n  745.                                    update_fields=update_fields, raw=raw, using=using)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/dispatch/dispatcher.py\" in send\r\n  192.             response = receiver(signal=self, sender=sender, **named)\r\n\r\nFile \"./onadata/apps/logger/models/instance.py\" in post_save_submission\r\n  472.         save_full_json(instance.pk, created)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/celery/app/task.py\" in __call__\r\n  420.             return self.run(*args, **kwargs)\r\n\r\nFile \"./onadata/apps/logger/models/instance.py\" in save_full_json\r\n  208.             instance.save(update_fields=['json'])\r\n\r\nFile \"./onadata/apps/logger/models/instance.py\" in save\r\n  455.         super(Instance, self).save(*args, **kwargs)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/base.py\" in save\r\n  708.                        force_update=force_update, update_fields=update_fields)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/base.py\" in save_base\r\n  745.                                    update_fields=update_fields, raw=raw, using=using)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/dispatch/dispatcher.py\" in send\r\n  192.             response = receiver(signal=self, sender=sender, **named)\r\n\r\nFile \"./onadata/apps/logger/models/instance.py\" in post_save_submission\r\n  473.         update_project_date_modified(instance.pk, created)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/celery/app/task.py\" in __call__\r\n  420.             return self.run(*args, **kwargs)\r\n\r\nFile \"./onadata/apps/logger/models/instance.py\" in update_project_date_modified\r\n  222.         instance.xform.project.save(update_fields=['date_modified'])\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/base.py\" in save\r\n  708.                        force_update=force_update, update_fields=update_fields)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/base.py\" in save_base\r\n  736.             updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/base.py\" in _save_table\r\n  801.                                       forced_update)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/base.py\" in _do_update\r\n  851.         return filtered._update(values) > 0\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/query.py\" in _update\r\n  645.         return query.get_compiler(self.db).execute_sql(CURSOR)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/sql/compiler.py\" in execute_sql\r\n  1149.         cursor = super(SQLUpdateCompiler, self).execute_sql(result_type)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/sql/compiler.py\" in execute_sql\r\n  848.             cursor.execute(sql, params)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/backends/utils.py\" in execute\r\n  64.                 return self.cursor.execute(sql, params)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/utils.py\" in __exit__\r\n  95.                 six.reraise(dj_exc_type, dj_exc_value, traceback)\r\n\r\nFile \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/backends/utils.py\" in execute\r\n  64.                 return self.cursor.execute(sql, params)\r\n\r\nException Type: OperationalError at /submission\r\nException Value: deadlock detected\r\nDETAIL:  Process 520 waits for ShareLock on transaction 116627497; blocked by process 522.\r\nProcess 522 waits for ShareLock on transaction 116627494; blocked by process 520.\r\nHINT:  See server log for query details.\r\nCONTEXT:  while updating tuple (349,32) in relation \"logger_project\"\r\n\r\nRequest information:\r\nGET: No GET data\r\n\r\nPOST: No POST data\r\n\r\nFILES: No FILES data\r\n\r\nCOOKIES:\r\nmultidb_pin_writes = 'y'\r\n\r\n```", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/907", "title": "SAV Export KeyError exception", "body": "```python\r\nException in request: KeyError: 'super_long_variable_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'Traceback (most recent call last):\r\n  File \"/..../app-versioned/1485953010/onadata/apps/viewer/tasks.py\", line 293, in create_sav_zip_export\r\n    options\r\n  File \"/..../app-versioned/1485953010/onadata/libs/utils/export_tools.py\", line 156, in generate_export\r\n    options=options, columns_with_hxl=columns_with_hxl\r\n  File \"/..../app-versioned/1485953010/onadata/libs/utils/export_builder.py\", line 829, in to_zipped_sav\r\n    sav_writer = SavWriter(sav_file.name, **sav_options)\r\n  File \"/..../.virtualenvs/onadata/src/savreaderwriter/savReaderWriter/savWriter.py\", line 221, in __init__\r\n    self.valueLabels = valueLabels\r\n  File \"/..../.virtualenvs/onadata/src/savreaderwriter/savReaderWriter/header.py\", line 300, in valueLabels\r\n    if self.varTypes[varName] == 0:\r\nKeyError: 'super_long_variable_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'\r\n```", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/907/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/906", "title": "OperationalError: canceling statement due to conflict with recovery", "body": "Has been observed in different places, most likely during read operations with a read replica db\r\n```python\r\nException in request: OperationalError: canceling statement due to conflict with recovery\r\nDETAIL:  User query might have needed to see row versions that must be removed.\r\nTraceback (most recent call last):\r\n  File \"/..../app-versioned/1486626094/onadata/apps/viewer/tasks.py\", line 293, in create_sav_zip_export\r\n    options\r\n  File \"/..../app-versioned/1486626094/onadata/libs/utils/export_tools.py\", line 156, in generate_export\r\n    options=options, columns_with_hxl=columns_with_hxl\r\n  File \"/..../app-versioned/1486626094/onadata/libs/utils/export_builder.py\", line 861, in to_zipped_sav\r\n    for d in data:\r\n  File \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/query.py\", line 258, in __iter__\r\n    self._fetch_all()\r\n  File \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/query.py\", line 1074, in _fetch_all\r\n    self._result_cache = list(self.iterator())\r\n  File \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/query.py\", line 158, in __iter__\r\n    for row in compiler.results_iter():\r\n  File \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/sql/compiler.py\", line 802, in results_iter\r\n    results = self.execute_sql(MULTI)\r\n  File \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/sql/compiler.py\", line 848, in execute_sql\r\n    cursor.execute(sql, params)\r\n  File \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/backends/utils.py\", line 64, in execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/utils.py\", line 95, in __exit__\r\n    six.reraise(dj_exc_type, dj_exc_value, traceback)\r\n  File \"/..../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/backends/utils.py\", line 64, in execute\r\n    return self.cursor.execute(sql, params)\r\nOperationalError: canceling statement due to conflict with recovery\r\nDETAIL:  User query might have needed to see row versions that must be removed.\r\n```", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/906/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/847", "title": "UnreadablePostError at /[username]/submission", "body": "```python\r\nUnreadablePostError at /[username]/submission\r\nerror during read(65536) on wsgi.input\r\n\r\nRequest Method: POST\r\nRequest URL: https://ona.io/[username]/submission\r\nDjango Version: 1.9.5\r\nPython Executable: /.../.virtualenvs/onadata/bin/uwsgi\r\nPython Version: 2.7.6\r\nPython Path: ['/.../.virtualenvs/onadata/src/savreaderwriter/savReaderWriter', '/.../.virtualenvs/onadata/src/savreaderwriter/savReaderWriter/cWriterow', '.', '', '/.../.virtualenvs/onadata/src/django-nose', '/.../.virtualenvs/onadata/src/django-digest', '/.../.virtualenvs/onadata/src/j2xclient', '/.../.virtualenvs/onadata/src/cors-headers', '/.../.virtualenvs/onadata/src/pricing', '/.../.virtualenvs/onadata/src/savreaderwriter', '/.../.virtualenvs/onadata/src/google-export', '/.../.virtualenvs/onadata/lib/python2.7', '/.../.virtualenvs/onadata/lib/python2.7/plat-x86_64-linux-gnu', '/.../.virtualenvs/onadata/lib/python2.7/lib-tk', '/.../.virtualenvs/onadata/lib/python2.7/lib-old', '/.../.virtualenvs/onadata/lib/python2.7/lib-dynload', '/usr/lib/python2.7', '/usr/lib/python2.7/plat-x86_64-linux-gnu', '/usr/lib/python2.7/lib-tk', '/.../.virtualenvs/onadata/local/lib/python2.7/site-packages']\r\nServer time: Thu, 24 Nov 2016 03:38:50 -0500\r\nInstalled Applications:\r\n('google_export',\r\n 'pricing',\r\n 'django.contrib.auth',\r\n 'django.contrib.contenttypes',\r\n 'django.contrib.sessions',\r\n 'django.contrib.sites',\r\n 'django.contrib.messages',\r\n 'django.contrib.staticfiles',\r\n 'django.contrib.humanize',\r\n 'django.contrib.admin',\r\n 'django.contrib.admindocs',\r\n 'django.contrib.gis',\r\n 'registration',\r\n 'django_nose',\r\n 'django_digest',\r\n 'corsheaders',\r\n 'oauth2_provider',\r\n 'rest_framework',\r\n 'rest_framework.authtoken',\r\n 'taggit',\r\n 'readonly',\r\n 'onadata.apps.logger',\r\n 'onadata.apps.viewer',\r\n 'onadata.apps.main',\r\n 'onadata.apps.restservice',\r\n 'onadata.apps.api',\r\n 'guardian',\r\n 'djcelery',\r\n 'onadata.apps.sms_support',\r\n 'onadata.libs',\r\n 'reversion')\r\nInstalled Middleware:\r\n('onadata.libs.profiling.sql.SqlTimingMiddleware',\r\n 'django.middleware.http.ConditionalGetMiddleware',\r\n 'django.middleware.common.CommonMiddleware',\r\n 'django.contrib.sessions.middleware.SessionMiddleware',\r\n 'onadata.libs.utils.middleware.LocaleMiddlewareWithTweaks',\r\n 'django.middleware.csrf.CsrfViewMiddleware',\r\n 'corsheaders.middleware.CorsMiddleware',\r\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n 'django.contrib.messages.middleware.MessageMiddleware',\r\n 'onadata.libs.utils.middleware.HTTPResponseNotAllowedMiddleware',\r\n 'readonly.middleware.DatabaseReadOnlyMiddleware')\r\n\r\n\r\nTraceback:\r\n\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\r\n  149.                     response = self.process_exception_by_middleware(e, request)\r\n\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\r\n  147.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\r\n  58.         return view_func(*args, **kwargs)\r\n\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/viewsets.py\" in view\r\n  87.             return self.dispatch(request, *args, **kwargs)\r\n\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/views.py\" in dispatch\r\n  466.             response = self.handle_exception(exc)\r\n\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/views.py\" in dispatch\r\n  463.             response = handler(request, *args, **kwargs)\r\n\r\nFile \"./onadata/apps/api/viewsets/xform_submission_viewset.py\" in create\r\n  149.             error, instance = create_fn(username, request)\r\n\r\nFile \"./onadata/apps/api/viewsets/xform_submission_viewset.py\" in create_instance_from_xml\r\n  75.     xml_file_list = request.FILES.pop('xml_submission_file', [])\r\n\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/request.py\" in __getattribute__\r\n  353.             return super(Request, self).__getattribute__(attr)\r\n\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/request.py\" in FILES\r\n  383.             self._load_data_and_files()\r\n\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/request.py\" in _load_data_and_files\r\n  243.             self._data, self._files = self._parse()\r\n\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/request.py\" in _parse\r\n  289.             parsed = parser.parse(stream, media_type, self.parser_context)\r\n\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/parsers.py\" in parse\r\n  114.             data, files = parser.parse()\r\n\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/http/multipartparser.py\" in parse\r\n  209.                         for chunk in field_stream:\r\n\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/utils/six.py\" in next\r\n  558.             return type(self).__next__(self)\r\n\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/http/multipartparser.py\" in __next__\r\n  356.             output = next(self._producer)\r\n\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/utils/six.py\" in next\r\n  558.             return type(self).__next__(self)\r\n\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/http/multipartparser.py\" in __next__\r\n  487.         for bytes in stream:\r\n\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/utils/six.py\" in next\r\n  558.             return type(self).__next__(self)\r\n\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/http/multipartparser.py\" in __next__\r\n  356.             output = next(self._producer)\r\n\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/utils/six.py\" in next\r\n  558.             return type(self).__next__(self)\r\n\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/http/multipartparser.py\" in __next__\r\n  418.             data = self.flo.read(self.chunk_size)\r\n\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/http/request.py\" in read\r\n  322.             six.reraise(UnreadablePostError, UnreadablePostError(*e.args), sys.exc_info()[2])\r\n\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/http/request.py\" in read\r\n  320.             return self._stream.read(*args, **kwargs)\r\n\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/core/handlers/wsgi.py\" in read\r\n  53.             result = self.buffer + self._read_limited(size - len(self.buffer))\r\n\r\nFile \"/.../.virtualenvs/onadata/local/lib/python2.7/site-packages/django/core/handlers/wsgi.py\" in _read_limited\r\n  41.         result = self.stream.read(size)\r\n\r\nException Type: UnreadablePostError at /[username]/submission\r\nException Value: error during read(65536) on wsgi.input\r\nRequest information:\r\nGET: No GET data\r\n\r\nPOST: No POST data\r\n\r\nFILES: No FILES data\r\n\r\nCOOKIES: No cookie data\r\n\r\n````", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/839", "title": "Exception Type: IOError at /submission when attachments do not exist", "body": "```python\r\nFile \"./onadata/apps/viewer/models/parsed_instance.py\" in post_save_submission\r\n  459.             save_osm_data_async(parsed_instance.instance_id)\r\n\r\nFile \"/home/onadata/.virtualenvs/onadata/local/lib/python2.7/site-packages/celery/app/task.py\" in __call__\r\n  420.             return self.run(*args, **kwargs)\r\n\r\nFile \"./onadata/libs/utils/osm.py\" in save_osm_data_async\r\n  142.     save_osm_data(instance_id)\r\n\r\nFile \"./onadata/libs/utils/osm.py\" in save_osm_data\r\n  161.                 osm_xml = osm.media_file.read()\r\n\r\nFile \"/home/onadata/.virtualenvs/onadata/local/lib/python2.7/site-packages/django/core/files/utils.py\" in <lambda>\r\n  19.     read = property(lambda self: self.file.read)\r\n\r\nFile \"/home/onadata/.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/models/fields/files.py\" in _get_file\r\n  51.             self._file = self.storage.open(self.name, 'rb')\r\n\r\nFile \"/home/onadata/.virtualenvs/onadata/local/lib/python2.7/site-packages/django/core/files/storage.py\" in open\r\n  37.         return self._open(name, mode)\r\n\r\nFile \"/home/onadata/.virtualenvs/onadata/local/lib/python2.7/site-packages/storages/backends/s3boto.py\" in _open\r\n  177.             raise IOError('File does not exist: %s' % name)\r\n\r\nException Type: IOError at /submission\r\n```", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/838", "title": "Invalid JSON causes an unhandled exception at data.xls export endpoint", "body": "Internal Server Error: /[username]/forms/[id_string]/data.xls\r\n\r\n```python\r\nFile \"./onadata/apps/viewer/views.py\" in data_export\r\n  267.                 export_type, xform, None, options)\r\n\r\nFile \"./onadata/libs/utils/export_tools.py\" in generate_export\r\n  134.         records = query_data(xform, query=filter_query, start=start, end=end)\r\n\r\nFile \"./onadata/apps/viewer/models/parsed_instance.py\" in query_data\r\n  308.         xform, query, fields, sort, start, end, start_index, limit, count\r\n\r\nFile \"./onadata/apps/viewer/models/parsed_instance.py\" in get_sql_with_params\r\n  264.     where, where_params = get_where_clause(query, known_integers)\r\n\r\nFile \"./onadata/apps/viewer/models/parsed_instance.py\" in get_where_clause\r\n  201.             raise e\r\n\r\nException Type: ValueError at /cruzroja/forms/Sisvolem/data.xls\r\nException Value: Expecting ',' delimiter: line 1 column 19 (char 18)\r\nRequest information:\r\nGET:\r\nquery = u'{\"IdActividad\":\"1\"; \"nMunicipio\":\"GUADAJUATO\"}'\r\n\r\nPOST: No POST data\r\n```", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/776", "title": "OSM Export includes deleted records", "body": "", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/776/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/773", "title": "Return a better status code on XForm upload via briefcase in case the form with id_string already exists", "body": "XForm Upload in ODK Briefcase results in a `400` when the XLSForm/XForm with that id_string already exists. Should we return a `20X` status code instead?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commits": [{"url": "https://api.github.com/repos/onaio/onadata/commits/2a6051688c603d83ba4cc1e9bd5d7cc9af58cded", "message": "Travis CI troubleshooting - remove mongdb repo"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/1ef42a9a2ce8674ac4e634fcac84e34b05be03fb", "message": "XForm MD5 Hash DB Migration\n\nfixes #1187"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/48ba70045b946e4d96318846ae6c1b4f2aaaa6b6", "message": "Merge pull request #1206\n\nEnsure that save_osm_data does not raise TransactionManagementError"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/28c39d78f87cbdf877dab49f5221220014f3b908", "message": "Display form version in OpenRosa Form List API\n\n- also removes majorMinorVersion\n- closes #1195"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/5b45a3d23272be8dedb1343db8b41a46544b18aa", "message": "Merge pull request #1200\n\nuse_master when running set_project_perms_to_xform_async"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/dc250fcb32bfd0451e522669fbfff90e92f87fad", "message": "KJ/UK: report exception if form/project does not exist"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/8d89606993123bcb62ebd93caa258cfc9bd64021", "message": "Merge pull request #1196\n\nPrevent duplacate extra columns"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/c091ca28abfbfa92583e2239b1bfaf9a65d2882f", "message": "Add exta_columns instance variables for exta columns.\n\nMaking changes to class variables has unexpected side effects, using an\ninstance variables is more predictable.\n\ncloses #1155"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/def002fce3b1c525028348dcfdf408a338123187", "message": "Merge pull request #1194\n\nMeta permissions should apply to exports list"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/cda9f5b8f8550e72c98a099e3a235c83dd1e5c43", "message": "Exclude submitted by exports from other users."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/a72f54e290e16c18a12cc7aa22601dcfc6f1fb90", "message": "Export list includes only exports user has access to."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/8f86ad492b9e5ce80af788435f0369983777c37c", "message": "Ensure query is a saved option in async exports."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/cf5c17ee0692f11831b53ee6624e8a455b044b2f", "message": "Filter export queryset with meta permissions\n\nFilters for submitted user if export was meant for only the submitter.\n\ncloses #1189"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/8b5f9f040385478857dfa361977763abecf5630c", "message": "Refactor test_xform_viewset: pylint cleanup"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/ea2b1f9d380bfb03e9889ff7266f7e0bbb9f132e", "message": "Pylint cleanup"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/77521e13c0e4b16def564a923280f009aa765049", "message": "Merge pull request #1158\n\nDocker files"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/5b33f340a34a4684aa560905c04508f006696cc0", "message": ".db for local db persistence with docker-compose"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/ce4b739ba7e07c717181c525b959dbab709eecbb", "message": "Assign superuser to onadata role.\n\nAllows test database to br created when running tests."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/6a03189fafa3beb7e62fb92016d4313c572e8596", "message": "Initial docker compose files to run onadata."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/f4a99ab69b1a8f0a9bb81a6e64580607c120d84f", "message": "Merge pull request #1193\n\nDo not split select multiple in repeats if False"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/fb480a5f1d1617e3eeeb8da6cd9e98c9b5ab114a", "message": "Pylint cleanup"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/1ae0c39e74f8664f8ce801b6e36e90cda40cdab0", "message": "Do not split select multiple in repeats if False\n\ncloses #1148"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/76cd5a1ae8aac7394970d05f8eef043672003886", "message": "fix uri"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/bbda8a0ad5e59bc12f14f1fe8053a68ec7085a58", "message": "Merge pull request #1174\n\nadd bulk delete functionality"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/dfc0a3c24c390ac85865a1dfa8872aa0be75bcd8", "message": "Fix floip test"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/b13fba7e56452d3b8702fc76466991f9912281bd", "message": "pyxform version 0.10.0 (#1178)"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/d93b335a089a25f45e669ba8118399be42fd5229", "message": "Merge pull request #1172 from onaio/floip-docs\n\nEdit FLOIP docs"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/2dc9882f902b14fa07532927c04fc62d21914e10", "message": "Merge pull request #1171 from onaio/floip-output-results\n\nConvert JSON dict to FLOIP list"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/89962494380c4adfbfd52a93434b47ca8bac5780", "message": "Merge pull request #1170 from onaio/floip-xform\n\nPublish FLOIP results data package"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/1010f0769f6bba1a0f7d1ba28e38ddbfdec432c0", "message": "Merge pull request #1146 from onaio/refresh-from-db\n\nUse native Django function refresh_from_db() instead of custom reload()"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/a56b9ad3cb5e189dccf516ef2fb6a71b010a2950", "message": "Fix test"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/be912b8d0707492b8880c9f59760e2305757401d", "message": "Bypass floip results for submissions or errors."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/50daca6b9442d3cdd02b5b446d2ae954a149a095", "message": "Fix FLOIP results data renderer functions."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/77531fa9a9316df706fe3627d6aa41cfe788994b", "message": "update pip requirements."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/186a4ebbb20820b2fd490fd8ae21434944537118", "message": "Publish FLOIP results data package\n\nFix #1116"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/b32140bbd6a805d096fe7d86f0631932d5044e2f", "message": "Pylint cleanup"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/5142ec49721591c59d0213065df4946408023587", "message": "Merge pull request #1168 from onaio/multi-row-submission\n\nUse a ListSerializer for FLOIP submissions"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/2436448185fb1148d2ee8e3d625e4154b02ea2cf", "message": "parse_int should return None for empty string. (#1165)\n\nFix #1164."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/b21e6040ff58597f9ee7391d0174f6ddb8fea621", "message": "Merge pull request #1163 from onaio/encrypted-attachment\n\nEncrypted attachment"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/e58a45e536a1101866cf1eb5b0e8505c67a95c9f", "message": "For encrypted forms only return results where all attachments have been received."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/27789c6d64fb875fb6b6fa3ece74b0d41f0d016a", "message": "Update encrypted form submission when all attachments have been received.\n\nFix #1115\nFix #1113"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/4d9b60cd9e231f32f2f9832a701f662db717135d", "message": "Test HEAD request to submission endpoint. (#1154)\n\n- Return correct response for HEAD request on submission endpoint"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/36781d796eac785ca2896063e44e82a5b2a18e9c", "message": "Validate presence of the xml_submission_file"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/b261747cc2dda4f1bd4bdf480752fecf6b279d96", "message": "Correct spelling in submission.xml template"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/7ae5016ef81d69a87926a95f039018b7eeeaee99", "message": "Add CHECK_EXPIRED_TEMP_TOKEN setting to disable check for expired token. (#1149)"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/d3c6dd5dacbed1fd16dc2fed4979c77e2c1d0663", "message": "Merge pull request #1142\n\nRefactor calling webhooks to use django signals."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/3db3c3f7c407bae8a85df7e51687b13d44e4cc60", "message": "Merge pull request #1144 from onaio/rapidpro-2-ona\n\nRapidpro to Ona Submissions"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/47cf36cae03a08554bdc5ed5e3fe7981c89618d7", "message": "Propagate exceptions when handling external choices. (#1141)"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/2702a06cfb310cea8db370ed17dcb1dcde98e365", "message": "Merge pull request #1134 from onaio/issue-1133\n\nAdd new 'hash' field to XForm model"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/7808047d6ea818ac584ffbc384357b01c18c2acc", "message": "Code cleanup, pylint."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/ca411451342a6d310a3ce77156b2fcc80d10aed6", "message": "IsAuthenticatedSubmission - apply check only on POST requests."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/62c7dc891b4cf5c721780a5f4652c0487d32eb0f", "message": "Refactor check on call_webhooks."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/abdc34b48193e3634ef975747464898dfae7eaf6", "message": "Refactor call_webhooks to viewer.signals module."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/2e98eb9abd1c89a827c0ca5ebe7b6bb3e5814fac", "message": "Catch only GEOSExceptions."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/c109c4d58c0ad66603e468ad711398375fc06240", "message": "Add trigger_webhook signal."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/9e0f89023dc1e51016dc74d723e1134d806d86fe", "message": "Pylint cleanup of onadata.libs.utils.osm module."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/734ca199558d115265cd46333bf15df451211bc6", "message": "Merge pull request #1124 from onaio/merged-dataset-updates\n\nMerged dataset fixes"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/4e3cae33c15908e5ca369d5351b4ac5d75358108", "message": "Upgrade psycopg2 to version 2.7.3.1"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/172e98904a9a2e51a8d0b30389e65c8b8683033c", "message": "Save xforms if not saved by create() method"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/07f2aa4350bb203ba1e3e8819ed1bf3679d3038f", "message": "Add db_index to Instance uuid and checksum fields."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/12087899c8c410d79e25f6c96afe3ec3902d776a", "message": "Remove select related for filtered submissions."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/7eb4406d30a0f22a1ee346b6771207ffc198c223", "message": "Filter deleted xforms for merged datasets on charts endpoint."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/aecd13face958ff2a26a87f134ad804b69bdea07", "message": "Update MergedXFormSerializer tests."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/911c6fc8cd38ad25adf5d4941ab0b0d5132058ad", "message": "non_deleted_xforms is no longer relevant"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/f5abb3462e4cc004c50e6d996a22994fd8008885", "message": "Filter deleted xforms for merged datasets."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/8706a9bc7385afc36c97720511a03ff69dfe631a", "message": "Add checks for deleted forms and matching fields."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/ff1913f347552e20f286f8185546c0302095d5cc", "message": "Update tests to reflect lack of etags on 0 records"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/68658d3da0fc89f26694ba9dfc6eac38df54a1e6", "message": "Code refactor."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/db6d6cbd6aea791d0d8fa850d028bfed1e6412c1", "message": "Set etag hash only when we have submissions."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/58baf65c20fa05d2ccc7ee60446d2560ccb2f816", "message": "update docs"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/61f6481faabdb9751b94bf6fd3a344f7ef83860c", "message": "Filter out null values and by merged xform id.\n\nPrevents running into EmptyQueryset exception."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/fb534637d93846b426b76e8a3b789778d16de25c", "message": "Fail if xforms are not linked to merged dataset."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/90bc4703fe4bbdc758a0fe24395005ce89fe932c", "message": "Filter out deleted merged datasets."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/fd9a7e80efc31f694cd770222afda795f958479a", "message": "Fix permissions (#1125)\n\n* correct reference to group users\r\n\r\n* Pylint cleanup."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/1bbedb3fdc4cd870213fe0bbef8a90a06c8514ee", "message": "Merge pull request #1122 from onaio/hash-xml-submission-check\n\nXML submission checksum"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/8adb744c4329b6e6bfb9902747b6fddff1d1f2f9", "message": "use sha256 for checksums"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/180c4b96a3c5e1bb54f5eaa024633574b6c90e75", "message": "Compare XML data using it's checksum.\n\nStore the checksum of a submission XML and use it to compare when\nchecking for changes/edits in the data."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/13f7cd1bb751b580e40c9a634723c3dd43ef7bb8", "message": "Check submission using only the uuid."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/c7445afe66f5941b0aa32ad358810b9c2dd610d8", "message": "Re-implement users with object permissions (#1120)\n\nHopefully faster, the joins can be quite taxing in high traffic with a large dataset."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/a62dbaa110f8b6a0941a468e8e9cef5dbc83db57", "message": "Add request method in sql profiling logs. (#1121)"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/cbe8dbc47710aa9e2b6b84f337c6f6f058e83960", "message": "Merge pull request #1119 from onaio/last-submission-time-isoformat\n\nLast submission time in serializer should be in isoformat."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/d20bcbbc17eb0e4503f4e6033e2ce0161668c238", "message": "Set last_submission_time to isoformat."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/862e82a80e8560e809f43d3760726de3cc89221a", "message": "Test last_submission_time isoformat response"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/2fed07021679b85e2045cab013109f2f5683cb65", "message": "Add id_string and is_merged_dataset to prefetch"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/61daa5662f36f94cd907b6f55a2e06120d57fa32", "message": "Check last_submission is not None"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/ea7b8dd9e74c440c5ea2c2ad3e0896f710333046", "message": "Return isoformat data for last_submission_time\n\nget_last_submission_time should return isoformat in the serializers for\nit to be JSON serializeable."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/ea87ffa1591bdeadd62e081524c93955e872b544", "message": "Merge pull request #1111 from onaio/migrations-updates-for-media-fields\n\nMigrations updates for media fields"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/dfd474f489ac8f145035c841af78628815de6ff8", "message": "Use nullable defaults for media fields in Instance\n\nFor databases that have lots of submissions in logger_instance, they\ncould take hours to migrate the data. This change ensures that the\nchanges are propagated to the database with the shortest downtime if\nany."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/7902ae792aa842f86d860005f122b17ed7df8eff", "message": "Merge pull request #1109 from onaio/issue-1105\n\nAdd media_all_received as a data filter parameter"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/64995ac176f4a854c3c561b5f45d0be78b732205", "message": "formList with xform_pk fixes\n\n- xform_pk if not existing to respond with 404\n- apply all filters to queryset whether a user is authenticated or not."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/6f65cc74a90541967a332898943d15220e32af8f", "message": "Merge pull request #1107 from onaio/filter-deleted-forms\n\nFilter deleted forms in classic web views"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/75155025d7efedad0cd9c03598ea961e8299b9d3", "message": "Code cleanup, pylint viewer/views.py"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/7228239edd8e4c83cb7e966e568f84c6b5be8f58", "message": "Filter out deleted xforms in logger views.\n\n- Should not expose any soft deleted records\n- Code cleanup, pylint"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/88e3a895929bd113133db30815221cd158ab10fa", "message": "Code cleanup with pylint"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/da392ec9d6f5d5d33fe7fb90e46f6876e92853d2", "message": "Filter deleted forms from XForm queries.\n\nApplies the deleted_at__isnull=True in views on the classic UI."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/20be4c16692d46bbb4b041ef26a3ea4f971d84bf", "message": "Add Instance Model Fields As Data Endpoints Filters"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/d02dadb26c1933e952c9a0a56feaa663e06cb517", "message": "Merge pull request #1092 from onaio/issue-983\n\nPrevent SAV Exports From Failing When Choices Lists Have Duplicate Names"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/f805ec09f3324ab2aaa35e1f48063bc25dfebed2", "message": "Merge pull request #1089 from onaio/issue-1049\n\nKeep track of whether all attachments have been submitted"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/107e4792b9d808545760f4eeffb600965a7d9af1", "message": "KJ|UK: dict_valuest_matching_key handle list of None values"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/e384e5fb56b2c23df284f8c9524b9895394dc53f", "message": "add nested repeats in attachment tracking"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/f4b9b23625617445fb916660ec384a9feee25859", "message": "Merge pull request #1102 from onaio/media-url-name\n\nReturn appropriate filename for URL based media"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/8a7d9dd029eb3b4e9f0aa0a41116303ecc987b04", "message": "refactor XFormManifestSerializer.get_filename"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/163c9fd308cb7434e7f341d12a412ec4f3d0cca9", "message": "pylint cleanup"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/31d1af9828bad0b373265295d80e2fb131c00092", "message": "Return filename from XForm URI media type\n\nAlso validates media added as a URL to include filename in the URL.\n\nFix #1093."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/76d66af31f8d18f59c92f64e87fee1dc05a116ea", "message": "Merge pull request #1098 from onaio/issue-954\n\nEnsure Accessing Dataviews With Invalid URLs Results In A 404"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/960250df6184c07a70deccacf8cc3b5d0054e37e", "message": "Merge pull request #1082 from onaio/merged-datasets\n\nadd support for merged datasets"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/d3534e3ac53948e84c9b5fb0fc70c2f90426872d", "message": "remove PyxformMarkdown in tests\n\nPyxfformMarkdown is already mixed in TestBase"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/3e91f5c2ef4d787b2383fe1ae6a5cee55d79af8b", "message": "Attachment export support merged datasets"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/9d6deb8aac593ebeddb2f93c3b41be65d24bb690", "message": "refactor _publish_md to _publish_markdown"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/b6f2eb4b324889f5cd31d2984b1cfaa9030a6d0c", "message": "KML export support merged datasets"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/1d3259855e00ae68abd6145c023668edd77658b2", "message": "Delete `_xpath` only if present"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/fbddf87a171aeade3ac1e550d982097f13f896b7", "message": "Merge forms by xpath and type"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/10ba5482ecb064374994824290be7d35dcff3b2d", "message": "Test merged datasets with groups"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/a33778a115239c8cc612fd0192ea3c0abd702a42", "message": "Update TextIt service to handle merged datasets"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/15cbce7916a243b569404a174d6e89c172cec7db", "message": "Support rest services merged datasets"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/4ee161aaf2cb35aff6718828fda6309a0fd8c28e", "message": "maintain order of questions on merged dataset"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/27efe983e8fe70677dfc6a589649b39dd3745ee1", "message": "add missing import"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/25c0581cd9c7ebc45bd335e9ffa19bdd7f78dd75", "message": "change order of tests"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/a21c81af83bfec076f08876b01238e3a927e6cf5", "message": "Validate no matching fields for merged datasets"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/bfd98d5f02d507a1eb5d62807aa78260bd59d660", "message": "Create survey object from merging forms\n\nAdded get_merged_xform_survey() function that uses the intersection of\nfields of xforms being merged to create a new survey object with only\nthe intersecting fields."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/1003cf4d754a1d8296418242b7dca46d5b2b4030", "message": "remove ID => _id from ignored columns in CSV exports"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/aacf6b53d0a94c9153fce33e9c92090b4fe28b82", "message": "code & docs cleanup"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/517ab01fee8bf9a9842d18988f4bad28be60abda", "message": "Don't override EXTRA_COLUMNS setting in tests\n\nIt is messing up other tests and there is no point updating all fixtures\nto add the additional fields specific to this one test."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/f1f86137fbe3c10d5491a4a6e13a796d85ba35aa", "message": "include XFORM_ID in mongo to dict"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/b162c44f606ce4a6615b2301b9d37d5c3489b76e", "message": "refactor test to inlude docstrings"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/1ae99f085d02e33313dbf96de205316e6851d4b9", "message": "pick extra export columns from settings"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/b9b817b7455eb6dd878c2a83cc8e61a5e4da5992", "message": "return merged datasets data for filtered datasets"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/d24b9d75c1bb0ba074be12744e3de7c019c8facf", "message": "add _xform_id to exports"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/61d2cecbfcbf419fa4f950ff8e64d7d669016b88", "message": "Data for merged datasets for open datasets"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/fd8b91ecae4fa1f1c4dfd3b64975cdb3c4f5b6eb", "message": "refactor get_or_create_opendata() as a helper function"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/258e1b299194eb0640ab40158c16994526f70378", "message": "last_submission_time for merged datasets at the forms endpoint"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/d2ea69a4580ae0ea3a7331235731d3a4a233c74f", "message": "A merged dataset should not allow data collection\n\nFiltering merged dataset from formList prevents a merged form from being\navailable for data collection."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/e673b8be0e0f9d0b6032be4f4c90e94c072f499f", "message": "Prevent submissions to a merged xform"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/bab7458bf8322fd3db8170bfb10f66e0446c5de5", "message": "show last_submission_time of a merged dataset"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/f5698e595b1b72b929de8642ed0ee0025e558af0", "message": "add isort as a dev dependency"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/271dd4cf02105db62a5b6852a5d6416d649067b7", "message": "re-order widget response in tests"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/dcd0fc19e5f5222cbcaf029eecd2f8f512db688c", "message": "add missing is_merged_dataset to test"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/3b8693c5f8140101c92f703c42c622515edfd7fc", "message": "27 api endpoints"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/5fa73b3246b8a239982c24b9966dd78350b7c00c", "message": "set project for test"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/d2ddaa071ddf315bf2ab6b7d2dcd11c7bd2408b2", "message": "revert to XLSForm/pyxform"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/bc6668c1d705ec8c7b9a6464290c0c9310da5a7f", "message": "update to passing tests"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/9777fe47caa90b4743f6712bca3a67e1228488dc", "message": "add project info to merged datasets xforms"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/af41083bd7c4db0697294294859aa8b78e927cf3", "message": "show id, id_string, title, num submissions for xforms in merged datasets"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/1941fa253d1149db3d737e28c75c40d78f27b022", "message": "setself.project for merged datasets tests when creating it"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/7dce2fd8e0788f963dbbb78ee240072ffb7cae3b", "message": "refactor PyxformTestCase to use PyxformMarkdown"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/93e8ab962d3240ee431095eea625ba301588c7b0", "message": "update travis dependencies"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/9c6b4c074142e7535bd3f8f336d735aab55322a1", "message": "charts endpoint support for merged datasets"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/1f4ca5141b79484db72ca875184fb75debded14f", "message": "pylint cleanup on charts_viewset.py"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/3a6f876e64c470263caacc36c540c86eaf70f0f7", "message": "update dev.pip dependencies"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/013ad5ab2e57ae7fe2a4d70d7d86764046c72f19", "message": "add is_merged_dataset to ProjectXFormSerializer"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/be53142af3873f6b8caa4a8ec18bf9eadab9e75e", "message": "update instances_with_geopoints if any of the merged xforms have instances with geopoints"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/a79f7c5b42dcfb3c8c554725dc991a694d1b5e1e", "message": "update OsmData filter to include special case for merged datasets"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/30478faaa48761f2b0dee36b921ad69974358a8e", "message": "correct spelling for aggregate function number_of_submissions"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/10d067c22599b88a117de970ed4df6e9ca9ef7b5", "message": "test csv export for merged datasets"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/2bbd4b2284dc0ffecd92271b7c1237f4629796ef", "message": "Return data instances for a merged dataset"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/45e1785a2f3c1cc0836c9813022a0b5bf4c990d5", "message": "set number of submissions in on merged dataset creation"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/fb980889f50e7d2eeb14ac581301a4eaa11da687", "message": "return correct count for num_of_submissions for merged datasets at the forms endpoint"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/0be11f54c2c199c11b1202f20dba387814409210", "message": "refactor tests"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/ca87cb631a7f4e2f043d4024e22d5af0813c6b69", "message": "return appropriate data for a merged dataset"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/95c0e67ec7d7521d1f0701e0e8a23a9a1d558cdd", "message": "return appropriate data for a merged dataset"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/f2876c609cee11ece02fb592f717062c3991a27e", "message": "add num_of_submissions at the merged dataset endpoint"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/7d334fd539a68a397574cf1a8067c7237453ebf0", "message": "remoove unnecessary test"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/965c94a9b200daf30273391c0e8004b557d8ece7", "message": "Revert \"In progress: include num_of_submissions in merged datasets form json\"\n\nThis reverts commit 5e26c0c07fcf654c588440ebf021e38c76def6aa."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/4cba41579b9c1e455a1ba82599df219e638639d7", "message": "check is_merged_dataset in /forms list endpoint"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/43575011d6bd511482eb858b10834eae33146f88", "message": "refactor merged_xform_serializer"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/55191fed26f3a9052e1592f22e00b847bd7e8db2", "message": "add is_merged field to XForm model to show forms that are as a result of a merged dataset"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/48b72ba29e7aeb049cf9335f86ef987cc333a40b", "message": "introduce pylint config file .pylintrc"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/70fec09761afc9a5ba13bde6598a7ae3d99c315a", "message": "Set xform permissions, merged dataset should also appear in the forms endpoint"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/c2c5a26afa368abd36821a10b8f431fb17f3d339", "message": "add MergedXForm to set_api_permissions_for_user"}], "pull_requests": [{"url": "https://api.github.com/repos/onaio/onadata/pulls/1214", "title": "Attachments count fix", "body": "- Fix #1210  by using a distinct count of distinct media names without necessarily selecting greater than count.\r\n- Fix #1211", "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/1204", "title": "[DNM] Require auth default for new users", "body": "", "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/989", "title": "[DNM] XForm version limits", "body": "Fixes #982 \r\n\r\nWe probably should not merge this until the form builder is generating valid versions.", "author_association": "OWNER"}], "issue_comments": [{"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29066414", "body": "Implemented with #18\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29066414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29131842", "body": "@pld I think this is ready now\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29131842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29463814", "body": "@pld note that export of notes is not implemented yet, not as straight forward I had initially thought.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29463814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29547710", "body": "@pld made changes, please have a look\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29547710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29594914", "body": "@pld exports are also covered in this pull request, a conversation with @larryweya made this way simler to implement 1fd1a00\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29594914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29604574", "body": "The documentation is built from source comments. I will check this when I\nget back home.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29604574/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29696234", "body": "The issue I have with row updating is how to consistently do it for records that have groups, repeats which usually result in dynamic fields depending on position, one likely option is to replace entire records and this would rather be done periodically rather than on individual submission.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29696234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31111234", "body": "@pld Seems ok to me, nothing that would conflict with the changes we have made so far, you can go ahead and merge.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31111234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31112370", "body": "I think we need to reconsider the issue about prefixing commits with our initials - it is redundant, Someone can always get the info using git log, fancier stuff on git log can be done through git aliases. \nI was looking into having a way to automatically have my prefix added automatically and came across http://ilee.co.uk/git-commit-message-format/, have a look at the image on the second comment under comments section.\nI should say, it bothers me having to type the initials for some reason.\nTagging @larryweya @pld @mberg \n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31112370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31113570", "body": "In the context of paring, I would understand that. but in the case where\nthere is no paring ...\n\nOn Mon, Dec 23, 2013 at 1:53 PM, Peter Lubell-Doughtie <\nnotifications@github.com> wrote:\n\n> The reasoning behind the initials over just looking at the owner is for\n> pairing and switching accounts, personally I like having explicit ownership\n> over commits and code changes, certainly git blame gives you most of that\n> already, this just steps it up a bit.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/onaio/onadata/pull/54#issuecomment-31113260\n> .\n\n## \n\nRegards,\n\nUkang'a\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31113570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31116152", "body": "In ~/.gitconfig\n\n``` bash\n[alias]\n    m = \"!f() { git commit -m \\\"UK: $1\\\"; }; f\"\n```\n\nthen\n\n``` bash\ngit m \"Initial commit\"\n```\n\nwill append your initials in this case for me `UK`, to the message resulting in `UK: Intial commit`\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31116152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31123007", "body": "@pld this is green, you can have a look, we may need to have this in soon, for some pending migrations for WHO.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31123007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31139140", "body": "deployed.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31139140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31478902", "body": "@pld I think I have set my mind on subtrees, but this is only applied on deployment have a look at https://github.com/onaio/kobocat-deploy/blob/master/fabfile.py#L55. That way, there will be no need to ever have the code in the core repo. I suppose git submodule that exists only on the server as well would work as well. Though this does mean if someone means to have this specific codebase in their own dev environment they will have to run the commands below and make sure not to commit the code in the repository.\n\n``` bash\n$ git remote add deploy https://github.com/onaio/kobocat-deploy.git\n$ git fetch deploy\n$ git read-tree --prefix=kobocat -i deploy/master\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31478902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31479071", "body": "I do still feel there is a better way to do this, @pld, @larryweya are very welcome.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31479071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32074780", "body": "deprecated by #91\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32074780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32178945", "body": "Note sure what purpose it serves, :+1: on removing it.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32178945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32190572", "body": "#100 implements the path `https://ona.io/api/v1/forms/USERNAME/FORMID/enketo` to return\n\n``` json\n {\"enketo_url\": \"https://h6ic6.enketo.org/webform\"}\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32190572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32205959", "body": "rebased, should be ok for merging if green.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32205959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32206137", "body": "closed by #100\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32206137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32365169", "body": "closed by #101\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32365169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32797330", "body": "I use https://github.com/ukanga/duplicity-backup, postgres backups added by the commit https://github.com/ukanga/duplicity-backup/commit/5d275d8ca5eaf74b9b9e74bb5c5126d7640a75c0. Already deployed to ona.io and cron job updated.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32797330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/33010743", "body": "For an existing database we need this:\n\n```\npsql -U onadata -h 127.0.0.1 <<< \"CREATE EXTENSION IF NOT EXISTS postgis;\"\n```\n\nOtherwise, I think it looks good, I will merge it in.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/33010743/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/33559299", "body": "We need to remongo, I have started the process should take a while but that does resolve the issue for the moment.\n\n```\npython manage.py sync_mongo -r -a\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/33559299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/33710523", "body": ":+1: cool to have this test.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/33710523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/33715018", "body": "ODK Briefcase only deals with the xform and the submissions. There is no mechanism for briefcase, to download the xls file, and no way yet to add the xls file without regenerating the xform xml, may be as a media support document but independent of briefcase.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/33715018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/34948351", "body": "I think this has to do with the client that submitted the records. We actually do handle this kind of submission, but we never do modify the incoming submission. Not sure what more we can do.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/34948351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/36973184", "body": "I think Oauth plays this role, the users just have to authorize your application to access their account and we do have oauth2 implemented for api access.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/36973184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/37909810", "body": "+1 on language selector\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/37909810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/37911586", "body": "This applies to all links once a user logs in.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/37911586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38020661", "body": "maybe catch the exception and retry export? record it if retries fails?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38020661/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38136136", "body": "@pld could you make the forms in  the https://ona.io/examples/ public so that they show up if someone clicks on the link provided in the same vicinity as tutorial.xls\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38136136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/40652181", "body": "closes #242 \n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/40652181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/40702531", "body": "colses #242\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/40702531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41252073", "body": "duplicate of #253, closed by https://github.com/onaio/onadata/commit/bdb1d27688bb08782c6cea26867b3153ac652cda\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41252073/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41562568", "body": "This is not reproducible. For me I only get blank xls file when i migrated a form using odk briefcase, which means I did not upload the xlsform in the first place.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41562568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41648245", "body": "this should now be possible with the `.csv` format on endpoints e.g `api/v1/data/{username}/{dataset-id}.csv`, #254 addressed this.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41648245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41648419", "body": "I think this is resolved now, `curl https://ona.io/api/v1/orgs` returns 401 now.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41648419/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/42881067", "body": "I think this has already been resolved, cannot replicate it.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/42881067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/42951135", "body": "Seems like POST and PUT wiith django restframework for updates expects a full update, and PATCH for partial updates. The result is that PUT updates, end up overwriting existing fields to empty when not omitted from the post/put data.\n@pld Should we make the necessary changes to support partial updates if someone makes use of PUT or POST without supplying all fields? Consider, the existing behaviour is at par with rest services paradigm, i.e partial updates only through PATCH.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/42951135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/42968917", "body": "this should be checked, do not close. the are cases where i made changes that impact the partial updates.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/42968917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43303766", "body": "You added the Digest authentication in the wrong place, it should part of DEFAULT_AUTHENTICATION_CLASSES.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43303766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43315935", "body": "The package you are using https://github.com/juanriaza/django-rest-framework-digestauth authenticates against the token key in this case instead of a users password we have to use their token. I have tested that and that works.\nMoving on forward we could make use of django_digest which we are already doing, in this case we have to build our on package that makes use of django digest and that will allow us to use username and password.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43315935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43316542", "body": "I deally we need the three lines https://github.com/onaio/onadata/blob/master/onadata/apps/logger/views.py#L170-L172 to make use of django_digest. I also noticed digest seems to work only if we have digest authentication enabled.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43316542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43316636", "body": "Actually it works if the digest authentication appears first before the other methods.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43316636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43316805", "body": "I think I will stand with my earlier comment, only digest will need to be enabled as it seems to block out the other methods.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43316805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43731791", "body": "I decided to use `instance.submitted_by` since `instance.user` has implications in many other places including determining during submission linking it with an xform.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43731791/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43746636", "body": "If you look at the [user definition on the model](https://github.com/onaio/onadata/blob/master/onadata/apps/logger/models/instance.py#L90) you will notice we have the related name `instances` this refers to all submissions for the owner of the form.\nAlso, the way we determine that a particular submission belongs to a specific user is through the combination of the `id_string` which is parsed from the xml and and the `owner` of the form, [_set_form](https://github.com/onaio/onadata/blob/master/onadata/apps/logger/models/instance.py#L189) then links the submission to a specific `XForm` object.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43746636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43855843", "body": "This is most likely due to the form not being fully downloaded on the client application, one thing to try is to download the forms again or delete the forms, do a fresh upload and download.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43855843/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/44126844", "body": "I have started work on this [270-create-default-roles-permissions](https://github.com/onaio/onadata/tree/270-create-default-roles-permissions), might need some eyes on it. I have decide to go with class that contains the necessary permissions for each role. currently I have the initial work for `ManagerRole`. I plan to implement this step by step until it makes some kind of sense. There is no clear cut way of implementing roles and I hope this comes close to what we want.\nSee the [diff](https://github.com/onaio/onadata/compare/270-create-default-roles-permissions)\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/44126844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/44160398", "body": "I don't think so yet, but I will be using Groups for this. One thing that is becoming quite clear is that this is helping us in implementing object permissions.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/44160398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/44926457", "body": "Should be at most 50MB, I just checked the server config and noticed we have set this up on http server context and not on https server context, I have made the changes and reloaded.\n\n@cagulas please try again, if the issue still persists please re-open the issue.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/44926457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45320649", "body": "There is no end point for this in the api, we will need one.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45320649/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45321249", "body": "how can a project be \"closed\" (no submissions can be added)?\n\nDo you mean a form or a project? You can close a form, there is no functionality for closing a project. Do we need to close a project or simply archive it (which is not also available)?\n\nIf it is closing a form, you simply need to set the `downloadable` attribute of the form to `false`, and no new submissions will be accepted. This can be done through the `/api/v1/forms/form_id` `api` endpoint using a `PUT/PATCH` method.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45321249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45340938", "body": "how can a form be \"public\", i.e. accessible to users without a login?\nFor the form to be public `shared` which is displayed as `public` needs to be `true`. So the `PUT/PATCH` `shared=true`.\nFor form data the value to change is `shared_data` which is displayed as `public_data`.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45340938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45341037", "body": "how can projects be shared with individual users and with different permission levels?\nThis is work in progress, should be coovered when Naivasha milestone is complete I think.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45341037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45354814", "body": "There's currently no privacy setting on projects, these can be added pretty easily.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45354814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45589953", "body": "Private - no one but you can add records\n- This is supported but the user account has to have `require_auth=true`, more fine tuning required\n\nClosed - inactive, no submissions whatsoever can be added\n- This is supported already, the form needs to have `downloadable=false`\n\nOpen - anybody with link can add records (no Ona account needed)\n- This is currently the default for submissions, as long as someone is pointing to the correct account and has the a form that is not inactive and the owner of the form does not require_auth on their account.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45589953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45846054", "body": "Should it be manager role or Owner role?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45846054/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45846262", "body": "I suppose this should be owner permissions too.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45846262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45983355", "body": "I am not sure why I did not go with Groups, we could eventually go that way I think. The current class allowed me to better understand what we needed to have in place. Thinking of groups, I have a feeling we may end up creating severeal groups per object to cover all the roles, but may be not. We'll eventually revisit this I think.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45983355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46020456", "body": "Do we need to have a default project? what name will it be? Do we need to migrate all existing forms to a default project?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46020456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46036749", "body": "Roles are simply permissions, at any given time you are checking if someone has specific set of permissions and depending on the action that someone is doing. You could either be performing a data entry role or an editor role or an owner role. This is especially the case where one role is a subset of the previous one, which is the case here.\nThe way to check which role a particular person has is to check all roles from the highest to the lowest, and the first role that someone has the permissions for means that is their role.\nIts redundant to make a user an owner then an editor, does it mean they should no longer be an owner? If that is the case, then the ideal way to have this take effect properly is to remove all the permissions someone has on the object, and then assign them the new ones. I'll make the change for this approach.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46036749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46057430", "body": "An owner has all the permissions of an editor, hence an owner is an editor if you check for editor role on a user with owner role. A specific test that reassigning owner to an editor, they will no longer have owner role is on the commit db89f93.\n\nSeems 01ee357 fixed the test, the order must be ok somehow.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46057430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46081807", "body": "`require_auth` currently is account specific, it's not form specific.\n\n`downloadable=false` submissions are not accepted, a form is inactive exception is usually thrown. See [onadata/apps/logger/views.py#L274](https://github.com/onaio/onadata/blob/master/onadata/apps/logger/views.py#L274) and [onadata/apps/logger/models/instance.py#L247](https://github.com/onaio/onadata/blob/master/onadata/apps/logger/models/instance.py#L247)\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46081807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46110972", "body": "That is essentially making all the user profiles public even if the email is not public. Not sure about that, do we need to put language about this on our terms of service?\n\nPersonally not particularly comfortable with this.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46110972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46111035", "body": "Do we want to see their permissions or their roles?  Would showing their role be ideal to what they can do?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46111035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46117593", "body": "That is not the case [this](https://github.com/onaio/onadata/pull/333/files#diff-3d65ce77835a2f07194046eb827e8fe1R177) ensures other project associations are removed first.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46117593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46118244", "body": "It made a lot of sense with regards to formhub when I started this. This does raise the question what do we need to determine the list that is returned?. How do we determine which list to return, for a specific user, for a specific organization? We would need documentation of api endpoints to have a clear picture of what needs to be done.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46118244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46422826", "body": "Do we really need to re-implement this on the '/projects' endpoint when we have it working on `/forms` endpoint?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46422826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46423385", "body": "For me the endpoint `/api/v1/projects/{owner}/{pk}/forms` serves a different purpose than `/api/v1/forms` endpoint.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46423385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46428634", "body": "@dorey this should be resolved now, I applied missing permission to existing users and their objects using a management command `set_api_permissions` brought in by #345. Please try again and close the issue if it is resolved.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46428634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46439687", "body": "Which endpoint should we use to show the permissions for a specific user or list of users?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46439687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46442633", "body": "Which endpoint is the patch sent to?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46442633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46443113", "body": "/api/v1/forms/{owner}/{formid} or /api/v1/projects/{owner}/{pk}/forms?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46443113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46443448", "body": "That is the wrong endpoint, use /api/v1/forms/{owner}/{formid}. there is a pull request #352 with the docs updated.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46443448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46527112", "body": "I think the delayed update has to do with memcache.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46527112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46656203", "body": "closed by #355\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46656203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47322905", "body": "I started some documentation on api changes here https://github.com/onaio/onadata/blob/remove-owner-from-api-endpoints/docs/api.md.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47322905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47640466", "body": "For object permissions we use `guardian.shortcuts.get_objects_for_user`, when a user is a `super_user` it returns all objects, analogous to a super admin with django admin access. And I agree with this approach, a super user has access to all objects by default. One way to counteract this is to ensure that a super user has no access to the api.\nSo the behaviour exhibited is valid in this respect.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47640466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47675822", "body": "If a user has access view permissions the form it will be returned. We are\nonly checking permissions for the form list.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47675822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47677011", "body": "We can and should add filters. These would be handled through query\nparameters.\nOn 1 Jul 2014 19:15, \"Peter Lubell-Doughtie\" notifications@github.com\nwrote:\n\n> I see, is there an endpoint we can add, or an option we can add, in order\n> to replicate the old functionality?\n> \n> I.e., only returning the forms specifically tied to a user. This is needed\n> so that we can check for forms without a project and migrate those users'\n> forms.\n> On Jul 1, 2014 12:07 PM, \"ukanga\" notifications@github.com wrote:\n> \n> > If a user has access view permissions the form it will be returned. We\n> > are\n> > only checking permissions for the form list.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/onaio/onadata/issues/370#issuecomment-47675822.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/issues/370#issuecomment-47676790.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47677011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/onaio/onadata/comments/5723450", "body": "@pld i believe this is one area where form-shared/public data-shared and active form have functionality removed.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/comments/5723450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/comments/6345630", "body": "this should be added down below under DEFAULT_AUTHENTICATION_CLASSES.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/comments/6345630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7874940", "body": "This are public forms, we can have quite a huge list for someone who may just be exploring, considering the number of public forms in formhub I thot it best just to limit it to 10. I think there is an end point for public forms which should not have a limit.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7874940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7922342", "body": "Looking at /data it returns a list of data urls you have access to e.g\n\n``` json\n   {\n       \"dhis2form\": \"https://formhub.org/api/v1/data/modilabs/4240\",\n       \"exp_one\": \"https://formhub.org/api/v1/data/modilabs/13789\",\n       \"userone\": \"https://formhub.org/api/v1/data/modilabs/10417\",\n   }\n```\n\nhence it gives you discoverability options of data. The api behaves the same way for most end points hence at the time it made sense to provide a list of publicly available forms for anon users. I would echo access to the api require an authenticated user hence there will be no need for this.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7922342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8017684", "body": "I first shifted the form to a separate file as suggested earlier, then when I started using the NoteSerializer I no longer had the need to use the form. So this should be removed, I will do that.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8017684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8156186", "body": "Export.SAV_EXPORT is not implemented yet, main reason the new export does not have a flat csv export - csv export to a single file - and the old method has some faults. I had asked @larryweya for some pointers on adding this functionality into the new export. I believe implementing the missing piece in the csv esport will better serve us hence the sav export should use the new functionality when implemented. Currently the repeats go into separate sav files hence the SAV_ZIP_EXPORT.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8156186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8548755", "body": "check_and_set_form_by_id_string does return a 404 exception if the form does not exist, also if it returns false then it does mean that person does not have permission. I do agree on the function get_permitted_xform().\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8548755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8548820", "body": "I actually use scipy only for mode, and the debate currently is whether to just pick the function https://github.com/scipy/scipy/blob/master/scipy/stats/stats.py#L568 from here which seems to be relying only on numpy.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8548820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8605694", "body": "Mainly because I want to maintain `KoBoCAT` and `OnaData` in that case as opposed to having it kobocat and onadata, I wanted to reuse `SITE_NAME`, and not have a different settings variable for this.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8605694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8605697", "body": "`SITE_ID` is always defined in settings, and the domain and name will be set via django admin. `SITE_ID` can always be changed in in `local_settings.py`, in a multi site environment where each site have their own settings file, but share the same database, then `SITE_ID = 2`, might have a different name and domain all together using the same codebase and database. One reason I have this piece of code after `local_settings.py` import. Someone can always add the lines in their custom settings file with real paths that may not be the same as the `site_name`, the whole idea was to try to make this a little bit generic and especially for those using `formhub.settings`\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8605697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8605705", "body": "I like the idea, my intentions were to take this path but I am not sure how to go about it. For one, this has to be a deployment issue, how do we link it at deploy time, without including it in the core repo. How do we only have the folder in our development folder, without pushing it to the core repo and have it be in place at the time of deployment. I will need assist on this specific issue.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8605705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8606148", "body": "We need to consider that there will be more than templates, currently we have need for templates and static files. In future we could have views, context processors and more python modules.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8606148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8937424", "body": "`pk` always comes in as a string i.e `pk = \"323\"` or `pk=\"tutorial\"`, when we are given an `int` value, we need to use `pk`, if it is a string then we can use `id_string` as a last resort.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8937424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8937686", "body": "Actually django db does throw the same ValueError, I could do:\n\n``` python\n  def get_object(self, queryset=None):\n        try:\n            return super(XFormViewSet, self).get_object(queryset)\n        except ValueError:\n            owner, pk = self.lookup_fields\n            self.lookup_fields = ('owner', 'id_string')\n            self.kwargs['id_string'] = self.kwargs[pk]\n        return super(XFormViewSet, self).get_object(queryset)\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8937686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8939514", "body": " `os.path.splitext` has the `ext` including the dot character which `response_with_mimetype_and_name` does not expect.\n\n``` python\nipdb> path, ext = os.path.splitext(u'tutorial.csv')\nipdb> ext\nu'.csv'\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8939514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9005926", "body": "This is resolved by https://github.com/onaio/onadata/commit/10e688504518d68560415b4d7c3d8bd26a254a81\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9005926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9056054", "body": ":+1: cool, you remembered.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9056054/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9056472", "body": "Is there a specific reason why altitude and precision could not be added at this particular time? I tend to see a lot records with the 4 values, does it mean we are likely to loose this information on migration?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9056472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9072656", "body": "I got a valuer Error when deploying on stage.ona.io, I suspect it has to do with this line.\n\n``` python\nError in migration: odk_logger:0041_convert_lng_lat_to_points\nValueError: need more than 3 values to unpack\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9072656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/12089240", "body": "the only time we expose first_name and last_name is in /users endpoint, which we may likely take down and live /profiles only, I never wanted to have a blank first_name or first_name which has always been the case. Ideally we would use a custom user model here, but these will be tricky to introduce it now - may be when we do a full refactor.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/12089240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13700914", "body": "put will not work with partial updates, and we have several tests in test_user_permissions.py that are using put. maybe change the name?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13700914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13700955", "body": "XFormPermissions does make a lot more sense.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13700955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13760396", "body": "a form id is always unique unless you are using an id string which is allowable here. Also, what endpoint should we use to list all forms for a specific user? Someone can always make a request to different user other than themselves.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13760396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13760656", "body": "will just need to update docs only.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13760656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13764254", "body": "With this I would really want to follow a specific order, ideally starting from `readonly` to `owner` being last. Otherwise it will always fail when the previous permission was of a superset of the current one.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13764254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13786454", "body": "This particular endpoint `/projects/../forms` does not have a `formid` keyword so we should not expect it in `kwargs` hence should not execute.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13786454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13786468", "body": "I think I responded to this in another pull request, this construct is prevalent in most api endpoints.\nWe can always change this but this means almost all other endpoints have to change as well, for me its a none issue.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13786468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13786549", "body": "To assign a form to a project we only need the form's `formid`, the check is done [here](https://github.com/onaio/onadata/pull/333/files#diff-3d65ce77835a2f07194046eb827e8fe1R205). `publish_form` does the rest for checks if we are uploading an xlsform, `publish_form` does throw some exceptions if things are not as expected.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13786549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13906362", "body": "yes, but I will change it to `settings.ANONYMOUS_USER_ID`\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13906362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13906381", "body": "ok\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13906381/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13906477", "body": "actually we have this setting in `onadata/settings/common.py`\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13906477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14288002", "body": "I guess we do not really need it here, it came up because we expect to check for view permissions when someone does a  `GET` or `HEAD` or `OPTIONS` request.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14288002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/16528587", "body": "Is this alice or bob? do they have permissions to add a form to alice profile?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/16528587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/16528633", "body": "We should return the new xform data, use XFormSerializer.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/16528633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/16528709", "body": "We could use a CloneXFormSerializer to validate posted data, the clone functionality could be added in the serializer's save method.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/16528709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17673042", "body": "We may have more permissions in an object than we would have in the defined role, we cannot guarantee that the permissions returned will be a subset of the list hence the better check is to ensure all permission defined in the role exist in the the passed in permissions.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17673042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17673666", "body": "It does not work, Dennis had the `issubset` implementation which failed. Consider a `a = [1, 4, 5, 7]` and `b = [3, 4, 1, 5, 7, 9]`, if `a` is the permissions for the role, and `b` are the list of object permissions passed in for the check, we need to ensure that `b` has all `a` permissions.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17673666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17674288", "body": "In that case then it seems we checked with the wrong list.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17674288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17674525", "body": "Does it mean that someone can login with a blank password with an org username?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17674525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17684312", "body": "It wasn't being set, `RegistrationProfile` handles sending email and it was not being used in the api for either users/profiles or organizations.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17684312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17773124", "body": "@pld should we assign orgs permissions? If we do not, this may remove the need for the filter at this place. It also means, there may be no need for an org api key, just acts as a place holder.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17773124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17806435", "body": "It flows to the next line, seemed not that readable, trying to avoid that.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17806435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17806684", "body": "Its a queryset, throws\n\n``` python\nAssertionError: Negative indexing is not supported\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17806684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17810570", "body": "some docs added. should be good to go now if it passes.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17810570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17973398", "body": "``` python\nXForm.objects.filter(pk__in=instance.projectxform_set.exclude(xform__shared=instance.shared).values_list('xform', flat=True)).update(shared=instance.shared)\n```\n\ncould get you there\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17973398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19276289", "body": "could we simply use the `username` here? the `uid` can always be generated. do we even need the username or `uid` as input?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19276289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19276683", "body": "Should we be sending the email here? I expected that a custom domain or url format could be passed in to provide the link to send the email. We should be accepting the email to send a reset link to.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19276683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19590497", "body": "You already have attachment object in `self.attachment` no need for another query. You should remove this.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19590497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19590502", "body": "You already have attachment object in `obj` no need for another query.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19590502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19655965", "body": "lines 977 to 986 I think could be re-factored to a `records = cleanup_reacords(instances)` or something. same applies to lines 950 to 965.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19655965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19059389", "body": "could this be renamed more appropriately? this seems more like `get_organization_projects_with_default_role` to me.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19059389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20281460", "body": "I think line 447 to 456 could be fewer lines\n\n``` python\n\nfrom onadata.libs.permissions import ROLES\n\nROLES.get(role).add(user, form)\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20281460/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "moshthepitt": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/1211", "title": "Look into how media counts on instance objects are handled", "body": "onadata media count is based on length of the media xpaths list instead of counting files by filenames which is a problem because you may only receive the same file many times instead of all the files", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1210", "title": "media_all_received=False when media received is greater than media expected", "body": "Instance.objects.filter(media_count__gt=F('total_media'), media_all_received=False, date_created__gte=n).exists()  ==> True right now\r\n\r\nHow should we handle this case?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1201", "title": "Handle exceptions in celery tasks", "body": "Add a way to better handle exceptions in celery tasks that:\r\n\r\n- report the error via sentry\r\n- raise it", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1201/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1198", "title": "Add management command to reapply form permissions", "body": "", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1183", "title": "Arabic characters not being exported correctly", "body": "This is a sample JSON export from here https://ona.io/acme/11034/255820#/overview\r\n\r\nNote that the Arabic characters are messed up in the export.\r\n\r\n```json\r\n\r\n[{\"_notes\": [], \"_media_all_received\": true, \"_bamboo_dataset_id\": \"\", \"_tags\": [], \"section1_1/activity_subtype\": \"carpet_weaving\", \"_xform_id_string\": \"attendance_form_wpe_v3\", \"section1_1/gov_activity\": \"bekaa\", \"meta/instanceID\": \"uuid:dbf0f857-ae2d-469c-bef1-de9306e761a3\", \"_duration\": 53.0, \"section1_1/area_activity\": \"hermel_area\", \"end\": \"2017-11-21T17:01:03.000+03:00\", \"section1_1/activity_type\": \"skills_building\", \"start\": \"2017-11-21T17:00:10.000+03:00\", \"_geolocation\": [null, null], \"_edited\": false, \"_status\": \"submitted_via_web\", \"today\": \"2017-11-21\", \"section1_1/caza_activity\": \"hermel\", \"_uuid\": \"dbf0f857-ae2d-469c-bef1-de9306e761a3\", \"section1_1/activity_date\": \"2017-11-29\", \"_submitted_by\": \"onasupport\", \"attendees\": [{\"attendees/attendee_code\": \"\\u0627\\u0645\\u0633\\u062d \\u0627\\u0644\\u0631\\u0645\\u0632\", \"attendees/qrcode_availability\": \"yes\"}, {\"attendees/correct_code\": \"qrCode_key\", \"attendees/search_code/search_text\": \"\\u062a\\u0623\\u0643\\u062f \\u0623\\u0646\\u0647 \\u0630\\u0627\\u062a \\u0627\\u0644\\u0631\\u0642\\u0645 \\u0627\\u0644\\u0630\\u064a \\u0625\\u0633\\u062a\\u064f\\u0639\\u0645\\u0644 \\u0639\\u0646\\u062f \\u0627\\u0644\\u062a\\u0633\\u062c\\u064a\\u0644\", \"attendees/search_code/region\": \"hermel\", \"attendees/qrcode_availability\": \"no_home\", \"attendees/search_code/search_type\": \"contains\"}], \"_media_count\": 0, \"formhub/uuid\": \"5ea801cbb3b64424a4eba86f29833e04\", \"_total_media\": 0, \"_xform_id\": 255820, \"_submission_time\": \"2017-11-21T14:04:20\", \"_version\": \"3\", \"_attachments\": [], \"deviceid\": \"enketo.ona.io:dCuNCs1cJwclD0Hk\", \"_id\": 22183058}]\r\n\r\n```\r\n\r\nPlan to fix:\r\n\r\nModify the export function to correctly handle these characters.", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1179", "title": "Add 'deleted_by' Field", "body": "This is so that we can know which user deleted a:\r\n\r\n1. Form\r\n1. Submission\r\n1. Project\r\n\r\nSo the field would be added to the above models.", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1166", "title": "Filtering with media_all_received does not work on encrypted forms data", "body": "https://api.ona.io/api/v1/data/249826?media_all_received=true\r\n\r\nIt seems that for encrypted forms, trying to filter data using media_all_received does not work.", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1140", "title": "api/v1/profiles - OperationalError: canceling statement due to conflict with recovery", "body": "https://sentry.onalabs.org/ona/onadata/issues/173/\n\n```\nOperationalError: canceling statement due to conflict with recovery\nDETAIL:  User query might have needed to see row versions that must be removed.\n\n(17 additional frame(s) were not displayed)\n...\n  File \"rest_framework/serializers.py\", line 501, in to_representation\n    ret[field.field_name] = field.to_representation(attribute)\n  File \"rest_framework/fields.py\", line 1754, in to_representation\n    return method(value)\n  File \"pricing/serializer.py\", line 123, in get_user_monthly_submissions\n    count_user_monthly_submission)\n  File \"pricing/serializer.py\", line 50, in query_data\n    data = function(obj.user, **kwargs)\n  File \"pricing/query.py\", line 44, in count_user_monthly_submission\n    for xform_id in queryset\n\nOperationalError: canceling statement due to conflict with recovery\nDETAIL:  User query might have needed to see row versions that must be removed.\n\n```", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1138", "title": "Add webhook trigger by submission deletion", "body": "Send a webhook when a submission is deleted", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1135", "title": "Move to Python 3", "body": "Refactor/rewrite onadata as necessary to make it work with Python 3.  The upcoming version of Django - django 2.0 is Python3 only.", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1131", "title": "Attach OSM data to submission before sending webhook", "body": "The webhook listener may want to use the OSM data and so we need to ensure it is attached to the submission before calling the webhook.", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1131/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1129", "title": "Implement rapidpro-python library to communicate with RapidPro", "body": "https://github.com/rapidpro/rapidpro-python", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1126", "title": "Investigate more performant query to get users that belong to a group", "body": "Could we avoid using an sql join?", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1110", "title": "Add Instance model fields as filters for exports api endpoint", "body": "", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1101", "title": "Investigate xforms-group and potentially implement", "body": "```xml\r\n<?xml version='1.0' encoding='UTF-8' ?>\r\n<xforms xmlns=\"http://openrosa.org/xforms/xformsList\">\r\n  <xform>\r\n    <formID>mydomain.org:formId</id>\r\n    <name>Form with zero or more additional files</name>\r\n    <version>1.1</version>\r\n    <hash>md5:c28fc778a9291672badee04ac880a05d</hash>\r\n    <descriptionText>A possibly very long description of the form</descriptionText>\r\n    <downloadUrl>http://myhost.com/app/path/getMe/formIdA</downloadUrl>\r\n    <manifestUrl>http://myothehost.com/app/path/getOtherStuff?formId=formIdA</namifestUrl>\r\n  </xform>\r\n  <xform>\r\n    <formID>http://mydomain.org/uniqueFormXmlns</id>\r\n    <name>Form without additional files</name>\r\n    <version>v50 alpha</version>\r\n    <hash>md5:c28fc778a9291672badee04ac770a05d</hash>\r\n    <descriptionUrl>http://mysecondhost.com/a/description/getMe@formId=uniqueKey</descriptionUrl>\r\n    <downloadUrl>http://mysecondhost.com/a/different/path/getMe@formId=uniqueKey</downloadUrl>\r\n  </xform>\r\n  <xforms-group>\r\n     <groupID>someId</groupID>\r\n     <name>Short name of grouping</name>\r\n     <listUrl>http://whateverhost.com/other/path/forDownload?group=fido</listUrl>\r\n     <descriptionText>Longer description of what is here</descriptionText>\r\n     <descriptionUrl>http://morehost.com/description/link</descriptionUrl>\r\n  </xforms-group>\r\n</xforms>\r\n```\r\n\r\nLink:  https://bitbucket.org/javarosa/javarosa/wiki/FormListAPI", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1078", "title": "Duplicated django-debug-toolbar in .pip files", "body": "Remove django-debug-toolbar from either base.pip or dev.pip so that the make command does not fail because of this.", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/onaio/onadata/commits/1ff39941c83e3984058aadc526b6fe5dd3e3f51a", "message": "explicity check that a TransactionManagementError is not raised"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/724c4e17e1075fe139c2bb18cccf9b4bf965789c", "message": "code cleanup"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/4bac76fab6de520870a0d61b61b425bc4e2caad0", "message": "Ensure that save_osm_data does not raise TransactionManagementError\n\nUse nexted transaction.atomic() blocks when doing new queries inside\nsave_osm_data so that a TransactionManagementError is not raised, especially\nin cases where we catch an IntegrrityError"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/ec88ffe2d070177b2201ea67a5052fee7a57da3f", "message": "UK/KJ: Add test_set_project_perms_to_xform_async"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/f8ca6462daa936427557acc6a7ab1ef4e9d37e06", "message": "UK/KJ: retry set_project_perms_to_xform_async when DoesNotExist is raised"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/0821fc57696f340e270f6db9afc2595329dbfad6", "message": "UK/KJ: use_master when running set_project_perms_to_xform_async"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/b481b12417811e158694440e54b703c2803a9c0d", "message": "UK|KEJ: Replace project.prefetch with project.objects in tests\n\n- No need to use the prefetch in tests\n- refresh_from_db() does not reload prefetches"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/065d44bfb9f79db52d3d4e3c1b4c175ea16bfaf3", "message": "replace reload() with refresh_from_db()"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/ed4f6ab380990414308ea7661d97b5549b18144b", "message": "Get project object correctly"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/6070f5613f216c640d2b006aa46209c47199c16b", "message": "Use native Django function refresh_from_db() instead of custom reload()"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/44d6afb3b0ebbcee67d5c3c293a25be670ec97b6", "message": "Code formatting fixes (#1145)"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/38c97930d79800e9a91810c2ad848e4b2dc5e651", "message": "Correct form_list_xml fixture"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/b82c07a2e0d1f6903d4b813f808e106d7d5f3ea0", "message": "Correct hash ReadOnlyField"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/97581c313af9c854fd14f06fde18239c8698d829", "message": "Test that the md5 value of the hash is as expected"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/b3a82cd7f165109a6ce9a39cda2d87b711f2f65e", "message": "increase hash field length"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/6f6b3c5430d89fcc97a923fcd81a206db2f963eb", "message": "Store hash function in XForm hash field"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/626d10c6549625e937fe79a6787ee3931827ef95", "message": "- Make sure new hash field is used in XFormSerializer and XFormListViewSet\n- Only re-save hash field when title changes XML\n- Test that hash changes correctly during a partial update"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/03d20537e83569f53f6acbfb97423fa16fbf20bb", "message": "Remove unused imports"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/5ab3dd197faf0e1af11e05837fc84183ef18b6ed", "message": "Make sure that XForm hash is set when form is created, or updated\n\n- Set hash when form is created\n- Set hash when form XML changes\n- Set hash when XForm title changes\n- Refactor tests to adequately test hash creating and updating"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/b12ea564e97dc43906724727aba0bb99ca56932e", "message": "Only update hash when xml field changes"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/6f6f9ca0ed7f4bd74e890bc13c7aea44fb8e226b", "message": "Test that hash is created and updated successfully"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/15bbb9e3798703dc2ddb5915c7507726b7781e8c", "message": "Fix test"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/8eba71d15955cebf00b00247dd6e8b112dfc5b7d", "message": "Add new 'hash' field to XForm model\nThis avoids having to always recalcultate the form's hash.\n\nChange queryset on XFormListViewSet to only get the fields needed.\n\nFix: #1133"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/abd0219895d12089d1b0de153bebb77cde98ca62", "message": "Improve data endpoint documentation"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/8a99e67f1c236f4245fe5f96cf3fe4ae14e536a2", "message": "Ensure media_all_received uses the BooleanFilter\n\nmedia_all_received, being a NullBooleanField on the Instance model,\ndefaults to using NullBooleanFilter on the Instance Filterset.  This fix\nencures that the filter used is always BooleanFilter.\n\nThis helps avoid problems such as not being able to use \"true\"/\"false\" to\nfilter on this field."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/c7a528f818053887cf350f348d1c9abc12a099cf", "message": "Make tests clearer and easier to follow"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/bdbb9f162bb6357a62fa7c8d42ed04644fdcf020", "message": "Add media_all_received as a data filter parameter\n\nFix: #1105"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/10dbd7d9c0e73fa9468be40feb7d417d69947f40", "message": "Test get_choice_label to ensure it does not fail for non-string values"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/7275ef40234f6b9667ab6dfb0ace0c999d797242", "message": "Remove unused functions"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/3414185919a847e9f15bdc0191cf35390c71c0cc", "message": "Update documentation to include new data filters and add data filter test for\nthe status field."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/abcacef273ccca0137428f37b66e37adcb98ccf7", "message": "Add New Instance Model Filters\n\nAdd the following as data filters:\n\n- survey_type\n- user\n- submitted_by (mapped to user)\n- uuid\n- last_edited\n\nRe-write test to be more descriptive of what is being tested and how."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/23bb1355097671c5e431ed06585650f5936051d0", "message": "Add Instance Model Fields As Data Endpoints Filters\n\nAdd the ability to filter data endpoints using Instance model fields.\nDone through a django-filter FilterSet.  Implement filters for the\nfollowing fields:\n\n- version\n- date_created\n- date_modified\n- status\n\nFix: #1048"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/a98c787ae99b8a652d604ce530e66937f401ee5b", "message": "Fix test: test_md_csv_export to pass"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/a09d20f8fda7cb75526ac6a9e81ff0367ad5e277", "message": "Code cleanup"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/c98a16b90550c5ac62de64489833490dc95dccb5", "message": "Add back FormIsMergedDatasetError"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/28785570071274229fc1415cd7f886ed7c82cb8d", "message": "Make sure tests pass"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/cc77e05b1a0e9d767bfbddeb62d0777ca2faf59d", "message": "Recursively Find Media Elements On Instance Objects\n\nGo through all instance elements recursively to find and count\nmedia elements and use this to keep track of media attachments.\n\nDo this recursively to deal with cases of nested repeats of unknown depth."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/2ace4aac684d4d5c4009c85ee7a34c508e8308de", "message": "Make The New Instance Model Fields Available To InstanceHistory Objects"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/ff091b532f62608600329b3e143b2fde6d8f77d4", "message": "Ensure That Tests Pass\n\nChange fixtures and some tests to accommodate the new fields on the Instance\nmodel."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/1bc3b7a796e268bdddd307928f95d1f53c031440", "message": "Track Instance Media Attachments For Surveys With Repeats\n\nCheck if instance objects have repeats and check for media attachments in the\nrepeats to accurately track the instance's media attachments."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/a6846a6d31ee43c003e500f8d8a753dd86af4e81", "message": "Make Sure All Tests Pass\n\nMake sure that the csv_builer and logger_tools properly deal with the new fields on\nthe Instance model - so that their respective tests pass."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/92df14b83398ce996c8739af73ff2f00d35eacb8", "message": "Keep track of whether all attachments have been submitted\n\nFixes: #1049\n\nAdd new fields to the model instance to keep track of:\n\n- How many attachments, if any are expected in a submission\n- How many attachments have been actually received\n- Whether all attachments have been received"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/15dd554c6e1a544c9a4c8ac3c90a1978a34d61ff", "message": "Make The New Instance Model Fields Available To InstanceHistory Objects"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/addfbba8f71706f5ed81fadf67efb8c974458cf9", "message": "Ensure That Tests Pass\n\nChange fixtures and some tests to accommodate the new fields on the Instance\nmodel."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/7624bae2c20c8b757d3e07fe0b1d6b085e724e88", "message": "Track Instance Media Attachments For Surveys With Repeats\n\nCheck if instance objects have repeats and check for media attachments in the\nrepeats to accurately track the instance's media attachments."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/10f7d3c2f7d8ba1b89e4ebd5bbd71ab977a82c5c", "message": "Make Sure All Tests Pass\n\nMake sure that the csv_builer and logger_tools properly deal with the new fields on\nthe Instance model - so that their respective tests pass."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/ee1c83f16a1f8de01b2ced554b76ee175750e530", "message": "Keep track of whether all attachments have been submitted\n\nFixes: #1049\n\nAdd new fields to the model instance to keep track of:\n\n- How many attachments, if any are expected in a submission\n- How many attachments have been actually received\n- Whether all attachments have been received"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/e81eb5bcf6e26180a934d565a55df89850530661", "message": "Code cleanup"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/51420340b83460afab9c00421868d4016b5431e6", "message": "Code cleanup\n\nUse already existing data_dictionary.get_element()"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/d46c40aac9594915edb9056e972fd4618ab95266", "message": "Code cleanup"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/308701dc5e39126316ae0ce2c55b3167a6d5e096", "message": "Prevent SAV Exports From Failing When Choices Lists Have Duplicate Names\n\nPrevent the export builder from failing when data from a form with\nmultiple choices that have duplicate names by ignoring all but one of the\nchoices that have a duplicated names.\n\nFix: #983"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/9e964677d852916f7ae2ec212b7088ef11ec3587", "message": "Remove URL conf that was not needed"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "msschroeder": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/1209", "title": "Media file attachment has no download URL", "body": "Occurring on production\r\n\r\nExpected behavior:\r\nFor all media files received by the server, the download includes a URL for all records\r\n\r\nActual behavior:\r\nNot all media files received by the server have a download URL \r\n\r\nTo replicate:\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1060", "title": "Form builder forms can not be edited by other admins in org account", "body": "### Environment (local, stage, preview, production)\r\nAll\r\n\r\n### Expected behavior\r\nIn an org account, any admin should be able to edit a form previously developed by another individual in form builder as this is an option listed for all admins (see screen shot below). \r\n\r\n<img width=\"1076\" alt=\"screen_shot_2017-06-28_at_8_48_10_am\" src=\"https://user-images.githubusercontent.com/20777928/27622251-966c5336-5bde-11e7-9c89-6200c5b4ed77.png\">\r\n\r\n### Actual behavior\r\nIf another admin, who did not develop the form in form builder, clicks edit the form, they receive and error message (see screen shot below) and is unable to edit the form.\r\n\r\n<img width=\"373\" alt=\"screen shot 2017-06-27 at 9 17 16 am\" src=\"https://user-images.githubusercontent.com/20777928/27622291-d6921ebe-5bde-11e7-834f-007258332368.png\">\r\n\r\nThe work around would be to use XLSForm syntax form and replace the form. Everyone would have access to that.\r\n\r\n### Steps to reproduce the behavior\r\n- Have 1 admin in an org account create a form in form builder and publish the form\r\n- Have another org admin try to edit the form\r\n\r\nSample Form: https://ona.io/acme/916/216297\r\n### Implementation plan\r\n\r\n- \r\n- \r\n- \r\n\r\n### Blocking or related [onadata](https://github.com/onaio/onadata/) issues\r\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1037", "title": "Note field types are exporting in Excel/Googlesheets file types in repeat groups", "body": "What is occurring: Note field types are exporting in Excel/Googlesheet file types in repeat groups in XLSForms. Other file types are exporting as expected (i.e. CSV)\r\n\r\nWhat is expected: Note field types should not be exporting in the repeat groups for any file type\r\n\r\nTo replicate this issue: \r\nCreate a form with a repeat group and a note field within the group. \r\nExport the data with data collected.\r\n\r\nExample project:\r\nhttps://ona.io/onasupport/3571/209406", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MartijnR": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/1207", "title": "Improve performance of online-only webform views", "body": "Hi Ona,\r\n\r\nI wanted to provide 2 suggestions to make online-only views faster today (and even more so in the near future, due to some caching mechanism changes in Enketo to provide [more advanced support for dynamic external data](https://github.com/kobotoolbox/enketo-express/issues/906)):\r\n\r\n1. Let `<manifestUrl>` be empty in the`/formList` document if the form has no media/data. This avoids Enketo having to check a manifestUrl without content (saves about 500ms of a typical form load after the caching changes)\r\n\r\n2. Optimize response times of /formList and manifest requests, e.g. by aggressive caching and by supporting the formID query parameter in `/formList?formID=widgets` which is (an obscure) part of the OpenRosa Form Discovery Spec and Enketo has been including it for years.", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/802", "title": "hyperlink to media sometimes missing in table view", "body": "I used [this form](https://docs.google.com/spreadsheets/d/1xsASRcfsXvV6B43Hx8mojzg89ucp45ThEwB29QtWBrE/edit#gid=0) with **the latest** (emphasized, because until yesterday EE had some bugs with submitting media in the offline-capable views) Enketo Express and https://ona.io.\n\nThe issue is that the hyperlinks to media are sometimes not created. See below:\n\n<img width=\"412\" alt=\"screen shot 2015-12-08 at 2 43 45 pm\" src=\"https://cloud.githubusercontent.com/assets/627350/11669511/570a9196-9dba-11e5-9cfd-6596ea253e61.png\">\n\nThe media files do actually exist (verified when exporting media files as zip).\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/802/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/801", "title": "metadata \"username\" not populated", "body": "This is a consequence of using 'external authentication' that I hadn't thought of before. Not sure if it belongs in this repo but I think so. Enketo express would have no knowledge of the username if external authentication is used.\n\nA solution would be to set/maintain an `__enketo_meta_uid` cookie. See code here that populates this value in the form: https://github.com/enketo/enketo-core/blob/master/src/js/Form.js#L1477-L1478\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/780", "title": "Submissions and formList requests fail if auth provided when account does not require this.", "body": "I think I finally figured out why requests to /formList and submissions started failing on ona.io (only) in the last week or so.\n\nhttps://github.com/kobotoolbox/enketo-express/issues/248\nhttps://github.com/kobotoolbox/enketo-express/issues/257\n\nThe /formList failure results in this empty XML document:\n\n``` xml\n<xforms xmlns=\"http://openrosa.org/xforms/xformsList\"></xforms>\n```\n\nIt seems to be caused by sending account credentials (Basic or Digest, whatever ona.io requires) when the account does not (no longer) have the 'Requires Phone Authentication' setting enabled.\n\nThe desired behaviour would be to ignore credentials when they are sent (though Enketo shouldn't actually send them if a HEAD request does not respond with 401).\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/onaio/onadata/issues/comments/34929042", "body": "emailed account name\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/34929042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/35000054", "body": "Ah I see. This would be ODK Collect then. Will test and if so, strip the\nnamespace in enketo, I guess.\n\nOn Wed, Feb 12, 2014 at 9:51 PM, ukanga notifications@github.com wrote:\n\n> I think this has to do with the client that submitted the records. We\n> actually do handle this kind of submission, but we never do modify the\n> incoming submission. Not sure what more we can do.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/onaio/onadata/issues/176#issuecomment-34948351\n> .\n\n## \n\n_Did you know that Enketo Smart Paper has now become the #1 tool for data\ncollection? Don't fall behind. Use it!_\n\nEnketo https://enketo.org    |\nLinkedInhttp://www.linkedin.com/company/enketo-llc   |\nGitHub https://github.com/MartijnR    |    Twitterhttps://twitter.com/enketo\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/35000054/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/35015568", "body": "moved to https://github.com/MartijnR/enketo/issues/280\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/35015568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/35042905", "body": "@larryweya I dealt with the editing (namespace-prefix) issue on the enketo side and informed Joe.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/35042905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "faith-mutua": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/1199", "title": "Date range not applying to filtered datasets exports", "body": "**Environment** \r\n\r\nProduction\r\n\r\n**Expected behavior** \r\n\r\nExporting data from a filtered dataset using the date range feature should only export data within the specified dates. \r\n\r\n**Actual behavior** \r\n\r\nExporting data from a filtered dataset using the date range feature exports the entire dataset and not the data within the specified date range. \r\n\r\n**Steps to reproduce**\r\n- Create a filtered dataset.\r\n- Specify a date range under Advanced export options. \r\n- Export data. \r\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1197", "title": "Merged dataset submission count not updated ", "body": "**Environment**\r\n\r\nProduction\r\n\r\n**Expected behavior**\r\n\r\nMerged dataset submission count should be updated when new submissions are made on the parent datasets. \r\n\r\n**Actual behavior**\r\n\r\nThe submission count on merged datasets remains the same even after new submissions have been made to the parent datasets. However, the new submissions are updated in the table view. \r\n\r\n**Steps to reproduce** \r\n\r\n- Create a merged dataset.\r\n- Make new submissions in one of the parent datasets.\r\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1188", "title": "Gateway timeout error thrown when fetching data from a dataset", "body": "**Environment** \r\n\r\nAPI\r\n\r\n**Expected behavior** \r\n\r\nFetching a small number of records using the GET command with a limit operator should return the number of records specified in the query. \r\n\r\n**Actual behavior**\r\n\r\nA Gateway timeout error is thrown when fetching a small number of records from a dataset. \r\n\r\n**Steps to reproduce**\r\n\r\n- Log into the onasupport account. \r\n- Fetch X number of records from this [dataset](https://ona.io/akros_health/44743/244266) using the GET command with a limit operator. ", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1159", "title": "Disable data submission for users with Can View role", "body": "**Environment (local, stage, preview, production)**\r\n\r\nProduction\r\n\r\n**Expected behavior**\r\n\r\nUsers with Can View role should not be able to submit data.\r\n\r\n**Actual behavior**\r\n\r\nUsers with Can View role are able to submit data to forms from ODK Collect which shouldn't be the case.\r\n\r\n**Steps to reproduce the behavior**\r\n\r\n1. Add your account to a project in a different account and assign `Can View` role to your account.\r\n2. Download a form on ODK Collect then submit data. The record is submitted successfully.\r\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JohnMwashuma": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/1186", "title": "Images in form submissions whose file names contain spaces are not being displayed", "body": "During a form submission, if an image field is supplied with an image whose file name has spaces the image is submitted successfully but can not be displayed on the table view. Only Images with filenames without spaces or whose spaces were replaced by underscores are being displayed.\r\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1184", "title": "Can not export data in filtered datasets", "body": "The exports list for a filtered dataset form returns an empty list for an authenticated user who does not have permission to it's parent form.\r\n\r\n`curl -X GET https://api.ona.io/api/v1/export?xform=249870 -u <username>:<password>\r\noutput: [ ]`", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jmunene": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/1182", "title": "OSM data in XLS exports is missing", "body": "When you export data in `.xls` format, the `osm` data is missing but when you download in `.csv` format, its there.", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bmalina": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/1181", "title": "Error when pulling data from a XLSForm with repeat groups", "body": "**Environment:** Production\r\n\r\n![image](https://user-images.githubusercontent.com/20789710/32650550-46e56d5c-c60f-11e7-9fd5-52a17fdc059c.png)\r\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1028", "title": "Media attachments exports include all attachments after applying a date or form version filter ", "body": "After applying a date or form version filter when exporting media attachments, the exports still include all the media files attached to the form.", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nateMJ": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/1176", "title": "Add ability to delete exports from a shared form", "body": "Add permissions to delete an export made from a shared form.", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/onaio/onadata/commits/fa5cc07237c0863be821d8566752b241a00557e7", "message": "Specify supported FLOIP types in Ona (#1177)"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/e8f32b99287ef773d548f89fbbf107cce8df2eb2", "message": "Edit FLOIP docs"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/d9d477300aad45c5ef68a51f98da8234a52c2554", "message": "Edit FLOIP docs"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/758e65c6e67268e8bde4dd177ec1f5b13fbd79e5", "message": "Edit FLOIP get data command"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/695d3f995e50a864b058ea587d65d5609f4c20a2", "message": "Add FLOIP docs"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/942e04a30d88238034567afe874b71265a1990f6", "message": "Perform check that data has six values"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/d797a6d8f8321651a1a0691da914b4334eba7fae", "message": "Convert JSON dict to FLOIP list"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/736a261aeab2d0b9da8bcdcf4d2c9ec4d6c91752", "message": "Use a ListSerializer for FLOIP submissions"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/6b3d8bf6cc9bc8e707928ccaed8e7da5940ed22d", "message": "Edit error response to wrong number of values in a list"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/cfa3c024cb990cc9ac2f020ec9bdf312ce72102f", "message": "Add FLOIP submission docs"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/0c95f0d328b22815d339cca30cf245d1a40a02f4", "message": "Use JSONRenderer for flowjson format"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/1558956eb5af836b33df54b093246c54642ff22f", "message": "Code cleanup"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/98b9c8f694b3e55b964c0b9660824bafe621c70c", "message": "Check data is a list instance and create a dict"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/a4460df1d829aec2a7e27ea39e9f7d480542bead", "message": "Add test for floip not a list and is a valid json"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/cea09f01ce7358e049bc5fee468500e0a55eba9a", "message": "Refactor data has a row condition check"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/8969bcead27abcc7d53db1486ac3ff8be0b2216e", "message": "Refactor getting xform headers"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/3194dd35ea4985c313135cf293dd664ebc997837", "message": "Check data has atleast 1 row of data"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/cf429a90fdf72d929089a72b3467cafa84929a9d", "message": "Refactor error message to make it translatable"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/af4062fa7731cede06b68af72c98bc75c5686d9d", "message": "Refactor FLOIP content type"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/e445b0a8141f31bcbd2c7315caebdb7694fc8e49", "message": "Fix failing response message"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/90175b1d5f592a6d99ffb75b7ec6ab13c47e0c88", "message": "AssertTrue if data responses exists in instance values"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/bf4e37a14b81037cd0ac3b2ff872603e72cb24ef", "message": "Add a test for submission instance"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/e3f99d60056d7b8a6f112aff57912d4478c6d738", "message": "Edit headers and responses lists mapping function"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/716b3dcd90f3ecc265a53431b874e6d87cc34cb9", "message": "Add a floip multiple row submission"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/8670952ecb0bfa146a6ca3af1016d7f29f7ff5b8", "message": "Create a ListSerializer instance for a floip submission only"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/3dfd4311fba5f8321b3c07a42581b12c3e1c7b0d", "message": "Edit FLOIP mimetype"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/b25bbdef8b76b9789906bcf087945639bdd3cf4f", "message": "UK|AM: Override to_internal_value() method to validate list data"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/324fe69fef5962f3056f12bab20052c3bb4552ae", "message": "Add a many=True flag if data is a list to create a ListSerializer instance"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/21cb4916f353b921fddd5a986b08b6fbaf3e51ac", "message": "Add a parser for floip+json media_type"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/dc47a504642231bfbe91453d45b478d6440e9cc3", "message": "Add a FLOIP renderer"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/656f9600bd93af9545799f9838bcb5022dc6902e", "message": "Edit the data and mimetype"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/e217de422cb4d6161c4c0f12cc16d4c213b1f3eb", "message": "Get FLOIPSubmissionSerializer if content-type is application/flow-json"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/19dcdc0de69c899ec09cbdbe5a9e973ddf64ad33", "message": "Add a FLOIP submission serializer"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/6b642cc7621a5f5d3a36d58154422fe0dbae0843", "message": "Add method to return flow dictionary by matching it to the xform headers"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/c20690d388d216525589193205aec7dc09fb434a", "message": "Add a test for FLOIP format spec submission"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/b397a020ae47d84f5da18198c2fcdff48339a739", "message": "UK|AM: Move get_request_and_username() and create_submission() methods to serializers"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/ca3b1329d2b0b962bfc3c8c7b4e3d7ae284e57ed", "message": "DRY refactor"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/517bca19675b647377630c22151f546dd311d506", "message": "Add a get_request_and_username and get_object_instance() methods"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/37dbba50595a83c8bddd15a940f90fbc551fd07a", "message": "Add a query dict to dict translation method"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/4c29ee2566c254ac47e87028e0cf21b8d91bfa2c", "message": "Add RapidPro submission serializer"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/6ee2163e5d9d971d47131958691ab24704c78a14", "message": "Get RapidPro serializer class"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/94c153d83e331aa8856c8bb8f96c76f102d073d3", "message": "UK|AM: Add xform id_string and remove content type test'\ngit add onadata/apps/api/tests/viewsets/test_xform_submission_viewset.py"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/238e5ceccdbc5feabaa36605b549ca31d11e9cad", "message": "Edit test expected error message"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/fe10d52577106adbe3de459ffa9ddd42976b295a", "message": "Assign self.message to self.content"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/ffc53ecaf24b5b427193aa0240098241ecb21f91", "message": "Update request with the appropriate renderer and media type for JSON submissions"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/1ff986328e8f9b738fd4dbee6048d0593c933ffb", "message": "Add a succesful submission mixin and raise appropriate errors"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/400873753925d830a4cf4b00ad8cb5720b542dd9", "message": "Refactor JSON submission and handle exceptions"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/2615055be40481da08d73d346f0592228ba2c4ea", "message": "Refactor sml submissions to use a serializer.\n\n- Create IsAuthenticatedSubmission permission\n- Apply openrosa headers in finalized response\n- Implemented create() in SubmissionSerializer"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/2b89c3b29f7cf933594d0103979a812a1571dda3", "message": "Add RapidPro submission test"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ivermac": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/1169", "title": "Add functionality to create single submission enketo links", "body": "The enketo api link to create single submission url is `https://apidocs.enketo.org/v2#/post-survey-single-once`. Just like the other 2 enketo links, I think the link should be a metadata object", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1136", "title": "Stop celery process creating an export when pending export is deleted", "body": "At the moment, only the export object is deleted.", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1031", "title": "Add retry export endpoint", "body": "Add a retry export endpoint on the export_viewset.py file. This endpoint should take an existing export id and use it to retrieve the export's options which will be used to retry the export process.\r\n\r\nThis issue is blocked by [this issue](https://github.com/onaio/onadata/issues/1030) because it requires that the query param is not hashed and that issue removes the hashing of the query param", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1008", "title": "Select multiple answers that used search expression not showing on CSV export", "body": "### Environment (local, stage, preview, production)\r\nAll\r\n\r\n### Expected behavior\r\nShould have the default behaviour of how select multiple fields works i.e allow a user to split select multiple answers into separate columns or have them in a single column and they should be shown.\r\n\r\n### Actual behavior\r\nWhen a user successfully exports a CSV of a form that has select_multiple that uses the search expression, the values of the select_multiple fields are `False` as seen on the screenshot below - `fruit/fruit_name` is a select_multiple field that uses search expression.\r\n<img width=\"693\" alt=\"screen shot 2017-04-26 at 11 22 11\" src=\"https://cloud.githubusercontent.com/assets/1128227/25424769/4a38ed8c-2a72-11e7-9f94-4605922e6dfa.png\">\r\nRelated to https://github.com/onaio/zebra/issues/5105. Also, this might also be the same for the other export options.\r\n\r\n### Steps to reproduce the behavior\r\n1. Create a form with select_multiple field and have it use search expression function. Details on how to create such a form can be found [here](http://xlsform.org/#dynamic-selects-from-pre-loaded-data).\r\n2. Add data to the form using ODK collect.\r\n3. Export the data as CSV.\r\n\r\n### Implementation plan\r\n\r\n### Blocking or related [onadata](https://github.com/onaio/onadata/) issues\r\n- Related : https://github.com/onaio/zebra/issues/5105", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/845", "title": "Form ownership transfer does not result to an update in enketo", "body": "@cagulas and myself just discovered a bug - I don't think we ever thought about it initially when forms transfer was introduced. When a user transfers form ownership to another user/org, enketo is not updated to reflect the new owner or the new formList. This is a problem especially if the original url is already being used. I guess this is also a chance for someone else, other than me, to checkout and explore if this possible via the enekto API and how onadata will be able to do this", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [{"url": "https://api.github.com/repos/onaio/onadata/commits/68b2abb493536f0ad8996e5ced9a102c8b82b017", "message": "Test json object is returned"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/363d8c63d9eac6c4f387564e3e8823c23aefb7a3", "message": "Update response to return json object"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/e0bf788288160d593ffa87ca1f1f5ed96d7af988", "message": "Fix failing test"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/af4ca13d29c10de8887d1f52f1f8a4d0364e65ff", "message": "Update test\n\ntest error message is returned when invalid ids are provided and also test that the delete endpoint returns a 200 response when records are successfully deleted."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/49ed47fd2f922e4ee586a94c17d50c9f536f7cec", "message": "Code cleanup\n\nShow error message when invalid ids are provided, delete all records at once and return 200 response with message."}, {"url": "https://api.github.com/repos/onaio/onadata/commits/1b887e3430ea49d2210c2abd00bdd226a01dffb5", "message": "Test bulk deletion"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/4d17ac9bec98b88944283a55c8fc8a5e87e68263", "message": "ME: soft delete multiple instances"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/00239e92f3689c3310c843bd4581fe2a803a0a9f", "message": "UK|ME: Add lookup mapping that allows bulk deletion"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/onaio/onadata/comments/8498318", "body": "Hey @prabhasp, I have refactored the code as suggested above. Checkout out this [commit](https://github.com/onaio/onadata/commit/f52025caa9709d68326470f68cc1c14a5e4198f5). Your feedback with highly be appreciated\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/comments/8498318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/comments/8615098", "body": "@denniswambua you could use the python string format i.e. data_value = 'template 1 |%s' % (server)\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/comments/8615098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19720108", "body": "@pld the renderer_classes is used;  allows you to return responses based on format suffixes like .json, .xls e.t.c on the URL. @ukanga had asked me to handle other format suffixes like .xml, .csv e.t.c and that's the reason why we have a list of renderers\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19720108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19720284", "body": "The data should be returned based on the format suffix i.e. if the suffix is '.xml' return an xml response. I am renaming this function to 'custom_response_handler' to avoid any confusion\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19720284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19720361", "body": "I am refactoring this to a separate function as suggested\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19720361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19720381", "body": "I have consulted with @ukanga and I am refactoring this to generate a new export if the 'export.filename' is None\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19720381/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19724028", "body": "Nothing was broken before. Code was refactored to have a function (custom_response_handler) which could be called both on the XFormViewSet and DataViewSet because the export functionality is similar; to avoid repeating code that does the same thing. \n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19724028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19724166", "body": "You are right about what's being returned as xml. I am changing this to return data stored in the form and I will add a test for it. Will give you a heads up once am done\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19724166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "pld": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/1156", "title": "Number columns sorted in lexicographic order", "body": "Number columns should sort in numeric order.\r\n\r\nGiven a request to the data endpoint sorting based on a numeric column, e.g.\r\n\r\n```\r\nhttps://api.ona.io/api/v1/data/242626?start=0&limit=100&sort=%7B%22dps_enum1%22%3A1%7D&query=\r\n```\r\n\r\nThe returned data looks like:\r\n\r\n```\r\n[\r\n  {\"dps_enum1\": 1},\r\n  {\"dps_enum1\": 10},\r\n  {\"dps_enum1\": 2}\r\n]\r\n```\r\n\r\nIt should look like:\r\n\r\n```\r\n[\r\n  {\"dps_enum1\": 1},\r\n  {\"dps_enum1\": 2},\r\n  {\"dps_enum1\": 10}\r\n]\r\n```", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/1084", "title": "Add integrations and HXL support to merged datasets", "body": "- Add Integrations\r\n  - [x] Webhooks\r\n  - [ ] Google sheets\r\n  - [x] Rapidpro\r\n- [ ] HXL support\r\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/865", "title": "Image links returned in dataset data are unavailable", "body": "See the broken images here, https://ona.io/royrutto/1070/18516#/photos\r\n\r\nSome of the image resources that this returns are links to s3, like https://onadata.s3.amazonaws.com/royrutto/attachments/1417148767144.jpg?Signature=ETIPNf6bHTYGiMFF7chN94H2eSw%3D&Expires=1425386881&AWSAccessKeyId=AKIAJEDESO6AU6LGAPDA, but this returns access denied when requested.\r\n\r\nWhy is this endpoint returning links to s3 for only some of the records? If it should be, why are the links to s3 not working?", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/865/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/863", "title": "Exception Type: ProgrammingError at /api/v1/data/[id], Exception Value: column \"date_modified\" does not exist", "body": "Internal Server Error: /api/v1/data/[id]\r\n\r\nProgrammingError at /api/v1/data/[id]\r\ncolumn \"date_modified\" does not exist\r\nLINE 1: ...string_agg(date_modified::text, '')) FROM (SELECT date_modif...\r\n                                                             ^\r\nTraceback:\r\n\r\nFile \"/home/onadata/.virtualenvs/onadata/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\r\n  149.                     response = self.process_exception_by_middleware(e, request)\r\n\r\nFile \"/home/onadata/.virtualenvs/onadata/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\r\n  147.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n\r\nFile \"/home/onadata/.virtualenvs/onadata/local/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\r\n  58.         return view_func(*args, **kwargs)\r\n\r\nFile \"/home/onadata/.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/viewsets.py\" in view\r\n  87.             return self.dispatch(request, *args, **kwargs)\r\n\r\nFile \"/home/onadata/.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/views.py\" in dispatch\r\n  466.             response = self.handle_exception(exc)\r\n\r\nFile \"/home/onadata/.virtualenvs/onadata/local/lib/python2.7/site-packages/rest_framework/views.py\" in dispatch\r\n  463.             response = handler(request, *args, **kwargs)\r\n\r\nFile \"./onadata/apps/api/viewsets/data_viewset.py\" in list\r\n  359.                                   is_public_request)\r\n\r\nFile \"./onadata/apps/api/viewsets/data_viewset.py\" in _get_data\r\n  441.             query, fields, sort, start, limit, is_public_request)\r\n\r\nFile \"./onadata/apps/api/viewsets/data_viewset.py\" in set_object_list_and_total_count\r\n  433.                 self.etag_hash = get_etag_hash_from_query(records, sql, params)\r\n\r\nFile \"./onadata/apps/viewer/models/parsed_instance.py\" in get_etag_hash_from_query\r\n  112.         etag_hash = [i for i in _query_iterator(sql, params=params)\r\n\r\nFile \"./onadata/apps/viewer/models/parsed_instance.py\" in _query_iterator\r\n  92.     cursor.execute(sql, [unicode(i) for i in sql_params])\r\n\r\nFile \"/home/onadata/.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/backends/utils.py\" in execute\r\n  64.                 return self.cursor.execute(sql, params)\r\n\r\nFile \"/home/onadata/.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/utils.py\" in __exit__\r\n  95.                 six.reraise(dj_exc_type, dj_exc_value, traceback)\r\n\r\nFile \"/home/onadata/.virtualenvs/onadata/local/lib/python2.7/site-packages/django/db/backends/utils.py\" in execute\r\n  64.                 return self.cursor.execute(sql, params)\r\n\r\nException Type: ProgrammingError at /api/v1/data/[id]\r\nException Value: column \"date_modified\" does not exist\r\nLINE 1: ...string_agg(date_modified::text, '')) FROM (SELECT date_modif...\r\n                                                             ^\r\n\r\nRequest information:\r\nGET:\r\nsort = u'{\"_submission_time\":1}'\r\nquery = u''\r\n\r\nPOST: No POST data\r\n\r\nFILES: No FILES data\r\n\r\nCOOKIES: No cookie data", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/859", "title": "Audit trail for permissions", "body": "Store an audit trail for permissions that shows when permissions on projects and forms have been added, edited, and removed.\r\n\r\nPresent this over the API to org admins (for projects and forms owner by orgs) and users (for projects and forms owned by users).", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/859/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commits": [{"url": "https://api.github.com/repos/onaio/onadata/commits/524f56c0d46537e25a942eb634741b4499b9112b", "message": "Merge pull request #1160 from onaio/floip\n\nAdd FLOIP submission endpoint"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/91ff950d0baf2b488514215596ea2aaaed7beedd", "message": "use constant, fix line length"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/a3b154082dc829696f3e059cbf8367b89f2603bd", "message": "use inline link to floip spec"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/9b4818ef9360e83628d81d2b8e49f30cd2e42402", "message": "add test for missing column, improve is list test"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/f7639b85bc31b9585261138bd2885c3026c8ebdb", "message": "move validation to validate method"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/aeaf8b810a1e6c63b26df65b191848dd02159bbd", "message": "refactor kwargs get"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/210be63ab7c660e9ccaf359ac7b06af8cdd15505", "message": "refactor error message generation"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/f2059fd076d3d4ccda7aa9043658c3b3274ee1b9", "message": "Merge pull request #1152 from onaio/fix-hash\n\nValidate presence of the xml_submission_file"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/220e23e823279302338274ded1ee15e6bb34fc13", "message": "Merge pull request #1150 from onaio/submission-template-fix\n\nCorrect spelling in submission.xml template"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/onaio/onadata/issues/comments/28980743", "body": "well no more error, but I see a failure, https://travis-ci.org/onaio/onadata/builds/14307502\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/28980743/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29075561", "body": "This looks good, I'm going to add commits for my comments...\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29075561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29139539", "body": "thanks @ukanga !\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29139539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29357378", "body": "great work\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29357378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29552414", "body": "@ukanga this looks good, just a question about the form file.  are exports in here?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29552414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29599812", "body": "Sound great, I merged the previous PR, is there a new one for removing that\nclass?\nOn Dec 2, 2013 12:08 AM, \"ukanga\" notifications@github.com wrote:\n\n> @pld https://github.com/pld exports are also covered in this pull\n> request, a conversation with @larryweya https://github.com/larryweyamade this way simler to implement\n> 1fd1a00 https://github.com/onaio/onadata/commit/1fd1a00\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/onaio/onadata/pull/32#issuecomment-29594914\n> .\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29599812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29600568", "body": "we can do this when there's a reason to\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29600568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29600593", "body": "can update the description with a link to where this header is in the code?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29600593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29600759", "body": "is anyone looking at this, are there any links on the site to this?  we can redo the page when site is redesigned\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29600759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29604157", "body": "@ukanga do you know in what file this is getting set?  Is it built from the source comments?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29604157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29776478", "body": "closing, doesn't require changes to onadata repo\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29776478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29776567", "body": "https://github.com/onaio/onadata/issues/44, duplicate\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29776567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29776787", "body": "it's working\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29776787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29777007", "body": "can you add a description?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29777007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29882127", "body": "New issue here, https://github.com/onaio/onadata/issues/49\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29882127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/30341717", "body": "This sounds like it may overlap with, https://kobotoolbox.atlassian.net/browse/KCAT-25\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/30341717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/30538035", "body": "@ukanga this build fails a test with \n\n``` traceback\n======================================================================\nERROR: test_projects_get (api.tests.test_projects_api.TestProjectsAPI)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/alan/src/ona/onadata/api/tests/test_projects_api.py\", line 26, in test_projects_get\n    response = view(request)\n  File \"/home/alan/.virtualenvs/onadata/lib/python2.7/site-packages/rest_framework/viewsets.py\", line 78, in view\n    return self.dispatch(request, *args, **kwargs)\n  File \"/home/alan/.virtualenvs/onadata/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 77, in wrapped_view\n    return view_func(*args, **kwargs)\n  File \"/home/alan/.virtualenvs/onadata/lib/python2.7/site-packages/rest_framework/views.py\", line 399, in dispatch\n    response = self.handle_exception(exc)\n  File \"/home/alan/.virtualenvs/onadata/lib/python2.7/site-packages/rest_framework/views.py\", line 396, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"/home/alan/.virtualenvs/onadata/lib/python2.7/site-packages/rest_framework/mixins.py\", line 104, in retrieve\n    self.object = self.get_object()\n  File \"/home/alan/src/ona/onadata/api/viewsets/project_viewset.py\", line 175, in get_object\n    return super(ProjectViewSet, self).get_object(queryset)\n  File \"/home/alan/.virtualenvs/onadata/lib/python2.7/site-packages/rest_framework/generics.py\", line 306, in get_object\n    (self.__class__.__name__, self.lookup_field)\nImproperlyConfigured: Expected view ProjectViewSet to be called with a URL keyword argument named \"owner\". Fix your URL conf, or set the `.lookup_field` attribute on the view correctly.\n```\n\nIf I remove/comment out the portion of the tests that checks for the 400 response code, it fails with:\n\n``` traceback\n======================================================================\nERROR: test_projects_get (api.tests.test_projects_api.TestProjectsAPI)\n----------------------------------------------------------------------\nYour environment is:\"formhub.preset.default_settings\"     \n  File \"/home/alan/.virtualenvs/onadata/lib/python2.7/site-packages/rest_framework/viewsets.py\", line 78, in view\n    return self.dispatch(request, *args, **kwargs)        \n  File \"/home/alan/.virtualenvs/onadata/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 77, in wrapped_view\n    return view_func(*args, **kwargs)                     \n  File \"/home/alan/.virtualenvs/onadata/lib/python2.7/site-packages/rest_framework/views.py\", line 399, in dispatch\n    response = self.handle_exception(exc)                 \n  File \"/home/alan/.virtualenvs/onadata/lib/python2.7/site-packages/rest_framework/views.py\", line 396, in dispatch\n    response = handler(request, *args, **kwargs)          \n  File \"/home/alan/.virtualenvs/onadata/lib/python2.7/site-packages/rest_framework/mixins.py\", line 104, in retrieve\n    self.object = self.get_object()                       \n  File \"/home/alan/src/ona/onadata/api/viewsets/project_viewset.py\", line 174, in get_object\n    return super(ProjectViewSet, self).get_object(queryset)\n  File \"/home/alan/.virtualenvs/onadata/lib/python2.7/site-packages/rest_framework/generics.py\", line 309, in get_object\n    obj = get_object_or_404(queryset, **filter_kwargs)    \n  File \"/home/alan/.virtualenvs/onadata/lib/python2.7/site-packages/rest_framework/generics.py\", line 34, in get_object_or_404\n    return _get_object_or_404(queryset, **filter_kwargs)  \n  File \"/home/alan/.virtualenvs/onadata/lib/python2.7/site-packages/django/shortcuts/__init__.py\", line 113, in get_object_or_4\n04                                                        \n    return queryset.get(*args, **kwargs)                  \n  File \"/home/alan/.virtualenvs/onadata/lib/python2.7/site-packages/django/db/models/query.py\", line 395, in get\n    clone = self.filter(*args, **kwargs)                  \n  File \"/home/alan/.virtualenvs/onadata/lib/python2.7/site-packages/django/db/models/query.py\", line 669, in filter\n    return self._filter_or_exclude(False, *args, **kwargs)\n  File \"/home/alan/.virtualenvs/onadata/lib/python2.7/site-packages/django/db/models/query.py\", line 687, in _filter_or_exclude\n    clone.query.add_q(Q(*args, **kwargs))                 \n  File \"/home/alan/.virtualenvs/onadata/lib/python2.7/site-packages/django/db/models/sql/query.py\", line 1271, in add_q\n    can_reuse=used_aliases, force_having=force_having)\n  File \"/home/alan/.virtualenvs/onadata/lib/python2.7/site-packages/django/db/models/sql/query.py\", line 1139, in add_filter\n    process_extras=process_extras)\n  File \"/home/alan/.virtualenvs/onadata/lib/python2.7/site-packages/django/db/models/sql/query.py\", line 1337, in setup_joins\n    \"Choices are: %s\" % (name, \", \".join(names)))\nFieldError: Cannot resolve keyword 'owner' into field. Choices are: created_by, date_created, date_modified, id, name, organization, projectxform, team\n```\n\nI suppose this has to be connected to splitting the code into separate modules, but I only moved code around and have double checked that nothing changed.  \n\nDo you have any ideas, suggestions for tracking down the cause of this failure?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/30538035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/30655864", "body": "We should do this by having the API endpoint reference existing CSV\ndownload view code or moving the CSV download view code to the API and\nhaving other parts of the code reference this.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/30655864/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/30657838", "body": "@larryweya I'm assuming this duplicates/replaces some existing functionality, is that correct?  If so, I'm for removing any existing code that this duplicates or replaces.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/30657838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/30714276", "body": "Cool, this all makes sense, closing.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/30714276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31098884", "body": "also, in the future please use caps for commit message initials\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31098884/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31099146", "body": "this is probably better in a flat file then the db, it should change infrequently\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31099146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31108948", "body": "added a description\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31108948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31113260", "body": "The reasoning behind the initials over just looking at the owner is for pairing and switching accounts, personally I like having explicit ownership over commits and code changes, certainly `git blame` gives you most of that already, this just steps it up a bit.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31113260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31115874", "body": "From @ukanga,\n\n``` bash\nm = \"!f() { git commit -m \\\"UK: $1\\\"; }; f\"\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31115874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31130909", "body": "Just got back to internet, will go over ASAP\nOn Dec 23, 2013 2:58 PM, \"ukanga\" notifications@github.com wrote:\n\n> @pld https://github.com/pld this is green, you can have a look, we may\n> need to have this in soon, for some pending migrations for WHO.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/onaio/onadata/pull/54#issuecomment-31123007\n> .\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31130909/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31131127", "body": "merged, can someone push the latest master to production?  (i'm having key problems at the moment)\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31131127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31402779", "body": "cool, this is the direction we're headed by making the data pure and relying on delete_at timestamps to fetch the latest revision.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31402779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31503710", "body": "How about this (see commit)?  We add a 'template' key to deploy configurations that have special templates, and the logic for pulling those templates all stays in the same file.  Also, what's up with the tests?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31503710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31550186", "body": "added a description\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31550186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31661458", "body": "deprecated, https://github.com/onaio/onadata/pull/78\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31661458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31789095", "body": "https://github.com/onaio/onadata/pull/83, deprecated here's the rebased version with paths changed for the new project structure\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31789095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31789149", "body": "@ukanga if the rebase looks okay, could you please merge it, then close this pr and delete the branches, thx\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31789149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31848198", "body": "I rebased this, do a `git pull --force origin migrate-mysql-to-psql`\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31848198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31848422", "body": "the plan looks good, from \"Update to the latest\" through moving local settings should be unnecessary, I added a function to handle this, https://github.com/onaio/onadata/blob/master/fabfile.py#L43, look OK?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31848422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31849473", "body": "As long as the functionality is there let's get this branch passing and merged ASAP.  We can revisit the design decisions, we need to move more incrementally wherever possible, this branch is \"too big\" as is.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31849473/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31959334", "body": "looks good to merge\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31959334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31963229", "body": "replace with rebased pr, https://github.com/onaio/onadata/pull/88\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31963229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31988001", "body": "@larryweya can you make the search bar full width as discussed?  The other design changes are unresolved and can be handled in a separate pull request.  Search bar notes below:\n- Search bar should be full width similar to https://github.com/datasets/country-codes/blob/master/data/country-codes.csv#L4\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31988001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31989508", "body": "@larryweya it does not appear that all of the JavaScript specs and tests are running on Travis, could you ensure they are?\n\nalso, I don't really like the id of having `js_tests` directories, what do think about moving those to `tests/javascript`?  is there another way to clarify the js test organization?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31989508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32178577", "body": "@larryweya looks good, followup issues here,\nhttps://github.com/onaio/onadata/issues/96\nhttps://github.com/onaio/onadata/issues/97\n\nmerge when green\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32178577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32190393", "body": "Looks good, merge when green\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32190393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32289850", "body": "We broke something today, we're fixing it now.\n\nCarolyn Gulas wrote:\n\n> I know this was closed, but when I open my onadata account, the \n> internet page still shows formhub. @pld https://github.com/pld\n> \n> \u2014\n> Reply to this email directly or view it on GitHub \n> https://github.com/onaio/onadata/issues/44#issuecomment-32285358.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32289850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32289871", "body": "Oh yeah, missed this, what he said.\n\nMatt Berg wrote:\n\n> It's a temporary bug we just created\n> \n> On Tuesday, January 14, 2014, Carolyn Gulas wrote:\n> \n> > I know this was closed, but when I open my onadata account, the \n> > internet\n> > page still shows formhub. @pld https://github.com/pld\n> > \n> > \u2014\n> > Reply to this email directly or view it on \n> > GitHubhttps://github.com/onaio/onadata/issues/44#issuecomment-32285358\n> > .\n> \n> \u2014\n> Reply to this email directly or view it on GitHub \n> https://github.com/onaio/onadata/issues/44#issuecomment-32285517.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32289871/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32336714", "body": "Larry has already moved us to bower, is a specific component you are \nthinking of?\n\nMatt Berg wrote:\n\n> I can take this on when I work on css tweaks.\n> \n> @larryweya https://github.com/larryweya can we move front end \n> components to bower? Or is that not possible with django?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub \n> https://github.com/onaio/onadata/issues/108#issuecomment-32336526.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32336714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32580518", "body": "with the `get_object` change this look good to merge\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32580518/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32592831", "body": "Maybe the dir for this should be `onadata/libs` not root, and we should keep this constant for allcustom templates, i.e. kobo as well and not set it in each deploy dict.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32592831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32725151", "body": "it's redundant, we will remove it\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32725151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32822699", "body": "@ukanga this is great, what do you think about rolling all the Ubuntu 12 commands into a single, perhaps interactive bash script?  We could then run this on deploy to a clean instance.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32822699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32964390", "body": "steps for deployment are in `script/install_ubuntu`, specifically:\n\n``` bash\nsudo sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main\" >> /etc/apt/sources.list'\nwget --quiet -O - http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc | sudo apt-key add -\nsudo apt-get update  # not necessary\nsudo apt-get install -qq binutils libproj-dev gdal-bin Postgresql-9.3-postgis\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32964390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32966515", "body": ":+1 looking good\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32966515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/33026237", "body": "The create extension command is here `scripts/database/install_postgis`\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/33026237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/33065699", "body": "Looks good!\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/33065699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/33207293", "body": "Looks good to merge\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/33207293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/33786262", "body": "looks good\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/33786262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/33992950", "body": "looks good after addressing the comment, also please remember to prefix commits with the initials of those who worked on it\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/33992950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/34149592", "body": "looks good, let's merge after a build\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/34149592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/34682165", "body": "look closed\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/34682165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/35244350", "body": "cool, this looks good to merge after the paren style is fixed, looking through the diff for `if(` brings up a number of additions/existing lines\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/35244350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/36875654", "body": "sweet\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/36875654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/37102030", "body": "We will be sticking with the approach described here, http://www.deploydjango.com/django_project_structure/#building-a-perfect-django-settings-module\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/37102030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/37190387", "body": "`ack`ing through the onadata repo doesn't bring up anything suspicious.  Can you provide more information about where this is coming from or write a test case?  Could this be because of a reference in the template repo?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/37190387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/37567214", "body": "Maybe in removing crowd forms, what does git blame or history show?\n\nAnything suspicious in the diffs?\nOn Mar 13, 2014 2:04 PM, \"ukanga\" notifications@github.com wrote:\n\n> @larryweya https://github.com/larryweya @pld https://github.com/pldanyone touched\n> show.htmlhttps://github.com/onaio/onadata/blob/master/onadata/apps/main/templates/show.htmlrecently\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/onaio/onadata/issues/200\n> .\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/37567214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38054477", "body": "Could retry N, set to 3, times with a timeout in between.\n\nukanga wrote:\n\n> maybe catch the exception and retry export? record it if retries fails?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub \n> https://github.com/onaio/onadata/issues/203#issuecomment-38020661.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38054477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38087360", "body": "![screen shot 2014-03-19 at 2 15 30 pm](https://f.cloud.github.com/assets/50706/2464061/80adbdf6-af92-11e3-861a-6319760f80c4.png)\nhere's an example\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38087360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38088640", "body": "closing this as per comments and email it's resolved.  right?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38088640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38089408", "body": "fixed tutorial.xls\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38089408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38089561", "body": "closing, we can revisit in the course of UI overhaul\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38089561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38503661", "body": "closing, this is an Enketo issue\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38503661/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38504536", "body": "deploying now.\n\nMatt Berg wrote:\n\n> Sweet so is this resolved now?\n> \n> On Monday, March 24, 2014, Peter Lubell-Doughtie \n> notifications@github.com\n> wrote:\n> \n> > Merged #210 https://github.com/onaio/onadata/pull/210.\n> > \n> > ## \n> > \n> > Reply to this email directly or view it on \n> > GitHubhttps://github.com/onaio/onadata/pull/210\n> > .\n> \n> \u2014\n> Reply to this email directly or view it on GitHub \n> https://github.com/onaio/onadata/pull/210#issuecomment-38504467.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38504536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38506209", "body": "It's deployed\n\nMatt Berg wrote:\n\n> Sweet so is this resolved now?\n> \n> On Monday, March 24, 2014, Peter Lubell-Doughtie \n> notifications@github.com\n> wrote:\n> \n> > Merged #210 https://github.com/onaio/onadata/pull/210.\n> > \n> > ## \n> > \n> > Reply to this email directly or view it on \n> > GitHubhttps://github.com/onaio/onadata/pull/210\n> > .\n> \n> \u2014\n> Reply to this email directly or view it on GitHub \n> https://github.com/onaio/onadata/pull/210#issuecomment-38504467.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38506209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38640675", "body": "Added description:\n\nThis branch is on production, if you check out wb_vietnam you'll notice all the images that show in the children we're already included in the list of images at the top.  At the top it displays any attachments submitted with the form, be they in repeats or not.\n\nSome of the images are broken links, perhaps because they were not properly uploaded.  These images do not exist on s3.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38640675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38644184", "body": "@dorey could you fill out the description a bit, what would need to changed for this to be resolved?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38644184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38754117", "body": "this is a whole debacle, seems we need to get reverse to return HTTPS, or recognize when to respond w/HTTPS, I tried the settings here, https://security.stackexchange.com/questions/8964/trying-to-make-a-django-based-site-use-https-only-not-sure-if-its-secure\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38754117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38760201", "body": "moved to https://github.com/onaio/ona-tech/issues/54\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38760201/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38864099", "body": "the functionality is fine, this will be fixed w/the new UI\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38864099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38864143", "body": "can't replicate\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38864143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38957109", "body": "install/ubuntu etc will do this\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38957109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/40209073", "body": "https://github.com/onaio/onadata/issues/234\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/40209073/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/40936120", "body": "The export code in general could use a rewrite, there is a lot of repetition and complexity.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/40936120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41036043", "body": "@ukanga great job tracking this down\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41036043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41081500", "body": "Could put it as a sub-page on the company site, and keep it in markdown.\nOn Apr 22, 2014 2:59 PM, \"Matt Berg\" notifications@github.com wrote:\n\n> We'll need to figure out how to integrate this into the site.\n> \n> We could link to now to this but it would be ideal if the text is just\n> included as a page off the site.\n> \n> We should get this up before we start hosting data for SDI as they were\n> one of the main reasons we wrote this up.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/onaio/onadata/issues/160#issuecomment-41080012\n> .\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41081500/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41288077", "body": "deprecated\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41288077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41299711", "body": "deprecated by new UI\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41299711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41307253", "body": "deprecated\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41307253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41307269", "body": "deprecated\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41307269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41564367", "body": "OK, I'll reproduce or close by EOD\nOn Apr 28, 2014 10:12 AM, \"ukanga\" notifications@github.com wrote:\n\n> This is not reproducible. For me I only get blank xls file when i migrated\n> a form using odk briefcase, which means I did not upload the xlsform in the\n> first place.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/onaio/onadata/issues/102#issuecomment-41562568\n> .\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41564367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41617949", "body": "UI stuff we'll deprecate\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41617949/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41666838", "body": "UI will be deprecated, won't fix.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41666838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41712368", "body": "deprecated\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41712368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41712382", "body": "deprecated\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41712382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41712435", "body": "deprecated\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41712435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41712477", "body": "deprecated\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41712477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/42028480", "body": "depends on #270\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/42028480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/42133097", "body": "verified that this works on staging via ODK\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/42133097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/42133253", "body": "verified on production after deploy via ODK\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/42133253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/42133279", "body": "also verified Enketo edits work\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/42133279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/42881144", "body": "cool\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/42881144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/42954789", "body": "I wasn't aware of that, let's do what coordinates with the expected rest\nbehavior. It sounds like this is not an error, but we should check to\nensure that PATCH works as expected. What do you think, is this a\nnon-issue, should we close? Please go ahead if you think so.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/42954789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/42955789", "body": "looks good\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/42955789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/42973779", "body": "Cool, let's add some tests and see if any code changes are required.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/42973779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43103111", "body": "This script is used by the travis build file, so you will also need to pass the appropriate argument to the script in the `.travis.yml` file, https://github.com/onaio/onadata/blob/master/.travis.yml#L13, probably `127.0.0.1`.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43103111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43251359", "body": "In tests this the plugin doesn't seem to work, tried via the curl docs, http://linuxcommand.org/man_pages/curl1.html\n\nusing `curl --digest -u \"[usename]:[password]\" \"http://localhost:8000/api/v1/forms\"` with the appropriate local_settings auth in the local server.\n\nIt returns\n\n``` json\n{\"detail\": \"Authentication credentials were not provided.\"}\n```\n\nany thoughts?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43251359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43309101", "body": "But only at first, I moved it, look at the latest commits.\nOn May 16, 2014 3:17 AM, \"ukanga\" notifications@github.com wrote:\n\n> You added the Digest authentication in the wrong place, it should part of\n> DEFAULT_AUTHENTICATION_CLASSES.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/onaio/onadata/issues/286#issuecomment-43303766\n> .\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43309101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43323753", "body": "holding off on this for now, blocked by https://github.com/onaio/onadata/issues/288\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43323753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43641429", "body": "looks good, let's merge when passing\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43641429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43745020", "body": "Can you explain that it a bit more detail? I am concerned with the complexity adding another link will add.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43745020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43810297", "body": "Regarding the first `user` definition on the `instance` model, this seems like what we would want since we may want to only show the instances a specific user submitted in the future. Is there a reason why this is a problem?\n\nFor the `_set_xform` issue, we already know the XForm owner somewhere earlier in the code path, why don't we modify `_set_xform` to take a user argument, call it there, and then discard the user?\n\nI don't think keeping the current user link in the instance adds any value, since this must always be redundant with `instance.xform.user`.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/43810297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/44028715", "body": "this is some solid work, @ukanga nice job\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/44028715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/44085547", "body": "That's been gone from OnaData forever.  I looked into this before we \nstarted coding and there are a couple different i18 libs for clojure. \nI've read people suggesting that the code is simple enough not to \nwarrant a library. Others have solved it and we'll figure it out when we \nneed to.\n\nMatt Berg wrote:\n\n> The language selector got dropped. We should look at adding it back.\n> \n> @pld https://github.com/pld @royrutto https://github.com/royrutto \n> how we are planning on handling language translations with zebra?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub \n> https://github.com/onaio/onadata/issues/299.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/44085547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/44132858", "body": "Can we use the same framework we used in [tally-ho](https://github.com/onaio/tally-ho)? Where the `actors` there are the `roles` here.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/44132858/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/44132951", "body": "Checked, we used the `Group` models, https://github.com/onaio/tally-ho/blob/master/tally_ho/libs/permissions/groups.py\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/44132951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/44862551", "body": "These are \"prove it\" question. Please provide documentation indicating how\nto do this, and code references. It is not currently documented or trivial\nvisible in the code.\n On Jun 2, 2014 12:40 PM, \"Matt Berg\" notifications@github.com wrote:\n\n> Yes and yes I think\n> On Jun 2, 2014 7:11 PM, \"Peter Lubell-Doughtie\" notifications@github.com\n> \n> wrote:\n> \n> > 1. can projects be shared with individual users and with different\n> >    permission levels?\n> > 2. can a project be \"public\", i.e. accessible to users without a login?\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/onaio/onadata/issues/309.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/issues/309#issuecomment-44860878.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/44862551/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45012476", "body": "duplicate, https://github.com/onaio/onadata/issues/160\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45012476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45235799", "body": "updated the description\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45235799/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45338390", "body": "My oversight, yes I meant form, thanks. How about the first 2 questions?\nOn Jun 6, 2014 6:02 AM, \"ukanga\" notifications@github.com wrote:\n\n> how can a project be \"closed\" (no submissions can be added)?\n> \n> Do you mean a form or a project? You can close a form, there is no\n> functionality for closing a project. Do we need to close a project or\n> simply archive it (which is not also available)?\n> \n> If it is closing a form, you simply need to set the downloadable\n> attribute of the form to false, and no new submissions will be accepted.\n> This can be done through the /api/v1/forms/form_id api endpoint using a\n> PUT/PATCH method.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/issues/309#issuecomment-45321249.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45338390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45342126", "body": "OK cool, for the second question, that is actually referring to projects, not forms. Is there a PUT/PATCH to the project that control's its privacy?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45342126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45342407", "body": "https://github.com/onaio/onadata/issues/318\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45342407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45342421", "body": "thanks\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45342421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45382828", "body": "thanks, all answered, https://github.com/onaio/onadata/issues/319\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45382828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45646582", "body": "Saw 4 of these today, June 10th\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45646582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45883727", "body": "Owner? What's the difference? Do we have well defined meanings for these?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45883727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45884676", "body": "Just looked at the permissions in the PR, yes Owner role, I updated the title.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45884676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45885438", "body": "yes, updated.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45885438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45946156", "body": "This looks reasonable and I'm going to merge it. I'm not entirely sure why we couldn't use `django.contrib.auth.models.Group` for some of this. Looking at the `Role` class  it seems like it is because Group would not be at the object level, which is what we need.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45946156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46022824", "body": "No to both questions, that should not be part of this issue. Since this is\nonly needed for the viewer and not the API we'll address it there.\n On Jun 13, 2014 10:56 AM, \"Matt Berg\" notifications@github.com wrote:\n\n> We will need to do that.\n> \n> We could do something like user's project and allow them to rename.\n> \n> Ie) . Matt verg's project or mberg's forms. Think long name is probably\n> better and to try and use the word project\n> On Jun 13, 2014 10:51 PM, \"ukanga\" notifications@github.com wrote:\n> \n> > Do we need to have a default project? what name will it be? Do we need\n> > to\n> > migrate all existing forms to a default project?\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/onaio/onadata/issues/300#issuecomment-46020456.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/issues/300#issuecomment-46021009.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46022824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46024167", "body": "This issue description was incorrect, sorry about that, the endpoint should also be able to assign `owner` permission. I have updated the description.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46024167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46024369", "body": "I created a related issue for projects, it's high priority in the alpha milestone, https://github.com/onaio/onadata/issues/329\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46024369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46030096", "body": "After playing with this there are a couple problems:\n1. how can you tell what role a user has for a form? The test I extended shows, and [looking at the code](https://github.com/onaio/onadata/blob/269-xform-share-endpoint/onadata/libs/permissions.py#L31) it is clear why, that if you make a user an owner it will say they're an editor too, but they're not and it's important to know what role they have.\n2. related, if you make a user an owner and then make them an editor, they are also still an owner\n\nThis PR needs to solve 2 and be done in a way that accommodates solving 1, which has a new issue here, https://github.com/onaio/onadata/issues/330\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46030096/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46042905", "body": "Yes, that's the approach I was thinking of.\n\nChecking permissions would work, but it feels like an abstraction which has\na stored name for the roles is cleaner, I suppose this would be like the\ngroups approach, we can revisit it later as you said in the other PR\ncomment.\nOn Jun 13, 2014 1:16 PM, \"ukanga\" notifications@github.com wrote:\n\n> Roles are simply permissions, at any given time you are checking if\n> someone has specific set of permissions and depending on the action that\n> someone is doing. You could either be performing a data entry role or an\n> editor role or an owner role. This is especially the case where one role is\n> a subset of the previous one, which is the case here.\n> The way to check which role a particular person has is to check all roles\n> from the highest to the lowest, and the first role that someone has the\n> permissions for means that is their role.\n> Its redundant to make a user an owner then an editor, does it mean they\n> should no longer be an owner? If that is the case, then the ideal way to\n> have this take effect properly is to remove all the permissions someone has\n> on the object, and then assign them the new ones. I'll make the change for\n> this approach.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/pull/328#issuecomment-46036749.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46042905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46047122", "body": "Is `require_auth` a form specific or a account feature? To support the first task this needs to be set at the form level, and returned in the form properties so we can see if a form is private.\n\nIf a form has `downloadable=false` and the user has already downloaded the form (or a user has a saved Enketo link), can they submit new records to it?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46047122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46057314", "body": "Looks good, is this ready to merge when green?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46057314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46057617", "body": "The order shouldn't matter since you've added the remove perms method when assigning a role.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46057617/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46088259", "body": "OK, so it sounds like the work for these task is to move `require_auth` to the form level and allow any user with the correct permissions to pass the `require_auth` check.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46088259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46115573", "body": "That is not correct, no new info is being made public, unless there as any information in the profile that is not here, https://ona.io/mberg/, in that case we should not return that info.\n\nIn fact, you don't need to be logged in to view this info, the same could be true of the API, no login needed to view the user's public profile info just like how ona, formhub, and github work now.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46115573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46115648", "body": "We'll need to show both. We'll want to label what a user's role is and know what permissions that role has.\n\nMaybe a map that's `permission: {role-name: [permission1, ...]}`.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46115648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46116023", "body": "It looks like this would allow one dataset to be a member of multiple projects, @ukanga is that correct?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46116023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46117615", "body": "Ah cool, missed that, thanks.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46117615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46117928", "body": "Basically anywhere something in addition to a unique pk is required make that other thing optional so that the call can be made with only the pk.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46117928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46117961", "body": ":+1: merge when green\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46117961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46118291", "body": "Well I think for starters:\n1. any org endpoint that has an owner and pk should accept just the pk\n2. any project endpoint that has an owner and a pk should accept just the pk\n3. any form endpoint that has an owner and a pk should accept just the pk\n\nReasonable?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46118291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46118296", "body": "nice work\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46118296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46423912", "body": "Then that should be made clear in the docs. Right now `GET` on the `/forms` endpoint with the same pk doesn't return the form but it does on the project one, that's the reason for this, there's functionality that is missing. I.e., we can't update these project forms.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46423912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46441689", "body": "Unfortunately my best answer is, I think so. Both zebra and using the\nstaging site directly seem faster to me.\n\nBefore we deploy to production we'll have to do some principled tests,\nunderstand the timeouts better (I set it to 60 minutes but am not sure how\nexpiry works so we might be getting stale pages with this setting), better\nunderstand how expiration works, and see if we should do anything to cache\nadditional HTTP status codes.\n On Jun 18, 2014 9:19 AM, \"Matt Berg\" notifications@github.com wrote:\n\n> Cool has this helped performance any?\n> On Jun 18, 2014 5:21 PM, \"ukanga\" notifications@github.com wrote:\n> \n> > Merged #348 https://github.com/onaio/onadata/pull/348.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/onaio/onadata/pull/348#event-132553917.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/pull/348#issuecomment-46433873.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46441689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46442930", "body": "All to the /forms endpoint\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46442930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46443494", "body": "Open for discussion, maybe it's a key-value in the org info JSON returned?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46443494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46443656", "body": "What about on the other? Do you mind testing that too? I have poor internet\nright now.\nOn Jun 18, 2014 10:34 AM, \"Roy Rutto\" notifications@github.com wrote:\n\n> It doesn't work on /api/v1/projects/{owner}/{pk}/forms/{formid} just\n> tested it.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/issues/353#issuecomment-46443312.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46443656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46594454", "body": "The docs on master, which is on staging, https://stage.ona.io/api/v1/forms, say the endpoint for getting a forms info is `https://stage.ona.io/api/v1/forms/{formid}` this fails for me but `https://stage.ona.io/api/v1/forms/{owner}/{formid}` works. I believe the same owner requirement applies to the PUT and PATCH requests.\n\nIs there a good reason why GET/PUT/PATCH to the `/forms/[pk]` endpoints doesn't work? This would be convenient for API clients.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46594454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46687319", "body": "is there a reason not to use a [profiles](https://ona.io/api/v1/profiles) endpoint?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46687319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46712551", "body": "I sort of get it but not quite, do you know the user's username? Can ask\nfor their profile by username?\n\nOr is it like given an auth token you want the logged in user? What about a\n/user endpoint?\nOn Jun 20, 2014 2:04 PM, \"Larry Weya\" notifications@github.com wrote:\n\n> It seems both users and profiles endpoint do the same thing. What we need\n> for OAuth is to identify the currently logged in user. Both of those\n> endpoints return a list of all the users.\n> On 20 Jun 2014 17:54, \"Peter Lubell-Doughtie\" notifications@github.com\n> wrote:\n> \n> > is there a reason not to use a profiles https://ona.io/api/v1/profiles\n> > \n> > endpoint?\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/onaio/onadata/issues/357#issuecomment-46687319.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/issues/357#issuecomment-46708391.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46712551/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46716442", "body": "Got it, then /user or /connect sound good to me, /user seems less ambiguous.\nOn Jun 20, 2014 2:57 PM, \"Larry Weya\" notifications@github.com wrote:\n\n> No we don't, we send the user off to authenticate via oauth, we get back a\n> token that we can use to make requests and that the API uses to identity\n> the user on said requests. So only the API knows who the user is.\n> On 20 Jun 2014 21:41, \"Peter Lubell-Doughtie\" notifications@github.com\n> wrote:\n> \n> > I sort of get it but not quite, do you know the user's username? Can ask\n> > for their profile by username?\n> > \n> > Or is it like given an auth token you want the logged in user? What\n> > about\n> > a\n> > /user endpoint?\n> > On Jun 20, 2014 2:04 PM, \"Larry Weya\" notifications@github.com wrote:\n> > \n> > > It seems both users and profiles endpoint do the same thing. What we\n> > > need\n> > > for OAuth is to identify the currently logged in user. Both of those\n> > > endpoints return a list of all the users.\n> > > On 20 Jun 2014 17:54, \"Peter Lubell-Doughtie\" <\n> > > notifications@github.com>\n> > > \n> > > wrote:\n> > > \n> > > > is there a reason not to use a profiles <\n> > > > https://ona.io/api/v1/profiles>\n> > > > \n> > > > endpoint?\n> > > > \n> > > > \u2014\n> > > > Reply to this email directly or view it on GitHub\n> > > > https://github.com/onaio/onadata/issues/357#issuecomment-46687319.\n> > > \n> > > \u2014\n> > > Reply to this email directly or view it on GitHub\n> > > https://github.com/onaio/onadata/issues/357#issuecomment-46708391.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/onaio/onadata/issues/357#issuecomment-46712551.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/issues/357#issuecomment-46714211.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46716442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46886691", "body": "This would be convenient as an additional kv in returned for the dataset, v could be a list.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46886691/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46915290", "body": "Another problem I've noticed is that sometimes the `/owner/[formdid]` endpoint doesn't work despite what form list says.\n\nFor example, if you list the forms for the ona project (w/ukanga's account):\n\n``` bash\ncurl -X GET https://stage.ona.io/api/v1/projects/ona/15/forms -u ukanga:[pass]\n```\n\nit returns:\n\n``` javascript\n[{\"url\": \"http://stage.ona.io/api/v1/forms/ona/1542\", \n  \"formid\": 1542, \n  \"owner\": \"http://stage.ona.io/api/v1/users/ona\", \n  \"public\": false, \n  \"public_data\": false, \n  \"tags\": [], \n  \"description\": \"pootorial3\", \n  \"downloadable\": true, \n  \"allows_sms\": false, \n  \"encrypted\": false, \n  \"sms_id_string\": \"pootorial3\", \n  \"id_string\": \"pootorial3\", \n  \"title\": \"pootorial3\", \n  \"date_created\": \"2014-06-23T23:16:16.212Z\", \n  \"date_modified\": \"2014-06-23T23:16:16.212Z\", \n  \"last_submission_time\": null, \n  \"uuid\": \"170a8d2495b44061ac7bd2373508936a\", \n  \"bamboo_dataset\": \"\", \n  \"instances_with_geopoints\": false, \n  \"num_of_submissions\": -1}]\n```\n\nThis looks pretty good, so we query the form url,\n\n``` bash\ncurl -X GET https://stage.ona.io/api/v1/forms/ona/1542 -u ukanga:[pass]\n```\n\nwhich unfortunately returns\n\n``` javascript\n{\"detail\": \"Not found\"}\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46915290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47329240", "body": "this looks good, the build errors are pretty straightforward, flake8 failure and `NoReverseMatch: Reverse for 'stats-list' with arguments '(u'bob', 231)' and keyword arguments '{}' not found.`\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47329240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47540044", "body": "looks good, merge when green\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47540044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47572185", "body": "will put on staging\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47572185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47597443", "body": "https://github.com/onaio/onadata/pull/371/files\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47597443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47639444", "body": "Why is this the expected behavior?\n On Jul 1, 2014 4:59 AM, \"Roy Rutto\" notifications@github.com wrote:\n\n> Closed #370 https://github.com/onaio/onadata/issues/370.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/issues/370#event-136873760.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47639444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47652792", "body": "Would that return the forms in a project that a user has access to?\n\nThis is different from how it worked before, before it would only return\nthe forms not in any project that the user has access to.\nOn Jul 1, 2014 6:28 AM, \"ukanga\" notifications@github.com wrote:\n\n> For object permissions we use guardian.shortcuts.get_objects_for_user,\n> when a user is a super_user it returns all objects, analogous to a super\n> admin with django admin access. And I agree with this approach, a super\n> user has access to all objects by default. One way to counteract this is to\n> ensure that a super user has no access to the api.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/issues/370#issuecomment-47640466.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47652792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47676790", "body": "I see, is there an endpoint we can add, or an option we can add, in order\nto replicate the old functionality?\n\nI.e., only returning the forms specifically tied to a user. This is needed\nso that we can check for forms without a project and migrate those users'\nforms.\nOn Jul 1, 2014 12:07 PM, \"ukanga\" notifications@github.com wrote:\n\n> If a user has access view permissions the form it will be returned. We are\n> only checking permissions for the form list.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/issues/370#issuecomment-47675822.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47676790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/onaio/onadata/comments/5727706", "body": "write some tests?\n\nukanga wrote:\n\n> @pld https://github.com/pld i believe this is one area where \n> form-shared/public data-shared and active form have functionality removed.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub \n> https://github.com/onaio/onadata/commit/f351ca3c1fc3b97c8c3912ec2f797fe142558aa9#commitcomment-5723450.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/comments/5727706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/comments/6346325", "body": "It was, look at the latest commits.\nOn May 16, 2014 3:18 AM, \"ukanga\" notifications@github.com wrote:\n\n> this should be added down below under DEFAULT_AUTHENTICATION_CLASSES.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/onaio/onadata/commit/37f8d02ce9a0d7451f63822ef128b058676672bb#commitcomment-6345630\n> .\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/comments/6346325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/comments/7758939", "body": "We don't want to change the ID the user has chosen, as explained in the comments and issue description here, https://github.com/onaio/onadata/issues/79\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/comments/7758939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/comments/7991826", "body": ":+1: this looks good\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/comments/7991826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/comments/8100300", "body": "we should not use Mongo here, but instead query from PostgreSQL, since we are deprecating Mongo we shouldn't write any new code that relies on it\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/comments/8100300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/comments/22741247", "body": "\ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/comments/22741247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7856307", "body": "I don't think we need to check for `record` here.  Won't there always be a `record`, otherwise we would have raised an exception above.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7856307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7856455", "body": "Since this is the only part of the dict that varies I would split this along only the varying part, replacing line 139 to 152 with something like below, where we pull out a helper function:\n\n``` python\ndef _get_id_for_type(record, mongo_field):\n    date_field = datetime_from_str(record[mongo_field])\n    mongo_str = '$%s' % mongo_field\n    return {\"$substr\": [mongo_str, 0, 10]} if isinstance(date_field, datetime) else mongo_str\n\ngroup = {\"count\": {\"$sum\": 1}}\ngroup[\"_id\"] = _get_id_for_type(record, mongo_field)\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7856455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7856527", "body": "why only take 10 random forms?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7856527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7856565", "body": "I think an `if else` would clearer here\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7856565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7875371", "body": "I think I see, is the idea that if the user doesn't provide a form ID to the API they can search over all of their forms if they're authenticated otherwise just 10 random forms?  Maybe we shouldn't even provide this option, why not make the form ID required?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7875371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7923410", "body": "OK, in that case, can you remove this?\n\nOn Tue, Nov 26, 2013 at 7:09 AM, ukanga notifications@github.com wrote:\n\n> In api/views.py:\n> \n> > -                \"count\": 102,\n> > -                \"day_of_submission\": \"2013-11-19\",\n> > -            }\n> > -        ]\n> > -    \"\"\"\n> > -    permission_classes = [permissions.IsAuthenticatedOrReadOnly, ]\n> > -    lookup_field = 'owner'\n> > -    lookup_fields = ('owner', 'formid', 'dataid')\n> > -    extra_lookup_fields = None\n> > -    queryset = Instance.objects.all()\n> >   +\n> > -    def _get_accessible_forms(self, owner=None):\n> > -        xforms = []\n> > -        # list public forms incase anonymous user\n> > -        if self.request.user.is_anonymous():\n> > -            xforms = XForm.public_forms().order_by('?')[:10]\n> \n> Looking at /data it returns a list of data urls you have access to e.g\n> \n>    {\n>        \"dhis2form\": \"https://formhub.org/api/v1/data/modilabs/4240\",\n>        \"exp_one\": \"https://formhub.org/api/v1/data/modilabs/13789\",\n>        \"userone\": \"https://formhub.org/api/v1/data/modilabs/10417\",\n>    }\n> \n> hence it gives you discoverability options of data. The api behaves the\n> same way for most end points hence at the time it made sense to provide a\n> list of publicly available forms for anon users. I would echo access to the\n> api require an authenticated user hence there will be no need for this.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/onaio/onadata/pull/18/files#r7922342\n> .\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7923410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7989612", "body": "suggest we use the full namespace here to keep it consistent with the other imports, and to make it clearer to devs\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7989612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7989662", "body": "can we put this form class in its own file and import it?  that will make it easier to move around in the future\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7989662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7989780", "body": "Let's change this to send the notes post to another method that is responsible for only posting a note.  These are two separate that activities, is there any reason to conflate them in a single end-point?\n\nCan we have the view call the API endpoint directly and use that to save the note?  Or if note, becuase packaging is needed, can we have the view call an endpoint that is an adapter which does whatever packaging needed and then calls the API endpoint?  That way the logic for saving notes stays in a single place.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7989780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7989803", "body": "POSTing to the form viewer instance method doesn't seem to fit the semantics of what the form viewer instance method is responsible for.  As mentioned below, can we either post directly to the API or post to an adapter that then calls the API, so that the logic of storing notes stays in a single place?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7989803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7989809", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/7989809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8010974", "body": "I don't see this used anywhere in this file, is the import needed, is the `api/forms.py` file needed?  Am I missing something about django?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8010974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8152946", "body": "should `Export.SAV_EXPORT` also be in this list?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8152946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8153050", "body": "since we use this twice, let's make a local variable for it\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8153050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8153088", "body": "actually, the whole procedure, from lines 2094 to 2111, is repeated multiple times, can we abstract this as a function and pass in the file names as arguments?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8153088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8153525", "body": "please use snake case everywhere for variables in python files, `var_labels`\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8153525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8156257", "body": "Got it, sounds good\nOn Dec 6, 2013 4:53 PM, \"ukanga\" notifications@github.com wrote:\n\n> In odk_viewer/tasks.py:\n> \n> > @@ -27,7 +27,8 @@ def _create_export(xform, export_type):\n> >          'query': query,\n> >      }\n> >      if export_type in [Export.XLS_EXPORT, Export.GDOC_EXPORT,\n> > -                       Export.CSV_EXPORT, Export.CSV_ZIP_EXPORT]:\n> > -                       Export.CSV_EXPORT, Export.CSV_ZIP_EXPORT,\n> > -                       Export.SAV_ZIP_EXPORT]:\n> \n> Export.SAV_EXPORT is not implemented yet, main reason the new export does\n> not have a flat csv export - csv export to a single file - and the old\n> method has some faults. I had asked @larryweyahttps://github.com/larryweyafor some pointers on adding this functionality into the new export. I\n> believe implementing the missing piece in the csv esport will better serve\n> us hence the sav export should use the new functionality when implemented.\n> Currently the repeats go into separate sav files hence the SAV_ZIP_EXPORT.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/onaio/onadata/pull/48/files#r8156186\n> .\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8156257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8221258", "body": "nice, we should do that\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8221258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8365380", "body": "@larryweya for this and all files in `bower_components`, shouldn't we git ignore these like ona-ui does?  Can we use the `bower install` command in the fab file and dev init script to fill this directory?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8365380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8387713", "body": "That makes sense to me.  I could imagine a future version where the JS for the mapview is a node package that we install into the ona-data app.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8387713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8338124", "body": "I think it would be clearer/cleaner to put this into a `get_forms(xml_doc)` function that returns a list of forms.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8338124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8338132", "body": "let's consistently use snake case for variables\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8338132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8338227", "body": "unless functions are only being used as arguments (the way you'd use a lambda function) I think it makes sense to put them at the top level of the class.  That makes it easier to keep track of the functions and also encourages refactoring.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8338227/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8338270", "body": "this could, similarly to above, go in a function `get_instances(xml_doc)` that returns a list of instances\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8338270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8338300", "body": "or maybe `get_uuids` since it looks like this returns a list of UUIDs and not instances\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8338300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8338371", "body": "this might be clearer in an `_upload_instance(xml_file)` function, everything from here to the except clause\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8338371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8547200", "body": "to reduce repetition the below can be in a single loop like:\n\n``` python\nfor e in dd.get_survey_elements_of_type('integer').append(dd.get_survey_elements_of_type('decimal'):\n    xpath = element.get_abbreviated_xpath()\n    k.append(xpath)\n```\n\nI'm not sure what the dd method returns, maybe something other than append is more appropriate.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8547200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8547238", "body": "the precision used in rounding, 2, should be made into a setting.  How about we replace 2 everywhere in this class with a module variable `PRECISION` or `DECIMAL_PRECISION` and add\n\n``` python\nPRECISION = 2\n```\n\nto the top of this file?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8547238/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8547278", "body": "It looks like the classes `MedianViewSet`, `MeanViewSet`, `ModeViewSet`, and `RangeViewSet`, should be combined into a single class to reduce code duplication.  This can take a `statistic_type` or similar parameter that is passed as e.g. `median` and concatenated to get `\"%s-list\" % statistic_type` for the reverse parameter and maybe uses a dict\n\n``` python\n{\n    'median': get_median_for_numeric_fields_in_form,\n    ...,\n}[statistic_type]\n```\n\nto set the data.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8547278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8547299", "body": "this pattern is repeated elsewhere, at least in the stats viewsets list methods, we should probably abstract it into a function like:\n\n``` python\ndef get_permitted_xform(request, formid):\n    try:\n        formid = int(formid)\n    except ValueError:\n        xform = check_and_set_form_by_id_string(formid, request)\n    else:\n        xform = check_and_set_form_by_id(int(formid), request)\n    if not xform:\n        raise exceptions.PermissionDenied(\n            _(\"You do not have permission to \"\n              \"view data from this form.\"))\n\nxform = get_permitted_xform(request, formid)\n```\n\nalthough, does the lack of a returned xform always mean a permission error?  what if the user passed an ID for a non-existent xform?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8547299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8547329", "body": "the scipy install is taking a lot of build time, maybe better to install via dpkg, like bamboo does, https://github.com/pld/bamboo/blob/master/.travis.yml,\n\n```\nbefore_install:\n  - sudo apt-get install -qq gfortran libatlas-base-dev python-numpy python-scipy\n```\n\nand then pin the scipy version to ubuntu's latest, `scipy==0.9.0`, probably worthwhile to pin scipy either way since it's such a large package.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8547329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8549957", "body": "Cool, that explains why the `if not xform` is appropriate.\n\nWhy do you not agree on the need for a function?  Can you suggest a better way to remove the code duplication between this logic and the same here:\nhttps://github.com/onaio/onadata/pull/71/files#diff-fed46cb43c1a9ee6782846d9574102d6R65\nhttps://github.com/kobotoolbox/kobocat/blob/basic-statistics/api/viewsets/data_viewset.py#L299\nhttps://github.com/kobotoolbox/kobocat/blob/basic-statistics/api/viewsets/submissionstats_viewset.py#L87\n\nI do not think it is acceptable to exactly duplicate this amount of code in two places, let alone in 4 places.\n\nIn fact, looking at these methods closer, the owner check could also be pulled out, making the function something like:\n\n``` python\nxform, owner = get_owner_and_xform_from_request(request, formid)\n\nif xform:\n    [logic replacing formid conditional]\nelse:\n   ...\n```\n\nThe name of the function can be improved, but I believe the reasoning behind refactoring at least the `try` through `raise` of this code make sense.  This is the type of function that would be well suited for a permissions management module.  How about we talk about this tomorrow or Friday and figure out what makes sense?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8549957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8642855", "body": "I don't see where in the code it's guaranteeing uniqueness by case insensitive, or finding by case insensitive\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8642855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8642930", "body": "This is where we use the JSON field type, I wanted to get this in as a POC, then we'll convert the rest and abstract more as needed.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8642930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8646251", "body": "this the data migration to handle any existing submissions.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8646251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8604889", "body": "Can we send the exception to a logger class instead of explicitly printing it?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8604889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8604902", "body": "Why not call `.lower()` here and not in the two places below?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8604902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8604966", "body": "I'm trying to parse how this works, SITE_ID sets the SITE_NAME and that then determines the templates.  How would an installation vary SITE_ID, by overriding it in their local settings?  Or does that stay constant and they change the name for SITE__ID 1 through django admin?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8604966/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8604984", "body": "Cool, this is a good start.  As discussed, we would like to move the  `kobocat` app to a separate repository and then include it with git subtrees or submodules, or I suppose we could have a pip library for it, maybe that's even better.  @ukanga @larryweya what do you guys think?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8604984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8606087", "body": "Great, sounds good\nOn Jan 1, 2014 6:00 AM, \"ukanga\" notifications@github.com wrote:\n\n> In formhub/settings.py:\n> \n> > @@ -418,3 +419,20 @@ def configure_logging(logger, **kwargs):\n> >  MONGO_CONNECTION = MongoClient(\n> >      MONGO_CONNECTION_URL, safe=True, j=True, tz_aware=True)\n> >  MONGO_DB = MONGO_CONNECTION[MONGO_DATABASE['NAME']]\n> > +\n> > +try:\n> > -    from django.contrib.sites.models import Site\n> > -    site = Site.objects.get(pk=SITE_ID)\n> >   +except Exception, e:\n> > -    SITE_NAME = 'example.com'\n> > -    print e\n> >   +else:\n> > -    SITE_NAME = site.name\n> >   +# site templates overrides\n> >   +TEMPLATE_DIRS = (\n> \n> SITE_ID is always defined in settings, and the domain and name will be\n> set via django admin. SITE_ID can always be changed in in\n> local_settings.py, in a multi site environment where each site have their\n> own settings file, but share the same database, then SITE_ID = 2, might\n> have a different name and domain all together using the same codebase and\n> database. One reason I have this piece of code after local_settings.pyimport. Someone can always add the lines in their custom settings file with\n> real paths that may not be the same as the site_name, the whole idea was\n> to try to make this a little bit generic and especially for those using\n> formhub.settings\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/onaio/onadata/pull/76/files#r8605697\n> .\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8606087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8606088", "body": "Cool, that makes sense\nOn Jan 1, 2014 5:52 AM, \"ukanga\" notifications@github.com wrote:\n\n> In formhub/settings.py:\n> \n> > @@ -418,3 +419,20 @@ def configure_logging(logger, **kwargs):\n> >  MONGO_CONNECTION = MongoClient(\n> >      MONGO_CONNECTION_URL, safe=True, j=True, tz_aware=True)\n> >  MONGO_DB = MONGO_CONNECTION[MONGO_DATABASE['NAME']]\n> > +\n> > +try:\n> > -    from django.contrib.sites.models import Site\n> > -    site = Site.objects.get(pk=SITE_ID)\n> >   +except Exception, e:\n> > -    SITE_NAME = 'example.com'\n> > -    print e\n> >   +else:\n> > -    SITE_NAME = site.name\n> \n> Mainly because I want to maintain KoBoCAT and OnaData in that case as\n> opposed to having it kobocat and onadata, I wanted to reuse SITE_NAME,\n> and not have a different settings variable for this.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/onaio/onadata/pull/76/files#r8605694\n> .\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8606088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8606105", "body": "Some ideas,\n1. We add any possible UI apps to the main requirements file.  I.e. we put KoBo's UI in a separate repo and pip library (or git repo), then add it to requirements, it gets installed always but changes can be made independently and is only active in specific sites\n2. In the fab deploy script we read a local setting for `TEMPLATE_REPO` or something analogous, and pip install it.  We assume some convention, like there must a pip installable library with the same name, or there must be a github repo with the same name, or maybe there's no additional constant and we assume there's a pip/repo that's`'%s-templates' % SITE_NAME`.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8606105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8606156", "body": "Definitely, potentially we can use this same pattern to add those, the\nmodules go into the specific app and then the deploy specific local\nsettings can refer to them.  I think this is a good place to start.\nOn Jan 1, 2014 10:38 AM, \"ukanga\" notifications@github.com wrote:\n\n> In kobocat/templates/home.html:\n> \n> > @@ -0,0 +1,70 @@\n> > +{% extends 'ona_base.html' %}\n> \n> We need to consider that there will be more than templates, currently we\n> have need for templates and static files. In future we could have views,\n> context processors and more python modules\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/onaio/onadata/pull/76/files#r8606148\n> .\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8606156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8608391", "body": "I forget whether this or `as e` is preferred, I see `as e` elsewhere in the code, we should be consistent.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8608391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8932897", "body": "maybe cleaner and potential faster without an `except`, also do we need to check for a `pk` key with `get`?  below on line 383 we are assuming that it exists.  If we do check we don't need `None` in `get` since that is default.   Assuming no check is needed, what about to replace lines 377 to 383:\n\n``` python\npk = self.kwargs[pk]\nif isinstance(pk, basestring):\n    self.lookup_fields = ('owner', 'id_string')\n    self.kwargs['id_string'] = pk\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8932897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8933130", "body": "this conditional could be a helper function, `if should_regenerate_export(xform, export_type, request)`:\n\n``` python\ndef should_regenerate_export(xform_export_type, request):\n    return should_create_new_export(xform, export_type) or query or\\\n        'start' in request.GET or 'end' in request.GET\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8933130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8933197", "body": "can use\n\n``` python\nquery = request.GET.get(\"query\", {})\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8933197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8933203", "body": "we don't need this check with the above change\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8933203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8933250", "body": "why does this ignore the first character?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8933250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8933360", "body": "for assignments with small blocks I prefer this if/else style,\n\n``` python\nid_string = None if request.GET.get('raw') else xform.id_string\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8933360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8937615", "body": "I see, hmm, now the try except makes sense.  Even sot, can you update it so\nwe either assume pk exists (no `get`) or not?\nOn Jan 16, 2014 11:31 AM, \"ukanga\" notifications@github.com wrote:\n\n> In onadata/apps/api/viewsets/xform_viewset.py:\n> \n> > @@ -285,16 +372,16 @@ class XFormViewSet(mixins.MultiLookupMixin, ModelViewSet):\n> >      extra_lookup_fields = None\n> >      permission_classes = [permissions.DjangoModelPermissions, ]\n> > -    def create(self, request, _args, *_kwargs):\n> > -        survey = utils.publish_xlsform(request, request.user)\n> > -        if isinstance(survey, XForm):\n> > -            xform = XForm.objects.get(pk=survey.pk)\n> > -            serializer = serializers.XFormSerializer(\n> > -                xform, context={'request': request})\n> > -            headers = self.get_success_headers(serializer.data)\n> > -            return Response(serializer.data, status=status.HTTP_201_CREATED,\n> > -                            headers=headers)\n> > -        return Response(survey, status=status.HTTP_400_BAD_REQUEST)\n> > -    def get_object(self, queryset=None):\n> > -        owner, pk = self.lookup_fields\n> > -        try:\n> \n> pk always comes in as a string i.e pk = \"323\" or pk=\"tutorial\", when we\n> are given an int value, we need to use pk, if it is a string then we can\n> use id_string as a last resort.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/onaio/onadata/pull/117/files#r8937424\n> .\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8937615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8957326", "body": "got it\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8957326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8957411", "body": "cool, that looks good to me.  I'd add a comment below the `except` to the effect of\n\n``` python\n# implies pk is a string, assume this represents the id_string\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8957411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9003525", "body": "let's delete instead of commenting these lines, they'll still be in git\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9003525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9003533", "body": "is this TODO still accurate?  I'm not sure what's to do here.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9003533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9005774", "body": "confused by this, is this todo fixed?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9005774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9060451", "body": "We will still have the info in the XML so we could re-parse when we have a useful method of adding it.\n\nRight now only longitude and latitude are being stored so this isn't different from what we are currently doing.\n\nPostGIS is supposed to support altitude through a z-dimension attribute but this didn't work out of the box.  I talked with Ivan about precision and he said this isn't stored in the same record, we could have a precision field that maps to the entries in the geometry collection.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9060451/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9075636", "body": "Odd, I ran this on the production data on my machine and it worked fine, I'll add something to pull the first 2 values only\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9075636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9075727", "body": "Just pushed a potential fix\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9075727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9111715", "body": "remove commented\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9111715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9112168", "body": "sweet, does this mean we can remove that stats app?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9112168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9112207", "body": "what happens when submitting a non-existent field now?  we should have some sort of test\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9112207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9112261", "body": "choices is never being used, can we remove this block?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9112261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9179583", "body": "Let's move these imports to the top of the function, seems to be [preferred](https://stackoverflow.com/questions/1024049/is-it-pythonic-to-import-inside-functions)\n\nAnother good reason is that it makes clear any circular import errors, which should be refactored\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9179583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9179909", "body": "let's move all this javascript to an external file, as well as any other js in this file can be move out\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9179909/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9179918", "body": "let's just delete it\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9179918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9179922", "body": "looks like this function can move to the external file as well\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9179922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9185848", "body": "it looks like `disabled` from line 80 isn't modified in the `each`, could this reuse disabled and be:\n\n``` javascript\ndisable = disable || (selectedField && (selectedField.get('type') !== 'integer' && selectedField.get('type') !== 'decimal'));\n```\n\nor\n\n``` javascript\ndisable ||= (selectedField && (selectedField.get('type') !== 'integer' && selectedField.get('type') !== 'decimal'));\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9185848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9396482", "body": "remove extra line\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9396482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9472124", "body": "is it possible to move the anon function on lines 33 to 50 to a js file?  so that this is something like:\n\n``` javascript\n$(document).ready(moreCharts(chart_url, page));\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9472124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9472183", "body": "let's be consistent and keep the `__init__.py`s empty\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9472183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9472461", "body": "I think it would be clearer to keep this in the try.  Seems like we'd only need it in the else if we are expecting it to raise a `ValueError` exception that we don't want to catch, http://docs.python.org/2/tutorial/errors.html#handling-exceptions\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9472461/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9472656", "body": "docstring?\n\n``` python\n\"\"\"Return the offset and end indices for a slice.\"\"\"\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9472656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9472723", "body": "how about this:\n\n``` python\nstart, end = calculate_ranges(page, CHARTS_PER_PAGE, len(fields))\nfields = fields[start:end]\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9472723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9475158", "body": "Cool, that makes sense, this was good background reading,\nhttp://stackoverflow.com/questions/16138232/is-it-a-good-practice-to-use-try-except-else-in-python\nOn Feb 5, 2014 10:37 PM, \"Larry Weya\" notifications@github.com wrote:\n\n> In onadata/apps/viewer/views.py:\n> \n> > @@ -711,11 +712,24 @@ def charts(request, username, id_string):\n> >      except ValueError:\n> >          lang_index = 0\n> > -    summaries = build_chart_data(xform, lang_index)\n> > -    try:\n> > -        page = int(request.GET.get('page', 0))\n> > -    except ValueError:\n> > -        page = 0\n> > -    else:\n> > -        page = max(page - 1, 0)\n> \n> @pld https://github.com/pld the way I see it is it need to be clear\n> what could cause the exception, which is just the int() function \"It is\n> useful for code that must be executed if the try clause does not raise an\n> exception\" in the reference.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/onaio/onadata/pull/170/files#r9474662\n> .\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9475158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9762193", "body": "consensus seems that there should be a space before the parenthesis and after the `if`:\n\nhttps://github.com/airbnb/javascript#blocks\nhttps://google-styleguide.googlecode.com/svn/trunk/javascriptguide.xml?showone=Function_Declarations_Within_Blocks#Function_Declarations_Within_Blocks\nand Crockford himself, http://javascript.crockford.com/code.html\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9762193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/12089120", "body": "in code docs is OK for now, we'll have to docs on this restriction to the API, I imagine users won't expect this.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/12089120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/12089267", "body": "I agree the better approach is to make this opaque and have users only interact w/the values stored in profiles.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/12089267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/12549404", "body": "create a constant for magic number 2\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/12549404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/12549411", "body": "create a constant for magic number 1024\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/12549411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/12549538", "body": "this seems like a separate component, can we abstract line 64 to 77 into a `create_media(media)` or similar function\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/12549538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/12549618", "body": "why not add to the above conditional with `if ... or ...`? The blocks are equivalent.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/12549618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/12816396", "body": "we can reduce the repetition by putting the `content_type` assignment outside the `if` at line 176,\n\n``` python\ncontent_type = data_file.content_type if data_file.content_type in allowed_types else\\\n    mimetypes.guess_type(data_file.name)[0]\nif content_type in allowed_types:\n    ...\n```\n\nwe're still repeating the `data_file.content_type in` check if it's true the first time, maybe there's an even cleaner way... but this seems OK.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/12816396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/12838877", "body": "Is there ever anything else you would be adding to a team? I don't think so, why not change this endpoint to `add`, i.e. `/api/v1/teams/<owner|org>/<team id|team name>/add`\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/12838877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/12960492", "body": "Missing a / after owner\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/12960492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/12960909", "body": "To reduce the repetition, why not structure this with an if for the read only then in that block an if for the other conditions, e.g.\n\n``` python\nif readonly:\n    owner = ...\n    formid = ...\n    if 'public' in [owner, formid] or request.user.is_anonymous():\n        return True\n...\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/12960909/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/12961148", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/12961148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13698162", "body": "should we have a test for `put` requests as well?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13698162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13698246", "body": "to make it better organized, can we put this class and its related helpers in it's own file?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13698246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13698264", "body": "is there a more descriptive name than `CustomPermissions` that we can use? Are these specifically relevant to `XForm`s, maybe `XFormPermissions`?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13698264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13698472", "body": "let's but this class in it's own file for organization\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13698472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13698496", "body": "put tuple with custom strings in a constant, i.e. `TRUE_VALUES`, same for false below\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13698496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13698667", "body": "this and the above could be one giant `if`, or you could make the `if` condition a separate function, i.e. `if _has_xform_permission(xform, request_user)`, or you could intermediate assign `user = xform.user` after the first if to simplify the calls\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13698667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13705838", "body": "if there are tests for this elsewhere, that's fine.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13705838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13755670", "body": "why is owner necessary? isn't `formid` unique?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13755670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13755705", "body": "per updated issue, let's add `owner` as a role option\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13755705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13755908", "body": "Pretty sure this could be done more concisely and extensibly with\n\n``` python\nROLES = {klass.name: klass for klass in [ReadOnlyRole, ...]}\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13755908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13755976", "body": "maybe clearer with `role` instead of `klass`\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13755976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13756296", "body": "we're checking a map so better to use `if value not in ROLES:`\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13756296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13756418", "body": "related in spirit to https://github.com/onaio/onadata/issues/312\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13756418/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13764505", "body": "It will fail, but it shouldn't. It's a valid use case to test changing an\nrole from owner to editor.\n\nI agree it should be a specific order but it must test for the above case\n(change from more to fewer permissions).\nOn Jun 13, 2014 2:14 PM, \"ukanga\" notifications@github.com wrote:\n\n> In onadata/apps/api/tests/viewsets/test_xform_viewset.py:\n> \n> > @@ -371,3 +371,25 @@ def test_form_delete(self):\n> >          self.assertEqual(response.status_code, 204)\n> >          with self.assertRaises(XForm.DoesNotExist):\n> >              self.xform.reload()\n> > +\n> > -    def test_form_share_endpoint(self):\n> > -        self._publish_xls_form_to_project()\n> > -        alice_data = {'username': 'alice', 'email': 'alice@localhost.com'}\n> > -        alice_profile = self._create_user_profile(alice_data)\n> >   +\n> > -        view = XFormViewSet.as_view({\n> > -            'post': 'share'\n> > -        })\n> > -        formid = self.xform.pk\n> >   +\n> > -        for role, role_class in ROLES.items():\n> \n> With this I would really want to follow a specific order, ideally starting\n> from readonly to owner being last. Otherwise it will always fail when the\n> previous permission was of a superset of the current one.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/pull/328/files#r13764254.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13764505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13786069", "body": "why does this require the owner, isn't the pk enough to identify the project?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13786069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13786105", "body": "if a formid is passed in `kwargs` do we want this to execute?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13786105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13786478", "body": "This is unclear, so when a `formid` is passed in a `POST` this executes, since all it checks is the `POST`, are you saying it gets stopped somewhere down the call path?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13786478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13786516", "body": "OK, this is a big deal in API use since it means auxiliary information (the owner) needs to be passed around even though it's not strictly necessary. Imagine being a database user and having the know the ID of a record and some other attribute to fetch, things that should be lists of ints are now lists of lists or lists of maps. I'm OK putting this off until this issue get's handled, https://github.com/onaio/onadata/issues/312\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13786516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13786562", "body": "go it\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13786562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13862772", "body": "is that how Django stores the anon user?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13862772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13862939", "body": "can we `assertNotContains` email here too?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13862939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13862946", "body": "can we `assertNotContains` email here too?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13862946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13971614", "body": "please make a special constant for 63, we shouldn't have any \"magic numbers\" in our code.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/13971614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14139707", "body": "could use `elsif data:`\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14139707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14139830", "body": "could use the default arg get:\n\n``` python\nlabel = label.get(lang, choice.label.values[0])\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14139830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14146271", "body": "or not, I see now\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14146271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14286591", "body": "why do we care about `SAFE_METHODS` here?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14286591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14348257", "body": "let's leave this out of common, we have it in local_settings on the server, reason is that it's insecure over non-HTTPS connections.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14348257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14508170", "body": "This function body and that of the function starting line 29, are so similar, begging for an abstraction,\n\n``` python\ndef _filter_qs_by(request, queryset, prefix):\n    owner = request.QUERY_PARAMS.get('owner')\n\n    if owner:\n        kwargs = {}\n        kwargs[prefix + '__owner'] = owner\n        return queryset.filter(**kwargs)\n\n    return queryset\n\n_filter_qs_by(request, queryset, 'user')\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14508170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14598775", "body": "what if an exception is raised after line 807 but before this line, won't the zipfile never be deleted? Is this a case worth considering? Should put this `os.remove`, and potential the `temp_file.close` in appropriate final blocks?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14598775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14613517", "body": "does this mean it's only closed if there is an exception?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14613517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14613554", "body": "why do we need is this if we have the finally?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14613554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14613588", "body": "don't we need to check that `zip_file` is not none? what if `create_attach..` raised\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14613588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14613658", "body": "why not in a finally?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14613658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14647251", "body": "Looks like you only care about values, why not iterate over them instead of doing a lookup, `for role in ROLES.values(): if role.has_role...`\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14647251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14647313", "body": "Isn't this the exact same as in project_serialized? Needs to be refactored\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14647313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14700373", "body": "Why the double assignment?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14700373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14678549", "body": ":+1000: for a utf8 edge case test\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14678549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14689019", "body": "duplicate above, line 126, maybe use a compiled regex or something\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14689019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14763538", "body": "is this ensuring that the project is public?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14763538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14763689", "body": "We should also add a test that anon users can view public projects and not private ones\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14763689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14763755", "body": "gotcha, thanks\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14763755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14646954", "body": "How about doing this todo now? Ma be a search for these strings to replace existing occurrences as well.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14646954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14646971", "body": "Is there a more specific exception to catch here?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14646971/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14658648", "body": "Is there a reason to catch and raise again? Isn't this code equivalent to not having a try/catch/else block? Looks like it is to me, in which case we can remove it and add a catch when we have something to catch and a method of handling it\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14658648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14659269", "body": "wait, isn't this just the exact same as the private function in `onadata/apps/logger/views.py`? why not abstract it and use the same function?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14659269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14711124", "body": "Let's keep in viewer tools and import it into the view, viewer tools seems appropriate. Later on we may want to have an `enketo` module that collects all the functions related to enketo.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14711124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14713757", "body": "Also, there's `TESTING_MODE` code here and there throughout, we should change the tests to use mocks and make this unnecessary, but we can do that later.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14713757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14757482", "body": "Regardless, what's the purpose of the try/except/else if the except just raises the same exception? Is this not equivalent to leaving out the try block entirely.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14757482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14821300", "body": "why did this change?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14821300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14821345", "body": "use single if w/and clauses\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14821345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14821402", "body": "is this comment wrong? for non-owners it filters where `require_auth=False`\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14821402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14832964", "body": "I think we should leave this name `require_auth`, it's more descriptive\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14832964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14840084", "body": "this check happens after the instance has been created\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14840084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14840095", "body": "needs to go above near the other check\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14840095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/15461939", "body": "This will iterate twice, once for the list iteration and then once for the filter, I think you could keep this to a single loop by using only a list iteration:\n\n``` python\n[e for e in dd.survey_elements if e.name in fields]\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/15461939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/15806785", "body": "Let's add docs on this new viewset and make sure a link to them shows up in the API page.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/15806785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/16536767", "body": "I agree, no need to return a string, the response code and endpoint name convey that information\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/16536767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17564218", "body": "this doesn't seem right if we want to get the exact role for the user's permissions\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17564218/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17672290", "body": "can you put the `ROLES_ORDERED` const above this and then refer to it here instead of duplicating the list?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17672290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17672634", "body": "isn't this check equivalent to \n\n``` python\nset(cls.class_to_permissions[type(obj)]).issubset(set(permissions))\n```\n\n?\n\neither way, can you explain why this change is necessary? \n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17672634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17673122", "body": "OK, that makes sense, that also explains using `reverse`, so that roles with more permissions are checked first.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17673122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17673155", "body": "Does this work with `issubset`?  I think that would be clearer.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17673155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17674106", "body": "In the example you gave \"a\" is a (strict) subset of \"b\" so it should work\nfor that case.\n\nUnless there's something else complicating it.\nOn Sep 17, 2014 12:03 PM, \"ukanga\" notifications@github.com wrote:\n\n> In onadata/libs/permissions.py:\n> \n> > @@ -59,7 +63,8 @@ def has_role(cls, permissions, obj):\n> >          :param permissions: A list of permissions.\n> >          :param obj: An object to get the permissions of.\n> >          \"\"\"\n> > -        return set(permissions) == set(cls.class_to_permissions[type(obj)])\n> > -        return all([l in set(permissions)\n> \n> It does not work, Dennis had the issubset implementation which failed.\n> Consider a a = [1, 4, 5, 7] and b = [3, 4, 1, 5, 7, 9], if a is the\n> permissions for the role, and b are the list of object permissions passed\n> in for the check, we need to ensure that b has all a permissions.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/pull/545/files#r17673666.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17674106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17674572", "body": "OK, I'll look at and get this merged today.\nOn Sep 17, 2014 12:13 PM, \"ukanga\" notifications@github.com wrote:\n\n> In onadata/libs/permissions.py:\n> \n> > @@ -59,7 +63,8 @@ def has_role(cls, permissions, obj):\n> >          :param permissions: A list of permissions.\n> >          :param obj: An object to get the permissions of.\n> >          \"\"\"\n> > -        return set(permissions) == set(cls.class_to_permissions[type(obj)])\n> > -        return all([l in set(permissions)\n> \n> In that case then it seems we checked with the wrong list.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/pull/545/files#r17674288.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17674572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17684094", "body": "are org users activated later on? what was the password being set to before when the attr wasn't being passed?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17684094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17769422", "body": "There's a reasonable db hit here, `user.profile.organizationprofile` get's called for every list item. We can do this in a single db call, in the future.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17769422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17803504", "body": "couldn't we more simply refer to the final element as `instances[-1]`?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17803504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17803673", "body": "it would be cleaner to combine this with the above line as:\n\n``` python\nform_user = (username and get_object_or_404(User, username=username) or request.user\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17803673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17803833", "body": "Could we add some (very) basic docs for this new endpoint?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17803833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17807162", "body": "K\nOn Sep 19, 2014 4:15 PM, \"ukanga\" notifications@github.com wrote:\n\n> In onadata/apps/api/viewsets/briefcase_api.py:\n> \n> > -        xform = get_object_or_404(queryset, id_string__iexact=formId)\n> > -        self.check_object_permissions(self.request, xform)\n> > -        instances = Instance.objects.filter(xform=xform).order_by('pk')\n> > -        num_entries = self.request.GET.get('numEntries')\n> > -        cursor = self.request.GET.get('cursor')\n> >   +\n> > -        cursor = _parse_int(cursor)\n> > -        if cursor:\n> > -            instances = instances.filter(pk__gt=cursor)\n> >   +\n> > -        num_entries = _parse_int(num_entries)\n> > -        if num_entries:\n> > -            instances = instances[:num_entries]\n> >   +\n> > -        if instances.count():\n> > -            last_instance = instances[instances.count() - 1]\n> \n> Its a queryset, throws\n> \n> AssertionError: Negative indexing is not supported\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/pull/563/files#r17806684.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17807162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17807389", "body": "OK, the reassignment of a var with the same name is what seems a bit\nunclear, but that's fine then\nOn Sep 19, 2014 4:09 PM, \"ukanga\" notifications@github.com wrote:\n\n> In onadata/apps/api/viewsets/briefcase_api.py:\n> \n> > -        if instances.count():\n> > -            last_instance = instances[instances.count() - 1]\n> > -            self.resumptionCursor = last_instance.pk\n> > -        elif instances.count() == 0 and cursor:\n> > -            self.resumptionCursor = cursor\n> > -        else:\n> > -            self.resumptionCursor = 0\n> >   +\n> > -        return instances\n> >   +\n> > -    def create(self, request, _args, *_kwargs):\n> > -        xform_def = request.FILES.get('form_def_file', None)\n> > -        response_status = status.HTTP_201_CREATED\n> > -        username = kwargs.get('username')\n> > -        form_user = username and get_object_or_404(User, username=username)\n> > -        form_user = form_user or request.user\n> \n> It flows to the next line, seemed not that readable, trying to avoid that.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/pull/563/files#r17806435.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17807389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17970458", "body": "is there a way to get this xform set without list iteration, i.e. in a single db call?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17970458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17970497", "body": "why dict iteration and then conversion? just use list iteration, `[xform.shared for xform in xforms]`\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17970497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17970622", "body": "is this check necessary? iterating over an empty list is fine, setting a single instance is cheap\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17970622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17970642", "body": "can we do this bulk update in a single db call for all the xforms?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17970642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17970840", "body": "not sure, if django-docs say it is then this is fine as is\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17970840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17970892", "body": "K, but for that you could wrap `set` around the list iteration\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17970892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17971347", "body": "OK, my bad, I didn't know that, thanks. Why's the list conversion necessary then?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17971347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17971775", "body": "That makes sense, thanks for the explanation, sorry for the noise\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17971775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17846479", "body": "instead of repeating these 6 lines here and on line 268 can we refactor this into a function\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17846479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/18476991", "body": "could you make this line make 79 characters, we format our code according to PEP8 and that's why this is failing the tests. You can add `\\` somewhere reasonable, maybe directly before the `{\"gt...`\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/18476991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/18441435", "body": "That sounds good, we'll make the change.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/18441435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/18477088", "body": "We'll probably use the keys `error` and `success`\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/18477088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19267165", "body": "why do we want to expose this?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19267165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19142285", "body": "I don't think it's good style to overload the return value here, also we should not use `OpenRosaResponseBadRequest`, because this has nothing to do with OpenRosa\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19142285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19142565", "body": "One way to handle this would be to change `json_request2xform` into `create_instance_from_json`,  which checks the submission and returns an `error` as a string, and also handles the `safe_create_instance` call. So replacing lines 162-163 w/ `error, instance = create_instance_from_json(...`\n\nThe else clause on 165-168 can be moved to a `create_instance_from_xml(request.FILES)` helper.\n\nLines 170-175 can be removed.\n\nError response will need to be updated to handle the error being a string, you could add a line on 193 `elif isinstance(error, basestring): error_msg = err` but there's probably a more elegant way.\n\nThoughts on all of the above?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19142565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19267897", "body": "don't even both with a variable, just pass `[]` directly into the function call below\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19267897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19268337", "body": "Given the refactor you should DRY this up be removing the two separate cases of assigning `error, instance`, either:\n\n``` python\nerror, instance = create_instance_from_json(username, request) if\\\n    is_json_request else create_instance_from_xml(username, request)\n```\n\nor\n\n``` python\ncreate_function  = create_instance_from_json if is_json_request else create_instance_from_xml\nerror, instance = create_function(username, request)\n```\n\nor\n\n``` python\nerror, instance = (create_instance_from_json if is_json_request else\n                   create_instance_from_xml)(username, request)\n```\n\nI prefer the bottom 2 because there is less repetition, `repetition==bad`, or maybe you can think of something even cleaner.\n\n@denniswambua  your call\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19268337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19269005", "body": "sounds good\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19269005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19267247", "body": "no brackets, that was just to indicate replacement\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19267247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19267299", "body": "we only need to do this on project creation\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19267299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19267498", "body": "if possible it would be preferred to combine the line 26 filter to this, i.e. can we add a clause to this filter so we only retrieve forms without a ProjectXForm?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19267498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19267534", "body": "let's output something saying \"Create project someProject\"\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19267534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19267539", "body": "let's output the form here too, something like \"Add someForm to Project someProject\"\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19267539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19331356", "body": "OK, @prabhasp reasoning?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19331356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19227975", "body": "instead of line 122 to 125, just put `return Response(status=status.HTTP_400_BAD_REQUEST)` after and outside the `if` statement\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19227975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19276277", "body": "Use `view.action in...`\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19276277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19276868", "body": "We only want to send to the email on file, for security reasons\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19276868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/18722700", "body": "repeated conjunct clause\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/18722700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/18722796", "body": "can we move the string `xls` to a constant list of external_export_types and check membership\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/18722796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/18722937", "body": "I would put from here to line 697 in a separate method\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/18722937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19689965", "body": "why is this here? It is not used.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19689965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19690088", "body": "is the data supposed to be exported? This just returns the `XForm` in XML.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19690088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19690156", "body": "this log code, to line 198, should be in a separate function\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19690156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19690261", "body": "if this happens shouldn't we generate a new export?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19690261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19723682", "body": "But `xform.xml` does not return the data stored in the form, it returns the `XForm` itself as XML. This also needs a test.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19723682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19723773", "body": "but the code didn't change for exports, it was just refactored, why is it needed now but wasn't before? was it broken before?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19723773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19724090", "body": "OK I see, so this `renderer_classes` needs to match that in the `XFormViewset`, I think I get it now, thanks.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19724090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19732180", "body": "OK cool, it's good to merge after this is addressed and rebased\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19732180/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20217346", "body": "remove debug line\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20217346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20221515", "body": "can we throw some docs on this, Sphinx style, https://github.com/onaio/onadata/blob/master/onadata/apps/api/viewsets/xform_submission_api.py#L38\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20221515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20221851", "body": ":+1:, I'm assuming `cStringIO` is faster than `StringIO`, can you change [this function](https://github.com/onaio/onadata/blob/master/onadata/apps/api/viewsets/xform_submission_api.py#L74) to use `cStringIO` too\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20221851/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20222063", "body": "doesn't nested `if`s seem cleaner to you?\n\n``` python\nif submitted_by:\n    users = User.objects.filter(username=submitted_by)\n    if users:\n        instance.user = users[0]\n        instance.save()\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20222063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20222095", "body": "add docstring\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20222095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20222139", "body": ":+1: this method is nice and clean\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20222139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20216276", "body": "Yes, I agree. Dennis can you add a test for that?\nOn Nov 12, 2014 6:22 AM, \"Roy Rutto\" notifications@github.com wrote:\n\n> In onadata/apps/api/tests/viewsets/test_project_viewset.py:\n> \n> > -        self.project = public_project\n> > -        data = {\n> > -            'owner': 'http://testserver/api/v1/users/%s'\n> > -            % self.project.organization.username,\n> > -            'public': True,\n> > -            'public_data': True,\n> > -            'description': u'transportation_2011_07_25',\n> > -            'downloadable': True,\n> > -            'allows_sms': False,\n> > -            'encrypted': False,\n> > -            'sms_id_string': u'transportation_2011_07_25',\n> > -            'id_string': u'transportation_2011_07_25',\n> > -            'title': u'transportation_2011_07_25',\n> > -            'bamboo_dataset': u''\n> > -        }\n> > -        self._publish_xls_form_to_project(publish_data=data)\n> \n> does this test pass when public: False is set in public_data? I think\n> this test is publishing a form with public: False. Might need to test is\n> publishing a form with public: False to a public project makes the form\n> public also.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/pull/675/files#r20213260.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20216276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20054513", "body": "why is `shape` a special case?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20054513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20269853", "body": "Wow, I didn't know there wasn't a simpler way to get the key for value in Python, but [apparently not](https://stackoverflow.com/questions/8023306/get-key-by-value-in-dictionary).\n\nCan you abstract this into a `dict_key_for_value` function (with an appropriate docstring), so that it reads \n\n``` python\nquestion_name = dict_key_for_value(qa_dict, obj.filename)\n```\n\ni.e. function 1st arg is the dict, 2nd is the value and it returns the key.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20269853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "KipSigei": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/1147", "title": "API returns an empty exports list for users with can view and download permissions on public projects", "body": "The exports list for a public project form is empty for an authenticated user with can view and download perms.\r\n\r\n```\r\ncurl -X GET https://api.ona.io/api/v1/export?xform=241260 -u <username>:<password>\r\noutput: [ ]\r\n```", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/846", "title": "Add _submission_time key for filtered datasets", "body": "This will allow date bounds to take effect while exporting filtered datasets.", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dkwamboka": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/1132", "title": "Pulldata() function nested in an if() function doesn't work in Enketo", "body": "Using a pulldata() function nested in an if() function does not work on Enketo.\r\n\r\nIn the form attached, if a person selects the answer to Q2 as Child under 5, then data is pulled using the unique number 1, from the external file, otherwise, whatever number answer given for Q3 is used as the key to pulled data from the external file.\r\n\r\nThis is the error I get on Enketo:\r\n\r\n![if_pulldata](https://user-images.githubusercontent.com/20725261/30632831-2a42034e-9df2-11e7-88ab-0b3196428833.png)\r\n\r\n\r\nI tested this on ODK Collect and it worked fine. This was initially posted [here.](https://github.com/kobotoolbox/enketo-express/issues/818)\r\n\r\nSample form: [if_pulldata.xlsx](https://docs.google.com/spreadsheets/d/1s-6d5rKLX9ruhirHtEKp5-N42s71bR6p__mofu588ys/edit#gid=216006020)\r\nExternal csv: [schools.csv](https://docs.google.com/spreadsheets/d/1hpUM8H6vmGrM91dMU2nhnvM44WEJJopKvxhVfITI5Jg/edit#gid=853565344)\r\nBrowser: Chrome\r\nServer: Ona", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "urbanslug": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/1075", "title": "Find out when celery blocks on an export.", "body": "Sometimes Celery takes too long to finish processing an export and therefore blocks other exports.\r\nAn approach would be to find out when celery blocks on an export and kill the process/get a notification/restart celery. \r\nA solution discussed with @ukanga would be having a separate RabbitMQ server so that export tasks can be distributed over celery servers.", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/1075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/onaio/onadata/commits/a6d50e6a2f9dc1cee16b0a9af2fc6186086c6470", "message": "In progress: include num_of_submissions in merged datasets form json\n\nSigned-off-by: Njagi Mwaniki <njagi@urbanslug.com>"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/8efbcb3b8a1187ddae6f6c40277ebbdf59e9bf69", "message": "Prevent PATCH and PUT merged datasets\n\nCheck that the update method doesn't exist in the viewset\n\nSigned-off-by: Njagi Mwaniki <njagi@urbanslug.com>"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/70c34e3460f27d527b2af7a2545e1b7b6c6ca908", "message": "Make data endpoint respond to GET\n\nTo do: Figure out why the test passes without @detail_route\n\nSigned-off-by: Njagi Mwaniki <njagi@urbanslug.com>"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/64e752b1824c97786689bbe6e1e19d270f3e4989", "message": "Add docs on differences between xforms & merged xforms\n\nSigned-off-by: Njagi Mwaniki <njagi@urbanslug.com>"}, {"url": "https://api.github.com/repos/onaio/onadata/commits/4dca2a88a564d2d7d2c8a7b3796c928385ba7ceb", "message": "NM/UK: Update docs to use double quotes for JSON\n\nSigned-off-by: Njagi Mwaniki <njagi@urbanslug.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "KaruguDev": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/944", "title": "ubuntu 16.04 LTS install script", "body": "only two changes are required\r\n**sudo apt-get install -y postgresql-9.4-postgis-2.1 ~> sudo apt-get install -y postgresql-9.5-postgis-2.1\r\nopenjdk-7-jre ~> openjdk-8-jre**", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/944/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 1, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "skambo": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/901", "title": "Allow submitted_by chart to be grouped by duration", "body": "Currently, it's not possible to group the submission_by chart by duration, and vice versa, please enable support for this.\r\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jasonrogena": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/866", "title": "MQTT Pushes for Form Updates", "body": "Add support for pushing form updates and free form messages to MQTT.\r\n\r\n### Schema updates\r\n\r\nNotification payload should look like:\r\n\r\n```\r\n{\r\n  \"uuid\": \"cf339f09fbfc38766de5cc01ddc5e6c4\",\r\n  \"time\": \"2017-01-01T19:20:30.445+01:00\",\r\n  \"payload\": {\r\n    \"formID\": \"form_2016IRS_HH\",\r\n    \"name\": \"2016 HH Submission Form\",\r\n    \"majorMinorVersion\": \"\",\r\n    \"version\": \"\",\r\n    \"hash\": \"md5:74bd6634aa4c8c510b2c1018d2b55e06\",\r\n    \"descriptionText\": \"\",\r\n    \"downloadUrl\": \"https://odk.ona.io/jrogena/forms/153798/form.xml\",\r\n    \"manifestUrl\": \"https://odk.ona.io/jrogena/xformsManifest/153798\"\r\n  }\r\n}\r\n```\r\n\r\nForm schema can be pushed to one of the following topics, depending on the action:\r\n\r\n - `forms/153798/schema/created`\r\n - `forms/153798/schema/updated`\r\n - `forms/153798/schema/deleted`\r\n\r\n### Free form messages\r\n\r\nNotification payload should look like:\r\n\r\n```\r\n{\r\n  \"uuid\": \"cf339f09fbfc38766de5cc01ddc5e6c4\",\r\n  \"time\": \"2017-01-01T19:20:30.445+01:00\",\r\n  \"payload\": {\r\n    \"id\": \"dfestt3sbtdsfd24dfdsfehssete32fed\",\r\n    \"author\": {\r\n      \"username\": \"jrogena\",\r\n      \"real_name\": \"Jason Rogena\"\r\n    },\r\n    \"form\": {\r\n      \"name\": \"2016 HH Submission Form\",\r\n      \"formId\": \"form_2016IRS_HH\"\r\n    },\r\n    \"message\": \"Quick brown fox does what?\"\r\n  }\r\n}\r\n```\r\n\r\nFree form messages can be pushed to one of the following topics, depending on the action:\r\n\r\n- `forms/153798/message/published`\r\n- `forms/153798/message/edited`\r\n- `forms/153798/message/unpublished`", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "denniswambua": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/830", "title": "XForm num_of_submission not sync with actual data count", "body": "`num_of_submissions` in `/api/v1/forms/[pk]` is different from actual count in `/api/v1/data/[pk]`\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/onaio/onadata/comments/8110662", "body": "Cool, let me do that\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/comments/8110662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/comments/8746141", "body": "@ivermac On the retrieve method, if format is not provided, would it be better to default to json instead of throwing parse error?\n{\n    \"detail\": \"Not supported\"\n}\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/comments/8746141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19268989", "body": "I am not sure why but isn't it what is required for item 2 in issue #559?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19268989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19144631", "body": "I have just googled OpenRosa and I shouldn't have used it. I will see if i can get a better approach to handle the error but this approach is fine. Thanks\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19144631/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19268980", "body": "Nice, never seen the bottom 2 before, if i don't get an even cleaner one i will go with third\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19268980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20275945", "body": "Sure\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20275945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "allankaranja": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/805", "title": "error after manage.py", "body": "  File \"/usr/lib/python2.7/dist-packages/django/db/utils.py\", line 199, in **getitem**\n    conn = backend.DatabaseWrapper(db, alias)\n  File \"/usr/lib/python2.7/dist-packages/django/contrib/gis/db/backends/postgis/base.py\", line 11, in **init**\n    self.ops = PostGISOperations(self)\n  File \"/usr/lib/python2.7/dist-packages/django/contrib/gis/db/backends/postgis/operations.py\", line 158, in **init**\n    if self.spatial_version < (1, 3, 4):\n  File \"/usr/lib/python2.7/dist-packages/django/utils/functional.py\", line 49, in **get**\n    res = instance.**dict**[self.func.**name**] = self.func(instance)\n  File \"/usr/lib/python2.7/dist-packages/django/contrib/gis/db/backends/postgis/operations.py\", line 258, in spatial_version\n    'template?' % self.connection.settings_dict['NAME']\ndjango.core.exceptions.ImproperlyConfigured: Cannot determine PostGIS version for database \"DB_NAME\". GeoDjango requires at leas\nt PostGIS version 1.3. Was the database created from a spatial database template?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bjohare": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/803", "title": "savReaderWriter dependency missing from PyPi", "body": "onadata fails to install because savReaderWriter dependency is missing from PyPi. See https://pypi.python.org/simple/savreaderwriter/\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bcardiff": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/797", "title": "Form version list in export data is unordered", "body": "<img width=\"572\" alt=\"screen shot 2015-09-30 at 2 23 31 am\" src=\"https://cloud.githubusercontent.com/assets/459923/10185121/003edbea-671b-11e5-8104-db1ea1888ce6.png\">\n\nThere is no direct way to export one or a selected subsets of records to json. I recall it was there in the past and it was useful to troubleshoot integration of rest services.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "neilp9": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/795", "title": "correctly generate Enketo preview URL from API", "body": "Enketo preview URLs are being generated [here](https://github.com/onaio/onadata/blob/6ff4011a66e7df1c9f9cf3e2e158b66584980964/onadata/apps/main/views.py#L1329). This is incorrect, see this [discussion](https://groups.google.com/forum/#!topic/enketo-users/t_F2J2n3PC0). Ona needs to get the preview URL from the Enketo API, `POST`ing to `survey/preview`\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/793", "title": "Use ENKETO_PROTOCOL universally", "body": "Ona currently assumes enketo will be able to access the forms server with SSL (https). See [this thread](https://groups.google.com/forum/#!searchin/enketo-users/ona/enketo-users/6ecRelpE3QU/VNoS3ISjCQAJ) for a discussion. Instead, it would be great if Ona doesn't assume SSL for generating form URLs. There is already a setting `ENKETO_PROTOCOL` that is [used in some places](https://github.com/onaio/onadata/search?utf8=%E2%9C%93&q=_get_form_url). It would be great if this is used universally.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/793/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hallahan": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/786", "title": "S3 Setup", "body": "Instead of saving media attachments on the local filesystem, we might want to configure items to be saved to S3. We need instructions on how to set this up.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/785", "title": "SES Email Setup", "body": "After setting up onadata, users cannot sign up, because it never sends out a verification email. We need instructions on how to set this up.\n\nThere is this beast of a document:\n\nhttps://github.com/SEL-Columbia/formhub/wiki/How-To-Run-Your-Own-Formhub-Instances-on-Amazon-Web-Services\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hkmshb": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/782", "title": "Publishing XLSForms with same FormId with different case shouldn't be possible", "body": "It is possible to publish multiple XLSForms with the same FormId if the FormId is written in different case. However both forms are unsable as the URL for operations on these forms are the same.\n\nI created an XLSForm with FormId **'custform01_mrr'** but had to make changes to the form after it was published. I modified the XLSForm and had intended to modify the FormId to read 02 however I had only changed the FormId to **'CustForm01_MRR'**, and I was able to publish it. I only realized the mistake when I couldn't use or delete either of the forms which, as it happens, where both listed under Published Forms.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nathanathan": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/772", "title": "ODK Collect section on getting started page needs update", "body": "The ODK Collect setup instructions on the getting started page (https://ona.io/getting_started/#use-odk-collect) are not very helpful compared to the instructions at http://help.ona.io/faq/odk-collect/ . However, when searching for instructions for using ODK Collect with ona.io, the getting started guide was the first result I found on Google. I recommend removing the ODK Collect instructions on the getting started page so they don't prevent people from finding the better instructions and linking to the FAQ page instead.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hodgestar": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/661", "title": "GPS coordinate 0 0 doesn't appear on maps.", "body": "If we upload a location of \"0 0\" or \"0.0 0.0\" it doesn't appear on the map even though this is a valid GPS coordinate. It's a location in the Gulf of Guinea about 625 km south of Tema, Ghana, so it's probably not that likely to be used unless Ona starts including ships. We didn't check \"0 X\" or \"Y 0\" though -- it's possible those are affected too.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/661/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dorey": {"issues": [{"url": "https://api.github.com/repos/onaio/onadata/issues/189", "title": "API urls are HTTP instead of HTTPS", "body": "As discussed with @ukanga \n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38528327", "body": "Also need the ability to set a survey's description via the API with a PUT update. (on form creation would be good as well)\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38528327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38646516", "body": "API responses return HTTP urls for hyperlinked objects, however when a service uses that URL, it forces a redirect to HTTPS: \nhttps://github.com/onaio/onadata/blob/master/onadata/apps/api/viewsets/organization_profile_viewset.py#L35\n^ in this example, it shows an https URL being returned however the actual output is http\n\nThe client-side fix was to do a `url = item.url.replace(\"http:\", \"https:\")` , so this was not a major blocker, however it did lead to some CORS confusion when trying to get tags working for MYW.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38646516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47596889", "body": "woops\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47596889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "royrutto": {"issues": [], "commits": [{"url": "https://api.github.com/repos/onaio/onadata/commits/d367c53a747377c4882d4d390167a584d0f60553", "message": "Support grouping on non numeric field. (#1128)\n\n- Applies when a non numeric is being grouped by more than one field.\r\n- Also, adds COUNT aggregate to group_by queries."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45984264", "body": "Similar to #300 \n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/45984264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46443312", "body": "It doesn't work on /api/v1/projects/{owner}/{pk}/forms/{formid} just tested it.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46443312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46447044", "body": "Yes it working but not reflecting on the viewer for some reason. \nTesting with curl works but the response on the link does no show the update i.e. https://stage.ona.io/api/v1/forms/ukanga/1517 shows old data after the update while https://stage.ona.io/api/v1/forms/ukanga/1517.json shows the updated\nMight this have something to do with memcache?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46447044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47624457", "body": "@pld Are you using the username **ukanga** to test? We've been testing with @ukanga and found out that a super-user has permissions to all form objects regardless of whether they are private or private data. **ukanga** is a super-user.\nWe've tested with other users where `is_superuser = False` and the entries returned only belong to the user accessing the endpoint.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47624457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47632819", "body": "Same issue as #370. Super user has permissions to all projects.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47632819/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14348315", "body": "Ok :+1: \n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14348315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14655736", "body": ":+1: Thanks, done.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14655736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14655789", "body": "moved the repeated code to permission namespace\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14655789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14763741", "body": "it allows anonymous users to access the of list projects, the actual filter is in https://github.com/onaio/onadata/blob/319-make-public-projects-accessible/onadata/libs/filters.py#L47, will update the comments so that its not confusing.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14763741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14821518", "body": "Oh! A mistake, reverted.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14821518/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20213260", "body": "does this test pass when `public: False` is set in `public_data`? I think this test is publishing a form with `public: True`. Might need to test if publishing a form with  `public: False` to a public project makes the form public also.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20213260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "dalekunce": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/onaio/onadata/pulls/798", "title": "adding AWS install process", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jnm": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/onaio/onadata/pulls/771", "title": "Include 'report_xform' when removing permissions", "body": "Hello, this fixes `onadata.apps.main.views.set_perm()` so that it becomes possible to remove the `report_xform` permission. Thanks for your consideration.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mberg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/onaio/onadata/issues/comments/28878409", "body": "Updated readme.  Not sure if there is anything else.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/28878409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29150905", "body": "Fixed here #19 \n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29150905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29150922", "body": "Is the API updated?  Does it provide support for other columns?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29150922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29151292", "body": "Migration guide\n\nhttp://bootply.com/bootstrap-3-migration-guide\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29151292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29547889", "body": "Completed here #31 \n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29547889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29600635", "body": "Not sure.  Header is really ugly too.  \n\nhttps://ona.io/api/v1/\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29600635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29604400", "body": "Think it's here\n\nhttps://github.com/onaio/onadata/blob/b10901cac186e73fd2d5cae3749b356657c6e4f8/templates/rest_framework/api.html\n\nOn Mon, Dec 2, 2013 at 10:30 AM, Peter Lubell-Doughtie <\nnotifications@github.com> wrote:\n\n> @ukanga https://github.com/ukanga do you know in what file this is\n> getting set? Is it built from the source comments?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/onaio/onadata/issues/38#issuecomment-29604157\n> .\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29604400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29619550", "body": "This seems fixed.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29619550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/30368180", "body": "On Formhub before you login you have the ability to select a language for the interface.  We no longer have this on the Ona Data landing page.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/30368180/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31104265", "body": "Agreed should we create a rocket for that then?\n\nOn Monday, December 23, 2013, Peter Lubell-Doughtie wrote:\n\n> Closed #21 https://github.com/onaio/onadata/issues/21.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/onaio/onadata/issues/21\n> .\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31104265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31811949", "body": "I'll elaborate on some of the points below.  Just to point out in building\nit you are making early design decisions too so it's not bad I think to\nhave some design discussion during the build process.  The reality is these\ndecisions usually do persist for a long time.  It would be ideal if we can\nget design feedback too as we go.\n\nI'm also not pushing for changes that require a full design to be\nimplemented properly.  Yesterday we were trying to figure out with Dickson\nwhere to put the form published date.  The whole dashboard needs to be\nrethought with some info only exposed a level down. We just put it in there\nfor now though because we wanted to finish the ticket.\n\nI do think though it's worth spending some time to discuss the look and\nfunctionality of things as we build it. Ideally we can have that discussion\nbefore we start building in the future.\n\nOn Wednesday, January 8, 2014, Larry Weya wrote:\n\n> @ukanga https://github.com/ukanga @pld https://github.com/pld @mberghttps://github.com/mberg\n> \n> These are Matt's comments on the implemnetation, @mberghttps://github.com/mbergplease add or clarify where you feel appropriate\n> \n>    -\n> \n>    Search bar should be full width similar to\n>    https://github.com/datasets/country-codes/blob/master/data/country-codes.csv#L4\n>    -\n> \n>    Name/label toggle should be a radio button which I feel is just extra\n>    clicks between two radio buttons while its just an on/off thing where a\n>    checkbox is more appropriate\n>    -\n> \n>    How to indicate to the end-user that a row click will open a modal\n>    with the full data (or optionally just go straight into editing but I think\n>    the modal serves a purpose as it allows viewing the data as a whole with\n>    image thumbnails). Suggestions are, hovering button(s), personally I would\n>    prefer a simple click for more tooltip\n> \n> This also brought up the discussion of spending time tinkering with the\n> design before release which I feel slows down productivity. I think its\n> essential to get the functionality in, deploy and then work on the extra\n> aesthetics as and when there is time to, especially since we have a\n> designer on-board and we will do an overhaul of the entire UI as a whole as\n> opposed to bit by bit which would make it inconsistent as the current\n> \n> ## formhub UI has become.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/onaio/onadata backgrid\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/onaio/onadata/pull/84\n> Commit Summary\n> - change if / return style to if / else if style\n> - (almost) meeting jslint standards\n> - only ignore the root static dir\n> - form object\n> - Merge branch '222_jslint' into 222_multiple_map_surveys\n> - jshinting\n> - disable nomen to allow underscores in private var names\n> - Added L.Google and Google maps script files\n> - Refactored FH.Map code to make it instantiatable\n> - Additional documentation\n> - refactored xform.js into its own closure\n> - Ajax mocking and tests\n> - refactored ajax mock to consider request params\n> - removed custome ajax mock and replaced with sinonjs as a node module\n> - Data API quering and test refactoring to use sinon\n> - FeatureLayer/Set and markers implementation\n> - back to circle markers\n> - re-fit map bound whenever a dataset is added\n> - some refactoring\n> - allow marker styles to be specified within options\n> - attach markers on add\n> - re-calc bounds on add and remove layers\n> - re-calc bounds on add and remove layers\n> - Merge branch '222_multiple_map_surveys' of github.com:modilabs/formhub\n>   into 222_multiple_map_surveys\n> - assign colors for each dataset added to the map\n> - basic marker popup\n> - auto-scroll map modal body\n> - functional map modal\n> - Added bower for JS packag dependency\n> - implemnted multi-language within map popups\n> - Added datavore object\n> - Getting the hang of branching\n> - Added an index to the uuid columns in both the odk_logger_xform and\n>   odk_logger_instance tables as a schema migrationto be applied by\n>   south/fabric\n> - removing stats counts on the homepage; will add it elsewhere\n> - Fixed the accidental omission of the db module import from south\n> - Merge pull request #1267 from SEL-Columbia/mysql-uuid-index\n> - Use path instead of name to handle groupings\n> - start with the whole world?\n> - Updated the core settings file to include a custom logger for\n>   ignoring SuspiciousOperation exceptions from being sent via email as 500\n>   errors, since they are not real server errors and relate instead to the\n>   ALLOWED_HOSTS setting, which is new in django v. 1.4.4 and later.\n> - ts change\n> - removing unused round_down_point and round_down_geopoint\n> - Merge pull request #1271 from SEL-Columbia/skip_suspicious_operations\n> - no longer calling removed tests\n> - Merge pull request #1272 from SEL-Columbia/no_points_query_on_map\n> - Merge pull request #1268 from SEL-Columbia/no_counts_on_homepage\n> - Changed how ParsedInstance objects are converted to mongodb\n>   documents: if there is no deleted date attribute, it should not be present\n>   in the document at all (this will also simplify the corresponding query).\n> - Updated the mongodb queries accordingly: since {\"_deleted_at\": None}\n>   is logically equivalent to \"\": [{\"_deleted_at\": {\"\": False}},\n>   {\"_deleted_at\": None}] there is no reason to introduce an additional 'or'\n>   clause in the query.\n> - The variable: value combination '_deleted_at': None should not be\n>   part of the expected_data dict in the pdk_viewer tests.\n> - Another adjustment to the test: if a field is truly\n>   optional/ignorable, it may not be present in a given dict, so don't pop it\n>   off w/o checking first.\n> - More tests expected {'_deleted_at': None} -- at least they were\n>   consistent.\n> - Why does '_deleted_at' exist in\n>   AbstractDataFrameBuilder.IGNORED_COLUMNS and then is _required_ in a test?\n> - Merge pull request #1273 from\n>   SEL-Columbia/odk_viewer-parsed_instance-streamlining\n> - view by part 1\n> - color markers and legend texts\n> - marker filtering via legend options\n> - opacity to 0 and 1 respectively\n> - use undefined for empty values in legend filters\n> - renamed all _that instances to relevant var names\n> - fixed bug when 1 reponse is available for the legend\n> - langauge selector\n> - Added photos to popup\n> - enketo edit functionality\n> - Implemented delete\n> - removed ipython and added django-kombu for local async tasks\n> - merged with master\n> - position zoom control at top-right\n> - map template to use blocks\n> - Added datatables via bower\n> - repositioned datasets view to top left\n> - Initial move to data tables for data view\n> - replaced datatables with dynatables\n> - Updated dynatable and fixed hack to use pr-init\n> - horizontal table scrolling\n> - css file for horizontal scrolling\n> - Implemnted data view using backgrid\n> - implemented select label toggling and tests\n> - filter on all but select fields\n> - language picker\n> - only show language picker if multilang\n> - changed toggle label to make it clearer\n> - remove left margin on container's first child\n> - increase page size and add bootstrap stripe and hover classes\n> - clickable row initial implemnetation\n> \n> File Changes\n> - _A_ .bowerrc https://github.com/onaio/onadata/pull/84/files#diff-0(3)\n> - _M_ .gitignorehttps://github.com/onaio/onadata/pull/84/files#diff-1(4)\n> - _A_ .jshintrc https://github.com/onaio/onadata/pull/84/files#diff-2(10)\n> - _M_ api/tests/test_data_api.pyhttps://github.com/onaio/onadata/pull/84/files#diff-3(2)\n> - _A_ bower.jsonhttps://github.com/onaio/onadata/pull/84/files#diff-4(27)\n> - _M_ formhub/settings.pyhttps://github.com/onaio/onadata/pull/84/files#diff-5(30)\n> - _A_ main/static/bower_components/backbone/backbone-min.jshttps://github.com/onaio/onadata/pull/84/files#diff-6(2)\n> - _A_ main/static/bower_components/backbone/backbone-min.maphttps://github.com/onaio/onadata/pull/84/files#diff-7(1)\n> - _A_\n>   main/static/bower_components/backgrid/assets/css/bootstrap-responsive.csshttps://github.com/onaio/onadata/pull/84/files#diff-8(1092)\n> - _A_\n>   main/static/bower_components/backgrid/assets/css/bootstrap-responsive.min.csshttps://github.com/onaio/onadata/pull/84/files#diff-9(9)\n> - _A_ main/static/bower_components/backgrid/assets/css/bootstrap.csshttps://github.com/onaio/onadata/pull/84/files#diff-10(6039)\n> - _A_\n>   main/static/bower_components/backgrid/assets/css/bootstrap.min.csshttps://github.com/onaio/onadata/pull/84/files#diff-11(9)\n> - _A_ main/static/bower_components/backgrid/assets/css/doc.csshttps://github.com/onaio/onadata/pull/84/files#diff-12(101)\n> - _A_ main/static/bower_components/backgrid/assets/css/jasmine.csshttps://github.com/onaio/onadata/pull/84/files#diff-13(82)\n> - _A_ main/static/bower_components/backgrid/assets/css/select2.csshttps://github.com/onaio/onadata/pull/84/files#diff-14(615)\n> - _A_\n>   main/static/bower_components/backgrid/assets/img/forkme_right_gray_6d6d6d.pnghttps://github.com/onaio/onadata/pull/84/files#diff-15(0)\n> - _A_\n>   main/static/bower_components/backgrid/assets/img/glyphicons-halflings-white.pnghttps://github.com/onaio/onadata/pull/84/files#diff-16(0)\n> - _A_\n>   main/static/bower_components/backgrid/assets/img/glyphicons-halflings.pnghttps://github.com/onaio/onadata/pull/84/files#diff-17(0)\n> - _A_\n>   main/static/bower_components/backgrid/assets/img/select2-spinner.gifhttps://github.com/onaio/onadata/pull/84/files#diff-18(0)\n> - _A_ main/static/bower_components/backgrid/assets/img/select2.pnghttps://github.com/onaio/onadata/pull/84/files#diff-19(0)\n> - _A_ main/static/bower_components/backgrid/assets/img/select2x2.pnghttps://github.com/onaio/onadata/pull/84/files#diff-20(0)\n> - _A_\n>   main/static/bower_components/backgrid/assets/js/backbone-pageable.jshttps://github.com/onaio/onadata/pull/84/files#diff-21(1315)\n> - _A_ main/static/bower_components/backgrid/assets/js/backbone.jshttps://github.com/onaio/onadata/pull/84/files#diff-22(1571)\n> - _A_ main/static/bower_components/backgrid/assets/js/bootstrap.jshttps://github.com/onaio/onadata/pull/84/files#diff-23(2159)\n> - _A_ main/static/bower_components/backgrid/assets/js/jasmine-html.jshttps://github.com/onaio/onadata/pull/84/files#diff-24(681)\n> - _A_ main/static/bower_components/backgrid/assets/js/jasmine.jshttps://github.com/onaio/onadata/pull/84/files#diff-25(2600)\n> - _A_ main/static/bower_components/backgrid/assets/js/jquery.jshttps://github.com/onaio/onadata/pull/84/files#diff-26(9597)\n> - _A_ main/static/bower_components/backgrid/assets/js/lunr.jshttps://github.com/onaio/onadata/pull/84/files#diff-27(1557)\n> - _A_\n>   main/static/bower_components/backgrid/assets/js/moment/lang/ar-ma.jshttps://github.com/onaio/onadata/pull/84/files#diff-28(5)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/ar.jshttps://github.com/onaio/onadata/pull/84/files#diff-29(4)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/bg.jshttps://github.com/onaio/onadata/pull/84/files#diff-30(4)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/ca.jshttps://github.com/onaio/onadata/pull/84/files#diff-31(4)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/cs.jshttps://github.com/onaio/onadata/pull/84/files#diff-32(4)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/cv.jshttps://github.com/onaio/onadata/pull/84/files#diff-33(4)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/da.jshttps://github.com/onaio/onadata/pull/84/files#diff-34(4)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/de.jshttps://github.com/onaio/onadata/pull/84/files#diff-35(4)\n> - _A_\n>   main/static/bower_components/backgrid/assets/js/moment/lang/en-ca.jshttps://github.com/onaio/onadata/pull/84/files#diff-36(4)\n> - _A_\n>   main/static/bower_components/backgrid/assets/js/moment/lang/en-gb.jshttps://github.com/onaio/onadata/pull/84/files#diff-37(4)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/eo.jshttps://github.com/onaio/onadata/pull/84/files#diff-38(6)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/es.jshttps://github.com/onaio/onadata/pull/84/files#diff-39(4)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/et.jshttps://github.com/onaio/onadata/pull/84/files#diff-40(4)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/eu.jshttps://github.com/onaio/onadata/pull/84/files#diff-41(4)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/fi.jshttps://github.com/onaio/onadata/pull/84/files#diff-42(4)\n> - _A_\n>   main/static/bower_components/backgrid/assets/js/moment/lang/fr-ca.jshttps://github.com/onaio/onadata/pull/84/files#diff-43(4)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/fr.jshttps://github.com/onaio/onadata/pull/84/files#diff-44(4)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/gl.jshttps://github.com/onaio/onadata/pull/84/files#diff-45(4)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/he.jshttps://github.com/onaio/onadata/pull/84/files#diff-46(5)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/hu.jshttps://github.com/onaio/onadata/pull/84/files#diff-47(4)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/id.jshttps://github.com/onaio/onadata/pull/84/files#diff-48(5)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/is.jshttps://github.com/onaio/onadata/pull/84/files#diff-49(4)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/it.jshttps://github.com/onaio/onadata/pull/84/files#diff-50(4)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/ja.jshttps://github.com/onaio/onadata/pull/84/files#diff-51(4)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/jp.jshttps://github.com/onaio/onadata/pull/84/files#diff-52(64)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/ko.jshttps://github.com/onaio/onadata/pull/84/files#diff-53(4)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/kr.jshttps://github.com/onaio/onadata/pull/84/files#diff-54(61)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/lv.jshttps://github.com/onaio/onadata/pull/84/files#diff-55(4)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/nb.jshttps://github.com/onaio/onadata/pull/84/files#diff-56(4)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/ne.jshttps://github.com/onaio/onadata/pull/84/files#diff-57(4)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/nl.jshttps://github.com/onaio/onadata/pull/84/files#diff-58(4)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/pl.jshttps://github.com/onaio/onadata/pull/84/files#diff-59(4)\n> - _A_\n>   main/static/bower_components/backgrid/assets/js/moment/lang/pt-br.jshttps://github.com/onaio/onadata/pull/84/files#diff-60(4)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/pt.jshttps://github.com/onaio/onadata/pull/84/files#diff-61(4)\n> - _A_ main/static/bower_components/backgrid/assets/js/moment/lang/ro.jshttps://github.com/onaio/onadata/pull/84/files#diff-62(5)\n> - _A_\n>   main/static/bower_components/backgrid/assets/js/moment/lang/ru.js<https://github.com/onaio/onadata/pull/84/files#diff-63\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31811949/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31822077", "body": "On the following issues:\n\nSearch bar should be full width similar to https://github.com/datasets/country-codes/blob/master/data/country-codes.csv#L4\n\nMB> I've seen a number of table implementations where they put the search right on top.  Below is how github does it which I think looks pretty good.  The other advantage I see here with this is it keeps the two ui components together which I think will carry over better to a mobile view.  It also makes the search subtle.\n\nhttps://github.com/datasets/country-codes/blob/master/data/country-codes.csv\n\nName/label toggle should be a radio button which I feel is just extra clicks between two radio buttons while its just an on/off thing where a checkbox is more appropriate\n\nMB> If we go with a checkbox then we just have to figure out how to do the language.  The reason i said a radio / toggle would be better is we are switching between a data label and data value.\n\nHow to indicate to the end-user that a row click will open a modal with the full data (or optionally just go straight into editing but I think the modal serves a purpose as it allows viewing the data as a whole with image thumbnails). Suggestions are, hovering button(s), personally I would prefer a simple click for more tooltip\n\nMB> I think using the modal for editing makes a lot of sense as it will allow us to use the same component for both the maps and data grids.  We need a visual queue though for indicating how to edit a row.  We could do something with the mouse over as I think @larryweya you were indicating.  On another would be maybe an edit that would float on the left side as you scroll left and right.  It's a tough one to figure out well for sure.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/31822077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32285517", "body": "It's a temporary bug we just created\n\nOn Tuesday, January 14, 2014, Carolyn Gulas wrote:\n\n> I know this was closed, but when I open my onadata account, the internet\n> page still shows formhub. @pld https://github.com/pld\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/onaio/onadata/issues/44#issuecomment-32285358\n> .\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32285517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32336526", "body": "I can take this on when I work on css tweaks.\n\n@larryweya can we move front end components to bower? Or is that not possible with django?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32336526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32336779", "body": "I mean using it for compiling the css and javascript for CDN friendly deploys, etc.  Also makes reverse engineering of code more difficult. That also might be part of grunt.  I get the different things confused.  I'll talk to him today to figure it out.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32336779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/33102190", "body": "Let's actually give this some thought.\n\nIf we do it this way let's flip the order of the sort so the top bar is on top.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/33102190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/33715316", "body": "Cool. Let's close if we know it's a known issue.  We might want to think\nabout solutions for this down the road.\n\nOn Thu, Jan 30, 2014 at 9:06 PM, ukanga notifications@github.com wrote:\n\n> ODK Briefcase only deals with the xform and the submissions. There is no\n> mechanism for briefcase, to download the xls file, and no way yet to add\n> the xls file without regenerating the xform xml, may be as a media support\n> document but independent of briefcase.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/onaio/onadata/issues/164#issuecomment-33715018\n> .\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/33715316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/34036829", "body": "Thanks @rowo looks good\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/34036829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/35150345", "body": "Fixed. I am awesome.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/35150345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/36623834", "body": "I think we want to retain the idea of form routing.\n\nBy form routing I mean, when you publish a form within Ona a globally unique formid is generated.  This formid is used to do the routing (not where the client like ODK is pointing).  \n\nThe advantages of this is:\n-  submission routing is simplified.  \n- Doesn't require any configuration on the client.  \n- It allows you to submit forms to different users / projects without having to change the client.  Right now you have to repoint ODK Collect which is super annoying.\n\nCons\n- The form has to be published in Ona or it will be rejected.  This may cause an issue with legacy forms.   Long term, I think this actually may be a bonus.\n\nWe can fall back to traditional ODK routing if the formid is missing and they have the client configured properly.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/36623834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38504467", "body": "Sweet so is this resolved now?\n\nOn Monday, March 24, 2014, Peter Lubell-Doughtie notifications@github.com\nwrote:\n\n> Merged #210 https://github.com/onaio/onadata/pull/210.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/onaio/onadata/pull/210\n> .\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38504467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38507303", "body": "Cool we should contribute this back as a patch to FH too.\n\nOn Tuesday, March 25, 2014, Peter Lubell-Doughtie notifications@github.com\nwrote:\n\n> deploying now.\n> \n> Matt Berg wrote:\n> \n> > Sweet so is this resolved now?\n> > \n> > On Monday, March 24, 2014, Peter Lubell-Doughtie\n> > <notifications@github.com<javascript:_e(%7B%7D,'cvml','notifications@github.com');>\n> > \n> > wrote:\n> > \n> > > Merged #210 https://github.com/onaio/onadata/pull/210.\n> > > \n> > > ## \n> > > \n> > > Reply to this email directly or view it on\n> > > GitHubhttps://github.com/onaio/onadata/pull/210\n> > > .\n> > \n> > ## \n> > \n> > Reply to this email directly or view it on GitHub\n> > https://github.com/onaio/onadata/pull/210#issuecomment-38504467.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/onaio/onadata/pull/210#issuecomment-38504536\n> .\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38507303/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38641325", "body": "Thanks Peter appreciate it!\n\nOn Tuesday, March 25, 2014, Peter Lubell-Doughtie notifications@github.com\nwrote:\n\n> Added description:\n> \n> This branch is on production, if you check out wb_vietnam you'll notice\n> all the images that show in the children we're already included in the list\n> of images at the top. At the top it displays any attachments submitted with\n> the form, be they in repeats or not.\n> \n> Some of the images are broken links, perhaps because they were not\n> properly uploaded.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/onaio/onadata/pull/214#issuecomment-38640675\n> .\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/38641325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41080012", "body": "We'll need to figure out how to integrate this into the site.\n\nWe could link to now to this but it would be ideal if the text is just included as a page off the site.  \n\nWe should get this up before we start hosting data for SDI as they were one of the main reasons we wrote this up.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/41080012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/44860878", "body": "Yes and yes I think\nOn Jun 2, 2014 7:11 PM, \"Peter Lubell-Doughtie\" notifications@github.com\nwrote:\n\n> 1. can projects be shared with individual users and with different\n>    permission levels?\n> 2. can a project be \"public\", i.e. accessible to users without a login?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/issues/309.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/44860878/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/44864058", "body": "Sorry I didn't realize these were questions related to current\nfunctionality of the api\nOn Jun 2, 2014 7:55 PM, \"Peter Lubell-Doughtie\" notifications@github.com\nwrote:\n\n> These are \"prove it\" question. Please provide documentation indicating how\n> to do this, and code references. It is not currently documented or trivial\n> visible in the code.\n> On Jun 2, 2014 12:40 PM, \"Matt Berg\" notifications@github.com wrote:\n> \n> > Yes and yes I think\n> > On Jun 2, 2014 7:11 PM, \"Peter Lubell-Doughtie\" <\n> > notifications@github.com>\n> > \n> > wrote:\n> > \n> > > 1. can projects be shared with individual users and with different\n> > >    permission levels?\n> > > 2. can a project be \"public\", i.e. accessible to users without a\n> > >    login?\n> > > \n> > > \u2014\n> > > Reply to this email directly or view it on GitHub\n> > > https://github.com/onaio/onadata/issues/309.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/onaio/onadata/issues/309#issuecomment-44860878.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/issues/309#issuecomment-44862551.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/44864058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46021009", "body": "We will need to do that.\n\nWe could do something like user's project and allow them to rename.\n\nIe) . Matt verg's project or mberg's forms.  Think long name is probably\nbetter and to try and use the word project\nOn Jun 13, 2014 10:51 PM, \"ukanga\" notifications@github.com wrote:\n\n> Do we need to have a default project? what name will it be? Do we need to\n> migrate all existing forms to a default project?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/issues/300#issuecomment-46020456.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46021009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46433873", "body": "Cool has this helped performance any?\nOn Jun 18, 2014 5:21 PM, \"ukanga\" notifications@github.com wrote:\n\n> Merged #348 https://github.com/onaio/onadata/pull/348.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/pull/348#event-132553917.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46433873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47626122", "body": "I'm a super user too so maybe that's the issue\nOn Jul 1, 2014 10:19 AM, \"Roy Rutto\" notifications@github.com wrote:\n\n> @pld https://github.com/pld Are you using the username _ukanga_ to\n> test? We've been testing with @ukanga https://github.com/ukanga and\n> found out that a super-user has permissions to all form objects regardless\n> of whether they are private or private data.\n> We've test with other users where is_superuser = False and the entries\n> returned only belong to the user accessing the point.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/issues/370#issuecomment-47624457.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47626122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47639514", "body": "It shouldn't be\nOn Jul 1, 2014 1:16 PM, \"Peter Lubell-Doughtie\" notifications@github.com\nwrote:\n\n> Why is this the expected behavior?\n> On Jul 1, 2014 4:59 AM, \"Roy Rutto\" notifications@github.com wrote:\n> \n> > Closed #370 https://github.com/onaio/onadata/issues/370.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/onaio/onadata/issues/370#event-136873760.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/issues/370#issuecomment-47639444.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/47639514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9066886", "body": "I don't think they are supported in geojson . Since it only relates to a\npoint and not other types of geometry we will store it probably is best to\nstore at least initially in seperate altitude and accuracy fields.\n\nOn Wednesday, January 22, 2014, Peter Lubell-Doughtie <\nnotifications@github.com> wrote:\n\n> In onadata/apps/odk_logger/models/instance.py:\n> \n> > -    def get_root_node(self):\n> > -        self._set_parser()\n> > -        return self._parser.get_root_node()\n> > -        if len(geo_xpaths):\n> > -            for xpath in geo_xpaths:\n> > -                # TODO store the altitude and precision\n> \n> We will still have the info in the XML so we could re-parse when we have a\n> useful method of adding it. Right now only longitude and latitude are being\n> stored so this isn't different from what we are currently doing. PostGIS is\n> supposed to support altitude through a z-dimension attribute but this\n> didn't work out of the box. I talked with Ivan about precision and he said\n> this isn't stored in the same record, we could have a precision field that\n> maps to the entries in the geometry collection.\n> \u2026 <#143b742004625596_>\n> On Jan 21, 2014 5:00 PM, \"ukanga\" <notifications@github.com<javascript:_e({}, 'cvml', 'notifications@github.com');>>\n> wrote: In onadata/apps/odk_logger/models/instance.py: > > - def\n> get_root_node(self): > - self._set_parser() > - return\n> self._parser.get_root_node() > + if len(geo_xpaths): > + for xpath in\n> geo_xpaths: > + # TODO store the altitude and precision Is there a specific\n> reason why altitude and precision could not be added at this particular\n> time? I tend to see a lot records with the 4 values, does it mean we are\n> likely to loose this information on migration? \u2014 Reply to this email\n> directly or view it on GitHub<\n> https://github.com/onaio/onadata/pull/128/files#r9056472> .\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/onaio/onadata/pull/128/files#r9060451\n> .\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9066886/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "larryweya": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29627347", "body": "@mberg fixed, we changed how mapability is looked up so needed to run a command to determine what surveys have maps.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29627347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/30338121", "body": "@mberg could you clarify this?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/30338121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/30686474", "body": "@pld Yes this gets rid of the old js form and data managers, which are currently still in the source but will be deprecated once this branch is complete. This is basically a re-write using backbone.js to keep the code cleaner, easier to follow, remove the tight coupling between the different modules and allow better js testing.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/30686474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32023747", "body": "@pld test/javascripts sounds good, to make them project wide as well\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32023747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32166334", "body": "@pld @ukanga Its good to merge now\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32166334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32261613", "body": "The instance view needs to be replaced with the data modal similar to (actually the same module) as the map code, this will make editing from both table and map consistent. Thoughts are welcome @pld @ukanga @mberg\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32261613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/34866670", "body": "@mberg could we get the account and name of the form where Answers dont show up?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/34866670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/34866797", "body": "Also for the form with the Enketo editing issue.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/34866797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/35233467", "body": "@ukanga can we have a simple test for this\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/35233467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46529900", "body": "@ukanga seems like we could just use .get on the dict because we are checking for Nones\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46529900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46708391", "body": "It seems both users and profiles endpoint do the same thing. What we need\nfor OAuth is to identify the currently logged in user. Both of those\nendpoints return a list of all the users.\nOn 20 Jun 2014 17:54, \"Peter Lubell-Doughtie\" notifications@github.com\nwrote:\n\n> is there a reason not to use a profiles https://ona.io/api/v1/profiles\n> endpoint?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/issues/357#issuecomment-46687319.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46708391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46714211", "body": "No we don't, we send the user off to authenticate via oauth, we get back a\ntoken that we can use to make requests and that the API uses to identity\nthe user on said requests. So only the API knows who the user is.\nOn 20 Jun 2014 21:41, \"Peter Lubell-Doughtie\" notifications@github.com\nwrote:\n\n> I sort of get it but not quite, do you know the user's username? Can ask\n> for their profile by username?\n> \n> Or is it like given an auth token you want the logged in user? What about\n> a\n> /user endpoint?\n> On Jun 20, 2014 2:04 PM, \"Larry Weya\" notifications@github.com wrote:\n> \n> > It seems both users and profiles endpoint do the same thing. What we\n> > need\n> > for OAuth is to identify the currently logged in user. Both of those\n> > endpoints return a list of all the users.\n> > On 20 Jun 2014 17:54, \"Peter Lubell-Doughtie\" notifications@github.com\n> > \n> > wrote:\n> > \n> > > is there a reason not to use a profiles <\n> > > https://ona.io/api/v1/profiles>\n> > > \n> > > endpoint?\n> > > \n> > > \u2014\n> > > Reply to this email directly or view it on GitHub\n> > > https://github.com/onaio/onadata/issues/357#issuecomment-46687319.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/onaio/onadata/issues/357#issuecomment-46708391.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/issues/357#issuecomment-46712551.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46714211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8198349", "body": "@pld We can make use of the [prefix context manager](http://docs.fabfile.org/en/1.8/api/core/context_managers.html) in place of our custom run_in_virtualenv funcction\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8198349/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8375985", "body": "@pld As much as that was the original intention, there are 2 schools of though on the matter, I'm of the opinion that the js files are too lightweight to have the whole application dependent on nodejs and bower to run. I came to that conclusion after reading [this](http://addyosmani.com/blog/checking-in-front-end-dependencies/). Let me know what you think.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/8375985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9113640", "body": "@pld create an issue for it\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9113640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9474662", "body": "@pld the way I see it is it need to be clear what could cause the exception, which is just the int() function \"It is useful for code that must be executed if the try clause does not raise an exception\" in the reference.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9474662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9474688", "body": "Sorry, Pycharm does this, there must be a disable option.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9474688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9783662", "body": "@pld noted and fixed\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/9783662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "rowo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29858946", "body": "RW: The syntax page still contains references to Formhub and links to the Formhub University account (https://ona.io/syntax/)\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/29858946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "cagulas": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32285358", "body": "I know this was closed, but when I open my onadata account, the internet page still shows formhub. @pld \n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/32285358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "vernondcole": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/onaio/onadata/issues/comments/37103490", "body": "Gessh!  That was cold, Peter!  \n\nI stayed up until 4:30 a.m. working on this for a one sentence \"go away and leave us alone?\" \n\nI was planning to switch our server and development efforts over from formhub to ona, but if this is the kind of co-operation your group normally gives, I will reconsider.\n\nAs the man said about settings modules: \" It\u2019s something that everyone has their own opinion on, and everyone argues about.\"  It is interesting that my first version is so much like his \"perfect\" one.\n-- obviously, I don't think it is very perfect, or I would not have spent these last several days removing the warts.\n\nI have fixed that last one-line error that I inadvertently introduced -- just in case someone reconsiders.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/37103490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "geoffreymuchai": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46530089", "body": "I will try that and see how it goes\n\nOn Thu, Jun 19, 2014 at 10:08 AM, Larry Weya notifications@github.com\nwrote:\n\n> @ukanga https://github.com/ukanga seems like we could just use .get on\n> the dict because we are checking for Nones\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/onaio/onadata/issues/354#issuecomment-46529900.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/issues/comments/46530089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/onaio/onadata/comments/7991820", "body": "@pld I had to add a check to see if the user object passed to the remove_obj_permissions is an instance of Team. I was considering refactoring this to clearly handle the differences between users and teams but i didn't know whether that would be overkill.\n\nWhat do you think?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/comments/7991820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14007794", "body": "ok\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14007794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14658342", "body": "I dunno.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14658342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14710893", "body": "It is the exact function. I agree with the idea of abstracting it but not sure exactly where to put it\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14710893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14711176", "body": "To be honest, I am not sure whether the enketo_url code raises a specific exception but I will check to see that we can safely remove the try..catch\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14711176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14753731", "body": "@pld I just reviewed the method definition of the enketo_url function and confirmed that it throws a general exception when the enketo API returns a response without json text\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14753731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14760356", "body": "yea... i see your point. I will refactor this to remove the try/except/else block\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14760356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14809231", "body": "I agree with this... All enketo functionality should be collected in the same place and test code should never mix with production code.\n\nWe can use the Httmock library.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/14809231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17970779", "body": "It is possible to do something like:\n`xforms = Xform.objects.filter(instance.projectxform_set.values('xform'))`\n\nI was assuming that the objects in the projectxform was in memory but i could be terribly wrong\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17970779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17970833", "body": "What I was trying to do is to get a set containing the shared status in light of legacy data where projects could have a number of forms with different shared values\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17970833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17970868", "body": "The purpose of the check is to prevent updating the xforms if the status has not changed\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17970868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17970891", "body": "i am not sure.... i need to confirm.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17970891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17971226", "body": "Actually @pld `{xform.shared for xform in xforms}` is a set comprehension not a dict comprehension\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17971226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17971749", "body": "Because i wanted to use indexes and sets in python don't support indexing\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17971749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17971831", "body": "Noise is very welcome... @pld makes code worth pushing :D\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17971831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17971980", "body": "@pld it sounds like using a direct call to the Xform model to return a list is more economical that what i am doing...\n\nref:\nhttps://docs.djangoproject.com/en/1.4/ref/models/querysets/\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17971980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17972234", "body": "that sounds better and might reduce the amount of code\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/17972234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19060151", "body": "Sure... the new name sounds better and captures what is being done.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/19060151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "prabhasp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/onaio/onadata/comments/8473236", "body": "This line should read `return a.get('name')` instead of `a.get('name')` (plus some refactoring after that).\nEdit: actually, even that won't be enough. See my comment in the [pull request thread](https://github.com/onaio/onadata/pull/672)\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/comments/8473236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/onaio/onadata/comments/8497259", "body": "Hey @ivermac, to make this robust against forms where the photograph field may be embedded a little deeply, something like the following (untested) recursive implementation would be better:\n\n```\ndef get_field_xpath(self, obj):\n        qa_dict = obj.instance.get_dict()\n        if obj.filename not in qa_dict.values():\n            return None\n        question_name = qa_dict.keys()[qa_dict.values().index(obj.filename)]\n        json_for_xform = json.loads(obj.instance.xform.json)['children']\n        def with_prefix(s, prefix=None):\n            if prefix is not None: return \"%s/%s\", prefix, s\n            else: return s\n        def get_name_with_prefix(node, prefix=None):\n            name = a.get('name')\n            if a.get('children') is None and name == question_name:\n                return with_prefix(name, prefix)\n            elif a.get('children') is not None:\n                for b in a.get('children'):\n                     new_prefix = with_prefix(name, prefix)\n                     possible_answer = get_name_with_prefix(b, new_prefix)\n                     if possible_answer is not None: return possible_answer\n            return None\n       return get_name_with_prefix(None, json_for_xform)\n```\n\nBasically, what this does is delegate the return to a recursive function. In that recursive function, prefix should be a combination of all of its parents's name (via `new_prefix`). If you ever find the right name, you just return the name with the prefix. If you have children, you go through all the children and see if any of them are the right node (ie, with a name match). If not, you move on, eventually returning `None` if matches aren't found.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/comments/8497259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/onaio/onadata/comments/8502023", "body": "Hey @ivermac I tried to test your function on this jsonform, where the final xpath I should get is `group1/group2/photograph`. Its also form `16601` on ona.io. I couldn't get there, but maybe I messed up something, can you use this as a test case? I'm not really sure what the index stuff is doing, but I'll leave it up to you.\n\n```\n{\n    \"name\": \"photo_in_group\",\n    \"title\": \"photo_in_group\",\n    \"type\": \"survey\",\n    \"default_language\": \"default\",\n    \"id_string\": \"photo_in_group\",\n    \"sms_keyword\": \"photo_in_group\",\n    \"children\": [\n        {\n            \"label\": \"Group #1\",\n            \"type\": \"group\",\n            \"children\": [\n                {\n                    \"label\": \"Group #2\",\n                    \"type\": \"group\",\n                    \"children\": [\n                        {\n                            \"type\": \"photo\",\n                            \"name\": \"photograph\",\n                            \"label\": \"Smile :)\"\n                        }\n                    ],\n                    \"name\": \"group2\"\n                }\n            ],\n            \"name\": \"group1\"\n        },\n        {\n            \"control\": {\n                \"bodyless\": true\n            },\n            \"type\": \"group\",\n            \"children\": [\n                {\n                    \"bind\": {\n                        \"readonly\": \"true()\",\n                        \"calculate\": \"concat('uuid:', uuid())\"\n                    },\n                    \"type\": \"calculate\",\n                    \"name\": \"instanceID\"\n                }\n            ],\n            \"name\": \"meta\"\n        }\n    ]\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/comments/8502023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/onaio/onadata/comments/8791594", "body": "If the `field` is inside a `group`, `field.get('parent')` will not be the top-level node (which has type `survey`), whose `choices` field is the one we need to look into. So this will only work for select ones that are one level deep.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/comments/8791594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}], "review_comments": []}, "justinvdm": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/18280734", "body": "@pld It would be really helpful for us if responses could have a content type `application/json` and a json body (for success and error responses).\n\nIf its possible, maybe the responses could like something like:\n\nError response:\n\n``` javascript\n{\n  reason: \"Insert reason here\"\n}\n```\n\nSuccess response for something like a PUT or POST:\n\n``` javascript\n{\n  reply: \"Insert success response here\" \n}\n```\n\nHappy with the json looking differently though, those are just suggestions. Thoughts?\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/18280734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/18691866", "body": "@pld Sorry for the late reply, was away for a week. `error` and `success` work for us, thanks for the change.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/18691866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "mrmoje": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20222953", "body": "Yes it is. Will update.\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20222953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20223140", "body": "Docstrings coming right up\n", "reactions": {"url": "https://api.github.com/repos/onaio/onadata/pulls/comments/20223140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}}}