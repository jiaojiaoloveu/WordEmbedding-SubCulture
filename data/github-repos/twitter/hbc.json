{"_default": {"1": {"nilsga": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/184", "title": "Create release with support for powertrack 2", "body": "As described here: http://support.gnip.com/articles/updating-hbc-for-ptv2.html\r\n\r\nThe code seems to be available, so hopefully, all there is to do is merge and create a new release.", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mfirry": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/183", "title": "Broken link on README", "body": "First line of `README.md` still links to [Streaming API](https://developer.twitter.com/docs/streaming-apis) which has moved somewhere else.", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jzb3db": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/182", "title": "ClientBuilder error caused by deprecation of SchemeRegistryFactory", "body": "Trying to initialize a ClientBuilder results in the following error:\r\n\r\n```\r\nException in thread \"main\" java.lang.NoClassDefFoundError: org/apache/http/impl/conn/SchemeRegistryFactory\r\n\tat com.twitter.hbc.ClientBuilder.<init>(ClientBuilder.java:102)\r\n\tat twitter.Main.streamTwitterData(Main.java:101)\r\n\tat twitter.Main.main(Main.java:75)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)\r\nCaused by: java.lang.ClassNotFoundException: org.apache.http.impl.conn.SchemeRegistryFactory\r\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:381)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)\r\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\n\t... 8 more\r\n```\r\n\r\norg/apache/http/impl/conn/SchemeRegistryFactory has been deprecated and [HttpClientBuilder](https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/org/apache/http/impl/client/HttpClientBuilder.html) looks to be the replacement.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rakshitcr7": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/181", "title": "Incomplete Streaming of tweets", "body": "The problem I am facing is that while tweets are streaming, some of the tweets are left incomplete (the long tweets). \r\n\r\nFor Example:\r\n**Original Tweet:** \"Another Silent revolution of Modi govt - Streets lights being replaced with LED bulbs, saving energy consumption & stopping toxic emissions.\"\r\n\r\n**Tweet Shown :** \"RT @BJP4India: Another Silent revolution of Modi govt - Streets lights being replaced with LED bulbs, saving energy consumption &\u2026\"\r\n\r\nNot able to understand why its happening. This becomes a problem during sentiment analysing as it also considers \"...\" as a word.", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "GoSkyLine": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/178", "title": "Enhanced URL enrichment in Twitter/GNIP volume stream 2.0 causing DelimitedStreamReader's buffer to overflow", "body": "We have been testing hbc client [(jimmoffitt's fork)](https://github.com/jimmoffitt/hbc) with Twitter/GNIP volume stream 2.0 for a while, our connections got disconnected few times a day with the exception\r\n`java.lang.ArrayIndexOutOfBoundsException\r\n        at com.twitter.hbc.common.DelimitedStreamReader.copyToStrBuffer(DelimitedStreamReader.java:130)\r\n        at com.twitter.hbc.common.DelimitedStreamReader.readLine(DelimitedStreamReader.java:110)\r\n        at com.twitter.hbc.common.DelimitedStreamReader.readLine(DelimitedStreamReader.java:56)\r\n        at com.twitter.hbc.core.processor.LineStringProcessor.processNextMessage(LineStringProcessor.java:42)\r\n        at com.twitter.hbc.core.processor.LineStringProcessor.processNextMessage(LineStringProcessor.java:27)\r\n        at com.twitter.hbc.co\r\nre.processor.AbstractProcessor.process(AbstractProcessor.java:44)\r\n        at com.twitter.hbc.httpclient.Connection.processResponse(Connection.java:51)\r\n        at com.twitter.hbc.httpclient.ClientBase.processConnectionData(ClientBase.java:254)\r\n        at com.twitter.hbc.httpclient.ClientBase.run(ClientBase.java:154)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at java.lang.Thread.run(Thread.java:745)\r\nPartition-2 - EVENT [DISCONNECTED] - null - java.lang.ArrayIndexOutOfBoundsException`\r\n\r\nAfter some debugging, finally we were able to find a sample tweet that triggered the error, json file is attached below, please pay attention to the title field, which has html source code of a whole web page.\r\n[bad_tweet.json.txt](https://github.com/twitter/hbc/files/616694/bad_tweet.json.txt)\r\n\r\nThe above stack trace shows error happened at this line [DelimitedStreamReader.java#L130](https://github.com/twitter/hbc/blob/master/hbc-core/src/main/java/com/twitter/hbc/common/DelimitedStreamReader.java#L130)\r\nValues at runtime were:\r\noffset:0 strBufferIndex:500046 length:64 Math.min(length, MAX_ALLOWABLE_BUFFER_SIZE - strBufferIndex):-46\r\n\r\nNow, we can see where the issue is, MAX_ALLOWABLE_BUFFER_SIZE = 500000,  enrichment was bringing in most of the HTML page into the \"Title\" field, which overflowed the max buffer size in HBC.\r\n\r\nCould we make this MAX_ALLOWABLE_BUFFER_SIZE configurable? so we can overwrite it when necessary?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/43111552", "body": "@scubasau thank you for your input, hope it can be fixed in next release.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/43111552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "nevi-me": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/177", "title": "Site Streams", "body": "This is more for people who will waste a lot of time trying to use site streams. It appears that per #43 site streams require permissions, which Twitter isn't granting.\r\n\r\nI used the `SitestreamExample`, and wasted some time trying to figure out why nothing was happening, only to find that I was getting `HTTP/1. 403 Forbidden` errors, for which I had to add an event queue to find. Perhaps it's my fault for not noticing that I needed permissions which I can't get, but heck ... Developing on Twitter certainly hasn't been pleasant for me.", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "boosh": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/173", "title": "Fix BasicAuth when using PowerTrack 2.0", "body": "This looks like it should work, but I get a 401 \"Authorization Required\" response when I use it with PowerTrack 2.0:\n\n```\nval auth = new BasicAuth(username, password)\nval client = new ClientBuilder()\n  .name(\"GnipClient\")\n  .hosts(\"https://gnip-stream.twitter.com\")\n  .endpoint(endpoint)\n  .authentication(auth)\n  .processor(new LineStringProcessor(queue))\n  .gzipEnabled(true)\n  .build()\n```\n\nDebugging shows no auth header is sent with the request:\n\n> DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] Connecting to gnip-stream.twitter.com:443\n> DEBUG [org.apache.http.client.protocol.RequestAddCookies] CookieSpec selected: best-match\n> DEBUG [org.apache.http.client.protocol.RequestAuthCache] Auth cache not set in the context\n> DEBUG [org.apache.http.client.protocol.RequestTargetAuthentication] Target auth state: UNCHALLENGED\n> DEBUG [org.apache.http.client.protocol.RequestProxyAuthentication] Proxy auth state: UNCHALLENGED\n> DEBUG [org.apache.http.impl.client.DefaultHttpClient] Attempt 1 to execute request\n> DEBUG [org.apache.http.impl.conn.DefaultClientConnection] Sending request: GET /stream/powertrack/accounts/MY_ACC/publishers/twitter/prod.json HTTP/1.1\n> DEBUG [org.apache.http.wire] >> \"GET /stream/powertrack/accounts/MY_ACC/publishers/twitter/prod.json HTTP/1.1[\\r][\\n]\"\n> DEBUG [org.apache.http.wire] >> \"Accept-Encoding: gzip,deflate[\\r][\\n]\"\n> DEBUG [org.apache.http.wire] >> \"Host: gnip-stream.twitter.com[\\r][\\n]\"\n> DEBUG [org.apache.http.wire] >> \"Connection: Keep-Alive[\\r][\\n]\"\n> DEBUG [org.apache.http.wire] >> \"User-Agent: Hosebird-Client 2.2.0[\\r][\\n]\"\n> DEBUG [org.apache.http.wire] >> \"[\\r][\\n]\"\n> DEBUG [org.apache.http.headers] >> GET /stream/powertrack/accounts/MY_ACC/publishers/twitter/prod.json HTTP/1.1\n> DEBUG [org.apache.http.headers] >> Accept-Encoding: gzip,deflate\n> DEBUG [org.apache.http.headers] >> Host: gnip-stream.twitter.com\n> DEBUG [org.apache.http.headers] >> Connection: Keep-Alive\n> DEBUG [org.apache.http.headers] >> User-Agent: Hosebird-Client 2.2.0\n> DEBUG [org.apache.http.wire] << \"HTTP/1.1 401 Authorization Required[\\r][\\n]\"\n> DEBUG [org.apache.http.wire] << \"connection: close[\\r][\\n]\"\n> DEBUG [org.apache.http.wire] << \"content-length: 138[\\r][\\n]\"\n> DEBUG [org.apache.http.wire] << \"content-type: application/json; charset=utf-8[\\r][\\n]\"\n> DEBUG [org.apache.http.wire] << \"date: Tue, 19 Jul 2016 14:18:21 GMT[\\r][\\n]\"\n> DEBUG [org.apache.http.wire] << \"server: tsa[\\r][\\n]\"\n> DEBUG [org.apache.http.wire] << \"x-connection-hash: 2473a62afd5d8bf2163f1e3259091fb1[\\r][\\n]\"\n> DEBUG [org.apache.http.wire] << \"[\\r][\\n]\"\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/173/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/172", "title": "Update EnterpriseStreamingEndpoint for compatibility with PowerTrack 2.0", "body": "The new URL pattern is:\n\n```\nhttps://gnip-stream.twitter.com/stream/powertrack/accounts/<ACCOUNT_NAME>/publishers/twitter/<LABEL>.json\n```\n\nThe `EnterpriseStreamingEndpoint` class should be updated to support this.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/172/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "amitabhi": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/171", "title": "Backfill in PT2.0 is not supported.", "body": "Hi,\nEarlier for backfill in PT1.0 we need to pass clientId to get last 5 mins of backfill data. Now in documentation it is mentioned that we need to pass **backfillMinutes** variable. Can you please add in hbc-module so that we can pass the backfillMinutes as parameter. \n\nThanks in advance\nAmit \n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/171/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tommcintyre": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/170", "title": "BasicReconnectionManager does not respect backoff policy for 420 errors", "body": "Twitter's reconnection backoff policies are set out here, under the **Reconnecting** section: https://dev.twitter.com/streaming/overview/connecting\n\n`BasicReconnectionManager` handles two of the scenarios described - linear backoff for network errors, and exponential backoff for HTTP errors. However, it does not correctly handle HTTP 420 errors. The correct behaviour should be:\n\n> Back off exponentially for HTTP 420 errors. Start with a 1 minute wait and double each attempt. Note that every HTTP 420 received increases the time you must wait until rate limiting will no longer will be in effect for your account.\n\nInstead, these errors are treated the same as any other HTTP errors (backoff starts at 5 seconds, then doubles up to 320 seconds; rather than starting at 1 minute, and no upper limit).\n\nI am observing that Twitter never allows some clients to reconnect after getting a 420 (\"Enhance your calm\") error, since it does not consider the current backoff strategy sufficient. It will continue issuing 420 errors until the client is shut down for a while and then manually restarted.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "FernandoDoming": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/167", "title": "BasicReconnectionManager Integer overflow", "body": "The `calculateExponentialBackoffMillis` function from `BasicReconnectionManager` calculates the backoff time as follows:\n\n```\nINITIAL_EXPONENTIAL_BACKOFF_MILLIS << (exponentialBackoffCount - 1)\n```\n\nIf `exponentialBackoffCount` is a big enough number `(>= 20)` the integer will overflow and return a negative number. The negative number is then compared with `MAX_EXPONENTIAL_BACKOFF_MILLIS (320000)` and the minimum is returned. As the negative number is the lower one it is returned and used as a parameter for `Thread.sleep()`, which fails due to the negative integer.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/hbc/pulls/168", "title": "Fix for Issue/167", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alexott": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/164", "title": "language & filter_level parameters are passed incorrectly", "body": "According to specification (https://dev.twitter.com/streaming/overview/request-parameters#filter_level) the `language` & `filter_level` parameters could be used on the all stream types, but the current implementation pass them as the `POST` parameter, instead of `GET`, so they don't work on the sample stream.\n\nP.S. I'll try to provide fix for it.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/hbc/pulls/165", "title": "Fix for issue #164", "body": "Pass `language` & `filter_level` parameters as query parameters.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hakrnirmal": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/163", "title": "NoClassDefFoundError: com/google/common/io/BaseEncoding while running SampleStreamExample", "body": "Did not receive a message in 5 seconds\nClient connection closed unexpectedly: java.lang.NoClassDefFoundError: com/google/common/io/BaseEncoding\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "powerofviva": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/162", "title": "any full docimentation about how hbc works?", "body": "Hello everybody,\nI am trying to understand after the authentication by hbc (Oauth) , what happening inside the hbc in detail.\ncan anyone please share with me if you have any more explanation or document about hbc ?\n\nThank you\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/161", "title": "dataStream connection protocol", "body": "Hello, \nI am trying to do research about stream protocol , i interested in  hbc , would you please let me know how to made connection to the twitter API , i am interesting to know about the protocol that has beed used . WebSocket , Rest , Http ..?  \nit is appreciated to let me have access to source code in connection part . \n\nthanks in advance\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mhelal": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/160", "title": "Trying to use hbc with apache storm on Eclipse on Windows", "body": "Hello, \n\nI need support trying to use your hpc APIs, to connect to twitter streams as a spout in apache storm.  The java file below is what I am trying, using the pom.xml below.\n\nI am getting a runtime exception from line 106:\n\ncluster.submitTopology(\"test\", conf, builder.createTopology());\n\nsays: \n\njava.lang.RuntimeException: java.io.NotSerializableException: com.twitter.hbc.core.event.ConnectionEvent\n\nwith traceback:\n\njava.lang.RuntimeException: java.io.NotSerializableException: com.twitter.hbc.core.event.ConnectionEvent\n    at backtype.storm.utils.Utils.javaSerialize(Utils.java:91) ~[storm-core-0.10.0.jar:0.10.0]\n    at backtype.storm.topology.TopologyBuilder.createTopology(TopologyBuilder.java:112) ~[storm-core-0.10.0.jar:0.10.0]\n    at storm.starter.TwitterTopology.main(TwitterTopology.java:106) ~[classes/:?]\nCaused by: java.io.NotSerializableException: com.twitter.hbc.core.event.ConnectionEvent\n    at java.io.ObjectOutputStream.writeObject0(Unknown Source) ~[?:1.7.0_76]\n    at java.io.ObjectOutputStream.writeObject(Unknown Source) ~[?:1.7.0_76]\n    at java.util.concurrent.LinkedBlockingQueue.writeObject(Unknown Source) ~[?:1.7.0_76]\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.7.0_76]\n    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[?:1.7.0_76]\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[?:1.7.0_76]\n    at java.lang.reflect.Method.invoke(Unknown Source) ~[?:1.7.0_76]\n    at java.io.ObjectStreamClass.invokeWriteObject(Unknown Source) ~[?:1.7.0_76]\n    at java.io.ObjectOutputStream.writeSerialData(Unknown Source) ~[?:1.7.0_76]\n    at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source) ~[?:1.7.0_76]\n    at java.io.ObjectOutputStream.writeObject0(Unknown Source) ~[?:1.7.0_76]\n    at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source) ~[?:1.7.0_76]\n    at java.io.ObjectOutputStream.writeSerialData(Unknown Source) ~[?:1.7.0_76]\n    at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source) ~[?:1.7.0_76]\n    at java.io.ObjectOutputStream.writeObject0(Unknown Source) ~[?:1.7.0_76]\n    at java.io.ObjectOutputStream.writeObject(Unknown Source) ~[?:1.7.0_76]\n    at backtype.storm.utils.Utils.javaSerialize(Utils.java:87) ~[storm-core-0.10.0.jar:0.10.0]\n    ... 2 more\n\n---\n\nAs far as I see, I have made the spout and bolt themselves serializable. Not sure how to make the ConnectionEvent serializable, or how to get it to accept it as is. \n\nI appreciate your support very much\n\n---\n\nThe Java File:\n\n---\n\n/**\n- Licensed to the Apache Software Foundation (ASF) under one\n- or more contributor license agreements.  See the NOTICE file\n- distributed with this work for additional information\n- regarding copyright ownership.  The ASF licenses this file\n- to you under the Apache License, Version 2.0 (the\n- \"License\"); you may not use this file except in compliance\n- with the License.  You may obtain a copy of the License at\n  *\n- http://www.apache.org/licenses/LICENSE-2.0\n  *\n- Unless required by applicable law or agreed to in writing, software\n- distributed under the License is distributed on an \"AS IS\" BASIS,\n- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- See the License for the specific language governing permissions and\n- limitations under the License.\n  */\n  package storm.starter;\n\nimport backtype.storm.Config;\nimport backtype.storm.LocalCluster;\nimport backtype.storm.StormSubmitter;\nimport backtype.storm.task.OutputCollector;\nimport backtype.storm.task.TopologyContext;\nimport backtype.storm.topology.OutputFieldsDeclarer;\nimport backtype.storm.topology.TopologyBuilder;\nimport backtype.storm.topology.base.BaseRichBolt;\nimport backtype.storm.tuple.Fields;\nimport backtype.storm.tuple.Tuple;\nimport backtype.storm.tuple.Values;\nimport backtype.storm.utils.Utils;\n\nimport java.util.Map;\nimport backtype.storm.spout.SpoutOutputCollector;\nimport backtype.storm.topology.base.BaseRichSpout;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.concurrent.BlockingQueue;\nimport java.util.concurrent.LinkedBlockingQueue;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport com.google.common.collect.Lists;\nimport com.twitter.hbc.ClientBuilder;\nimport com.twitter.hbc.core._;\nimport com.twitter.hbc.core.endpoint._;\nimport com.twitter.hbc.core.event.*;\nimport com.twitter.hbc.core.processor.StringDelimitedProcessor;\nimport com.twitter.hbc.httpclient.auth.Authentication;\nimport com.twitter.hbc.httpclient.auth.OAuth1;\n\n/**\n- This is a basic example of a Storm topology.\n  */\n  public class TwitterTopology {\n  \n  public static class TwitterBolt extends BaseRichBolt {\n  \n    /**\n  - */\n    private static final long serialVersionUID = 4099225039441092308L;\n    OutputCollector _collector;\n    \n    @Override\n    public void prepare(Map conf, TopologyContext context, OutputCollector collector) {\n      _collector = collector;\n    }\n    \n    @Override\n    public void execute(Tuple tuple) {\n      _collector.emit(tuple, new Values(tuple.getString(0) + \"!!!\"));\n      _collector.ack(tuple);\n    }\n    \n    @Override\n    public void declareOutputFields(OutputFieldsDeclarer declarer) {\n      declarer.declare(new Fields(\"word\"));\n    }\n  \n  }\n  \n  public static void main(String[] args) throws Exception {\n    TopologyBuilder builder = new TopologyBuilder();\n  \n    builder.setSpout(\"twitterSpout\", new TwitterSpout(), 10);\n    builder.setBolt(\"twitterBolt\", new TwitterBolt(), 3).shuffleGrouping(\"twitterSpout\");\n  \n    Config conf = new Config();\n    //conf.setDebug(true);\n  \n    if (args != null && args.length > 0) {\n      conf.setNumWorkers(3);\n  \n  ```\n  StormSubmitter.submitTopologyWithProgressBar(args[0], conf, builder.createTopology());\n  ```\n  \n    }\n    else {\n  \n  ```\n  LocalCluster cluster = new LocalCluster();\n  cluster.submitTopology(\"test\", conf, builder.createTopology());\n  Utils.sleep(10000);\n  cluster.killTopology(\"test\");\n  cluster.shutdown();\n  ```\n  \n    }\n  }\n  }\n\nclass TwitterSpout extends BaseRichSpout {\n\n```\n/**\n * \n */\nprivate static final long serialVersionUID = -5695079926219121864L;\npublic static Logger LOG = LoggerFactory.getLogger(TwitterSpout.class);\nboolean _isDistributed;\nSpoutOutputCollector _collector;\nBlockingQueue<String> msgQueue;\nBlockingQueue<Event> eventQueue;\n\npublic TwitterSpout() {\n    this(true);\n\n    /** Set up your blocking queues: Be sure to size these properly based on expected TPS of your stream */\n    msgQueue = new LinkedBlockingQueue<String>(100000);\n    eventQueue = new LinkedBlockingQueue<Event>(1000);\n\n    /** Declare the host you want to connect to, the endpoint, and authentication (basic auth or oauth) */\n    Hosts hosebirdHosts = new HttpHosts(Constants.STREAM_HOST);\n    StatusesFilterEndpoint hosebirdEndpoint = new StatusesFilterEndpoint();\n    // Optional: set up some followings and track terms\n    List<Long> followings = Lists.newArrayList(1234L, 566788L);\n    List<String> terms = Lists.newArrayList(\"twitter\", \"api\");\n    hosebirdEndpoint.followings(followings);\n    hosebirdEndpoint.trackTerms(terms);\n\n    // These secrets should be read from a config file\n    Authentication hosebirdAuth = new OAuth1(\"fffff\", \"eeee\", \"eee\", \"cccc\");\n    //Authentication hosebirdAuth = new BasicAuth(\"username\", \"password\");\n\n    ClientBuilder builder = new ClientBuilder()\n              .name(\"Hosebird-Client-01\")                              // optional: mainly for the logs\n              .hosts(hosebirdHosts)\n              .authentication(hosebirdAuth)\n              .endpoint(hosebirdEndpoint)\n              .processor(new StringDelimitedProcessor(msgQueue))\n              .eventMessageQueue(eventQueue);                          // optional: use this if you want to process client events\n\n            Client hosebirdClient = builder.build();\n            // Attempts to establish a connection.\n            hosebirdClient.connect();\n\n\n}\n\npublic TwitterSpout(boolean isDistributed) {\n    _isDistributed = isDistributed;\n}\n\npublic void open(Map conf, TopologyContext context, SpoutOutputCollector collector) {\n    _collector = collector;\n}\n\npublic void close() {\n\n}\n\npublic void nextTuple() {\n    Utils.sleep(100);\n```\n\n//        final String[] words = new String[] {\"nathan\", \"mike\", \"jackson\", \"golda\", \"bertels\"};\n//        final Random rand = new Random();\n//        final String word = words[rand.nextInt(words.length)];\n\n```\n    String msg;\n    try {\n        msg = msgQueue.take();\n        _collector.emit(new Values(msg));\n    } catch (InterruptedException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    }\n\n\n\n}\n\npublic void ack(Object msgId) {\n\n}\n\npublic void fail(Object msgId) {\n\n}\n\npublic void declareOutputFields(OutputFieldsDeclarer declarer) {\n    declarer.declare(new Fields(\"tweet\"));\n}\n\n@Override\npublic Map<String, Object> getComponentConfiguration() {\n    if(!_isDistributed) {\n        Map<String, Object> ret = new HashMap<String, Object>();\n        ret.put(Config.TOPOLOGY_MAX_TASK_PARALLELISM, 1);\n        return ret;\n    } else {\n        return null;\n    }\n}    \n```\n\n}\n\n---\n\nThe pom file:\n\n---\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<!--\n Licensed to the Apache Software Foundation (ASF) under one or more\n contributor license agreements.  See the NOTICE file distributed with\n this work for additional information regarding copyright ownership.\n The ASF licenses this file to You under the Apache License, Version 2.0\n (the \"License\"); you may not use this file except in compliance with\n the License.  You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <parent>\n      <artifactId>storm</artifactId>\n      <groupId>org.apache.storm</groupId>\n      <version>0.10.0</version>\n      <relativePath>../../pom.xml</relativePath>\n  </parent>\n\n  <groupId>org.apache.storm</groupId>\n  <artifactId>storm-starter</artifactId>\n  <packaging>jar</packaging>\n\n  <name>storm-starter</name>\n\n  <dependencies>\n    <dependency>\n      <groupId>junit</groupId>\n      <artifactId>junit</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.testng</groupId>\n      <artifactId>testng</artifactId>\n      <version>6.8.5</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.mockito</groupId>\n      <artifactId>mockito-all</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.easytesting</groupId>\n      <artifactId>fest-assert-core</artifactId>\n      <version>2.0M8</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.jmock</groupId>\n      <artifactId>jmock</artifactId>\n      <version>2.6.0</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n     <groupId>org.twitter4j</groupId>\n     <artifactId>twitter4j-stream</artifactId>\n     <version>3.0.3</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.storm</groupId>\n      <artifactId>storm-core</artifactId>\n      <version>0.10.0</version>\n      <!-- keep storm out of the jar-with-dependencies -->\n      <scope>compile</scope>\n    </dependency>\n      <dependency>\n          <groupId>org.apache.storm</groupId>\n          <artifactId>multilang-javascript</artifactId>\n          <version>${project.version}</version>\n      </dependency>\n      <dependency>\n          <groupId>org.apache.storm</groupId>\n          <artifactId>multilang-ruby</artifactId>\n          <version>${project.version}</version>\n      </dependency>\n      <dependency>\n          <groupId>org.apache.storm</groupId>\n          <artifactId>multilang-python</artifactId>\n          <version>${project.version}</version>\n      </dependency>\n    <dependency>\n      <groupId>commons-collections</groupId>\n      <artifactId>commons-collections</artifactId>\n      <version>3.2.1</version>\n    </dependency>\n    <dependency>\n      <groupId>com.google.guava</groupId>\n      <artifactId>guava</artifactId>\n    </dependency>\n\n```\n <dependency>\n  <groupId>com.twitter</groupId>\n  <artifactId>hbc-core</artifactId> <!-- or hbc-twitter4j -->\n  <version>2.2.0</version> <!-- or whatever the latest version is -->\n</dependency>\n```\n\n  </dependencies>\n\n  <build><defaultGoal>install</defaultGoal>\n    <sourceDirectory>src/jvm</sourceDirectory>\n    <testSourceDirectory>test/jvm</testSourceDirectory>\n    <resources>\n      <resource>\n        <directory>${basedir}/multilang</directory>\n      </resource>\n    </resources>\n\n```\n<plugins>\n    <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-shade-plugin</artifactId>\n        <version>1.4</version>\n        <configuration>\n            <createDependencyReducedPom>true</createDependencyReducedPom>\n        </configuration>\n        <executions>\n            <execution>\n                <phase>package</phase>\n                <goals>\n                    <goal>shade</goal>\n                </goals>\n                <configuration>\n                    <transformers>\n                        <transformer implementation=\"org.apache.maven.plugins.shade.resource.ServicesResourceTransformer\" />\n                        <transformer implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\">\n                        </transformer>\n                    </transformers>\n                </configuration>\n            </execution>\n        </executions>\n    </plugin>\n\n     <plugin>\n    <groupId>com.theoryinpractise</groupId>\n    <artifactId>clojure-maven-plugin</artifactId>\n    <extensions>true</extensions>\n    <configuration>\n      <sourceDirectories>\n        <sourceDirectory>src/clj</sourceDirectory>\n      </sourceDirectories>\n    </configuration>\n    <executions>\n      <execution>\n        <id>build</id>\n        <phase>build</phase>\n        <goals>\n          <goal>build</goal>\n        </goals>\n      </execution>\n    </executions>\n  </plugin>\n\n\n  <plugin>\n    <groupId>org.codehaus.mojo</groupId>\n    <artifactId>exec-maven-plugin</artifactId>\n    <version>1.2.1</version>\n    <executions>\n      <execution>\n        <goals>\n          <goal>exec</goal>\n        </goals>\n      </execution>\n    </executions>\n    <configuration>\n      <executable>java</executable>\n      <includeProjectDependencies>true</includeProjectDependencies>\n      <includePluginDependencies>false</includePluginDependencies>\n      <classpathScope>compile</classpathScope>\n      <mainClass>${storm.topology}</mainClass>\n    </configuration>\n  </plugin>\n</plugins>\n```\n\n  </build>\n</project>\n\n---\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ronagrawal": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/158", "title": "Flag to check the status of the connection", "body": "I am unable to find a flag through which I can check the status of the connection.\n\nIs there any variable which checks if it is connected to the Streaming API or not. In addition, If we fail to connect to the streaming API, error is logged, however how can I retrieve that error to a variable\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RobertBakic": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/157", "title": "API Homogeneity", "body": "Constructors for objects Twitter4jSitestreamClient and  Twitter4jUserstreamClient should accept :\n\n```\nList<? extends SiteStreamsListener> listeners\n```\n\nand \n\n```\nList<? extends UserStreamListener> listeners \n```\n\nrespectively, like  Twitter4jStatusClient does with : \n\n```\nList<? extends StatusListener> listeners\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nageshbhattu": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/156", "title": "sampleExampleClient Error ", "body": "Hi,\n  I am running hbc example application. mvn install was successful. I am running this on two different machines. One running CentOS and another running ubuntu. I ran it on the ubuntu machine and it worked fine dumping the tweets from the stream. But when I did similar setup on CentOS, I am getting the following error.\n\nsampleExampleClient Error connecting w/ status code - 401, reason - Authorization Required\nI am using the same quadruplet of acces-token,secret combo.\n\nThank you for any help\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rowanseymour": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/155", "title": "Exception when parsing FOLLOWS_OVER_LIMIT warnings", "body": "This type of warning doesn't have the \"percent_full\" field, thus the following error:\n\n```\nWARN com.twitter.hbc.twitter4j.BaseTwitter4jClient: Exception thrown during parsing msg {\"warning\":{\"code\":\"FOLLOWS_OVER_LIMIT\",\"message\":\"The requested user follows more accounts than the maximum supported by this streaming endpoint. Only a subset of 10000 followed accounts are included in this stream.\",\"user_id\":????????,\"timestamp_ms\":\"1439407322431\"}}\n\n! twitter4j.JSONException: JSONObject[\"percent_full\"] not found.\n! at twitter4j.JSONObject.get(JSONObject.java:390)\n! at twitter4j.JSONObject.getInt(JSONObject.java:428)\n! at com.twitter.hbc.twitter4j.BaseTwitter4jClient.processStallWarning(BaseTwitter4jClient.java:255)\n! at com.twitter.hbc.twitter4j.BaseTwitter4jClient.processMessage(BaseTwitter4jClient.java:215)\n! at com.twitter.hbc.twitter4j.BaseTwitter4jClient.parseMessage(BaseTwitter4jClient.java:129)\n! at com.twitter.hbc.twitter4j.BaseTwitter4jClient$1.run(BaseTwitter4jClient.java:76) \n! at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n! at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n! at java.lang.Thread.run(Thread.java:745)\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/hbc/pulls/176", "title": "Fix #155: parsing exception when processing FOLLOWS_OVER_LIMIT stall warnings", "body": "Fixes https://github.com/twitter/hbc/issues/155 by ensuring stall warning message parsing doesn't blow up if \"percent_full\" field is not present.\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/154999957", "body": "Is this project still being maintained? I can make a PR if someone will merge it.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/154999957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mgurenko": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/153", "title": "HBC with spring and tomcat", "body": "Im using \ntomcat 7.0.56\nspring version 4.1.6.RELEASE \nspring security version 3.2.7.RELEASE\n\nThat simple code works in my test app(like public static main). But when i use it in my spring app, i not receive any message.\n\n```\nimport com.google.common.collect.Lists;\nimport com.twitter.hbc.ClientBuilder;\nimport com.twitter.hbc.core.Constants;\nimport com.twitter.hbc.core.endpoint.UserstreamEndpoint;\nimport com.twitter.hbc.core.processor.StringDelimitedProcessor;\nimport com.twitter.hbc.httpclient.BasicClient;\nimport com.twitter.hbc.httpclient.auth.Authentication;\nimport com.twitter.hbc.httpclient.auth.OAuth1;\nimport com.twitter.hbc.twitter4j.Twitter4jStatusClient;\nimport twitter4j.DirectMessage;\nimport twitter4j.StallWarning;\nimport twitter4j.Status;\nimport twitter4j.StatusDeletionNotice;\nimport twitter4j.User;\nimport twitter4j.UserList;\nimport twitter4j.UserStreamListener;\n\nimport java.util.concurrent.BlockingQueue;\nimport java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\nimport java.util.concurrent.LinkedBlockingQueue;\n\npublic class Main {\n\n    private String key = \"xxx\";\n    private String secret = \"xxx\";\n    private String token = \"xxx\";\n    private String tokenSecret = \"xxx\";\n\n    private UserStreamListener  statusListener = new UserStreamListener() {\n        @Override\n        public void onStatus(Status status) {\n            System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n            System.out.println(status.getGeoLocation());\n            System.out.println(status.getUser());\n        }\n\n        @Override\n        public void onDeletionNotice(StatusDeletionNotice statusDeletionNotice) {\n            System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n        }\n\n        @Override\n        public void onTrackLimitationNotice(int numberOfLimitedStatuses) {\n            System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n        }\n\n        @Override\n        public void onScrubGeo(long userId, long upToStatusId) {\n            System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n        }\n\n        @Override\n        public void onStallWarning(StallWarning warning) {\n            System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n        }\n\n        @Override\n        public void onException(Exception ex) {\n            System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n        }\n\n        @Override\n        public void onDeletionNotice(long directMessageId, long userId) {\n            System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n        }\n\n        @Override\n        public void onFriendList(long[] friendIds) {\n            System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n        }\n\n        @Override\n        public void onFavorite(User source, User target, Status favoritedStatus) {\n            System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n        }\n\n        @Override\n        public void onUnfavorite(User source, User target, Status unfavoritedStatus) {\n            System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n        }\n\n        @Override\n        public void onFollow(User source, User followedUser) {\n            System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n        }\n\n        @Override\n        public void onUnfollow(User source, User unfollowedUser) {\n            System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n        }\n\n        @Override\n        public void onDirectMessage(DirectMessage directMessage) {\n            System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n        }\n\n        @Override\n        public void onUserListMemberAddition(User addedMember, User listOwner, UserList list) {\n            System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n        }\n\n        @Override\n        public void onUserListMemberDeletion(User deletedMember, User listOwner, UserList list) {\n            System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n        }\n\n        @Override\n        public void onUserListSubscription(User subscriber, User listOwner, UserList list) {\n            System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n        }\n\n        @Override\n        public void onUserListUnsubscription(User subscriber, User listOwner, UserList list) {\n            System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n        }\n\n        @Override\n        public void onUserListCreation(User listOwner, UserList list) {\n            System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n        }\n\n        @Override\n        public void onUserListUpdate(User listOwner, UserList list) {\n            System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n        }\n\n        @Override\n        public void onUserListDeletion(User listOwner, UserList list) {\n            System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n        }\n\n        @Override\n        public void onUserProfileUpdate(User updatedUser) {\n            System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n        }\n\n        @Override\n        public void onBlock(User source, User blockedUser) {\n            System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n        }\n\n        @Override\n        public void onUnblock(User source, User unblockedUser) {\n            System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n        }\n    };\n    private void openStreamAPI() {\n        BlockingQueue<String> queue = new LinkedBlockingQueue<String>(10000);\n\n        // Define our endpoint: By default, delimited=length is set (we need this for our processor)\n        // and stall warnings are on.\n        UserstreamEndpoint endpoint = new UserstreamEndpoint();\n\n\n        Authentication auth = new OAuth1(key, secret, token, tokenSecret);\n        // Authentication auth = new BasicAuth(username, password);\n\n        // Create a new BasicClient. By default gzip is enabled.\n        BasicClient client = new ClientBuilder()\n                .hosts(Constants.USERSTREAM_HOST)\n                .endpoint(endpoint)\n                .authentication(auth)\n                .processor(new StringDelimitedProcessor(queue))\n                .build();\n\n        // Create an executor service which will spawn threads to do the actual work of parsing the incoming messages and\n        // calling the listeners on each message\n        int numProcessingThreads = 4;\n        ExecutorService service = Executors.newFixedThreadPool(numProcessingThreads);\n\n        // Wrap our BasicClient with the twitter4j client\n        Twitter4jStatusClient t4jClient = new Twitter4jStatusClient(\n                client, queue, Lists.newArrayList(statusListener), service);\n\n        // Establish a connection\n        t4jClient.connect();\n        for (int threads = 0; threads < numProcessingThreads; threads++) {\n            // This must be called once per processing thread\n            t4jClient.process();\n        }\n    }\n    public static void main(String[] args) {\n        Main main = new Main();\n        main.openStreamAPI();\n    }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "riteshkapadia": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/152", "title": "Changes required to adapt the new REST changes for DM increased to more than 140 Characters.", "body": "Hi Team,\n\nAs the twitter is changing the REST API to adapt the more than 140 characters in DM change, will this impact the projects using hbc?\n\nIf it is a major impact, what steps should we take to adapt it. Also, are we planing a next release to adapt this changes to support more than 140 character limit.\n\nThanks.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/68027617", "body": "I am not calling either of the two explicitly.\n\nFollowing is my code which is called to connect the endpoint:\n\n```\npublic BlockingQueue getBlockingQueue() {\n\n    try{\n    BlockingQueue<String> queue = new LinkedBlockingQueue<String>(10000);\n    StatusesFilterEndpoint endpoint = new StatusesFilterEndpoint();\n    ArrayList<String> listToTrack  = new ArrayList<String>();\n    listToTrack.add(JETConstants.HANDLE.toString());\n    listToTrack.add(JETConstants.HASHTAG.toString());\n    listToTrack.add(JETConstants.KEYWORD.toString());\n    // add some track terms\n    endpoint.trackTerms(listToTrack);\n\n    Authentication auth = new OAuth1(TwiterCredientials.CONSUMERKEY.toString(), TwiterCredientials.CONSUMERSECRET.toString(), TwiterCredientials.TOKEN.toString(),\n            TwiterCredientials.SECRET.toString());\n\n    // Create a new BasicClient. By default gzip is enabled.\n    Client client = new ClientBuilder().hosts(Constants.STREAM_HOST)\n            .endpoint(endpoint).authentication(auth)\n            .processor(new StringDelimitedProcessor(queue)).build();\n\n    // Establish a connection\n    client.connect();\n    return queue;\n    }catch(Exception e){\n        e.printStackTrace();\n        return null;\n    }\n\n}    \n```\n\nAxis-2 dependency if removed from pom this works perfectly fine.\nI guess the axis-2 core is getting initialized before this call, but i am not sure how to resolve this dependency issue?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/68027617/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/68041828", "body": "Hi did you manage to consume direct messages using HBC?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/68041828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/68129141", "body": "Any help on this, does axis 2 instantiate a thread for AtomicReference<HttpClient>? \nGetting nullpointer while getting a connection for org.apache.http.conn.ClientConnectionManager in hbc-twitter. Line of error:\nunderlying.get().getConnectionManager();\n\nNOTE: I am not calling webservice as of now, but just giving a POM entery for axis 2 libs gives this error.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/68129141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/68132231", "body": "Following dependency is causing the issue:\n\n```\n<dependency>\n        <groupId>org.apache.axis2</groupId>\n        <artifactId>axis2-transport-http</artifactId>\n        <version>1.6.2</version>\n    </dependency>    \n```\n\nIf this is commented, the twitter hbc, streaming works fine, but i get a deployment exception while alling axis 2 webservice. This is a required dependency and cannot comment it,\n\nNeed some help over this\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/68132231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/117139003", "body": "Any updates on this please?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/117139003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sohussain": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/151", "title": "Move to Twitter4J 4.0.3 ?", "body": "Any plans for this? \n\nEDIT: it's almost no work, I have done it locally, can make a pull request...\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jk171505": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/147", "title": "How (if it's possible) to track rate limit and determine the delay before reconnecting the client?", "body": "I want to update endpoint's trackTerms. How can I determine an appropriate delay before reconnecting the client to avoid 420 response?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/86869727", "body": "I don't think so, it's a post param, so you can update it, but you have to reconnect the client.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/86869727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "slauber": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/145", "title": "Using StatusListener on multiple threads not safe (duplicate statuses)?", "body": "Hi,\n\nI'm using hbc with twitter4j with 4 execution workers and experiencing the following:\n\n```\n2015-03-04 20:07:18,522 DEBUG [pool-15-thread-2] [StatusListener.java:27] onStatus - StatusID: 573198044067340289\n2015-03-04 20:07:19,475 DEBUG [pool-15-thread-1] [StatusListener.java:27] onStatus - StatusID: 573198044067340289\n```\n\nThe messages are fired on an onStatus event. As you can see, the very same status appears on two threads, is there any way to work around except for ignoring duplicate statuses or going single threaded?\n\nRegards\nSebastian\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Jakob2014uafmx": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/144", "title": "SSLExceptions normal?", "body": "Hi,\n\nI'm using hbc's implementation (ClientBase etc.) for a streaming connection. Especially in streams that deliver many tweets I have noticed many disconnects because of \"javax.net.ssl.SSLException: SSL peer shut down incorrectly\" (about 150 of those Exceptions in 24 hours and ~2,5 million tweets). Fortunately the client is able to reconnect immediately each time. Are disconnects because of SSLException something \"normal\", caused by the amount of tweets in the stream or fluctuation in the connection quality? Or is it more probable that the problem is a result of some faulty implementation on my side (the only thing I have changed in the whole process of reading messages from the stream and storing them in the message queue is introducing a timeout for processing messages by overriding StringDelimitedProcessor#process())?\n\nBest regards,\nJakob\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/141", "title": "Shutdown problem", "body": "Hi,\nI'm using hbc-twitter4j and recognized two problems with the shutdown process. If the stream does not deliver many messages (e.g. if you just type a nonsense string as term or a quite unpopular hashtag) and especially if there are many message-queue consuming threads (depending on the ExecutorService you have set in the Twitter4jStatusClient constructor) the stop() method of the Twitter4jStatusClient does not work properly - the client thread fails to finish in time (log output) and the application might even run on because of the background threads which consume the queue. This is because:\n\n1) The queue-consuming threads which are started by BaseTwitter4jClient#process() use a blocking take() method without timeout and therefore might wait infinite time until they check the isDone() flag, realize the client has been shut down and can terminate. This problem is intensified if you use more queue-consuming threads, because each one needs a message from the queue to terminate. If you don't choose to make the queue-consuming threads daemons, they hold the application alive while waiting for messages, even if the main() method (or whatever started and stopped the client) is finished.\n\n2.) The ClientBase Runnable object uses the AbstractProcessor#process() respectively AbstractProcessor#processNextMessage() method to read from the stream. The read operation depends on the used subclass, but is also blocking. Therefore ClientBase#processConnectionData() might not be able to check the isDone() flag in time (of no new messages are on the stream) and ClientBase#stop(int) logs \"Client thread failed to finish\".\n\nBoth issues could be handled with a timeout:\n1) Do not use the take() method to consume the message queue in BaseTwitter4jClient#process() (or any subclass), but poll(long, TimeUnit) instead and call parseMessage(msg) only if msg != null.\n\n```\nwhile (!client.isDone()) {\n    /*\n    * Wait only a limited amount of time, so the is Done()\n    * check is performed in certain intervals and has not to\n    * wait for a message arriving.\n    */\n    try {\n        String msg = AdvancedTwitter4jStatusClient.this.getMyMessageQueue().poll(AdvancedTwitter4jStatusClient.this.getConnectionCheckupInterval(), TimeUnit.MILLISECONDS);\n        if (msg != null) {\n            parseMessage(msg);\n        }\n    } catch (Exception e) {\n        onException(e);\n    }\n```\n\n2) Wrap the result of AbstractProcessor#processNextMessage() in a Future for the AbstractProcessor#process() method :\n\n```\nCallable<String> messageCallable = () -> {\n    String message = processNextMessage();\n    while (message == null) {\n        message = processNextMessage();\n    }\n    return message;\n};\ntry {\n    // Either result returned and added to queue or timeout.\n    Future<String> messageFuture = this.getReadMessageExectuor().submit(messageCallable);\n    String message = messageFuture.get(this.getMessageReadTimeout(), TimeUnit.MILLISECONDS);\n    return this.queue.offer(message, this.offerTimeoutMillis, TimeUnit.MILLISECONDS);\n} catch (Exception e) {\n    if (e instanceof TimeoutException) {\n        // TimeoutException is thrown if no new message arrived in time,\n        // no problem for us\n        return false;\n    } else if (...) {\n        ...\n    }\n```\n\nIs there any reason why those issues are not implemented with a timeout?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/77408836", "body": "You can do a PR if you like (I do not plan to do it), but the 2nd fix from above does not work as assumed (it has problems with streams that contain only a few tweets, because the executor does not finish the old threads in that case [an explicit cancel() also does not help], so the new ones are queued). A better way would be (because the I/O operation somewhere deep down in the code seems to be non-blocking, so processNextMessage() returns fast)\n\n``` @Override\npublic boolean process() throws IOException, InterruptedException {\n    long stopTime = System.currentTimeMillis() + this.getMessageReadTimeout();\n    String msg = processNextMessage();\n    while (msg == null && System.currentTimeMillis() < stopTime) {\n        msg = processNextMessage();\n    }\n    if (msg != null) {\n        return this.queue.offer(msg, offerTimeoutMillis, TimeUnit.MILLISECONDS);\n    } else {\n        return false;\n    }\n}\n```\n\n(by the way, if you use the StatsTracker, it counts that a message has been dropped if the timeout occurs)\n\nRegarding fix 1) Of course the first fix should be done in BaseTwitter4jClient and not by overriding (so this unnecessary field \"myMessageQueue\" would not needed, I only used it because the original field is private)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/77408836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "macinux": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/143", "title": "twitter streaming stopped working", "body": "The twitter streaming api stopped working since last night. The log shows\n\n New connection executed: hosebird-client-0, endpoint: /1.1/statuses/filter.json?delimited=length&stall_warnings=true\n01/14 18:00:38 INFO [hosebird-client-io-thread-0] c.t.h.h.ClientBase - hosebird-client-0 Establishing a connection\n01/14 18:00:39 WARN [hosebird-client-io-thread-0] c.t.h.h.ClientBase - hosebird-client-0 Error connecting w/ status code - 401, reason - Authorization Required\n\nCan you let me know what causing this issue. It had bee working for more than a year. Thanks.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/127", "title": "test failed and can not run. onDeletionNotice not called", "body": "I try to run the example with the command:\n\nmvn install && mvn exec:java -pl hbc-example\n\nbut it shows: The POM for com.twitter:hbc-twitter4j:jar:2.2.1-SNAPSHOT is missing, no dependency information available\n\nAlso the reconnect test failed\n\nThe reason that I want to run the example is to see if onDeletionNotice is called. i have a program which works fine with onStatus(status: Status),  but  onDeletionNotice never got called. The program connects to StatusesFilterEndpoint with certain location attribute.\n\nCan you confirm onDeletionNotice is still working fine? Also, It would be great if i can run your example to see how onDeletionNotice works.\n\nThanks,\nJames\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/70010982", "body": "btw, curl still works. but not from  your library.  Please help me out since our production is down. thanks!!!\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/70010982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/70041807", "body": "I think it is related to set the filter level to Medium. it works again after we remove this.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/70041807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/71754425", "body": "we still have this issue.  no data received if we set the filter level to medium. data received if we don't set it.  We really need the filter level to be medium to avoid the onTrackLimitationNotice. Thanks.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/71754425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "shenghuang": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/137", "title": "Run Twitter client forever with the Twitter4jSampleStreamExample ", "body": "I am following the Twitter4jSampleStreamExample to retrieve live tweets from my Twitter accounts and the accounts I am following. However, I don't see those in the Java client when there are some new tweets.\n\nMy question is that for the code snippet below:\n\n```\n  t4jClient.connect();\n  for (int threads = 0; threads < numProcessingThreads; threads++) {\n    // This must be called once per processing thread\n    t4jClient.process();\n  }\n  Thread.sleep(5000);\n\n  client.stop();\n```\n\nDoes this run forever? Why client.stop(() was called at the end? Shall I remove client.stop() and put the other part in an infinite loop?\n\nPlease advise. \n\nThanks,\nSheng\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/131", "title": "Problem with Apache HTTP client", "body": "I got the following error after importing Twitter HBC libraries into my Android project:\njava.lang.NoClassDefFoundError: org.apache.http.impl.conn.SchemeRegistryFactory\n            at com.twitter.hbc.ClientBuilder.<init>(ClientBuilder.java:102)\n\nSome Internet threads say the Apache HTTP client library collides with the Android built-in one, thus I added the following library dependency following https://hc.apache.org/httpcomponents-client-4.3.x/android-port.html\n    compile group: 'org.apache.httpcomponents' , name: 'httpclient-android' , version: '4.3.5'\n\nThis doesn't work as well. Now it complains some other errors. Another library\nhttp://code.google.com/p/httpclientandroidlib/ says it could work, but it requires to import ch.boye.httpclientandroidlib.\\* instead of org.apache.http.*. \n\nIt seems that org.apache.http.conn.scheme.SchemeRegistry is imported in https://github.com/twitter/hbc/blob/master/hbc-core/src/main/java/com/twitter/hbc/ClientBuilder.java, so I don't think it is a good idea to change the ClientBuilder class to change the import statement.\n\nIs there a solution? How can make the Twitter streaming work? Thanks in advance. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/131/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/63878800", "body": "The following seems to work, that is, listen for incoming tweets indefinitely, but I am not sure whether it is the correct way to do. New tweets are received almost immediately so I am not sure whether the sleep  call is actually required. \n\n```\n   Runtime.getRuntime().addShutdownHook(new Thread() {\n        public void run() {  \n            log.debug(\"++++++Before shutdown, do clean up. Shut down the client\");\n            client.stop();\n        }\n    });\n\n    while (true) {\n        for (int threads = 0; threads < numProcessingThreads; threads++) {\n            // This must be called once per processing thread\n            t4jClient.process();\n        }\n\n        Thread.sleep(60000);\n    }\n```\n\nPlease advise. Thanks.\nSheng\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/63878800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/64922924", "body": "Never mind. I resolved my issue by allowing listening to multiple accounts.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/64922924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "pheuter": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/135", "title": "Cannot reference 'Twitter4jClient' interface due to missing public qualifier.", "body": "The examples in the README refer to a generic way of referencing different kinds of Twitter4j clients using the [Twitter4jClient](https://github.com/twitter/hbc/blob/40e8f29a83f7980cd51de7a69359b4e66021db31/hbc-twitter4j/src/main/java/com/twitter/hbc/twitter4j/Twitter4jClient.java) interface, but that interface is not defined as `public` so I cannot actually reference it.\n\nThis is presenting an issue in an abstract class i'm writing that handles `connect()` and `stop()` on a twitter client agnostic of whether it is a `Twitter4jStatusClient` or a `Twitter4jSitestreamClient`.\n\nI can reference [Client](https://github.com/twitter/hbc/blob/master/hbc-core/src/main/java/com/twitter/hbc/core/Client.java), but it doesn't expose a `process()` method.\n\nAny guidance appreciated!\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/twitter/hbc/commits/d55e50d9930fa1dfb40da99510d29387130e0d79", "message": "Update Twitter4JClient interface to be public\n\nSee #135 for context"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/64658931", "body": "Would be great to get some feedback soon, looking to possibly use hbc for an internal project at CrowdTwist. /cc @xsl @kevinoliver @noonhub \n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/64658931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "alex-in2": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/134", "title": "Correct way for reconnection of client..", "body": "Consider scenario..\nFrom time to time my filter criteria changed and I need to add or remove tags from StatusesFilterEndpoint. I tried to implement it with closing old client, change criteria and connect again.\nIn some cases (quite easy) when I connect again I have \"status code - 420, reason - Enhance Your Calm\" error, It seems that I step out for some limit. What is the correct way to reconnect and apply new filter criteria ? \n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/66119996", "body": "It looks like twitter limitation, I need to track some set of tags and they change quite rare, so \nI have used few api key to switch between them when I switch term set. It improved situation.. but sill looking for better solution\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/66119996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lwaldner": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/133", "title": "connecting to GET search/tweets enpoint", "body": "Hi i'm wondering if it is possible to connect to the GET search/tweets endpoint using hbc. I looked to the endpoints directory but I couldn't find anything to indicate if I can or not. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gauravkumar37": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/132", "title": "Race condition for multi-threaded applications", "body": "I'm running into race conditions on an executorservice of more than 1 thread.\nWhen using more than 1 thread, after the call to stop(), the threads aren't able to stop properly because they are stuck on this line: https://github.com/twitter/hbc/blob/master/hbc-twitter4j/src/main/java/com/twitter/hbc/twitter4j/BaseTwitter4jClient.java#L74\nThis does not happen on 1 thread.\nThe doc says the listeners must be thread safe but making listeneres thread safe doesn't seem to help because the logic in process() is not thread safe.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jcodagnone": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/130", "title": "Connection leak on trackings with no buzz", "body": "Hi,\n\nI believe that calling `Client#close()` on a  tracking that doesn't deliver any tweet (only empty lines) will leave the connection open and leaked (It can't be released).\n\nI was able to reproduce this situation with version 1.4.0, 2.2.0, and 40e8f29 (the HEAD of master right now).\n\nThe steps to reproduce it:\n1. Track #da39a3ee5e6b4b0d3255bfef95601890afd80709\n2. Wait until we reach the PROCESSING state\n3. Close the client\n4. Wait 31 seconds just to show that this is agnostic of empty lines are delivered (this step is not required)\n5. Print the stacktraces of all threads, and assert that   hosebird-client-io-thread-0 is still alive, and is running a socket read operation.\n\nI've made a test program that is available at zauberlabs/hbc@connection-leak-on-no-buzz:\nhttps://github.com/zauberlabs/hbc/blob/9adb800f108454ce6b141a2c04c1c142a8503511/hbc-example/src/main/java/com/twitter/hbc/example/ConnectionLeakOnNoBuzzTrackExample.java\n\n<pre>\nfinal BlockingQueue<String> queue = new LinkedBlockingQueue<String>(10000);\nfinal BlockingQueue<Event> eventsQueue = new LinkedBlockingQueue<Event>(10000);\n\nfinal StatusesFilterEndpoint endpoint = new StatusesFilterEndpoint();\nendpoint.trackTerms(Lists.newArrayList(\"#da39a3ee5e6b4b0d3255bfef95601890afd80709\"));\n\nfinal Authentication auth = new OAuth1(args[0], args[1], args[2], args[3]);\n\nfinal Client client = new ClientBuilder().hosts(Constants.STREAM_HOST).endpoint(endpoint)\n        .authentication(auth).processor(new StringDelimitedProcessor(queue, 10))\n        .eventMessageQueue(eventsQueue).build();\n\nfinal CountDownLatch processingLatch = new CountDownLatch(1);\nfinal CountDownLatch stopedByUserLatch = new CountDownLatch(1);\n\nfinal Thread eventsThread = new Thread(new Runnable() {\n    @Override\n    public final void run() {\n        try {\n\n            while (!Thread.interrupted()) {\n                final Event event = eventsQueue.take();\n                logger.info(\"{} {}\", event.getEventType(), event.getMessage());\n\n                // if we are connected and processing, signal main\n                // thread to go forward\n                if (EventType.PROCESSING.equals(event.getEventType())) {\n                    processingLatch.countDown();\n                }\n\n                // if we finish stop we go forward with showing the leak\n                if (EventType.STOPPED_BY_USER.equals(event.getEventType())) {\n                    stopedByUserLatch.countDown();\n                }\n            }\n        } catch (InterruptedException e) {\n            logger.info(\"Finishing reading events. Shuting down!\");\n        }\n    }\n}, \"events\");\neventsThread.start();\n\n// Establish a connection\nclient.connect();\n\nprocessingLatch.await();\n\n// Finish\nlogger.info(\"Now that we are conected, we will trigger stop(). Messages: {}\", queue.size());\nclient.stop();\n\nstopedByUserLatch.await();\n\nlogger.info(\"Stopped! Will wait 31 seconds just in case\", queue.size());\n// just to be sure, we wait some more seconds. at least one empty line\nThread.sleep(31000L);\n\nlogger.info(\"Active threads. If a socket appears the connections was leaked\", queue.size());\nprintStackTrace();\n</pre>\n\n\nWill output:\n\n```\n01 [main] INFO com.twitter.hbc.httpclient.BasicClient - New connection executed: hosebird-client-0, endpoint: /1.1/statuses/filter.json?delimited=length&stall_warnings=true\n02 [hosebird-client-io-thread-0] INFO com.twitter.hbc.httpclient.ClientBase - hosebird-client-0 Establishing a connection\n03 [events] INFO com.twitter.hbc.example.FilterStreamExample - CONNECTION_ATTEMPT POST https://stream.twitter.com/1.1/statuses/filter.json?delimited=length&stall_warnings=true HTTP/1.1\n04 [hosebird-client-io-thread-0] INFO com.twitter.hbc.httpclient.ClientBase - hosebird-client-0 Processing connection data\n05 [events] INFO com.twitter.hbc.example.FilterStreamExample - CONNECTED HTTP/1.1 200 OK\n06 [events] INFO com.twitter.hbc.example.FilterStreamExample - PROCESSING Processing messages\n07 [main] INFO com.twitter.hbc.example.FilterStreamExample - Now that we are conected, we will trigger stop(). Messages: 0\n08 [main] INFO com.twitter.hbc.httpclient.BasicClient - Stopping the client: hosebird-client-0, endpoint: /1.1/statuses/filter.json?delimited=length&stall_warnings=true\n09 [main] INFO com.twitter.hbc.httpclient.ClientBase - hosebird-client-0 exit event - Stopped by user: waiting for 5000 ms\n10 [events] INFO com.twitter.hbc.example.FilterStreamExample - STOPPED_BY_USER Stopped by user: waiting for 5000 ms\n11 [main] WARN com.twitter.hbc.httpclient.ClientBase - hosebird-client-0 Client thread failed to finish in 5000 millis\n12 [main] INFO com.twitter.hbc.httpclient.BasicClient - Successfully stopped the client: hosebird-client-0, endpoint: /1.1/statuses/filter.json?delimited=length&stall_warnings=true\n13 [main] INFO com.twitter.hbc.example.FilterStreamExample - Stopped! Will wait 31 seconds just in case\n14 [main] INFO com.twitter.hbc.example.FilterStreamExample - Active threads. If a socket appears the connections was leaked\n15  Reference Handler\n16     java.lang.Object.wait(Object.java:-2): WAITING\n17     at java.lang.Object.wait(Object.java:503)\n18     at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n19 \n20  Finalizer\n21     java.lang.Object.wait(Object.java:-2): WAITING\n22     at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n23     at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)\n24     at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:189)\n25 \n26  Signal Dispatcher\n27 \n28  hosebird-client-io-thread-0\n29     java.net.SocketInputStream.socketRead0(SocketInputStream.java:-2): RUNNABLE\n30     at java.net.SocketInputStream.read(SocketInputStream.java:152)\n31     at java.net.SocketInputStream.read(SocketInputStream.java:122)\n32     at sun.security.ssl.InputRecord.readFully(InputRecord.java:442)\n33     at sun.security.ssl.InputRecord.read(InputRecord.java:480)\n34     at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:927)\n35     at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:884)\n36     at sun.security.ssl.AppInputStream.read(AppInputStream.java:102)\n37     at org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:166)\n38     at org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:90)\n39     at org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:281)\n40     at org.apache.http.impl.io.ChunkedInputStream.getChunkSize(ChunkedInputStream.java:251)\n41     at org.apache.http.impl.io.ChunkedInputStream.nextChunk(ChunkedInputStream.java:209)\n42     at org.apache.http.impl.io.ChunkedInputStream.read(ChunkedInputStream.java:171)\n43     at org.apache.http.conn.EofSensorInputStream.read(EofSensorInputStream.java:138)\n44     at java.util.zip.InflaterInputStream.fill(InflaterInputStream.java:238)\n45     at java.util.zip.InflaterInputStream.read(InflaterInputStream.java:158)\n46     at java.util.zip.GZIPInputStream.read(GZIPInputStream.java:116)\n47     at com.twitter.hbc.common.DelimitedStreamReader.readLine(DelimitedStreamReader.java:72)\n48     at com.twitter.hbc.common.DelimitedStreamReader.readLine(DelimitedStreamReader.java:56)\n49     at com.twitter.hbc.core.processor.StringDelimitedProcessor.processNextMessage(StringDelimitedProcessor.java:53)\n50     at com.twitter.hbc.core.processor.StringDelimitedProcessor.processNextMessage(StringDelimitedProcessor.java:1)\n51     at com.twitter.hbc.core.processor.AbstractProcessor.process(AbstractProcessor.java:46)\n52     at com.twitter.hbc.httpclient.Connection.processResponse(Connection.java:51)\n53     at com.twitter.hbc.httpclient.ClientBase.processConnectionData(ClientBase.java:244)\n54     at com.twitter.hbc.httpclient.ClientBase.run(ClientBase.java:144)\n55     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n56     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n57     at java.lang.Thread.run(Thread.java:745)\n58 \n59  events\n60     sun.misc.Unsafe.park(Unsafe.java:-2): WAITING\n61     at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n62     at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)\n63     at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)\n64     at com.twitter.hbc.example.FilterStreamExample$1.run(FilterStreamExample.java:75)\n65     at java.lang.Thread.run(Thread.java:745)\n66 \n67  main\n68     java.lang.Thread.getStackTrace(Thread.java:1589): RUNNABLE\n69     at com.twitter.hbc.example.FilterStreamExample.printStackTrace(FilterStreamExample.java:123)\n70     at com.twitter.hbc.example.FilterStreamExample.main(FilterStreamExample.java:113)\n```\n\nLine 11 shows a failure, and the stack trace shows that the connection thread is still alive (but the tracker is not).\n\nI've think that this might be a corner case in AbstractProcessor#process\n\n```\nT msg = processNextMessage();\nwhile (msg == null) {\n  msg = processNextMessage();\n}\nreturn queue.offer(msg, offerTimeoutMillis, TimeUnit.MILLISECONDS);\n```\n\nAs the tracking has no buzz, processNextMessage() will always return null and it can't break the loop. \n\nRegards,\n   Juan.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hhimanshu": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/128", "title": "How can streaming application have different message queues?", "body": "Considering the example mentioned on your GitHub project (https://github.com/twitter/hbc/blob/master/hbc-example/src/main/java/com/twitter/hbc/example/FilterStreamExample.java), lets take a scenario: \n\n```\nI have 3 users: User A, User B and User C\n\nUser A: wants all the tweets for \"Brazil\"\nUser B: wants all the tweets for \"Germany\"\nUser C: wants all the tweets for \"San Francisco\"\n```\n\nFrom example on Github\n\n``` java\n BlockingQueue<String> queue = new LinkedBlockingQueue<String>(10000);\n    StatusesFilterEndpoint endpoint = new StatusesFilterEndpoint();\n    // add some track terms\n    endpoint.trackTerms(Lists.newArrayList(\"twitterapi\", \"#yolo\"));\n\n    Authentication auth = new OAuth1(consumerKey, consumerSecret, token, secret);\n    // Authentication auth = new BasicAuth(username, password);\n\n    // Create a new BasicClient. By default gzip is enabled.\n    Client client = new ClientBuilder()\n            .hosts(Constants.STREAM_HOST)\n            .endpoint(endpoint)\n            .authentication(auth)\n            .processor(new StringDelimitedProcessor(queue))\n            .build();\n\n    // Establish a connection\n    client.connect();\n```\n\nNow if I need a different <code>messageQueue</code> for each user, I will have to create 3 <code>client</code> and connect 3 times. When I do that, I see error as \n\n```\n[0m[0m16:04:06,946 INFO  [com.twitter.hbc.httpclient.BasicClient] (default task-6) New connection executed: tweetStream-client, endpoint: /1.1/statuses/filter.json?delimited=length&stall_warnings=true\n[0m[0m16:04:06,947 INFO  [com.twitter.hbc.httpclient.ClientBase] (hosebird-client-io-thread-0) tweetStream-client Establishing a connection\n[0m[33m16:04:07,660 WARN  [com.twitter.hbc.httpclient.ClientBase] (hosebird-client-io-thread-0) tweetStream-client Error connecting w/ status code - 420, reason - Enhance Your Calm\n[0m[0m16:04:12,662 INFO  [com.twitter.hbc.httpclient.ClientBase] (hosebird-client-io-thread-0) tweetStream-client Done processing, preparing to close connection\n[0m[0m16:04:12,665 INFO  [com.twitter.hbc.httpclient.ClientBase] (hosebird-client-io-thread-0) tweetStream-client Establishing a connection\n[0m[31m16:04:12,665 ERROR [com.twitter.hbc.httpclient.ClientBase] (hosebird-client-io-thread-0) tweetStream-client Unknown exception while establishing connection to https://stream.twitter.com/1.1/statuses/filter.json?delimited=length&stall_warnings=true: java.lang.IllegalStateException: Connection pool shut down\n    at org.apache.http.pool.AbstractConnPool.lease(AbstractConnPool.java:167) [httpcore-4.2.4.jar:4.2.4]\n    at org.apache.http.pool.AbstractConnPool.lease(AbstractConnPool.java:199) [httpcore-4.2.4.jar:4.2.4]\n    at org.apache.http.impl.conn.PoolingClientConnectionManager.requestConnection(PoolingClientConnectionManager.java:188) [httpclient-4.2.5.jar:4.2.5]\n    at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:448) [httpclient-4.2.5.jar:4.2.5]\n    at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:906) [httpclient-4.2.5.jar:4.2.5]\n    at org.apache.http.impl.client.DecompressingHttpClient.execute(DecompressingHttpClient.java:137) [httpclient-4.2.5.jar:4.2.5]\n    at org.apache.http.impl.client.DecompressingHttpClient.execute(DecompressingHttpClient.java:108) [httpclient-4.2.5.jar:4.2.5]\n    at com.twitter.hbc.httpclient.RestartableHttpClient.execute(RestartableHttpClient.java:86) [hbc-core-2.0.2.jar:]\n    at com.twitter.hbc.httpclient.Connection.connect(Connection.java:44) [hbc-core-2.0.2.jar:]\n    at com.twitter.hbc.httpclient.ClientBase.establishConnection(ClientBase.java:179) [hbc-core-2.0.2.jar:]\n    at com.twitter.hbc.httpclient.ClientBase.run(ClientBase.java:142) [hbc-core-2.0.2.jar:]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [rt.jar:1.8.0_05]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [rt.jar:1.8.0_05]\n    at java.lang.Thread.run(Thread.java:745) [rt.jar:1.8.0_05]\n\n[0m[0m16:04:12,667 INFO  [com.twitter.hbc.httpclient.ClientBase] (hosebird-client-io-thread-0) tweetStream-client exit event - Connection pool shut down\n[0m[33m16:04:12,667 WARN  [com.twitter.hbc.httpclient.ClientBase] (hosebird-client-io-thread-0) tweetStream-client failed to establish connection properly\n[0m[0m16:04:12,667 INFO  [com.twitter.hbc.httpclient.ClientBase] (hosebird-client-io-thread-0) tweetStream-client Done processing, preparing to close connection\n[0m[0m16:04:12,667 INFO  [com.twitter.hbc.httpclient.ClientBase] (hosebird-client-io-thread-0) tweetStream-client Shutting down httpclient connection manager\n```\n\nI tried to identify why this error occurs when I do this and find https://dev.twitter.com/docs/streaming-apis/connecting which says \n\n```\nThe client has connected too frequently. For example, an endpoint returns this status if:\n\nA client makes too many login attempts in a short period of time.\nToo many copies of an application attempt to authenticate with the same credentials.\n```\n\nMy question is simple:\nWith one registered application and using streaming-api, how can I have separate queues for different items to track without connecting to the client every time. This is so that my application works maintains independent queues for each track-to-follow and without hitting Rate Limits\n\nThanks a lot for your help in advance\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "eleonora-ciceri": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/124", "title": "Crawler consumes memory", "body": "Hi all,\nConsidering this simple example:\n\n```\n    BlockingQueue<String> queue = new LinkedBlockingQueue<String>(100);\n    StatusesFilterEndpoint endpoint = new StatusesFilterEndpoint();\n    endpoint.trackTerms(Lists.newArrayList(\"cake\"));\n\n    Authentication auth = new OAuth1(MyConstants.TwitterConsumerKey, MyConstants.TwitterConsumerSecret, MyConstants.OAuthAccessToken, MyConstants.OAuthAccessTokenSecret);\n\n    Client client = new ClientBuilder()\n            .hosts(Constants.STREAM_HOST)\n            .endpoint(endpoint)\n            .authentication(auth)\n            .processor(new StringDelimitedProcessor(queue))\n            .build();\n\n    client.connect();\n\n    String JSON = null;\n    while (true)\n        try {\n            JSON = queue.take();\n            System.out.println(JSON);\n        } \n        catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n```\n\nEvery time I start the crawler, the Java process in memory keeps growing in size. Since this should be a long-running process, and I don't want it to saturate the memory, I would like to know whether there is a way of fixing this problem.\n\nWhy is this growing in size? It is writing always in the same string, and the queue should be fixed in dimension. What is happening?\n\nThanks.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "abhatt1250": {"issues": [{"url": "https://api.github.com/repos/twitter/hbc/issues/122", "title": "error", "body": "i have been trying to run my hbc but i get the following error .\n\n[com.twitter.hbc.example.SampleStreamExample.main()] INFO com.twitter.hbc.httpclient.BasicClient - New connection executed: sampleExampleClient, endpoint: /1.1/statuses/sample.json?delimited=length&stall_warnings=true\n[hosebird-client-io-thread-0] INFO com.twitter.hbc.httpclient.ClientBase - sampleExampleClient Establishing a connection\n[hosebird-client-io-thread-0] WARN com.twitter.hbc.httpclient.ClientBase - sampleExampleClient IOException caught when establishing connection to https://stream.twitter.com/1.1/statuses/sample.json?delimited=length&stall_warnings=true\n[hosebird-client-io-thread-0] WARN com.twitter.hbc.httpclient.ClientBase - sampleExampleClient failed to establish connection properly\n[hosebird-client-io-thread-0] INFO com.twitter.hbc.httpclient.ClientBase - sampleExampleClient Done processing, preparing to close connection\n\nplzz help\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/47621097", "body": "yes\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/47621097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/47881221", "body": "plzz help\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/47881221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "grimreaper": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hbc/commits/ce61517be1e726fb4f5809786af86e14a559a4d7", "message": "Merge pull request #146 from bw-tom/set-publisher-configurable\n\nAdding a new constructor to utilise non-twitter gnip endpoints"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/5c4e59739dcb047898703f4c1b80d4d7fa2ecbd1", "message": "Merge pull request #149 from kutsal/http-proxy-support\n\nImprovement: Adding HTTP/S proxy support"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kutsal": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hbc/commits/6c20add1a1df5bf1fdb0dc9e6dd2ccaae539df27", "message": "Improvement: Adding HTTP/S proxy support\n\nThis commit adds HTTP/S proxy support to ClientBuilder."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/108848580", "body": "https://github.com/twitter/hbc/pull/149 fixes this.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/108848580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "bw-tom": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hbc/commits/7f00e4820854cb0c3a501d993ce45043f1a39051", "message": "Adding a new constructor to utilise non-twitter gnip endpoints"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kevinoliver": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hbc/commits/ac4cbdf561961fba9c6ea655c5f334cce4f7d5a9", "message": "Merge pull request #142 from twitter/new-travisci-infra\n\nUse the new Travis CI container infrastructure"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/b9939e3d5589cbec706b9dd5c531b0bbfeefda8c", "message": "Merge pull request #140 from gengel/master\n\nREADME: client.shutdown() should be client.stop()"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/602944b2bb3f23f3f8661d43239648f0ae25a0f7", "message": "Merge pull request #136 from pheuter/patch-1\n\nUpdate Twitter4jClient interface to be public"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/40e8f29a83f7980cd51de7a69359b4e66021db31", "message": "Merge pull request #129 from twitter/readme-update\n\nupdate README to reflect latest maven version number 2.2.0"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/a008fe4e58bdfc5427647315340fafbac5dc231c", "message": "Merge pull request #123 from twitter/add-coveralls\n\nAdd coveralls code coverage support"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/5043d570710b04a6cd4f0a6fd576bd5f94e3b57a", "message": "Merge pull request #121 from twitter/powertrack-support\n\nAdd support for Gnip's Powertrack"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/3ec90185be5bc5785c6931139e243e0660c59869", "message": "Merge pull request #118 from hootsuitemike/sitestream_message_filtering\n\nFix user and message extraction from Sitestream message envelopes"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/60969ef2dc739bf72618be3351312a4975d85c47", "message": "Merge pull request #119 from paradigmsort/fix_restartable\n\nFix RestartableHttpClient."}, {"url": "https://api.github.com/repos/twitter/hbc/commits/8ee6fa76c491adc781f4b88cca3859649e54614b", "message": "Merge pull request #117 from hootsuitemike/support_sitestreams_follow_param\n\nAdd support for follow parameter on GET site."}, {"url": "https://api.github.com/repos/twitter/hbc/commits/d28b6e569fdc1a1e8bf62aedb01c81be72f7462f", "message": "Merge pull request #115 from noonhub/fix-readme\n\nREADME.md typos and fixes"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/bf24e514197211440990d29c4d350d22cc8d6661", "message": "fixes for estimateBackoff"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/d83dd0d7817cea6ec0a06fb532a79e3e4ac0e8d8", "message": "bump to 2.0.3-SNAPSHOT"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/4ee2088fbf1983fcf222ef5111b0c1a7592292a8", "message": "Update versions to 2.0.2"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/281306d4f7253778d495f0c5ae43ca9512ff9fe4", "message": "Merge pull request #111 from twitter/prep-for-2.0.2\n\nupdated changelog"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/eb49e50520f2ccbc399646ba0a99b1f0659906e3", "message": "updated changelog"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/9790903b4e75c5c0677de7de5c85d094cd689306", "message": "Merge pull request #110 from bkhau/allow-configuration-of-connection-manager\n\nAllow configuration of connection manager"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/129b907aa590b66752d7caa8abb5f22d411b53de", "message": "Merge pull request #109 from alexnederlof/patch-1\n\nCorrected code example"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/b186d51d61db8cd56def05353cf7dd4e634dcecf", "message": "bump versions to 2.0.2-SNAPSHOT"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/48fd2882a8c75836711b20213efab1851565c933", "message": "Stabilize on version 2.0.1"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/7b1d144fd7f992ee5d4c9e15d897caf0a75a6d01", "message": "changelog for 2.0.1"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/5c1c4dce4fccc407488f3a362431a3dddd779393", "message": "fix some static analysis warnings"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/5bbe92c72ee91f56a14713417796e120e5a48857", "message": "avoid deprecated guava method Closeables.closeQuietly"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/2a2c4816ca028598d64a47eab31ad5327fa8d83e", "message": "move to 2.0.1-SNAPSHOT"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/6ce6b7d12ffcf1203e3909ba592904a0fd62773d", "message": "Stabilize on 2.0.0"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/3547238d221c038ef1224d2d1c3992861e80e3f1", "message": "t4j 4.0.1"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/74e5ed42ca678d70b1b3a49049e30e1e3ef899d2", "message": "merge master"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/c24d0ec67f8f1932ea2adc598048d6029d0f1a0c", "message": "ClientBase catches Throwable now"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/fa9d1a38e809f88ea37f830f505639f09dbbff09", "message": "add more guidance to the readme for running the example"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/fcf16d187097f776811c42142dec6aada4228f6f", "message": "upgrade to guava 14.0.1 from 13.0.1"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/b237ef909ce9614d648c9bfa754810cf504daf3c", "message": "rm v3 from package structure"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/01293442fed8c8542e8f2adae65a3762758ad9f2", "message": "mv hbc-twitter4j-v3 to hbc-twitter4j"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/2816af85960de665056f2366508b8c9b2e9631ba", "message": "rm hbc-twitter4j module"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/f3eaa2fbf0c9d22c465ba6e0a2b70f9ea762e0f9", "message": "update changelog"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/b72bd800d8401b76d21afa1c2ed2739f77514aec", "message": "update readme"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/877e0444d8c36f3ece4da4b97cf22b3548dd7d8e", "message": "upgrade to t4j 4.0.0"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/51e6147b36450041eadd398ea4335dffce59f2d1", "message": "bump to 2.0.0-SNAPSHOT"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/d9305bd55a5b415cf8d359f15e689d297ddbab41", "message": "more pom cleanings"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/3b0abe9ba26baa13f52150016b30a38f296b6725", "message": "fix pom"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/503598be389a89c791a7496ad7a2211e34ec4ab6", "message": "tests compiling"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/a4fc1e871d6164edbedecce047aecd5515a0f211", "message": "compiling"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/661c0933f94b8f095276c2891409a045c2cd3178", "message": "Merge pull request #94 from ninowalker/master\n\nVersion bump maven in the README."}, {"url": "https://api.github.com/repos/twitter/hbc/commits/6abda8900ec5818a4d3bc9104e6200d8ab7cde7d", "message": "update readme to use HttpHosts"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/5d0eae5391f44a390fbbfcc04d4d02c58431a790", "message": "1.4.3 snapshot"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/f83f6cb64b80b1b04a2c3f57b321effe794ef605", "message": "1.4.2"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/42dc6a7159e83da7f46ab93c43334c019de587a2", "message": "Merge branch 'master' of github.com:twitter/hbc"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/1ab7e0bf55b21e1ce1c2dbc14303a5b81353514e", "message": "stabilize on 1.4.1"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/dd89e2490b638fddbe84673f6a5d2bd118f28af0", "message": "use target_object instead of target for list events"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/ceac87b80bf11b9ec7d95786b1e3d2a24b5b1731", "message": "Merge pull request #85 from twitter/fix_stacktrace\n\nFix stack overflow issue in AbstractProcessor"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/42b00d97d1563060eb2a5de7e6edf2a321eb7d49", "message": "Merge pull request #83 from wtfleming/master\n\nUse correct sitestream endpoint in example"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/be8e3225d32e038037988dca04fd3e83e2e6c6dd", "message": "expose new withUser method on UserstreamEndpoint"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/c933eca7b7e94c9033322571a5ca2e0ec9e031f4", "message": "Merge pull request #74 from toffaletti/reconnection_manager_interface\n\nReconnectionManager now an interface, allow ClientBuilder to specify it"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/24b8a9b6e584e8619919e3590db411ae2c621538", "message": "Merge pull request #77 from eldenbishop/master\n\nFixes for SitestreamController"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/589516347b5677bef4c19b89df3da2ab3277ac1e", "message": "Merge pull request #78 from twitter/stop_ratetracker\n\nCall RateTracker.stop() in a try-finally block"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/08b56ea96e80d9ff301172053e85552a0aa2401b", "message": "Merge pull request #76 from toffaletti/stats_reporter_incr_num_connects\n\ncall statsReporter.incrNumConnects"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/aae521261a6da9015deaa7ecc7099df0544d6bab", "message": "Merge pull request #72 from toffaletti/ratetracker_eventobserved_fix\n\ncall rateTracker.eventObserved"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/074c486eb70ef52d5da146c27e5ea2ea986a3d76", "message": "Merge pull request #61 from twitter/http_1.1\n\nForce http 1.1"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/41b45277582bdd8b947fc72a0e6a13bc13cfd9d8", "message": "add docs to Client"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/3f8c50aaca50cc2e3c9100fb4b5d1ca563799287", "message": "Merge pull request #58 from twitter/some_t4j_stuff\n\nSmall t4j changes, joauth bump"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/a3e552c76ba378524c7d8da7f821b32989161d08", "message": "Merge pull request #55 from toffaletti/ratetracker_interface_53\n\nfixes issue #53"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/13991d7cfb149d641dbaec60075af64f132f76da", "message": "* add more callbacks for v3\n* move example over to using t4j v3"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/20e40286c58ede745e83f2941931b2a9f646f3f6", "message": "clean up readme"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/a748dd85b8b38ae738e5437dcb4ee9dd0579364e", "message": "get tests compiling and passing"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/c4f9b755edcdb3942aa48209b6956ef974b5ce62", "message": "cleanup"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/645066f71116616ca61485b67d4ec36b8f3e332f", "message": "get main compiling"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/84053cf9928169e188f45c50dadb5f7ed836c387", "message": "added the module"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/68e1d44871bc3cbe7b6fbe85976ab73e5982ecf0", "message": "Merge pull request #48 from alesj/precondition_move\n\nMove precondition check."}, {"url": "https://api.github.com/repos/twitter/hbc/commits/80b97b5d55f17a6f2af22d4d5478e59d4d7af771", "message": "Merge pull request #39 from twitter/fix_multiread_bug\n\nFix bug when we have multiple reads in DelimitedStreamReader"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/fda49a81a41073f8057d1915014479d51c51d4b9", "message": "Merge pull request #36 from twitter/fix_processor\n\nStringDelimitedProcessor should handle multibyte characters properly"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/ff32eb68853a4db03f8c6d680952a9392f4c687d", "message": "Merge pull request #34 from twitter/restartable_client\n\nRestartableHttpClient workaround for DecompressingHttpClient bug"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/0f92f25a17533d1d62a022b43c8cfd43235a99bf", "message": "Merge pull request #32 from twitter/t4j_on_follow\n\nAdd onFollow for Twitter4jUserstreamClient"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/b208022a88ad7a44fb08d3972482f733687d5403", "message": "Merge pull request #31 from twitter/bump_joauth\n\nBump joauth version"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/713375b5ecc3d510176033bf4d16c6deedf8e1e4", "message": "Merge pull request #26 from vmpn/patch-2\n\nUse AtomicBoolean in atomic way"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/f0619ca25d8275b72b79a6a98a22201f2469db9f", "message": "add basic tests"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/4fb47879b45b1fb7d5f5e7a91c9eb9306b0f52c4", "message": "add filter_level param"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/bf86cea9ed175e6bea26c264e2453350e1280b8c", "message": "add language"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/d926d386292f53751193964b15b0ca3e0ed96014", "message": "Merge pull request #23 from twitter/fix_locations\n\nFix locations"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/4b810cfd3773a3dabb646418eb094a7b25476dc9", "message": "Merge pull request #22 from twitter/fix-example-docs\n\nfix howto for example"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/31210c49185c51c48f37f588766c5c5897bfa65f", "message": "fix howto for example"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/7d850553d75822e6851a1fbef2e27f7d65f95c78", "message": "Merge pull request #17 from twitter/add_dependency_snippet\n\nAdd dependency snippet in README"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/8926c8426d3652edda19706ed13c2b76fa3bc54f", "message": "Merge pull request #16 from twitter/fix_poms_for_release\n\nFix pom file for release"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/af29f78d054d9806deb0c6f635ac3b4966ab66a9", "message": "Merge pull request #14 from twitter/sitestream-controller-fix\n\nUse PoolingClientConnectionManager"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/103493a75cc88b50ac9e3320104ab32797200b81", "message": "Merge pull request #10 from twitter/close_once\n\nCall getConnectionManager().shutdown() only once when stopping"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/a4e5980a29fc97067e8c36a4ec062276900095ec", "message": "make this easier to play with"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/50161927cfb83a64128adbdd6edf0a17bdbba70a", "message": "make it clear that you need to compile to run the examples"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/07fe59ad0091dfc5084122d82f672b73fd0837ce", "message": "Merge branch 'j7-take2' of github.com:twitter/hbc into j7-take2"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/6709a5af802bfb4505f58a6c936d01d883d44c27", "message": "revert pom changes"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/155a70ee7ae87748c818372525b67a1c94679d27", "message": "merge master and cleanup cruft"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/421c1fb3fe2130796c2c408bc95bd1e031f06ab3", "message": "cleanup and update readme"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/f97e9644904d874de5c40c9220b765cc53e3aedb", "message": "hackityhack"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/2fb066a67a7fcf949b955fa3782794c01801dceb", "message": "Merge pull request #5 from twitter/fix_examples\n\nComment fix on shading"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/4cd1a4ab71b141e97e4d49b43781207bd14fed73", "message": "Merge pull request #3 from twitter/minor_improvements\n\nA couple of minor improvements"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14209308", "body": "added some feedback.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14209308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14212095", "body": "lgtm\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14212095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14252974", "body": "Hold off on this, some cruft snuck in.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14252974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14253308", "body": "Ok, merged master and reverted the failed pom attempts at this fix. Please take a look now.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14253308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14264666", "body": "Most likely you need to recompile after that change. I'll update the docs to make this more obvious.\n\nTry running:\nmvn compile && mvn exec:java -pl hbc-example\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14264666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14265102", "body": "and did you successfully connect to the api?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14265102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14266398", "body": "So, what kind of app do you have? hbc wasn't designed to be used as a command line tool, though you can probably make it work like that. It uses slf4j as a logging facade and you can configure that as you see fit.\n\nIf you are using the example code for this, I definitely do not recommend that. Instead rework the example code into something that writes the output where you need it, perhaps you don't even need to write to stdout at all and instead your app can just consume the messages internally.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14266398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14266540", "body": "Think of hbc as a library that you can use to build your streaming application. The is no \"app\" in hbc, perhaps the closest we get is the example code, but there is nothing in hbc that should prevent you from killing your application via control-c or a kill signal.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14266540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14300464", "body": "Try using java 7 to compile. We compile to a 1.6 compatible so you'll be fine running the code with java 6. \n\nWe don't know what the issue is, but we've been unable to get this simple looking bit of code to compile with javac from both 1.6 and 1.7. Its quite a mystery\u2026\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14300464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14300649", "body": "I'd love it we could add some unit tests, but we don't currently have tests with in-process http servers that would let us test this. Might be something to think about in the future.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14300649/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14300750", "body": "@graysky thanks for the bug report. we don't have any internal clients of sitestreams, so this hasn't gotten as much testing as the rest of the code. i merged in the fix from @xsl so hopefully this is fixed for you.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14300750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14394145", "body": "Yes, joauth does depend on scala, but by using Maven it should take care of the dependencies for you.\n\n$ mvn -pl :hbc-example dependency:tree\n<snip>\n[INFO] ------------------------------------------------------------------------\n[INFO] Building Hosebird Client Examples 1.3.1-SNAPSHOT\n[INFO] ------------------------------------------------------------------------\n[INFO] \n[INFO] --- maven-dependency-plugin:2.1:tree (default-cli) @ hbc-example ---\n[INFO] com.twitter:hbc-example:jar:1.3.1-SNAPSHOT\n[INFO] +- com.twitter:hbc-twitter4j:jar:1.3.1-SNAPSHOT:compile\n[INFO] |  +- com.twitter:hbc-core:jar:1.3.1-SNAPSHOT:compile\n[INFO] |  |  +- org.apache.httpcomponents:httpclient:jar:4.2.3:compile\n[INFO] |  |  |  +- org.apache.httpcomponents:httpcore:jar:4.2.2:compile\n[INFO] |  |  |  +- commons-logging:commons-logging:jar:1.1.1:compile\n[INFO] |  |  |  - commons-codec:commons-codec:jar:1.6:compile\n[INFO] |  |  +- com.twitter:joauth:jar:3.2.1:compile\n[INFO] |  |  |  - org.scala-lang:scala-library:jar:2.9.2:compile\n[INFO] |  |  - com.google.code.findbugs:jsr305:jar:1.3.9:compile\n[INFO] |  +- com.google.guava:guava:jar:13.0.1:compile\n[INFO] |  +- org.twitter4j:twitter4j-core:jar:2.2.6:compile\n[INFO] |  - org.twitter4j:twitter4j-stream:jar:2.2.6:compile\n[INFO] +- org.slf4j:slf4j-simple:jar:1.7.2:compile\n[INFO] |  - org.slf4j:slf4j-api:jar:1.7.2:compile\n[INFO] +- org.mockito:mockito-all:jar:1.8.5:test\n[INFO] - junit:junit:jar:4.8.1:test\n[INFO] ------------------------------------------------------------------------\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14394145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14394479", "body": "Are you compiling and running it as described in the readme?\n\n```\n[hbc]$ mvn compile && mvn exec:java -pl hbc-example -Dconsumer.key=XYZ -Dconsumer.secret=SECRET -Daccess.token=ABC -Daccess.token.secret=ABCSECRET\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14394479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14394936", "body": "So for maven you generally don't want to be using other peoples snapshots, and instead you want to compile/install them locally. \n\nBUT, our docs are wrong. It should be `mvn install && mvn exec:java -pl hbc-example` \n\nI'll update the docs.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14394936/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14455270", "body": "Thanks for the bug report. Does this fail 100% of the time for you with HBC? And work 100% of the time for you with curl?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14455270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14531495", "body": "Yep, good catch. Thanks for the patch.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14531495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14543233", "body": "Well\u2026 we use those for annotating our code with @Nullable.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14543233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14652352", "body": "The issue seems to've been in older versions of commons-codec. Fixed there instead.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14652352/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14851392", "body": "Yeah, this is a bug in 1.3.0. Try out 1.3.1 \u2014 it was fixed here https://github.com/twitter/hbc/pull/32\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14851392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14851426", "body": "Should've been fixed in https://github.com/twitter/hbc/issues/14\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14851426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14851516", "body": "Should be fixed in 1.3.1 by https://github.com/twitter/hbc/issues/23\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14851516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14851675", "body": "Fixed some joauth issues to help here:\nhttps://github.com/twitter/joauth/pull/4\nhttps://github.com/twitter/joauth/pull/5\nhttps://github.com/twitter/joauth/pull/6 \n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14851675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15067956", "body": "Duplicate of https://github.com/twitter/hbc/issues/35 and being addressed by https://github.com/twitter/hbc/pull/36\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15067956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16412506", "body": "I'm taking a look at this today.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16412506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16412708", "body": "Thanks for the report. We don't have any sitestreams clients internally at Twitter, so this is the least tested part of the codebase. Seems like both of these issues should be fixable and we'd definitely love pull requests from working code.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16412708/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16417907", "body": "@caniszczyk i plan to remove the other module after the streaming api removes support.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16417907/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16462364", "body": "@xsl good catches. I've added the callbacks and updated the t4j example code to use v3.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16462364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16515192", "body": "Twitter will eventually be moving our scala projects to 2.10. In the meantime, your best bet may be to shade joauth and it's dependencies in your build.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16515192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16517352", "body": "Yeah, I don't love scala's lack of binary compatibility between versions either. This was definitely a factor in why we chose to write hbc in java. There's always a chance we'd write a version of joauth that is java only.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16517352/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16684600", "body": "Sounds like a nice improvement to add\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16684600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16826427", "body": "Thanks for the patch.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16826427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/17045839", "body": "I'm not an expert on Twitter4J, but as far as I can tell, DataObjectFactory.getRawJSON is somewhat of an implementation detail of t4j and its sensitive to which thread calls it. \n\nIf you need the raw json, you can use hbc-core, or maybe you could create a subclass of BaseTwitter4JClient and override preprocessMessage() or one of the other methods to do the necessary work in there?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/17045839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/17178188", "body": "@xsl I think we can document this clearly. I'll throw a quick pull request together.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/17178188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18221570", "body": "Do you mean exposing an endpoint which tells you what users are connected from a given IP address?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18221570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18246299", "body": "I'm not sure what you are looking for here. The project is released as a jar and you can include it in your project. If you want to build it, you should use maven for that. If you just want the binary jar, you can get it from [maven central](http://search.maven.org/). If you want to have a maven based project on GAE, that seems possible as [well](https://developers.google.com/appengine/docs/java/tools/maven).\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18246299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18286053", "body": "Bummer that we are delivering invalid UTF-8 data. I'd love to see the invalid data too so that we can fix things on our side.\n\nCouple options here:\n- patch DelimitedStringReader so that you wrap the `new String(...)` in a try-catch block with logging, incrementing a stat and returning null in the case of an exception.\n- create a new `HosebirdMessageProcessor` (eg a ByteArrayMessageProcessor) that is parameterized on `byte[]` and use it in your `ClientBuilder`.\n- I'm not familiar with your 2nd option (CharsetDecoder changes), but if there is a good reason that is preferable to either of those 1st 2 options, please explain.\n\nI think the simplest possible thing is patching DelimitedStringReader, but it also doesn't give much flexibility. I suspect its good enough for this though.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18286053/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18286574", "body": "Does control stream's info endpoint help here?\nhttps://dev.twitter.com/docs/streaming-apis/streams/site/control#info\n\nYou could store the stream_id's and check if they are still connected.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18286574/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18375989", "body": "Ahhh didn't know that bit about the String constructor replacing bad data. \n\nSo, my take is that this was a bug on our end that we don't expect to regress again and I'd rather leave this bit simple in our implementation.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18375989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18567936", "body": "My guess from this is that you need to configure ClientBuilder.hosts() to use Constants.USERSTREAM_HOST.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18567936/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18568156", "body": "Are there actually more messages to read? This code will block at queue.take() waiting for more messages.\n\nIf you are sure there are more messages to be read, can you capture a stack dump and attach it here? jstack is good for that.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18568156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18568187", "body": "Based on your issue #66, it seems you've already sorted this out.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18568187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18631096", "body": "This is discussed in issue #67\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18631096/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18631316", "body": "DMs and replies are included in userstreams [1]\nMentions can be done via track terms [2]\n\nAll the streaming api documentation is here [3]\n\n[1] https://dev.twitter.com/docs/streaming-apis/streams/user\n[2] https://dev.twitter.com/docs/streaming-apis/parameters#track\n[3] https://dev.twitter.com/docs/streaming-apis\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18631316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18631385", "body": "Please take a look at the streaming api docs [1] and the comments in issue #68 \n\n[1] https://dev.twitter.com/docs/streaming-apis\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18631385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18651043", "body": "thanks\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18651043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18689458", "body": "That looks legit to me. You can also use StatusesFilterEndpoint.trackTerms(List<String>) instead of UserstreamEndpoint.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18689458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18689923", "body": "`withFollowings(true)` translates to having the parameter \"with=following\" as documented here [1]. `withFollowings(false)` translates to having the default, \"with=user\".\n\n[1] https://dev.twitter.com/docs/streaming-apis/parameters#with\n\nCan you show an example where you do not get the tweets you expect to see when the parameter is set?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18689923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/19466974", "body": "lgtm, thanks!\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/19466974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/19831167", "body": "Sorry both @xsl and I have been pretty swamped on other work. The idea seems reasonable, just haven't had a chance to look over the diffs.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/19831167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/20767940", "body": "Thank you for the contribution\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/20767940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/20768689", "body": "This looks good. I'm making some very minor changes and will then merge it in:\n- added license to ReconnectionManager\n- 2 spaces for indentation in ReconnectionManager\n- moved javadocs from BasicReconnectionManager to ReconnectionManager\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/20768689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/20768996", "body": "Merged this in as: c933eca7b7e94c9033322571a5ca2e0ec9e031f4\n\nThanks.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/20768996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/20770725", "body": "Sorry its taken so long to look into this. I'm also able to reproduce it. \nCouple issues here:\n- The streaming docs need to be fixed. I'll help get that fixed. The default for userstreams is with=followings if the parameter is not included. The default for sitestreams is with=user if the parameter is not included.\n- The UserstreamEndpoint code in hbc was relying on the default being with=user. Instead I think we should instead expose a withUser(boolean) method. I'll make a pull request for this.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/20770725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/20771516", "body": "I'm not entirely sure what you are looking for here. Do the [streaming api docs](https://dev.twitter.com/docs/streaming-apis) help? \n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/20771516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/20771735", "body": "This is what Sitestreams is designed for. Its in limited beta, but you can try applying:\nhttps://dev.twitter.com/docs/streaming-apis/streams/site#Applying_for_access\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/20771735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/20771768", "body": "This should be fixed by using withUser(true) from pull request #79 \n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/20771768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/20790062", "body": "Nice. Looks like the docs have been fixed too. https://dev.twitter.com/docs/streaming-apis/parameters#with\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/20790062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/22265587", "body": "One of hbc's dependencies, joauth, is only published against scala 2.9.\n\nInternally we have discussed moving joauth off of scala completely, but haven't had the time. When that happens, we plan to remove hbc's scala dependency.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/22265587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/22338748", "body": "As mentioned on the [joauth ticket](https://github.com/twitter/joauth/issues/14) this isn't happening in the next month or two.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/22338748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/22526337", "body": "Thanks Will\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/22526337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/28268947", "body": "I believe you will not see that if you use java7 as your compiler. We are unsure why this happens when compiling with java6 as the compiler error doesn't look correct...\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/28268947/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/29350499", "body": "Looks like you are not using proper credentials, (note the 401 and unauthorized).\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/29350499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/29351719", "body": "more likely you aren't using the right parameters for oauth or there is a transient oauth error on our side.\n\nthat said, this is pretty unrelated to this issue. please feel free to open a separate issue though.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/29351719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/29352790", "body": "just want to check the basics: are you filling in _your_ values for consumer.key, consumer.secret, access.token and access.token.secret? (even if you are, please don't include the secrets here in github).\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/29352790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/30800024", "body": "No plans to add that. \n\nThat said, HBC uses Apache httpclient which I believe should support a proxy. I haven't looked into how its done, but I suspect google/stackoverflow could get you there. ClientBase takes an HttpClient as a parameter, so if its properly configured, maybe you can make it work?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/30800024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/31130067", "body": "This looks like a Twitter4J question to me, not a streaming question\u2026\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/31130067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/31953138", "body": "Yeah looks like the readme should use HttpHosts instead.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/31953138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37202195", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37202195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37261165", "body": "Pull Request #95 should solve this by removing the transitive scala dependency.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37261165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37261178", "body": "Pull Request #95 should solve this by removing the transitive scala dependency.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37261178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37350263", "body": "@caniszczyk yeah i plan to publish a new version after this is merged.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37350263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37454531", "body": "fwiw, i'm actually planning to wait on publishing 2.0 until t4j 3.1.0 comes out. should be soon.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37454531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37456871", "body": "oh. i see they jumped right to 4.0 http://blog.twitter4j.org/2014/03/12/66 \n\nwell what i just said, but s/3.1.0/4.0.0/\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37456871/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37457371", "body": "Yeah, I will need to check our internal clients to see if this can be done.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37457371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37553854", "body": "fwiw, t4j dev thinks our hack is a [reasonable one](https://twitter.com/t4j_news/status/443979077687312385).\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37553854/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37834300", "body": "Yeah, easy to reproduce, thanks. We need to add some tests for the example code.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37834300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37854013", "body": "@xsl I just pushed a new version with master merged in.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37854013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/38014563", "body": "famous lol...\n\nhttps://github.com/twitter/hbc/releases/tag/hbc-2.0.0\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/38014563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/38084391", "body": "thanks for the report, i should've looked at the compile warnings. should be an easy fix and a 2.0.1 release to call the 2-arg version without bumping the guava version.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/38084391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/38103382", "body": "Pull request #103 should fix this.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/38103382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/38112354", "body": "This should fix #103 \n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/38112354/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/38112406", "body": "@drazzib can you see if that change fixes this for you?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/38112406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/38217306", "body": "maybe you can try building a snapshot yourself? should be pretty easy: `mvn install` from a clone of this repo.\n\nthen in your code, change your dependency version to 2.0.1-SNAPSHOT and try.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/38217306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/40013358", "body": "I suspect you are using an older version of hbc which was allowing too new versions of t4j to be pulled in transitively. Sorry about that.\n\nEither you can upgrade to hbc 2.0.1 or you can force the t4j version in your dependency chain.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/40013358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/40020366", "body": "Well at least its a good excuse to upgrade if you can.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/40020366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/40948077", "body": "thank you.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/40948077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/42756207", "body": "Our team doesn't have any experience using hbc on Android, so I can't specifically answer that. It does not have a lot of dependencies, so it shouldn't be too big size wise. Its fairly efficient, but I can imagine there is always room to improve if you want to take time to profile and send PRs.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/42756207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/43274612", "body": "Thanks for the analysis @scubasau \u2014 looks like a straightforward fix.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/43274612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/43277303", "body": "Good catch, thanks. We're looking into it the fix. Hope to have it out soon.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/43277303/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/43278513", "body": "Should be fixed in the next release.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/43278513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/43523773", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/43523773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/44340212", "body": "Thank you for the fix.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/44340212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/44583795", "body": "Can you add a test case showing that this fixes issue #113 ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/44583795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/44856615", "body": "@scubasau can you see if pull #119 fixed this for you?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/44856615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/44997834", "body": "this looks good to me. can you add simple unit tests that verify the behavior?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/44997834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/46595113", "body": "sorry i didn't notice until now that you'd added the tests. this looks good, thanks for the patch.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/46595113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/46596067", "body": "i just had 2 minor comments. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/46596067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/47243614", "body": "Are you able to connect and stream using curl? (there are oauth instructions if you login to dev.twitter.com and use your app's credentials)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/47243614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/47602814", "body": "this is pretty slick\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/47602814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/48206488", "body": "This feature doesn't exist in the API yet. Instead you need to disconnect and reconnect with the new track terms.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/48206488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/48208059", "body": "Hmm. I am unable to reproduce locally using sha 70d6ced7f8e0b6d6848790d7f62cf60a4a1f11e6.\n\nSome questions for you:\n- How do you know its a memory leak?\n- Has your process done a GC cycle to cleanup those allocations?\n- Do you see anything unusual in a stack dump (`kill -QUIT java_pid`)?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/48208059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/48240266", "body": "Looking briefly at the code, \"failed to establish connection properly\" only happens if you don't even get an HTTP status response back.\n\nA reasonable next step would be to see more info about the IOException. Perhaps set a breakpoint in `ClientBase.establishConnection` method where it handles that exception? Or modify the code to log more information about the exception?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/48240266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/48407290", "body": "Yeah, it'd be a nice addition for sure.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/48407290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/48408547", "body": "Closing since we have no plans to add this in the immediate term. We'd be open to a patch though.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/48408547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/48976524", "body": "Works for me on a clean pull.\n\n```\n[hbc]$ mvn clean install && mvn exec:java -pl hbc-example\n<SNIP>\n[com.twitter.hbc.example.SampleStreamExample.main()] INFO com.twitter.hbc.httpclient.BasicClient - New connection executed: sampleExampleClient, endpoint: /1.1/statuses/sample.json?delimited=length\n[hosebird-client-io-thread-0] INFO com.twitter.hbc.httpclient.ClientBase - sampleExampleClient Establishing a connection\n[hosebird-client-io-thread-0] WARN com.twitter.hbc.httpclient.ClientBase - sampleExampleClient Error connecting w/ status code - 401, reason - Authorization Required\n```\n\nCan you include the full output of your command? \n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/48976524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/59462790", "body": "I don't have any experience with android development, so I'm not entirely clear on the problem.\n\nMy guess is that the problem is that you are trying to bring in a 4.3.5 compatible version of httpcomponent. hbc-core depends on version 4.2.5[1].\n\n[1] https://github.com/twitter/hbc/blob/master/hbc-core/pom.xml#L21\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/59462790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/59820462", "body": "@gauravkumar37 can you explain what the race condition is? Based on your comment, I would assume that threads are blocked on `messageQueue.take()` but that doesn't appear to be a race condition to me.\n\nPerhaps in the case of a single thread, enough messages get added to `messageQueue` so that they can complete their run.\n\nOne option that I can think of is adding a timeout and switching `take` to `poll`.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/59820462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/61929665", "body": "As far as I know, search/tweets isn't a streaming api endpoint. See https://dev.twitter.com/streaming/public and https://dev.twitter.com/streaming/userstreams#endpoint and https://dev.twitter.com/streaming/sitestreams#endpoint for which endpoints are available.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/61929665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/65107187", "body": "Thanks for the PR.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/65107187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/67975975", "body": "Can you tell if `RestartableHttpClient.setup()` is being called before the call to `RestartableHttpClient.getConnectionManager()`?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/67975975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/68293942", "body": "We don't use axis here at Twitter, so nobody here has run into this. You might need to dig into this deeper.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/68293942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/68740364", "body": "thanks for the fix.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/68740364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/68896502", "body": "Thanks for the report. To be honest, none of our use cases have required clean shutdowns so we haven't focused on it at all. We'd be open to a pull request to fix it though.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/68896502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/68947995", "body": "That's a pretty easy win.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/68947995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/111541656", "body": "If you look at the stacktrace its triggered here:\n\n```\nCaused by: java.lang.NullPointerException\nat com.google.common.base.Preconditions.checkNotNull(Preconditions.java:191)\nat com.twitter.hbc.httpclient.auth.OAuth1.(OAuth1.java:52)\nat com.twitter.hbc.example.SampleStreamExample.run(SampleStreamExample.java:39)\nat com.twitter.hbc.example.SampleStreamExample.main(SampleStreamExample.java:77)\n... 6 more\n```\n\nMake sure you are giving it a consumerKey: https://github.com/twitter/hbc/blob/master/hbc-core/src/main/java/com/twitter/hbc/httpclient/auth/OAuth1.java#L52\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/111541656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/164310433", "body": "@jayv sorry, I haven't worked on this project in quite a while. sounds like your best bet is to escalate to your contact.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/164310433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/twitter/hbc/comments/3261182", "body": "Yes, hbc-twitter4j depends on twitter4j version 2.x which is no longer being developed. At some point, we will remove this module from hbc, but not yet. If you want to use twitter4j with hbc, I recommend using the hbc-twitter4j-v3 module.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/comments/3261182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3085347", "body": "looks like you are using tabs instead of spaces? please indent just 2 spaces.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3085347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3085351", "body": "s/tab/2 spaces/g\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3085351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3085378", "body": "s/tabs/2 spaces/g\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3085378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3179109", "body": "a test would be good here.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3179109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3179116", "body": "a test for null handling would be good here.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3179116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3181418", "body": "final\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3181418/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3181453", "body": "add short javadoc on why this class exists.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3181453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3181466", "body": "just use a raw string here no need for String.format\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3181466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3181490", "body": "no need for the intermediate String object. \nuse sb.append(buffer, offset, curIndex - offset)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3181490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3181569", "body": "rm intermediate String obj\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3181569/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3181619", "body": "does this need to take an InputStreamReader? why not just a Reader?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3181619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3181653", "body": "readFully surprised me here as I thought it would exhaust the input. but this is fine.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3181653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3181662", "body": "not proper json, but whatever.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3181662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3181691", "body": "what happens to the \\n after the \\r? wheres it go?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3181691/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3181718", "body": "be nice to add a test for input with multiple lines.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3181718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3211840", "body": "rm extra colon at the end.\n\nalso, i'd just comment that you can add this to your project's maven pom.xml\n\nalso worth noting that artifacts are published to maven central.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3211840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3211843", "body": "add a comment like <!-- or whatever is latest -->\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3211843/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3397831", "body": "i'd prefer the dead code was removed.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3397831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3397842", "body": "final\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3397842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3415439", "body": "i think both these should be `static final`\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3415439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3415449", "body": "add some Preconditions not null\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3415449/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3415469", "body": "does hosebird ever end a line with just a \\r or just a \\n? i think its just \\r\\n...\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3415469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3415543", "body": "`final`\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3415543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3415569", "body": "i haven't looked at all the edge cases, but can buffer.length - end ever be less than 0? if so, i suspect this could throw. is it worth wrapping it in a Math.max(0, ...)?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3415569/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3415586", "body": "would it help logging at debug or trace level the bytes that we've received so far (as a string)?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3415586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3415668", "body": "/r => \\r\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3415668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3415703", "body": "extra whitespace min(\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3415703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3415805", "body": "rm\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3415805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3416736", "body": "the contentless `@throws IOException` line\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3416736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3416975", "body": "yeah it'd throw... lets punt on it for now.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3416975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3435279", "body": "rm the println\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3435279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3435307", "body": "instead: `throw new UnsupportedOperationException();`\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3435307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3435309", "body": "instead: `throw new UnsupportedOperationException();`\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3435309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3435326", "body": "space before {\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3435326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3435458", "body": "are you doing a defensive copy here? seems reasonable i guess.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3435458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3435520", "body": "no go time on the println\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3435520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3435570", "body": "this seems simple enough, an alternative might be to use Guava's ByteStreams.join() and work with InputSupplier<InputStream>s.\n\ni guess i'm not certain when you end up reading from multiple InputStreams in the client code? hmm, my best guess is that you are trying to test what happens when you can't fully read all that you asked for from the underlying InputStream. Instead, could you mock it? hmm i guess its a bit of a pita since you'd have to do stubbing with callbacks in order to mutate the array passed in. ok, how about this, just add a comment to the test case explaining why you have this class and what that test REALLY tests.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3435570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3904719", "body": "i'd prefer this wasn't exposed at this level. instead you should be able to ask the RateTracker directly for this. instead you could expose a getRateTracker() method here, but even then, i'd like to understand why you need to expose it here.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3904719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3905131", "body": "cool, then in that test, i would just keep a reference to the RateTracker you are going to pass into the ClientBuilder and you can ask the reference for the value. but given that, i'm not sure its testing all that much. i'd be fine without this extra test case and assuming that we won't break how ClientBuilder works (sort of like not testing getters and setters).\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3905131/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/10572448", "body": "i don't think we can get the raw json string for the \"direct_message\" key from `json` here.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/10572448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/11408563", "body": "Hmm, what does this mean for the lifecycle of the `client`? It looks like `ClientBase.run()` shuts down the shared `ClientConnectionManager` when it exits which seems wrong to me.\n\nI /think/ that means we should consider that your first approach isn't currently supported \u2014 you can either process or get a `SitestreamController` back, but not both. That does seem like a flaw in the design though and it certainly is not documented at all. \n\n@xsl \u2014 any thoughts on how to fix this?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/11408563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/12984728", "body": "I know hosebird allows you to do this, but our preference would be that these types of connections would go to stream.twitter.com instead. I'm not sure we'll allow this for forever (I'm also not saying we're removing it now). So given that, I'd prefer to not explicitly add this to SitestreamEndpoint.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/12984728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13016305", "body": "Well this is embarrassing\u2026 You're correct. In our internal code we worked around this flaw by adding it via `addQueryParameter(\"follow\", id)`\n\nBut. I think a better approach is enforcing this in the SitestreamEndpoint constructor. Then we can enforce that it is specified and we can require >= 1 and <= 100 ids. \n\nWould you be willing to change this PR to work that way? \n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13016305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13348621", "body": "add a space after if\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13348621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13348634", "body": "add a space after if\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13348634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13924601", "body": "SimpleDateFormat is not a thread safe class, so i worry when i see it in a static variable.\n\ni think the solution here is to inline this into `formatDate` and just pay the cost of creating one every time its called. this isn't perf sensitive part of the code so its fine.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13924601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13924654", "body": "change fromDate and toDate be private and final.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13924654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13924712", "body": "do these have to be mutable? what is the use case given that they are passed into the ctor.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13924712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13924729", "body": "i think we should have constants for \"fromDate\" and \"toDate\"\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13924729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13924752", "body": "also, not to mention even if this is in fact necessary, it needs a not null check.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13924752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13924780", "body": "can all of these be private?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13924780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13924874", "body": "theres some extra whitespace after uri\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13924874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13924980", "body": "i don't think Simple in the name adds much value. how about EnterpriseStringProcessor? \n\nalso, please add short javadoc for the class. eg saying that its intended for use with x,y,z\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13924980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13925086", "body": "ok actually maybe the name is just LineStringProcessor since its not really coupled to the enterprise stuff. i would still call out in the javadoc where its intended use cases are.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13925086/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13926694", "body": "my preference is to have separate test classes for each class under test.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13926694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13926714", "body": "please add notice at top of file\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13926714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13926739", "body": "break up long line\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13926739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13926820", "body": "its bad form in maven to have more than 1 main per module. perhaps just keep the code but comment it out?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13926820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13926826", "body": "its bad form in maven to have more than 1 main per module. perhaps just keep the code but comment it out?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13926826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13926893", "body": "one thing i'm a bit wary of is having a concrete class extend another concrete class. this often leads to sadness. might be worth introducing an AbstractEnterpriseStreamingEndpoint\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13926893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13983767", "body": "i think this can be private now\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13983767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13983801", "body": "put statics before members\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13983801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13983830", "body": "rm blank line\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13983830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/22403191", "body": "I don't see `close()` on `Client` or `BasicClient`. Should this be `hosebirdClient.stop()` instead?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/22403191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "caniszczyk": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hbc/commits/16b2db730c292eca59a8f761cd6231cea0e1fe1b", "message": "Use the new Travis CI container infrastructure\n\nSigned-off-by: Chris Aniszczyk <zx@twitter.com>"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/0ab9fb6cc8bae81a1b0a7880e8a16c08d381760f", "message": "Add coveralls code coverage support\n\nSigned-off-by: Chris Aniszczyk <zx@twitter.com>"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/b8ead70d33c3de842b71a44a2adb42f94375456a", "message": "Add clirr-maven-plugin support\n\nCloses #29\n\nSigned-off-by: Chris Aniszczyk <zx@twitter.com>"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/9b795f59b7b1a9872c844b580895bf9912967a1d", "message": "Fix links in README\n\nSigned-off-by: Chris Aniszczyk <zx@twitter.com>"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/903a0e57695e562f55632e56b2a1e73eb9a78007", "message": "Use the proper Travis CI link for build status\n\nSigned-off-by: Chris Aniszczyk <zx@twitter.com>"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/61d29c8a3fe23e700052ad0057b0f32770fbdd1a", "message": "Merge pull request #7 from twitter/j7-take2\n\nrequire java 1.7 as the compiler"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/8058f2fe0ff501596feb227cef098558b199ecb6", "message": "Update Travis to run on OpenJDK7\n\nSigned-off-by: Chris Aniszczyk <zx@twitter.com>"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/703ab3f915c8a0b9e9e230401dbaf37cf3d067af", "message": "Merge pull request #6 from twitter/remove-shading\n\nRemove shading"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/22f737a08b23c6e0e1a08621473f58b8313ed93b", "message": "Remove shading\n\nThis isn't necessary anymore and complicates the build.\n\nSigned-off-by: Chris Aniszczyk <zx@twitter.com>"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/62ea0138c519bb5bd0e0b6855e824d6d2095a5a3", "message": "Build on OpenJDK6\n\nStill need to address the compilation issue on Java7.\n\nSigned-off-by: Chris Aniszczyk <zx@twitter.com>"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/a63ba2f3159303b3a1032dde34034b561a9b9819", "message": "Add the ability to easily run the sample stream\n\nVia 'mvn exec:java -pl hbc-example'\n\nThis assumes these maven properties are set:\n* consumer.key\n* consumer.secret\n* access.token\n* acesss.token.secret\n\nThey can be set within hbc-example/pom.xml or within system\nproperties, \"-Dconsumer.key=XYZ -Dconsumer.secret=TODO\"\n\nSigned-off-by: Chris Aniszczyk <zx@twitter.com>"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/13846856", "body": "What do you think @xsl or @kevinoliver ?\n\nI think this is my last item before we open this up :)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/13846856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/13847792", "body": "Ok, forced push a change with indent as 2 spaces instead of tabs :)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/13847792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14193907", "body": "Indeed, this breaks 1.6\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14193907/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14250954", "body": "How do you feel about this @xsl and @kevinoliver ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14250954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14251960", "body": "Thanks @xsl, push additional changes to this branch.\n\nI would also tag things v1.3.0 once this change is done. After that, let's open it.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14251960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14253157", "body": "Alright, pushed my .travis.yml change to run on openjdk7\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14253157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14543316", "body": "Ah, you learn something everyday, thanks!\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14543316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14545868", "body": "Did we not tag the v1.3.0 release btw?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14545868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15605721", "body": "The sample application is located in the examples module. You can read more about it here:\nhttps://dev.twitter.com/blog/the-hosebird-client-streaming-library\n\nAssuming you have maven installed, check out the quickstart example:\nhttps://github.com/twitter/hbc#quick-start-example\n\nIf you're more familiar with .NET, maybe you could look at some of the .NET libraries?\nhttps://dev.twitter.com/docs/twitter-libraries\n\nLINQ2Twitter seems recommended: http://linqtotwitter.codeplex.com/wikipage?title=LINQ%20to%20Twitter%20Samples&referringTitle=Home\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15605721/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16417793", "body": "Any reason we don't want to just merge this into the twitter4j module and bump the major version to 2.0? Doesn't seem ideal to maintain two different modules for two different versions of twitter4j unless I'm missing something.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16417793/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16792963", "body": "For folks who are using Twitter4J 3.0+ there's a hbc-twitter4j-v3 module for the time being. For versions below that, folks should use the hbc-twitter4j module.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16792963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16793013", "body": "@toffaletti feel free to issue a pull request when you're ready\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16793013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/17186943", "body": "This is fixed now in a3e552c76ba378524c7d8da7f821b32989161d08\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/17186943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/17192436", "body": "This should be fixed now, thanks for the report!\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/17192436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37310417", "body": ":shipit: and publish to maven central :)?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37310417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37310468", "body": "closing this out as this is no longer a Scala library, reopen if you face new issues\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37310468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37310515", "body": "closing this out, reopen if you face new issues\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37310515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37310572", "body": "closing this out, reopen if you face new issues\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37310572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37310596", "body": "This was merged, thank you!\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37310596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37457014", "body": "Yep, should have been more clear.\n\nAny thoughts on just consolidating to the newer release? I don't see why we need 2 twitter4j modules anymore unless I'm missing something.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37457014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37554008", "body": "Let's roll with it then.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37554008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37703152", "body": ":shipit: \n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37703152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37854172", "body": "Looking forward to you pushing a new release :)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37854172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37880565", "body": "Done with 877e0444d8c36f3ece4da4b97cf22b3548dd7d8e\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37880565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37880624", "body": "Should be fixed now, thanks for the issue report.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37880624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37880695", "body": "Going to assume this is fixed. Please re-open if you hit things again.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37880695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/38000870", "body": "@kevinoliver how about some fancy release notes for the v2.0.0 release?\n\nhttps://github.com/twitter/hbc/releases/new?tag=hbc-2.0.0\n\nThen I can tweet about it and make you famous :)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/38000870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/38014644", "body": "famous: https://twitter.com/TwitterOSS/status/446127289978216449 :)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/38014644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/40429889", "body": "Indeed. The samplehose is available though:\nhttps://dev.twitter.com/docs/api/1.1/get/statuses/sample\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/40429889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/47601577", "body": "What do you think @kevinoliver @noonhub ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/47601577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/48827807", "body": "See: https://dev.twitter.com/docs/rate-limiting/1.1\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/48827807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3092405", "body": "Hrmm... did you maybe misspell something? It worked for me when I did it via editing the POM or via CLI args\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3092405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3092424", "body": "It probably would be nice if we had some level of exception handling if any of the tokens are bad... right now you kind of get nothing in response...\n\nIf you run mvn with \"-X\" do you actually see the correct tokens being passed in? Or is a \"TODO\" being passed in for one of the args instead of the tokens?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3092424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3092504", "body": "Any thoughts on exception handling?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3092504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3092669", "body": "Thanks, I would also add a patch to update the README with an \"Example\" section that essentially has what I put in this original commit message (basically how to quickly get started with the example code).\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3092669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/10553109", "body": "TwitterObjectFactory#createDirectMessage\nhttp://twitter4j.org/oldjavadocs/3.1.0-SNAPSHOT/twitter4j/TwitterObjectFactory.html#createDirectMessage(java.lang.String)\n\n?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/10553109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13623374", "body": "remember the license header information (see other files for an example)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13623374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "gengel": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hbc/commits/80a4c4c42fe500b2518847bd20cec9d9110865d6", "message": "Update README.md"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/bbfb0af61916a0bc40deb27fd601784b6cd47f3b", "message": "client.shutdown should be client.close in README"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/22431651", "body": "Yep, I'm an idiot\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/22431651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "noonhub": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hbc/commits/87a34746d60c20f6c5f4ab362f1cb4856a74d9a8", "message": "update README to reflect latest maven version number 2.2.0"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/e2164d5fff40bbb679d7fc390f060f3b3d84a75a", "message": "formatting fixes"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/621cc668e992da2a6784b45eea85e165fbc2bfb1", "message": "formatting fixes"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/9b32ab07bf4c71efbb83233b6f34b9b08ea7a269", "message": "Fix example and some renames"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/f0c6b94745c58df46df504b50fdb874e7e8acac6", "message": "misc fixes"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/ceee68e528e5ca920c552db84dd57a9b7b453c93", "message": "StandardCharsets not in 1.6"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/f0fcbe82d87698614de7f1bc4c2f3297ba787375", "message": "add support for all enterprise products"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/4a0346e6a08923ae3cb63b4a4ce45539473f75a8", "message": "Merge pull request #120 from nicky-isaacs/master\n\nSupport replay powertrack stream"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/ae2b49e9bc2af012c942b155eb51719ef8bf382e", "message": "copyright header"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/aab05137fef5d814f5769015bd535c43d4795b22", "message": "support backfill"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/339ec39aedb8e6c76cfc6f3aea1292447cf392ac", "message": "basic support of PowerTrack"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/831333cfeb7a7e48290e451fabe9120e4f52e06d", "message": "update maven release version for pom example; fix code example; fix typos"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13999758", "body": "I cannot find anything here that could become private.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13999758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13999765", "body": "done\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13999765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13999787", "body": "done\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13999787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/14254253", "body": "fixed\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/14254253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/14260667", "body": "I'm into it. This was mainly due to intellij auto-formatting not liking the single line method declaration. I found the configuration to fix that though. :)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/14260667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "paradigmsort": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hbc/commits/70d6ced7f8e0b6d6848790d7f62cf60a4a1f11e6", "message": "next-snapshot"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/2b24ebc15b26a3af5533c185638ed13d3461cd66", "message": "stabilize"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/e1c8828f7978403095c873e173d5519f87528e25", "message": "changelog for 2.2.0\""}, {"url": "https://api.github.com/repos/twitter/hbc/commits/33dde671179559d275bb070cabc8f7aede2ed7e0", "message": "next snapshot"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/0032a19f2f2cf34c691972ea56935ae1fa7711cb", "message": "Stabilize 2.1.0"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/7358daf9af7ef4911b3a56930ed9d9d79ed451c1", "message": "cleanup"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/dea9f911ff74759a44ade2544b0f682bc46438d4", "message": "imports"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/d4661a5a0f21c86c99196d0b0e73864e5f1674e9", "message": "test"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/658095d354aae88eafed1f492d24a663d8cce935", "message": "Fix RestartableHttpClient.It kills its connectionmanager when it restarts, so we have to create a new one. So don't allow passing in a single instance of connectionmanager; it won't work. Instead, create a new one with the given schemeregistry, which can now be provided - this is the main thing to customize in a connectionmanager anyways"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/44678574", "body": "Added a minimal test case to reproduce the behavior and cleaned up imports.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/44678574/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/44845915", "body": "Addressed comments.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/44845915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "nicky-isaacs": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hbc/commits/cfc3d20dd463bcbce602aa2e9092dc2a76237f02", "message": "AbstractEnterpriseStreamingEndpoint with Realtime and Replay concrete implementations. Add test for multi-product support on endpoints. Added new test class for LineStringProcessor."}, {"url": "https://api.github.com/repos/twitter/hbc/commits/04547a44feb054bf43d2133a422487d34cdf425c", "message": "add licence header"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/48918563", "body": "tldr; set up three queues which sit behind the first queue and filter yourself\n\nThis would best be implemented by pulling off the single processing queue, filtering at the application level, and placing back on three separate queues which are distinct to the topic you are trying to catch. The less processing that occurs between the incoming HTTP response and initial storage, the better.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/48918563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13655811", "body": "done\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13655811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13927076", "body": "fixed\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13927076/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13927231", "body": "fixed\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13927231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13927307", "body": "fixed\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13927307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13928271", "body": "fixed\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13928271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13928329", "body": "made final\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13928329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13928646", "body": "these are extended by EnterpriseStreamingEndpoint\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13928646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13928702", "body": "fixed\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13928702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13928729", "body": "fixed\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13928729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13928796", "body": "commented out main\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13928796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13929317", "body": "commented out main\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13929317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13933511", "body": "fixed\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13933511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13933520", "body": "fixed\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13933520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13933550", "body": "commented out main\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13933550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13933566", "body": "commented out main\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13933566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13935029", "body": "moved to LineDelimitedStreamProcessorTest\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13935029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13935051", "body": "added to Constants\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13935051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13935286", "body": "made final\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13935286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13935724", "body": "added AbstracEnterpriseStreamingEndpoint\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13935724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13984611", "body": "Bad form to have more than 1 main per package in maven. Per Kevin's advice\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13984611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13984650", "body": "@noonhub can you get this\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13984650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13984658", "body": "@noonhub dido\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13984658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13984679", "body": "@noonhub dido \n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13984679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "hootsuitemike": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hbc/commits/b82c49cafe9df8ce56295dd8a435ab642cc17cfd", "message": "Added tests for JSONObjectParser changes."}, {"url": "https://api.github.com/repos/twitter/hbc/commits/7595b1a7d960181b2ac5fd024a986cbd760c9426", "message": "Formatting fix."}, {"url": "https://api.github.com/repos/twitter/hbc/commits/d7720df07223ee51654bb4daf14741d2e09b0984", "message": "Fixed user and message extraction from Sitestream message envelopes. There are several types of messages that are unwrapped: control stream, disconnect, warning, location, source, user_reconnected, etc."}, {"url": "https://api.github.com/repos/twitter/hbc/commits/6a3fd9d492067bdd686b1a43599dabfdb4c28f41", "message": "Add support for follow parameter on GET site."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/44338554", "body": "Sounds good, I will open another PR.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/44338554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13008386", "body": "Thanks for the reply Kevin but I'm not sure I understand. Isn't the 'follow' parameter required for a site stream connection per https://dev.twitter.com/docs/api/1.1/get/site ? Or are you saying that site stream support in HBC is kind of deprecated?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13008386/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "xsl": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hbc/commits/b03a362b6eecc6c20fb6c272f88dc266f7aa51a4", "message": "Merge pull request #114 from twitter/fix-backoffmillis\n\nfixes for estimateBackoff"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/e50bfeb40793c229662d4f3016ab83ea7a4e2d56", "message": "Merge pull request #106 from bkhau/separate-sitestream-client\n\nSeparate SitestreamController from Client"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/a955e904cc971a574b904a4b0aa3d17206c84e87", "message": "Merge pull request #105 from twitter/changelog-2.0.1\n\nchangelog for 2.0.1"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/0732ac31f45bd8ade642e7f3ec7ee23087d2dd69", "message": "Merge pull request #104 from twitter/stop-using-deprecated-guava-method\n\nStop using deprecated guava method"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/06251128eb62c53b8b9fab0098ccede9d592ec27", "message": "Merge pull request #102 from twitter/t4j-v4.0.1\n\nt4j 4.0.1"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/dcff4e9d311e5a28e06a8bc259ba7e4d73ad5b98", "message": "Merge pull request #101 from twitter/fix-guava-dependency\n\nUpgrade guava dependency to 14.0.1"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/aa7575920d13113d11006b2e9a75a41038d95692", "message": "Merge pull request #99 from twitter/t4j-now-v4\n\nuse twitter4j v4.0.0 for hbc-twitter4j"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/197d4ba69e159e06d4fce02b241db55047c33561", "message": "Merge pull request #98 from twitter/t4j4\n\nupgrade to twitter4j 4.0.0"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/da148cd1fead384eb649336330a288f2afe8b416", "message": "Merge pull request #96 from twitter/bump-to-2.0.0\n\nbump to 2.0.0-SNAPSHOT"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/96188302eb2ff41d0347a7a15a54959b645b37a0", "message": "Merge pull request #95 from twitter/upgrade-joauth\n\nUpgrade joauth to 6.0.2"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/42d917c68f2dda8be38e25d4cc3200c6c0470067", "message": "Merge pull request #93 from twitter/readme-use-httphosts\n\nupdate readme to use HttpHosts"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/e2c8b0a6e7b86f7499f6a3e5a3e99115e61bcadc", "message": "Merge pull request #87 from twitter/list-fix\n\nuse target_object instead of target for list events"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/a5c7f2a3ea30b3fc3bc7a5450de6e709d79b484d", "message": "Merge branch 'master' into fix_stacktrace"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/29e0bd03c0d22d2542e15c2df1452cb82c22767e", "message": "Fix stacktrace issue"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/cb166728ea44362e00060ef188889d48a0418565", "message": "Merge pull request #79 from twitter/fix-with-user\n\nexpose new withUser method on UserstreamEndpoint"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/2792e0b744bd24c19fe3f034f50740b4f0b71549", "message": "lib upgrades"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/9428238ec1262a88c2b9ecabf6ce6e02a1ec9b13", "message": "SHutdown ratetracker"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/34c6dcb7da20169c30d65afcd1f1c4c68d1d3c5f", "message": "bs"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/1e517b364ab66143c5fa7fb0b3c38ac6a9f480b6", "message": "Http 1.1"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/d15683c0daa6b58c5260a52bef3cb9708efe0c0d", "message": "Merge pull request #60 from twitter/client-docs\n\nadd docs to Client"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/b73c71c5cf6691da5f9df2a3633e585912bc2299", "message": "1.4.1-SNAPSHOT"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/0bebbdf36a69b9aa2867e5ada5d5f530d98f471e", "message": "1.4.0"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/e4f675704e1f1fc182c28cac4e54e874849a0a17", "message": "t4j changes, joauth bump"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/8636991171350694158cbb98144631b14f4d9639", "message": "Merge pull request #51 from twitter/t4j-3\n\nModule for Twitter4J v3 support"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/337c1961f20659f67f4aa0e5cfd65984f30de567", "message": "Merge pull request #40 from eldenbishop/master\n\nFix: addUser and removeUser don't cleanup their connection, exhausting the connection pool"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/2105ddd81b70ba70801e417d955ee35c2cc08901", "message": "1.3.4-SNAPSHOT"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/528c7d35791e002db5db51931da1e22dd25009ff", "message": "1.3.3"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/1d51cc50d601d085056c4c272b87b2cac6dd6e12", "message": "fix up stuff"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/8092bce422ace29ab28d779c4d8fbd460346a995", "message": "Fix bug when we have multiple reads in DelimitedStreamReader"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/b32f27b2a532a0183c390956f9d3aa7851660239", "message": "#simplify"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/ea838b9ac67d742749e55121b8f595352e823a04", "message": "Fixing some minors"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/ac14361d20d487d279588c7aecfbdfbba0661993", "message": "Renaming a few methods"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/a67336f60ea0194504f19c8a783e6b2f37285723", "message": "DelimitedStreamReader"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/3f1bc03f1720634f3e5ed539c06670949c6be2f5", "message": "1.3.3-SNAPSHOT"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/8061f1396c3762a6a277aaa4725e9546c245ef10", "message": "1.3.2"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/042e539e24dd568d5cbb4e4ff9a3fa4d4fc814d3", "message": "minor fixes"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/77059fdfccb270a2cf7f7b6ff8cbf9fdbc8c9d78", "message": "RestartableHttpClient"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/246a32403eb3c35df6f599c859cc16ffcf75341b", "message": "1.3.2-SNAPSHOT"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/66db4d4f8565bfca9d1ce11ae0dc7e9fdbcf2568", "message": "1.3.1"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/071de11777ac61b20f4d9372d2deafb2d7fb5482", "message": "Add onFollow"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/856dd3c596c7c3f3937d2a281fd72ccc91e4c286", "message": "Bump joauth version"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/95c9a64f0e3306dc68ae7d3ce1f9a40828e3e72e", "message": "Merge pull request #30 from twitter/add-clirr\n\nAdd clirr-maven-plugin support"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/9448e23a2eae96eb4aa5f085b56c2bcca7082714", "message": "Merge pull request #24 from twitter/add-params\n\nAdd support for language and filter_level parameters"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/a5960b78969cfd60c838c619197045c33d354fe3", "message": "Merge branch 'master' into fix_locations"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/a354d15a574b3f320e7b6124123a6a4b8bfc3bf5", "message": "Fix locations support for filter streams"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/c3b4a263b2ae413cfae9e03536ccb73ceaece494", "message": "Add comments"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/be348ac62fef538307df0b0a57e8a1df4019815a", "message": "Add dependency snippet in README"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/9362814208a718c83a03b1395271e25ce8d11492", "message": "1.3.1-SNAPSHOT"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/9c0ca5de0ef532289a9160fa5ba7fc8882195efe", "message": "1.3.0"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/8d7f683022b7474ea8f019f603456940dd587964", "message": "Fix pom file for release"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/1a40da04adbf7a530e620a07bd24468bb1ca8b07", "message": "Use PoolingClientConnectionManager"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/8ca6ae421646914e19313a7cb7cdb8dc2af253fb", "message": "Call getConnectionManager().shutdown() only once when stopping"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/7ab08022338e3438c94c8cb7379259af3571a2d6", "message": "Merge pull request #9 from twitter/compile-then-run\n\nmake it clear that you need to compile to run the examples"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/9efd9cf851a27b5ae0bb944546a838a739f5d9ff", "message": "Remove shading in hbc-core"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/46c9fa45818bf95546b1bceb14ae5f436bb2f88d", "message": "Remove shading comments"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/cbc50c0fab0b1097253fb2cc250e58d2e04fd61e", "message": "Merge pull request #4 from twitter/new_reader\n\nReplace BufferedReader"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/80b166bbcc147c7cb6dda48cf190856078291ea4", "message": "Comment fix"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/bf6446ea5543e2ad6fd957593e73d1dbd0706f74", "message": "Some fixes"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/69fff89638062e68dacf6e3b0aba548fd3b25a92", "message": "Add comment"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/09a965b2a9b5570d6d1882a330dac26fc39eafa1", "message": "Actually add files"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/0af03dd5e226e897a0870ebddbcd978cfbe624df", "message": "Replace bufferedreader"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/c18009e326255a390ff731ebc27852ed5484db44", "message": "idle probes test"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/e2a412d776169c87531d181aa9e8dc03fa72ce4e", "message": "A couple of minor improvements"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/aa30195d18f112b40e204160e85dd818b3c53825", "message": "Fix up examples, auto-generate UserAgent\n\nRB_ID=126683"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/98871fe607031d12a149140728dcc7f75e2335ff", "message": "Merge branch 'master' into sample-stream-example"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/6b0b9f2a168a68b20b6004eabc03d0dda30beec1", "message": "Remove useless TODOs, fix up README\n\nRB_ID=126332"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/9c34725236ebcfc228f4851a3d634b0619cb770c", "message": "Fix some log lines\n\nRB_ID=126188"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/03da39bd4f9a5e5e54c2cf2e2ec4e70640d6372e", "message": "Update docs\n\nRB_ID=125163"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/6ad9d585d5f3a7fc658578bf9bb3213c3823bc66", "message": "hbc readme tweaks\n\nRB_ID=120567"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/69c9654be09422e7817b463dd1723a916fbd2dd2", "message": "Fix SitestreamHandler bug\n\nRB_ID=124630"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/7823823ca02ec787bab9ed2aa2306255cbcfd104", "message": "Add hbc-example module\n\nRB_ID=124625"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/0e6ebfccfcc39dba539214504d12e96366c0b9b0", "message": "Initial commit\n\nSigned-off-by: Chris Aniszczyk <zx@twitter.com>"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14211387", "body": "comment\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14211387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14251595", "body": "we should update the docs too\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14251595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14251602", "body": "and the examples\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14251602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14251610", "body": "i'll work on those \n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14251610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14263022", "body": "try doing a \"mvn compile\" (or mvn install) first, and then make that exec call\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14263022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14277149", "body": "Ah yes, we need to use a PoolingClientConnectionManager in our HttpClient for this to work. I have a pull request out for this if you're interested:\n\nhttps://github.com/twitter/hbc/pull/14\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14277149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14314523", "body": "Made the changes\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14314523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14337122", "body": "can you paste the error/output?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14337122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14398176", "body": "yep, submitted a pull request: https://github.com/twitter/hbc/pull/23\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14398176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14523874", "body": "Please make your your tokens don't have weird whitespace characters like \"\\r\" or \"\\n\". Fix incoming\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14523874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14530150", "body": "Are you still using the snapshot? The current stable version (1.3.0) still has this bug. You'll need to use the snapshot version for now\n\nHere's a code snippet (you can replace StatusesSampleEndpoint in the runnable example code with this):\n\n``` java\nStatusesFilterEndpoint endpoint = new StatusesFilterEndpoint();\nendpoint.locations(Lists.newArrayList(\n  new Location(new Location.Coordinate(-122.75, 36.8), new Location.Coordinate(-121.75, 37.8))) // San Francisco\n);\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14530150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14537285", "body": "@apurtell: how are you running this example? We have a theory that it has something to do with certain ascii characters not encoding properly.\n\nAlso, do you know what version of commons-codec are you using?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14537285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14538401", "body": "aha! The problem is probably this:\n\n```\n[INFO] |  |  +- commons-codec:commons-codec:jar:1.4:compile\n```\n\nSo there was a change from commons-codec 1.4 to 1.5 in which in 1.4, a \\r\\n would be inserted after every Base64.encodeBase64String() call. We currently rely on the functionality that 1.5+ provides. If you use commons-codec version 1.5 or higher, this problem should go away.\n\nWe'll roll out a long term fix soon.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14538401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14981296", "body": "updated\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14981296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15042648", "body": "Pull request related to this issue: #36\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15042648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15078263", "body": "updated\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15078263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15132865", "body": "Updated.\nYeah i tried to mock it, but it got REALLY gnarly really fast, and still didn't work. This was the easier alternative i think.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15132865/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15263982", "body": "nice. thanks!\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15263982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15310454", "body": "Do you have any trouble connecting with hbc-example?\n\nAh:\n\n``` java\n  val auth = new OAuth1(Props.get(\"twitter4j.oauth.consumerKey\").openOr(\"\"), Props.get(\"twitter4j.oauth.consumerKey\").openOr(\"\"),\n    User.currentUser.get.twitterToken.is, User.currentUser.get.twitterTokenSecret.is)\n```\n\nThe second `Props.get(\"twitter4j.oauth.consumerKey\").openOr(\"\")` should be your secret, not your key again\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15310454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15485198", "body": "Do you actually have sitestreams access? You should get a 403 if you don't.\n\nhttps://dev.twitter.com/docs/streaming-apis/streams/site#Applying_for_access\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15485198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16417520", "body": "looks like twitter4j added another callback to SiteStreamListener:\nhttp://twitter4j.org/javadoc/twitter4j/SiteStreamsListener.html#onDisconnectionNotice(java.lang.String)\n\nIt's not in the other listeners though\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16417520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/17145419", "body": "1.4.0 has been released\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/17145419/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/17153816", "body": "Are you using the code in hbc-examples? If you are just changing the endpoint code in SampleStreamExample, you'll get a 404 because the hosts it is using is `Constants.STREAM_HOST`, which would be \"https://stream.twitter.com\". Instead you want to be using `Constants.USERSTREAM_HOST` - https://userstream.twitter.com\n\n``` java\n    // Create a new BasicClient. By default gzip is enabled.\n    BasicClient client = new ClientBuilder()\n      .name(\"userstreamExample\")\n      .hosts(Constants.USERSTREAM_HOST) // use the userstream host\n      .endpoint(endpoint)\n      .authentication(auth)\n      .processor(new StringDelimitedProcessor(queue))\n      .build();\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/17153816/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/17153944", "body": "Client.stop() is permanent. After you call stop(), connection (or reconnection) is impossible. Client.reconnect() will close the current connection and issue a new http request\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/17153944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18595871", "body": "When you connect to a userstream, you'll start getting any tweets that would show up on your timeline from then on, but it won't send you tweets that were in your timeline prior to the connection:\n\nSay you only follow @a and @b. If you make a userstream connection, you won't see any tweets until either a or b tweets.\n\nYou should use the REST api if you want to see your current timeline (https://dev.twitter.com/docs/api/1.1). \n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18595871/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/24047656", "body": "i added a comment on your link\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/24047656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/24047991", "body": "#78 should fix the ratetracker thread issue\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/24047991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/24048511", "body": "#85 is a fix for the stack overflow issue that you saw. I don't know if the PoolingClientConnectionManager shutting itself down has to do with that yet\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/24048511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37851372", "body": "there's some merge conflicts after merging in the t4j-v4 branch\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37851372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/twitter/hbc/comments/2707756", "body": "java6 hates this:\n\n[ERROR] /Users/steven/workspace/opensource/hbc/hbc-twitter4j/src/main/java/com/twitter/hbc/twitter4j/parser/JSONObjectParser.java:[29,38] name clash: compareTo(java.lang.Object) in  and compareTo(T) in java.lang.Comparable<twitter4j.StatusDeletionNotice> have the same erasure, yet neither overrides the other\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/comments/2707756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/comments/2708923", "body": "added a test for idle probes\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/comments/2708923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3090503", "body": "For some reason when i tested this via command line, it didn't like the -Daccess.token.secret=\"secret\" argument (the value would still be TODO). Any idea why? It works if i just replace the TODO in the pom\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3090503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3092487", "body": "silly me, i made a typo\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3092487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3092508", "body": "will add a patch for that\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3092508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3181801", "body": "The \\n isn't in the substring we grab: the actual length with the \\n is curIndex - offset + 1, so without the \\n the length is just curIndex - offset\n\nadded a comment that makes it a little clearer i hope\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3181801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3181883", "body": "got a few of those: \n  testReadMultipleSmallBuffer\n  testReadMultipleHugeBuffer, + readline equivalents\n\nbut apparently the read and readlines one were the same, fixed\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3181883/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3416563", "body": "sorry, what did you want me to remove? github is confusing me\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3416563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3416773", "body": "i think hosebird only writes a \\n after a delimited length \n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3416773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3416784", "body": "end should never be greater than buffer.length, since end correspondes to the number of bytes read to that buffer.\nalso end is set to 0 just before this.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3416784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3416807", "body": "might help, not sure how we'd handle cases where the last byte is actually half of a multibyte character though. Does creating a string for cases like that throw?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3416807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/10496477", "body": "after talking about this offline: 2.0.0-SNAPSHOT\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/10496477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/12121863", "body": "i don't see a point of having the SitestreamController coupled as part of the Client anymore. I vaguely remember that we wanted to be able to easily make controlstream requests if a Twitter4jSitestreamClient was set up, but it seems reasonable that people may try to use the SitestreamController separate from the Client making the connection to sitestreams. \n\nShould we just pull that code out, and make the sitestream controller a separate entity?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/12121863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/12202576", "body": "i think if we go down this path, we shouldn't take in an HttpClient as an argument, and probably have the sitestreamHosts host list as a default argument.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/12202576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/12203769", "body": "oh sorry, you're right, i misread the code.\n\nDo you think it'd be worth it to keep the createSitestreamController() for Twitter4jSitestreamClient?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/12203769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "bkhau": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hbc/commits/9beca0859bcea97ee6397a537e8f58e2cbbeee2e", "message": "Allow hosts and client to be optional arguments to SitestreamController"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/76ed0d5f35b5b1aa2f7cca65d40f46aa607c63d8", "message": "Update sitestreamController test"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/fc5fd0b16a2d8489df3762b26f6f8b26ce6ae95d", "message": "Make sitestream hosts a default argument"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/c78085b2c96afdf2a3413418b342877d47bbba8b", "message": "Clean up unused imports"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/8828f728a774ad572553e0b7f8a6201c6c3702d5", "message": "Separate the SitestreamController from the Client. Updated example."}, {"url": "https://api.github.com/repos/twitter/hbc/commits/a043f5038d379d1d6f3bda59096f0153c3aba54e", "message": "Move the default pooling connection manager declaration up to ClientBuilder"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/1d4c0592b3a4f7dbd60b457081d69956967f401a", "message": "Allow configuration of the connectionManager"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/0f119e54d61a29fa4521e9e13c07f8a55903a565", "message": "Sort new imports properly"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/7d44d53f15956e7903ea50c76b224d04e0c9584b", "message": "Amend this patch"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/526b83ecaa95c72711f4f45c91f61804b9a8a0f8", "message": "Add separate HttpClient for controlstream usage"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/41955360", "body": "Sorry, wrong intent. I want sitestream hosts to be the default, but be able to change the hosts if necessary.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/41955360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/44565811", "body": "This seems much better than the ClientConnectionManagerFactory way.\n\nShip it!\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/44565811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/46902229", "body": "Just some style things, but overall, looks good to me.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/46902229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/12123758", "body": "It seems like it would be fine as a separate entity. I guess the only caveat here is that once the reader connection is closed, the SitestreamController is no longer useable (there's no sitestream to control), and I guess I should at least document that this is the case.\n\nI'll try something along these lines tomorrow.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/12123758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/12203087", "body": "Hosts as a default argument, I agree. I think keeping either the ConnectionManager or the HttpClient as a parameter may still be valuable because it allows for the same kind of ConnectionManager configuration we do for the regular Client.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/12203087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/12204899", "body": "Sure. We can have it do roughly the same thing that's happening here with all the defaults.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/12204899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/12205041", "body": "Actually... Can it be kept? Unless you can get the auth details from the BasicClient from within the Twitter4jSitestreamClient, this probably won't work.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/12205041/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13983806", "body": "Any reason main() is commented out for this example?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/13983806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/14097485", "body": "I think this is referring specifically to the queryParameters map\n\nAh, I see. EnterpriseStreamingEndpoint is extended later by other endpoints... \n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/14097485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/14097696", "body": "Do these now need the Override annotation in BaseEndpoint now?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/14097696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/14098408", "body": "I think I prefer the more-concise empty method where it's just on one line, but take it or leave it.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/14098408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/14098434", "body": "same comment about empty method thing, but for all of these (it does make the example a bit lengthy)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/14098434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "alexnederlof": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hbc/commits/6f0c481daafb253209832bde0241e0d0f41c362c", "message": "Corrected code example\n\nStreamingEndpoint does not have methods `endpoint.followings(followings);` and `endpoint.trackTerms(terms);`. Should probably be `StatusesFilterEndpoint`."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ninowalker": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hbc/commits/6f413f47d4ce599a1c00cd06b15ccde858d6fb4e", "message": "Update README.md"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "eldenbishop": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hbc/commits/e71d90030a169adde5149cac713ea56b7ba76efa", "message": "Updated addUser and removeUser so they do not proxy to addUsers, removeUsers in order to minimize merge issues."}, {"url": "https://api.github.com/repos/twitter/hbc/commits/03d3b4c4b7a8ed2e3f07cf0fbd18fce6c593c196", "message": "Used more specific Longs.asList wrapper rather than Lists.newArrayList"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/c6545fa61fa45a2e41f1c203d23af94a446f6d68", "message": "Added tests for SitestreamController for the following methods: getInfo, addUser, addUsers, removeUser, removeUsers."}, {"url": "https://api.github.com/repos/twitter/hbc/commits/f0b843403126c7ab927c78ae5ff99ae1d464c9df", "message": "Added preconditions test to enforce maximum number of user_id values to 100 on addUser and removeUser as per docs at https://dev.twitter.com/docs/streaming-apis/streams/site/control#add"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/66400c8dbf8cd06bdfc0d1805ae7882492b12f69", "message": "The addUser and removeUser now support multiple userIds rather than having to add one at a time. The param is passed as user_id=1234,4567,1234,4567 as per docs."}, {"url": "https://api.github.com/repos/twitter/hbc/commits/66033457ea24e9d602d16cddc157953a7ca744fc", "message": "Deprecated existing getInfo call so as not to break code currently using this method (although it was broken so not likely that many use it)"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/83435028ba55d0315f099cb295d19dcbedb858a3", "message": "Fix for SitestreamController.getInfo(streamId,userId)\n\nI removed the userId parameter as the twitter documentation does not have such a parameter (see https://dev.twitter.com/docs/streaming-apis/streams/site/control#info). Additionally, the info.json endpoint is an HTTP GET, not a post, and the userId is not actually used by the current code. Lastly, because HttpContants.constructRequest does not sign get requests, all info requests failed. HttpConstants.constructRequests now sign both POST and GET requests if auth is passed."}, {"url": "https://api.github.com/repos/twitter/hbc/commits/6b0584dc1ad97847e7e0cd07c099b5a7cda62249", "message": "Update SitestreamController.java\n\nFixes a bug where the stream is never closed and the connection returned to the pool when calling addUser and removeUser"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "toffaletti": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hbc/commits/b04eddef760aa07dda553eb0dcd209acd25cf9d4", "message": "call statsReporter.incrNumConnects"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/ac4625e2ff9dd14fe2eda7e65b00a8835119ec86", "message": "call rateTracker.eventObserved"}, {"url": "https://api.github.com/repos/twitter/hbc/commits/f1e1ad0ac56d558db172dc48d9d2ab7cee560a6a", "message": "fixes issue #53\nmake RateTracker an interface\nmove implementation to BasicRateTracker\nallow ClientBuilder to specify RateTracker"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16816728", "body": "Apologies, I was under the impression that mentioning the issue id in the commit message would turn this into a pull request.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16816728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16826016", "body": "Closing this pull request, made a new one without the test and getCurrentRateSeconds\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16826016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/17299737", "body": "For example, disconnect() would be useful to handle https://dev.twitter.com/docs/streaming-apis/messages#Disconnect_messages_disconnect  \"Duplicate stream\" or \"Admin logout\" message, where you don't want to just reconnect.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/17299737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18304843", "body": "I was mistaken about the data in the firehose messages being invalid UTF-8. The data was valid UTF-8 just not valid JSON and the _cause_ was traced back to multibyte UTF-8 mangling. This occurred back around March 12-14 2013. I communicated with Arne and it was fixed. To quote Arne:\n\n> this wound up being a bit related to the unencoded em-dash issue.  Along the way, the street_address field was mangling multibyte UTF-8 characters.  This basically manifested itself as \\u2013 (em-dash) being delivered as \\u0013 (byte 13, a control character).  I imagine that the other characters you saw were mangled in a similar way.\n\nIn any case, I would like to cover both possibilities (invalid UTF-8 and invalid JSON).\n\nI'm fairly new to Java so I might have overlooked something, but it is my understanding that the String constructors do not throw on invalid data. Instead they silently replace it. This is why I ended up at CharsetDecoder. I've written this JUnit test to demonstrate the problem:\n\n```\n    public void testUnicode() {\n        final byte[] badBytes = {\n                (byte)0xC3, (byte)0x2E\n        };\n        ByteBuffer uniBuf = ByteBuffer.wrap(badBytes);\n        CharBuffer charBuf = null;\n        Charset utf8 = Charset.forName(\"UTF-8\");\n        CharsetDecoder utf8Decoder = utf8.newDecoder();\n        utf8Decoder.onMalformedInput(CodingErrorAction.REPORT);\n        utf8Decoder.onUnmappableCharacter(CodingErrorAction.REPORT);\n        try {\n            charBuf = utf8Decoder.decode(uniBuf);\n            String s = charBuf.toString();\n            fail(\"should not decode\");\n        } catch (CharacterCodingException ignored) {}\n\n        // this will silently replace the bad utf8 sequence with U+FFFD (replacement character)\n        // no exception is thrown\n        try {\n            String z = new String(badBytes, utf8);\n        } catch (Exception ignored) {\n            fail(\"nothing is thrown\");\n        }\n    }\n```\n\nI realize this is a bit pedantic and if you think it is out of the scope of hbc to check for encoding errors, I'd agree and just have my own HosebirdMessageProcessor.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18304843/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18434679", "body": "Sounds good to me.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18434679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/19830914", "body": "What's the word on this? It looks like Travis CI failed because of some github connectivity issue. I am unable to restart the build though.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/19830914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3904913", "body": "This was actually just for testing. See the test in ClientBuilderTest.java to make sure the custom RateTracker is actually being used by the BasicClient returned from ClientBuilder. Welcome suggestions for a better way.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/3904913/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "alesj": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hbc/commits/4c737191f7908fc458efeb7078dcc5eb04ce3649", "message": "Move precondition check."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vmpn": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hbc/commits/1c2b56b19579f22aac5985ab115d4b5292f84b38", "message": "Use AtomicBoolean in atomic way\n\nIn original code it is possible to\u00a0successfully\u00a0pass this check with two threads"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jpeet": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/hbc/pulls/175", "title": "Integrate Gnip 2.0 streaming", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "paulrizzo": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/hbc/pulls/174", "title": "Enterprise volume and compliance streams for the GNIP v2.0 API", "body": "This adds supports for the v2 GNIP volume and compliance streams. I also added in the new host URLs for convenience. \n\nIt may be worth considering deprecating the old Twitter endpoints so we can clean up this project a bit. I'd propose releasing a final version of 2.x.x, bumping master to 3.x.x and removing all the legacy Twitter code. This will allow us to clean up the interfaces/implementations for the GNIP API's.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rj93": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/hbc/pulls/169", "title": "Fixed BasicAuth signRequest", "body": "When creating a Enterprise stream it would fail to authenticate using BasicAuth due to the `signRequest` being empty\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "arankin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/hbc/pulls/166", "title": "Expose Client's 'name' to Event", "body": "This is very helpful for keeping a pulse on specific clients, or reconciling overall system health by monitoring each individual connection.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "scumola": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14263441", "body": "Ahh, that worked great!  Is there a way to compile it all to a .jar file so I can move it around from machine to machine?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14263441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14263801", "body": "Does BasicAuth work?  I commented-out the OAuth line in hbc-example/src/main/java/com/twitter/hbc/example/SampleStreamExample.java and uncommented the BasicAuth line and I'm getting:\n\nDid not receive a message in 5 seconds\nDid not receive a message in 5 seconds\n[hosebird-client-io-thread-0] INFO com.twitter.hbc.httpclient.ClientBase - sampleExampleClient Done processing, preparing to close connection\n[hosebird-client-io-thread-0] INFO com.twitter.hbc.httpclient.ClientBase - sampleExampleClient Establishing a connection\n[hosebird-client-io-thread-0] WARN com.twitter.hbc.httpclient.ClientBase - sampleExampleClient Error connecting w/ status code - 401, reason - Unauthorized\nDid not receive a message in 5 seconds\nDid not receive a message in 5 seconds\nKilled\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14263801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14264688", "body": "I had to recompile after making the changes, I guess.  I am using the BasicAuth (\"username\",\"password); now and I'm getting: \n\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.5.1:compile (default-compile) on project hbc-example: Compilation failure: Compilation failure:\n[ERROR] /root/hbc/hbc-example/src/main/java/com/twitter/hbc/example/SampleStreamExample.java:[40,30] error: cannot find symbol\n[ERROR] symbol:   class BasicAuth\n[ERROR] location: class SampleStreamExample\n[ERROR] /root/hbc/hbc-example/src/main/java/com/twitter/hbc/example/SampleStreamExample.java:[55,11] error: incompatible types\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14264688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14264789", "body": "Added: import com.twitter.hbc.httpclient.auth.BasicAuth;\nNow it compiles!  Yea!  Thanks!\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14264789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14265950", "body": "Yea, it's working.  I'm getting the stream output now.  I'm trying to turn off all of the extra output though or send that to stderr instead of stdout so I can pipe stdout to my app.  Also, hitting ctrl-c doesn't really stop and disconnect hbc, but those are different errors than this one.  I will close this issue.  Thanks for the help!\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14265950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "P7h": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14395851", "body": "Perfect. Everything works fine.\nThanks for such a swift response.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14395851/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "apurtell": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14475653", "body": "Yes.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14475653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14537944", "body": "No doubt I may be doing something dumb.\n\nJDK/JRE is 1.6.\n\n```\njava version \"1.6.0_43\"\nJava(TM) SE Runtime Environment (build 1.6.0_43-b01)\nJava HotSpot(TM) 64-Bit Server VM (build 20.14-b01, mixed mode)\n```\n\ncommons-codec is \n\n```\n[INFO] |  |  +- commons-codec:commons-codec:jar:1.4:compile\n```\n\nThe full dependency tree is long because I'm pulling in hadoop-common, hbase-client, etc. commons-codec comes in as a dep of hadoop-common. Let me know if that would be useful.\n\nThis is how I'm using HBC:\n\n```\n  BlockingQueue<String> queue = new LinkedBlockingQueue<String>(10000);\n  StatusesSampleEndpoint endpoint = new StatusesSampleEndpoint();\n  endpoint.stallWarnings(false);\n  BasicClient client = new ClientBuilder()\n    .name(\"ExampleApplication\")\n    .hosts(com.twitter.hbc.core.Constants.STREAM_HOST)\n    .endpoint(endpoint)\n.authentication(new OAuth1(consumerKey, consumerSecret, accessToken, accessTokenSecret))\n    .processor(new StringDelimitedProcessor(queue))\n    .build();\n  client.connect();\n  try {\n    while (!client.isDone()) {\n      String tweet = queue.poll();\n      // stuff that stores the tweet to HBase\n}\n  } finally {\n    client.stop();\n  }\n```\n\nconsumerKey, consumerSecret, accessToken, accessTokenSecret are all hardcoded constant Strings, cut and pasted from the application oauth settings from dev.twitter.com/apps. I know that's bad hygiene but want to keep this as simple as possible at first. I've double checked there are not whitespace characters within. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14537944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14538442", "body": "Excellent, let me make that explicit and give it a go.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14538442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14546260", "body": "Thanks, commons-codec was the problem indeed.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14546260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15048913", "body": "And again:\n\n```\njava.lang.NumberFormatException: For input string: \"_reply_to_status_id\":null,\"\n```\n\nSo maybe there is a problem with the delimited stream itself, introduced some time in the past few days?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15048913/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15085316", "body": "Trying fda49a8 of master, my test app immediately fails with a constant stream of NumberFormatExceptions.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15085316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "thaerlabs": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14502786", "body": "Can you please provide a snippet on how to use it?\nIt doesn't seem to work for me...\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14502786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jarandaf": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14837809", "body": "Hi there,\n\nI also experienced this issue @thaer249. Which version of Twitter4j are you using? With 2.2.6 it should work.\n\nYours,\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/14837809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15767255", "body": "Same issue here. Changing to java 7 solved the problem, thanks.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15767255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15793505", "body": "Nothing related to HBC client but Eclipse. Finally solved.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15793505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/17154535", "body": "Oh, I missed that. Thanks @xsl \n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/17154535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "maciejbak85": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15319492", "body": "Heh lol ;) Im blind, now it works fine. Thanks\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15319492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15482717", "body": "Version 1.3.3\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15482717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15508845", "body": "Ah right ok ;)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/15508845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16164447", "body": "Hope it will be fast , because old API will be closed in may..\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16164447/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/17151961", "body": "Thanks ! ;)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/17151961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18262954", "body": "Yes.\nMy problem is that I run user stream for lot of users, but I cant check if streams for them are working on not.\nI'm saving info to my DB but its not always 100% sure.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18262954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/22307113", "body": "Can You tell me when You will do it ? I dont know if its worth to wait or move to some another streams lib..\nAnd for sure , your solution will work for scala 2.10.2 ?\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/22307113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "nbauernfeind": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16517123", "body": "I'm not familiar with an easy way to do that using maven. \n\nAnd if I've got to do any work my preference is just to build  and manage joauth against 2.10.\n\nBut I'm just putting this out there: it does make it harder to even try to adopt any project. For people who don't use Scala at all, all they need are two incompatible dependencies (that they don't even know use Scala under the covers) to have a terrible first impression (of both Scala and the projects that aren't compatible).\n\nThanks for the quick response.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/16517123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37263728", "body": "Thanks for the heads up! If I get a chance I'll give this a shot. I ended up sticking with Twitter4j.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/37263728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "emersonmoretto": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/17510277", "body": "Can you share the solution? Thanks!!\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/17510277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "farahnaj": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18595144", "body": "Thank you so much sir. I got solved 404 error from solution of issue #59, But now i get blank output. and i tried infinite while loop but it is not working. it gives me same output. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18595144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18595651", "body": "hi, i don't have any answer for your problem but can you help me to create user stream, i tried but i got blank output and no error. any example or code snippet will be helpful. Thanks in advance.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18595651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18595789", "body": "Its my own account, i have big timeline and some DM as well as some tweets. it is user stream so it have to show me at least my timeline. right? I am trying with jstack. i will give you results after that.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18595789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18597441", "body": "Thank you, i got it, when i tweet something or someone tweet then only i get messages. thank you so much.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18597441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18661477", "body": "thanks for reply. i know this document. i just want to know how to used those twitter API with HBC environment.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18661477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18662329", "body": "my problem is How to combine all this with HBC? from where i can get all this in HBC?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18662329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18672827", "body": "hey, i got solution for this, but there is no difference in out put of withFollowing=false and withFollowing=true. plz anybody give me difference of them. i know difference as per twitter api but i did not get result like that. results are same.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18672827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18829637", "body": "I am giving here parameter setting with output observation : \n\n---\n\nUserstreamEndpoint endpoint = new UserstreamEndpoint();\nendpoint.withFollowings(true);\n\n---\n\nFrom above parameter setting, I get \n1. tweets of user\n2. tweets of following\n3. events of user\n\n---\n\nUserstreamEndpoint endpoint = new UserstreamEndpoint();\nendpoint.withFollowings(false);\n\n---\n\nFrom above parameter setting, I get \n1. tweets of user\n2. tweets of following\n3. events of user\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18829637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18830793", "body": "see sir, this output when setting is like below,\nUserstreamEndpoint endpoint = new UserstreamEndpoint();\nendpoint.withFollowings(false);  // means with=user, which only streams messages from the user associated with the stream. \n\nbut i got users as well others tweets also.\n\n---\n\n[com.twitter.hbc.example.UserStreamExample.main()] INFO com.twitter.hbc.httpclie\nnt.BasicClient - New connection executed: hosebird-client-0, endpoint: /1.1/user\n.json?delimited=length&stall_warnings=true\n[hosebird-client-io-thread-0] INFO com.twitter.hbc.httpclient.ClientBase - hoseb\nird-client-0 Establishing a connection\n[hosebird-client-io-thread-0] INFO com.twitter.hbc.httpclient.ClientBase - hoseb\nird-client-0 Processing connection data\n{\"friends\":[14392192,10876852,15676118,372475592,108198542,777925,109184306,1976\n1445,179305666,9720292,1391679324,34304382,139344746,6844292,94652818,88344304,1\n14387883,275126119,380927048,95481928,783214,369471121,19895282,133245413,376825\n877,163792579,122995784,44602678,6253282,304298721,40885516,5402612,172442947,12\n9722129,11069462,22256645,7588892,523503830,183709371,17093617,5520952,132385468\n,20536157,819797,67272817,40215499,262202555,4933401,14230524,13334762,627222883\n,14602130,18100055,61505026,8633582]}\n\n{\"created_at\":\"Mon Jun 03 09:12:10 +0000 2013\",\"id\":341482430861029377,\"id_str\":\n\"341482430861029377\",\"text\":\"Life is what happens to you when you're looking at\nyour smartphone xU xQ!! :P\",\"source\":\"\\u003ca href=\\\"http:\\/\\/www.facebook.com\\/\ntwitter\\\" rel=\\\"nofollow\\\"\\u003eFacebook\\u003c\\/a\\u003e\",\"truncated\":false,\"in_r\neply_to_status_id\":null,\"in_reply_to_status_id_str\":null,\"in_reply_to_user_id\":n\null,\"in_reply_to_user_id_str\":null,\"in_reply_to_screen_name\":null,\"user\":{\"id\":6\n1505026,\"id_str\":\"61505026\",\"name\":\"Funny & Quotes!\",\"screen_name\":\"ULTIMATE_QUO\nTES\",\"location\":\"Walking\",\"url\":\"http:\\/\\/www.facebook.com\\/Loyalty.Honesty.Prid\ne\",\"description\":\"Your Feelings My Words!\",\"protected\":false,\"followers_count\":2\n0215,\"friends_count\":288,\"listed_count\":181,\"created_at\":\"Thu Jul 30 14:45:33 +0\n000 2009\",\"favourites_count\":7965,\"utc_offset\":19800,\"time_zone\":\"Mumbai\",\"geo_e\nnabled\":false,\"verified\":false,\"statuses_count\":6449,\"lang\":\"en\",\"contributors_e\nnabled\":false,\"is_translator\":false,\"profile_background_color\":\"642D8B\",\"profile\n_background_image_url\":\"http:\\/\\/a0.twimg.com\\/profile_background_images\\/695673\n867\\/1cf3e4784817990d030f4270e87a90b5.jpeg\",\"profile_background_image_url_https\"\n:\"https:\\/\\/si0.twimg.com\\/profile_background_images\\/695673867\\/1cf3e4784817990\nd030f4270e87a90b5.jpeg\",\"profile_background_tile\":true,\"profile_image_url\":\"http\n:\\/\\/a0.twimg.com\\/profile_images\\/2978148101\\/9a44cfdaf9394b8a48178bfc1b971655_\nnormal.jpeg\",\"profile_image_url_https\":\"https:\\/\\/si0.twimg.com\\/profile_images\\\n/2978148101\\/9a44cfdaf9394b8a48178bfc1b971655_normal.jpeg\",\"profile_banner_url\":\n\"https:\\/\\/pbs.twimg.com\\/profile_banners\\/61505026\\/1351401471\",\"profile_link_c\nolor\":\"FF0000\",\"profile_sidebar_border_color\":\"FFFFFF\",\"profile_sidebar_fill_col\nor\":\"7AC3EE\",\"profile_text_color\":\"3D1957\",\"profile_use_background_image\":true,\"\ndefault_profile\":false,\"default_profile_image\":false,\"following\":null,\"follow_re\nquest_sent\":null,\"notifications\":null},\"geo\":null,\"coordinates\":null,\"place\":nul\nl,\"contributors\":null,\"retweet_count\":0,\"favorite_count\":0,\"entities\":{\"hashtags\n\":[],\"symbols\":[],\"urls\":[],\"user_mentions\":[]},\"favorited\":false,\"retweeted\":fa\nlse,\"filter_level\":\"medium\",\"lang\":\"en\"}\n\n{\"created_at\":\"Mon Jun 03 09:32:43 +0000 2013\",\"id\":341487601557061632,\"id_str\":\n\"341487601557061632\",\"text\":\"Ericsson forecasts 4.5 billion smartphone subscript\nions and 60% LTE coverage worldwide by 2018 http:\\/\\/t.co\\/8Pr5m8cJtc by @theken\nyeung\",\"source\":\"\\u003ca href=\\\"http:\\/\\/spread.us\\\" rel=\\\"nofollow\\\"\\u003eSprea\nd The Next Web\\u003c\\/a\\u003e\",\"truncated\":false,\"in_reply_to_status_id\":null,\"i\nn_reply_to_status_id_str\":null,\"in_reply_to_user_id\":null,\"in_reply_to_user_id_s\ntr\":null,\"in_reply_to_screen_name\":null,\"user\":{\"id\":10876852,\"id_str\":\"10876852\n\",\"name\":\"The Next Web\",\"screen_name\":\"TheNextWeb\",\"location\":\"The Interwebs.\",\"\nurl\":\"http:\\/\\/thenextweb.com\",\"description\":\"International news on technology,\nbusiness and culture. Follow specific channels in our Twitter lists.  Find us on\n Facebook:  http:\\/\\/www.facebook.com\\/thenextweb\",\"protected\":false,\"followers_\ncount\":903239,\"friends_count\":7335,\"listed_count\":20497,\"created_at\":\"Wed Dec 05\n 17:26:15 +0000 2007\",\"favourites_count\":81,\"utc_offset\":3600,\"time_zone\":\"Amste\nrdam\",\"geo_enabled\":false,\"verified\":true,\"statuses_count\":50432,\"lang\":\"en\",\"co\nntributors_enabled\":false,\"is_translator\":false,\"profile_background_color\":\"FF33\n00\",\"profile_background_image_url\":\"http:\\/\\/a0.twimg.com\\/profile_background_im\nages\\/156801853\\/orangey.jpg\",\"profile_background_image_url_https\":\"https:\\/\\/si\n0.twimg.com\\/profile_background_images\\/156801853\\/orangey.jpg\",\"profile_backgro\nund_tile\":false,\"profile_image_url\":\"http:\\/\\/a0.twimg.com\\/profile_images\\/1574\n591465\\/THE_new-twitter-avatar-working_normal.jpg\",\"profile_image_url_https\":\"ht\ntps:\\/\\/si0.twimg.com\\/profile_images\\/1574591465\\/THE_new-twitter-avatar-workin\ng_normal.jpg\",\"profile_link_color\":\"BD0600\",\"profile_sidebar_border_color\":\"DFDF\nDF\",\"profile_sidebar_fill_color\":\"F3F3F3\",\"profile_text_color\":\"333333\",\"profile\n_use_background_image\":true,\"default_profile\":false,\"default_profile_image\":fals\ne,\"following\":null,\"follow_request_sent\":null,\"notifications\":null},\"geo\":null,\"\ncoordinates\":null,\"place\":null,\"contributors\":null,\"retweet_count\":0,\"favorite_c\nount\":0,\"entities\":{\"hashtags\":[],\"symbols\":[],\"urls\":[{\"url\":\"http:\\/\\/t.co\\/8P\nr5m8cJtc\",\"expanded_url\":\"http:\\/\\/tnw.to\\/d0YrL\",\"display_url\":\"tnw.to\\/d0YrL\",\n\"indices\":[95,117]}],\"user_mentions\":[{\"screen_name\":\"thekenyeung\",\"name\":\"Ken Y\neung\",\"id\":9075622,\"id_str\":\"9075622\",\"indices\":[121,133]}]},\"favorited\":false,\"\nretweeted\":false,\"possibly_sensitive\":false,\"filter_level\":\"medium\",\"lang\":\"en\"}\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18830793/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18832676", "body": "and sir, this output when setting is like below,\nUserstreamEndpoint endpoint = new UserstreamEndpoint();\nendpoint.withFollowings(true); // means with=followings \n\nhere also, i can get users as well as others tweets.\n\n***************************************************************************************************************[com.twitter.hbc.example.UserStreamExample.main()] INFO com.twitter.hbc.httpclie\nnt.BasicClient - New connection executed: hosebird-client-0, endpoint: /1.1/user\n.json?with=followings&delimited=length&stall_warnings=true\n[hosebird-client-io-thread-0] INFO com.twitter.hbc.httpclient.ClientBase - hoseb\nird-client-0 Establishing a connection\n[hosebird-client-io-thread-0] INFO com.twitter.hbc.httpclient.ClientBase - hoseb\nird-client-0 Processing connection data\n{\"friends\":[14392192,10876852,15676118,372475592,108198542,777925,109184306,1976\n1445,179305666,9720292,1391679324,34304382,139344746,6844292,94652818,88344304,1\n14387883,275126119,380927048,95481928,783214,369471121,19895282,133245413,376825\n877,163792579,122995784,44602678,6253282,304298721,40885516,5402612,172442947,12\n9722129,11069462,22256645,7588892,523503830,183709371,17093617,5520952,132385468\n,20536157,819797,67272817,40215499,262202555,4933401,14230524,13334762,627222883\n,14602130,18100055,61505026,8633582]}\n\n{\"created_at\":\"Mon Jun 03 10:04:11 +0000 2013\",\"id\":341495521728409600,\"id_str\":\n\"341495521728409600\",\"text\":\"garmi me sardi lagna acchi bat nahi hai ....\",\"source\"\n:\"\\u003ca href=\\\"http:\\/\\/www.hootsuite.com\\\" rel=\\\"nofollow\\\"\\u003eHootSuite\\u0\n03c\\/a\\u003e\",\"truncated\":false,\"in_reply_to_status_id\":null,\"in_reply_to_status\n_id_str\":null,\"in_reply_to_user_id\":null,\"in_reply_to_user_id_str\":null,\"in_repl\ny_to_screen_name\":null,\"user\":{\"id\":571022279,\"id_str\":\"571022279\",\"name\":\"Farah\n Inamdar\",\"screen_name\":\"Farah_Inamdar\",\"location\":\"\",\"url\":null,\"description\":n\null,\"protected\":false,\"followers_count\":16,\"friends_count\":55,\"listed_count\":0,\"\ncreated_at\":\"Fri May 04 17:52:30 +0000 2012\",\"favourites_count\":10,\"utc_offset\":\n19800,\"time_zone\":\"Mumbai\",\"geo_enabled\":false,\"verified\":false,\"statuses_count\"\n:91,\"lang\":\"en\",\"contributors_enabled\":false,\"is_translator\":false,\"profile_back\nground_color\":\"C0DEED\",\"profile_background_image_url\":\"http:\\/\\/a0.twimg.com\\/im\nages\\/themes\\/theme1\\/bg.png\",\"profile_background_image_url_https\":\"https:\\/\\/si\n0.twimg.com\\/images\\/themes\\/theme1\\/bg.png\",\"profile_background_tile\":false,\"pr\nofile_image_url\":\"http:\\/\\/a0.twimg.com\\/profile_images\\/2190586837\\/6_normal.jp\ng\",\"profile_image_url_https\":\"https:\\/\\/si0.twimg.com\\/profile_images\\/219058683\n7\\/6_normal.jpg\",\"profile_link_color\":\"0084B4\",\"profile_sidebar_border_color\":\"C\n0DEED\",\"profile_sidebar_fill_color\":\"DDEEF6\",\"profile_text_color\":\"333333\",\"prof\nile_use_background_image\":true,\"default_profile\":true,\"default_profile_image\":fa\nlse,\"following\":null,\"follow_request_sent\":null,\"notifications\":null},\"geo\":null\n,\"coordinates\":null,\"place\":null,\"contributors\":null,\"retweet_count\":0,\"favorite\n_count\":0,\"entities\":{\"hashtags\":[],\"symbols\":[],\"urls\":[],\"user_mentions\":[]},\"\nfavorited\":false,\"retweeted\":false,\"filter_level\":\"medium\",\"lang\":\"it\"}\n\n{\"delete\":{\"status\":{\"id\":341495521728409600,\"user_id\":571022279,\"id_str\":\"34149\n5521728409600\",\"user_id_str\":\"571022279\"}}}\n\n{\"created_at\":\"Mon Jun 03 10:11:45 +0000 2013\",\"id\":341497423656517633,\"id_str\":\n\"341497423656517633\",\"text\":\"#Ebook Deal\\/Day: Active Directory - $21.99 (Save 5\n0%)\\n\\n Use code DEAL http:\\/\\/t.co\\/ueabotRGC7\",\"source\":\"\\u003ca href=\\\"http:\\\n/\\/ifttt.com\\\" rel=\\\"nofollow\\\"\\u003eIFTTT\\u003c\\/a\\u003e\",\"truncated\":false,\"in\n_reply_to_status_id\":null,\"in_reply_to_status_id_str\":null,\"in_reply_to_user_id\"\n:null,\"in_reply_to_user_id_str\":null,\"in_reply_to_screen_name\":null,\"user\":{\"id\"\n:11069462,\"id_str\":\"11069462\",\"name\":\"O'Reilly Media\",\"screen_name\":\"OReillyMedi\na\",\"location\":\"Sebastopol, Cambridge, Farnham\",\"url\":\"http:\\/\\/about.me\\/oreilly\nmedia\",\"description\":\"O'Reilly Media spreads the knowledge of innovators and exp\nert early adopters to everyday users through books, conferences, news reportage,\n videos, and classes.\",\"protected\":false,\"followers_count\":61532,\"friends_count\"\n:22739,\"listed_count\":4108,\"created_at\":\"Wed Dec 12 00:27:43 +0000 2007\",\"favour\nites_count\":596,\"utc_offset\":-28800,\"time_zone\":\"Pacific Time (US & Canada)\",\"ge\no_enabled\":true,\"verified\":true,\"statuses_count\":18568,\"lang\":\"en\",\"contributors\n_enabled\":false,\"is_translator\":false,\"profile_background_color\":\"FFFFFF\",\"profi\nle_background_image_url\":\"http:\\/\\/a0.twimg.com\\/profile_background_images\\/3565\n878\\/twitterorginal2.jpg\",\"profile_background_image_url_https\":\"https:\\/\\/si0.tw\nimg.com\\/profile_background_images\\/3565878\\/twitterorginal2.jpg\",\"profile_backg\nround_tile\":false,\"profile_image_url\":\"http:\\/\\/a0.twimg.com\\/profile_images\\/17\n65645737\\/oreilly-social-icon_normal.png\",\"profile_image_url_https\":\"https:\\/\\/s\ni0.twimg.com\\/profile_images\\/1765645737\\/oreilly-social-icon_normal.png\",\"profi\nle_banner_url\":\"https:\\/\\/pbs.twimg.com\\/profile_banners\\/11069462\\/1355508337\",\n\"profile_link_color\":\"0084B4\",\"profile_sidebar_border_color\":\"D4D4D4\",\"profile_s\nidebar_fill_color\":\"FFFFFF\",\"profile_text_color\":\"444444\",\"profile_use_backgroun\nd_image\":true,\"default_profile\":false,\"default_profile_image\":false,\"following\":\nnull,\"follow_request_sent\":null,\"notifications\":null},\"geo\":null,\"coordinates\":n\null,\"place\":null,\"contributors\":null,\"retweet_count\":0,\"favorite_count\":0,\"entit\nies\":{\"hashtags\":[{\"text\":\"Ebook\",\"indices\":[0,6]}],\"symbols\":[],\"urls\":[{\"url\":\n\"http:\\/\\/t.co\\/ueabotRGC7\",\"expanded_url\":\"http:\\/\\/oreil.ly\\/130b1Ro\",\"display\n_url\":\"oreil.ly\\/130b1Ro\",\"indices\":[70,92]}],\"user_mentions\":[]},\"favorited\":fa\nlse,\"retweeted\":false,\"possibly_sensitive\":false,\"filter_level\":\"medium\",\"lang\":\n\"en\"}\n\n{\"created_at\":\"Mon Jun 03 10:15:37 +0000 2013\",\"id\":341498398949646336,\"id_str\":\n\"341498398949646336\",\"text\":\"RT @Milann: My @thenextweb swag is here! https:\\/\\/\nt.co\\/8GsI5DsCy6\",\"source\":\"web\",\"truncated\":false,\"in_reply_to_status_id\":null,\n\"in_reply_to_status_id_str\":null,\"in_reply_to_user_id\":null,\"in_reply_to_user_id\n_str\":null,\"in_reply_to_screen_name\":null,\"user\":{\"id\":10876852,\"id_str\":\"108768\n52\",\"name\":\"The Next Web\",\"screen_name\":\"TheNextWeb\",\"location\":\"The Interwebs.\"\n,\"url\":\"http:\\/\\/thenextweb.com\",\"description\":\"International news on technology\n, business and culture. Follow specific channels in our Twitter lists.  Find us\non Facebook:  http:\\/\\/www.facebook.com\\/thenextweb\",\"protected\":false,\"follower\ns_count\":903254,\"friends_count\":7335,\"listed_count\":20497,\"created_at\":\"Wed Dec\n05 17:26:15 +0000 2007\",\"favourites_count\":81,\"utc_offset\":3600,\"time_zone\":\"Ams\nterdam\",\"geo_enabled\":false,\"verified\":true,\"statuses_count\":50435,\"lang\":\"en\",\"\ncontributors_enabled\":false,\"is_translator\":false,\"profile_background_color\":\"FF\n3300\",\"profile_background_image_url\":\"http:\\/\\/a0.twimg.com\\/profile_background_\nimages\\/156801853\\/orangey.jpg\",\"profile_background_image_url_https\":\"https:\\/\\/\nsi0.twimg.com\\/profile_background_images\\/156801853\\/orangey.jpg\",\"profile_backg\nround_tile\":false,\"profile_image_url\":\"http:\\/\\/a0.twimg.com\\/profile_images\\/15\n74591465\\/THE_new-twitter-avatar-working_normal.jpg\",\"profile_image_url_https\":\"\nhttps:\\/\\/si0.twimg.com\\/profile_images\\/1574591465\\/THE_new-twitter-avatar-work\ning_normal.jpg\",\"profile_link_color\":\"BD0600\",\"profile_sidebar_border_color\":\"DF\nDFDF\",\"profile_sidebar_fill_color\":\"F3F3F3\",\"profile_text_color\":\"333333\",\"profi\nle_use_background_image\":true,\"default_profile\":false,\"default_profile_image\":fa\nlse,\"following\":null,\"follow_request_sent\":null,\"notifications\":null},\"geo\":null\n,\"coordinates\":null,\"place\":null,\"contributors\":null,\"retweeted_status\":{\"create\nd_at\":\"Mon May 27 14:38:41 +0000 2013\",\"id\":339027885824282624,\"id_str\":\"3390278\n85824282624\",\"text\":\"My @thenextweb swag is here! https:\\/\\/t.co\\/8GsI5DsCy6\",\"s\nource\":\"\\u003ca href=\\\"http:\\/\\/vine.co\\\" rel=\\\"nofollow\\\"\\u003eVine - Make a Sc\nene\\u003c\\/a\\u003e\",\"truncated\":false,\"in_reply_to_status_id\":null,\"in_reply_to_\nstatus_id_str\":null,\"in_reply_to_user_id\":null,\"in_reply_to_user_id_str\":null,\"i\nn_reply_to_screen_name\":null,\"user\":{\"id\":14475802,\"id_str\":\"14475802\",\"name\":\"\\\nu2652ilan\",\"screen_name\":\"Milann\",\"location\":\"Amsterdam \\u2601 Berlin\",\"url\":\"ht\ntp:\\/\\/www.MilanMaurice.com\",\"description\":\"Helping you Design, Fund and Create\ngreat Apps & Communities. Building the @SellanApp Community, I am a jury @Upload\nCinema and a DJ at @Spotify\",\"protected\":false,\"followers_count\":925,\"friends_co\nunt\":265,\"listed_count\":42,\"created_at\":\"Tue Apr 22 15:20:05 +0000 2008\",\"favour\nites_count\":240,\"utc_offset\":3600,\"time_zone\":\"Amsterdam\",\"geo_enabled\":true,\"ve\nrified\":false,\"statuses_count\":5287,\"lang\":\"en\",\"contributors_enabled\":false,\"is\n_translator\":false,\"profile_background_color\":\"000000\",\"profile_background_image\n_url\":\"http:\\/\\/a0.twimg.com\\/profile_background_images\\/884616209\\/5c4c0ddaea2c\n87bef076dbdffe1c95a8.jpeg\",\"profile_background_image_url_https\":\"https:\\/\\/si0.t\nwimg.com\\/profile_background_images\\/884616209\\/5c4c0ddaea2c87bef076dbdffe1c95a8\n.jpeg\",\"profile_background_tile\":false,\"profile_image_url\":\"http:\\/\\/a0.twimg.co\nm\\/profile_images\\/3702374014\\/ab6fd628f677dd2c546cd87f1cb338c4_normal.png\",\"pro\nfile_image_url_https\":\"https:\\/\\/si0.twimg.com\\/profile_images\\/3702374014\\/ab6f\nd628f677dd2c546cd87f1cb338c4_normal.png\",\"profile_banner_url\":\"https:\\/\\/pbs.twi\nmg.com\\/profile_banners\\/14475802\\/1367244171\",\"profile_link_color\":\"999999\",\"pr\nofile_sidebar_border_color\":\"FFFFFF\",\"profile_sidebar_fill_color\":\"FFFFFF\",\"prof\nile_text_color\":\"222222\",\"profile_use_background_image\":true,\"default_profile\":f\nalse,\"default_profile_image\":false,\"following\":null,\"follow_request_sent\":null,\"\nnotifications\":null},\"geo\":null,\"coordinates\":null,\"place\":null,\"contributors\":n\null,\"retweet_count\":1,\"favorite_count\":0,\"entities\":{\"hashtags\":[],\"symbols\":[],\n\"urls\":[{\"url\":\"https:\\/\\/t.co\\/8GsI5DsCy6\",\"expanded_url\":\"https:\\/\\/vine.co\\/v\n\\/bV9HtJgqqvj\",\"display_url\":\"vine.co\\/v\\/bV9HtJgqqvj\",\"indices\":[29,52]}],\"user\n_mentions\":[{\"screen_name\":\"TheNextWeb\",\"name\":\"The Next Web\",\"id\":10876852,\"id_\nstr\":\"10876852\",\"indices\":[3,14]}]},\"favorited\":false,\"retweeted\":false,\"possibl\ny_sensitive\":false,\"lang\":\"en\"},\"retweet_count\":0,\"favorite_count\":0,\"entities\":\n{\"hashtags\":[],\"symbols\":[],\"urls\":[{\"url\":\"https:\\/\\/t.co\\/8GsI5DsCy6\",\"expande\nd_url\":\"https:\\/\\/vine.co\\/v\\/bV9HtJgqqvj\",\"display_url\":\"vine.co\\/v\\/bV9HtJgqqv\nj\",\"indices\":[41,64]}],\"user_mentions\":[{\"screen_name\":\"Milann\",\"name\":\"\\u2652il\nan\",\"id\":14475802,\"id_str\":\"14475802\",\"indices\":[3,10]},{\"screen_name\":\"TheNextW\neb\",\"name\":\"The Next Web\",\"id\":10876852,\"id_str\":\"10876852\",\"indices\":[15,26]}]}\n,\"favorited\":false,\"retweeted\":false,\"possibly_sensitive\":false,\"filter_level\":\"\nlow\"}\n\n{\"created_at\":\"Mon Jun 03 10:15:51 +0000 2013\",\"id\":341498456428388353,\"id_str\":\n\"341498456428388353\",\"text\":\"Celebrate #MSTechEd - Save 50% on _all_ ebooks from\n @MicrosoftPress http:\\/\\/t.co\\/oaCT3k55Y8\",\"source\":\"\\u003ca href=\\\"http:\\/\\/ww\nw.hootsuite.com\\\" rel=\\\"nofollow\\\"\\u003eHootSuite\\u003c\\/a\\u003e\",\"truncated\":fa\nlse,\"in_reply_to_status_id\":null,\"in_reply_to_status_id_str\":null,\"in_reply_to_u\nser_id\":null,\"in_reply_to_user_id_str\":null,\"in_reply_to_screen_name\":null,\"user\n\":{\"id\":11069462,\"id_str\":\"11069462\",\"name\":\"O'Reilly Media\",\"screen_name\":\"ORei\nllyMedia\",\"location\":\"Sebastopol, Cambridge, Farnham\",\"url\":\"http:\\/\\/about.me\\/\noreillymedia\",\"description\":\"O'Reilly Media spreads the knowledge of innovators\nand expert early adopters to everyday users through books, conferences, news rep\nortage, videos, and classes.\",\"protected\":false,\"followers_count\":61531,\"friends\n_count\":22739,\"listed_count\":4108,\"created_at\":\"Wed Dec 12 00:27:43 +0000 2007\",\n\"favourites_count\":596,\"utc_offset\":-28800,\"time_zone\":\"Pacific Time (US & Canad\na)\",\"geo_enabled\":true,\"verified\":true,\"statuses_count\":18569,\"lang\":\"en\",\"contr\nibutors_enabled\":false,\"is_translator\":false,\"profile_background_color\":\"FFFFFF\"\n,\"profile_background_image_url\":\"http:\\/\\/a0.twimg.com\\/profile_background_image\ns\\/3565878\\/twitterorginal2.jpg\",\"profile_background_image_url_https\":\"https:\\/\\\n/si0.twimg.com\\/profile_background_images\\/3565878\\/twitterorginal2.jpg\",\"profil\ne_background_tile\":false,\"profile_image_url\":\"http:\\/\\/a0.twimg.com\\/profile_ima\nges\\/1765645737\\/oreilly-social-icon_normal.png\",\"profile_image_url_https\":\"http\ns:\\/\\/si0.twimg.com\\/profile_images\\/1765645737\\/oreilly-social-icon_normal.png\"\n,\"profile_banner_url\":\"https:\\/\\/pbs.twimg.com\\/profile_banners\\/11069462\\/13555\n08337\",\"profile_link_color\":\"0084B4\",\"profile_sidebar_border_color\":\"D4D4D4\",\"pr\nofile_sidebar_fill_color\":\"FFFFFF\",\"profile_text_color\":\"444444\",\"profile_use_ba\nckground_image\":true,\"default_profile\":false,\"default_profile_image\":false,\"foll\nowing\":null,\"follow_request_sent\":null,\"notifications\":null},\"geo\":null,\"coordin\nates\":null,\"place\":null,\"contributors\":null,\"retweet_count\":0,\"favorite_count\":0\n,\"entities\":{\"hashtags\":[{\"text\":\"MSTechEd\",\"indices\":[10,19]}],\"symbols\":[],\"ur\nls\":[{\"url\":\"http:\\/\\/t.co\\/oaCT3k55Y8\",\"expanded_url\":\"http:\\/\\/oreil.ly\\/19ujF\nwD\",\"display_url\":\"oreil.ly\\/19ujFwD\",\"indices\":[68,90]}],\"user_mentions\":[{\"scr\neen_name\":\"MicrosoftPress\",\"name\":\"Microsoft Press\",\"id\":19601111,\"id_str\":\"1960\n1111\",\"indices\":[52,67]}]},\"favorited\":false,\"retweeted\":false,\"possibly_sensiti\nve\":false,\"filter_level\":\"medium\",\"lang\":\"en\"}\n\n{\"created_at\":\"Mon Jun 03 10:17:21 +0000 2013\",\"id\":341498832456134656,\"id_str\":\n\"341498832456134656\",\"text\":\"Michael Adebolajo, charged with #Woolwich murder of\n Lee Rigby &amp; attempted murder of 2 police officers, has case referred to Old\n Bailey\",\"source\":\"\\u003ca href=\\\"http:\\/\\/www.bbc.co.uk\\/news\\/\\\" rel=\\\"nofollo\nw\\\"\\u003eBBC News\\u003c\\/a\\u003e\",\"truncated\":false,\"in_reply_to_status_id\":null\n,\"in_reply_to_status_id_str\":null,\"in_reply_to_user_id\":null,\"in_reply_to_user_i\nd_str\":null,\"in_reply_to_screen_name\":null,\"user\":{\"id\":5402612,\"id_str\":\"540261\n2\",\"name\":\"BBC Breaking News\",\"screen_name\":\"BBCBreaking\",\"location\":\"London, UK\n\",\"url\":\"http:\\/\\/www.bbc.co.uk\\/news\",\"description\":\"Breaking news alerts and u\npdates from the BBC. For news, features, analysis follow @BBCWorld (our World ed\nition) and @BBCNews (our UK edition).\",\"protected\":false,\"followers_count\":60609\n64,\"friends_count\":2,\"listed_count\":76029,\"created_at\":\"Sun Apr 22 14:42:37 +000\n0 2007\",\"favourites_count\":0,\"utc_offset\":0,\"time_zone\":\"London\",\"geo_enabled\":f\nalse,\"verified\":true,\"statuses_count\":12873,\"lang\":\"en\",\"contributors_enabled\":f\nalse,\"is_translator\":false,\"profile_background_color\":\"FFFFFF\",\"profile_backgrou\nnd_image_url\":\"http:\\/\\/a0.twimg.com\\/profile_background_images\\/571084338\\/bgjy\ngltd2afkpc1sdnjd.jpeg\",\"profile_background_image_url_https\":\"https:\\/\\/si0.twimg\n.com\\/profile_background_images\\/571084338\\/bgjygltd2afkpc1sdnjd.jpeg\",\"profile_\nbackground_tile\":false,\"profile_image_url\":\"http:\\/\\/a0.twimg.com\\/profile_image\ns\\/2186829506\\/128x128_twitter_bbc_breaking_normal.jpg\",\"profile_image_url_https\n\":\"https:\\/\\/si0.twimg.com\\/profile_images\\/2186829506\\/128x128_twitter_bbc_brea\nking_normal.jpg\",\"profile_banner_url\":\"https:\\/\\/pbs.twimg.com\\/profile_banners\\\n/5402612\\/1357232722\",\"profile_link_color\":\"1F527B\",\"profile_sidebar_border_colo\nr\":\"CCCCCC\",\"profile_sidebar_fill_color\":\"FFFFFF\",\"profile_text_color\":\"5A5A5A\",\n\"profile_use_background_image\":true,\"default_profile\":false,\"default_profile_ima\nge\":false,\"following\":null,\"follow_request_sent\":null,\"notifications\":null},\"geo\n\":null,\"coordinates\":null,\"place\":null,\"contributors\":null,\"retweet_count\":0,\"fa\nvorite_count\":0,\"entities\":{\"hashtags\":[{\"text\":\"Woolwich\",\"indices\":[32,41]}],\"\nsymbols\":[],\"urls\":[],\"user_mentions\":[]},\"favorited\":false,\"retweeted\":false,\"f\nilter_level\":\"medium\",\"lang\":\"en\"}\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18832676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18894751", "body": "hi, i am getting same error, can you plz share solution with me. it is urgent plz.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18894751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18894944", "body": "@emersonmoretto and @JordiAranda ,  hi, i am getting same error, can you plz share solution with me. it is urgent plz.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18894944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18959625", "body": "@emersonmoretto and @JordiAranda , thank you for your help. i got solution for this. you just need to add following jar files and it is working.\n![jars in java for hbc](https://f.cloud.github.com/assets/4384197/610318/1e2209d0-cdb1-11e2-8466-c3f27e49ff75.png)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/18959625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/21845638", "body": "okay, I am answering my question ... yes we can do this.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/21845638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "planvin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/19032346", "body": "Same problem here with RateTracker threads staying around. I see two possibilities : \n1 - ask for a scheduledExecutorService when using the clientbuilder. We could ask for an optional scheduler the same way we ask an endpoint, authentication and so on.. We could then let the developer handle it externally. In my case, when tomcat is shutting down, I want to kill all my executorservices.\n2 - just give the BasicClient a shutdown method. A simple clientBase.shutdown() would be enough IMHO.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/19032346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jseparovic": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/19299160", "body": "I'm guessing this had something to do with the message I'm getting today:\n{\"errors\": [{\"message\": \"The Twitter REST API v1 is no longer active. Please migrate to API v1.1. https://dev.twitter.com/docs/api/1.1/overview.\", \"code\": 68}]}\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/19299160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/23921231", "body": "Is anyone able to provide info on this? Or some sample code on how to detect the connection closing and reconnect?\nI thought HBC was meant to handle reconnnects automatically?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/23921231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/23923652", "body": "Debug Log:\n\n2013-08-30 19:47:39,599 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.wire      | << \"8[\\r][\\n]\"\n2013-08-30 19:47:39,599 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.wire      | << \"[0xe2][0xe5][0x2][0x0][0x0][0x0][0xff][0xff]\"\n2013-08-30 19:47:39,599 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.wire      | << \"[\\r][\\n]\"\n2013-08-30 19:48:09,723 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.wire      | << \"8[\\r][\\n]\"\n2013-08-30 19:48:09,723 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.wire      | << \"[0xe2][0xe5][0x2][0x0][0x0][0x0][0xff][0xff]\"\n2013-08-30 19:48:09,723 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.wire      | << \"[\\r][\\n]\"\n2013-08-30 19:48:39,862 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.wire      | << \"8[\\r][\\n]\"\n2013-08-30 19:48:39,862 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.wire      | << \"[0xe2][0xe5][0x2][0x0][0x0][0x0][0xff][0xff]\"\n2013-08-30 19:48:39,862 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.wire      | << \"[\\r][\\n]\"\n2013-08-30 19:49:10,002 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.wire      | << \"8[\\r][\\n]\"\n2013-08-30 19:49:10,002 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.wire      | << \"[0xe2][0xe5][0x2][0x0][0x0][0x0][0xff][0xff]\"\n2013-08-30 19:49:10,002 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.wire      | << \"[\\r][\\n]\"\n2013-08-30 19:49:40,172 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.wire      | << \"8[\\r][\\n]\"\n2013-08-30 19:49:40,172 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.wire      | << \"[0xe2][0xe5][0x2][0x0][0x0][0x0][0xff][0xff]\"\n2013-08-30 19:49:40,172 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.wire      | << \"[\\r][\\n]\"\n2013-08-30 19:50:10,296 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.impl.conn.PoolingClientConnectionManager | Connection manager is shutting down\n2013-08-30 19:50:10,296 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.impl.conn.DefaultClientConnection | Connection 0.0.0.0:51875<->199.16.156.81:443 closed\n2013-08-30 19:50:10,312 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.impl.conn.DefaultClientConnection | Connection 0.0.0.0:51875<->199.16.156.81:443 closed\n2013-08-30 19:50:10,312 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.impl.conn.PoolingClientConnectionManager | Connection manager shut down\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/23923652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/24019144", "body": "First time I've seen a stack overflow error after the connection shuts. Is anyone else having this issue? Connect to a userstream that gets no tweets and wait for connection to close. \n\nIs hosebird maintained any more? Should I be using twitter4j directly now? Frikin tumbleweeds rolling across this site\n\n2013-09-08 07:00:15,689 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.wire      | << \"8[\\r][\\n]\"\n2013-09-08 07:00:15,689 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.wire      | << \"[0xe2][0xe5][0x2][0x0][0x0][0x0][0xff][0xff]\"\n2013-09-08 07:00:15,689 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.wire      | << \"[\\r][\\n]\"\n2013-09-08 07:00:45,813 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.impl.conn.PoolingClientConnectionManager | Connection manager is shutting down\n2013-09-08 07:00:45,813 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.impl.conn.DefaultClientConnection | Connection 0.0.0.0:60601<->199.16.156.48:443 closed\n2013-09-08 07:00:45,813 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.impl.conn.DefaultClientConnection | Connection 0.0.0.0:60601<->199.16.156.48:443 closed\n2013-09-08 07:00:45,813 | hosebird-client-io-thread-0 | DEBUG | org.apache.http.impl.conn.PoolingClientConnectionManager | Connection manager shut down\nException in thread \"hosebird-client-io-thread-0\" java.lang.StackOverflowError\n        at sun.util.calendar.ZoneInfo.getOffsets(ZoneInfo.java:271)\n        at sun.util.calendar.ZoneInfo.getOffsets(ZoneInfo.java:248)\n        at java.util.GregorianCalendar.computeFields(GregorianCalendar.java:2276)\n        at java.util.GregorianCalendar.computeFields(GregorianCalendar.java:2248)\n        at java.util.Calendar.setTimeInMillis(Calendar.java:1140)\n        at java.util.Calendar.setTime(Calendar.java:1106)\n        at org.apache.log4j.helpers.ISO8601DateFormat.format(ISO8601DateFormat.java:75)\n        at java.text.DateFormat.format(DateFormat.java:336)\n        at org.apache.log4j.helpers.PatternParser$DatePatternConverter.convert(PatternParser.java:444)\n        at org.apache.log4j.helpers.PatternConverter.format(PatternConverter.java:65)\n        at org.apache.log4j.PatternLayout.format(PatternLayout.java:502)\n        at org.apache.log4j.WriterAppender.subAppend(WriterAppender.java:302)\n        at org.apache.log4j.RollingFileAppender.subAppend(RollingFileAppender.java:263)\n        at org.apache.log4j.WriterAppender.append(WriterAppender.java:160)\n        at org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:251)\n        at org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:66)\n        at org.apache.log4j.Category.callAppenders(Category.java:206)\n        at org.apache.log4j.Category.forcedLog(Category.java:391)\n        at org.apache.log4j.Category.log(Category.java:856)\n        at org.apache.commons.logging.impl.Log4JLogger.debug(Log4JLogger.java:177)\n        at org.apache.http.impl.conn.Wire.wire(Wire.java:63)\n        at org.apache.http.impl.conn.Wire.input(Wire.java:131)\n        at org.apache.http.impl.conn.LoggingSessionInputBuffer.readLine(LoggingSessionInputBuffer.java:120)\n        at org.apache.http.impl.io.ChunkedInputStream.getChunkSize(ChunkedInputStream.java:251)\n        at org.apache.http.impl.io.ChunkedInputStream.nextChunk(ChunkedInputStream.java:209)\n        at org.apache.http.impl.io.ChunkedInputStream.read(ChunkedInputStream.java:171)\n        at org.apache.http.conn.EofSensorInputStream.read(EofSensorInputStream.java:138)\n        at java.util.zip.InflaterInputStream.fill(InflaterInputStream.java:238)\n        at java.util.zip.InflaterInputStream.read(InflaterInputStream.java:158)\n        at java.util.zip.GZIPInputStream.read(GZIPInputStream.java:116)\n        at com.twitter.hbc.common.DelimitedStreamReader.readLine(DelimitedStreamReader.java:72)\n        at com.twitter.hbc.common.DelimitedStreamReader.readLine(DelimitedStreamReader.java:56)\n        at com.twitter.hbc.core.processor.StringDelimitedProcessor.processNextMessage(StringDelimitedProcessor.java:53)\n        at com.twitter.hbc.core.processor.StringDelimitedProcessor.processNextMessage(StringDelimitedProcessor.java:26)\n        at com.twitter.hbc.core.processor.AbstractProcessor.process(AbstractProcessor.java:44)\n        at com.twitter.hbc.core.processor.AbstractProcessor.process(AbstractProcessor.java:49)\n        at com.twitter.hbc.core.processor.AbstractProcessor.process(AbstractProcessor.java:49)\n        at com.twitter.hbc.core.processor.AbstractProcessor.process(AbstractProcessor.java:49)\n        at com.twitter.hbc.core.processor.AbstractProcessor.process(AbstractProcessor.java:49)\n        at com.twitter.hbc.core.processor.AbstractProcessor.process(AbstractProcessor.java:49)\n        at com.twitter.hbc.core.processor.AbstractProcessor.process(AbstractProcessor.java:49)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/24019144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kumarshirish": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/25260926", "body": "I had the same problem.  It was due to the wrong versions of the httpclient and httpcore jar files. Once switched to the above version (mentioned by farahnaj), it started working.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/25260926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "wwkeyboard": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/29045993", "body": "I just hit this as well, if you are on OSX 10.9, homebrew's default maven probably wants to use java 1.6(beats me why).\n\n``` bash\n    export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.7.0_25.jdk/Contents/Home\n```\n\nfixed that\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/29045993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "isian14": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/29046082", "body": "Thanks.\n\nBest regards,\nChanglong\n\n> \u00d4\u00da Nov 21, 2013\u00a3\u00ac22:12\u00a3\u00acAaron Lee notifications@github.com \u00d0\u00b4\u00b5\u00c0\u00a3\u00ba\n> \n> I just hit this as well, if you are on OSX 10.9, homebrew's default maven probably wants to use java 1.6(beats me why).\n> \n> ```\n> export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.7.0_25.jdk/Contents/Home\n> ```\n> \n> fixed that\n> \n> \u00a1\u00aa\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/29046082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "tobecalled": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/29350265", "body": "Hey guys, I have a similar issue still. I ran the mvn install/exec:java.\nIdeas? \n\nHere are my logs:\n[hosebird-client-io-thread-0] INFO com.twitter.hbc.httpclient.ClientBase - sampl\neExampleClient Establishing a connection\n[hosebird-client-io-thread-0] WARN com.twitter.hbc.httpclient.ClientBase - sampl\neExampleClient Error connecting w/ status code - 401, reason - Unauthorized\nDid not receive a message in 5 seconds\nDid not receive a message in 5 seconds\nDid not receive a message in 5 seconds\nDid not receive a message in 5 seconds\n[hosebird-client-io-thread-0] INFO com.twitter.hbc.httpclient.ClientBase - sampl\neExampleClient Done processing, preparing to close connection\n[hosebird-client-io-thread-0] INFO com.twitter.hbc.httpclient.ClientBase - sampl\neExampleClient Establishing a connection\n[hosebird-client-io-thread-0] WARN com.twitter.hbc.httpclient.ClientBase - sampl\neExampleClient Error connecting w/ status code - 401, reason - Unauthorized\nDid not receive a message in 5 seconds\nDid not receive a message in 5 seconds\nTerminate batch job (Y/N)? y\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/29350265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/29351055", "body": "Do you mean my \"auth\" object isn't be instantiated correctly?\nI tried OAuth1 with these params: Dconsumer.key=XYZ -Dconsumer.secret=SECRET -Daccess.token=ABC -Daccess.token.secret=ABCSECRET\n\nand BasicAuth with a username/pass of an existing twitter account.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/29351055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/29353487", "body": "Yes, I had set that up by 'creating an app'\n\nI did a mvn clean and it's working for me now. Not sure what the issue was. But thank you for looking into this.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/29353487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "spifd": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/30807530", "body": "I've looked and easily patched ClientBuilder to pass proxy to Http client: it works (this was just for a sample during a training). Now, I haven't looked if this client can be exposed cleanly. One way would be to check for system property http.proxy\\* but it is not very clean.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/30807530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "drazzib": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/38144722", "body": "@kevinoliver Is there a pre-build JAR that I can consume to easily check with my current code base ? (I've check Sonatype OSS repository but can't find a current snapshot)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/38144722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/38231991", "body": "Ok, I'll try that and get back to you.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/38231991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/38257006", "body": "@kevinoliver I've just build 2.0.1-SNAPSHOT from master and deployed it in our staging environnement. Your change seems to have fixed this issue !\n\nThanks !\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/38257006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "axelmagn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/40019939", "body": "So I am.  My bad.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/40019939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jasel-lewis": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/40429784", "body": "I do not see a way to delete this Issue (from my end).  Please disregard and close.  The problem lies with the fact that a Firehose endpoint requires special permission to access (https://dev.twitter.com/docs/api/1.1/get/statuses/firehose).\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/40429784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "adityapooniya": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/42092734", "body": "Clearly Define the issue in RateTracker. Which type of parameters based on this RateTracker tracking the result... Then we have solve the problem.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/42092734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "scubasau": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/43105220", "body": "I noticed the same issue during Firehose testing. It appears that the issue is due to backoffMillis in BasicReconnectionManager being 0 for the first reconnection. It is only if the reconnect fails that backoffMillis is increased and estimateBackfill(tps) will result in a count > 0. This means that if a read times out or we get a gzip/ssl error (not uncommon), we'd be missing a few ms worth of tweets.\n\nMy solution to this was to write a custom ReconnectionManager that listens for DISCONNECT events. It then calculates the backfill based on tps \\* amount of time disconnected (i.e., currentTime - disconnectTime).\n\nI'm still in the process of testing this, but so far so good\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/43105220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/44979273", "body": "@kevinoliver confirmed #119 fixes this issue. Thanks! (and thanks to @paradigmsort)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/44979273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "coveralls": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/47601824", "body": "[![Coverage Status](https://coveralls.io/builds/919618/badge)](https://coveralls.io/builds/919618)\n\nChanges Unknown when pulling **0ab9fb6cc8bae81a1b0a7880e8a16c08d381760f on add-coveralls** into *\\* on master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/47601824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/49671245", "body": "[![Coverage Status](https://coveralls.io/builds/991227/badge)](https://coveralls.io/builds/991227)\n\nCoverage remained the same when pulling **87a34746d60c20f6c5f4ab362f1cb4856a74d9a8 on readme-update** into **70d6ced7f8e0b6d6848790d7f62cf60a4a1f11e6 on master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/49671245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/63728872", "body": "[![Coverage Status](https://coveralls.io/builds/1499491/badge)](https://coveralls.io/builds/1499491)\n\nCoverage remained the same when pulling **d55e50d9930fa1dfb40da99510d29387130e0d79 on pheuter:patch-1** into **40e8f29a83f7980cd51de7a69359b4e66021db31 on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/63728872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/68475331", "body": "[![Coverage Status](https://coveralls.io/builds/1679375/badge)](https://coveralls.io/builds/1679375)\n\nCoverage remained the same when pulling **bbfb0af61916a0bc40deb27fd601784b6cd47f3b on gengel:master** into **602944b2bb3f23f3f8661d43239648f0ae25a0f7 on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/68475331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/68595937", "body": "[![Coverage Status](https://coveralls.io/builds/1686438/badge)](https://coveralls.io/builds/1686438)\n\nCoverage remained the same when pulling **80a4c4c42fe500b2518847bd20cec9d9110865d6 on gengel:master** into **602944b2bb3f23f3f8661d43239648f0ae25a0f7 on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/68595937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/68950431", "body": "[![Coverage Status](https://coveralls.io/builds/1701531/badge)](https://coveralls.io/builds/1701531)\n\nCoverage remained the same when pulling **16b2db730c292eca59a8f761cd6231cea0e1fe1b on new-travisci-infra** into **b9939e3d5589cbec706b9dd5c531b0bbfeefda8c on master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/68950431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/78137185", "body": "[![Coverage Status](https://coveralls.io/builds/2080438/badge)](https://coveralls.io/builds/2080438)\n\nCoverage increased (+0.08%) to 56.33% when pulling **7f00e4820854cb0c3a501d993ce45043f1a39051 on bw-tom:set-publisher-configurable** into **ac4cbdf561961fba9c6ea655c5f334cce4f7d5a9 on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/78137185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "xgrommx": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/48406968", "body": "@kevinoliver It don't good an approach as for me. Maybe in future it will be added to current functional?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/48406968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sceutre": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/57867275", "body": "I was getting the same behavior.  I worked around it by using a class like the following, although I think a better fix would be to interrupt the connection upon stop as the workaround requires 30s in the worst case.\n\n```\npublic class MyProcessor extends StringDelimitedProcessor {\n   private long lastMessage = System.currentTimeMillis();\n\n   public MyProcessor(BlockingQueue<String> queue) {\n      super(queue);\n   }\n\n   @Override\n   public boolean process() throws IOException, InterruptedException {\n      String msg = processNextMessage();\n      while (msg == null) {\n         if (System.currentTimeMillis() - lastMessage > 5000) {\n            lastMessage = System.currentTimeMillis();\n            return true;\n         }\n         msg = processNextMessage();\n      }\n      lastMessage = System.currentTimeMillis();\n      return queue.offer(msg, offerTimeoutMillis, TimeUnit.MILLISECONDS);\n   }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/57867275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lukeMcfly": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/66112365", "body": "hi Alex have you found any better way to change track terms? I'm stuck on the same issue.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/66112365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/66112441", "body": "Is there a way to change filterterms without stoping the client conneciton?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/66112441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/151751698", "body": "Hi Hronom,\n\nunfortunately there is no way of changing the filter without reconnecting. The Streaming API was designed this way. You can read about it here https://dev.twitter.com/streaming/overview what you can obviously do is grab a larger part of the cake and filter the pieces you need afterwards. If you want to change filters constantly you'll have to use the Search API\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/151751698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lgorse": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/69449307", "body": "I also hit this problem. I'm assuming there's a really simple solution since this is a Twitter-supported project - and all it takes is someone to respond to this thread?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/69449307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "YousefED": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/77405439", "body": "+1, @Jakob2014uafmx are you planning on submitting your changes as a PR or would you like me to?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/77405439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Eugenijus": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/98845779", "body": "I have the same issue when trying to use hbc-core in android development (Android Studio). I get:\njava.lang.NoClassDefFoundError: org.apache.http.impl.conn.SchemeRegistryFactory\n\nIn my gradle dependencies I added these lines:\ncompile 'org.apache.httpcomponents:httpclient:4.2.5'\ncompile 'com.twitter:hbc-core:2.2.0'\n\nBut when I open ClientBuilder.java the following import still cannot be found:\nimport org.apache.http.impl.conn.SchemeRegistryFactory;\n\nI tried httpclient 4.4.1 as well. My App is targeted for minSdkVersion 17 and targetSdkVersion 21.\n\nThis is very cool project/library and it would be awesome if it worked on Android as well.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/98845779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "hamen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/104372414", "body": "Same issue here:\n\n``` java\n    java.lang.NoClassDefFoundError: Failed resolution of: Lorg/apache/http/impl/conn/SchemeRegistryFactory;\n            at com.twitter.hbc.ClientBuilder.<init>(ClientBuilder.java:102)\n```\n\nAny possible solution?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/104372414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "nwaltner": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/111551813", "body": "Thanks. My shell was foobared. GIGO as they say. Thx again.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/111551813/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/111581897", "body": "Kevin,\n\nThanks. It turned out that I foobared my shell script. My bad.\nI\u2019m twittering away now.\n\nRegards,\n\nNick\n\nOn Jun 12, 2015, at 9:19 AM, Kevin Oliver notifications@github.com wrote:\n\n> If you look at the stacktrace its triggered here:\n> \n> Caused by: java.lang.NullPointerException\n> at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:191)\n> at com.twitter.hbc.httpclient.auth.OAuth1.(OAuth1.java:52)\n> at com.twitter.hbc.example.SampleStreamExample.run(SampleStreamExample.java:39)\n> at com.twitter.hbc.example.SampleStreamExample.main(SampleStreamExample.java:77)\n> ... 6 more\n> Make sure you are giving it a consumerKey: https://github.com/twitter/hbc/blob/master/hbc-core/src/main/java/com/twitter/hbc/httpclient/auth/OAuth1.java#L52\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n\nNicholas Waltner\nManaging Principal\n\nPhone:      (206) 254-0223\nCellular:   (206) 972-1456\n\n1201 3rd Avenue\nSuite 5030\nSeattle, WA 98101\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/111581897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ghost": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/112874320", "body": "I apologize- I had been working on this for a long time, but right after I posted this question I figured out that I needed to use StatusesSampleEndpoint.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/112874320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "tmcf": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/113413304", "body": "Hi,\nWe recently had the same issue, but it was time drift on one of our servers causing the oauth to be rejected as its creation time was too far off.\n\nvandannguyen gives a very good explanation of the issue here:\nhttps://vandannguyen.wordpress.com/2014/12/02/twitter-error-connecting-w-status-code-401-reason-authorization-required/\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/113413304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "richmidwinter": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/127399549", "body": "I've run into this with hadoop too. Think it was an Apache HttpClient dependency conflict.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/127399549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/127399677", "body": "I had this issue with hadoop dependencies also pulling in (different) versions of httpclient.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/127399677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dmitriy-svds": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/128485457", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/128485457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "blakelapierre": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/132782629", "body": "@jk171505 Do you know if there's a way to update without reconnecting? Or if anyone has code that can spawn off a new request with the updated parameters, reconcile the duplicates from the existing connection, and then dropping the old connection once the new connection is up?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/132782629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "emptyflash": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/141685847", "body": "Also hitting this issue. As far as I can tell, android uses an older version (like, pre version 4) of `org.apache.httpcomponents`. Which was the conclusion of [this google group discussion](https://groups.google.com/forum/#!topic/ektorp-discuss/hZygPBSNkNE). [This StackOverflow answer](http://stackoverflow.com/questions/16631784/can-i-use-a-new-version-of-httpclient-in-my-android-project) offers a solution to use a port of a newer version of HttpComponents. Apache actually has it own [official port for Android](https://hc.apache.org/httpcomponents-client-4.3.x/android-port.html).\n\nSo it looks like it might be necessary to have a fork of this project that uses Apache's HttpComponents for Android.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/141685847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/141699606", "body": "Okay, if anyone also hitting this problem wants to give this solution a whirl: here's a repo you can use: https://jitpack.io/#emptyflash/hbc/hbc-2.2.1\n\nIt actually uses version 1.1.2 of the [httpclientandroidlib](https://code.google.com/p/httpclientandroidlib/) because that's a direct port of 4.2.3 of Apache HttpComponents. The official Android release of HttpComponents is version 4.3 which isn't compatible with hbc.\n\nIf you want to use this solution you'll have to specify which modules you're using:\n\n``` xml\n<dependency>\n  <groupId>com.github.emptyflash</groupId>\n  <artifactId>hbc</artifactId>\n  <version>hbc-2.2.2</version>\n</dependency>\n<dependency>\n  <groupId>com.github.emptyflash.hbc</groupId>\n  <artifactId>hbc-twitter4j</artifactId>\n  <version>hbc-2.2.2</version>\n</dependency>\n<dependency>\n  <groupId>com.github.emptyflash.hbc</groupId>\n  <artifactId>hbc-core</artifactId>\n  <version>hbc-2.2.2</version>\n</dependency>\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/141699606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Hronom": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/151124318", "body": "Hello guys, is any progresss on this? I'm very interested in this kind of feature...\nSo to summirize, I need next feature:\nChange tracks without disconnecting client, so twitter don't throw 420(\"Enhance Your Calm\")\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/151124318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jayv": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/164037383", "body": "We (https://partners.twitter.com/livefyre) reconnect all the time to update the filter stream query in our processing pipeline and run into HTTP420's all the time on connections with little traffic due to this bug!! @kevinoliver what is the status on this, should we bump priority via our partner contact or ...?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/164037383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/164517973", "body": "You may be running into https://github.com/twitter/hbc/issues/141\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/164517973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/164612529", "body": "I've made a workaround based on v2.2.0 with minimal code changes. I have a testcase (not included) that proves that since this fix there are no `hosebird-client-io-thread` threads around after shutting down on connections with no activity.\n\nhttps://github.com/jayv/hbc/commit/e97f8402b7d083018805ac75c0366a216d20219f\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/164612529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mgalushka": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hbc/issues/comments/168525339", "body": "@tmcf I have exactly the same issue, but it is related neither to incorrect time on my machine nor to filter level (I don't set it at all), please, help to understand why API suddenly stopped working.\n\nAnd curl generated from twitter console tester is working just fine.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/issues/comments/168525339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lzheng": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/twitter/hbc/comments/3157441", "body": "Kevin:\n\nCan you explain the purpose of hbc-twitter4j-v3? It is suppose to replace hbc-twitter4j?\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/comments/3157441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "cheenath": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/10461468", "body": "yep, UrlCodec.encode() is the correct usage.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/10461468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/10461488", "body": "Looks good, ship it.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hbc/pulls/comments/10461488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}}}