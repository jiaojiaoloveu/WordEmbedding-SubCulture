{"_default": {"1": {"vrushalivc": {"issues": [{"url": "https://api.github.com/repos/twitter/hraven/issues/162", "title": "Fix javadoc warnings generated by java 8", "body": "Several warnings are generated by java 1.8 when we update to use later version of maven-javadoc-plugin to be 2.10.4 and maven-release-plugin to be 2.5.3\r\n\r\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-javadoc-plugin:2.10.4:javadoc (default-cli) on project hraven-core: An error has occurred in JavaDocs report generation:\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/AppAggregationKey.java:57: error: reference not found\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/AppSummary.java:110: error: unknown tag: returns\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/AppSummary.java:124: error: identifier expected\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/CounterMap.java:68: error: unknown tag: emphasis\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/CounterMap.java:68: error: unknown tag: emphasis\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/HdfsStatsKey.java:86: error: @param name not found\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/JobDetails.java:107: error: @param name not found\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/JobHistoryKeys.java:13: error: reference not found\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/JobHistoryKeys.java:24: error: reference not found\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/JobId.java:102: error: @param name not found\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/TaskDetails.java:122: error: @param name not found\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/datasource/AppSummaryService.java:231: error: identifier expected\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/datasource/AppSummaryService.java:614: error: malformed HTML\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/datasource/AppSummaryService.java:72: error: reference not found\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/datasource/AppVersionService.java:49: error: reference not found\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/datasource/HdfsStatsKeyConverter.java:41: error: @param name not found\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/datasource/HdfsStatsService.java:64: error: reference not found\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/datasource/JobHistoryByIdService.java:90: error: bad use of '>'\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/datasource/JobHistoryByIdService.java:46: error: reference not found\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/datasource/JobHistoryRawService.java:382: error: reference not found\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/datasource/JobHistoryRawService.java:440: error: reference not found\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/datasource/JobHistoryRawService.java:461: error: reference not found\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/datasource/JobHistoryRawService.java:477: error: unknown tag: success\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/datasource/JobHistoryRawService.java:54: error: reference not found\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/datasource/MissingColumnInResultException.java:26: error: reference not found\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/datasource/MissingColumnInResultException.java:28: error: unterminated inline tag\r\n[ERROR]  hraven/hraven-core/src/main/java/com/twitter/hraven/rest/SerializationContext.java:159: error: bad HTML entity", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/158", "title": "Ensure hraven-client does not require hbase dependency at run time", "body": "\r\nthe hRaven client should not depend on any hbase jars at run time. This is important so that clients can make REST calls and expect java objects being returned. \r\n\r\nI believe this class needs to be looked at in more detail, specifically line 63     \r\n\r\nreturn om.readValue(inputStream, type);\r\n\r\nhttps://github.com/twitter/hraven/blob/master/hraven-core/src/main/java/com/twitter/hraven/util/JSONUtil.java\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/144", "title": "Port hRaven to HBase 1.x", "body": "HBase 1.x has new APIS, need to update the hraven code to read/write from hbase 1.x clusters\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/140", "title": "Enhance task API to allow for filtering out of fields", "body": "If similar enhancement can be easily added to flow and job APIs, it will be a good to have\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/twitter/hraven/commits/e35996b6e2f016bcd18db0bad320be7c93d95208", "message": "Merge pull request #164 from talglobus/patch-1\n\nFix typo in comment"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/7b427295ca71409af8dc6e9094cc569ba72e9f25", "message": "Merge pull request #163 from pgaref/build_fix\n\nFixing build failure cause by wrong project dependency in pom"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/e0c036c960119be115d52be968850c59fd4f78aa", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/7cf6f67771023dd7ce73154165963b3bbb96e9c0", "message": "[maven-release-plugin] prepare release v1.0.1"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/a1594c37d3642c2b8e0505f7fb4b53a20265a6b9", "message": "Updating release plugin and javadoc plugin versions"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/cc9f6ce2b3273dc0200897bf704edf31ce64564f", "message": "Adding a non null check for jobDetails before invoking getTaskDetails"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/424de31c85ad52c88253a53e151581a9fcd0f5ba", "message": "Updating to next snapshot"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/419699dd1f7ebdc3d7b95419dc0dc3682849fd9d", "message": "Merge pull request #161 from piyushnarang/client-gzip\n\nAdd support to request for compressed payloads from the HRavenRestClient,"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/2089d6990c50720d36c757b46ad7f19ebb9d664d", "message": "Merge pull request #160 from piyushnarang/task_counter_filters\n\nAdd support to filter task / job counters"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/e17ec79dbba0480d3b245f1c7f0fe02ae45820f7", "message": "Setting version to 1.0.0-SNAPSHOT"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/dcbe5902bb5876a32d2a398ad0dbf3bc46e09029", "message": "Setting version to release 1.0.0"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/1163257d1b35a93294205e0426fa344c4be551a3", "message": "Merge pull request #159 from twitter/dogpiledays_hbase1\n\nUpdating hRaven to build/run on hadoop2, hbase 1.x & jre 1.8"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/940907cf3a1a37d265fb534dde3b0ac635b9f098", "message": "removing commented lines from pom"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/449d033b824de480cda66348075f1256d58553b8", "message": "Updating the json serialization for String members"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/7d2bea64dc3a120b922bdeff541b9de436a951b9", "message": "First check in for memory optimizations for jobs"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/37b0750213e0dd0350ffcd91e8f0af25ba90f851", "message": "Merge pull request #156 from jrottinghuis/dogpiledays_hbase1\n\nMerging #156 after discussion with Joep.\r\nThis improves the hbase connections being created when the rest api calls are called.  There now should be one static connection for the entire class in the JVM (modulo weirdness with classloaders).  Each thread creates its own service instance each time, but that should be light weight, using the one single multi-threaded / shared connection. It does not tackle the closing of connections upon jvm termination (which is an existing thing anyways)."}, {"url": "https://api.github.com/repos/twitter/hraven/commits/4f5c2299016e19b858079483256471f34825d5e3", "message": "Merge pull request #155 from gsteelman/piling_the_dogs_kv_cell\n\nRemove KeyValue use in hraven-core"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/6f50812eead3d2d7831afff5f149e6c75d4468df", "message": "Merge pull request #152 from jrottinghuis/dogpiledays_hbase1\n\nUpdating hraven-etl to work with new hbase/hadoop api"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/8ea3b90e557a44583f31d78a681a63276b9ae5ac", "message": "Merge pull request #150 from gsteelman/piling_the_dogs\n\nRemove HTable use in hraven-core"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/e84d876a7199d3ef0e96fdf082774491ec0f32b3", "message": "Merge pull request #145 from vrushalivc/dogpiledays_prep\n\nGenerating a dev branch to prepare code base for moving to hadoop2/hbase1"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/43eddd13896e0ae94fc8f2fa94b1df6e9ac32008", "message": "preparing for dogpile days"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/076ede7253e6f90be3b3bbd937c0499ce6e749d6", "message": "Updating the debugging statements with correct usage of builder from StringUtils"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/dfc5bb7dbc792f2a0ede14a817d68781fa8c41ef", "message": "Updating the comments, logging statements and extracting out a small function for module in serialization"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/cbe53f7fbcc235d568eda26fa310b8ee6c637629", "message": "Adding in filtering options for the task, job and flow endpoints Issue #140"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/32850872d33b1c3ef3fa1897ded5160a9d402e7e", "message": "Merge pull request #135 from sjlee/sjlee/merge-132-to-master\n\nMerged #132 from twitter_only to master (#134)."}, {"url": "https://api.github.com/repos/twitter/hraven/commits/69704fe293d4e47cb2e8db8d895c9089ec4eb89b", "message": "Update README.md"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/e1acde703c2335534041beb34cec9db5c0d71eed", "message": "Update README.md"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/9661ad2a9a54e0562eec45c989827f8df7838333", "message": "updating if checks around trace level logging"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/71d4a5b1ff035772ea85a75b9731ac0c314e582e", "message": "(minor) updating another Long to long"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/77cd3effd694159292d536008d0b9e461bff27f7", "message": "[minor] updating if condition"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/bed8dd81e1ce1ed9132ddc7b4149e3c3f60205df", "message": "Updating as per review comments (changing Double to double, Long to long, logging exceptions correctly etc)"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/ba338ecf13e82303d4a8c2f0be651b0603dc68fa", "message": "Updating TaskDetails to use ByteUtil functions for getting values from navigable map of hbase results"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/0dd1bef4d8b6eeda76788f64af9876eb4d3c9caf", "message": "Merge pull request #123 from vrushalic/fix_json_serialization\n\nminor fix for a json serialization problem for strings"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/067f1ba25f1e645c473f7acce1ef7c5b693abff7", "message": "minor fix for a json serialization problem for strings"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/e790f8e6c22fd5b7c568dc5ddf011aa4cf9be4d7", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/350a6cc134e381aa52a95e530be46aa76f8bad6a", "message": "[maven-release-plugin] prepare release hraven-0.9.16"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/1fd17f26c6045368840f1d68ed7a1c1540bb0dae", "message": "Issue #121 Consider assigning null to variables during processing"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/797477b661c5a63f391d922f9d384a662d980d8d", "message": "Merge pull request #119 from vrushalic/add_jobqueue_change\n\nIssue #118 enabling 2.4 history file processing"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/25ca51b343bd3ed1608f6f3ab4daf40b747ab00e", "message": "Adding test case for 2.4"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/e5cff2c98359142d89a5ee5c6d6dec990f8d5c5f", "message": "Merge pull request #106 from angadsingh/cost-file\n\nRemove copying of cost file from local to HDFS"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/0a52c3a740a16cb2100b553cb8eeb97208574e00", "message": "Issue #118 enabling 2.4 history file processing"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/b05dcf2c6140563eed2875bf1848512d12755ed3", "message": "Issue #97, #98: Aggregate job info per day and per week as part of JobProcessing Step in the ETL. Also enable a rest api to fetch this aggregated app info, use check and put to store number of runs, cost and queues,"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/7435a97d72b2febe7f6f3459e58f92f405f9c58f", "message": "Merge pull request #110 from angadsingh/exceptions-cleanup\n\nremoved unnecessary catching of exceptions"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/0479e2e81643f51b9352ac81161b8b25f4924738", "message": "Updating to include a rest server which can be used to view exported metrics from rest apis"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/7ce680c98bcb3e8d74a8cf1a822c8597d908ec6f", "message": "Updating to name cost consistently"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/43794c47a7ab88f1aa0aa40b0b92b71366e6cc87", "message": "Issue #95  Return jobCost and flowCost in job and flow apis"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/49a1249217891b3668c5a09571cd58ca4e97b27d", "message": "Merge pull request #94 from amatsukawa/keys_toString\n\nAdd toString to all keys and standardize their construction"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/a3cd44f3743fa99ff44149bd6a2ab3dd70f4d3ec", "message": "Initial commit for adding Metrics exporting related to hRaven rest api calls"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/0cf9a37c70687b5cb4152ac63d16a1ad5f4fcf72", "message": "Merge pull request #93 from vrushalic/AM_finish_time\n\nIssue #92 Refactor code in TaskDetails"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/ac77d110933e75de11c6108e591d393861d2e2c2", "message": "Issue #92 Refactor code in TaskDetails"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/f1d51d558e6482f066d13a416372bf696e51bc73", "message": "Merge pull request #88 from criteo/master\n\nUpdate etl scripts and memorymb default value"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/6e2bbc3148851490471e7614702b0d1b2a4b69a2", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/8c6aff478d77d6ddb95b95a7e81508237aada9b9", "message": "[maven-release-plugin] prepare release hraven-0.9.14"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/b32c1085778394adf03497282103d7b549bef15a", "message": "Merge pull request #89 from aniket486/check_hadoop_2_rm_first\n\ngetCluster api should check for hadoop 2 property first"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/d1b12f8bdcd3ab272765848753516e551e69b846", "message": "Issue #87 Updating jobFileProcessor.sh with latest arguments and adding a sample cost file"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/e5fa108a08557c1c840514014146f1be9e2b5a8c", "message": "Updating class names to reflect their intention better, adding some more tests and cleaning up documentation"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/6a1e86f12c127804ea69ec8cf7f4b71459f25e6d", "message": "Updating formatting"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/5b6f7d7d372d073dd1ae958be2756502ac94c434", "message": "Modifying to include AppService, App and AppKey classes, also making a single api call for new jobs given a cluster and making user as a query param"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/972da00e1d3ee2adf92d4287bf7e2359b0b5ad82", "message": "Updating to move get new jobs to job history service"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/51be93283730fadd1c5ede2deefab32749a17210", "message": "Updating some more comments"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/c7fc7983ca61aef5bec85288674ed7434489e071", "message": "Updating java docs"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/a58d5aff818c12f5aee7355a602984d0bd887fb9", "message": "Updating to remove capacity info, ensure APIs don't mix service class calls"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/bf3570a3c53c9535ffb381df12733e7c76c9c6b6", "message": "Updating to add final modifiers, removing abstract in interfaces, changing to return Object instead of long"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/8d90838180abed6b7776996484f9ca17f35c3d75", "message": "updating to enable different schedulers via factory and interface"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/06d7f225a503a7bb56816ba35121a104ed69d01b", "message": "Issue #82 Allowing for different schedulers to be supported, presently adding for fair scheduler and Updating other things as per review comments."}, {"url": "https://api.github.com/repos/twitter/hraven/commits/1bcc23692cc0eee5a3716ebecf672e04ed46ef09", "message": "Issue #84:  Add start and end time to flow API"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/31609a6b9cce60f1cd126007224f3ed551ac6d08", "message": "minor formatting changes"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/ce1f6e4a46d4971b6ed33c537dfcb5aa02b6fbe9", "message": "Issue #82: Add a newJobs REST API, Issue #81: Correct the timestamp being stored in appVersion table, Issue #80: Have queue/pool name returned at flow level"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/705bcd462b56e7e17779500251fb332fbb0f6a49", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/2607463dadcd5a1db0e24d8c3b8a552b4634b78a", "message": "[maven-release-plugin] prepare release hraven-0.9.13"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/6a1b57a42cb6b430ee8200af1ac3646975df5d46", "message": "Merge pull request #79 from vrushalic/rest_api_hadoopclusters_properties\n\nRest api for getting cluster identifier and renaming hadoopclusters properties"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/bad4f492d85c723ab06e7cb7cc46cb8e47688156", "message": "Issue #78 Formatting changes"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/9e8c2712c4fb5d025accadae68973c6a3bcfaa05", "message": "Issue #78 Adding a REST api for getCluster (also enable loading of different properties files for cluster identifier mappings)"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/117b5040000ac03eb7d4a0598f4f943969804e6b", "message": "Merge pull request #77 from vrushalic/jobcost_updated\n\nIssue #75 Calculating job cost as part of the Processing step"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/5132880d6578249396cb36a564864b6e2bc6646d", "message": "Issue #75 Calculating job cost as part of the Processing step"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/01c7ac588eda1e8807dd09c9badb4647a063d2ed", "message": "Merge pull request #74 from aniket486/add_jobdescfactory_api\n\nExpose an api to getJobDescFactory to getAppId for a jobConf"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/85de6f85825cd49792d2153367a3a8b2e2d1a83e", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/625f5514210e1f337da7a31da421892a02899da2", "message": "[maven-release-plugin] prepare release hraven-0.9.12"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/61a8800bcc7d5a1b79cbc21741a126d8abe8d874", "message": "Issue #72  Ensure MR job status is set for successful hadoop2 jobs"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/cb15ea5f67d5debc7824069cc520e4552014d84f", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/0cc2a80dd0410234aaefa1fc7b378baa8650aa0d", "message": "[maven-release-plugin] prepare release hraven-0.9.11"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/e31d3921df6f1b2561c53e24dffe4549c949076a", "message": "Making the epoch timestamp string length final"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/11f3afa6d3067e0806853932ced57e7c384107f4", "message": "Making the constant for average job time final"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/12cec8d015f5dd31df61e1d8afcda7c735f5ffeb", "message": "Correcting a minor spelling in a logging statement"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/29894c28cf68882fce1f077d13eebce5a0c297a9", "message": "Updating to set the job submit time approximately in case it's 0L"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/9a47fe3f6979c05fc72fb409cb57cae5e44cf4d3", "message": "Issue #67 updating to check for hadoop2 submit time"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/c32c6d83f8a9876f6481db9c5553286023f0268c", "message": "Merge pull request #69 from vrushalic/update_serialization_hdfs\n\nIssue #68: hRaven-core Code Cleanup: remove config filter references in ..."}, {"url": "https://api.github.com/repos/twitter/hraven/commits/c264473ab9595639553eea5b3c4625aeb56e2393", "message": "Removing some comments and updating constants"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/0b1232cd5dfe76ebfbeb6a24498073329d34b1fc", "message": "Issue #59: Updating to simply ignore the huge history & conf file"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/b70ebdff2721a83fc42212b1c0ba579e9a105975", "message": "Merge remote-tracking branch 'upstream/master' into rawLoader_fileSize"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/19611506c8b51e3f11cda48cd2f2b0c2a239c497", "message": "Issue #68: hRaven-core Code Cleanup: remove config filter references in HdfsStatsSerializer in ObjectMapperProvider"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/e91db294120de9e4954246ef63e3346789a80dfb", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/2a91be5fcd6da3fd49e5799553d1c4509ea6024c", "message": "[maven-release-plugin] prepare release hraven-0.9.10"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/0fbe637b553b1e65f3c2b064d81384701de709d0", "message": "Merge pull request #64 from vrushalic/namespace_parsing_hdfs_api\n\nIssue #63 Ensure REST api can process 2.0 related hdfs stats"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/0174797dec53ed2eb958a2008de9b72c66dc856f", "message": "Merge pull request #66 from vrushalic/restapi_timeout\n\nIssue #65  Ensure the scan for flowseries endpoint with version is time ..."}, {"url": "https://api.github.com/repos/twitter/hraven/commits/64f1168c3cb876262746315e95b7c0b2dbe258cf", "message": "Issue #65  Ensure the scan for flowseries endpoint with version is time bound"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/1224464fc53de8bb547a2f0da271d3bc1293ac05", "message": "Issue #63 (small change)  Correcting column name"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/4efd19a1d8a626b6ae38db1e35fb7a75bf30a6cd", "message": "Issue #63 Ensure REST api can process 2.0 related hdfs stats"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/a4343144b815d7d28f6be729bde3eaea24aa2a98", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/d7a8b34364236c81379d6151e22a1e9736d4f2b6", "message": "[maven-release-plugin] prepare release hraven-0.9.9"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/93d3ac2838d46be4b77517809338413c3e3bb4bb", "message": "Issue #59 Updating comments to explain code better"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/16e0d5e06b2dda9b0334596aa338579b1e798769", "message": "Issue #59 Simplifying the code in the context of file removals"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/3455fcd04a72b1dee53e635883c32f4b8a3ac1fa", "message": "Issue #59 renaming variable names etc"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/bb7376d425622bf3e77c308c37e86dba467f5f13", "message": "Issue #59 Adding in list iterator changes for looking through the pruned file list and more unit tests"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/558a35afa5c83f5972ff24f8fdc29c90877fe12e", "message": "Issue #59 Adding more test cases for removing from Prune list"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/32a920720b58b5b4421b1994d8717baf4880493b", "message": "Issue #59 Adding more test cases for jobconf and jobhistory pair files spread out far from each other"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/28df4a73a1106749fd7fece5623c9ae1acf3f825", "message": "Issue #59 Updating as per review, adding param description in javadoc, modifying to use long instead of Long, removing /** style comments inside functions etc"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/1a4b5032b2de0f9757bcab8dfb268ac3c7480d1e", "message": "Issue #59 Consider not attempting to load huge history files into raw table"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/49fd24a0d702ac8d6e7b3cf594a0bdb0824b162e", "message": "Merge pull request #61 from vrushalic/config_jobname_hadoop2\n\nIssue #60 JobDescFactoryBase should check for mapreduce.job.name as well"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/5856f9678fede8c186554ee6793860773eb3be8a", "message": "Issue #60 JobDescFactoryBase should check for mapreduce.job.name as well"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/27391c5329e6f44ac8788cabc4c9181bf9ba84f9", "message": "Issue #56, #58 Updating as per discussion with Joep, ensuring max retries is bounded by array size, adding compareTo, equals, hashCode for HdfsStatsKey, simplifying/reducing json response for HdfsStatsKey, ensuring the path is always cleansed while looking for it in the row key"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/ce7ed1722e52692db4648ad43aeea9049a54ca00", "message": "Issue #56 modifying the compareTo for QualifiedPathKey"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/79646863bfbcfdc586f8fcc3ad8f98ff6aa37cb6", "message": "Issue #56 Adding more unit tests for QualifiedPathKey"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/99cecfab40f1e77ab0ec3eab93544da5cdd9f8cf", "message": "Issue #56 Review changes for rest api for hdfs stats"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/8a54f33168154990a8495e03160a92c78143d849", "message": "Issue #56 Review changes for  REST api for geting hdfs stats of a cluster"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/a11eb06c5c50b8844eafa93d04f566151c8b2186", "message": "Issue #56 Ensuring the older timestamps are checked for only when no stats are found"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/a5c81fe1cc4c63aa26137e4c8ff70eec93e769ac", "message": "Issue #58: Enabling a timeseries REST api for hdfs stats for a given attribute of a path on a hadoop cluster"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/775ae14b330ddc31e830f28529b9de56907fcc93", "message": "Issue #56 Adding a rest api for returning hdfs stats for a cluster"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/bce41b631d70c82fb38ce6ffbcb5fce3b92bd775", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/54d13151c8dd60e5dd23df8205d71d33eb294e63", "message": "[maven-release-plugin] prepare release hraven-0.9.8"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/e8519b734cd89b48a122d678067912fa32020744", "message": "Update README.md\n\nUpdating known issues to remove stuff that is already fixed"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/90b6a6feedafd079c4723eacbf7c544cc91d9c42", "message": "Initial commit for hdfs stats rest api"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/79ee7ab5126a6ce1c7e24174c07c1fc64022528e", "message": "Issue #51 Updating exception messages and adding formatting changes"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/ff95e60aaca7cecba15e2b78854ccf3a2e991020", "message": "Issue #51 updating some slight formatting"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/5efc99fca9ed58140cc672fd81e8445ee95cae06", "message": "Issue #51 Restructuring the constructor for history files to include the jobConf"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/f8f4da51fee1a738cf13789f84ac1a3aafda3bda", "message": "Issue #51 Updating the code structuring"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/77d843c4dae0d69043b9afec60c95290d253484b", "message": "Issue #50 Add a new job history key called \"diagnostics\" in hadoop2"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/ed21e64ee27f561f23c58f91c415065a969f7650", "message": "Issue #51 Correct the Slot millis seen in hadoop2 counters"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/b6c83e3907ddab9d79cde761374b896cea575261", "message": "Issue #49, #47 updating the getDuration to be deprecated and ensuring wallClockTime is returned"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/a959123155c71cfb948cc52c2233c22d2043a806", "message": "Issue #47, #49 elapsed time for flow and fixing getDuration bug"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/703d739bd5bb9901af334498954400659d0d5553", "message": "Issue #47: Return (wall clock time) elapsedTime for flows"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/a9f34e027e6f6447809210815944446bf512b72d", "message": "Updating with more logging changes"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/277b0ef26d928d924abc997c785b5572e8951c3a", "message": "Adding in result size fetched from hbase and timers for hbase scan and JobDetails and Flow population"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/dcf3dec05e7eede14da4248bd92d211fdfdc3004", "message": "Issue #44 Add more logging for REST endpoints"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/f8b52b88ebe5e272070881a1c44748b90d939226", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/bfbaedf4f65790d15ccf0b8dc450ceb2c26e4166", "message": "[maven-release-plugin] prepare release hraven-0.9.7"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/31a6651ba8f42c58a0f494e0252abf2398185551", "message": "Issue #42 Including failed jobs and initializing to 0 explicitly"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/21a77198c58c56364b750eda006d896c9ca582a5", "message": "Issue #42 Allow mapSlotMillis and reduceSlotMillis to be not found in megabytemillis calculations"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/7f1c340f357c774b47a09f6b8ce32ddab527aac0", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/88e6d1bb588120b82cd15f321afbac796d62cb0f", "message": "[maven-release-plugin] prepare release hraven-0.9.6"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/825278c3b8bf9bbe94348bea72cc4017c831721b", "message": "Issue #40 Enabling flow and flowStats to show megabytemillis and hadoop version"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/3fe24151f7f2ab9e62eb73082a8730f783946199", "message": "Issue #30 Adding in another small unit test and updating formatting new lines"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/8304b1d86f82dd5f85dc75ebcc57aea99188b09f", "message": "Issue #30 removing the jobkey used during logging and updating parser documentation"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/a8f15e925c043b0ee8de3294ef2aba728565f685", "message": "Issue #30 Updating javadocs, added checks for values not found in parsing and other review changes"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/2e49fd41bc7aff4fe5315b14916103e1ab36374a", "message": "removing unused constant"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/4b2bbca2b9aeab478258db33137e49d2e983889c", "message": "Issue #30 updating to calculate mega byte millis instead of generating the put from the parser and other review changes"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/719c647d2979e281b27e2814886c87dc5760e473", "message": "Issue #30 Ensure megabyte millis is stored in hbase at post processing step"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/89547b5e55281881988a450626e6297a2c81eb76", "message": "Updating to use HadoopVersion class instead of a nested enum  inside Constants"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/b9d9c82d4def27ffa6d92d07522ef12a9eef750b", "message": "Adding in a HadoopVersion class instead of having the enum inside Constants"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/eacc61e0017806804cd0e2adbbc088f960713689", "message": "Updating the hadoop version to enum, javadocs and adding more unit tests"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/f31235269fd4fd9901b680ee61e1f63c8eea3203", "message": "Issue #34 Deal with changed counter sub group names in hadoop2"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/d2403bb57a2a45d28eef594e08e275d8787bfb17", "message": "Issue #26, 27 Ensuring the queue/pool name is set correctly, getting the user name from the appropriate conf param independent of hadoop1, hadoop2"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/0e9be28bfe37254c2a58c061124500cf1d6608b0", "message": "Issue #27 Removing the static modifier for the getHadoopVersionPut function"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/cff9722c55bbab9598af47d2ca43827afcde8015", "message": "Issue #27 Moving the common function out of Factory into an abstract base class and adding a unit test for hadoop1"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/6c57df8da4fedc639821ce726adc92900b1a7d25", "message": "Issue #27 updating the formatting"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/6c89c501fc75c6ce9610a4d83abc0e8ce21ae604", "message": "Issue #27 Setting the hadoop version for hadoop1 as well as hadoop2 records in job history"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/7eafe533cf23e1c1c8feae5813d903d79f29b298", "message": "Issue #27 Set a hadoop version in the hbase record for hadoop2 jobs"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/adcb85ff38dd442ae81709b47ee82613afa72733", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/cc2147087ec18db9d950b90e1237aad2dfc0e944", "message": "[maven-release-plugin] prepare release hraven-0.9.5"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/6eae8c05a0d96b08e28a545ac055b5319833b05e", "message": "updating to 0.9.5-SNAPSHOT to enable mvn release:prepare"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/b788e451fa8e03f08371dad6b75c85759fc50cc0", "message": "prepare release hraven-0.9.5"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/0c067abc1a4d27ace34ca31f443ac4fe328be55c", "message": "Issue #24 Formatting the exception message"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/c8f45216846942ae3770ecc79263ed622b06abd3", "message": "Issue #24 adding setter to fix REST client throwing error when run against older jackson libraries in client's classpath"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/51c3704622e16b3ead14029a444e9b5eea2bfda7", "message": "Update README.md\n\nupdating readme to reflect support for hadoop2.0"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/81992af4aeac6b274aa85987e23025a89b56b9de", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/7785f22d7df48e0b9af74b3d5f937a3332344cb4", "message": "[maven-release-plugin] prepare release hraven-0.9.4"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/1c66f788ae2e5cb636910b7a3ea9a8520854d4f4", "message": "Provide a default for release plugin arguments"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/fc5a1dcc4d3664820aaca52a928fa2a5931bdbeb", "message": "[Issue 35] fixing the task keys so that they are the same as 1.0 and other review changes"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/d1b84a0a69d3ff89aadffedcc9397b3cf9f9877e", "message": "fixing  comments in unit tests"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/8dbe3d8095501be0a880b7a67e94ccb4ac318e3e", "message": "[Issue #5] updating as per review suggestions"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/2d7af69a0d876948cd5081fb1d75f080b81a0bb2", "message": "[Issue #5] Updating to work as a hadoop 1.0 compiled jar on a hadoop 2.0 cluster to process 2.0 job history files"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/0cd6334bd3cf3c58126f9596c87f8af6edc37be7", "message": "[Issue #5] modifying as per review suggestions for null checks and year in copy right, also adding in some more keys I saw in 2.0.5 history files"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/7327ff7ea6ef90a25337942f2147238a4e8a8d37", "message": "[Issue #5] adding some more comments and correcting formatting"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/f00b9260f7f85cd277bb6088b91df913161898aa", "message": "resetting the formatting changes"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/4192cc4c17181e7bd1260bebb308fd818dfc9c5e", "message": "[Issue #5] Creating enum class for Hadoop 2.0 record types and other review changes"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/37261f0277d9138152c3a5c1cec9465b670a203e", "message": "[Issue #5] updating regex for job history file names in 2.0"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/2e379f5e678b8b5c9b327b30ed62532739c1b194", "message": "[Issue #5] Adding a mapping for hadoop 2.0 keys to hadoop 1.0 to be compatible, also formatting changes"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/fbc2660046a9e1f654fe79acafa20f0c3b12e845", "message": "[Issue #15] updating some more formatting and javadoc comments"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/e698ad6d93e3546fb75546102a79c29f51d18939", "message": "[Issue #15] fixing as per review suggestions"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/ccb7728353c6d7470ce6abc290302341e3a7f4b2", "message": "[Issue #15] Enabling parsing of 2.0 job history files without referring to 2.0 packages/jars"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/7e521af3386bd6d091e9ba4dbacf855d00692553", "message": "[Issue #5] make hRaven hadoop 2.0 compatible"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/5c7bcd89c3a5fb5ff6c13fa2a9e32a210c09f516", "message": "Update README.md\n\nupdated versions supported"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/f0117eea22a8fe5ef38ec9e5b50a8597eed51ba7", "message": "Updating exceptions, documentation, formatting"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/293cd3c259fe69b65c79875a83f4c42c8f182ce3", "message": "updating logging of exceptions, if checks and if coding style"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/af2b56cc7e8e4079a4657f118631bb6b7656981d", "message": "updating the documentation to contain {@inheritDoc}"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hraven/issues/comments/93058410", "body": "Hmm, yes, I restarted it, hopefully it gets triggered now. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/93058410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/159105455", "body": "Thank @sjlee for the review! I have updated the PR with your suggestions. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/159105455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/160778838", "body": "Thanks Sangjin for catching these, I have updated the PR. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/160778838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/160799640", "body": "Discarding this Pull request that merges changes between master and twitter only, will generate a new one with either a patch or via cherry picking\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/160799640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/253632486", "body": "trial PR\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/253632486/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/253925223", "body": "Thanks @gsteelman \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/253925223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/254278465", "body": "LGTM, Will merge the request. I will update a few indentation changes later. Thanks @gsteelman for the PR!\nMerging #155.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/254278465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/254293248", "body": "Closing, merged\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/254293248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/256491273", "body": "Thanks Joep! This improves the hbase connections being created when the rest api calls are called.  There now should be one static connection for the entire class in the JVM (modulo weirdness with classloaders).  Each thread creates its own service instance each time, but that should be light weight, using the one single multi-threaded / shared connection. It does not tackle the closing of connections upon jvm termination (which is an existing thing anyways).\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/256491273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/293080887", "body": "Thanks @piyushnarang and @dieu ", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/293080887/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/293096519", "body": "Thanks @piyushnarang ", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/293096519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/293419199", "body": "Workaround is to add -Xdoclint:none as the options to javadoc in pom.\r\n\r\n         <plugin>\r\n            <artifactId>maven-javadoc-plugin</artifactId>\r\n            <version>2.10.4</version>\r\n            <configuration>\r\n               <additionalparam>-Xdoclint:none</additionalparam>\r\n           </configuration>\r\n         </plugin>", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/293419199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/313544992", "body": "LGTM, thanks for the pull request. I will merge it after the travis ci build completes", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/313544992/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/315167736", "body": "Thanks! ", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/315167736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "dieu": {"issues": [{"url": "https://api.github.com/repos/twitter/hraven/issues/157", "title": "Nice to have hadoop-version-independent API getCounterValue", "body": "Base on the discussion in https://github.com/twitter/scalding/pull/1645.", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "benpence": {"issues": [{"url": "https://api.github.com/repos/twitter/hraven/issues/139", "title": "HRavenRestClient should encode URL path parameters", "body": "The [HRaven rest client ](https://github.com/twitter/hraven/blob/master/hraven-core/src/main/java/com/twitter/hraven/rest/client/HRavenRestClient.java#L102) should encode parameters used in the URL. Characters such as '/' can lead to problems accessing the endpoint.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rubanm": {"issues": [{"url": "https://api.github.com/repos/twitter/hraven/issues/138", "title": "A separate hraven-client module", "body": "It would be nice to have just the rest client as a separate `hraven-client` module so that clients can pull in just the required dependencies. Perhaps, everything under `hraven-core/src/main/java/com/twitter/hraven/rest` can go there.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sjlee": {"issues": [{"url": "https://api.github.com/repos/twitter/hraven/issues/134", "title": "merge #132 to master", "body": "", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}], "commits": [{"url": "https://api.github.com/repos/twitter/hraven/commits/ec681f8be2fe415d827d35a41009bd300ee47f94", "message": "Merge pull request #141 from vrushalivc/filters_rest_api\n\nAdding in filtering options for the task, job and flow endpoints Issu\u2026"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hraven/issues/comments/20761879", "body": "LGTM.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/20761879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/20761994", "body": "This can be closed as we merged #8.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/20761994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/21128664", "body": "Fixed by pull request #12.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/21128664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/21232467", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/21232467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/28260795", "body": "LGTM.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/28260795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/35684775", "body": "LGTM.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/35684775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/35910314", "body": "Although the new name for that config in hadoop 2 is \"mapreduce.job.name\", using the old name should not break things as the value under the old key is recognized for the new key. Do you see it break things?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/35910314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/35965460", "body": "LGTM.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/35965460/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/36940968", "body": "LGTM.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/36940968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/40435225", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/40435225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/41223895", "body": "LGTM.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/41223895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/42712693", "body": "I went over it quickly, and LGTM. It might be good to have Joep look at it as well.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/42712693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/58731480", "body": "LGTM.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/58731480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/64024334", "body": "LGTM. Thanks for your patience @vrushalic! We can merge this after @jrottinghuis gives his +1.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/64024334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/64025616", "body": "LGTM. Thanks for your patience @vrushalic! It seems like the travis build is stuck for some reason. It might be good to get a green build. We can merge this once @jrottinghuis gives his +1.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/64025616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/66855889", "body": "LGTM.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/66855889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/69798439", "body": "LGTM based on the fact that the only change beyond the merge is to add the getJobDetails implementation for JobHistoryFileParserSpark.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/69798439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71731215", "body": "This should also be merged to master, right?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71731215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71759000", "body": "We can clone the PR to merge the identical patch to master. Let me know if you want me to do it. I can help.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71759000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71877125", "body": "Hmm. The issue turns out to be bit bigger than I initially thought. It appears that there is some divergence between master and twitter_only branches. There are some changes/commits that were done on master that are not present on twitter_only.\n\nWe need a one-time PR to re-apply any missing changes from master to twitter_only. Also going forward, we need to make sure to apply any commits that are done over to twitter_only, or the branches will start drifting apart.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71877125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71882056", "body": "Sorry I should have checked. :)\n\n:+1: \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71882056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71882659", "body": "Thanks for the reminder. My apologies for not realizing it.\n\nGoing forward, it would be good to establish the best practice. IMO, for any generic issues, master should be the first place to commit. Then for each issue, we would promptly merge it over to twitter_only. That way, the merge stays sane, and the branches stay reasonably in sync. Thoughts?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71882659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71884006", "body": "I'll look at this today.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71884006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71933581", "body": "I merged it manually as the merge was non-trivial. @vrushalic, could you please look at the commit (https://github.com/twitter/hraven/commit/8ad2e4ea59c87c017943e6e43e49bfec81427f6a) to see if things are fine? Let's also check the travis CI.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71933581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71941945", "body": "The build is green: https://travis-ci.org/twitter/hraven/builds/48691908\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71941945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/93056959", "body": "Looks like the travis build is hung?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/93056959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/93107774", "body": "LGTM. Merging.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/93107774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/160794864", "body": "LGTM. Merging.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/160794864/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/161458495", "body": "LGTM (the same change as PR #140 applied to the twitter_only branch).\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/161458495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5102951", "body": "Bit pedantic, but it may be good to make this final. Also, is it intentional that you're passing in JobFilePreprocessor rather than this class (JobFile)?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5102951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5105235", "body": "Sorry for a late comment, but it would be good to have a consistent naming style. I believe the standard for naming variables is the camel case (\"confMatcher\") rather than hyphens (\"conf_matcher\").\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5105235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5261325", "body": "It is the number of available bytes to read in the buffer. It's a variable in ByteArrayInputStream which ByteArrayWrapper extends (see http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/java/io/ByteArrayInputStream.java#106). In this case, it is the same as the byte array size.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5261325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5283965", "body": "It would be good to re-word this javadoc, as it's no longer an abstract class and thus there are no \"subclasses\".\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5283965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5283977", "body": "Since this is now an interface, there is no need to say \"abstract\". The same for the other methods.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5283977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5284097", "body": "Since this class doesn't extend any, the super() call is superfluous. In fact, the (default) constructor itself is superfluous...\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5284097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5284114", "body": "I don't quite understand how jobHistoryListener is supposed to be used. It looks like it is initialized every time parse() is called? First, is this class never used in a multi-threaded environment? Is it intended that every time parse() is called, the jobHistoryListener instance keeps getting recreated?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5284114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5284140", "body": "Indeed this is not javadoc as it doesn't start with two *'s. :) We should fix that and remove (non-javadoc)?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5284140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5284142", "body": "Ditto\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5284142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5284160", "body": "I think \n\nLOG.error(\"your log message\", ioe);\n\nwould do what these 2 lines are doing.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5284160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5284161", "body": "Ditto\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5284161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5284981", "body": "OK thanks for the explanation.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5284981/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5285001", "body": "Sorry to comment more on this, but I would recommend\n\n``` java\nLOG.error(\" Exception during parsing hadoop 1.0 file\", ioe);\n```\n\ninstead.\n\nIt would log the exception message and the full stack trace. I think that's closer to what you wanted.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5285001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5285013", "body": "Looks like the if style is inconsistent with others?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5285013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5285018", "body": "Same here.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5285018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5488168", "body": "It might make sense to refactor this into a small private static method, as this logic is used in other places (like line 100).\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5488168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5488205", "body": "More curious than anything else, but is there a reason to use short instead of int?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5488205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5488374", "body": "I don't think NumberFormatException is thrown here, no?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5488374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5488405", "body": "The same here?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5488405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5488459", "body": "A small comment but since JobHistoryKeys is an enum, shouldn't we be able to use the switch statement instead of if's?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5488459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5488674", "body": "These two classes exist only on hadoop 2.0. So it likely means that this class won't compile or run on hadoop 1.0. Is that expected?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5488674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5593788", "body": "This warning is actually telling us something. JobId is being set but is never read, which means it is really not being used. Should we remove this field? The actual information is captured in jobNumber.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5593788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5593863", "body": "Are these (lines between 81 - 104) constants? If so, shouldn't they be static?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5593863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5593903", "body": "Are counterNames and eventRecordNames supposed to be public?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5593903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5593951", "body": "A small nit, but I believe the preferred style is\n} else {\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5593951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7483078", "body": "If having subclasses inherit a common implementation is the goal, using an instance method is preferred (i.e. non-static). Using static methods for inheritance purposes is bit of an anti-pattern.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7483078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7542625", "body": "It seems like the same logic is repeated here and JobDescFactoryBase.create(). Also, we would want the same consistent username handling anywhere we need to retrieve the username, right? Would it make sense to isolate it into a utility method somewhere so the code can be reused?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7542625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7543401", "body": "Sorry to be picky, but we need the license here. :)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7543401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7543409", "body": "Meant to say \"contains\" (not \"constains\")?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7543409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9835074", "body": "I see some of these constants are not marked as final. I think it was not intentional? Please mark all of them final so they cannot change.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9835074/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9835503", "body": "If it is truly unused, I think it's okay to remove it (and introduce it later when it is needed).\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9835503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9835643", "body": "I don't think it's possible? Did you mean to check for an empty string?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9835643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9835815", "body": "Please override hashCode() as well since you overrode equals(), especially if it is going to be used as keys for a hash-based data structures.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9835815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9835903", "body": "Unnecessary \"}\"?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9835903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9836091", "body": "Nit: as a general practice, it's good to not use wildcard imports... They introduce all the classes in that package into the namespace even if you don't use them, and can create collisions that induce errors.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9836091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9836775", "body": "Time unit?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9836775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9836792", "body": "Time unit?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9836792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9837099", "body": "if (noRunId)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9837099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9889508", "body": "This seems like a pretty weak version of hashCode(). How about using things like HashCodeBuilder to generate the hash code?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9889508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10236977", "body": "Can be final...\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10236977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10237014", "body": "I suspect these are being added automatically by IDE, but they do not really describe the arguments, returned values, etc. It would be good to either add useful descriptions or remove them. There are more of these in other methods below.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10237014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10237063", "body": "A simple primitive \"long\" type is fine. Although Long (object) would work as well, I don't think the object form is needed or helpful here.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10237063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10237107", "body": "This is really a nit, but \"/*_\" is reserved for javadoc comments. If you want to make a simple multi-line comment, you can open it with \"/_\" (single asterisk). More below.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10237107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10237221", "body": "I don't quite understand this part. The main thing is that we're reading the same index from prunedFileList as well as origList. If I'm reading this right, the indices on prunedFileList has no relation with the indices on origList. You'd skip files from origList, so origList and pruneFileList would go out of sync in terms of their indices.\n\nHow would things like prunedFileList.get(i-1) be compared to fileName derived from origList[i]? I'm having trouble understanding that part. Likewise, how would prunedFileList.remove(i-1) line up correctly?\n\nIf you have more than one pair of files that are skipped in the middle, I suspect this would break pretty easily. Am I reading this right?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10237221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10237242", "body": "Could be simply (!dirCreated)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10237242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10237302", "body": "The same can be easily achieved using the SimpleDateFormat. You could easily do\n\nDateFormat df = new SimpleDateFormat(\"YYYY/MM/dd\");\nString formatted = df.format(new Date());\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10237302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10237323", "body": "Could simply be \"long\" (primitive).\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10237323/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10307479", "body": "nit: if (moved != true) => if (!moved)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10307479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10307569", "body": "Took me a while to figure out that this is the file name of the conf. It might be good to rename this from \"fileName\" so it is clear what this is...\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10307569/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10307758", "body": "Hmm, this won't work if anything is removed from prunedFileList.\n\nThe moment we call prunedFileList.remove(i), the index above i would shift down by one. So, this would surely throw an ArrayIndexOutOfBoundsException.\n\nA safer approach to iterate when you're removing things is to use a ListIterator.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10307758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10355028", "body": "Now it no longer moves multiple files. It moves one file and one file only, right? Should it be named to relocateFile?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10355028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10355125", "body": "The reason we can remove the job id once we looked at one file is because we expect no more than one file in this list for a given job id, right? I understand that because we discusses this, but it might be good to add comment here so it is clear.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10355125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/11272476", "body": "Final? (AVERAGE_JOB_DURATION too?)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/11272476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/11818082", "body": "This input stream is not closed. We should follow a standard try-finally pattern for closing the input stream. With java 7, you could also do the try-with-resources pattern, but I don't think hraven requires java 7, so that's out of the question.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/11818082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/11819100", "body": "I think the multiple tests here are largely redundant as they all exercise the same formula and there is no difference in the way it works between these tests. Just live with one?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/11819100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12493246", "body": "Nit: there is no need to use the modifier \"abstract\" for interface methods.\n\nAlso, regarding the return type of this specific method (getAttribute), is it given that we only need a long as a return value? Is there any possibility we may want a different type? If so, you might want to make the return type \"Object\"?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12493246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12493309", "body": "Final?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12493309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12493968", "body": "I'm not sure if I understand this. Isn't resources in the unit of MB, whereas maps and reduces are just counts? Why would we compare them and pick one out in this manner? What would it mean?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12493968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12494738", "body": "Hmm. I hadn't noticed it before, but it's peculiar that a byte array (byte[]) is used as a key for a map. Usually arrays are a poor choice as map keys as arrays only provide strict/shallow equality (meaning the reference has to be identical to have a match). In other words, if you have two different arrays with the same content, they will be different keys although the contents match.\n\nSo the only way byte arrays can work as map keys is if you're dealing with well-known fixed (or constant) byte arrays as keys. Is that the case here?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12494738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12494819", "body": "Thanks for the explanation.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12494819/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12495669", "body": "Accepted that this is an existing HBase interface and that hraven never does a lookup on the returned maps.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12495669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/18475546", "body": "Any reason you used \"hraven_...\" as the names of these new tables? Doesn't look like that is the naming convention followed by other tables?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/18475546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/20395173", "body": "Is returning the object type Boolean necessary? I think it is just fine to use the primitive type (boolean). Using the object would unnecessarily cause boxing and unboxing and sometimes cause subtle bugs.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/20395173/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/20395183", "body": "I would suggest using simply \"false\".\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/20395183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/20395210", "body": "In this case, is the intent returning 0? Or do we want to throw an exception?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/20395210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}]}, "vrushalic": {"issues": [{"url": "https://api.github.com/repos/twitter/hraven/issues/129", "title": "Calculate job cost based on hadoop2 counters of megabyte millis", "body": " As per https://issues.apache.org/jira/browse/MAPREDUCE-5464\nneed to update hRaven cost calculations to use the hadoop2 counter of megabytemillis instead of calculating megabytemillis on our own\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/120", "title": "In Preprocessor, check timestamp of directory before listing all files in that dir", "body": "An optimization that can be done in the Preprocessor: check timestamp of directory before listing all files in that directory. This will avoid putting unnecessary load on the NN \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/97", "title": "Aggregate app per day and per week during hRaven Proccessing of each job", "body": "Create per day and per week aggregations in hRaven\n\nCan do the aggregation at the Processing step itself\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/97/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/90", "title": "Add task level REST apis to hRaven", "body": "Currently hRaven supports job, flow and app summary level rest apis.\nWill be good to add task level rest apis to hRaven\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/90/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/55", "title": "Extend hRaven to include hdfs usage", "body": "Presently hRaven includes job level statistics. It collects run time data and statistics from map reduce jobs running on Hadoop clusters and stores the collected job history in an easily queryable format.\n\nIt will be good to extend hRaven capabilities and add in hdfs usage statistics. This involves two broad aspects - collection and query apis (rest endpoints). \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/55/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/39", "title": "refactor enums in JobHistoryFileParserHadoop2 into separate classes", "body": "there are some enums in the JobHistoryFileParserHadoop2 class. will be good to refactor them out into individual classes\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/39/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/35", "title": "Shorten counter sub group names - long term fix", "body": "As noted in #34 , we need a long term fix for dealing with counter subgroup names. Presently hRaven stores the subgroup name for each counter in the column name. The idea here is to come up with a naming scheme for counter sub group names since there seem to be a lot of repetition of org.apache.hadoop.mapred.XX.YY for every counter. So we could map org.apache.hadoop.mapred. to something like o.a.h.m. But that is a bigger fix since we first need an audit of all existing counter sub group names, come up with map and then we need to change every place where counters are being written, queried for and returned and then rewrite the existing data in hbase as well.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/35/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/26", "title": "Investigate if some steps in the json parsing can be optimized", "body": "Specifically if the toString can be optimized away at\n\nhttps://github.com/twitter/hraven/blob/master/hraven-etl/src/main/java/com/twitter/hraven/etl/JobHistoryFileParserHadoop2.java#L228\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/26/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/23", "title": "Ensure hadoop 1.0 job history files can be processed on 2.0 cluster", "body": "The work that has gone into refactoring the code and enhancing hraven has been towards ensuring hraven can run on any hadoop version and process any version of job history files. \n\nThe earlier related pull request (https://github.com/twitter/hraven/pull/18) ensured that we can process 2.0 job history files on hadoop 1 as well as hadoop 2 clusters \n\nWe still need to ascertain that 1.0 job history files can be successfully processed on a hadoop 2.0 cluster.  Opening jira to track those changes, if any. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/23/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hraven/issues/comments/20848989", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/20848989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/21200468", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/21200468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/21225689", "body": "Updated the files with the review recommendations\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/21225689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/21363590", "body": "Updated as per review comments for exceptions, documentation and formatting\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/21363590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/21759866", "body": "One known limitation in JobHistoryParser is being tracked in https://issues.apache.org/jira/browse/MAPREDUCE-5432\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/21759866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/21820219", "body": "Adding a note after discussing with Sangjin: This pull request is for reviewing purposes only. Will NOT be merging this till the pom dependencies are cleared up.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/21820219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/21831148", "body": "Closing this pull request after discussion with Gary. Will generate a new pull request shortly. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/21831148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/22149161", "body": "I have not yet added a mapping between old keys and new keys between 1 .0 and 2.0. For instance,  in 1.0 there was a \"TOTAL_MAPS\" and in 2.0, it now is \"totalMaps\".  Will add it if needed after discussion.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/22149161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/23280070", "body": "Thanks Gary! I will fix these and update the request today.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/23280070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/23378561", "body": "pull request merged to master \n\nhttps://github.com/twitter/hraven/pull/18\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/23378561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/23435146", "body": "Discussed with Gary about this, looks good to me!\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/23435146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/23540097", "body": "Looks good to me.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/23540097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/26528814", "body": "This exception is probably ignored in later versions of jackson libraries, hence was not encountered with 1.9.6 jackson libraries but is seen in 1.5.2.\n\nThis exception is thrown because the JobDetails class does not have a setter for the list of TaskDetails objects that it contains. The JSON deserializer expects a setter and does not find it, hence the exception.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/26528814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/26777129", "body": "Fixed and merged as part of pull #25 \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/26777129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/27843577", "body": "Noting some of the discussion Joep and I had on whether to add the hadoop version to the raw table and the tasks table. \n\nFor the raw table, there is a i:jobconf_filename and in hadoop2, all history filenames have a .jhist extension. Also, at the raw file loading time, we don't quite know the hadoop version, we could find out, but it's not available outright. It could be determined by peeking into the first few bytes of the file.\n\nRight now, job history seems to be the only place to insert this hraven-created version. We  presently don't see a strong use case for having tasks reflect the hadoop version. If we were to insert per task attempt, that would be several more puts (like 70k additional puts as we noticed in one particular case that had 70k tasks). So we were wondering if that is really needed? We could make an additional get call to the job history table for that task's job and determine the hadoop version. An hbase get should be reasonably fast.\n\nIf we see the need for raw tables and task tables to have the hadoop version, we can always add it later. \n\nI plan to update the pull request with setting the version in hadoop1 history file processing as well.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/27843577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/28103566", "body": "Due to discrepancies in hadoop1 and hadoop2 configuration keys, we need to ensure we store a consistent config param name in hRaven database. Since till now, hRaven did not look inside the config object to check the parameter keys, but we now need to add that. Hence this pull request for issues #28 and #29 \n\nAbout the pull request:\n\nFor username\n    if hadoop2 setting mapreduce.job.user.name is set, use that (in JobDescFactoryBase.java)\n    user.name from the configuration is to be used for both hadoop1 and hadoop2 going forward.\n    (I confirmed that we cannot set \"user.name\" in a pig script to be something other than the user who is submitting the job)\n\nFor queue/pool name\n    there different config parameters that define which queue/pool a job runs in\n    for hadoop2, it is set by property mapreduce.job.queuename\n    for fair scheduler in hadoop1, it's the poolname set by mapred.fairscheduler.pool\n    for capacity scheduler in hadoop1, it's set by mapred.job.queue.name\n    for fifo, there is nothing set because there is no queue, it's default queue\n\nHence for queues, we define an hRaven specific queue property called \"queue\". We check for the above and set the \"queue\" property in the configuration object accordingly.\n\nWe also take care of a present bug in hadoop2, where the queuename contains the string \"default\" as noted in Issue #29 \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/28103566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/28109781", "body": "Incorporated the review changes suggested by Maysam and Sangjin. Accordingly created some utility functions for getting user and queue names\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/28109781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/28259519", "body": "Updating the pull request to not include the user.name put for hadoop2. Since the username is part of the rowkey, it can always be deduced and an extra column is not a must-have. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/28259519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/28329932", "body": "I closed this and generated a new pull request with the complete set of changes to enable a cleaner commit history \nhttps://github.com/twitter/hraven/pull/33\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/28329932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/28346538", "body": "Closing since pull request #31 was merged onto master\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/28346538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/28346643", "body": "Closed as part of merging pull request #33 \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/28346643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/28346666", "body": "Closing as it's merged as part of pull request #33 \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/28346666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/29017379", "body": "Hi,\n\nWhat does the task log for this app say ? From the history server page, if you navigate into the Map Task attempts and click on logs, can you share what it printed in the syslog?\nAlso, how big might your history files be? \nthanks\nVrushali\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/29017379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/29018912", "body": "Thanks @ghelmling !\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/29018912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/29097171", "body": "thanks for the update @seregasheypak. We would be interested in hearing how things go with hRaven at your end. Keep us posted!\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/29097171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/29143381", "body": "Added more unit tests, updated javadocs and modified the hadoop version class member to enum \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/29143381/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/32428783", "body": "Want to add more logging. Will update the pull request\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/32428783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/32994614", "body": "Thanks for the pull request. Could you please also add some unit tests for this at TestJobDescFactory? \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/32994614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/33339170", "body": "> > This is almost exactly the same as the getDuration \n> > (which measures the difference between the finish time of the\n> > last job and the launch time of the first job).\n\nIt is quite similar in structure, but not the same. The duration looks at different time (the launch of the first job in the flow) and the elapsed time looks at a different start time (the submit time of the first job in the flow). These two are different.\n\n> > If we're going to have both, we should probably add javadoc to both \n> > to explain the difference.\n\nI do have javadoc comments on what the field means, I will update it to include more explicit information.\n\n> > Perhaps we should just make getDuration count submit time. I\n> > 'm not sure what the meaning is of the start time of the\n> > first job to the end time of the last job anyway. \n> > Since there is client-side wait time involved in between, we might just\n> > as well measure end-to-end.\n\nUnfortunately, I am not aware of the background of the intention of getDuration() function (this was before my time on hRaven). From what I understand, it tells the time that the job actually ran on the cluster. But this is not the time the user sees, since the submitTime and launchTime are different. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/33339170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/35428401", "body": "Thanks Sangjin! I will make the recommended changes\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/35428401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/35920273", "body": "Good point, let me check\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/35920273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/35954427", "body": "So, what I believe is happening is that, if the Processing step is processing a hadoop2 conf file but runs on a hbase on hadoop1 cluster, then it does not have the old key-new key recognition since it is a hadoop1 cluster. So, it does not look for the new key.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/35954427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/36798950", "body": "Discussed with Sangjin a bit more and I would like to make more structural changes to the code. Will update the pull request soon. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/36798950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/38632147", "body": "By adding a time boundary for app runs to the scan, the scan can terminate much sooner instead of going all the way back in time. Default for looking back is about 30 days. So the rest endpoint now looks for N flows that have occurred in this time range and not look back beyond that range for more runs of this app. This time range is configurable and can be controlled by startTime and endTime in the flow rest endpoint that accepts version. \n\nThe hbase row key contains the run Id which is a timestamp in milliseconds. The pull request now adds a start row prefix and stop row prefix that includes a timestamp based on now and now - default. That way the scan does not keep scanning all the way back in time for that app and will terminate after the stop row. As mentioned earlier, this is configurable with a proposed default lookback of 30 days.\n\nThe other flow end point ( without version ) is not being changed.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/38632147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/38709623", "body": "merged onto master\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/38709623/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/38709656", "body": "merged onto master\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/38709656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/40433647", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/40433647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/41339926", "body": "I will close this pull request without merging onto master. There seems to have been an issue with merging my forked branch with hraven master. I will create a new pull request with the jobcost changes\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/41339926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/41343536", "body": "Generated https://github.com/twitter/hraven/pull/77 \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/41343536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/41839937", "body": "Hi Joep,\nThanks for the review! I can chat with you more in person, but here are some thoughts.\n- I agree with enabling more schedulers (not restricting to fair scheduler only), so I will refactor the code a bit to ensure we can support different types of schedulers and their info.\n- The capacity details class is not necessarily tied to the new jobs api, it can be used from any other api as well.\n- wrt using fair scheduler apis, I am guessing you mean keeping a copy like we have for JobHistoryCopy? Or if we want to invoke the apis directly, that wont work for all hadoop versions at the same time since we can compile with only one hadoop version that gets deployed in the rest service but should be able to look at any cluster any version data\n- parsing xml is an implementation detail of the capacity class and I think once I refactor the code to make it more generic to support other schedulers, we can always swap that out to reuse code from elsewhere\n- wrt to the new fair scheduler version, we would need to modify/enhance the capacity details class in any case since we need to support both (rather all versions of fairscheduler in hadoop) \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/41839937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/42245752", "body": "I discussed with Sangjin about this and he has some good suggestions. I will make those changes and update the pull request. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/42245752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/42731534", "body": "I discussed this with Joep and I will make some more changes to the API and update the request. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/42731534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/42904437", "body": "Discussed a bit more with Joep and we plan to make some more changes that fit the hraven api better and will help us in the long run.. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/42904437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43352473", "body": "merged as part of https://github.com/twitter/hraven/pull/85\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43352473/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43352495", "body": "Closed as #83 \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43352495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43352525", "body": "Closed as #83 \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43352525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43352705", "body": "merged as part of #71 \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43352705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43355663", "body": "Hi Travis,\n\nYes, I can see that the jobFilePreprocessor.sh was not updated. Give me a few mins to update it now. \nI will add some more documentation to a sample cost file in the conf dir. The job cost will be stored as a column in hbase.\n\nThe cost properties file could even be empty file, since it simply won't calculate the cost then. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43355663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43362571", "body": "Updated the script and added a sample file. Please give this a try and let me know. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43362571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43362720", "body": "Agreed that this will be a good enhancement. The table names in hRaven/hBase should be configurable such that they can be changed at runtime without having to rebuild or redeploy hRaven\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43362720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43655699", "body": "Over all,  this pull request seems like a good idea\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43655699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43664321", "body": "Hi Yohan I was curious to know if you are building/running on hadoop1 or hadoop2? \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43664321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43804077", "body": "Looks good to me, will merge once the CI build passes\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43804077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/44473689", "body": "Hi, Just wanted to say, do update a comment on the pull request once you've checked in the changes. I dont think we get checkin notifications on pull requests and hence could cause some delay in reviewing. Thanks! \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/44473689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/44473965", "body": "Hi, \nDid this work for you?\n\nthanks\nVrushali\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/44473965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/44899693", "body": "Hi Aki,\nThanks! But I think you haven't checked in all modified files. It shows only one file in the pull request. \n\nthanks\nVrushali\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/44899693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/44987769", "body": "Hi Yohan,\nYes changes look good, except for one that could cause a NPE. Do let me know once you've updated it and I think I will merge it onto master.\nthanks! \nVrushali\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/44987769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/44989934", "body": "Looks good to me. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/44989934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/45142957", "body": "Merged onto master \nhttps://github.com/twitter/hraven/commit/0cf9a37c70687b5cb4152ac63d16a1ad5f4fcf72\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/45142957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/45157278", "body": "Changes look good Aki. I think since we expect this as a standardization, could we add a couple of unit tests in their test classes so that we don't break functionality in case someone modifies it inadvertently? \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/45157278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/45692738", "body": "Thanks Aki, merged #94 \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/45692738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/46382062", "body": "Merged as part of https://github.com/twitter/hraven/pull/96\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/46382062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47299633", "body": "Hi @shrijeet \nThanks for sending in a pull request, looking through it. Just wanted to understand if there is any issue that you were facing with current jackson, jersey versions in hRaven and hence the pull request to upgrade.\n\nthanks\nVrushali \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47299633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47461934", "body": "Hi @angadsingh  \nFor my understanding, does oozie/falcon not have a way to set libjars, is that why this is needed. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47461934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47462166", "body": "Overall, this pull request looks good to me (except for the minor improvement suggestion)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47462166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47462976", "body": "While I agree that this is a good idea to prefix tablenames, I am thinking about existing deployments of hRaven that already have tables without the prefix in production. I am wondering if we can provide the namespace name along with the dot as an argument to create_table and to the code so that the default can stay as blank at https://github.com/twitter/hraven/blob/master/hraven-core/src/main/java/com/twitter/hraven/Constants.java#L44 and still allow us the flexibility of passing it in to support the namespace classification for table names.. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47462976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47463090", "body": "The falcon config looks reasonable, only question that I have is, aren't these zookeeper quorum hostnames internal server names at your company? If yes, I am not sure you want to opensource them? \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47463090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47465183", "body": "Looks good to me.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47465183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47608958", "body": "It looks like the pull request is weirded out due to several changes on master and merging with my fork. My pull request now shows files that were not part of this pull request as being changed in this pull request. \nI will resolve these conflict issues and ensure only my changes show up as changes in this pull. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47608958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47611751", "body": "I think we may want the code to support both options and use only one at runtime. Does that sound feasible\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47611751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47620716", "body": "Resubmitted with manually merged conflicts as https://github.com/twitter/hraven/pull/113\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47620716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47620755", "body": "Previous pull request for the same: https://github.com/twitter/hraven/pull/99\nThat one was closed due to merge conflicts from my side, due to outdated master on fork\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47620755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47684882", "body": "This pull request also updates columns in the raw table that specify the status of aggregation for daily and weekly for that job. If the job has already been aggregated, aggregation will not be re-attempted unless the re-aggregate flag is turned on. This helps avoid inadvertent re-aggregation, since aggregation is not idempotent. \n\nAlso, it implements Check and Put methods for queue list, job cost and number of runs in the info column family with retries. The intention here is to ensure we update these columns carefully since multiple tasks/jobs may be updating these columns for the same app for that day or that week. More details in the code in comments\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47684882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47688816", "body": "Thanks Chris, this was something I had wanted to add for quite some time. Looks good to me.\n\nDo you think we should mention the link (https://coveralls.io/r/twitter/hraven) somewhere like README or the description.  I see it in that command in the README.md but I meant as a section that calls it out. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47688816/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/64027467", "body": "Yes, that build isn't even starting up. I tried cancelling it and restarted it. I will keep an eye on this. If nothing changes by today evening, I will make a simple checkin (like a comment update or something) to trigger another build on this branch. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/64027467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/64240332", "body": "The travis CI build has passed and is green\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/64240332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/66533505", "body": "There is an existing function getLastSuccessfulProcessRecord(String cluster), this pull request overloads it to enable passing in the processFileSubstring as well. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/66533505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/66553109", "body": "The idea behind this pull request is to optimize the processing time when attempts fail and are restarted. In such cases, a previous attempt has already run through the process record and failed at a later point in processing. The next attempt that is brought up will now reprocess all the records that the previous (failed) attempt has already processed. This results in a lot of time spent in this hRaven job and the next hRaven run cant start up. \nHence this pull request first checks if this attempt is NOT the first attempt. If so, it will do a get from hbase and check the status of job processing for that record.  \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/66553109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/68772959", "body": "need to discard, will generate separate ones with updates\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/68772959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71733324", "body": "Yes.\n\nOn Tue, Jan 27, 2015 at 1:26 PM, Sangjin Lee notifications@github.com\nwrote:\n\n> This should also be merged to master, right?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/twitter/hraven/pull/132#issuecomment-71731215.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71733324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71734113", "body": "Any help in making the master current will be highly appreciated!\n\nOn Tue, Jan 27, 2015 at 1:38 PM, Vrushali Channapattan <vrushali@twitter.com\n\n> wrote:\n> \n> Yes.\n> \n> On Tue, Jan 27, 2015 at 1:26 PM, Sangjin Lee notifications@github.com\n> wrote:\n> \n> > This should also be merged to master, right?\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/twitter/hraven/pull/132#issuecomment-71731215.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71734113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71787127", "body": "Yes, that would be great, please go ahead!\n\nThanks\nVrushali\n\nOn Jan 27, 2015, at 4:32 PM, Sangjin Lee notifications@github.com wrote:\n\nWe can clone the PR to merge the identical patch to master. Let me know if\nyou want me to do it. I can help.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/twitter/hraven/pull/132#issuecomment-71759000.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71787127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71879825", "body": "No,  I think we haven't missed those, they are being done in https://github.com/twitter/hraven/pull/131\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71879825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71880052", "body": "Yes, we didn't miss those; those were being done as part of\nhttps://github.com/twitter/hraven/pull/131\n\nOn Wed, Jan 28, 2015 at 9:28 AM, Sangjin Lee notifications@github.com\nwrote:\n\n> Hmm. The issue turns out to be bit bigger than I initially thought. It\n> appears that there is some divergence between master and twitter_only\n> branches. There are some changes/commits that were done on master that are\n> not present on twitter_only.\n> \n> We need a one-time PR to re-apply any missing changes from master to\n> twitter_only. Also going forward, we need to make sure to apply any commits\n> that are done over to twitter_only, or the branches will start drifting\n> apart.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/twitter/hraven/pull/132#issuecomment-71877125.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71880052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5103230", "body": "Good catch. I will change this.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5103230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5104651", "body": "checked in an update\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5104651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5121212", "body": "yes, done\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5121212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5260717", "body": "for my understanding - where does count come from?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5260717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5273726", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5273726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5281948", "body": "Sounds good. I debated on this and then thought it might be clearer to send back a false than have the exception inside. But will change this to throw the exception from the implementation side itself rather than returning\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5281948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5281972", "body": "changing the name and to an interface\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5281972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5282275", "body": "Yes, I actually wanted to use a entire file here and check the puts returned. But that turned out to be too much of task of generating a generic history file and I reverted back to some string.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5282275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5284028", "body": "Yes correct, removing them now\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5284028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5284246", "body": "Yes, this can be removed now. Earlier it was extending a base class.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5284246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5284283", "body": "This is how it is being used presently:\nhttps://github.com/twitter/hraven/blob/master/hraven-etl/src/main/java/com/twitter/hraven/mapreduce/JobFileTableMapper.java#L176\n\nThe intention of this check in is to retain the same behavior.\n\nThe parse method should be called once per job history file. There should be a job history listener per job history file. I don't think multiple threads would be parsing the same job history ever.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5284283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5284317", "body": "This \"points\" to the javadoc as specified the in the interface JobHistoryFileParser. Is that not recommended? \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5284317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5284422", "body": "I think {@inheritDoc} may be suitable\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5284422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5285094", "body": "okay, will fix this and the next if\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5285094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5285095", "body": "that's right, will rectify this now unnecessary check\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5285095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5285169", "body": "Yes, I wanted to print the stack trace and I tried this out but it didn't print the stack trace. Here is what I tried:\n\nThe x.printStackTrace() prints it, the earlier line prints only the error message. What am I missing?\n\n```\n@Test\npublic void checkfile() {\n    try {\n        FileReader fr = new FileReader(\"/tmp/doesnotexist\");\n    } catch (IOException x) {\n        System.out.println(\"IOException:\" + x);\n        x.printStackTrace();\n    }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5285169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5285220", "body": "Okay, just chatted with Sangjin and realized I need to call LOG.error(object, throwable) and not LOG.error(object).. fixing this now\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5285220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5489009", "body": "No, will change it to int. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5489009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5489017", "body": "yes, sounds good\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5489017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5489060", "body": "Ah, you're right, I previously had Bytes.toBytes(Integer.parseInt(value)) while I was developing this and then over the course, I changed that. I will remove the catch\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5489060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5489077", "body": "Yes, I will change to enum. Too many if-else-ifs\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5489077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5489331", "body": "That's a good catch. let me see if I can modify the code further to not use these. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5489331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5594610", "body": "yes, it was being used earlier in a key generation but not anymore. am removing it.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5594610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5594624", "body": "No, good catch. Will change to private\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5594624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5594631", "body": "yes, fixing this. (have it that way everywhere else in the file, but somehow missed this one)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5594631/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5594657", "body": "yes, these should be static, they are not instance specific initialized finals. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5594657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5619197", "body": "Will iterate over the enum.values instead of adding individual ones\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5619197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5619215", "body": "will make the counterNames and eventRecordNames static\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5619215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5673166", "body": "There are task level counters which are called \"COUNTERS\" and the job level ones which are called \"TOTAL_COUNTERS\", \"MAP_COUNTERS\" AND \"REDUCE_COUNTERS\" \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5673166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5673189", "body": "I will remove those as they are no longer need. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5673189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5773253", "body": "Sounds good, I will add the null check. It is probably very unlikely that there are no fields in the job history file since that means an empty job history file was created which I don't think will happen unless there is a bug in the history file writing. But agree adding the null check in any case.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5773253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5886089", "body": "Hi Gary, (maybe I didn't follow completely) The sub-string for a 1.0 history file is \"Meta VERS\" since the first line in 1.0 is 'Meta VERSION=\"1\" .;'. Hence this won't throw the exception. I have a unit test at TestJobHistoryFileParserFactory.java that confirms that we get back a JobHistoryFileParserHadoop1 object when it's a 1.0 file. \nIs that what you were referring to?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5886089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5989493", "body": "Yes, so I have changed it now. Made the function check for both versions' strings and return accordingly \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5989493/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/6012748", "body": "Thanks Gary for that catch! I have updated the code to generate the task keys to be the same as 1.0 now\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/6012748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/6078938", "body": "This would create a new counter object each time? Maybe we could just increment it if it exists?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/6078938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/6078949", "body": "Okay just checked, CounterMap's add function does that already. I had forgotten\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/6078949/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7482409", "body": "Yes, added  TestJobHistoryListener#checkHadoopVersionSet()\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7482409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7542301", "body": "That is a good observation. I will make it consistent across both place to check for this exceptional case, regardless of the current improbability. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7542301/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7542341", "body": "Hmm, to move this out: there's not much else going on in this function. Even if this were moved to a helper function, it would still remain as this nested set of if checks. I'm open to ideas on how to make it cleaner.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7542341/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7543240", "body": "Need to add javadoc here too\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7543240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7549653", "body": "Oh yes, we do! Will add it.. thanks! \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7549653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7549665", "body": "Ugh, yes.. good catch! Changing it now\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7549665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7597605", "body": "Hi Joep, I think you were looking at an outdated commit. There is no setHravenUserNamePut function anymore. There is only one set method which is for the queue name. And it does not return anything. Also, as you have suggested, I am already getting the username from HadoopConfUtil.getUserNameInConf . I think most of these are taken care of, except for having a HRAVEN_QUEUE_BYTES which I will add in.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7597605/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7876956", "body": "I will change this but this won't throw an NPE since the getValueAsString returns empty string if not present in the hbase result\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7876956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7876958", "body": "Okay, will change this\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7876958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8206325", "body": "Yes, will print the qualifier name\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8206325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8206342", "body": "the comment exists on lines 65 and 66 in this function\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8206342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8206496", "body": "Right, I need to check for blank/initial value like in the other places where values are populated while iterating in a loop\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8206496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8206499", "body": "will do\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8206499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8206672", "body": "Hmm, good question. Usually we redefine them so that we know which exact key we are looking for. If we use JobConf.MAP_MEMORY_MB and the key itself changes from \"mapreduce.map.memory.mb\" to \"something.mapreduce.map.memory.mb\", now we end up with different column names in hbase. So redefining them in order to minimize the changes in hadoop which break things for hRaven silently.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8206672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8207374", "body": "Yes, I thought about this too. A few things here. We are trying to get a value from the put, not from the hbase result. The column is not missing here, it's the value that is \"wrong\", since it was not converted to a long.. Also, this is very unlikely since we store these numbers like map slot millis etc as long in the put so very unlikely that this will break. Also, my thinking was, do we want to break the processing of this file simply because the post processing value was incorrect and mark the whole batch as not completely processed? I was considering adding another value in the states for \"PREPROCESSED, LOADED, PROCESSED\" as \"POST PROCESSED\" and was going to speak to Joep today about that. But none the less, let me see which exception I can throw. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8207374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8208108", "body": "I was thinking about this.. I think I will remove the .has check and keep only the kvlist size > 0 check\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8208108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8213758", "body": "the \"mapred.child.java.opts\"  are the Java opts for the task tracker child processes. So say the conf file can contains \"mapred.child.java.opts\" : \" -Xmx1024m -verbose:gc -Xloggc:/tmp/@taskid@.gc\" . Now notice the last character for Xmx value is 'm', which implies 1024 megabytes. We need to remove this m to get the actual number value which is to be used as long in further calculations. The space split is necessary since there could be more things being passed in the mapred.child.java.opts \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8213758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8214682", "body": "Actually, it can be.. it could be any of -Xmx:size[g|G|m|M|k|K]\n\nhttp://docs.oracle.com/cd/E15289_01/doc.40/e15062/optionx.htm#i1027399\nThis means I need to divide accordingly, I will update this code.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8214682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8308542", "body": "Oh cool, I didn't see this function. Will update the code to use it and remove this.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8308542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8308567", "body": "yes, good idea to mention in the javadoc that it's returned in mb.. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8308567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8308691", "body": "So the jvm option will not accept anything other than K, G or M. It will throw an error. But let me add in a default option just to round off the bases.\n\n$ java -Xmx1024Z k.java\nInvalid maximum heap size: -Xmx1024Z\nCould not create the Java virtual machine.\n]$ \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8308691/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8308739", "body": "Hah, good catch, the comment is old... will update the comment! \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8308739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8308777", "body": "Actually, again, the comment is out of context. It applies to hadoop2 but the function is for hadoop1 megabytemillis calculation. I will update the javadocs\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8308777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8308884", "body": "yes, could be, but as such that won't be part of this code fix since this change does not really affect the job key converter in any way.. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8308884/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8309138", "body": "yes, I am updating all comments carefully now. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8309138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8319358", "body": "there are two new lines in part of the code, not sure why they got checked in, will remove them. they are not affecting anything, only blank new lines\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8319358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8319371", "body": "Need to add the javadoc return value\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8319371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9065596", "body": "Although the current code does not do this, we need to check if the jobtracker String is null/empty else the \"jobtracker.indexOf\" will throw an NPE. Also, will be good to have a unit test for the null/empty conf settings.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9065596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9065619", "body": "Maybe use StringUtils.isEmpty(jobtracker) instead of jobtracker == null. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9065619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9474812", "body": "Hmm..This is a generic void populatePut function. It's called for each string put that is generated. We don't need to check if job conf is null for each such put, there are jobs with 70k puts. If we did, then it would be 2 if checks for each put, one for job conf being null and one to check if it's map millis/reduce millis. Only if key under consideration is map millis or reduce millis, we need to check for job conf being null. I think the helper function will not reduce to code, since for map millis we need to get a different job conf parameter map.memory.mb and for reduce millis, we need a different one (reduce memory mb). \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9474812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9476453", "body": "Checking if I can modify the code a bit more to collapse things\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9476453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9835374", "body": "Yes, they should be final. will change it, thanks! \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9835374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9886720", "body": "The + timer will log the time unit in seconds or milliseconds. For example, the line would appear something like this:\n In createFromScanResults For cluster someHadoopClusterName Fetched from hbase 20 rows, 200 columns, 24054 bytes ( 0) MB, in total time of 13.10 ms\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9886720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9887960", "body": "Yes, done. Also added unit tests for the same\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9887960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9889879", "body": "okay let me do that\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9889879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10237582", "body": "The intention here of looking for a i-1 or i+1 file is that, usually these files appear one after the other on disk. Hence we take a quick look to see if i+1 or i-1 is the conf file for this history file. If not, that's good, we add it to toBeRemovedFileList.add(fileName).\n\nSo yes, you are right in thinking that \"If you have more than one pair of files that are skipped in the middle, I suspect this would break pretty easily.\" But, the code covers that case, since, at the end, we iterate through the toBeRemovedList and remove those files. \nThe idea of looking at i+1 or i-1 is that, this would be faster than iterating over the entire list of files to be processed and checking each one.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10237582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10237607", "body": "Sounds good, will make this and other changes mentioned\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10237607/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10309825", "body": "Yes, let me add some tests for this and make the changes \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10309825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10309973", "body": "Yes, I see that now, let me change the name to something better\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10309973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10451146", "body": "(Updating as per my chat with Joep). I thought about skipping files. The rationale about moving them to a different location on hdfs was, after the retention period is over, we would no longer have the file on hdfs if we were to skip them and leave them as is. So we lose the data forever since we couldn't load it in hbase either. But if we move them to a different hdfs location, we at least have the files to process later.\n\nWith regular sized files, even if they get deleted after retention period, we know we have a copy of those in job history raw table, so we can reclaim the original file from the hbase table if need be.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10451146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10453502", "body": "Would copying them to a different hdfs directory be reasonable (instead of move)? That way, we don't run the risk of losing the data and we also don't affect customer view of things. The downside is we keep two copies of such huge files for the duration of the retention period.\n\nRight now, loading huge history files fails and at the minimum, we need to not have it fail. So given that this is a \"temporary\" fix, till the real fix being actually processing such files is put in, is that an acceptable solution to mitigate the issue at hand?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10453502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/11268027", "body": "Sounds good, thanks.. Accordingly, I have updated the pull request with a getApproxSubmitTime function in job history raw service\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/11268027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/11611339", "body": "I think having a JobDescFactory class return an app id seems out of place. It's okay to return a JobDesc object or a Framework object from this class, but app id is something that is internal to these frameworks and job descriptions.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/11611339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/11612299", "body": "So looks like this will return a new desc factory object each time it's invoked. Is that needed? \n\nBecause, that means, in the hRaven runs, for each job history file, a new job desc factory object would get created each time. I think let's not do that.  Is this an option: can we keep the private static final lines that are being initialized above and only return the appropriate object in this switch statement? \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/11612299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12123150", "body": "if either start or end time is not passed in, it will default to 0. In the https://github.com/twitter/hraven/blob/master/hraven-core/src/main/java/com/twitter/hraven/datasource/JobHistoryService.java#L274 , if start/end times are 0, they are not added to the scan. Hence by adding these parameters to REST api is enough to fix the issue of limiting the flows looked at given a time range\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12123150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12122244", "body": "This is the only change to fix #81 \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12122244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12122258", "body": "This is being remove to fix #80 since queue is part of job conf\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12122258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12493673", "body": "That is a good point. I thought about that too, let me see if I can make it an Object. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12493673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12494100", "body": "Oh, this is not about the values in these. It's the number of queues found that the size would reflect. So if my fairscheduler file had 10 queues/pools, the size would be 10. It's not the max pool size.. it's the number of pools\nI am doing a math.max since not all queues have minMaps as well as minReduces in hadoop1, sometimes they have only 1 setting, so trying to get the max number of pools we have stored in these. This function is not quite used anywhere in the code except for unit tests. I can remove it. I was looking for a way to get the number queues/pools we have stored\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12494100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12855296", "body": "This could be a problem if multiple jars of different versions are present for hraven-core and hraven-etl. Could we pick the latest? And also echo that we are picking the latest so that it's not done behind the scenes.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12855296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12855762", "body": "Setting a default constant value inside a private function that is invoked with different keys at different places in the code is not a good idea. It can be set in Constants.java similar to DEFAULT_YARN_SCHEDULER_MIN_MB .\nAlso the next if for memoryMb == 0L needs to be updated/removed accordingly. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12855762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12918725", "body": "So it looks like the default value for mapreduce.map.memory.mb is 1024 as per the settings in MRJobConfig.java \n\nSo it does not seem like a good idea to set defaults to random values that one particular instance of hRaven might be using.  Do you see the default setting to be 1536 in your code base? \n\nhttps://svn.apache.org/repos/asf/hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/MRJobConfig.java\n\nA better way to handle this would be to set the param in your cluster config files. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12918725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13160317", "body": "A small correction. This could be rewritten as \nif (Constants.MAP_MEMORY_MB_CONF_KEY.equals(key)) {\n\nSimilarly for the reduce memory mb key. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13160317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13344144", "body": "If key is null and there is no check for nullness of key, this would throw a NullPointerException. A better way to do this could be if (Constants.MAP_MEMORY_MB_CONF_KEY.equals(key)). Similarly for reduce memory mb. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13344144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13317013", "body": "minor: I think this setting may be unnecessary since there isn't (yet) a custom serializer for TaskDetails. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13317013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13317057", "body": "minor: Any chance we could also include timer logging like other end points do? \nStopwatch timer = new Stopwatch().start(), stop; etc ? Also log the number of tasks being returned (you can see how the other endpoints are logging). It is just very helpful in debugging later. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13317057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13344339", "body": "Just curious, any particular reason these are being removed..\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13344339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13344762", "body": "I don't see a problem to keep this here, but would like to note that this won't be getting called from anywhere unless this Main() was invoked. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13344762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13345049", "body": "Minor: what I meant in the previous comment was adding a statement like: \nList<TaskDetails> tasks = jobDetails.getTasks();\nif(tasks != null) { \n  LOG.info(\"For endpoint /tasks/\" + cluster + \"/\" + jobId + \", fetched \" + tasks.size() + \" tasks, spent time \" + timer \" );\n} else {\nLOG.info(\"For endpoint /tasks/\" + cluster + \"/\" + jobId + \", found no tasks, spent time \" + timer \" );\n}\nNo worries, I can add this later. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13345049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14003473", "body": "need to take care of race condition here. Will be good to use checkAndPut for number of runs in scratch column family, so that we know which one was the first insert for that run id and then we can increment the number of runs in info column family\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14003473/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14003414", "body": "After discussing with Joep, consider using checkAndPut for queues. We may have to retry a few times if several map tasks are updating the queues for the same app\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14003414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14003655", "body": "Also here, use first get and then checkAndPut for cost so that we don't run into race conditions\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14003655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14144937", "body": "Yes, I need to draft up a section for aggregation, schema etc in README and update the project desc. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14144937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14330416", "body": "A minor improvement suggestion -maybe have a variable that stores the lastProcessRecord.getMaxModificationTimeMillis() since it is being called thrice in this code block? \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14330416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14386428", "body": "I actually think having a timestamp (long number) in epoch milliseconds is cleaner than a yyyymmdd etc format. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14386428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14386520", "body": "If I am not wrong, I think he is choosing maximum of the two so negative or very small numbers should have no effect. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14386520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14523583", "body": "Wondering if the .inmobi- substring is needed here.. I think we don't want to include such suffixes in release versions.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14523583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/18115315", "body": "Sounds good, added a test case and a file\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/18115315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/20243052", "body": "I think using an hraven prefix for table names is the better way ahead considering that the hbase datastore can contain tables from other applications as well.\nFor existing tables, renaming them now may be a bit more complex since hbase does not have a rename command. The recommended way has a few steps, as listed here http://hbase.apache.org/book/table.rename.html \nWe would need to disable the table and use clone snapshot to do it:\n\nhbase shell> disable 'tableName'\nhbase shell> snapshot 'tableName', 'tableSnapshot'\nhbase shell> clone_snapshot 'tableSnapshot', 'newTableName'\nhbase shell> delete_snapshot 'tableSnapshot'\nhbase shell> drop 'tableName'\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/20243052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "Yohan-Bismuth": {"issues": [{"url": "https://api.github.com/repos/twitter/hraven/issues/117", "title": "hraven with hbase 0.96+", "body": "Hi, I was having trouble to make hraven work with hbase 0.96 (there seemed to be some api incompatibilities). I made a patch on https://github.com/criteo/hraven, I dont know if you have some interest in it, maybe you could have a look ?\nBy the way, i added a small feature to put hraven tables in a namespace (since hbase 0.96 offers this possibility)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43656351", "body": "Hi thanks for your feedback, i'll correct all of this as soon as possible (probably tomorrow) :)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43656351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43724796", "body": "I'm currently working on a local hadoop2\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43724796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12939454", "body": "My bad indeed, i should have set it to the default config value. I just put this value arbitrary to make things work, i'm gonna correct this.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12939454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12941076", "body": "Hi, you're right. I just had the problem with a mapper, and I didn't handle the reducer. I'll change it to check if it's whether a map or a reduce key.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12941076/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "hcoyote": {"issues": [{"url": "https://api.github.com/repos/twitter/hraven/issues/87", "title": "jobFileProcessor.sh complains about missing arguments.", "body": "Running from origin/master.\n\nI have things patched up enough to get the jobFilePreprocessor.sh and jobFileLoader.sh  connecting to our Hadoop environment.  The last step in hraven-etl.sh invokes jobFileProcessor.sh, but this throws errors about missing arguments.\n\nI poked around in the code and it's not really clear what these should be.  machinetype appears like it should be set to \"default\" if not explicitly set, but the arg processor makes this argument required.  Additionally, I can't find a great deal of discussion on what's supposed to be in the cost properties.\n\n```\nERROR: Missing required options: z, m\n\nusage: JobFileProcessor  [-b <batch-size>] -c <cluster> [-d] -m\n       <machinetype> [-p <processFileSubstring>] [-r] [-t <thread-count>]\n       -z <costfile>\n -b,--batchSize <batch-size>                        The number of files to\n                                                    process in one batch.\n                                                    Default 100\n -c,--cluster <cluster>                             cluster for which jobs\n                                                    are processed\n -d,--debug                                         switch on DEBUG log\n                                                    level\n -m,--machineType <machinetype>                     The type of machine\n                                                    this job ran on\n  -p,--processFileSubstring <processFileSubstring>   use only those process\n                                                     records where the\n                                                     process file path\n                                                     contains the provided\n                                                     string. Useful when\n                                                     processing production\n                                                     jobs in parallel to\n                                                     historic loads.\n  -r,--reprocess                                     Reprocess only those\n                                                     records that have been\n                                                     marked to be\n                                                     reprocessed. Otherwise\n                                                     process all rows\n                                                     indicated in the\n                                                     processing records,\n                                                     but successfully\n                                                     processed job files\n                                                     are skipped.\n  -t,--threads <thread-count>                        Number of parallel\n                                                     threads to use to run\n                                                     Hadoop jobs\n                                                     simultaniously.\n                                                     Default = 1\n  -z,--costFile <costfile>                           The cost properties\n                                                     file on local disk\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/87/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/86", "title": "Allow hbase table prefix to be configurable at run-time", "body": "In our HBase environment, we namespace tables in order to group them and more easily identify which project they're associated with.\n\nCurrently, the table names are hardcoded in ./hraven-core/src/main/java/com/twitter/hraven/Constants.java unless you set IS_DEV (which sets PREFIX to \"dev.\") or you just override what PREFIX is set to.  Both options require rebuilding hraven.\n\nIt would be great if this were a run-time option that could be set without having to rebuild.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/86/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43818969", "body": "Thanks, I'll see if I can get it working tomorrow.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/43818969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "santhu404": {"issues": [{"url": "https://api.github.com/repos/twitter/hraven/issues/70", "title": "Add skip count to REST calls", "body": "Current REST calls support LIMIT to limit the number of records fetched. With support of SKIP records, now the REST calls makes pagination easy on the server side for processing and returning of the results.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/70/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "talglobus": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hraven/commits/11d84a147d97b71a5211a65cf7ef9021e871181f", "message": "Fix typo"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pgaref": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hraven/commits/c61806640b1dd08c8cccc681b2aec52d9ee2cb85", "message": "Fixing build failure cause by wrong project dependency in pom"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jrottinghuis": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hraven/commits/916310b53f9367c72fdff30ee618f714cb5b8ea0", "message": " Bumping hRaven version to 1.0.0-SNAPSHOT (#154)"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/1ab9d721e4656b0a11ef97c7ab058bc719fb0656", "message": "Eliminating the various _TABLE_BYTES and using strings instead. (#153)\n\nThanks!"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/3070b8b2f1afbbb34ca43dfc70f25a36f8064de0", "message": "Merge pull request #151 from mingmasplace/dogpiledays_hbase1\n\nJobHistory related clean-up"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/cc37e7f60b97267193281ebdd4b486bdb6597f65", "message": "Merge pull request #147 from mingmasplace/dogpiledays_hbase1\n\nFix compilation issues"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/93f585344634dde32a08095fbef3fbf9c028b892", "message": "Merge pull request #149 from jrottinghuis/dogpiledays_hbase1\n\nReverting java target version back to 1.7"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/6be6b1a68155f77bc6ab4d9dcc432a3b35983582", "message": "Merge pull request #148 from jrottinghuis/dogpiledays_hbase1\n\nTriggered from previous build. Compile failure with JDK 1.8 target will be addressed in next PR."}, {"url": "https://api.github.com/repos/twitter/hraven/commits/a7dd90806db6da9e58b072bc6a6e9216d8966aac", "message": "Merge pull request #113 from vrushalic/etl_aggregate_2\n\nIssue #97, #98: Aggregate job info per day and per week as part of JobPr..."}, {"url": "https://api.github.com/repos/twitter/hraven/commits/9da22393398e8eb4c802526fa8698824c4492886", "message": "Merge pull request #122 from vrushalic/memory_nullfying\n\nIssue #121 Consider assigning null to variables during processing"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/51d039534ddc59883451c80b5791a39937f8fb37", "message": "Merge pull request #100 from vrushalic/output_metrics_stats\n\nOutput REST api metrics stats"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/2fd2e320ff593fa34f4bf26e58d6ad94fc496930", "message": "Merge pull request #96 from vrushalic/cost_in_job_flow_rest_api\n\nCost in job flow rest api"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/668c7f2a4a3bb301b91c1b71233c08abee96a267", "message": "Merge pull request #91 from amatsukawa/tasks_rest_endpoint\n\nimplement /tasks REST endpoint -- thanks Aki"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/22e2c25112a449afcea5d45c020463b014ddd086", "message": "Merge pull request #83 from vrushalic/newJobs_restapi\n\nREST Api for New Jobs"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/08e50dd851900c1d8a843861096a06b1d6d17963", "message": "Merge pull request #85 from vrushalic/flow_api_start_end_time\n\nIssue #84:  Add start and end time to flow API"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/3c6a33885993cb1b5c2de901d72fc16b228649c5", "message": "Merge pull request #73 from vrushalic/set_job_status\n\nIssue #72  Ensure MR job status is set for successful hadoop2 jobs"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/af36dc4614fd1df5effdea601908cce7010aa910", "message": "Merge pull request #71 from vrushalic/hadoop2_mrjob_submit_timestamp\n\nIssue #67 updating to check for hadoop2 submit time"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/e734c6fa18719b490cc5090ca8beedcd4073ad72", "message": "Merge pull request #62 from vrushalic/rawLoader_fileSize\n\nIssue #59 Consider not attempting to load huge history files into raw ta..."}, {"url": "https://api.github.com/repos/twitter/hraven/commits/11e17c1a255953e15e585e4309992c339ab7099a", "message": "Merge pull request #57 from vrushalic/hdfs_rest_api\n\nREST api for geting hdfs stats of a cluster"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/a2fc225f6413f9f5a7c79b2ceb7e739191b0f3c8", "message": "Merge pull request #52 from vrushalic/slot_millis_correction\n\nIssue #51 Correct the Slot millis seen in hadoop2 counters"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/8d6b0251b9421af47a83904c6f4c993d8b418fee", "message": "Merge pull request #53 from vrushalic/addjobHistKey_diagnostics\n\nIssue #50 Add a new job history key called \"diagnostics\" in hadoop2"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/1a13299fecb0d8b6a86ba51590defe4bb4800584", "message": "Merge pull request #48 from vrushalic/elapsed_time\n\nIssue #47: Return (wall clock time) elapsedTime for flows"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/b2a6c364914aae2a99ea2d5e17190ae1ef9e2f3f", "message": "Merge pull request #46 from aniket486/yarn_support_getCluster\n\nadd yarn support for JobDescFactory#getCluster api"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/8a2c52df583d4a7bd9156e5b33e8c0723955db67", "message": "Merge pull request #45 from vrushalic/allquerylog\n\nIssue #44 Add more logging for REST endpoints"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/5b213fbd5504ca6b75fd5398c3f870f5934ba8f4", "message": "Merge pull request #43 from vrushalic/mapMillis_reduceMillis_notFound_Issue42\n\nIssue #42 Allow mapSlotMillis and reduceSlotMillis to be not found in me..."}, {"url": "https://api.github.com/repos/twitter/hraven/commits/f777bee6b284f4e3afb75c014149da2fc47c8f58", "message": "Merge pull request #41 from vrushalic/mbmillis_flow\n\nIssue #40 Enabling flow and flowStats to show megabytemillis and hadoop ..."}, {"url": "https://api.github.com/repos/twitter/hraven/commits/4d0b18729429044da3b8293a9ecbe5c44f8a0489", "message": "Merge pull request #38 from vrushalic/megabyte_millis_hadoop1_hadoop2\n\nIssue #30 Ensure megabyte millis is stored in hbase at post processing s..."}, {"url": "https://api.github.com/repos/twitter/hraven/commits/581e2ee0bcea867ffaddc7d4616ca05fb9bbd70b", "message": "Merge pull request #37 from vrushalic/return_counter_subgroup\n\nIssue #34 Deal with changed counter sub group names in hadoop2"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/7366959e08432c847022e9e6fd2a1849f8d55679", "message": "Merge pull request #33 from vrushalic/queuename_username_config_final_pull\n\nIssue #28, 29 Ensuring the queue/pool name is set correctly, getting the..."}, {"url": "https://api.github.com/repos/twitter/hraven/commits/1ec18aa1e87222b1ab0d4b736a5341ca1df81ac5", "message": "Merge pull request #31 from vrushalic/addHadoopVersion2Put\n\nIssue #27 Set a hadoop version in the hbase record for hadoop2 jobs"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/a59d2f6bfea5745fb212260bcad7af0eed52a4c2", "message": "Merge pull request #25 from vrushalic/jackson_null_TaskDetails\n\nIssue #24 adding setter to fix REST client throwing error when run again..."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hraven/issues/comments/26558927", "body": "We debated downgrading Jackson to 1.8.8 because that is what Hadoop 2.x ships with, but we can deal with that separately if that becomes an issue.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/26558927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/41766088", "body": "There are a few challenges we need to tackle here.\na) are we going to force people who use hRaven to always use the FairScheduler ? Can we never use the Fifo or Capacity scheduler ?\nb) Can't we re-user more of the fairscheduler code itself to get some of this data more generically rather than having to parse the XML file ourselves ?\nc) How will we deal with the scheduler changes coming up in 2.2 (and further). See the format with \"mb\" and vcores as in \n<minResources>10000 mb,0vcores</minResources>\n    <maxResources>90000 mb,0vcores</maxResources> as documented in \nhttp://hadoop.apache.org/docs/r2.2.0/hadoop-yarn/hadoop-yarn-site/FairScheduler.html\nWe'd have to recognize which version we're dealing with, and parse accordingly (unless we can use regular Java APIs as per comment b)\nd) How will we deal with nested queues (that we're trying to migrate to). In these cases sub-pools will inherit defaults from the parent pool if not specified explicitly.\n\nFinally, is the new CapacityDetails / Fairscheduler reading really related to the new jobs API, or can these changes be separated ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/41766088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/45925131", "body": "Thanks Aki !\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/45925131/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47609639", "body": "These contributions are great. We're starting to look through them.\nCan you elaborate how the output directory changes for you ?\n\nThe way we run, for a particular cluster, the output is always the same, so filtering on that directory would not really help.\nhRaven would already re-run and not process things again, since the processingRecord keep track of the high-water mark (the latest job-id that did finish properly).\nWhen one of the jobs in a batch has a problem, that ProcessingRecord does stay in that state, but the other processing records would be skipped. Even when a processing Record gets run again, not all jobs have to be re-loaded .\nWhen a long-running job completes, it will happen that there are \"gaps\" in the sense of an older job id now becoming the high-water mark, but the already processed records are neatly skipped.\n\nThe reason why getLastSuccessfulProcessRecord passes null to getLastSuccessfulProcessRecord, and why getProcessRecords can accept something other than null is to allow for historic runs, while the most recent runs are going on.\nFor the historic runs we always passed forceAllFiles to be true.\n\nPerhaps I'm not quite understanding your use-case. Could you please elaborate ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47609639/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47611183", "body": "Hmm, yeah, I can see how this totally breaks the oozie/falcon case.\nLet us think through the best way to deal with this. Deploying the cost file to HDFS requires an additional step, and an additional opportunity for operational overhead, but we do need to be able to tackle this legit use case here.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47611183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47611916", "body": "So in that case we'd have a (mandatory ?) argument to refer to the pathname ?\nIf it is a full URL then it would just read from there ?\nWe'd use the filessytem client and file:// would refer to local filesystem, hdfs:// would point there, and if people wanted to use hftp:// or even viewfs:// that would then work too, would that work ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47611916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47612527", "body": "The fist 0.90 release went out in Jan 2011\nThe last one went out in December 2011. Does falcon even run against such old version of HBase ?\nSupporting an HBase version older than the supported will be interesting.\n\nIn the spirit of including as many users and use cases as we can reasonably do, I'm tempted to just adopt this change for now.\nDo you have any indication how long you'd need this for ? Once you're at the newer version we can rip this out again and revert this again.\n\nI was hoping to use the newer reverse scanner capabilities in HBase 0.98, I guess we may have to wait for that for a bit.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47612527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47612862", "body": "This is a great idea. Let me put some minor comments along with the code.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47612862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47613954", "body": "Agreed, we had the same discussion when we went into production, we wanted to change to have the prefix. We did not want to break backwards compatibility. Having an optional flag to add the \"namespace\" prefix would be great. We might even do the same internally and take the hit to rename the tables. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47613954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47614139", "body": "Interesting idea. Doesn't the RM already do this (sharding history files by date) ?\nFor Hadoop 1 we had the original directory all in one place (where the history server can read from), then we separately ran JobFilePartitioner to shard the files into a yyyy/mm/dd directory structure.\nAre you doing a different setup ?\nCan you explain how your history files appear in one place and then get shared, or how that works for you ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47614139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47615088", "body": "In principle this is fine with me. We need to pull in the change and make sure that this does not break anything with our setup on our last remaining Hadoop 1 clusters and our Hadoop 2 clusters.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47615088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47615307", "body": "Definitely need a little more time to grok this change.\nOn the face of it, it sounds great to separate out HBase and add an additional sink.\nHow would that work for cases where we need to rely on HBase CAS or increment operations ?\n\nIn theory one could store this data in a regular SQL DB as well, however, we rely heavily on efficient HBase scans to be able to efficiently pull data out of tables that contain tens of billions of task records for about a dozen clusters.\n\nIf we do support an additional sink we need some serious unit test cases to make sure that any additional changes to hRaven don't break compatibility for Graphite. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47615307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/48799710", "body": "Understood that this part is somewhat more separate from hRaven for now, until we make all of hRaven depend on Hadoop 2.\nThat said, we need to make sure that the readme.md needs to reflect what the HadoopJobMonitor is all about.\nWe need to also make sure that when we check in files that do not compile, that Travis will catch this.\nWe need to make sure that when we do an hRaven release, that the HadoopJobMonitor version automatically is kept in sync.\nI think we probably want to have a jar published for HadoopJobMonitor as well (with some consistent naming).\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/48799710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/253642771", "body": "Merging even though there is a compilation issue with a transitive dependency of com.twitter:util-registry through .common:application-http from application-module-http. That was already caused by #145 We'll address it separately.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/253642771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/253673007", "body": "Now we're getting the expected HBase failures.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/253673007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/253931547", "body": "+1 LGTM.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/253931547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5754442", "body": "Could fields.get(k) be null ? If so, defensive coding would use fields.isNull(k) first to check.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5754442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5754486", "body": "Minor nit: for new files you probably want to use the current year.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5754486/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7048977", "body": "Let's break this line around ~80 characters or so.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7048977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7475805", "body": "Rather than making the factory depend on HBase, let's move the common function to a new common (abstract ?) base class for the two JobHistoryFileParserHadoop classes. Then each class can extend this base class and use the shared functionality.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7475805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7475857", "body": "Let's also have a test for Hadoop 1\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7475857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7584249", "body": "This method does a set, yet has a return value. That seems a little odd. Besides I think we don't need a username put, because that is already part of the key right ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7584249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7584280", "body": "When you eliminate the setHravenUserNamePut, you don't need to pass in the hRavenUserName here, you can simply pass in the jobKey and extract user from that.\nThe javadoc should probably describe which argument is modified (namely the jobPut).\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7584280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7584349", "body": "Weird, I commented on a different line (namely on the setHravenUserNamePut, not this one.\nHere I'd say, just remove the hRavenUserName argument and derive it from the conf right here by using the ConfUtil.getUserNameInConf. That way you can eliminate the extra argument.\nPerhaps even better is to not get it from the conf (again) and simply pull it from the key, that way there is not chance that we have two different code paths getting to a different value for the same thing.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7584349/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7584377", "body": "Nit: in many other such cases we just stored a constant called HRAVEN_QUEUE_BYTES and did the byte conversion once.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7584377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7584457", "body": "jobKey.getUserName() should do the trick.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7584457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7869162", "body": "Why not store as enum ?\nPerhaps even default to TWO (assuming that more and more folks will be migrating to Hadoop 2) ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7869162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7869181", "body": "This could simply return the enum itself couldn't it ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7869181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7869226", "body": "Here you'd have to use a method on the Hadoop version enum to get an enum from a string.\nIt could also have a default (or could be null).\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7869226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7869260", "body": "I'd change the order of the compare to avoid NPE if this.hadoopVersion is null.\nConstants.HADOOP_VERSION.TWO.equals(this.hadoopVersion)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7869260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8202477", "body": "I'm happy to reduce a lot of boilerplate code to use this method.\nHowever, in other cases we have thrown a MissingColumnInResultException when a column is not there.\nI think that is more appropriate then just returning a legal value for the long.\n\nThis allows code to express that the column is expected to be there.\nIf you don't know for sure if the column is there or not (if it's optional) then you'd catch the exception and handle it there.\nThat is still more explicit in code. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8202477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8202503", "body": "Ditto comment: MissingColumnInResultException\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8202503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8202512", "body": "MissingColumnInResultException\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8202512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8215695", "body": "Would it make sense to overload the getStringValueFromPut util method to just pass in the string and have it do the Bytes.toBytes(qualifier part) ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8215695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8215795", "body": "We should separate he logic that pulls -Xmx from a string from the code that deals with HBase puts etc.\nThat way we can have a separate and clean method that can be simply unit tested.\n-Xmx could have an optional k or m (for kilo or MB) argument right ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8215795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8309022", "body": "Appears to be the comment from the previous method.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8309022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8310613", "body": "Any reason not to make this a static final ?\nThere is not state captured in JobKeyConverter that would hurt re-use is there ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8310613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8310702", "body": "I'd use a lower case X for the arg name.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8310702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8310904", "body": "Would it make sense to turn the comparison around like so:\nJobHistoryKeys.LAUNCH_TIME.toString().equals(JobHistoryKeys.HADOOP2_TO_HADOOP1_MAPPING.get(key))\nor do we know for sure that JobHistoryKeys.HADOOP2_TO_HADOOP1_MAPPING.get(key) will never return null ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8310904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10370306", "body": "Upside of moving large files out of the way is that we won't have to try to process them again in the next round.\nHowever, keep in mind that for small files we don't actually move the files to HBase, we upload a copy. The original is kept in place to be trimmed by normal processes.\nThe reason is that the normal JobTracker / Resource Manager and/or the JobHistoryServer still has access to the history file (large or not). \nWhen we immediately move large files the consequence is that no normal analysis through the normal UI is possible for those large files as soon as hRaven comes around, which at the moment is every 10 minutes or so.\n\nWouldn't it be better to simply skip the files ? Skipping the corresponding jobConf files for large history files is probably not a bad idea, although the later processing does handle the case where the history file is missing when the conf is present if I'm not mistaken.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10370306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10370389", "body": "Perhaps a workaround is to rig up a second JobHistoryServer looking at the new \"large file\" root, as long as we still maintain the same directory structure, it may be able to pick up the files there.\nIn that case we don't completely loose ability to have customers use the normal UI to analyise job more than a few minutes after finishing, but they would have to skip to a different location.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/10370389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/11263135", "body": "Let's see if we can use the last modification date of the file. That is really when the job completed, but is a whole lot closer than 0, which would mean that the job drops out of the view of most queries spanning a few days.\nWe'd also have a a lot of pressure on some region server, rather than having more of a spread.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/11263135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12935353", "body": "Why remove this check ?\nIf mapreduce.reduce.memory.mb is not found in the config, why silently return the mapper memory MB for that instead ? Do you find cases where the reducer memory was not set and you're getting exceptions ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12935353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13516598", "body": "Overall looks great. Just wondering why an inner class ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13516598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13895872", "body": "We should add a comment explaining how we're using the TTL here and why we're dropping older data.\nIt will be hard to infer from the code that there will be a column per job for each flow just so that we can check if we've see the job already to get an accurate count. We assume that no flow runs longer than the TTL time and once we have an accurate count, we don't need the job IDs themselves to report the data (the counts themselves are stored elsewhere).\nI'm even wondering if we want to use a different column family name to avoid confusion with other raw columns that we certainly do want to keep.\nUnsuspecting code change later could end up using the same raw column, only to find out later in production that the data is dropped.\nPerhaps we want to call this a 't' (for temp) or 's' (for scratch) or something like that.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13895872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13896188", "body": "Either separately, or as part of the appSummaryService but we should probably add a column in the raw table info family to indicate whether or not we have done aggregation of this particular job.\nThat way we can process historic files, or at least know which jobs were (temporarily due to aggregationFlag == false) not aggregated. Note that re-aggregating later will work properly wrt. run counts if we have not exceeded the TTL for other jobs in the flow that were aggregated within the same time period.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13896188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14002000", "body": "It is very confusing to call this runId.\nThis appears to suggest that we aggregate data within a run, which we don't.\nWe aggregate up to a day or week. So this field is a day or week.\naggregationId may be better, with explanation this could be a day, week, month, or whatever we want to agg by.\nThe fact that we end up getting this value by rounding down runId (which happen to be timestamps when the flow started)\nis a slightly different story.\n\nWe do by the way need to clearly describe that all jobs in a flow get aggregated to the start of the first job\nor the timestamp when the flow is submitted or something like that.\nI can imagine that people might be confused what happens when a flow spans more than one day.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14002000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14002619", "body": "do you mean to log appAggKey.toString ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14002619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14144806", "body": "Just realized that we need to make sure that we update the README.md as well.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14144806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14386353", "body": "Is millis the most user-friendly, least error prone way to get this argument ?\nWouldn;t it be better to get something in a more huma-readable form ?\nPerhaps yyyymmddhhMMss or something like that ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14386353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14386368", "body": "We should do a check at the end of argument passing and confirm that the options are internally consistent.\nIf not, then we should throw an illegal argument exception, not simply swallow/ignore one argument\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14386368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14386430", "body": "Do we need any more tight checks on this?\nDo we allow extremely small dates (like earlier than the Hadoop project existed) or some date in the future ?\nThose would probably indicate a mis-understanding of the argument and likely be an error.\nHow about negative numbers, those would clearly not be a valid date, but would pass for < or = comparisons silently in perhaps unexpected ways.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14386430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14386590", "body": "Is your intent to have the ability to create a gap in what hRaven picks up ?\nWe would essentially skip files that came in between the high-water mark from previous run and the new argument.\nThe fact that there is a gap will not be recorded anywhere and those files will just \"silently\" never be loaded.\nOnce the age off the history directory structure by the RM, these will be gone.\nIs that your intention ?\nCould you please explain your use-cases here ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14386590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387283", "body": "these looks like some specific internal users you run in your environment.\nWe may have to leave this out of the generic setup and you may have to add that in your internal deployment yourself.\nAlternatively we can see if this can be picked up from hrave-conf.xml so that the shell script and the config are separated.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387332", "body": "You need curly braces around the then block for ifs.\nOtherwise we get later logic issues if merges create two lines behind an if and only the first one is executed conditionally. Same here and below.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387337", "body": "curly braces\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387341", "body": "curlies\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387341/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387456", "body": "You are missing javadoc for pathInclusionFilter argument.\nCan you describe how you expect them to behave when both are specified ?\nExclusion is easy to grasp. Just ignore the ones with these paths in them.\nThe inclusion filter means take only files that match this ? That seems doable as well.\nBut when you specify both, you mean only one that match this, but within that set, not these ones ? That certainly deserves a specific unit test to confirm all this works properly\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387544", "body": "The double negative with an or is really hard to read here, then the methods have indexOf != with false and true return statements.\nDon't you mean, if it does not get included, or it gets excluded, then filter out (return false) ?\nThe excludesPathSubstrings and includePathSubstrings need some javadoc to make this simpler to read.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387678", "body": "So each year you would have to manually adjust this to the new year ?\nI'm pretty sure that we'd forget to make this change on January first in a daze of New Year and we'd have collection broken.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387698", "body": "So you are saying that we should no longer support the original format, and everybody _must_ use this new format ? We won't support the older format anymore ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387735", "body": "drop authors\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387748", "body": "Need copyright header on all new files before we can accept them.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387803", "body": "Adding additional (optional) support sounds great. Here it looks like you are making a graphite sink the default.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387816", "body": "you are referring to rmcuser, which as it seems from other pull requests, happens to be user that you use to run some of this.\nWhat does userplatform mean ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387816/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387826", "body": "drop author, add head to all files please.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387832", "body": "drop author, add head to all files please.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14387832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14850739", "body": "Note Vulture in the commit comment as well as in the top-level directory name.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14850739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14850741", "body": "Minor nit: 2014 ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14850741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14850748", "body": "Grep for hadoopJobMonitor and also in comment ?\nMay want to do a grep -R for \"ulture\" through the entire directory tree.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14850748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14850779", "body": "Use jmxterm-1.0-alpha-4 and pull this in through Maven, rather than checking a binary in ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14850779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14850788", "body": "VULTURE env variable. change to HADOOPJOBMONITOR ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14850788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14850835", "body": "Need to add a comment here that if your internal version of Hadoop has different counters, that the rest call that pulls task stats will fail to work properly due to counters not translating to enums correctly.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14850835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14850844", "body": "We need to probably match this with the rest of the hRaven release and/or figure out how we put this in the assembly w/o running into trouble with different versions of Hadoop. Perhaps having two profiles ?\nOne way or the other we need to make sure that when we use the Maven release plugin, that this version keeps pace with the rest of the hRaven release.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14850844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/18005481", "body": "Change looks great. Let's add a unit test case where we grab a 2.4 history file, anonymize it, and add it to confirm we can get these new stats out. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/18005481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "gsteelman": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hraven/commits/6733103fc1686ce3fafc747fc6813c2aeca9ee8e", "message": "Fix failing unit tests."}, {"url": "https://api.github.com/repos/twitter/hraven/commits/3e6aeadc1ad5e8fa18b0eb4f5509cfbf852fa610", "message": "Comment out failing unit tests."}, {"url": "https://api.github.com/repos/twitter/hraven/commits/f288391027b0bf1cdca00d3b5900a21e2b90280a", "message": "Merged remote twitter/dogpiledays_hbase1 into origin/piling_the_dogs_kv_cell."}, {"url": "https://api.github.com/repos/twitter/hraven/commits/1e1fa1eede2a68b6805fdfa868dc34cf1ca782b0", "message": "Replace KeyValue usage with Cell in hraven-core."}, {"url": "https://api.github.com/repos/twitter/hraven/commits/0c5386a6546ba12dc77700a1ff3fe560b5204a23", "message": "Use oraclejdk8 on travis and 1.8 for compiling source."}, {"url": "https://api.github.com/repos/twitter/hraven/commits/cf2beacd536544135717bccf44374b2e3d1546a3", "message": "Upgrade build to jdk8 and clean before testing."}, {"url": "https://api.github.com/repos/twitter/hraven/commits/92f2db82aef57a194dd5a4dea0b9bbb229b7f734", "message": "Merge remote-tracking branch 'twitter/dogpiledays_hbase1' into piling_the_dogs"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/bdc5b609d408aa8ea40920f75b3466d508e5e4c4", "message": "Javadoc and forcing one unit test to pass."}, {"url": "https://api.github.com/repos/twitter/hraven/commits/a4adcc54aa8e3c5e549ccf9f6fe10045170c4e49", "message": "Ensure connections from switching to hbase 1.x API don't leak, part 2."}, {"url": "https://api.github.com/repos/twitter/hraven/commits/5cbf6a6cacaf314472c6d42ac4093f2dbf733014", "message": "Ensure connections from switching to hbase 1.x API don't leak."}, {"url": "https://api.github.com/repos/twitter/hraven/commits/2b39406138e5ab2bd5d31bf7a967891eccdfb304", "message": "JobHistory*Service to use hbase1"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/294ba6c232aa6d568ba4f99b7f2b83cfb5aefaa8", "message": "HdfsStatsService to use hbase1"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/f4f6285343a68d235a42b710157e3e1a1ce0da9d", "message": "FlowQueueService to use hbase1"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/4381178d6a366b7596c2da818b1f5a505720497c", "message": "TestFlowEventService to use hbase1"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/01c2b7367805d70419edb3a827dd4930c2dda288", "message": "AppVersionService to use hbase1"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/ee03eaa2692073c45e68d1dc8e0a1e57aa6b3a61", "message": "AppSummaryService to use hbase1"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hraven/issues/comments/253923816", "body": "The most recent Travis build passes for all my changes to hraven-core. There is failing unit test (expected) in hraven-etl. Let's get this merged and I'll follow up with additional cut overs to hbase1.x API.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/253923816/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "caniszczyk": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hraven/commits/2f0fbb045d74c0a8992501bcf26445221def3a9a", "message": "Merge pull request #127 from twitter/new-travisci\n\nAdd support for new Travis CI infrastructure"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/3b7dcdb0491dc15895d9227b9c71852fe6eb7e29", "message": "Add support for new Travis CI infrastructure\n\nSigned-off-by: Chris Aniszczyk <zx@twitter.com>"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/26cd9c6fcdd84fbdde1bcfb08888c912033153b0", "message": "Fix coveralls.io badge link"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/a5f1cc33d5663cd8ca919f2961fff6fd94fd72bc", "message": "Merge pull request #114 from twitter/add-coveralls\n\nAdd code coverage via coveralls.io"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/620f15eddf7deeb5de08e16d1595a842668b2b14", "message": "Add code coverage via coveralls.io\n\nSigned-off-by: Chris Aniszczyk <zx@twitter.com>"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hraven/issues/comments/20019428", "body": "@ghelmling, what do you think? :)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/20019428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47686987", "body": "Here's the typical output: https://coveralls.io/builds/922331\n\n@vrushalic @jrottinghuis what do you folks think?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47686987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47699188", "body": "I'll take that as a yes to merge :)\n\n@vrushalic feel free to update the README if you wish, the more documentation the better. I only added the badge so you can see it next to the build results badge (generally that's where I look for these type of things, but that may just be me).\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47699188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/67694670", "body": "Lets see if this speeds up the build a bit...\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/67694670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/67696195", "body": "This took builds down to 12 minutes... compared to our usual over ~17-18 minutes so I'll consider it a win\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/67696195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "aniket486": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hraven/commits/48408f15419b607815b33076e93993f27d68bdb0", "message": "getCluster api should check for hadoop 2 property first"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/42a4bc443aabd1004d942d4d10a6ce72b624da3d", "message": "avoid creating new instaces of jobdescfactories"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/406bb93a89e301dbca8176a20496b994ed57e1ab", "message": "Add javadoc and mark getAppId api public"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/d14565822f55bf28d72957c82f205ea1c48f7d2b", "message": "Expose an api to getJobDescFactory to getAppId for a jobConf"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/4c1132b17f05a281448cb4416f1e671725a99ae1", "message": "minor refactor to handle corner case"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/49d75925322a0bde6d93b8884a87da30067b7302", "message": "remove hadoopclusters.properties from resources and moved to test"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/253638303fe2bc4197c474b0d54d5d2c44614f0a", "message": "add a check for jobtracker null"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/fec78dc467dc2c16bb802669651bd1adad60d4f1", "message": "add yarn support for JobDescFactory#getCluster api"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hraven/issues/comments/40426354", "body": "@vrushalic, thanks for the review, I have updated the patch as per your comments.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/40426354/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/40431148", "body": "@vrushalic, good catch!\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/40431148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9065917", "body": "are we expecting hadoop 2 configuration to have JOBTRACKER_KEY set to empty?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9065917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9065953", "body": "Added a check to protect against NPE. \"\".indexOf is fine.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9065953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12917019", "body": "We should avoid this.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/12917019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ghelmling": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/hraven/commits/44fc42e60f97418a91ed1a211d3184b221201847", "message": "Merge pull request #22 from twitter/flow_counters\n\n[Issue #21] Aggregate per-job counters in a Flow"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/14d48026fe95684e4234920fa04205ecfeed193f", "message": "Merge pull request #20 from twitter/github-19_scannercaching\n\n[Issue #19] Tweak down scanner caching in JobHistoryService.getFlowSeries()"}, {"url": "https://api.github.com/repos/twitter/hraven/commits/448f9eec2368a1521d117d8a28297d9856041abc", "message": "Merge pull request #18 from vrushalic/hadoop2.0\n\nIntegrate Hadoop2.0 job history support."}, {"url": "https://api.github.com/repos/twitter/hraven/commits/79c906f76c7d71eef07039c6a2a9b2a2ceb1a2b5", "message": "Merge pull request #16 from vrushalic/hadoop1_parserFactory\n\n[Issue #15] Refactor existing job history parsing into factory model"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hraven/issues/comments/20700941", "body": "Fixed by pull request #7 \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/20700941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/20849728", "body": "Fixed.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/20849728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/21202998", "body": "+1, looks good!\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/21202998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/23131855", "body": "Two minor comments to resolve: mixed static and instance context, and a wording fix in an exception message.  Otherwise this looks good to merge to me.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/23131855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/23435477", "body": "Merged to master.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/23435477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/29018498", "body": "java.net.ConnectException: Connection refused\nat sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)\nat sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:599)\nat org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(\nClientCnxnSocketNIO.java:350)\nat org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1068)\n2013-11-21 18:49:17,200 INFO org.apache.zookeeper.ClientCnxn: Opening\nsocket connection to server localhost/127.0.0.1:2181. Will not attempt to\nauthenticate using SASL (Unable to locate a login\n\nThis shows it trying to connect to zookeeper on the local host.  It looks\nlike your HBase configuration is not available to the tasks that are\nrunning.  Is the HBase conf directory (for CDH probably /etc/hbase/conf) on\nthe classpath for the TaskTrackers or NodeManagers?\n\nOn Thu, Nov 21, 2013 at 11:55 AM, seregasheypak notifications@github.comwrote:\n\n> Here is a part of task log. I've truncated \"infinite\" retries zookeeper\n> client to connect. It tries to connect for many times and then task_attempt\n> is killed (default 600 seconds). Zookeeper on server size says that\n> unexpected disconnect happens.\n> \n> nnotations-2.0.0-cdh4.4.0.jar:/opt/cloudera/parcels/CDH-4.4.0-1.cdh4.4.0.p0.39/lib/hadoop/hadoop-common-2.0.0-cdh4.4.0-tests.jar:/opt/cloudera/parcels/CDH-4.4.0-1.cdh4.4.0.p0.39/lib/hadoop/hadoop-auth-2.0.0-cdh4.4.0.jar:/mapred/local/taskTracker/devops/jobcache/job_201311211820_0001/jars/classes:/mapred/local/taskTracker/devops/jobcache/job_201311211820_0001/jars/job.jar:/mapred/local/taskTracker/devops/distcache/-3417913595055156476_-1440846171_2065882471/\n> test-hdfs.kyc.lol.ru/user/devops/.staging/job_201311211820_0001/libjars/protobuf-java-2.4.0a.jar:/mapred/local/taskTracker/devops/distcache/3192313508334488433_-1543259016_2065882504/test-hdfs.kyc.lol.ru/user/devops/.staging/job_201311211820_0001/libjars/zookeeper-3.4.5-cdh4.4.0.jar:/mapred/local/taskTracker/devops/distcache/1687376446253429240_583715611_2065882544/test-hdfs.kyc.lol.ru/user/devops/.staging/job_201311211820_0001/libjars/hadoop-common-2.0.0-cdh4.4.0.jar:/mapred/local/taskTracker/devops/distcache/3844262747599029011_-111081867_2065882617/\n> test-hdfs.kyc.lol.ru/user/devops/.staging/job_201311211820_0001/libjars/hbase-0.94.6-cdh4.4.0-security.jar:/mapred/local/taskTracker/devops/distcache/6701036034252698344_543612586_2065882645/test-hdfs.kyc.lol.ru/user/devops/.staging/job_201311211820_0001/libjars/guava-11.0.2.jar:/mapred/local/taskTracker/devops/distcache/-6753792723180791103_-88264308_2065882662/test-hdfs.kyc.lol.ru/user/devops/.staging/job_201311211820_0001/libjars/hraven-core-0.9.6-SNAPSHOT.jar:/mapred/local/taskTracker/devops/distcache/-1453086732968140364_1970561896_2065882690/test-hdfs.kyc.lol.ru/user/devops/.staging/job_201311211820_0001/libjars/hadoop-core-2.0.0-mr1-cdh4.4.0.jar:/mapred/local/taskTracker/devops/jobcache/job_201311211820_0001/attempt_201311211820_0001_m_000002_0/work\n> 2013-11-21 18:49:15,954 INFO org.apache.zookeeper.ZooKeeper: Client\n> environment:java.library.path=/opt/cloudera/parcels/CDH-4.4.0-1.cdh4.4.0.p0.39/lib/hadoop-0.20-mapreduce/lib/native/Linux-amd64-64:/mapred/local/taskTracker/devops/jobcache/job_201311211820_0001/attempt_201311211820_0001_m_000002_0/work\n> 2013-11-21 18:49:15,955 INFO org.apache.zookeeper.ZooKeeper: Client\n> environment:java.io.tmpdir=/mapred/local/taskTracker/devops/jobcache/job_201311211820_0001/attempt_201311211820_0001_m_000002_0/work/tmp\n> 2013-11-21 18:49:15,955 INFO org.apache.zookeeper.ZooKeeper: Client\n> environment:java.compiler=\n> 2013-11-21 18:49:15,955 INFO org.apache.zookeeper.ZooKeeper: Client\n> environment:os.name=Linux\n> 2013-11-21 18:49:15,955 INFO org.apache.zookeeper.ZooKeeper: Client\n> environment:os.arch=amd64\n> 2013-11-21 18:49:15,955 INFO org.apache.zookeeper.ZooKeeper: Client\n> environment:os.version=2.6.32-358.18.1.el6.x86_64\n> 2013-11-21 18:49:15,955 INFO org.apache.zookeeper.ZooKeeper: Client\n> environment:user.name=mapred\n> 2013-11-21 18:49:15,955 INFO org.apache.zookeeper.ZooKeeper: Client\n> environment:user.home=/var/lib/hadoop-mapreduce\n> 2013-11-21 18:49:15,955 INFO org.apache.zookeeper.ZooKeeper: Client\n> environment:user.dir=/mapred/local/taskTracker/devops/jobcache/job_201311211820_0001/attempt_201311211820_0001_m_000002_0/work\n> 2013-11-21 18:49:15,956 INFO org.apache.zookeeper.ZooKeeper: Initiating\n> client connection, connectString=localhost:2181 sessionTimeout=180000\n> watcher=hconnection\n> 2013-11-21 18:49:15,979 INFO org.apache.zookeeper.ClientCnxn: Opening\n> socket connection to server localhost/127.0.0.1:2181. Will not attempt to\n> authenticate using SASL (Unable to locate a login configuration)\n> 2013-11-21 18:49:15,981 INFO\n> org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper: The identifier of\n> this process is 11342@test-mr\n> 2013-11-21 18:49:15,987 WARN org.apache.zookeeper.ClientCnxn: Session 0x0\n> for server null, unexpected error, closing socket connection and attempting\n> reconnect\n> java.net.ConnectException: Connection refused\n> at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)\n> at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:599)\n> at\n> org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:350)\n> at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1068)\n> 2013-11-21 18:49:16,097 WARN\n> org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper: Possibly transient\n> ZooKeeper exception:\n> org.apache.zookeeper.KeeperException$ConnectionLossException:\n> KeeperErrorCode = ConnectionLoss for /hbase/hbaseid\n> 2013-11-21 18:49:16,097 INFO org.apache.hadoop.hbase.util.RetryCounter:\n> Sleeping 2000ms before retry #1 https://github.com/twitter/hraven/pull/1\n> ...\n> 2013-11-21 18:49:16,099 INFO org.apache.zookeeper.ClientCnxn: Opening\n> socket connection to server localhost/0:0:0:0:0:0:0:1:2181. Will not\n> attempt to authenticate using SASL (Unable to locate a login configuration)\n> 2013-11-21 18:49:16,099 WARN org.apache.zookeeper.ClientCnxn: Session 0x0\n> for server null, unexpected error, closing socket connection and attempting\n> reconnect\n> java.net.ConnectException: Connection refused\n> at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)\n> at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:599)\n> at\n> org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:350)\n> at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1068)\n> 2013-11-21 18:49:17,200 INFO org.apache.zookeeper.ClientCnxn: Opening\n> socket connection to server localhost/127.0.0.1:2181. Will not attempt to\n> authenticate using SASL (Unable to locate a login\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/twitter/hraven/issues/36#issuecomment-29017767\n> .\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/29018498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5281296", "body": "I think this should be an interface, rather than an abstract class, since there is no shared implementation.  Also I think naming this \"JobHistoryFileParser\" would be better than \"JobHistoryFileDecipher\".  The word \"decipher\" implies that the log files are obfuscated or encrypted in some way.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5281296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5281342", "body": "This method should similarly be named parse()\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5281342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5281429", "body": "Should the parse() implementation throw this exception, rather than returning a boolean and creating it here?  The implementation itself will have more context on what actually went wrong.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5281429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5281673", "body": "For the moment, it doesn't seem like we need the JobKey parameter here, only the InputStream for the history file.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5281673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5281742", "body": "Do we need to retain this reference to a parser instance?  I think it would be better to remove this, make the createJobHistoryFileParser() method static, and have it always return a new instance.  Unless we suspect that creating a parser for 2.0 will be an expensive operation.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5281742/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5281795", "body": "I think it would be safer to throw an exception here instead of returning null.  Calling this will a null InputStream is really an error case in my opinion.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5281795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5281846", "body": "throw IllegalArgumentException here, since 2.0 is not supported yet.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5281846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5282123", "body": "It would be better to use something like the actual 1.0 history file format here, something like this string:\n\n\"Meta VERSION=\\\"1\\\" .\\n\" +\n\"Job JOBID=\\\"job_201301010000_12345\\\"\" \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5282123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5285035", "body": "You can drop this check now that you've modified the factory to always return an instance or throw an exception.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5285035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5323907", "body": "Drop this line as it's no longer true.  Instead add a @throws line for ProcessingException\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5323907/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5323983", "body": "This should use the constructor version: ProcessingException(String, Throwable)\n\nOtherwise you lose the stack trace of the underlying IOException\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5323983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5324001", "body": "Should declare that ProcessingException is thrown\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5324001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5324085", "body": "nit: add braces for each if/else statement\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5324085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5324088", "body": "same here\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5324088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5672499", "body": "Looking at a sample file, I think \"TOTAL_COUNTERS\" is the same as what we're treating as just \"COUNTERS\" in Hadoop 1.0.  So I don't think we need this extra prefix.  Correct me if I'm wrong.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5672499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5672602", "body": "Should both of these be using the same prefix?  Having TASK_COUNTER and TASK_ATTEMPT share seems okay, provided that TASK_COUNTER is only stored in a task row, and TASK_ATTEMPT is only reported/stored in a task attempt row, ie. we don't have collisions for the same row.\n\nAre these different from task-level counters in Hadoop 1.0?  Those use COUNTER_COLUMN_PREFIX currently (\"g\").  If these are the same this we should stick with the current format.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5672602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5672615", "body": "Why are all of these commented out?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5672615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5672671", "body": "Please undo all of the formatting changes in this file.  Formatting-only changes make it difficult to track when lines of code changed through standard tools.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5672671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5672685", "body": "Please undo formatting changes.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5672685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5672740", "body": "Please undo formatting changes\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5672740/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5672823", "body": "Since eventRecordNames is static, the initialization of these should be static as well, outside of an instance constructor.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5672823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5672830", "body": "Should be COUNTER_NAMES\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5672830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5672834", "body": "Should be EVENT_RECORD_NAMES\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5672834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5672847", "body": "Should be OLD_TO_NEW_MAPPING\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5672847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5672931", "body": "Some of this boilerplate can be omitted by expanding the Hadoop2RecordType enum into a full-fledged class.  Let's review in person.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5672931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5673002", "body": "Since FSDataInputStream extends InputStream and the Hadoop 1.0 version originally used InputStream, why was the parse() method changed to take String historyFileContents?  This will result in unnecessary byte[] -> String -> byte[] conversions.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5673002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5673158", "body": "Since we don't need the String form, the byte[] -> String conversion (and subsequent String -> byte[] reconversion) is unnecessary.  Let's just use byte[] here.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5673158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5885653", "body": "This seems a little unexpected if it's possible we're reading a v1 file.  Maybe we should return null in this case instead?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5885653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5934819", "body": "I see.  Still seems a little weird that in the 2.0 case it returns the version string, and in the 1.0 case it returns a truncated string (doesn't seem quite consistent with the method name).  I would either name it getVersion2StringFromFile or change it to return a boolean value and do the string comparison in this method -- hasVersion2String().  But I guess it works as is as well.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5934819/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5935179", "body": "Fix the text here (no longer uses InputStream).  Maybe make it \"Job history contents should not be null\".\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5935179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5935446", "body": "Why is a static variable being populated in the constructor?  Move this into a static block instead.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5935446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5994222", "body": "No need to duplication this functionality betwee printAllJobPuts() and printAllTaskPuts().  You should just have a single method: printPuts(List<Put> puts).  Then pass either jobPuts or taskPuts as an argument.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5994222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5994409", "body": "We don't need a separate call to rawService here.  We already have the history file contents present in the Result instance passed in to the map() method.  Just do something like (taken from JobHistoryRawService.getJobHistoryInputStreamFromResult()):\n\n```\nKeyValue keyValue = result.getColumnLatest(Constants.RAW_FAM_BYTES,\n    Constants.JOBHISTORY_COL_BYTES);\n\nbyte[] historyFileContents = null;\nif (keyValue == null) {\n  throw new MissingColumnInResultException(Constants.RAW_FAM_BYTES,\n      Constants.JOBHISTORY_COL_BYTES);\n} else {\n  historyFileContents = keyValue.getValue();\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5994409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5994615", "body": "These row keys don't look right to me.  We might be missing something in parsing the task attempts for 2.0.  The row key for a task attempt should only differ from the related task row by an additional \"_[0-9]+\".\n\nSo, for example, for the two keys:\n-          \"cluster1!user!Sleep!1!job_1329348432655_0001!m_000009\",\n-          \"cluster1!user!Sleep!1!job_1329348432655_0001!attempt_1329348432655_0001_m_000009_0\",\n\nI would instead expect to see:\n-          \"cluster1!user!Sleep!1!job_1329348432655_0001!m_000009\",\n-          \"cluster1!user!Sleep!1!job_1329348432655_0001!m_000009_0\",\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/5994615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/6091068", "body": "Yes, this does create a new Counter instance every time, so there is a fair amount of allocation that can happen. The only easy way I see around this is to make the Counter class no longer immutable, which I'm not sure is something we want to do, given that from the rest of the application standpoint, it is read-only data.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/6091068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "maysamyabandeh": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/hraven/pulls/116", "title": "Integrating HadoopJobMonitor to hRaven", "body": "", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hraven/issues/comments/28105893", "body": "Ship it! Overall looks good to me.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/28105893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/30155353", "body": "I am not clear on the whole 75% logic but overall LGTM.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/30155353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/30442096", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/30442096/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/34264336", "body": "Thanks Vrushali for the comments. I will retry later when vulture is more mature for a public release.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/34264336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49210427", "body": "Not sure what the problem of Travis is? When I run locally the tests pass:\n\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary:\n[INFO] \n[INFO] hRaven Project .................................... SUCCESS [0.002s]\n[INFO] hRaven - core ..................................... SUCCESS [5:59.290s]\n[INFO] hRaven - etl ...................................... SUCCESS [32.446s]\n[INFO] hRaven-assembly ................................... SUCCESS [0.001s]\n[INFO] hraven-hadoopJobMonitor ........................... SUCCESS [4.692s]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 6:36.704s\n[INFO] Finished at: Wed Jul 16 11:18:00 PDT 2014\n[INFO] Final Memory: 16M/210M\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49210427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49231793", "body": "release is taken care of in the latest commit by using the parent hraven pom.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49231793/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49535230", "body": "All the unit tests are passing now. Please let me know if there is any other concern remained unaddressed.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49535230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7541675", "body": "We do not check for the exceptional case of having both hadoop1 and hadoop2 user names blank. It is ok if we believe that will never happen, but I see that we do check for this exceptional case in JobHistoryService.java \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7541675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7541792", "body": "Seems that we can benefit from the following helper function:\ngetEither(Configuration, String[] candidateParams, String default),\nwhich iterates over candidateParams and return the first that is not blank, or returns the default.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/7541792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8203432", "body": "I am not if it is better to use the constants directly from the hadoop libs (such as JobConf.MAP_MEMORY_MB, ...) or it is better to redefine them in hRaven.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8203432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8203839", "body": "I guess there must be a good reason to have two separate methods for extracting the long value: one directly from bytes and one after conversion to String. Nevertheless it would help if we document this reason. Also, one might consider combining these two methods as most of the body are the same.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8203839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8204083", "body": "Later in Line 99 we already check for existence of the qualifier. So, it seems that the check here is redundant.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8204083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8204298", "body": "It seems that Bytes.toBytes could be moved outside the loop.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8204298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8204362", "body": "I am confused about the purpose of the loop. Currently javaOpts is set based on only the last Put object in the jobConfPuts list. Is that what we wanted?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8204362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8204423", "body": "if javaOpts is blank printing it might not help. How about printing the qualifier's name instead.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8204423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8204609", "body": "I am confused: if it is in bytes and we want to convert to MB, should not we divide it by 2^20 instead of 2^10?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8204609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8204657", "body": "I am assuming the rest of this function is correct since I did not have a good idea how the input string would look like. For future readers of the code, it might help to put an example string as a comment.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8204657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8204862", "body": "How about making it final?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8204862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8205165", "body": "Looking at the rest of the code, it seems that returning this -1L special value eventually leads to throwing an exception:\n- if (postPuts == null) {\n-        throw new ProcessingException\n  If that an exceptional case, it might be a good idea to throw an exception (instead of return -1) from the very first moment that we face it.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8205165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8213117", "body": "Then I am confused about the lastChar logic. And also why split over space (Line 81)?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8213117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8214211", "body": "makes sense. (and I guess the last cannot be 'k' or 'g'.)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8214211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8214314", "body": "What if XmxStr.length < 1? Is it an error? Is it ok that we return 0L in this case?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8214314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8305101", "body": "Curious why not using Configuration.getLong(String name, long defaultValue)?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8305101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8305453", "body": "minor: @return xmx value in MB\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8305453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8305780", "body": "It might be a good idea to use \"default:\" to throw an exception here, rather than relying on 0L to represent such error.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8305780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8305896", "body": "How about uberized case mentioned in the comments at Line 112.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8305896/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8305938", "body": "How about AM's memory mentioned at Line 111?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8305938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8306024", "body": "At Line 122, we say that we do not want to throw an exception. But it seems that we still do it!\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8306024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8306296", "body": "It seems that getMegaByteMillisPut never returns null!\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8306296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8306368", "body": "minor: it appears that JobKeyConverter could be singleton.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8306368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8310698", "body": "That sounds great! I was actually referring to the check later at Line 121:\nif (Xmx75 == 0L) {\n      LOG.error(\"Xmx value is 0? check why\");\nBut I guess I now understand that the purpose of the check above is for accidental mistakes and 0L did not mean to be returned from getXmxValue. That would be fine. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/8310698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14914694", "body": "There is a bug with that version: https://bugs.launchpad.net/jmxterm/+bug/1240813\njmxterm is not a very stable solution. It is more of a temporary approach to be replaced in future.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/14914694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "angadsingh": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/hraven/pulls/115", "title": "Create debian from hraven-assembly using jdeb maven plugin", "body": "mvn clean package will produce a .deb in hraven-assembly/target/\n", "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/112", "title": "Sample falcon config for hraven", "body": "See http://falcon.incubator.apache.org/ for details\n", "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/111", "title": "bugfix: getLastSuccessfulProcessRecord not taking processingDirectory", "body": "Needed for example, for the ability to run hraven in an idempotent way for each day/shard's run and being able to rerun a shard's run and expect hraven to just resume instead of reprocessing everything.\n", "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/109", "title": "Hbase 0.90.x compatibility [remove dependency of fuzzy row filter]", "body": "", "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/108", "title": "Set tmpjars for hadoop", "body": "to be able to find hraven-core and other required libs.\n\nthis is needed when hraven jobs are spawned from oozie/falcon.\n", "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/107", "title": "ability to specify minModificationTimeMillis as arg", "body": "as an argument to JobFilePreProcessor. Only files after this timestamp will be picked up. Still honor lastProcessRecord.\n", "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/105", "title": "Path exclusion/inclusion filtering", "body": "Ability to specify include and exclude substrings for job history files.\n\nAlso for this to work, added logic to FileLister.pruneListBySize method to prune orphan job confs and renamed to just pruneList\n", "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/104", "title": "Prefix hraven to all hbase tables", "body": "Useful to namespace hraven tables separately in a production hbase cluster.\n", "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/103", "title": "glob list instead of simple hdfs list and pattern support for input", "body": "Right now hraven accepts a simple hdfs path as input folder and will fetch all job history + conf files underneath it. This pull request adds support for specifying a pattern with wildcards (*) and using hdfs api's globStatus method to list files instead of hraven's recursive listFiles method. This way one can easily shard hraven's job to different years/months/days.\n", "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/102", "title": "Refactoring hraven for multiple sink support", "body": "Generic object model and abstraction for output records of JobFileProcessor's mapper instead of directly emitting Hbase puts at the lowest level of code hierarchy. Used MultipleOutputs to allow sinking to different sinks (graphite, hbase, etc.) and handle specifically writing of records at the sink's OutputFormat level.  Added graphite sink and refactored hbase storage to work as a sink. Changes no hraven behaviour.\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47452287", "body": "2 more changes which are subsequent to this one. will create PRs when this one is accepted:\nhttps://github.com/angadsingh/hraven/compare/twitter:master...optional-task-history-processing\nhttps://github.com/angadsingh/hraven/compare/twitter:master...graphite-key-mapping\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47452287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "shrijeet": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/hraven/pulls/101", "title": "Upgrade jackson and jersey", "body": "The patch upgrades jackson to 2.x and jersey 1.8.x. Jackson 2.x has moved to new namespace, the changes in java files are mostly fixing imports based on new name space. Additionally CustomDeserializerFactory has been removed, the new approach uses Module for adding custom deserializers.\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47300308", "body": "I @vrushalic, I explained the reasoning on user list. Pasting same message here: \n\n\"We are planning to use our own rest server implementation which is based on dropwizard. But want to avoid rewriting the existing Java beans which are serialized into JSON. In order to do so, we would prefer hraven-core & custom rest service use same version of Jackson. The rest library uses Jackson 2.x, hence this pull request.\n\nI realize this may not be compelling enough reason for hraven-core to upgrade its dependency, but I am hoping this is perceived as harmless change & gets accepted. Unit tests have passed & I am running end to end test at the time of writing this message. \"\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47300308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47388456", "body": "We ran end to end test (ran ETL on hadoop 1.x logs and served the JSON result from the hraven-core's rest server) & found no issues after upgrade. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47388456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "seregasheypak": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hraven/issues/comments/29017767", "body": "Here is a part of task log. I've truncated \"infinite\" retries zookeeper client to connect. It tries to connect for many times and then task_attempt is killed (default 600 seconds). Zookeeper on server size says that unexpected disconnect happens. \n\nThe file it tires to upload is ~1MB\n\nnnotations-2.0.0-cdh4.4.0.jar:/opt/cloudera/parcels/CDH-4.4.0-1.cdh4.4.0.p0.39/lib/hadoop/hadoop-common-2.0.0-cdh4.4.0-tests.jar:/opt/cloudera/parcels/CDH-4.4.0-1.cdh4.4.0.p0.39/lib/hadoop/hadoop-auth-2.0.0-cdh4.4.0.jar:/mapred/local/taskTracker/devops/jobcache/job_201311211820_0001/jars/classes:/mapred/local/taskTracker/devops/jobcache/job_201311211820_0001/jars/job.jar:/mapred/local/taskTracker/devops/distcache/-3417913595055156476_-1440846171_2065882471/test-hdfs.kyc.lol.ru/user/devops/.staging/job_201311211820_0001/libjars/protobuf-java-2.4.0a.jar:/mapred/local/taskTracker/devops/distcache/3192313508334488433_-1543259016_2065882504/test-hdfs.kyc.lol.ru/user/devops/.staging/job_201311211820_0001/libjars/zookeeper-3.4.5-cdh4.4.0.jar:/mapred/local/taskTracker/devops/distcache/1687376446253429240_583715611_2065882544/test-hdfs.kyc.lol.ru/user/devops/.staging/job_201311211820_0001/libjars/hadoop-common-2.0.0-cdh4.4.0.jar:/mapred/local/taskTracker/devops/distcache/3844262747599029011_-111081867_2065882617/test-hdfs.kyc.lol.ru/user/devops/.staging/job_201311211820_0001/libjars/hbase-0.94.6-cdh4.4.0-security.jar:/mapred/local/taskTracker/devops/distcache/6701036034252698344_543612586_2065882645/test-hdfs.kyc.lol.ru/user/devops/.staging/job_201311211820_0001/libjars/guava-11.0.2.jar:/mapred/local/taskTracker/devops/distcache/-6753792723180791103_-88264308_2065882662/test-hdfs.kyc.lol.ru/user/devops/.staging/job_201311211820_0001/libjars/hraven-core-0.9.6-SNAPSHOT.jar:/mapred/local/taskTracker/devops/distcache/-1453086732968140364_1970561896_2065882690/test-hdfs.kyc.lol.ru/user/devops/.staging/job_201311211820_0001/libjars/hadoop-core-2.0.0-mr1-cdh4.4.0.jar:/mapred/local/taskTracker/devops/jobcache/job_201311211820_0001/attempt_201311211820_0001_m_000002_0/work\n2013-11-21 18:49:15,954 INFO org.apache.zookeeper.ZooKeeper: Client environment:java.library.path=/opt/cloudera/parcels/CDH-4.4.0-1.cdh4.4.0.p0.39/lib/hadoop-0.20-mapreduce/lib/native/Linux-amd64-64:/mapred/local/taskTracker/devops/jobcache/job_201311211820_0001/attempt_201311211820_0001_m_000002_0/work\n2013-11-21 18:49:15,955 INFO org.apache.zookeeper.ZooKeeper: Client environment:java.io.tmpdir=/mapred/local/taskTracker/devops/jobcache/job_201311211820_0001/attempt_201311211820_0001_m_000002_0/work/tmp\n2013-11-21 18:49:15,955 INFO org.apache.zookeeper.ZooKeeper: Client environment:java.compiler=<NA>\n2013-11-21 18:49:15,955 INFO org.apache.zookeeper.ZooKeeper: Client environment:os.name=Linux\n2013-11-21 18:49:15,955 INFO org.apache.zookeeper.ZooKeeper: Client environment:os.arch=amd64\n2013-11-21 18:49:15,955 INFO org.apache.zookeeper.ZooKeeper: Client environment:os.version=2.6.32-358.18.1.el6.x86_64\n2013-11-21 18:49:15,955 INFO org.apache.zookeeper.ZooKeeper: Client environment:user.name=mapred\n2013-11-21 18:49:15,955 INFO org.apache.zookeeper.ZooKeeper: Client environment:user.home=/var/lib/hadoop-mapreduce\n2013-11-21 18:49:15,955 INFO org.apache.zookeeper.ZooKeeper: Client environment:user.dir=/mapred/local/taskTracker/devops/jobcache/job_201311211820_0001/attempt_201311211820_0001_m_000002_0/work\n2013-11-21 18:49:15,956 INFO org.apache.zookeeper.ZooKeeper: Initiating client connection, connectString=localhost:2181 sessionTimeout=180000 watcher=hconnection\n2013-11-21 18:49:15,979 INFO org.apache.zookeeper.ClientCnxn: Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (Unable to locate a login configuration)\n2013-11-21 18:49:15,981 INFO org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper: The identifier of this process is 11342@test-mr\n2013-11-21 18:49:15,987 WARN org.apache.zookeeper.ClientCnxn: Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect\njava.net.ConnectException: Connection refused\n    at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)\n    at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:599)\n    at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:350)\n    at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1068)\n2013-11-21 18:49:16,097 WARN org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper: Possibly transient ZooKeeper exception: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /hbase/hbaseid\n2013-11-21 18:49:16,097 INFO org.apache.hadoop.hbase.util.RetryCounter: Sleeping 2000ms before retry #1...\n2013-11-21 18:49:16,099 INFO org.apache.zookeeper.ClientCnxn: Opening socket connection to server localhost/0:0:0:0:0:0:0:1:2181. Will not attempt to authenticate using SASL (Unable to locate a login configuration)\n2013-11-21 18:49:16,099 WARN org.apache.zookeeper.ClientCnxn: Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect\njava.net.ConnectException: Connection refused\n    at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)\n    at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:599)\n    at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:350)\n    at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1068)\n2013-11-21 18:49:17,200 INFO org.apache.zookeeper.ClientCnxn: Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (Unable to locate a login \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/29017767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/29018800", "body": "Ok, I got it. I've deployed configuration for each host (it's Cloudera Manager functionality) and explicitly specified a path to /etc/hadoop/hbase. Maybe something went wrong.\n\nI'll check tomorrow the task classpath, it's printed to log. Now it's late night :)\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/29018800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/29062997", "body": "I've hardcoded $HBASE_CONF_DIR=/etc/hbase/conf in scripts:\njobFileLoader.sh\njobFilePreprocessor.sh\njobFileProcessor.sh\n\nSo it works, thank you for your help. We do plan to run it using oozie and refactor a little.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/29062997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lohitvijayarenu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hraven/issues/comments/30980044", "body": "Changes look good. Even hadoop assuming 0 many places where counters are not know, so the change seems reasonable. ShipIt\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/30980044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/34228079", "body": "Overall looks good to me.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/34228079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9474394", "body": "Just about code style. This could be rolled into helper function where jobConf == null and LOG.info could be done once by passing Constancts.MAP_MEMORY_MB_CONF_KEY and Constants.REDUCE_MEMORY_MB_CONF_KEY. \n\nIf not, jobConf == null can be check outside and done only once. \n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/9474394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "amatsukawa": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hraven/issues/comments/44900086", "body": "This is indeed the entirety of the change :)\nJust added a new endpoint that is almost identical to /jobs/... but pulls task info and returns that instead.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/44900086/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/44918938", "body": "Updated the REST client with some functionality to pull data for a given `Flow` object and hydrated with task information. Went with this style since we opted against adding a query parameter to the REST endpoints to turn on retrieving task info for `/flow` and `/job`.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/44918938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/45690234", "body": "@jrottinghuis @vrushalic pulled out the UrlDataLoader class as its own outer class, as discussed.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/45690234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/45691116", "body": "@vrushalic thx for the review, added unit tests.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/45691116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13318666", "body": "My understand was that `@Path(\"tasks/{cluster}/{jobId}\")` sets the URL of this REST endpoint, and `@Produces(MediaType.APPLICATION_JSON)` sets the `ContentType: application/json` in the header, both seem to be necessary?\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13318666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13319128", "body": "Oh sorry I realize now you mean the serialization context, I will look into it.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13319128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13351977", "body": "Since they were duplicated between all the fetchFlow\\* methods I moved them to right before the URL call in `retrieveFlowsFromURL`\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13351977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13352016", "body": "Noted, I just wanted some way to run that code path :)\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13352016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13352208", "body": "Oops, added sorry.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/pulls/comments/13352208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "coveralls": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47687946", "body": "[![Coverage Status](https://coveralls.io/builds/922371/badge)](https://coveralls.io/builds/922371)\n\nChanges Unknown when pulling **620f15eddf7deeb5de08e16d1595a842668b2b14 on add-coveralls** into *\\* on master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47687946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47886338", "body": "[![Coverage Status](https://coveralls.io/builds/928634/badge)](https://coveralls.io/builds/928634)\n\nCoverage remained the same when pulling **7509a42aebfaa31c65e1d71d30ed06be628b2f96 on angadsingh:debian** into **a5f1cc33d5663cd8ca919f2961fff6fd94fd72bc on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47886338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47940868", "body": "[![Coverage Status](https://coveralls.io/builds/929854/badge)](https://coveralls.io/builds/929854)\n\nCoverage remained the same when pulling **ece9572f37c997833fa647811c0b349c2b272d8e on angadsingh:debian** into **a5f1cc33d5663cd8ca919f2961fff6fd94fd72bc on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/47940868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/48796760", "body": "[![Coverage Status](https://coveralls.io/builds/959040/badge)](https://coveralls.io/builds/959040)\n\nChanges Unknown when pulling **ff1b1ed29b6be4b19bbac25258da58fa3a9885a0 on maysamyabandeh:master** into *\\* on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/48796760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/48985202", "body": "[![Coverage Status](https://coveralls.io/builds/967527/badge)](https://coveralls.io/builds/967527)\n\nChanges Unknown when pulling **a6014552e3eb2af4efd797a4a3595f37eb4e95d1 on maysamyabandeh:master** into *\\* on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/48985202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49249211", "body": "[![Coverage Status](https://coveralls.io/builds/975793/badge)](https://coveralls.io/builds/975793)\n\nChanges Unknown when pulling **fc4c5769c3aecf3d30e7218945817aa022ee7bd0 on maysamyabandeh:master** into *\\* on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49249211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49484369", "body": "[![Coverage Status](https://coveralls.io/builds/983806/badge)](https://coveralls.io/builds/983806)\n\nChanges Unknown when pulling **ee1798768faf27d1c155008434b4492d8e94523d on maysamyabandeh:master** into *\\* on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49484369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49491281", "body": "[![Coverage Status](https://coveralls.io/builds/984033/badge)](https://coveralls.io/builds/984033)\n\nChanges Unknown when pulling **cc192ac1bc555e237eb95ca51d8ea500206c8992 on maysamyabandeh:master** into *\\* on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49491281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49495890", "body": "[![Coverage Status](https://coveralls.io/builds/984213/badge)](https://coveralls.io/builds/984213)\n\nChanges Unknown when pulling **6e138cc2e003f0547c31508b3e9d69290cc350e8 on maysamyabandeh:master** into *\\* on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49495890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49496560", "body": "[![Coverage Status](https://coveralls.io/builds/984235/badge)](https://coveralls.io/builds/984235)\n\nChanges Unknown when pulling **c7c5ae1b63af5305b482680413c57f6e0b6dfbf3 on maysamyabandeh:master** into *\\* on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49496560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49532005", "body": "[![Coverage Status](https://coveralls.io/builds/985892/badge)](https://coveralls.io/builds/985892)\n\nChanges Unknown when pulling **2f8f72aedb1d8e55333e3c93bb2cb15dfd5740ef on maysamyabandeh:master** into *\\* on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49532005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49533578", "body": "[![Coverage Status](https://coveralls.io/builds/985979/badge)](https://coveralls.io/builds/985979)\n\nChanges Unknown when pulling **1358057960c9ebcc2b6ec8988ea192ef9401fa01 on maysamyabandeh:master** into *\\* on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49533578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49535202", "body": "[![Coverage Status](https://coveralls.io/builds/986122/badge)](https://coveralls.io/builds/986122)\n\nChanges Unknown when pulling **145bb23f12ba095f82711adefe347a97ffa954fd on maysamyabandeh:master** into *\\* on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49535202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49808868", "body": "[![Coverage Status](https://coveralls.io/builds/995457/badge)](https://coveralls.io/builds/995457)\n\nChanges Unknown when pulling **dc3675d56b1b98624635d79c7f2af54b16a0280a on maysamyabandeh:master** into *\\* on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49808868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49817252", "body": "[![Coverage Status](https://coveralls.io/builds/995771/badge)](https://coveralls.io/builds/995771)\n\nChanges Unknown when pulling **ca072171fad13d9ae607575558bb85b19a8d422e on maysamyabandeh:master** into *\\* on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/49817252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/56712334", "body": "[![Coverage Status](https://coveralls.io/builds/1252099/badge)](https://coveralls.io/builds/1252099)\n\nChanges Unknown when pulling **0a52c3a740a16cb2100b553cb8eeb97208574e00 on vrushalic:add_jobqueue_change** into *\\* on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/56712334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/57025564", "body": "[![Coverage Status](https://coveralls.io/builds/1262613/badge)](https://coveralls.io/builds/1262613)\n\nChanges Unknown when pulling **25ca51b343bd3ed1608f6f3ab4daf40b747ab00e on vrushalic:add_jobqueue_change** into *\\* on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/57025564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/57210915", "body": "[![Coverage Status](https://coveralls.io/builds/1270759/badge)](https://coveralls.io/builds/1270759)\n\nCoverage decreased (-0.01%) when pulling **1fd17f26c6045368840f1d68ed7a1c1540bb0dae on vrushalic:memory_nullfying** into **797477b661c5a63f391d922f9d384a662d980d8d on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/57210915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/58726458", "body": "[![Coverage Status](https://coveralls.io/builds/1321690/badge)](https://coveralls.io/builds/1321690)\n\nCoverage remained the same when pulling **067f1ba25f1e645c473f7acce1ef7c5b693abff7 on vrushalic:fix_json_serialization** into **e790f8e6c22fd5b7c568dc5ddf011aa4cf9be4d7 on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/58726458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/62232536", "body": "[![Coverage Status](https://coveralls.io/builds/1444881/badge)](https://coveralls.io/builds/1444881)\n\nCoverage increased (+7.76%) when pulling **34f6e780a5189c83b4b31b90b959bbdf90f4ce3c on vrushalic:preprocess_spark** into **0dd1bef4d8b6eeda76788f64af9876eb4d3c9caf on twitter:twitter_only**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/62232536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/62615813", "body": "[![Coverage Status](https://coveralls.io/builds/1460443/badge)](https://coveralls.io/builds/1460443)\n\nCoverage increased (+8.0%) when pulling **a2dbc9381599b30de3eb22519ce8b275366f304f on vrushalic:preprocess_spark** into **0dd1bef4d8b6eeda76788f64af9876eb4d3c9caf on twitter:twitter_only**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/62615813/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/62617639", "body": "[![Coverage Status](https://coveralls.io/builds/1460504/badge)](https://coveralls.io/builds/1460504)\n\nCoverage increased (+8.0%) when pulling **a2dbc9381599b30de3eb22519ce8b275366f304f on vrushalic:preprocess_spark** into **0dd1bef4d8b6eeda76788f64af9876eb4d3c9caf on twitter:twitter_only**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/62617639/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/62780305", "body": "[![Coverage Status](https://coveralls.io/builds/1465918/badge)](https://coveralls.io/builds/1465918)\n\nChanges Unknown when pulling **ba338ecf13e82303d4a8c2f0be651b0603dc68fa on vrushalic:etl_aggregate_2** into *\\* on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/62780305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/63397145", "body": "[![Coverage Status](https://coveralls.io/builds/1487928/badge)](https://coveralls.io/builds/1487928)\n\nChanges Unknown when pulling **71d4a5b1ff035772ea85a75b9731ac0c314e582e on vrushalic:etl_aggregate_2** into *\\* on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/63397145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/63398501", "body": "[![Coverage Status](https://coveralls.io/builds/1487993/badge)](https://coveralls.io/builds/1487993)\n\nChanges Unknown when pulling **71d4a5b1ff035772ea85a75b9731ac0c314e582e on vrushalic:etl_aggregate_2** into *\\* on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/63398501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/63398577", "body": "[![Coverage Status](https://coveralls.io/builds/1488001/badge)](https://coveralls.io/builds/1488001)\n\nChanges Unknown when pulling **71d4a5b1ff035772ea85a75b9731ac0c314e582e on vrushalic:etl_aggregate_2** into *\\* on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/63398577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/63543774", "body": "[![Coverage Status](https://coveralls.io/builds/1492995/badge)](https://coveralls.io/builds/1492995)\n\nCoverage increased (+8.22%) when pulling **517625199902607cd1e3b7c7e790686479da7e4a on vrushalic:preprocess_spark** into **0dd1bef4d8b6eeda76788f64af9876eb4d3c9caf on twitter:twitter_only**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/63543774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/63545537", "body": "[![Coverage Status](https://coveralls.io/builds/1493063/badge)](https://coveralls.io/builds/1493063)\n\nCoverage increased (+8.22%) when pulling **517625199902607cd1e3b7c7e790686479da7e4a on vrushalic:preprocess_spark** into **0dd1bef4d8b6eeda76788f64af9876eb4d3c9caf on twitter:twitter_only**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/63545537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/63875272", "body": "[![Coverage Status](https://coveralls.io/builds/1504907/badge)](https://coveralls.io/builds/1504907)\n\nCoverage increased (+8.22%) when pulling **2680bc351592af0cfe9ae840cbd33af696625bd9 on vrushalic:preprocess_spark** into **0dd1bef4d8b6eeda76788f64af9876eb4d3c9caf on twitter:twitter_only**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/63875272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/64070636", "body": "[![Coverage Status](https://coveralls.io/builds/1512157/badge)](https://coveralls.io/builds/1512157)\n\nChanges Unknown when pulling **9661ad2a9a54e0562eec45c989827f8df7838333 on vrushalic:etl_aggregate_2** into *\\* on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/64070636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/65518669", "body": "[![Coverage Status](https://coveralls.io/builds/1563502/badge)](https://coveralls.io/builds/1563502)\n\nCoverage increased (+8.22%) when pulling **268305ab5a01e6f77c6ccb2543eea579170201b8 on vrushalic:preprocess_spark** into **0dd1bef4d8b6eeda76788f64af9876eb4d3c9caf on twitter:twitter_only**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/65518669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/66598393", "body": "[![Coverage Status](https://coveralls.io/builds/1593525/badge)](https://coveralls.io/builds/1593525)\n\nCoverage decreased (-5.42%) when pulling **6a0c07e67a7546492c28a80e9cd9e9527a276a66 on vrushalic:include_process_filesubstring** into **748cd90d95640d3ff5ce9b41e29a71dff9dfd759 on twitter:twitter_only**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/66598393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/66598441", "body": "[![Coverage Status](https://coveralls.io/builds/1593528/badge)](https://coveralls.io/builds/1593528)\n\nCoverage decreased (-5.42%) when pulling **6a0c07e67a7546492c28a80e9cd9e9527a276a66 on vrushalic:include_process_filesubstring** into **748cd90d95640d3ff5ce9b41e29a71dff9dfd759 on twitter:twitter_only**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/66598441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/66601480", "body": "[![Coverage Status](https://coveralls.io/builds/1594201/badge)](https://coveralls.io/builds/1594201)\n\nCoverage decreased (-0.01%) when pulling **0a352dd1872a709d0d96349ab61b7f98e8b861e4 on vrushalic:check_raw_job_status_before_processing_in_mapper** into **748cd90d95640d3ff5ce9b41e29a71dff9dfd759 on twitter:twitter_only**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/66601480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/67057637", "body": "[![Coverage Status](https://coveralls.io/builds/1614814/badge)](https://coveralls.io/builds/1614814)\n\nCoverage decreased (-5.42%) when pulling **32245caeb34fe588745bcd6e907d214eb58c73d0 on vrushalic:check_raw_job_status_before_processing_in_mapper** into **748cd90d95640d3ff5ce9b41e29a71dff9dfd759 on twitter:twitter_only**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/67057637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/67079472", "body": "[![Coverage Status](https://coveralls.io/builds/1615694/badge)](https://coveralls.io/builds/1615694)\n\nCoverage decreased (-5.4%) when pulling **01b063c5f0cc6985d6b6bd41677725a926a79397 on vrushalic:check_raw_job_status_before_processing_in_mapper** into **748cd90d95640d3ff5ce9b41e29a71dff9dfd759 on twitter:twitter_only**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/67079472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/67696270", "body": "[![Coverage Status](https://coveralls.io/builds/1638617/badge)](https://coveralls.io/builds/1638617)\n\nCoverage remained the same when pulling **3b7dcdb0491dc15895d9227b9c71852fe6eb7e29 on new-travisci** into **a7dd90806db6da9e58b072bc6a6e9216d8966aac on master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/67696270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/68069933", "body": "[![Coverage Status](https://coveralls.io/builds/1657178/badge)](https://coveralls.io/builds/1657178)\n\nCoverage decreased (-0.03%) when pulling **9367423320c265db40acf7ca35f192a5369a1f5a on vrushalic:add_rectype_job_error** into **ff97b6999b639d869765bd84182d08f9e6a5cd02 on twitter:twitter_only**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/68069933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/69404813", "body": "[![Coverage Status](https://coveralls.io/builds/1719922/badge)](https://coveralls.io/builds/1719922)\n\nCoverage increased (+0.06%) when pulling **d68de932b96c5981fed75bd91dc6160c4af0e2fd on vrushalic:add_rec_job_error** into **ff97b6999b639d869765bd84182d08f9e6a5cd02 on twitter:twitter_only**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/69404813/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/69413941", "body": "[![Coverage Status](https://coveralls.io/builds/1720310/badge)](https://coveralls.io/builds/1720310)\n\nCoverage increased (+0.99%) when pulling **41874f83343f898306a3518810ae5c2c9b9316b9 on vrushalic:merge_master_twitter_only** into **ff97b6999b639d869765bd84182d08f9e6a5cd02 on twitter:twitter_only**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/69413941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/70393330", "body": "[![Coverage Status](https://coveralls.io/builds/1761478/badge)](https://coveralls.io/builds/1761478)\n\nCoverage increased (+0.05%) when pulling **8d7e1a574e822722e56479fb8ca7ce571315e153 on vrushalic:calculate_cost_hadoop2_mbmillis** into **533094dae846040d4552bcdb4997ea62c1b82bb3 on twitter:twitter_only**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/70393330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/70393344", "body": "[![Coverage Status](https://coveralls.io/builds/1761482/badge)](https://coveralls.io/builds/1761482)\n\nCoverage increased (+0.05%) when pulling **8d7e1a574e822722e56479fb8ca7ce571315e153 on vrushalic:calculate_cost_hadoop2_mbmillis** into **533094dae846040d4552bcdb4997ea62c1b82bb3 on twitter:twitter_only**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/70393344/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71953459", "body": "[![Coverage Status](https://coveralls.io/builds/1824748/badge)](https://coveralls.io/builds/1824748)\n\nCoverage decreased (-0.57%) to 44.65% when pulling **5771b47279afc98ddd9556980acf51be1863efb8 on sjlee:sjlee/merge-132-to-master** into **69704fe293d4e47cb2e8db8d895c9089ec4eb89b on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/71953459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/253928735", "body": "[![Coverage Status](https://coveralls.io/builds/8346757/badge)](https://coveralls.io/builds/8346757)\n\nChanges Unknown when pulling **9271cbf050ae09a3d8d2a734f577407d9ac535dc on mingmasplace:dogpiledays_hbase1** into *\\* on twitter:dogpiledays_hbase1**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/253928735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/253945648", "body": "[![Coverage Status](https://coveralls.io/builds/8348495/badge)](https://coveralls.io/builds/8348495)\n\nChanges Unknown when pulling **012b846ceadd2da828464ba879185c0a231d6fb2 on jrottinghuis:dogpiledays_hbase1** into *\\* on twitter:dogpiledays_hbase1**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/253945648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/253948035", "body": "[![Coverage Status](https://coveralls.io/builds/8348726/badge)](https://coveralls.io/builds/8348726)\n\nCoverage decreased (-0.1%) to 2.191% when pulling **e61706c72009c28571b595eabd7adda34767d466 on jrottinghuis:dogpiledays_hbase1** into **6f50812eead3d2d7831afff5f149e6c75d4468df on twitter:dogpiledays_hbase1**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/253948035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/253952275", "body": "[![Coverage Status](https://coveralls.io/builds/8349100/badge)](https://coveralls.io/builds/8349100)\n\nCoverage remained the same at 2.191% when pulling **fd9f910a33ed3e5631be0ef5aaa3e84b99603d75 on jrottinghuis:dogpiledays_hbase1** into **1ab9d721e4656b0a11ef97c7ab058bc719fb0656 on twitter:dogpiledays_hbase1**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/253952275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/253955287", "body": "[![Coverage Status](https://coveralls.io/builds/8349431/badge)](https://coveralls.io/builds/8349431)\n\nCoverage remained the same at 2.191% when pulling **5c01065a5b4cd0a7361e947be83014bc54ce47f9 on jrottinghuis:dogpiledays_hbase1** into **1ab9d721e4656b0a11ef97c7ab058bc719fb0656 on twitter:dogpiledays_hbase1**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/253955287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/254013166", "body": "[![Coverage Status](https://coveralls.io/builds/8354885/badge)](https://coveralls.io/builds/8354885)\n\nCoverage decreased (-0.0007%) to 2.19% when pulling **6733103fc1686ce3fafc747fc6813c2aeca9ee8e on gsteelman:piling_the_dogs_kv_cell** into **916310b53f9367c72fdff30ee618f714cb5b8ea0 on twitter:dogpiledays_hbase1**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/254013166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/256227140", "body": "[![Coverage Status](https://coveralls.io/builds/8511233/badge)](https://coveralls.io/builds/8511233)\n\nCoverage decreased (-0.04%) to 2.15% when pulling **93ff064eeb41e75c14661afee38985fb1d612954 on jrottinghuis:dogpiledays_hbase1** into **4f5c2299016e19b858079483256471f34825d5e3 on twitter:dogpiledays_hbase1**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/256227140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/288579133", "body": "\n[![Coverage Status](https://coveralls.io/builds/10729345/badge)](https://coveralls.io/builds/10729345)\n\nCoverage decreased (-42.8%) to 2.15% when pulling **940907cf3a1a37d265fb534dde3b0ac635b9f098 on dogpiledays_hbase1** into **ec681f8be2fe415d827d35a41009bd300ee47f94 on master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/288579133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/292029430", "body": "\n[![Coverage Status](https://coveralls.io/builds/10953962/badge)](https://coveralls.io/builds/10953962)\n\nCoverage decreased (-0.02%) to 2.127% when pulling **75b812339718d5e68d191cf2350bfe0a37fa57a5 on piyushnarang:task_counter_filters** into **e17ec79dbba0480d3b245f1c7f0fe02ae45820f7 on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/292029430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/292310895", "body": "\n[![Coverage Status](https://coveralls.io/builds/10970163/badge)](https://coveralls.io/builds/10970163)\n\nCoverage decreased (-0.003%) to 2.148% when pulling **bf21fae9746a0d101c017927bad59e9b521f79cb on piyushnarang:client-gzip** into **e17ec79dbba0480d3b245f1c7f0fe02ae45820f7 on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/292310895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/293084240", "body": "\n[![Coverage Status](https://coveralls.io/builds/11025162/badge)](https://coveralls.io/builds/11025162)\n\nCoverage decreased (-0.03%) to 2.124% when pulling **111167f18d2087a8f030379b8e3dc369664942a0 on piyushnarang:client-gzip** into **e17ec79dbba0480d3b245f1c7f0fe02ae45820f7 on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/293084240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/313545469", "body": "\n[![Coverage Status](https://coveralls.io/builds/12286746/badge)](https://coveralls.io/builds/12286746)\n\nChanges Unknown when pulling **c61806640b1dd08c8cccc681b2aec52d9ee2cb85 on pgaref:build_fix** into ** on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/313545469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/315042144", "body": "\n[![Coverage Status](https://coveralls.io/builds/12375474/badge)](https://coveralls.io/builds/12375474)\n\nCoverage remained the same at 2.123% when pulling **11d84a147d97b71a5211a65cf7ef9021e871181f on talglobus:patch-1** into **7b427295ca71409af8dc6e9094cc569ba72e9f25 on twitter:master**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/315042144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/316918597", "body": "\n[![Coverage Status](https://coveralls.io/builds/12489496/badge)](https://coveralls.io/builds/12489496)\n\nCoverage decreased (-50.5%) to 2.104% when pulling **c31bc84b329f42cdb8545112c0411caa71e91b55 on vrushalivc:updated_hbase_spark** into **9059237a7ff1242f4af0ad049953aae2cb4e1499 on twitter:twitter_only**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/316918597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/322303604", "body": "\n[![Coverage Status](https://coveralls.io/builds/12830508/badge)](https://coveralls.io/builds/12830508)\n\nCoverage decreased (-0.02%) to 2.086% when pulling **e9a83514c2ec969df30523094d484050d774cc0c on vrushalivc:hdfs_stats_timeseries_improvement** into **b22679ae5c6779316270c6bd53dd616041fa5cad on twitter:twitter_only**.\n", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/322303604/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "piyushnarang": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/hraven/issues/comments/292029621", "body": "cc @vrushalivc / @dieu", "reactions": {"url": "https://api.github.com/repos/twitter/hraven/issues/comments/292029621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}}}}